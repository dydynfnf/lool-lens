<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADcAAAA3CAYAAACo29JGAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAA21JREFUaEPtWcFx
        AjEMTAkpgRIogRJSAiVQQr68KIESKCElUAIlUALRBhl85s7IWp1DZpIZT5jJnaSVViuZvL39/7RnYLvd
        ruRs5HzK+Zo4O/07nn1v99LpDQQnZy3nIOfiPEdNyKJT2HU3EsxCzt4JppYEVHv1KyBnBFUC7gtSqXOe
        oVq1SoLu8/Wl9hUy6e0p9j0kNJ6qYnQpp3e1ppKxDuvFFwOWAH/SAF8UWAK4cQN8cWAJYDtFVTwwVFkR
        6PH+sqmCAgqrUY/AInyczGMCcvuHgKXk7EzVE2DIRERGe9uo01OX395BRfn7qlZvhqpho8HVB1RPB7eH
        DxWtdDWKYsv4BhNUNQQJMULwTSqm4NktaD9aPTHO7o0nU1NXHpIYcIVCYhiqDhdsNcoYxLtNlaolQmwx
        M3Y42ElKgkrtm0K9gvh6wpvsw8C0GNoTxmwzpoGzZDznEpxXrezbgRGcqqg3nlTte4sQVRtXJyOQscck
        FoaSCdzHj20IgRPcHHSEWrLjAACv9z2dL57mnaNqUXstDW6oSgQV06sEi8riXGMjKgf60IO7zImzRUpw
        1z2TAJcMLgKKdjPxauAOqnDvESDJ7SQlnO65kgqrIHD4v4NH4PJ3buAijKF6YfQMALfJec7OlpCqqQZg
        1rGVu8cjxtjrTv0W3MDXgCvPZeAuaOUJqV5ALMcSnHcFy+lDDXX0rBz0LkvJx7UQAznAMGy4hCVg3j7e
        CLLVJ2Ibh4N1Q4vlohbhf0jJDFyESgGca6EOGt7TiUVgAdQc3oQNZdR+Y3utvucGObnfpwzAdLZFCMnz
        dgiQ4unGngArPtklYrzXSn/iCOtYhHKaR0NAKyyNJKG+esj7xvw1BJnM65Lc8gNJd2YUq1zTtqK97lkB
        zex4wN6onhCFJlAjLYHvUKwgj2ihloJZAMI5DoZuOq6tZCow3VZqIHlg2YDfZRSFUy5jxnSruJXVjAOW
        AUQPJsnG7+dzxQjiSQUBJgmVa/sxhSFOcHvIneEz1WdjjlVg8m2pSzJ/YtFeywcv5uKGpau8j//NldsK
        QHZpg1uitR8gKOV2kcQGvVINSoUDSQGg0g6tviY61h5SkOjHnK75MMdnVDapbE0F8RzEK1R9aZBKV1yb
        ABRUqoFI4AEGFUL1liFB9Dai9ANN05m9h74BvVP4kOvYAdAAAAAASUVORK5CYII=
</value>
  </data>
</root>
<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAA6NJREFUaEPtmr+L
        VDEQx+9PuD/lGvvzDxCu1VosLWzs5Gy11tIFKxs9uMJChbNQxEIELUQsVhALUTyw8MpnPkfi5mVnksxL
        1tsFD8LBe8lkvvPjO/OS3dr6/ze2wKWH53bd2HfjyI25G4MyeMcc5u6uhR2dIjtuzNw4ziiuAQrPWYuM
        nX8Oylsfq5aUtL5H5uq95DbZduNgBQBSwOyxvRIPOcF7jSFk9Q4ht9cVjE9MqyK95u93AeMTsZdSU+XM
        msCsCYgAfhqYMw4nzXO2MPOJXR0G159eHG4+vzIaVx9fqF5vZME6AvAUWyxwd17fGF5+fjL8+PV9+H1y
        Ig7ePfv06BSgUdncfHQrU3OpTtx+cW348nOuKq+BYk1HQAfZ5PcVW7UG1tUUrX1++OF+L+/oHYBv5sSN
        Pn573wwigH379dVw+fB8K6Aj0Su+ARSF9/BE6jFkdsib5UZTqxnEtRQ2JDuKYFksnM4hJwJzwWqSDPKt
        EcxybdH6KC2kYgUevLu7pCjP4jka2EYgx6Pw0pJcsyTW5V1QAhpOLY4BQh7wX6PpDky2SHqtit97cyub
        4Fg5RwIoz5wYBCEHcDzG6ABkUe01tpJCppZmpeTGMCS5VIcwCNQce7oy7Bbs5RbMpUU9gKAgxGAponjR
        0OLM/+aJhrwVCNafSt2EY2DGkmeKQKDHqaGEJyQSsMqrAVMEkmObkkIaUZSaTEluKW+KQHApCVhSWkps
        KScAh0ziPwUUlJUon5zJhVcVELxiSVRAabkVU21K23HNsXqlCgiWwEq5kEg31oCgPO8kAgi1ReoAkB+8
        KXkmBiLSb7yoFgyKaMpYQzSen7Y8kW4j+uWEr9jAAaYUZmcAZFQQOVAuAmFOKcR431p/JM9lQmvUonCS
        XgQS1xU8g3CUTnuuUo82JcQylX78pai18THA0CfVFKlSCFrAZD7Cxm08Wa99WMVALJ1qS1cQgyRUM5/F
        4ocVdx3F8LLMmdpnBSCAKFR1+U5Fa+ctyqdzp3QGAKkAIR8++PCqSnorsClnYbkC6PfPXwi5SQdWRWvn
        A0j7sIL5eBfonUqfkZs/oPNe4VaqeGRaq7x1Hokd6pCytu7I1IPhdqpr4lvlUTcUtqo7xA4NmNu4utpb
        lWyYb7tWiMDMGjbt7dFpFz1rBqYNxJqE2bRw0u4dXIht/vV05JnN/8FA7CnnHTqAqo8xI1kgM1+xtZBp
        ee423ewf1UjgvZc282dOLd7svfYPxIQlrihnXnkAAAAASUVORK5CYII=
</value>
  </data>
</root>
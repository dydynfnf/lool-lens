; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\checkbox_setnumstates.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\checkbox_setnumstates.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\checkbox_setnumstates.crf GUI\Widget\CHECKBOX_SetNumStates.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  CHECKBOX_SetNumStates PROC
;;;77     */
;;;78     void CHECKBOX_SetNumStates(CHECKBOX_Handle hObj, unsigned NumStates) {
000000  b570              PUSH     {r4-r6,lr}
000002  4606              MOV      r6,r0
000004  460d              MOV      r5,r1
;;;79       CHECKBOX_Obj * pObj;
;;;80       if (!CHECKBOX__DefaultProps.apBm[2]) {
000006  4810              LDR      r0,|L1.72|
000008  6a00              LDR      r0,[r0,#0x20]
00000a  b918              CBNZ     r0,|L1.20|
;;;81         CHECKBOX_SetDefaultImage(&_abmCheck[0], 2);
00000c  2102              MOVS     r1,#2
00000e  480f              LDR      r0,|L1.76|
000010  f7fffffe          BL       CHECKBOX_SetDefaultImage
                  |L1.20|
;;;82       }
;;;83       if (!CHECKBOX__DefaultProps.apBm[3]) {
000014  480c              LDR      r0,|L1.72|
000016  6a40              LDR      r0,[r0,#0x24]
000018  b920              CBNZ     r0,|L1.36|
;;;84         CHECKBOX_SetDefaultImage(&_abmCheck[1], 3);
00001a  2103              MOVS     r1,#3
00001c  480b              LDR      r0,|L1.76|
00001e  3014              ADDS     r0,r0,#0x14
000020  f7fffffe          BL       CHECKBOX_SetDefaultImage
                  |L1.36|
;;;85       }
;;;86       if (hObj && ((NumStates == 2) || (NumStates == 3))) {
000024  b176              CBZ      r6,|L1.68|
000026  2d02              CMP      r5,#2
000028  d001              BEQ      |L1.46|
00002a  2d03              CMP      r5,#3
00002c  d10a              BNE      |L1.68|
                  |L1.46|
;;;87         WM_LOCK();
;;;88         pObj = CHECKBOX_H2P(hObj);
00002e  4630              MOV      r0,r6
000030  f7fffffe          BL       GUI_ALLOC_h2p
000034  4604              MOV      r4,r0
;;;89         pObj->Props.apBm[2] = CHECKBOX__DefaultProps.apBm[2];
000036  4804              LDR      r0,|L1.72|
000038  6a01              LDR      r1,[r0,#0x20]
00003a  64a1              STR      r1,[r4,#0x48]
;;;90         pObj->Props.apBm[3] = CHECKBOX__DefaultProps.apBm[3];
00003c  6a41              LDR      r1,[r0,#0x24]
00003e  64e1              STR      r1,[r4,#0x4c]
;;;91         pObj->NumStates = NumStates;
000040  f8845050          STRB     r5,[r4,#0x50]
                  |L1.68|
;;;92         WM_UNLOCK();
;;;93       }
;;;94     }
000044  bd70              POP      {r4-r6,pc}
;;;95     
                          ENDP

000046  0000              DCW      0x0000
                  |L1.72|
                          DCD      CHECKBOX__DefaultProps
                  |L1.76|
                          DCD      _abmCheck

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  _aColorDisabled
                          DCD      0x00101010
                          DCD      0x00808080
                  _aColorEnabled
                          DCD      0x00000000
                          DCD      0x00ffffff
                  _PalCheckDisabled
                          DCD      0x00000002
000014  00000000          DCB      0x00,0x00,0x00,0x00
                          DCD      _aColorDisabled
                  _PalCheckEnabled
                          DCD      0x00000002
000020  00000000          DCB      0x00,0x00,0x00,0x00
                          DCD      _aColorEnabled
                  _acCheck
000028  ffe0ffe0          DCB      0xff,0xe0,0xff,0xe0
00002c  ff60fee0          DCB      0xff,0x60,0xfe,0xe0
000030  dd60eae0          DCB      0xdd,0x60,0xea,0xe0
000034  d5e0ebe0          DCB      0xd5,0xe0,0xeb,0xe0
000038  f7e0ffe0          DCB      0xf7,0xe0,0xff,0xe0
00003c  ffe00000          DCB      0xff,0xe0,0x00,0x00
                  _abmCheck
000040  000b000b          DCW      0x000b,0x000b
000044  00020001          DCW      0x0002,0x0001
                          DCD      _acCheck
                          DCD      _PalCheckDisabled
                          DCD      0x00000000
000054  000b000b          DCW      0x000b,0x000b
000058  00020001          DCW      0x0002,0x0001
                          DCD      _acCheck
                          DCD      _PalCheckEnabled
                          DCD      0x00000000

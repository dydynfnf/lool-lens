; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\multiedit.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\multiedit.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\multiedit.crf GUI\Widget\MULTIEDIT.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _InvalidateNumChars PROC
;;;162    */
;;;163    static void _InvalidateNumChars(MULTIEDIT_OBJ * pObj) {
000000  f8901075          LDRB     r1,[r0,#0x75]
;;;164      pObj->InvalidFlags |= INVALID_NUMCHARS;
000004  f0410101          ORR      r1,r1,#1
000008  f8801075          STRB     r1,[r0,#0x75]
;;;165    }
00000c  4770              BX       lr
;;;166    
                          ENDP

                  _GetNumChars PROC
;;;172    */
;;;173    static int _GetNumChars(MULTIEDIT_OBJ * pObj) {
00000e  b570              PUSH     {r4-r6,lr}
000010  4604              MOV      r4,r0
;;;174      if (pObj->InvalidFlags & INVALID_NUMCHARS) {
000012  f8940075          LDRB     r0,[r4,#0x75]
000016  f0100f01          TST      r0,#1
00001a  d00f              BEQ      |L1.60|
;;;175        char * pText;
;;;176        pText = (char*) GUI_ALLOC_h2p(pObj->hText);
00001c  f9b40038          LDRSH    r0,[r4,#0x38]
000020  f7fffffe          BL       GUI_ALLOC_h2p
000024  4605              MOV      r5,r0
;;;177        pObj->NumChars = GUI__GetNumChars(pText);
000026  4628              MOV      r0,r5
000028  f7fffffe          BL       GUI__GetNumChars
00002c  87a0              STRH     r0,[r4,#0x3c]
;;;178        pObj->InvalidFlags &= ~INVALID_NUMCHARS;
00002e  f8940075          LDRB     r0,[r4,#0x75]
000032  f0200001          BIC      r0,r0,#1
000036  f8840075          STRB     r0,[r4,#0x75]
;;;179      }
00003a  bf00              NOP      
                  |L1.60|
;;;180      return pObj->NumChars;
00003c  8fa0              LDRH     r0,[r4,#0x3c]
;;;181    }
00003e  bd70              POP      {r4-r6,pc}
;;;182    
                          ENDP

                  _GetXSize PROC
;;;188    */
;;;189    static int _GetXSize(MULTIEDIT_HANDLE hObj, const MULTIEDIT_OBJ* pObj) {
000040  b57c              PUSH     {r2-r6,lr}
000042  4605              MOV      r5,r0
000044  460c              MOV      r4,r1
;;;190      GUI_RECT Rect;
;;;191      WM_GetInsideRectExScrollbar(hObj, &Rect);
000046  4669              MOV      r1,sp
000048  4628              MOV      r0,r5
00004a  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;192      return Rect.x1 - Rect.x0 - (pObj->HBorder * 2) - 1;
00004e  f9bd0004          LDRSH    r0,[sp,#4]
000052  f9bd1000          LDRSH    r1,[sp,#0]
000056  1a41              SUBS     r1,r0,r1
000058  f8940077          LDRB     r0,[r4,#0x77]
00005c  eba10040          SUB      r0,r1,r0,LSL #1
000060  1e40              SUBS     r0,r0,#1
;;;193    }
000062  bd7c              POP      {r2-r6,pc}
;;;194    
                          ENDP

                  _GetNumCharsInPrompt PROC
;;;198    */
;;;199    static int _GetNumCharsInPrompt(const MULTIEDIT_OBJ* pObj, const char GUI_UNI_PTR * pText) {
000064  e92d41f0          PUSH     {r4-r8,lr}
000068  4605              MOV      r5,r0
00006a  460c              MOV      r4,r1
;;;200      char *pString, *pEndPrompt;
;;;201      int r = 0;
00006c  f04f0800          MOV      r8,#0
;;;202      pString = (char*) GUI_ALLOC_h2p(pObj->hText);
000070  f9b50038          LDRSH    r0,[r5,#0x38]
000074  f7fffffe          BL       GUI_ALLOC_h2p
000078  4606              MOV      r6,r0
;;;203      pEndPrompt = pString + GUI_UC__NumChars2NumBytes(pString, pObj->NumCharsPrompt);
00007a  8fe9              LDRH     r1,[r5,#0x3e]
00007c  4630              MOV      r0,r6
00007e  f7fffffe          BL       GUI_UC__NumChars2NumBytes
000082  eb000706          ADD      r7,r0,r6
;;;204      if (pText < pEndPrompt) {
000086  42bc              CMP      r4,r7
000088  d204              BCS      |L1.148|
;;;205        r = GUI_UC__NumBytes2NumChars(pText, pEndPrompt - pText);
00008a  1b39              SUBS     r1,r7,r4
00008c  4620              MOV      r0,r4
00008e  f7fffffe          BL       GUI_UC__NumBytes2NumChars
000092  4680              MOV      r8,r0
                  |L1.148|
;;;206      }
;;;207      return r;
000094  4640              MOV      r0,r8
;;;208    }
000096  e8bd81f0          POP      {r4-r8,pc}
;;;209    
                          ENDP

                  _NumChars2XSize PROC
;;;213    */
;;;214    static int _NumChars2XSize(const char GUI_UNI_PTR * pText, int NumChars) {
00009a  b573              PUSH     {r0,r1,r4-r6,lr}
00009c  460c              MOV      r4,r1
;;;215      int xSize = 0;
00009e  f04f0500          MOV      r5,#0
;;;216      U16 Char;
;;;217      while (NumChars--) {
0000a2  e007              B        |L1.180|
                  |L1.164|
;;;218        Char   = GUI_UC__GetCharCodeInc(&pText);
0000a4  4668              MOV      r0,sp
0000a6  f7fffffe          BL       GUI_UC__GetCharCodeInc
0000aa  4606              MOV      r6,r0
;;;219        xSize += GUI_GetCharDistX(Char);
0000ac  4630              MOV      r0,r6
0000ae  f7fffffe          BL       GUI_GetCharDistX
0000b2  4405              ADD      r5,r5,r0
                  |L1.180|
0000b4  0020              MOVS     r0,r4                 ;217
0000b6  f1a40401          SUB      r4,r4,#1              ;217
0000ba  d1f3              BNE      |L1.164|
;;;220      }
;;;221      return xSize;
0000bc  4628              MOV      r0,r5
;;;222    }
0000be  bd7c              POP      {r2-r6,pc}
;;;223    
                          ENDP

                  _WrapGetNumCharsDisp PROC
;;;227    */
;;;228    static int _WrapGetNumCharsDisp(MULTIEDIT_HANDLE hObj, const MULTIEDIT_OBJ* pObj, const char GUI_UNI_PTR * pText) {
0000c0  e92d43f7          PUSH     {r0-r2,r4-r9,lr}
0000c4  4681              MOV      r9,r0
0000c6  460c              MOV      r4,r1
;;;229      int xSize, r;
;;;230      xSize = _GetXSize(hObj, pObj);
0000c8  4621              MOV      r1,r4
0000ca  4648              MOV      r0,r9
0000cc  f7fffffe          BL       _GetXSize
0000d0  4680              MOV      r8,r0
;;;231      if (pObj->Flags & MULTIEDIT_SF_PASSWORD) {
0000d2  f8940074          LDRB     r0,[r4,#0x74]
0000d6  f0100f20          TST      r0,#0x20
0000da  d037              BEQ      |L1.332|
;;;232        int NumCharsPrompt;
;;;233        NumCharsPrompt = _GetNumCharsInPrompt(pObj, pText);
0000dc  4620              MOV      r0,r4
0000de  9902              LDR      r1,[sp,#8]
0000e0  f7fffffe          BL       _GetNumCharsInPrompt
0000e4  4606              MOV      r6,r0
;;;234        r = GUI__WrapGetNumCharsDisp(pText, xSize, pObj->WrapMode);
0000e6  f8942078          LDRB     r2,[r4,#0x78]
0000ea  4641              MOV      r1,r8
0000ec  9802              LDR      r0,[sp,#8]
0000ee  f7fffffe          BL       GUI__WrapGetNumCharsDisp
0000f2  4605              MOV      r5,r0
;;;235        if (r >= NumCharsPrompt) {
0000f4  42b5              CMP      r5,r6
0000f6  db28              BLT      |L1.330|
;;;236          int x;
;;;237          switch (pObj->WrapMode) {
0000f8  f8940078          LDRB     r0,[r4,#0x78]
0000fc  b920              CBNZ     r0,|L1.264|
;;;238          case GUI_WRAPMODE_NONE:
;;;239            r = GUI__GetNumChars(pText);
0000fe  9802              LDR      r0,[sp,#8]
000100  f7fffffe          BL       GUI__GetNumChars
000104  4605              MOV      r5,r0
;;;240            break;
000106  e01e              B        |L1.326|
                  |L1.264|
;;;241          default:
;;;242            r = NumCharsPrompt;
000108  4635              MOV      r5,r6
;;;243            x = _NumChars2XSize(pText, NumCharsPrompt);
00010a  4631              MOV      r1,r6
00010c  9802              LDR      r0,[sp,#8]
00010e  f7fffffe          BL       _NumChars2XSize
000112  4607              MOV      r7,r0
;;;244            pText += GUI_UC__NumChars2NumBytes(pText, NumCharsPrompt);
000114  4631              MOV      r1,r6
000116  9802              LDR      r0,[sp,#8]
000118  f7fffffe          BL       GUI_UC__NumChars2NumBytes
00011c  9902              LDR      r1,[sp,#8]
00011e  4408              ADD      r0,r0,r1
000120  9002              STR      r0,[sp,#8]
;;;245            while (GUI_UC__GetCharCodeInc(&pText) != 0) {
000122  e009              B        |L1.312|
                  |L1.292|
;;;246              x += GUI_GetCharDistX(MULTIEDIT_PASSWORD_CHAR);
000124  202a              MOVS     r0,#0x2a
000126  f7fffffe          BL       GUI_GetCharDistX
00012a  4407              ADD      r7,r7,r0
;;;247              if (r && (x > xSize)) {
00012c  b115              CBZ      r5,|L1.308|
00012e  4547              CMP      r7,r8
000130  dd00              BLE      |L1.308|
;;;248                break;
000132  e006              B        |L1.322|
                  |L1.308|
;;;249              }
;;;250              r++;
000134  f1050501          ADD      r5,r5,#1
                  |L1.312|
000138  a802              ADD      r0,sp,#8              ;245
00013a  f7fffffe          BL       GUI_UC__GetCharCodeInc
00013e  2800              CMP      r0,#0                 ;245
000140  d1f0              BNE      |L1.292|
                  |L1.322|
000142  bf00              NOP                            ;248
;;;251            }
;;;252            break;
000144  bf00              NOP      
                  |L1.326|
000146  bf00              NOP                            ;240
;;;253          }
;;;254        }
000148  bf00              NOP      
                  |L1.330|
;;;255      } else {
00014a  e006              B        |L1.346|
                  |L1.332|
;;;256        r = GUI__WrapGetNumCharsDisp(pText, xSize, pObj->WrapMode);
00014c  f8942078          LDRB     r2,[r4,#0x78]
000150  4641              MOV      r1,r8
000152  9802              LDR      r0,[sp,#8]
000154  f7fffffe          BL       GUI__WrapGetNumCharsDisp
000158  4605              MOV      r5,r0
                  |L1.346|
;;;257      }
;;;258      return r;
00015a  4628              MOV      r0,r5
;;;259    }
00015c  e8bd83fe          POP      {r1-r9,pc}
;;;260    
                          ENDP

                  _WrapGetNumBytesToNextLine PROC
;;;264    */
;;;265    static int _WrapGetNumBytesToNextLine(MULTIEDIT_HANDLE hObj, const MULTIEDIT_OBJ* pObj, const char* pText) {
000160  e92d47f0          PUSH     {r4-r10,lr}
000164  4680              MOV      r8,r0
000166  460d              MOV      r5,r1
000168  4616              MOV      r6,r2
;;;266      int xSize, r;
;;;267      xSize = _GetXSize(hObj, pObj);
00016a  4629              MOV      r1,r5
00016c  4640              MOV      r0,r8
00016e  f7fffffe          BL       _GetXSize
000172  4681              MOV      r9,r0
;;;268      if (pObj->Flags & MULTIEDIT_SF_PASSWORD) {
000174  f8950074          LDRB     r0,[r5,#0x74]
000178  f0100f20          TST      r0,#0x20
00017c  d017              BEQ      |L1.430|
;;;269        int NumChars, NumCharsPrompt;
;;;270        NumCharsPrompt = _GetNumCharsInPrompt(pObj, pText);
00017e  4631              MOV      r1,r6
000180  4628              MOV      r0,r5
000182  f7fffffe          BL       _GetNumCharsInPrompt
000186  4682              MOV      r10,r0
;;;271        NumChars = _WrapGetNumCharsDisp(hObj, pObj, pText);
000188  4632              MOV      r2,r6
00018a  4629              MOV      r1,r5
00018c  4640              MOV      r0,r8
00018e  f7fffffe          BL       _WrapGetNumCharsDisp
000192  4607              MOV      r7,r0
;;;272        r        = GUI_UC__NumChars2NumBytes(pText, NumChars);
000194  4639              MOV      r1,r7
000196  4630              MOV      r0,r6
000198  f7fffffe          BL       GUI_UC__NumChars2NumBytes
00019c  4604              MOV      r4,r0
;;;273        if (NumChars < NumCharsPrompt) {
00019e  4557              CMP      r7,r10
0001a0  da04              BGE      |L1.428|
;;;274          if (*(pText + r) == '\n') {
0001a2  5d30              LDRB     r0,[r6,r4]
0001a4  280a              CMP      r0,#0xa
0001a6  d101              BNE      |L1.428|
;;;275            r++;
0001a8  f1040401          ADD      r4,r4,#1
                  |L1.428|
;;;276          }
;;;277        }
;;;278      } else {
0001ac  e006              B        |L1.444|
                  |L1.430|
;;;279        r = GUI__WrapGetNumBytesToNextLine(pText, xSize, pObj->WrapMode);
0001ae  f8952078          LDRB     r2,[r5,#0x78]
0001b2  4649              MOV      r1,r9
0001b4  4630              MOV      r0,r6
0001b6  f7fffffe          BL       GUI__WrapGetNumBytesToNextLine
0001ba  4604              MOV      r4,r0
                  |L1.444|
;;;280      }
;;;281      return r;
0001bc  4620              MOV      r0,r4
;;;282    }
0001be  e8bd87f0          POP      {r4-r10,pc}
;;;283    
                          ENDP

                  _GetCharDistX PROC
;;;287    */
;;;288    static int _GetCharDistX(const MULTIEDIT_OBJ* pObj, const char* pText) {
0001c2  e92d41f0          PUSH     {r4-r8,lr}
0001c6  4604              MOV      r4,r0
0001c8  460d              MOV      r5,r1
;;;289      int r;
;;;290      if ((pObj->Flags & MULTIEDIT_SF_PASSWORD) && (_GetNumCharsInPrompt(pObj, pText) == 0)) {
0001ca  f8940074          LDRB     r0,[r4,#0x74]
0001ce  f0100f20          TST      r0,#0x20
0001d2  d009              BEQ      |L1.488|
0001d4  4629              MOV      r1,r5
0001d6  4620              MOV      r0,r4
0001d8  f7fffffe          BL       _GetNumCharsInPrompt
0001dc  b920              CBNZ     r0,|L1.488|
;;;291        r = GUI_GetCharDistX(MULTIEDIT_PASSWORD_CHAR);
0001de  202a              MOVS     r0,#0x2a
0001e0  f7fffffe          BL       GUI_GetCharDistX
0001e4  4606              MOV      r6,r0
0001e6  e008              B        |L1.506|
                  |L1.488|
;;;292      } else {
;;;293        U16 c;
;;;294        c = GUI_UC_GetCharCode(pText);
0001e8  4628              MOV      r0,r5
0001ea  f7fffffe          BL       GUI_UC_GetCharCode
0001ee  4607              MOV      r7,r0
;;;295        r = GUI_GetCharDistX(c);
0001f0  4638              MOV      r0,r7
0001f2  f7fffffe          BL       GUI_GetCharDistX
0001f6  4606              MOV      r6,r0
;;;296      }
0001f8  bf00              NOP      
                  |L1.506|
;;;297      return r;
0001fa  4630              MOV      r0,r6
;;;298    }
0001fc  e8bd81f0          POP      {r4-r8,pc}
;;;299    
                          ENDP

                  _DispString PROC
;;;303    */
;;;304    static void _DispString(MULTIEDIT_HANDLE hObj, const MULTIEDIT_OBJ* pObj, const char* pText, GUI_RECT* pRect) {
000200  e92d5ff0          PUSH     {r4-r12,lr}
000204  4683              MOV      r11,r0
000206  460f              MOV      r7,r1
000208  4690              MOV      r8,r2
00020a  461c              MOV      r4,r3
;;;305      int NumCharsDisp;
;;;306      NumCharsDisp = _WrapGetNumCharsDisp(hObj, pObj, pText);
00020c  4642              MOV      r2,r8
00020e  4639              MOV      r1,r7
000210  4658              MOV      r0,r11
000212  f7fffffe          BL       _WrapGetNumCharsDisp
000216  4605              MOV      r5,r0
;;;307      if (pObj->Flags & MULTIEDIT_SF_PASSWORD) {
000218  f8970074          LDRB     r0,[r7,#0x74]
00021c  f0100f20          TST      r0,#0x20
000220  d02a              BEQ      |L1.632|
;;;308        int x, NumCharsPrompt, NumCharsLeft = 0;
000222  f04f0a00          MOV      r10,#0
;;;309        NumCharsPrompt = _GetNumCharsInPrompt(pObj, pText);
000226  4641              MOV      r1,r8
000228  4638              MOV      r0,r7
00022a  f7fffffe          BL       _GetNumCharsInPrompt
00022e  4606              MOV      r6,r0
;;;310        if (NumCharsDisp < NumCharsPrompt) {
000230  42b5              CMP      r5,r6
000232  da01              BGE      |L1.568|
;;;311          NumCharsPrompt = NumCharsDisp;
000234  462e              MOV      r6,r5
000236  e001              B        |L1.572|
                  |L1.568|
;;;312        } else {
;;;313          NumCharsLeft = NumCharsDisp - NumCharsPrompt;
000238  eba50a06          SUB      r10,r5,r6
                  |L1.572|
;;;314        }
;;;315        GUI_DispStringInRectMax(pText, pRect, GUI_TA_LEFT, NumCharsPrompt);
00023c  4633              MOV      r3,r6
00023e  2200              MOVS     r2,#0
000240  4621              MOV      r1,r4
000242  4640              MOV      r0,r8
000244  f7fffffe          BL       GUI_DispStringInRectMax
;;;316        x = pRect->x0 + _NumChars2XSize(pText, NumCharsPrompt);
000248  4631              MOV      r1,r6
00024a  4640              MOV      r0,r8
00024c  f7fffffe          BL       _NumChars2XSize
000250  f9b41000          LDRSH    r1,[r4,#0]
000254  eb000901          ADD      r9,r0,r1
;;;317        if (NumCharsLeft) {
000258  f1ba0f00          CMP      r10,#0
00025c  d00b              BEQ      |L1.630|
;;;318          GUI_DispCharAt(MULTIEDIT_PASSWORD_CHAR, x, pRect->y0);
00025e  f9b42002          LDRSH    r2,[r4,#2]
000262  fa0ff189          SXTH     r1,r9
000266  202a              MOVS     r0,#0x2a
000268  f7fffffe          BL       GUI_DispCharAt
;;;319          GUI_DispChars(MULTIEDIT_PASSWORD_CHAR, NumCharsLeft - 1);
00026c  f1aa0101          SUB      r1,r10,#1
000270  202a              MOVS     r0,#0x2a
000272  f7fffffe          BL       GUI_DispChars
                  |L1.630|
;;;320        }
;;;321      } else {
000276  e005              B        |L1.644|
                  |L1.632|
;;;322        GUI_DispStringInRectMax(pText, pRect, GUI_TA_LEFT, NumCharsDisp);
000278  462b              MOV      r3,r5
00027a  2200              MOVS     r2,#0
00027c  4621              MOV      r1,r4
00027e  4640              MOV      r0,r8
000280  f7fffffe          BL       GUI_DispStringInRectMax
                  |L1.644|
;;;323      }  
;;;324    }
000284  e8bd9ff0          POP      {r4-r12,pc}
;;;325    
                          ENDP

                  _GetpLine PROC
;;;338    */
;;;339    static char * _GetpLine(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj, unsigned LineNumber) {
000288  e92d41f0          PUSH     {r4-r8,lr}
00028c  4680              MOV      r8,r0
00028e  460c              MOV      r4,r1
000290  4615              MOV      r5,r2
;;;340      char * pText, * pLine;
;;;341      pText = (char*) GUI_ALLOC_h2p(pObj->hText);
000292  f9b40038          LDRSH    r0,[r4,#0x38]
000296  f7fffffe          BL       GUI_ALLOC_h2p
00029a  4607              MOV      r7,r0
;;;342      if ((unsigned)pObj->CacheLineNumber != LineNumber) {
00029c  f8b40052          LDRH     r0,[r4,#0x52]
0002a0  42a8              CMP      r0,r5
0002a2  d021              BEQ      |L1.744|
;;;343        if (LineNumber > (unsigned)pObj->CacheLineNumber) {
0002a4  f8b40052          LDRH     r0,[r4,#0x52]
0002a8  42a8              CMP      r0,r5
0002aa  d20b              BCS      |L1.708|
;;;344          /* If new line number > cache we can start with old pointer */
;;;345          int OldNumber = pObj->CacheLineNumber;
0002ac  f1040450          ADD      r4,r4,#0x50
0002b0  8860              LDRH     r0,[r4,#2]
;;;346          pLine = pText + pObj->CacheLinePosByte;
0002b2  8821              LDRH     r1,[r4,#0]
0002b4  eb010607          ADD      r6,r1,r7
;;;347          pObj->CacheLineNumber  = LineNumber;
0002b8  8065              STRH     r5,[r4,#2]
0002ba  f1a40450          SUB      r4,r4,#0x50
;;;348          LineNumber -= OldNumber;
0002be  eba50500          SUB      r5,r5,r0
;;;349        } else {
0002c2  e002              B        |L1.714|
                  |L1.708|
;;;350          /* If new line number < cache we need to start with first byte */
;;;351          pLine = pText;
0002c4  463e              MOV      r6,r7
;;;352          pObj->CacheLineNumber  = LineNumber;
0002c6  f8a45052          STRH     r5,[r4,#0x52]
                  |L1.714|
;;;353        }
;;;354        while (LineNumber--) {
0002ca  e005              B        |L1.728|
                  |L1.716|
;;;355          pLine += _WrapGetNumBytesToNextLine(hObj, pObj, pLine);
0002cc  4632              MOV      r2,r6
0002ce  4621              MOV      r1,r4
0002d0  4640              MOV      r0,r8
0002d2  f7fffffe          BL       _WrapGetNumBytesToNextLine
0002d6  4406              ADD      r6,r6,r0
                  |L1.728|
0002d8  0028              MOVS     r0,r5                 ;354
0002da  f1a50501          SUB      r5,r5,#1              ;354
0002de  d1f5              BNE      |L1.716|
;;;356        }
;;;357        pObj->CacheLinePosByte = pLine - pText;
0002e0  eba60007          SUB      r0,r6,r7
0002e4  f8a40050          STRH     r0,[r4,#0x50]
                  |L1.744|
;;;358      }
;;;359      return pText + pObj->CacheLinePosByte;
0002e8  f8b40050          LDRH     r0,[r4,#0x50]
0002ec  4438              ADD      r0,r0,r7
;;;360    }
0002ee  e8bd81f0          POP      {r4-r8,pc}
;;;361    
                          ENDP

                  _ClearCache PROC
;;;368    */
;;;369    static void _ClearCache(MULTIEDIT_OBJ* pObj) {
0002f2  f04f0100          MOV      r1,#0
;;;370      pObj->CacheLineNumber = 0;
0002f6  f1000050          ADD      r0,r0,#0x50
0002fa  8041              STRH     r1,[r0,#2]
;;;371      pObj->CacheLinePosByte = 0;
0002fc  8001              STRH     r1,[r0,#0]
;;;372      pObj->CacheFirstVisibleByte = 0;
0002fe  80c1              STRH     r1,[r0,#6]
;;;373      pObj->CacheFirstVisibleLine = 0;
000300  8081              STRH     r1,[r0,#4]
000302  f1a00050          SUB      r0,r0,#0x50
;;;374    }
000306  4770              BX       lr
;;;375    
                          ENDP

                  _GetCursorLine PROC
;;;381    */
;;;382    static int _GetCursorLine(MULTIEDIT_HANDLE hObj, const MULTIEDIT_OBJ* pObj, const char* pText, int CursorPosChar) {
000308  e92d4ff8          PUSH     {r3-r11,lr}
00030c  4683              MOV      r11,r0
00030e  460d              MOV      r5,r1
000310  4614              MOV      r4,r2
000312  4699              MOV      r9,r3
;;;383      const char *pCursor;
;;;384      const char *pEndLine;
;;;385      int NumChars, ByteOffsetNewCursor, LineNumber = 0;
000314  f04f0700          MOV      r7,#0
;;;386      ByteOffsetNewCursor = GUI_UC__NumChars2NumBytes(pText, CursorPosChar);
000318  4649              MOV      r1,r9
00031a  4620              MOV      r0,r4
00031c  f7fffffe          BL       GUI_UC__NumChars2NumBytes
000320  4682              MOV      r10,r0
;;;387      pCursor = pText + ByteOffsetNewCursor;
000322  eb04080a          ADD      r8,r4,r10
;;;388      if (pObj->CacheLinePosByte < ByteOffsetNewCursor) {
000326  f8b50050          LDRH     r0,[r5,#0x50]
00032a  4550              CMP      r0,r10
00032c  da05              BGE      |L1.826|
;;;389        /* If cache pos < new position we can use it as start position */
;;;390        pText      += pObj->CacheLinePosByte;
00032e  f8b50050          LDRH     r0,[r5,#0x50]
000332  4404              ADD      r4,r4,r0
;;;391        LineNumber += pObj->CacheLineNumber;
000334  f8b50052          LDRH     r0,[r5,#0x52]
000338  4407              ADD      r7,r7,r0
                  |L1.826|
;;;392      }
;;;393      while (*pText && (pCursor > pText)) {
00033a  e01e              B        |L1.890|
                  |L1.828|
;;;394        NumChars = _WrapGetNumCharsDisp(hObj, pObj, pText);
00033c  4622              MOV      r2,r4
00033e  4629              MOV      r1,r5
000340  4658              MOV      r0,r11
000342  f7fffffe          BL       _WrapGetNumCharsDisp
000346  9000              STR      r0,[sp,#0]
;;;395        pEndLine = pText + GUI_UC__NumChars2NumBytes(pText, NumChars);
000348  4620              MOV      r0,r4
00034a  9900              LDR      r1,[sp,#0]
00034c  f7fffffe          BL       GUI_UC__NumChars2NumBytes
000350  eb000604          ADD      r6,r0,r4
;;;396        pText   += _WrapGetNumBytesToNextLine(hObj, pObj, pText);
000354  4622              MOV      r2,r4
000356  4629              MOV      r1,r5
000358  4658              MOV      r0,r11
00035a  f7fffffe          BL       _WrapGetNumBytesToNextLine
00035e  4404              ADD      r4,r4,r0
;;;397        if (pCursor <= pEndLine) {
000360  45b0              CMP      r8,r6
000362  d808              BHI      |L1.886|
;;;398          if ((pCursor == pEndLine) && (pEndLine == pText) && *pText) {
000364  45b0              CMP      r8,r6
000366  d105              BNE      |L1.884|
000368  42a6              CMP      r6,r4
00036a  d103              BNE      |L1.884|
00036c  7820              LDRB     r0,[r4,#0]
00036e  b108              CBZ      r0,|L1.884|
;;;399            LineNumber++;
000370  f1070701          ADD      r7,r7,#1
                  |L1.884|
;;;400          }
;;;401          break;
000374  e005              B        |L1.898|
                  |L1.886|
;;;402        }
;;;403        LineNumber++;
000376  f1070701          ADD      r7,r7,#1
                  |L1.890|
00037a  7820              LDRB     r0,[r4,#0]            ;393
00037c  b108              CBZ      r0,|L1.898|
00037e  45a0              CMP      r8,r4                 ;393
000380  d8dc              BHI      |L1.828|
                  |L1.898|
000382  bf00              NOP                            ;401
;;;404      }
;;;405      return LineNumber;
000384  4638              MOV      r0,r7
;;;406    }
000386  e8bd8ff8          POP      {r3-r11,pc}
;;;407    
                          ENDP

                  _GetCursorXY PROC
;;;411    */
;;;412    static void _GetCursorXY(MULTIEDIT_HANDLE hObj, /*const*/ MULTIEDIT_OBJ* pObj, int* px, int* py) {
00038a  e92d5ff0          PUSH     {r4-r12,lr}
00038e  4682              MOV      r10,r0
000390  460c              MOV      r4,r1
000392  4616              MOV      r6,r2
000394  461f              MOV      r7,r3
;;;413      if (pObj->InvalidFlags & INVALID_CURSORXY) {
000396  f8940075          LDRB     r0,[r4,#0x75]
00039a  f0100f08          TST      r0,#8
00039e  d034              BEQ      |L1.1034|
;;;414        int CursorLine = 0, x = 0;
0003a0  f04f0800          MOV      r8,#0
0003a4  46c1              MOV      r9,r8
;;;415        GUI_SetFont(pObj->pFont);
0003a6  6f20              LDR      r0,[r4,#0x70]
0003a8  f7fffffe          BL       GUI_SetFont
;;;416        if (pObj->hText) {
0003ac  8f20              LDRH     r0,[r4,#0x38]
0003ae  b1e8              CBZ      r0,|L1.1004|
;;;417          const char *pLine;
;;;418          const char *pCursor;
;;;419          pLine      = (const char *)GUI_ALLOC_h2p(pObj->hText);
0003b0  f9b40038          LDRSH    r0,[r4,#0x38]
0003b4  f7fffffe          BL       GUI_ALLOC_h2p
0003b8  4605              MOV      r5,r0
;;;420          pCursor    = pLine + pObj->CursorPosByte;
0003ba  f8b4004a          LDRH     r0,[r4,#0x4a]
0003be  eb000b05          ADD      r11,r0,r5
;;;421          CursorLine = pObj->CursorLine;
0003c2  f8b48046          LDRH     r8,[r4,#0x46]
;;;422          pLine      = _GetpLine(hObj, pObj, CursorLine);
0003c6  4642              MOV      r2,r8
0003c8  4621              MOV      r1,r4
0003ca  4650              MOV      r0,r10
0003cc  f7fffffe          BL       _GetpLine
0003d0  4605              MOV      r5,r0
;;;423          while (pLine < pCursor) {
0003d2  e008              B        |L1.998|
                  |L1.980|
;;;424            x     += _GetCharDistX(pObj, pLine);
0003d4  4629              MOV      r1,r5
0003d6  4620              MOV      r0,r4
0003d8  f7fffffe          BL       _GetCharDistX
0003dc  4481              ADD      r9,r9,r0
;;;425            pLine += GUI_UC_GetCharSize(pLine);
0003de  4628              MOV      r0,r5
0003e0  f7fffffe          BL       GUI_UC_GetCharSize
0003e4  4405              ADD      r5,r5,r0
                  |L1.998|
0003e6  455d              CMP      r5,r11                ;423
0003e8  d3f4              BCC      |L1.980|
;;;426          }
;;;427        }
0003ea  bf00              NOP      
                  |L1.1004|
;;;428        pObj->CursorPosX = x;
0003ec  f8a4904c          STRH     r9,[r4,#0x4c]
;;;429        pObj->CursorPosY = CursorLine * GUI_GetFontDistY();
0003f0  f7fffffe          BL       GUI_GetFontDistY
0003f4  fb00f008          MUL      r0,r0,r8
0003f8  f8a4004e          STRH     r0,[r4,#0x4e]
;;;430        pObj->InvalidFlags &= ~INVALID_CURSORXY;
0003fc  f8940075          LDRB     r0,[r4,#0x75]
000400  f0200008          BIC      r0,r0,#8
000404  f8840075          STRB     r0,[r4,#0x75]
;;;431      }
000408  bf00              NOP      
                  |L1.1034|
;;;432      *px = pObj->CursorPosX;
00040a  f8b4004c          LDRH     r0,[r4,#0x4c]
00040e  6030              STR      r0,[r6,#0]
;;;433      *py = pObj->CursorPosY;
000410  f8b4004e          LDRH     r0,[r4,#0x4e]
000414  6038              STR      r0,[r7,#0]
;;;434    }
000416  e8bd9ff0          POP      {r4-r12,pc}
;;;435    
                          ENDP

                  _InvalidateCursorXY PROC
;;;439    */
;;;440    static void _InvalidateCursorXY(MULTIEDIT_OBJ * pObj) {
00041a  f8901075          LDRB     r1,[r0,#0x75]
;;;441      pObj->InvalidFlags |= INVALID_CURSORXY;
00041e  f0410108          ORR      r1,r1,#8
000422  f8801075          STRB     r1,[r0,#0x75]
;;;442    }
000426  4770              BX       lr
;;;443    
                          ENDP

                  _SetScrollState PROC
;;;447    */
;;;448    static void _SetScrollState(WM_HWIN hObj) {
000428  b570              PUSH     {r4-r6,lr}
00042a  4605              MOV      r5,r0
;;;449      MULTIEDIT_OBJ* pObj = MULTIEDIT_H2P(hObj);
00042c  4628              MOV      r0,r5
00042e  f7fffffe          BL       GUI_ALLOC_h2p
000432  4604              MOV      r4,r0
;;;450      WIDGET__SetScrollState(hObj, &pObj->ScrollStateV, &pObj->ScrollStateH);
000434  f1040264          ADD      r2,r4,#0x64
000438  f1040158          ADD      r1,r4,#0x58
00043c  4628              MOV      r0,r5
00043e  f7fffffe          BL       WIDGET__SetScrollState
;;;451    }
000442  bd70              POP      {r4-r6,pc}
;;;452    
                          ENDP

                  _CalcScrollPos PROC
;;;462    */
;;;463    static void _CalcScrollPos(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj) {
000444  b57c              PUSH     {r2-r6,lr}
000446  4605              MOV      r5,r0
000448  460c              MOV      r4,r1
;;;464      int xCursor, yCursor;
;;;465      _GetCursorXY(hObj, pObj, &xCursor, &yCursor);
00044a  466b              MOV      r3,sp
00044c  aa01              ADD      r2,sp,#4
00044e  4621              MOV      r1,r4
000450  4628              MOV      r0,r5
000452  f7fffffe          BL       _GetCursorXY
;;;466      yCursor /= GUI_GetYDistOfFont(pObj->pFont);
000456  6f20              LDR      r0,[r4,#0x70]
000458  f7fffffe          BL       GUI_GetYDistOfFont
00045c  9900              LDR      r1,[sp,#0]
00045e  fb91f0f0          SDIV     r0,r1,r0
000462  9000              STR      r0,[sp,#0]
;;;467      WM_CheckScrollPos(&pObj->ScrollStateV, yCursor, 0, 0);       /* Vertical */
000464  2300              MOVS     r3,#0
000466  461a              MOV      r2,r3
000468  f1040058          ADD      r0,r4,#0x58
00046c  9900              LDR      r1,[sp,#0]
00046e  f7fffffe          BL       WM_CheckScrollPos
;;;468      WM_CheckScrollPos(&pObj->ScrollStateH, xCursor, 30, 30);     /* Horizontal */
000472  231e              MOVS     r3,#0x1e
000474  461a              MOV      r2,r3
000476  f1040064          ADD      r0,r4,#0x64
00047a  9901              LDR      r1,[sp,#4]
00047c  f7fffffe          BL       WM_CheckScrollPos
;;;469      _SetScrollState(hObj);
000480  4628              MOV      r0,r5
000482  f7fffffe          BL       _SetScrollState
;;;470    }
000486  bd7c              POP      {r2-r6,pc}
;;;471    
                          ENDP

                  _GetTextSizeX PROC
;;;477    */
;;;478    static int _GetTextSizeX(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj) {
000488  e92d47f0          PUSH     {r4-r10,lr}
00048c  4680              MOV      r8,r0
00048e  460c              MOV      r4,r1
;;;479      if (pObj->InvalidFlags & INVALID_TEXTSIZE) {
000490  f8940075          LDRB     r0,[r4,#0x75]
000494  f0100f04          TST      r0,#4
000498  d03c              BEQ      |L1.1300|
;;;480        pObj->TextSizeX = 0;
00049a  f04f0000          MOV      r0,#0
00049e  f8a40042          STRH     r0,[r4,#0x42]
;;;481        if (pObj->hText) {
0004a2  8f20              LDRH     r0,[r4,#0x38]
0004a4  b380              CBZ      r0,|L1.1288|
;;;482          int NumChars, xSizeLine;
;;;483          char *pText, *pLine;
;;;484          GUI_SetFont(pObj->pFont);
0004a6  6f20              LDR      r0,[r4,#0x70]
0004a8  f7fffffe          BL       GUI_SetFont
;;;485          pText = (char*) GUI_ALLOC_h2p(pObj->hText);
0004ac  f9b40038          LDRSH    r0,[r4,#0x38]
0004b0  f7fffffe          BL       GUI_ALLOC_h2p
0004b4  4605              MOV      r5,r0
;;;486          do {
0004b6  bf00              NOP      
                  |L1.1208|
;;;487            NumChars = _WrapGetNumCharsDisp(hObj, pObj, pText);
0004b8  462a              MOV      r2,r5
0004ba  4621              MOV      r1,r4
0004bc  4640              MOV      r0,r8
0004be  f7fffffe          BL       _WrapGetNumCharsDisp
0004c2  4681              MOV      r9,r0
;;;488            xSizeLine = 0;
0004c4  f04f0600          MOV      r6,#0
;;;489            pLine = pText;
0004c8  462f              MOV      r7,r5
;;;490            while (NumChars--) {
0004ca  e008              B        |L1.1246|
                  |L1.1228|
;;;491              xSizeLine += _GetCharDistX(pObj, pLine);
0004cc  4639              MOV      r1,r7
0004ce  4620              MOV      r0,r4
0004d0  f7fffffe          BL       _GetCharDistX
0004d4  4406              ADD      r6,r6,r0
;;;492              pLine     += GUI_UC_GetCharSize(pLine);
0004d6  4638              MOV      r0,r7
0004d8  f7fffffe          BL       GUI_UC_GetCharSize
0004dc  4407              ADD      r7,r7,r0
                  |L1.1246|
0004de  ea5f0009          MOVS     r0,r9                 ;490
0004e2  f1a90901          SUB      r9,r9,#1              ;490
0004e6  d1f1              BNE      |L1.1228|
;;;493            }
;;;494            if (xSizeLine > pObj->TextSizeX) {
0004e8  f8b40042          LDRH     r0,[r4,#0x42]
0004ec  42b0              CMP      r0,r6
0004ee  da01              BGE      |L1.1268|
;;;495              pObj->TextSizeX = xSizeLine;
0004f0  f8a46042          STRH     r6,[r4,#0x42]
                  |L1.1268|
;;;496            }
;;;497            pText += _WrapGetNumBytesToNextLine(hObj, pObj, pText);
0004f4  462a              MOV      r2,r5
0004f6  4621              MOV      r1,r4
0004f8  4640              MOV      r0,r8
0004fa  f7fffffe          BL       _WrapGetNumBytesToNextLine
0004fe  4405              ADD      r5,r5,r0
;;;498          } while (*pText);
000500  7828              LDRB     r0,[r5,#0]
000502  2800              CMP      r0,#0
000504  d1d8              BNE      |L1.1208|
;;;499        }
000506  bf00              NOP      
                  |L1.1288|
;;;500        pObj->InvalidFlags &= ~INVALID_TEXTSIZE;
000508  f8940075          LDRB     r0,[r4,#0x75]
00050c  f0200004          BIC      r0,r0,#4
000510  f8840075          STRB     r0,[r4,#0x75]
                  |L1.1300|
;;;501      }
;;;502      return pObj->TextSizeX;
000514  f8b40042          LDRH     r0,[r4,#0x42]
;;;503    }
000518  e8bd87f0          POP      {r4-r10,pc}
;;;504    
                          ENDP

                  _GetNumVisLines PROC
;;;508    */
;;;509    static int _GetNumVisLines(MULTIEDIT_HANDLE hObj, const MULTIEDIT_OBJ* pObj) {
00051c  b57c              PUSH     {r2-r6,lr}
00051e  4605              MOV      r5,r0
000520  460c              MOV      r4,r1
;;;510      GUI_RECT Rect;
;;;511      WM_GetInsideRectExScrollbar(hObj, &Rect);
000522  4669              MOV      r1,sp
000524  4628              MOV      r0,r5
000526  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;512      return (Rect.y1 - Rect.y0 + 1) / GUI_GetYDistOfFont(pObj->pFont);
00052a  6f20              LDR      r0,[r4,#0x70]
00052c  f7fffffe          BL       GUI_GetYDistOfFont
000530  f9bd1006          LDRSH    r1,[sp,#6]
000534  f9bd2002          LDRSH    r2,[sp,#2]
000538  1a89              SUBS     r1,r1,r2
00053a  1c49              ADDS     r1,r1,#1
00053c  fb91f0f0          SDIV     r0,r1,r0
;;;513    }
000540  bd7c              POP      {r2-r6,pc}
;;;514    
                          ENDP

                  _GetNumLines PROC
;;;520    */
;;;521    static int _GetNumLines(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ * pObj) {
000542  e92d47f0          PUSH     {r4-r10,lr}
000546  4681              MOV      r9,r0
000548  460c              MOV      r4,r1
;;;522      if (pObj->InvalidFlags & INVALID_NUMLINES) {
00054a  f8940075          LDRB     r0,[r4,#0x75]
00054e  f0100f02          TST      r0,#2
000552  d033              BEQ      |L1.1468|
;;;523        int NumLines = 0;
000554  f04f0700          MOV      r7,#0
;;;524        if (pObj->hText) {
000558  8f20              LDRH     r0,[r4,#0x38]
00055a  b320              CBZ      r0,|L1.1446|
;;;525          int NumChars, NumBytes;
;;;526          char *pText;
;;;527          U16 Char;
;;;528          pText = (char*) GUI_ALLOC_h2p(pObj->hText);
00055c  f9b40038          LDRSH    r0,[r4,#0x38]
000560  f7fffffe          BL       GUI_ALLOC_h2p
000564  4605              MOV      r5,r0
;;;529          GUI_SetFont(pObj->pFont);
000566  6f20              LDR      r0,[r4,#0x70]
000568  f7fffffe          BL       GUI_SetFont
;;;530          do {
00056c  bf00              NOP      
                  |L1.1390|
;;;531            NumChars = _WrapGetNumCharsDisp(hObj, pObj, pText);
00056e  462a              MOV      r2,r5
000570  4621              MOV      r1,r4
000572  4648              MOV      r0,r9
000574  f7fffffe          BL       _WrapGetNumCharsDisp
000578  4682              MOV      r10,r0
;;;532            NumBytes = GUI_UC__NumChars2NumBytes(pText, NumChars);
00057a  4651              MOV      r1,r10
00057c  4628              MOV      r0,r5
00057e  f7fffffe          BL       GUI_UC__NumChars2NumBytes
000582  4680              MOV      r8,r0
;;;533            Char     = GUI_UC_GetCharCode(pText + NumBytes);
000584  eb050008          ADD      r0,r5,r8
000588  f7fffffe          BL       GUI_UC_GetCharCode
00058c  4606              MOV      r6,r0
;;;534            if (Char) {
00058e  b10e              CBZ      r6,|L1.1428|
;;;535              NumLines++;
000590  f1070701          ADD      r7,r7,#1
                  |L1.1428|
;;;536            }
;;;537            pText += _WrapGetNumBytesToNextLine(hObj, pObj, pText);
000594  462a              MOV      r2,r5
000596  4621              MOV      r1,r4
000598  4648              MOV      r0,r9
00059a  f7fffffe          BL       _WrapGetNumBytesToNextLine
00059e  4405              ADD      r5,r5,r0
;;;538          } while (Char);
0005a0  2e00              CMP      r6,#0
0005a2  d1e4              BNE      |L1.1390|
;;;539        }
0005a4  bf00              NOP      
                  |L1.1446|
;;;540        pObj->NumLines = NumLines + 1;
0005a6  f1070001          ADD      r0,r7,#1
0005aa  f8a40040          STRH     r0,[r4,#0x40]
;;;541        pObj->InvalidFlags &= ~INVALID_NUMLINES;
0005ae  f8940075          LDRB     r0,[r4,#0x75]
0005b2  f0200002          BIC      r0,r0,#2
0005b6  f8840075          STRB     r0,[r4,#0x75]
;;;542      }
0005ba  bf00              NOP      
                  |L1.1468|
;;;543      return pObj->NumLines;
0005bc  f8b40040          LDRH     r0,[r4,#0x40]
;;;544    }
0005c0  e8bd87f0          POP      {r4-r10,pc}
;;;545    
                          ENDP

                  _InvalidateNumLines PROC
;;;551    */
;;;552    static void _InvalidateNumLines(MULTIEDIT_OBJ * pObj) {
0005c4  f8901075          LDRB     r1,[r0,#0x75]
;;;553      pObj->InvalidFlags |= INVALID_NUMLINES;
0005c8  f0410102          ORR      r1,r1,#2
0005cc  f8801075          STRB     r1,[r0,#0x75]
;;;554    }
0005d0  4770              BX       lr
;;;555    
                          ENDP

                  _InvalidateTextSizeX PROC
;;;561    */
;;;562    static void _InvalidateTextSizeX(MULTIEDIT_OBJ * pObj) {
0005d2  f8901075          LDRB     r1,[r0,#0x75]
;;;563      pObj->InvalidFlags |= INVALID_TEXTSIZE;
0005d6  f0410104          ORR      r1,r1,#4
0005da  f8801075          STRB     r1,[r0,#0x75]
;;;564    }
0005de  4770              BX       lr
;;;565    
                          ENDP

                  _CalcScrollParas PROC
;;;572    */
;;;573    static void _CalcScrollParas(MULTIEDIT_HANDLE hObj) {
0005e0  b570              PUSH     {r4-r6,lr}
0005e2  4605              MOV      r5,r0
;;;574      MULTIEDIT_OBJ* pObj = MULTIEDIT_H2P(hObj);
0005e4  4628              MOV      r0,r5
0005e6  f7fffffe          BL       GUI_ALLOC_h2p
0005ea  4604              MOV      r4,r0
;;;575      /* Calc vertical scroll parameters */
;;;576      pObj->ScrollStateV.NumItems = _GetNumLines(hObj, pObj);
0005ec  4621              MOV      r1,r4
0005ee  4628              MOV      r0,r5
0005f0  f7fffffe          BL       _GetNumLines
0005f4  65a0              STR      r0,[r4,#0x58]
;;;577      pObj->ScrollStateV.PageSize = _GetNumVisLines(hObj, pObj);
0005f6  4621              MOV      r1,r4
0005f8  4628              MOV      r0,r5
0005fa  f7fffffe          BL       _GetNumVisLines
0005fe  6620              STR      r0,[r4,#0x60]
;;;578      /* Calc horizontal scroll parameters */
;;;579      pObj->ScrollStateH.NumItems = _GetTextSizeX(hObj, pObj);
000600  4621              MOV      r1,r4
000602  4628              MOV      r0,r5
000604  f7fffffe          BL       _GetTextSizeX
000608  6660              STR      r0,[r4,#0x64]
;;;580      pObj->ScrollStateH.PageSize = _GetXSize(hObj, pObj);
00060a  4621              MOV      r1,r4
00060c  4628              MOV      r0,r5
00060e  f7fffffe          BL       _GetXSize
000612  66e0              STR      r0,[r4,#0x6c]
;;;581      _CalcScrollPos(hObj, pObj);
000614  4621              MOV      r1,r4
000616  4628              MOV      r0,r5
000618  f7fffffe          BL       _CalcScrollPos
;;;582    }
00061c  bd70              POP      {r4-r6,pc}
;;;583    
                          ENDP

                  _ManageAutoScrollV PROC
;;;587    */
;;;588    static void _ManageAutoScrollV(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj) {
00061e  e92d41f0          PUSH     {r4-r8,lr}
000622  4606              MOV      r6,r0
000624  460c              MOV      r4,r1
;;;589      if (pObj->Flags & MULTIEDIT_SF_AUTOSCROLLBAR_V) {
000626  f8940074          LDRB     r0,[r4,#0x74]
00062a  f0100f08          TST      r0,#8
00062e  d023              BEQ      |L1.1656|
;;;590        char IsRequired = _GetNumVisLines(hObj, pObj) < _GetNumLines(hObj, pObj);
000630  4621              MOV      r1,r4
000632  4630              MOV      r0,r6
000634  f7fffffe          BL       _GetNumVisLines
000638  4607              MOV      r7,r0
00063a  4621              MOV      r1,r4
00063c  4630              MOV      r0,r6
00063e  f7fffffe          BL       _GetNumLines
000642  4287              CMP      r7,r0
000644  da02              BGE      |L1.1612|
000646  f04f0001          MOV      r0,#1
00064a  e001              B        |L1.1616|
                  |L1.1612|
00064c  f04f0000          MOV      r0,#0
                  |L1.1616|
000650  4605              MOV      r5,r0
;;;591        if (WM_SetScrollbarV(hObj, IsRequired) != IsRequired) {
000652  4629              MOV      r1,r5
000654  4630              MOV      r0,r6
000656  f7fffffe          BL       WM_SetScrollbarV
00065a  42a8              CMP      r0,r5
00065c  d00b              BEQ      |L1.1654|
;;;592          _InvalidateNumLines(pObj);
00065e  4620              MOV      r0,r4
000660  f7fffffe          BL       _InvalidateNumLines
;;;593          _InvalidateTextSizeX(pObj);
000664  4620              MOV      r0,r4
000666  f7fffffe          BL       _InvalidateTextSizeX
;;;594          _InvalidateCursorXY(pObj);
00066a  4620              MOV      r0,r4
00066c  f7fffffe          BL       _InvalidateCursorXY
;;;595          _ClearCache(pObj);
000670  4620              MOV      r0,r4
000672  f7fffffe          BL       _ClearCache
                  |L1.1654|
;;;596        }
;;;597      }
000676  bf00              NOP      
                  |L1.1656|
;;;598    }
000678  e8bd81f0          POP      {r4-r8,pc}
;;;599    
                          ENDP

                  _ManageScrollers PROC
;;;609    */
;;;610    static void _ManageScrollers(MULTIEDIT_HANDLE hObj) {
00067c  e92d41f0          PUSH     {r4-r8,lr}
000680  4606              MOV      r6,r0
;;;611      MULTIEDIT_OBJ* pObj;
;;;612      pObj = MULTIEDIT_H2P(hObj);
000682  4630              MOV      r0,r6
000684  f7fffffe          BL       GUI_ALLOC_h2p
000688  4604              MOV      r4,r0
;;;613      /* 1. Step: Check if vertical scrollbar is required */
;;;614      _ManageAutoScrollV(hObj, pObj);
00068a  4621              MOV      r1,r4
00068c  4630              MOV      r0,r6
00068e  f7fffffe          BL       _ManageAutoScrollV
;;;615      /* 2. Step: Check if horizontal scrollbar is required */
;;;616      if (pObj->Flags & MULTIEDIT_SF_AUTOSCROLLBAR_H) {
000692  f8940074          LDRB     r0,[r4,#0x74]
000696  f0100f10          TST      r0,#0x10
00069a  d01b              BEQ      |L1.1748|
;;;617        char IsRequired;
;;;618        IsRequired = (_GetXSize(hObj, pObj) < _GetTextSizeX(hObj, pObj));
00069c  4621              MOV      r1,r4
00069e  4630              MOV      r0,r6
0006a0  f7fffffe          BL       _GetXSize
0006a4  4607              MOV      r7,r0
0006a6  4621              MOV      r1,r4
0006a8  4630              MOV      r0,r6
0006aa  f7fffffe          BL       _GetTextSizeX
0006ae  4287              CMP      r7,r0
0006b0  da02              BGE      |L1.1720|
0006b2  f04f0001          MOV      r0,#1
0006b6  e001              B        |L1.1724|
                  |L1.1720|
0006b8  f04f0000          MOV      r0,#0
                  |L1.1724|
0006bc  4605              MOV      r5,r0
;;;619        if (WM_SetScrollbarH(hObj, IsRequired) != IsRequired) {
0006be  4629              MOV      r1,r5
0006c0  4630              MOV      r0,r6
0006c2  f7fffffe          BL       WM_SetScrollbarH
0006c6  42a8              CMP      r0,r5
0006c8  d003              BEQ      |L1.1746|
;;;620          /* 3. Step: Check vertical scrollbar again if horizontal has changed */
;;;621          _ManageAutoScrollV(hObj, pObj);
0006ca  4621              MOV      r1,r4
0006cc  4630              MOV      r0,r6
0006ce  f7fffffe          BL       _ManageAutoScrollV
                  |L1.1746|
;;;622        }
;;;623      }
0006d2  bf00              NOP      
                  |L1.1748|
;;;624      _CalcScrollParas(hObj);
0006d4  4630              MOV      r0,r6
0006d6  f7fffffe          BL       _CalcScrollParas
;;;625    }
0006da  e8bd81f0          POP      {r4-r8,pc}
;;;626    
                          ENDP

                  _Invalidate PROC
;;;630    */
;;;631    static void _Invalidate(MULTIEDIT_HANDLE hObj) {
0006de  b510              PUSH     {r4,lr}
0006e0  4604              MOV      r4,r0
;;;632      _ManageScrollers(hObj);
0006e2  4620              MOV      r0,r4
0006e4  f7fffffe          BL       _ManageScrollers
;;;633      WM_Invalidate(hObj);
0006e8  4620              MOV      r0,r4
0006ea  f7fffffe          BL       WM_InvalidateWindow
;;;634    }
0006ee  bd10              POP      {r4,pc}
;;;635    
                          ENDP

                  _InvalidateTextArea PROC
;;;641    */
;;;642    static void _InvalidateTextArea(MULTIEDIT_HANDLE hObj) {
0006f0  b51c              PUSH     {r2-r4,lr}
0006f2  4604              MOV      r4,r0
;;;643      GUI_RECT rInsideRect;
;;;644      _ManageScrollers(hObj);
0006f4  4620              MOV      r0,r4
0006f6  f7fffffe          BL       _ManageScrollers
;;;645      WM_GetInsideRectExScrollbar(hObj, &rInsideRect);
0006fa  4669              MOV      r1,sp
0006fc  4620              MOV      r0,r4
0006fe  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;646      WM_InvalidateRect(hObj, &rInsideRect);
000702  4669              MOV      r1,sp
000704  4620              MOV      r0,r4
000706  f7fffffe          BL       WM_InvalidateRect
;;;647    }
00070a  bd1c              POP      {r2-r4,pc}
;;;648    
                          ENDP

                  _InvalidateCursorPos PROC
;;;654    */
;;;655    static int _InvalidateCursorPos(MULTIEDIT_OBJ * pObj) {
00070c  4601              MOV      r1,r0
;;;656      int Value;
;;;657      Value = pObj->CursorPosChar;
00070e  f8b10048          LDRH     r0,[r1,#0x48]
;;;658      pObj->CursorPosChar = 0xffff;
000712  f64f72ff          MOV      r2,#0xffff
000716  f8a12048          STRH     r2,[r1,#0x48]
;;;659      return Value;
;;;660    }
00071a  4770              BX       lr
;;;661    
                          ENDP

                  _SetFlag PROC
;;;665    */
;;;666    static void _SetFlag(MULTIEDIT_HANDLE hObj, int OnOff, U8 Flag) {
00071c  e92d41f0          PUSH     {r4-r8,lr}
000720  4606              MOV      r6,r0
000722  460f              MOV      r7,r1
000724  4615              MOV      r5,r2
;;;667      if (hObj) {
000726  b1ae              CBZ      r6,|L1.1876|
;;;668        MULTIEDIT_OBJ * pObj;
;;;669        WM_LOCK();
;;;670        pObj = MULTIEDIT_H2P(hObj);
000728  4630              MOV      r0,r6
00072a  f7fffffe          BL       GUI_ALLOC_h2p
00072e  4604              MOV      r4,r0
;;;671        if (OnOff) {
000730  b137              CBZ      r7,|L1.1856|
;;;672          pObj->Flags |= Flag;
000732  f8940074          LDRB     r0,[r4,#0x74]
000736  ea400005          ORR      r0,r0,r5
00073a  f8840074          STRB     r0,[r4,#0x74]
00073e  e005              B        |L1.1868|
                  |L1.1856|
;;;673        } else {
;;;674          pObj->Flags &= ~Flag;
000740  f8940074          LDRB     r0,[r4,#0x74]
000744  ea200005          BIC      r0,r0,r5
000748  f8840074          STRB     r0,[r4,#0x74]
                  |L1.1868|
;;;675        }
;;;676        _InvalidateTextArea(hObj);
00074c  4630              MOV      r0,r6
00074e  f7fffffe          BL       _InvalidateTextArea
;;;677        WM_UNLOCK();
;;;678      }
000752  bf00              NOP      
                  |L1.1876|
;;;679    }
000754  e8bd81f0          POP      {r4-r8,pc}
;;;680    
                          ENDP

                  _CalcNextValidCursorPos PROC
;;;693    */
;;;694    static int _CalcNextValidCursorPos(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj, int CursorPosChar, int * pCursorPosByte, int * pCursorLine) {
000758  e92d4fff          PUSH     {r0-r11,lr}
00075c  b083              SUB      sp,sp,#0xc
00075e  460c              MOV      r4,r1
000760  4615              MOV      r5,r2
000762  469a              MOV      r10,r3
;;;695      if (pObj->hText) {
000764  8f20              LDRH     r0,[r4,#0x38]
000766  2800              CMP      r0,#0
000768  d062              BEQ      |L1.2096|
;;;696        char *pNextLine, *pCursor, *pText;
;;;697        int CursorLine, NumChars, CursorPosByte;
;;;698        pText    = (char*) GUI_ALLOC_h2p(pObj->hText);
00076a  f9b40038          LDRSH    r0,[r4,#0x38]
00076e  f7fffffe          BL       GUI_ALLOC_h2p
000772  4607              MOV      r7,r0
;;;699        NumChars = _GetNumChars(pObj);
000774  4620              MOV      r0,r4
000776  f7fffffe          BL       _GetNumChars
00077a  9002              STR      r0,[sp,#8]
;;;700        /* Set offset in valid range */
;;;701        if (CursorPosChar < pObj->NumCharsPrompt) {
00077c  8fe0              LDRH     r0,[r4,#0x3e]
00077e  42a8              CMP      r0,r5
000780  dd00              BLE      |L1.1924|
;;;702          CursorPosChar = pObj->NumCharsPrompt;
000782  8fe5              LDRH     r5,[r4,#0x3e]
                  |L1.1924|
;;;703        }
;;;704        if (CursorPosChar > NumChars) {
000784  9802              LDR      r0,[sp,#8]
000786  4285              CMP      r5,r0
000788  dd00              BLE      |L1.1932|
;;;705          CursorPosChar = NumChars;
00078a  9d02              LDR      r5,[sp,#8]
                  |L1.1932|
;;;706        }
;;;707        CursorPosByte = GUI_UC__NumChars2NumBytes(pText, CursorPosChar);
00078c  4629              MOV      r1,r5
00078e  4638              MOV      r0,r7
000790  f7fffffe          BL       GUI_UC__NumChars2NumBytes
000794  9001              STR      r0,[sp,#4]
;;;708        CursorLine    = _GetCursorLine(hObj, pObj, pText, CursorPosChar);
000796  462b              MOV      r3,r5
000798  463a              MOV      r2,r7
00079a  4621              MOV      r1,r4
00079c  9803              LDR      r0,[sp,#0xc]
00079e  f7fffffe          BL       _GetCursorLine
0007a2  4680              MOV      r8,r0
;;;709        pCursor       = pText + CursorPosByte;
0007a4  9801              LDR      r0,[sp,#4]
0007a6  eb070b00          ADD      r11,r7,r0
;;;710        pNextLine     = _GetpLine(hObj, pObj, CursorLine);
0007aa  4642              MOV      r2,r8
0007ac  4621              MOV      r1,r4
0007ae  9803              LDR      r0,[sp,#0xc]
0007b0  f7fffffe          BL       _GetpLine
0007b4  4606              MOV      r6,r0
;;;711        if (pNextLine > pCursor) {
0007b6  455e              CMP      r6,r11
0007b8  d92b              BLS      |L1.2066|
;;;712          if (pObj->CursorPosChar < CursorPosChar) {
0007ba  f8b40048          LDRH     r0,[r4,#0x48]
0007be  42a8              CMP      r0,r5
0007c0  da01              BGE      |L1.1990|
;;;713            pCursor = pNextLine;
0007c2  46b3              MOV      r11,r6
0007c4  e013              B        |L1.2030|
                  |L1.1990|
;;;714          } else {
;;;715            char *pPrevLine;
;;;716            int NumChars;
;;;717            pPrevLine  = _GetpLine(hObj, pObj, CursorLine - 1);
0007c6  f1a80201          SUB      r2,r8,#1
0007ca  4621              MOV      r1,r4
0007cc  9803              LDR      r0,[sp,#0xc]
0007ce  f7fffffe          BL       _GetpLine
0007d2  4681              MOV      r9,r0
;;;718            NumChars   = _WrapGetNumCharsDisp(hObj, pObj, pPrevLine);
0007d4  464a              MOV      r2,r9
0007d6  4621              MOV      r1,r4
0007d8  9803              LDR      r0,[sp,#0xc]
0007da  f7fffffe          BL       _WrapGetNumCharsDisp
0007de  9000              STR      r0,[sp,#0]
;;;719            pPrevLine += GUI_UC__NumChars2NumBytes(pPrevLine, NumChars);
0007e0  4648              MOV      r0,r9
0007e2  9900              LDR      r1,[sp,#0]
0007e4  f7fffffe          BL       GUI_UC__NumChars2NumBytes
0007e8  4481              ADD      r9,r9,r0
;;;720            pCursor = pPrevLine;
0007ea  46cb              MOV      r11,r9
;;;721          }
0007ec  bf00              NOP      
                  |L1.2030|
;;;722          CursorPosChar = GUI_UC__NumBytes2NumChars(pText, pCursor - pText);
0007ee  ebab0107          SUB      r1,r11,r7
0007f2  4638              MOV      r0,r7
0007f4  f7fffffe          BL       GUI_UC__NumBytes2NumChars
0007f8  4605              MOV      r5,r0
;;;723          CursorPosByte = GUI_UC__NumChars2NumBytes(pText, CursorPosChar);
0007fa  4629              MOV      r1,r5
0007fc  4638              MOV      r0,r7
0007fe  f7fffffe          BL       GUI_UC__NumChars2NumBytes
000802  9001              STR      r0,[sp,#4]
;;;724          CursorLine    = _GetCursorLine(hObj, pObj, pText, CursorPosChar);
000804  462b              MOV      r3,r5
000806  463a              MOV      r2,r7
000808  4621              MOV      r1,r4
00080a  9803              LDR      r0,[sp,#0xc]
00080c  f7fffffe          BL       _GetCursorLine
000810  4680              MOV      r8,r0
                  |L1.2066|
;;;725        }
;;;726        if (pCursorPosByte) {
000812  f1ba0f00          CMP      r10,#0
000816  d002              BEQ      |L1.2078|
;;;727          *pCursorPosByte = CursorPosByte;
000818  9801              LDR      r0,[sp,#4]
00081a  f8ca0000          STR      r0,[r10,#0]
                  |L1.2078|
;;;728        }
;;;729        if (pCursorLine) {
00081e  9810              LDR      r0,[sp,#0x40]
000820  b110              CBZ      r0,|L1.2088|
;;;730          *pCursorLine = CursorLine;
000822  9810              LDR      r0,[sp,#0x40]
000824  f8c08000          STR      r8,[r0,#0]
                  |L1.2088|
;;;731        }
;;;732        return CursorPosChar;
000828  4628              MOV      r0,r5
                  |L1.2090|
;;;733      }
;;;734      return 0;
;;;735    }
00082a  b007              ADD      sp,sp,#0x1c
00082c  e8bd8ff0          POP      {r4-r11,pc}
                  |L1.2096|
000830  2000              MOVS     r0,#0                 ;734
000832  e7fa              B        |L1.2090|
;;;736    
                          ENDP

                  _SetCursorPos PROC
;;;742    */
;;;743    static void _SetCursorPos(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj, int CursorPosChar) {
000834  b5fe              PUSH     {r1-r7,lr}
000836  4606              MOV      r6,r0
000838  460c              MOV      r4,r1
00083a  4615              MOV      r5,r2
;;;744      int CursorPosByte, CursorLine;
;;;745      CursorPosChar = _CalcNextValidCursorPos(hObj, pObj, CursorPosChar, &CursorPosByte, &CursorLine);
00083c  a801              ADD      r0,sp,#4
00083e  ab02              ADD      r3,sp,#8
000840  462a              MOV      r2,r5
000842  4621              MOV      r1,r4
000844  9000              STR      r0,[sp,#0]
000846  4630              MOV      r0,r6
000848  f7fffffe          BL       _CalcNextValidCursorPos
00084c  4605              MOV      r5,r0
;;;746      /* Assign value and recalc whatever necessary */
;;;747      if (pObj->CursorPosChar != CursorPosChar) {
00084e  f8b40048          LDRH     r0,[r4,#0x48]
000852  42a8              CMP      r0,r5
000854  d00e              BEQ      |L1.2164|
;;;748        /* Save values */
;;;749        pObj->CursorPosByte = CursorPosByte;
000856  f1040446          ADD      r4,r4,#0x46
00085a  9802              LDR      r0,[sp,#8]
00085c  80a0              STRH     r0,[r4,#4]
;;;750        pObj->CursorPosChar = CursorPosChar;
00085e  8065              STRH     r5,[r4,#2]
;;;751        pObj->CursorLine = CursorLine;
000860  9801              LDR      r0,[sp,#4]
000862  f8240946          STRH     r0,[r4],#-0x46
;;;752        _InvalidateCursorXY(pObj); /* Invalidate X/Y position */
000866  4620              MOV      r0,r4
000868  f7fffffe          BL       _InvalidateCursorXY
;;;753        _CalcScrollPos(hObj, pObj);
00086c  4621              MOV      r1,r4
00086e  4630              MOV      r0,r6
000870  f7fffffe          BL       _CalcScrollPos
                  |L1.2164|
;;;754      }
;;;755    }
000874  bdfe              POP      {r1-r7,pc}
;;;756    
                          ENDP

                  _SetWrapMode PROC
;;;760    */
;;;761    static int _SetWrapMode(MULTIEDIT_HANDLE hObj, GUI_WRAPMODE WrapMode) {
000876  e92d41f0          PUSH     {r4-r8,lr}
00087a  4606              MOV      r6,r0
00087c  460d              MOV      r5,r1
;;;762      int r;
;;;763      r = 0;
00087e  f04f0700          MOV      r7,#0
;;;764      if (hObj) {
000882  b316              CBZ      r6,|L1.2250|
;;;765        MULTIEDIT_OBJ * pObj;
;;;766        WM_LOCK();
;;;767        pObj = MULTIEDIT_H2P(hObj);
000884  4630              MOV      r0,r6
000886  f7fffffe          BL       GUI_ALLOC_h2p
00088a  4604              MOV      r4,r0
;;;768        r = pObj->WrapMode;
00088c  f8947078          LDRB     r7,[r4,#0x78]
;;;769        if (pObj->WrapMode != WrapMode) {
000890  f8940078          LDRB     r0,[r4,#0x78]
000894  42a8              CMP      r0,r5
000896  d017              BEQ      |L1.2248|
;;;770          int Position;
;;;771          pObj->WrapMode = WrapMode;
000898  f8845078          STRB     r5,[r4,#0x78]
;;;772          _ClearCache(pObj);
00089c  4620              MOV      r0,r4
00089e  f7fffffe          BL       _ClearCache
;;;773          _InvalidateNumLines(pObj);
0008a2  4620              MOV      r0,r4
0008a4  f7fffffe          BL       _InvalidateNumLines
;;;774          _InvalidateTextSizeX(pObj);
0008a8  4620              MOV      r0,r4
0008aa  f7fffffe          BL       _InvalidateTextSizeX
;;;775          _InvalidateTextArea(hObj);
0008ae  4630              MOV      r0,r6
0008b0  f7fffffe          BL       _InvalidateTextArea
;;;776          Position = _InvalidateCursorPos(pObj);
0008b4  4620              MOV      r0,r4
0008b6  f7fffffe          BL       _InvalidateCursorPos
0008ba  4680              MOV      r8,r0
;;;777          _SetCursorPos(hObj, pObj, Position);
0008bc  4642              MOV      r2,r8
0008be  4621              MOV      r1,r4
0008c0  4630              MOV      r0,r6
0008c2  f7fffffe          BL       _SetCursorPos
;;;778        }
0008c6  bf00              NOP      
                  |L1.2248|
;;;779        WM_UNLOCK();
;;;780      }
0008c8  bf00              NOP      
                  |L1.2250|
;;;781      return r;
0008ca  4638              MOV      r0,r7
;;;782    }
0008cc  e8bd81f0          POP      {r4-r8,pc}
;;;783    
                          ENDP

                  _SetCursorXY PROC
;;;789    */
;;;790    static void _SetCursorXY(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj, int x, int y) {
0008d0  e92d4fff          PUSH     {r0-r11,lr}
0008d4  b083              SUB      sp,sp,#0xc
0008d6  460c              MOV      r4,r1
0008d8  4690              MOV      r8,r2
0008da  4699              MOV      r9,r3
;;;791      int CursorPosChar = 0;
0008dc  f04f0000          MOV      r0,#0
0008e0  9002              STR      r0,[sp,#8]
;;;792      if ((x < 0) || (y < 0)) {
0008e2  f1b80f00          CMP      r8,#0
0008e6  db02              BLT      |L1.2286|
0008e8  f1b90f00          CMP      r9,#0
0008ec  da02              BGE      |L1.2292|
                  |L1.2286|
;;;793        return;
;;;794      }
;;;795      if (pObj->hText) {
;;;796        char *pLine, *pText;
;;;797        int CursorLine, WrapChars;
;;;798        int SizeX = 0;
;;;799        U16 Char;
;;;800        GUI_SetFont(pObj->pFont);
;;;801        CursorLine = y / GUI_GetFontDistY();
;;;802        pLine      = _GetpLine(hObj, pObj, CursorLine);
;;;803        pText      = (char*) GUI_ALLOC_h2p(pObj->hText);
;;;804        WrapChars  = _WrapGetNumCharsDisp(hObj, pObj, pLine);
;;;805        Char       = GUI_UC__GetCharCode(pLine + GUI_UC__NumChars2NumBytes(pLine, WrapChars));
;;;806        if (pObj->Flags & MULTIEDIT_SF_PASSWORD) {
;;;807          if (!Char) {
;;;808            WrapChars++;
;;;809          }
;;;810        } else {
;;;811          if (!Char || (Char == '\n') || ((Char == ' ') && (pObj->WrapMode == GUI_WRAPMODE_WORD))) {
;;;812            WrapChars++;
;;;813          }
;;;814        }
;;;815        while (--WrapChars > 0) {
;;;816          Char   = GUI_UC_GetCharCode(pLine);
;;;817          SizeX += _GetCharDistX(pObj, pLine);
;;;818          if (!Char || (SizeX > x)) {
;;;819            break;
;;;820          }
;;;821          pLine += GUI_UC_GetCharSize(pLine);
;;;822        }
;;;823        CursorPosChar = GUI_UC__NumBytes2NumChars(pText, pLine - pText);
;;;824      }
;;;825      _SetCursorPos(hObj, pObj, CursorPosChar);
;;;826    }
0008ee  b007              ADD      sp,sp,#0x1c
0008f0  e8bd8ff0          POP      {r4-r11,pc}
                  |L1.2292|
0008f4  8f20              LDRH     r0,[r4,#0x38]         ;795
0008f6  2800              CMP      r0,#0                 ;795
0008f8  d057              BEQ      |L1.2474|
0008fa  f04f0b00          MOV      r11,#0                ;798
0008fe  6f20              LDR      r0,[r4,#0x70]         ;800
000900  f7fffffe          BL       GUI_SetFont
000904  f7fffffe          BL       GUI_GetFontDistY
000908  fb99f0f0          SDIV     r0,r9,r0              ;801
00090c  9001              STR      r0,[sp,#4]            ;801
00090e  4621              MOV      r1,r4                 ;802
000910  9a01              LDR      r2,[sp,#4]            ;802
000912  9803              LDR      r0,[sp,#0xc]          ;802
000914  f7fffffe          BL       _GetpLine
000918  4605              MOV      r5,r0                 ;802
00091a  f9b40038          LDRSH    r0,[r4,#0x38]         ;803
00091e  f7fffffe          BL       GUI_ALLOC_h2p
000922  4682              MOV      r10,r0                ;803
000924  462a              MOV      r2,r5                 ;804
000926  4621              MOV      r1,r4                 ;804
000928  9803              LDR      r0,[sp,#0xc]          ;804
00092a  f7fffffe          BL       _WrapGetNumCharsDisp
00092e  4607              MOV      r7,r0                 ;804
000930  4639              MOV      r1,r7                 ;805
000932  4628              MOV      r0,r5                 ;805
000934  f7fffffe          BL       GUI_UC__NumChars2NumBytes
000938  4428              ADD      r0,r0,r5              ;805
00093a  9000              STR      r0,[sp,#0]            ;805
00093c  48fe              LDR      r0,|L1.3384|
00093e  69c0              LDR      r0,[r0,#0x1c]         ;805  ; GUI_Context
000940  6801              LDR      r1,[r0,#0]            ;805
000942  9800              LDR      r0,[sp,#0]            ;805
000944  4788              BLX      r1                    ;805
000946  4606              MOV      r6,r0                 ;805
000948  f8940074          LDRB     r0,[r4,#0x74]         ;806
00094c  f0100f20          TST      r0,#0x20              ;806
000950  d003              BEQ      |L1.2394|
000952  b96e              CBNZ     r6,|L1.2416|
000954  f1070701          ADD      r7,r7,#1              ;808
000958  e00a              B        |L1.2416|
                  |L1.2394|
00095a  b13e              CBZ      r6,|L1.2412|
00095c  2e0a              CMP      r6,#0xa               ;811
00095e  d005              BEQ      |L1.2412|
000960  2e20              CMP      r6,#0x20              ;811
000962  d105              BNE      |L1.2416|
000964  f8940078          LDRB     r0,[r4,#0x78]         ;811
000968  2801              CMP      r0,#1                 ;811
00096a  d101              BNE      |L1.2416|
                  |L1.2412|
00096c  f1070701          ADD      r7,r7,#1              ;812
                  |L1.2416|
000970  e010              B        |L1.2452|
                  |L1.2418|
000972  4628              MOV      r0,r5                 ;816
000974  f7fffffe          BL       GUI_UC_GetCharCode
000978  4606              MOV      r6,r0                 ;816
00097a  4629              MOV      r1,r5                 ;817
00097c  4620              MOV      r0,r4                 ;817
00097e  f7fffffe          BL       _GetCharDistX
000982  4483              ADD      r11,r11,r0            ;817
000984  b10e              CBZ      r6,|L1.2442|
000986  45c3              CMP      r11,r8                ;818
000988  dd00              BLE      |L1.2444|
                  |L1.2442|
00098a  e006              B        |L1.2458|
                  |L1.2444|
00098c  4628              MOV      r0,r5                 ;821
00098e  f7fffffe          BL       GUI_UC_GetCharSize
000992  4405              ADD      r5,r5,r0              ;821
                  |L1.2452|
000994  1e78              SUBS     r0,r7,#1              ;815
000996  1e07              SUBS     r7,r0,#0              ;815
000998  dceb              BGT      |L1.2418|
                  |L1.2458|
00099a  bf00              NOP                            ;819
00099c  eba5010a          SUB      r1,r5,r10             ;823
0009a0  4650              MOV      r0,r10                ;823
0009a2  f7fffffe          BL       GUI_UC__NumBytes2NumChars
0009a6  9002              STR      r0,[sp,#8]            ;823
0009a8  bf00              NOP                            ;824
                  |L1.2474|
0009aa  4621              MOV      r1,r4                 ;825
0009ac  e9dd2002          LDRD     r2,r0,[sp,#8]         ;825
0009b0  f7fffffe          BL       _SetCursorPos
0009b4  bf00              NOP      
0009b6  e79a              B        |L1.2286|
;;;827    
                          ENDP

                  _MoveCursorUp PROC
;;;831    */
;;;832    static void _MoveCursorUp(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj) {
0009b8  b57c              PUSH     {r2-r6,lr}
0009ba  4605              MOV      r5,r0
0009bc  460c              MOV      r4,r1
;;;833      int xPos, yPos;
;;;834      _GetCursorXY(hObj, pObj, &xPos, &yPos);
0009be  466b              MOV      r3,sp
0009c0  aa01              ADD      r2,sp,#4
0009c2  4621              MOV      r1,r4
0009c4  4628              MOV      r0,r5
0009c6  f7fffffe          BL       _GetCursorXY
;;;835      yPos -= GUI_GetYDistOfFont(pObj->pFont);
0009ca  6f20              LDR      r0,[r4,#0x70]
0009cc  f7fffffe          BL       GUI_GetYDistOfFont
0009d0  9900              LDR      r1,[sp,#0]
0009d2  eba10000          SUB      r0,r1,r0
0009d6  9000              STR      r0,[sp,#0]
;;;836      _SetCursorXY(hObj, pObj, xPos, yPos);
0009d8  4621              MOV      r1,r4
0009da  4628              MOV      r0,r5
0009dc  e9dd3200          LDRD     r3,r2,[sp,#0]
0009e0  f7fffffe          BL       _SetCursorXY
;;;837    }
0009e4  bd7c              POP      {r2-r6,pc}
;;;838    
                          ENDP

                  _MoveCursorDown PROC
;;;842    */
;;;843    static void _MoveCursorDown(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj) {
0009e6  b57c              PUSH     {r2-r6,lr}
0009e8  4605              MOV      r5,r0
0009ea  460c              MOV      r4,r1
;;;844      int xPos, yPos;
;;;845      _GetCursorXY(hObj, pObj, &xPos, &yPos);
0009ec  466b              MOV      r3,sp
0009ee  aa01              ADD      r2,sp,#4
0009f0  4621              MOV      r1,r4
0009f2  4628              MOV      r0,r5
0009f4  f7fffffe          BL       _GetCursorXY
;;;846      yPos += GUI_GetYDistOfFont(pObj->pFont);
0009f8  6f20              LDR      r0,[r4,#0x70]
0009fa  f7fffffe          BL       GUI_GetYDistOfFont
0009fe  9900              LDR      r1,[sp,#0]
000a00  4408              ADD      r0,r0,r1
000a02  9000              STR      r0,[sp,#0]
;;;847      _SetCursorXY(hObj, pObj, xPos, yPos);
000a04  4621              MOV      r1,r4
000a06  4628              MOV      r0,r5
000a08  e9dd3200          LDRD     r3,r2,[sp,#0]
000a0c  f7fffffe          BL       _SetCursorXY
;;;848    }
000a10  bd7c              POP      {r2-r6,pc}
;;;849    
                          ENDP

                  _MoveCursor2NextLine PROC
;;;853    */
;;;854    static void _MoveCursor2NextLine(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj) {
000a12  b57c              PUSH     {r2-r6,lr}
000a14  4605              MOV      r5,r0
000a16  460c              MOV      r4,r1
;;;855      int xPos, yPos;
;;;856      _GetCursorXY(hObj, pObj, &xPos, &yPos);
000a18  466b              MOV      r3,sp
000a1a  aa01              ADD      r2,sp,#4
000a1c  4621              MOV      r1,r4
000a1e  4628              MOV      r0,r5
000a20  f7fffffe          BL       _GetCursorXY
;;;857      yPos += GUI_GetYDistOfFont(pObj->pFont);
000a24  6f20              LDR      r0,[r4,#0x70]
000a26  f7fffffe          BL       GUI_GetYDistOfFont
000a2a  9900              LDR      r1,[sp,#0]
000a2c  4408              ADD      r0,r0,r1
000a2e  9000              STR      r0,[sp,#0]
;;;858      _SetCursorXY(hObj, pObj, 0, yPos);
000a30  f04f0200          MOV      r2,#0
000a34  4621              MOV      r1,r4
000a36  4628              MOV      r0,r5
000a38  9b00              LDR      r3,[sp,#0]
000a3a  f7fffffe          BL       _SetCursorXY
;;;859    }
000a3e  bd7c              POP      {r2-r6,pc}
;;;860    
                          ENDP

                  _MoveCursor2LineEnd PROC
;;;864    */
;;;865    static void _MoveCursor2LineEnd(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj) {
000a40  b57c              PUSH     {r2-r6,lr}
000a42  4604              MOV      r4,r0
000a44  460d              MOV      r5,r1
;;;866      int xPos, yPos;
;;;867      _GetCursorXY(hObj, pObj, &xPos, &yPos);
000a46  466b              MOV      r3,sp
000a48  aa01              ADD      r2,sp,#4
000a4a  4629              MOV      r1,r5
000a4c  4620              MOV      r0,r4
000a4e  f7fffffe          BL       _GetCursorXY
;;;868      _SetCursorXY(hObj, pObj, 0x7FFF, yPos);
000a52  f64772ff          MOV      r2,#0x7fff
000a56  4629              MOV      r1,r5
000a58  4620              MOV      r0,r4
000a5a  9b00              LDR      r3,[sp,#0]
000a5c  f7fffffe          BL       _SetCursorXY
;;;869    }
000a60  bd7c              POP      {r2-r6,pc}
;;;870    
                          ENDP

                  _MoveCursor2LinePos1 PROC
;;;874    */
;;;875    static void _MoveCursor2LinePos1(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj) {
000a62  b57c              PUSH     {r2-r6,lr}
000a64  4604              MOV      r4,r0
000a66  460d              MOV      r5,r1
;;;876      int xPos, yPos;
;;;877      _GetCursorXY(hObj, pObj, &xPos, &yPos);
000a68  466b              MOV      r3,sp
000a6a  aa01              ADD      r2,sp,#4
000a6c  4629              MOV      r1,r5
000a6e  4620              MOV      r0,r4
000a70  f7fffffe          BL       _GetCursorXY
;;;878      _SetCursorXY(hObj, pObj, 0, yPos);
000a74  2200              MOVS     r2,#0
000a76  4629              MOV      r1,r5
000a78  4620              MOV      r0,r4
000a7a  9b00              LDR      r3,[sp,#0]
000a7c  f7fffffe          BL       _SetCursorXY
;;;879    }
000a80  bd7c              POP      {r2-r6,pc}
;;;880    
                          ENDP

                  _IsOverwriteAtThisChar PROC
;;;884    */
;;;885    static int _IsOverwriteAtThisChar(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj) {
000a82  e92d4ff8          PUSH     {r3-r11,lr}
000a86  4607              MOV      r7,r0
000a88  460c              MOV      r4,r1
;;;886      int r = 0;
000a8a  f04f0800          MOV      r8,#0
;;;887      if (pObj->hText && !(pObj->Flags & MULTIEDIT_CF_INSERT)) {
000a8e  8f20              LDRH     r0,[r4,#0x38]
000a90  2800              CMP      r0,#0
000a92  d03b              BEQ      |L1.2828|
000a94  f8940074          LDRB     r0,[r4,#0x74]
000a98  f0100f04          TST      r0,#4
000a9c  d136              BNE      |L1.2828|
;;;888        const char *pText;
;;;889        int CurPos, Line1, Line2;
;;;890        U16 Char;
;;;891        pText  = (const char *)GUI_ALLOC_h2p(pObj->hText);
000a9e  f9b40038          LDRSH    r0,[r4,#0x38]
000aa2  f7fffffe          BL       GUI_ALLOC_h2p
000aa6  4605              MOV      r5,r0
;;;892        Line1  = pObj->CursorLine;
000aa8  f8b4a046          LDRH     r10,[r4,#0x46]
;;;893        CurPos = _CalcNextValidCursorPos(hObj, pObj, pObj->CursorPosChar + 1, 0, 0);
000aac  4640              MOV      r0,r8
000aae  9000              STR      r0,[sp,#0]
000ab0  f8b40048          LDRH     r0,[r4,#0x48]
000ab4  f1000201          ADD      r2,r0,#1
000ab8  4643              MOV      r3,r8
000aba  4621              MOV      r1,r4
000abc  4638              MOV      r0,r7
000abe  f7fffffe          BL       _CalcNextValidCursorPos
000ac2  4681              MOV      r9,r0
;;;894        Line2  = _GetCursorLine(hObj, pObj, pText, CurPos);
000ac4  464b              MOV      r3,r9
000ac6  462a              MOV      r2,r5
000ac8  4621              MOV      r1,r4
000aca  4638              MOV      r0,r7
000acc  f7fffffe          BL       _GetCursorLine
000ad0  4683              MOV      r11,r0
;;;895        pText += pObj->CursorPosByte;
000ad2  f8b4004a          LDRH     r0,[r4,#0x4a]
000ad6  4405              ADD      r5,r5,r0
;;;896        Char   = GUI_UC_GetCharCode(pText);
000ad8  4628              MOV      r0,r5
000ada  f7fffffe          BL       GUI_UC_GetCharCode
000ade  4606              MOV      r6,r0
;;;897        if (Char) {
000ae0  b19e              CBZ      r6,|L1.2826|
;;;898          if ((Line1 == Line2) || (pObj->Flags & MULTIEDIT_SF_PASSWORD)) {
000ae2  45da              CMP      r10,r11
000ae4  d004              BEQ      |L1.2800|
000ae6  f8940074          LDRB     r0,[r4,#0x74]
000aea  f0100f20          TST      r0,#0x20
000aee  d002              BEQ      |L1.2806|
                  |L1.2800|
;;;899            r = 1;
000af0  f04f0801          MOV      r8,#1
000af4  e009              B        |L1.2826|
                  |L1.2806|
;;;900          } else {
;;;901            if (Char != '\n') {
000af6  2e0a              CMP      r6,#0xa
000af8  d007              BEQ      |L1.2826|
;;;902              if ((Char != ' ') || (pObj->WrapMode == GUI_WRAPMODE_CHAR)) {
000afa  2e20              CMP      r6,#0x20
000afc  d103              BNE      |L1.2822|
000afe  f8940078          LDRB     r0,[r4,#0x78]
000b02  2802              CMP      r0,#2
000b04  d101              BNE      |L1.2826|
                  |L1.2822|
;;;903                r = 1;
000b06  f04f0801          MOV      r8,#1
                  |L1.2826|
;;;904              }
;;;905            }
;;;906          }
;;;907        }
;;;908      }
000b0a  bf00              NOP      
                  |L1.2828|
;;;909      return r;
000b0c  4640              MOV      r0,r8
;;;910    }
000b0e  e8bd8ff8          POP      {r3-r11,pc}
;;;911    
                          ENDP

                  _GetCursorSizeX PROC
;;;918    */
;;;919    static int _GetCursorSizeX(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj) {
000b12  b570              PUSH     {r4-r6,lr}
000b14  4606              MOV      r6,r0
000b16  460c              MOV      r4,r1
;;;920      if (_IsOverwriteAtThisChar(hObj, pObj)) {
000b18  4621              MOV      r1,r4
000b1a  4630              MOV      r0,r6
000b1c  f7fffffe          BL       _IsOverwriteAtThisChar
000b20  b160              CBZ      r0,|L1.2876|
;;;921        const char *pText;
;;;922        pText  = (const char *)GUI_ALLOC_h2p(pObj->hText);
000b22  f9b40038          LDRSH    r0,[r4,#0x38]
000b26  f7fffffe          BL       GUI_ALLOC_h2p
000b2a  4605              MOV      r5,r0
;;;923        pText += pObj->CursorPosByte;
000b2c  f8b4004a          LDRH     r0,[r4,#0x4a]
000b30  4405              ADD      r5,r5,r0
;;;924        return _GetCharDistX(pObj, pText);
000b32  4629              MOV      r1,r5
000b34  4620              MOV      r0,r4
000b36  f7fffffe          BL       _GetCharDistX
                  |L1.2874|
;;;925      } else {
;;;926        return 2;
;;;927      }
;;;928    }
000b3a  bd70              POP      {r4-r6,pc}
                  |L1.2876|
000b3c  2002              MOVS     r0,#2                 ;926
000b3e  e7fc              B        |L1.2874|
;;;929    
                          ENDP

                  _IncrementBuffer PROC
;;;941    */
;;;942    static int _IncrementBuffer(MULTIEDIT_OBJ* pObj, unsigned AddBytes) {
000b40  e92d41f0          PUSH     {r4-r8,lr}
000b44  4604              MOV      r4,r0
000b46  460e              MOV      r6,r1
;;;943      WM_HMEM hNew;
;;;944      int NewSize;
;;;945      NewSize = pObj->BufferSize + AddBytes;
000b48  f8b40044          LDRH     r0,[r4,#0x44]
000b4c  eb000706          ADD      r7,r0,r6
;;;946      hNew    = GUI_ALLOC_Realloc(pObj->hText, NewSize);
000b50  f9b40038          LDRSH    r0,[r4,#0x38]
000b54  4639              MOV      r1,r7
000b56  f7fffffe          BL       GUI_ALLOC_Realloc
000b5a  4605              MOV      r5,r0
;;;947      if (hNew) {
000b5c  b185              CBZ      r5,|L1.2944|
;;;948        if (!(pObj->hText)) {
000b5e  8f20              LDRH     r0,[r4,#0x38]
000b60  b940              CBNZ     r0,|L1.2932|
;;;949          char* pText;
;;;950          pText  = (char*) GUI_ALLOC_h2p(hNew);
000b62  4628              MOV      r0,r5
000b64  f7fffffe          BL       GUI_ALLOC_h2p
000b68  4680              MOV      r8,r0
;;;951          *pText = 0;
000b6a  f04f0000          MOV      r0,#0
000b6e  f8880000          STRB     r0,[r8,#0]
;;;952        }
000b72  bf00              NOP      
                  |L1.2932|
;;;953        pObj->BufferSize = NewSize;
000b74  f8a47044          STRH     r7,[r4,#0x44]
;;;954        pObj->hText = hNew;
000b78  8725              STRH     r5,[r4,#0x38]
;;;955        return 1;
000b7a  2001              MOVS     r0,#1
                  |L1.2940|
;;;956      }
;;;957      return 0;
;;;958    }
000b7c  e8bd81f0          POP      {r4-r8,pc}
                  |L1.2944|
000b80  2000              MOVS     r0,#0                 ;957
000b82  e7fb              B        |L1.2940|
;;;959    
                          ENDP

                  _IsSpaceInBuffer PROC
;;;970    */
;;;971    static int _IsSpaceInBuffer(MULTIEDIT_OBJ* pObj, int BytesNeeded) {
000b84  e92d41f0          PUSH     {r4-r8,lr}
000b88  4604              MOV      r4,r0
000b8a  460d              MOV      r5,r1
;;;972      int NumBytes = 0;
000b8c  f04f0600          MOV      r6,#0
;;;973      if (pObj->hText) {
000b90  8f20              LDRH     r0,[r4,#0x38]
000b92  b138              CBZ      r0,|L1.2980|
;;;974        NumBytes = strlen((char*)GUI_ALLOC_h2p(pObj->hText));
000b94  f9b40038          LDRSH    r0,[r4,#0x38]
000b98  f7fffffe          BL       GUI_ALLOC_h2p
000b9c  4607              MOV      r7,r0
000b9e  f7fffffe          BL       strlen
000ba2  4606              MOV      r6,r0
                  |L1.2980|
;;;975      }
;;;976      BytesNeeded = (BytesNeeded + NumBytes + 1) - pObj->BufferSize;
000ba4  eb050006          ADD      r0,r5,r6
000ba8  f1000001          ADD      r0,r0,#1
000bac  f8b41044          LDRH     r1,[r4,#0x44]
000bb0  eba00501          SUB      r5,r0,r1
;;;977      if (BytesNeeded > 0) {
000bb4  2d00              CMP      r5,#0
000bb6  dd08              BLE      |L1.3018|
;;;978        if (!_IncrementBuffer(pObj, BytesNeeded + MULTIEDIT_REALLOC_SIZE)) {
000bb8  f1050110          ADD      r1,r5,#0x10
000bbc  4620              MOV      r0,r4
000bbe  f7fffffe          BL       _IncrementBuffer
000bc2  b910              CBNZ     r0,|L1.3018|
;;;979          return 0;
000bc4  2000              MOVS     r0,#0
                  |L1.3014|
;;;980        }
;;;981      }
;;;982      return 1;
;;;983    }
000bc6  e8bd81f0          POP      {r4-r8,pc}
                  |L1.3018|
000bca  2001              MOVS     r0,#1                 ;982
000bcc  e7fb              B        |L1.3014|
;;;984    
                          ENDP

                  _IsCharsAvailable PROC
;;;994    */
;;;995    static int _IsCharsAvailable(MULTIEDIT_OBJ* pObj, int CharsNeeded) {
000bce  b570              PUSH     {r4-r6,lr}
000bd0  4604              MOV      r4,r0
000bd2  460d              MOV      r5,r1
;;;996      if ((CharsNeeded > 0) && (pObj->MaxNumChars > 0)) {
000bd4  2d00              CMP      r5,#0
000bd6  dd11              BLE      |L1.3068|
000bd8  8f60              LDRH     r0,[r4,#0x3a]
000bda  2800              CMP      r0,#0
000bdc  dd0e              BLE      |L1.3068|
;;;997        int NumChars = 0;
000bde  f04f0600          MOV      r6,#0
;;;998        if (pObj->hText) {
000be2  8f20              LDRH     r0,[r4,#0x38]
000be4  b118              CBZ      r0,|L1.3054|
;;;999          NumChars = _GetNumChars(pObj);
000be6  4620              MOV      r0,r4
000be8  f7fffffe          BL       _GetNumChars
000bec  4606              MOV      r6,r0
                  |L1.3054|
;;;1000       }
;;;1001       if ((CharsNeeded + NumChars) > pObj->MaxNumChars) {
000bee  19a8              ADDS     r0,r5,r6
000bf0  8f61              LDRH     r1,[r4,#0x3a]
000bf2  4288              CMP      r0,r1
000bf4  dd01              BLE      |L1.3066|
;;;1002         return 0;
000bf6  2000              MOVS     r0,#0
                  |L1.3064|
;;;1003       }
;;;1004     }
;;;1005     return 1;
;;;1006   }
000bf8  bd70              POP      {r4-r6,pc}
                  |L1.3066|
000bfa  bf00              NOP                            ;1004
                  |L1.3068|
000bfc  2001              MOVS     r0,#1                 ;1005
000bfe  e7fb              B        |L1.3064|
;;;1007   
                          ENDP

                  _DeleteChar PROC
;;;1020   */
;;;1021   static void _DeleteChar(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj) {
000c00  e92d4ff3          PUSH     {r0,r1,r4-r11,lr}
000c04  b081              SUB      sp,sp,#4
000c06  460c              MOV      r4,r1
;;;1022     if (pObj->hText) {
000c08  8f20              LDRH     r0,[r4,#0x38]
000c0a  2800              CMP      r0,#0
000c0c  d05a              BEQ      |L1.3268|
;;;1023       unsigned CursorOffset;
;;;1024       char* s;
;;;1025       s = (char*) GUI_ALLOC_h2p(pObj->hText);
000c0e  f9b40038          LDRSH    r0,[r4,#0x38]
000c12  f7fffffe          BL       GUI_ALLOC_h2p
000c16  4607              MOV      r7,r0
;;;1026       CursorOffset = pObj->CursorPosByte;
000c18  f8b4904a          LDRH     r9,[r4,#0x4a]
;;;1027       if (CursorOffset < strlen(s)) {
000c1c  4638              MOV      r0,r7
000c1e  f7fffffe          BL       strlen
000c22  4548              CMP      r0,r9
000c24  d94d              BLS      |L1.3266|
;;;1028         char *pCursor, *pLine, *pEndLine;
;;;1029         int CursorLine, NumChars, NumBytes;
;;;1030         pCursor    = s + CursorOffset;
000c26  eb070809          ADD      r8,r7,r9
;;;1031         CursorLine = pObj->CursorLine;
000c2a  f8b40046          LDRH     r0,[r4,#0x46]
000c2e  9000              STR      r0,[sp,#0]
;;;1032         pLine      = _GetpLine(hObj, pObj, CursorLine);
000c30  4621              MOV      r1,r4
000c32  e9dd2000          LDRD     r2,r0,[sp,#0]
000c36  f7fffffe          BL       _GetpLine
000c3a  4605              MOV      r5,r0
;;;1033         NumChars   = _WrapGetNumCharsDisp(hObj, pObj, pLine);
000c3c  462a              MOV      r2,r5
000c3e  4621              MOV      r1,r4
000c40  9801              LDR      r0,[sp,#4]
000c42  f7fffffe          BL       _WrapGetNumCharsDisp
000c46  4683              MOV      r11,r0
;;;1034         pEndLine   = pLine + GUI_UC__NumChars2NumBytes(pLine, NumChars);
000c48  4659              MOV      r1,r11
000c4a  4628              MOV      r0,r5
000c4c  f7fffffe          BL       GUI_UC__NumChars2NumBytes
000c50  eb000a05          ADD      r10,r0,r5
;;;1035         pLine      = pLine + _WrapGetNumBytesToNextLine(hObj, pObj, pLine);
000c54  462a              MOV      r2,r5
000c56  4621              MOV      r1,r4
000c58  9801              LDR      r0,[sp,#4]
000c5a  f7fffffe          BL       _WrapGetNumBytesToNextLine
000c5e  4405              ADD      r5,r5,r0
;;;1036         if (pCursor == pEndLine) {
000c60  45d0              CMP      r8,r10
000c62  d102              BNE      |L1.3178|
;;;1037           NumBytes = pLine - pEndLine;
000c64  eba5060a          SUB      r6,r5,r10
000c68  e003              B        |L1.3186|
                  |L1.3178|
;;;1038         } else {
;;;1039           NumBytes = GUI_UC_GetCharSize(pCursor);
000c6a  4640              MOV      r0,r8
000c6c  f7fffffe          BL       GUI_UC_GetCharSize
000c70  4606              MOV      r6,r0
                  |L1.3186|
;;;1040         }
;;;1041         NumChars = GUI_UC__NumBytes2NumChars(pCursor, NumBytes);
000c72  4631              MOV      r1,r6
000c74  4640              MOV      r0,r8
000c76  f7fffffe          BL       GUI_UC__NumBytes2NumChars
000c7a  4683              MOV      r11,r0
;;;1042         strcpy(pCursor, pCursor + NumBytes);
000c7c  eb080106          ADD      r1,r8,r6
000c80  4640              MOV      r0,r8
000c82  f7fffffe          BL       strcpy
;;;1043         WM_NotifyParent(hObj, WM_NOTIFICATION_VALUE_CHANGED);
000c86  2105              MOVS     r1,#5
000c88  9801              LDR      r0,[sp,#4]
000c8a  f7fffffe          BL       WM_NotifyParent
;;;1044         pObj->NumChars -= NumChars;
000c8e  8fa0              LDRH     r0,[r4,#0x3c]
000c90  eba0000b          SUB      r0,r0,r11
000c94  87a0              STRH     r0,[r4,#0x3c]
;;;1045         _InvalidateNumLines(pObj);
000c96  4620              MOV      r0,r4
000c98  f7fffffe          BL       _InvalidateNumLines
;;;1046         _InvalidateTextSizeX(pObj);
000c9c  4620              MOV      r0,r4
000c9e  f7fffffe          BL       _InvalidateTextSizeX
;;;1047         _InvalidateCursorXY(pObj); /* Invalidate X/Y position */
000ca2  4620              MOV      r0,r4
000ca4  f7fffffe          BL       _InvalidateCursorXY
;;;1048         _ClearCache(pObj);
000ca8  4620              MOV      r0,r4
000caa  f7fffffe          BL       _ClearCache
;;;1049         pObj->CursorLine = _GetCursorLine(hObj, pObj, s, pObj->CursorPosChar);
000cae  f8b43048          LDRH     r3,[r4,#0x48]
000cb2  463a              MOV      r2,r7
000cb4  4621              MOV      r1,r4
000cb6  9801              LDR      r0,[sp,#4]
000cb8  f7fffffe          BL       _GetCursorLine
000cbc  f8a40046          STRH     r0,[r4,#0x46]
;;;1050       }
000cc0  bf00              NOP      
                  |L1.3266|
;;;1051     }
000cc2  bf00              NOP      
                  |L1.3268|
;;;1052   }
000cc4  e8bd8ffe          POP      {r1-r11,pc}
;;;1053   
                          ENDP

                  _InsertChar PROC
;;;1059   */
;;;1060   static int _InsertChar(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj, U16 Char) {
000cc8  e92d47f0          PUSH     {r4-r10,lr}
000ccc  4680              MOV      r8,r0
000cce  460c              MOV      r4,r1
000cd0  4616              MOV      r6,r2
;;;1061     if (_IsCharsAvailable(pObj, 1)) {
000cd2  f04f0101          MOV      r1,#1
000cd6  4620              MOV      r0,r4
000cd8  f7fffffe          BL       _IsCharsAvailable
000cdc  2800              CMP      r0,#0
000cde  d036              BEQ      |L1.3406|
;;;1062       int BytesNeeded;
;;;1063       BytesNeeded = GUI_UC__CalcSizeOfChar(Char);
000ce0  4630              MOV      r0,r6
000ce2  f7fffffe          BL       GUI_UC__CalcSizeOfChar
000ce6  4607              MOV      r7,r0
;;;1064       if (_IsSpaceInBuffer(pObj, BytesNeeded)) {
000ce8  4639              MOV      r1,r7
000cea  4620              MOV      r0,r4
000cec  f7fffffe          BL       _IsSpaceInBuffer
000cf0  b360              CBZ      r0,|L1.3404|
;;;1065         int CursorOffset;
;;;1066         char* pText;
;;;1067         pText = (char*) GUI_ALLOC_h2p(pObj->hText);
000cf2  f9b40038          LDRSH    r0,[r4,#0x38]
000cf6  f7fffffe          BL       GUI_ALLOC_h2p
000cfa  4605              MOV      r5,r0
;;;1068         CursorOffset = pObj->CursorPosByte;
000cfc  f8b4904a          LDRH     r9,[r4,#0x4a]
;;;1069         pText += CursorOffset;
000d00  444d              ADD      r5,r5,r9
;;;1070         memmove(pText + BytesNeeded, pText, strlen(pText) + 1);
000d02  4628              MOV      r0,r5
000d04  f7fffffe          BL       strlen
000d08  f1000a01          ADD      r10,r0,#1
000d0c  19e8              ADDS     r0,r5,r7
000d0e  4652              MOV      r2,r10
000d10  4629              MOV      r1,r5
000d12  f7fffffe          BL       __aeabi_memmove
;;;1071         GUI_UC_Encode(pText, Char);
000d16  4631              MOV      r1,r6
000d18  4628              MOV      r0,r5
000d1a  f7fffffe          BL       GUI_UC_Encode
;;;1072         WM_NotifyParent(hObj, WM_NOTIFICATION_VALUE_CHANGED);
000d1e  2105              MOVS     r1,#5
000d20  4640              MOV      r0,r8
000d22  f7fffffe          BL       WM_NotifyParent
;;;1073         pObj->NumChars += 1;
000d26  8fa0              LDRH     r0,[r4,#0x3c]
000d28  f1000001          ADD      r0,r0,#1
000d2c  87a0              STRH     r0,[r4,#0x3c]
;;;1074         _InvalidateNumLines(pObj);
000d2e  4620              MOV      r0,r4
000d30  f7fffffe          BL       _InvalidateNumLines
;;;1075         _InvalidateTextSizeX(pObj);
000d34  4620              MOV      r0,r4
000d36  e001              B        |L1.3388|
                  |L1.3384|
                          DCD      GUI_Context
                  |L1.3388|
000d3c  f7fffffe          BL       _InvalidateTextSizeX
;;;1076         _ClearCache(pObj);
000d40  4620              MOV      r0,r4
000d42  f7fffffe          BL       _ClearCache
;;;1077         return 1;
000d46  2001              MOVS     r0,#1
                  |L1.3400|
;;;1078       }
;;;1079     }
;;;1080     return 0;
;;;1081   }
000d48  e8bd87f0          POP      {r4-r10,pc}
                  |L1.3404|
000d4c  bf00              NOP                            ;1079
                  |L1.3406|
000d4e  2000              MOVS     r0,#0                 ;1080
000d50  e7fa              B        |L1.3400|
;;;1082   
                          ENDP

                  _MULTIEDIT_Paint PROC
;;;1092   */
;;;1093   static void _MULTIEDIT_Paint(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ * pObj) {
000d52  e92d4ff3          PUSH     {r0,r1,r4-r11,lr}
000d56  b08d              SUB      sp,sp,#0x34
000d58  460c              MOV      r4,r1
;;;1094     int ScrollPosX, ScrollPosY, EffectSize, HBorder;
;;;1095     int x, y, xOff, yOff, ColorIndex, FontSizeY;
;;;1096     GUI_RECT r, rClip;
;;;1097     const GUI_RECT *prOldClip;
;;;1098     /* Init some values */
;;;1099     GUI_SetFont(pObj->pFont);
000d5a  6f20              LDR      r0,[r4,#0x70]
000d5c  f7fffffe          BL       GUI_SetFont
;;;1100     FontSizeY  = GUI_GetFontDistY();
000d60  f7fffffe          BL       GUI_GetFontDistY
000d64  4682              MOV      r10,r0
;;;1101     ScrollPosX = pObj->ScrollStateH.v;
000d66  6ea0              LDR      r0,[r4,#0x68]
000d68  900c              STR      r0,[sp,#0x30]
;;;1102     ScrollPosY = pObj->ScrollStateV.v;
000d6a  6de5              LDR      r5,[r4,#0x5c]
;;;1103     EffectSize = pObj->Widget.pEffect->EffectSize;
000d6c  6a20              LDR      r0,[r4,#0x20]
000d6e  6946              LDR      r6,[r0,#0x14]
;;;1104     HBorder    = pObj->HBorder;
000d70  f8949077          LDRB     r9,[r4,#0x77]
;;;1105     xOff       = EffectSize + HBorder - ScrollPosX ;
000d74  eb060109          ADD      r1,r6,r9
000d78  980c              LDR      r0,[sp,#0x30]
000d7a  eba10b00          SUB      r11,r1,r0
;;;1106     yOff       = EffectSize - ScrollPosY * FontSizeY;
000d7e  fb05601a          MLS      r0,r5,r10,r6
000d82  9009              STR      r0,[sp,#0x24]
;;;1107     ColorIndex = ((pObj->Flags & MULTIEDIT_SF_READONLY) ? 1 : 0);
000d84  f8940074          LDRB     r0,[r4,#0x74]
000d88  f0000001          AND      r0,r0,#1
000d8c  9008              STR      r0,[sp,#0x20]
;;;1108     /* Set colors and draw the background */
;;;1109     LCD_SetBkColor(pObj->aBkColor[ColorIndex]);
000d8e  f1040128          ADD      r1,r4,#0x28
000d92  9a08              LDR      r2,[sp,#0x20]
000d94  f8510022          LDR      r0,[r1,r2,LSL #2]
000d98  f7fffffe          BL       LCD_SetBkColor
;;;1110     LCD_SetColor(pObj->aColor[ColorIndex]);
000d9c  f1040130          ADD      r1,r4,#0x30
000da0  9a08              LDR      r2,[sp,#0x20]
000da2  f8510022          LDR      r0,[r1,r2,LSL #2]
000da6  f7fffffe          BL       LCD_SetColor
;;;1111     GUI_Clear();
000daa  f7fffffe          BL       GUI_Clear
;;;1112     /* Draw the text if necessary */
;;;1113     rClip.x0 = EffectSize + HBorder;
000dae  eb060009          ADD      r0,r6,r9
000db2  b200              SXTH     r0,r0
000db4  f8ad0010          STRH     r0,[sp,#0x10]
;;;1114     rClip.y0 = EffectSize;
000db8  b230              SXTH     r0,r6
000dba  f8ad0012          STRH     r0,[sp,#0x12]
;;;1115     rClip.x1 = WM_GetWindowSizeX(hObj) - EffectSize - HBorder - 1;
000dbe  980d              LDR      r0,[sp,#0x34]
000dc0  f7fffffe          BL       WM_GetWindowSizeX
000dc4  eba00006          SUB      r0,r0,r6
000dc8  eba00009          SUB      r0,r0,r9
000dcc  f1a00001          SUB      r0,r0,#1
000dd0  b200              SXTH     r0,r0
000dd2  f8ad0014          STRH     r0,[sp,#0x14]
;;;1116     rClip.y1 = WM_GetWindowSizeY(hObj) - EffectSize - 1;
000dd6  980d              LDR      r0,[sp,#0x34]
000dd8  f7fffffe          BL       WM_GetWindowSizeY
000ddc  eba00006          SUB      r0,r0,r6
000de0  f1a00001          SUB      r0,r0,#1
000de4  b200              SXTH     r0,r0
000de6  f8ad0016          STRH     r0,[sp,#0x16]
;;;1117     prOldClip = WM_SetUserClipRect(&rClip);
000dea  a804              ADD      r0,sp,#0x10
000dec  f7fffffe          BL       WM_SetUserClipRect
000df0  9003              STR      r0,[sp,#0xc]
;;;1118     if (pObj->hText) {
000df2  8f20              LDRH     r0,[r4,#0x38]
000df4  2800              CMP      r0,#0
000df6  d06a              BEQ      |L1.3790|
;;;1119       const char* pText;
;;;1120       int Line = 0;
000df8  f04f0800          MOV      r8,#0
;;;1121       int xSize       = _GetXSize(hObj, pObj);
000dfc  4621              MOV      r1,r4
000dfe  980d              LDR      r0,[sp,#0x34]
000e00  f7fffffe          BL       _GetXSize
000e04  9002              STR      r0,[sp,#8]
;;;1122       int NumVisLines = _GetNumVisLines(hObj, pObj);
000e06  4621              MOV      r1,r4
000e08  980d              LDR      r0,[sp,#0x34]
000e0a  f7fffffe          BL       _GetNumVisLines
000e0e  9001              STR      r0,[sp,#4]
;;;1123       /* Get the text */
;;;1124       pText = (const char *)GUI_ALLOC_h2p(pObj->hText);
000e10  f9b40038          LDRSH    r0,[r4,#0x38]
000e14  f7fffffe          BL       GUI_ALLOC_h2p
000e18  4607              MOV      r7,r0
;;;1125       /* Set the rectangle for drawing */
;;;1126       r.x0 = xOff;
000e1a  fa0ff08b          SXTH     r0,r11
000e1e  f8ad0018          STRH     r0,[sp,#0x18]
;;;1127       r.y0 = EffectSize;
000e22  b230              SXTH     r0,r6
000e24  f8ad001a          STRH     r0,[sp,#0x1a]
;;;1128       r.x1 = xSize + EffectSize + HBorder - 1;
000e28  9802              LDR      r0,[sp,#8]
000e2a  4430              ADD      r0,r0,r6
000e2c  4448              ADD      r0,r0,r9
000e2e  f1a00001          SUB      r0,r0,#1
000e32  b200              SXTH     r0,r0
000e34  f8ad001c          STRH     r0,[sp,#0x1c]
;;;1129       r.y1 = pObj->Widget.Win.Rect.y1 - pObj->Widget.Win.Rect.y0 + 1;
000e38  88e0              LDRH     r0,[r4,#6]
000e3a  8861              LDRH     r1,[r4,#2]
000e3c  eba00001          SUB      r0,r0,r1
000e40  f1000001          ADD      r0,r0,#1
000e44  b200              SXTH     r0,r0
000e46  f8ad001e          STRH     r0,[sp,#0x1e]
;;;1130       /* Use cached position of first visible byte if possible */
;;;1131       if (ScrollPosY >= pObj->CacheFirstVisibleLine) {
000e4a  f8b40054          LDRH     r0,[r4,#0x54]
000e4e  42a8              CMP      r0,r5
000e50  dc07              BGT      |L1.3682|
;;;1132         if (pObj->CacheFirstVisibleByte) {
000e52  f8b40056          LDRH     r0,[r4,#0x56]
000e56  b120              CBZ      r0,|L1.3682|
;;;1133           pText += pObj->CacheFirstVisibleByte;
000e58  f8b40056          LDRH     r0,[r4,#0x56]
000e5c  4407              ADD      r7,r7,r0
;;;1134           Line   = pObj->CacheFirstVisibleLine;
000e5e  f8b48054          LDRH     r8,[r4,#0x54]
                  |L1.3682|
;;;1135         }
;;;1136       }
;;;1137       /* Do the drawing of the text */
;;;1138       do {
000e62  bf00              NOP      
                  |L1.3684|
;;;1139         /* Cache the position of the first visible byte and the depending line number */
;;;1140         if (pObj->CacheFirstVisibleLine != ScrollPosY) {
000e64  f8b40054          LDRH     r0,[r4,#0x54]
000e68  42a8              CMP      r0,r5
000e6a  d00b              BEQ      |L1.3716|
;;;1141           if (Line == ScrollPosY) {
000e6c  45a8              CMP      r8,r5
000e6e  d109              BNE      |L1.3716|
;;;1142             pObj->CacheFirstVisibleByte = pText - (const char *)GUI_ALLOC_h2p(pObj->hText);
000e70  f9b40038          LDRSH    r0,[r4,#0x38]
000e74  f7fffffe          BL       GUI_ALLOC_h2p
000e78  eba70000          SUB      r0,r7,r0
000e7c  f8a40056          STRH     r0,[r4,#0x56]
;;;1143             pObj->CacheFirstVisibleLine = ScrollPosY;
000e80  f8a45054          STRH     r5,[r4,#0x54]
                  |L1.3716|
;;;1144           }
;;;1145         }
;;;1146         /* Draw it */
;;;1147         if ((Line >= ScrollPosY) && ((Line - ScrollPosY) <= NumVisLines)) {
000e84  45a8              CMP      r8,r5
000e86  db10              BLT      |L1.3754|
000e88  eba80105          SUB      r1,r8,r5
000e8c  9801              LDR      r0,[sp,#4]
000e8e  4281              CMP      r1,r0
000e90  dc0b              BGT      |L1.3754|
;;;1148           _DispString(hObj, pObj, pText, &r);
000e92  ab06              ADD      r3,sp,#0x18
000e94  463a              MOV      r2,r7
000e96  4621              MOV      r1,r4
000e98  980d              LDR      r0,[sp,#0x34]
000e9a  f7fffffe          BL       _DispString
;;;1149           r.y0 += FontSizeY;  /* Next line */
000e9e  f8bd001a          LDRH     r0,[sp,#0x1a]
000ea2  4450              ADD      r0,r0,r10
000ea4  b200              SXTH     r0,r0
000ea6  f8ad001a          STRH     r0,[sp,#0x1a]
                  |L1.3754|
;;;1150         }
;;;1151         pText += _WrapGetNumBytesToNextLine(hObj, pObj, pText);
000eaa  463a              MOV      r2,r7
000eac  4621              MOV      r1,r4
000eae  980d              LDR      r0,[sp,#0x34]
000eb0  f7fffffe          BL       _WrapGetNumBytesToNextLine
000eb4  4407              ADD      r7,r7,r0
;;;1152         Line++;
000eb6  f1080801          ADD      r8,r8,#1
;;;1153       } while (GUI_UC_GetCharCode(pText) && ((Line - ScrollPosY) <= NumVisLines));
000eba  4638              MOV      r0,r7
000ebc  f7fffffe          BL       GUI_UC_GetCharCode
000ec0  b120              CBZ      r0,|L1.3788|
000ec2  eba80105          SUB      r1,r8,r5
000ec6  9801              LDR      r0,[sp,#4]
000ec8  4281              CMP      r1,r0
000eca  ddcb              BLE      |L1.3684|
                  |L1.3788|
;;;1154     }
000ecc  bf00              NOP      
                  |L1.3790|
;;;1155     /* Draw cursor if necessary */
;;;1156     if (WM_HasFocus(hObj)) {
000ece  980d              LDR      r0,[sp,#0x34]
000ed0  f7fffffe          BL       WM_HasFocus
000ed4  b370              CBZ      r0,|L1.3892|
;;;1157       _GetCursorXY(hObj, pObj, &x, &y);
000ed6  ab0a              ADD      r3,sp,#0x28
000ed8  aa0b              ADD      r2,sp,#0x2c
000eda  4621              MOV      r1,r4
000edc  980d              LDR      r0,[sp,#0x34]
000ede  f7fffffe          BL       _GetCursorXY
;;;1158       r.x0 = x + xOff;
000ee2  980b              LDR      r0,[sp,#0x2c]
000ee4  4458              ADD      r0,r0,r11
000ee6  b200              SXTH     r0,r0
000ee8  f8ad0018          STRH     r0,[sp,#0x18]
;;;1159       r.y0 = y + yOff;
000eec  e9dd0109          LDRD     r0,r1,[sp,#0x24]
000ef0  4408              ADD      r0,r0,r1
000ef2  b200              SXTH     r0,r0
000ef4  f8ad001a          STRH     r0,[sp,#0x1a]
;;;1160       r.x1 = r.x0 + _GetCursorSizeX(hObj, pObj) - 1;
000ef8  4621              MOV      r1,r4
000efa  980d              LDR      r0,[sp,#0x34]
000efc  f7fffffe          BL       _GetCursorSizeX
000f00  f8bd1018          LDRH     r1,[sp,#0x18]
000f04  4408              ADD      r0,r0,r1
000f06  f1a00001          SUB      r0,r0,#1
000f0a  b200              SXTH     r0,r0
000f0c  f8ad001c          STRH     r0,[sp,#0x1c]
;;;1161       r.y1 = r.y0 + FontSizeY - 1;
000f10  f8bd001a          LDRH     r0,[sp,#0x1a]
000f14  4450              ADD      r0,r0,r10
000f16  f1a00001          SUB      r0,r0,#1
000f1a  b200              SXTH     r0,r0
000f1c  f8ad001e          STRH     r0,[sp,#0x1e]
;;;1162       GUI_InvertRect(r.x0, r.y0, r.x1, r.y1);
000f20  f9bd301e          LDRSH    r3,[sp,#0x1e]
000f24  f9bd201c          LDRSH    r2,[sp,#0x1c]
000f28  f9bd101a          LDRSH    r1,[sp,#0x1a]
000f2c  f9bd0018          LDRSH    r0,[sp,#0x18]
000f30  f7fffffe          BL       GUI_InvertRect
                  |L1.3892|
;;;1163     }
;;;1164     WM_SetUserClipRect(prOldClip);
000f34  9803              LDR      r0,[sp,#0xc]
000f36  f7fffffe          BL       WM_SetUserClipRect
;;;1165     /* Draw the 3D effect (if configured) */
;;;1166     WIDGET__EFFECT_DrawDown(&pObj->Widget);
000f3a  4620              MOV      r0,r4
000f3c  f7fffffe          BL       WIDGET__EFFECT_DrawDown
;;;1167   }
000f40  b00f              ADD      sp,sp,#0x3c
000f42  e8bd8ff0          POP      {r4-r11,pc}
;;;1168   
                          ENDP

                  _OnTouch PROC
;;;1172   */
;;;1173   static void _OnTouch(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj, WM_MESSAGE*pMsg) {
000f46  e92d5ff0          PUSH     {r4-r12,lr}
000f4a  4681              MOV      r9,r0
000f4c  460c              MOV      r4,r1
000f4e  4616              MOV      r6,r2
;;;1174     int Notification;
;;;1175     const GUI_PID_STATE* pState = (const GUI_PID_STATE*)pMsg->Data.p;
000f50  68b7              LDR      r7,[r6,#8]
;;;1176     if (pMsg->Data.p) {  /* Something happened in our area (pressed or released) */
000f52  68b0              LDR      r0,[r6,#8]
000f54  b328              CBZ      r0,|L1.4002|
;;;1177       if (pState->Pressed) {
000f56  7a38              LDRB     r0,[r7,#8]
000f58  b300              CBZ      r0,|L1.3996|
;;;1178         int Effect, xPos, yPos;
;;;1179         Effect = pObj->Widget.pEffect->EffectSize;
000f5a  6a20              LDR      r0,[r4,#0x20]
000f5c  f8d08014          LDR      r8,[r0,#0x14]
;;;1180         xPos   = pState->x + pObj->ScrollStateH.v - Effect - pObj->HBorder;
000f60  6839              LDR      r1,[r7,#0]
000f62  6ea0              LDR      r0,[r4,#0x68]
000f64  4408              ADD      r0,r0,r1
000f66  eba00008          SUB      r0,r0,r8
000f6a  f8941077          LDRB     r1,[r4,#0x77]
000f6e  eba00a01          SUB      r10,r0,r1
;;;1181         yPos   = pState->y + pObj->ScrollStateV.v * GUI_GetYDistOfFont(pObj->pFont) - Effect;
000f72  6f20              LDR      r0,[r4,#0x70]
000f74  f7fffffe          BL       GUI_GetYDistOfFont
000f78  687a              LDR      r2,[r7,#4]
000f7a  6de1              LDR      r1,[r4,#0x5c]
000f7c  fb012000          MLA      r0,r1,r0,r2
000f80  eba00b08          SUB      r11,r0,r8
;;;1182         _SetCursorXY(hObj, pObj, xPos, yPos);
000f84  465b              MOV      r3,r11
000f86  4652              MOV      r2,r10
000f88  4621              MOV      r1,r4
000f8a  4648              MOV      r0,r9
000f8c  f7fffffe          BL       _SetCursorXY
;;;1183         _Invalidate(hObj);
000f90  4648              MOV      r0,r9
000f92  f7fffffe          BL       _Invalidate
;;;1184         Notification = WM_NOTIFICATION_CLICKED;
000f96  f04f0501          MOV      r5,#1
;;;1185       } else {
000f9a  e004              B        |L1.4006|
                  |L1.3996|
;;;1186         Notification = WM_NOTIFICATION_RELEASED;
000f9c  f04f0502          MOV      r5,#2
000fa0  e001              B        |L1.4006|
                  |L1.4002|
;;;1187       }
;;;1188     } else {
;;;1189       Notification = WM_NOTIFICATION_MOVED_OUT;
000fa2  f04f0503          MOV      r5,#3
                  |L1.4006|
;;;1190     }
;;;1191     WM_NotifyParent(hObj, Notification);
000fa6  4629              MOV      r1,r5
000fa8  4648              MOV      r0,r9
000faa  f7fffffe          BL       WM_NotifyParent
;;;1192   }
000fae  e8bd9ff0          POP      {r4-r12,pc}
;;;1193   
                          ENDP

                  _AddKey PROC
;;;1200   */
;;;1201   static int _AddKey(MULTIEDIT_HANDLE hObj, U16 Key) {
000fb2  e92d41f0          PUSH     {r4-r8,lr}
000fb6  4606              MOV      r6,r0
000fb8  460d              MOV      r5,r1
;;;1202     int r = 0;               /* Key has not been consumed */
000fba  f04f0700          MOV      r7,#0
;;;1203     MULTIEDIT_OBJ* pObj;
;;;1204     pObj = MULTIEDIT_H2P(hObj);
000fbe  4630              MOV      r0,r6
000fc0  f7fffffe          BL       GUI_ALLOC_h2p
000fc4  4604              MOV      r4,r0
;;;1205     switch (Key) {
000fc6  4628              MOV      r0,r5
000fc8  2d13              CMP      r5,#0x13
000fca  d01d              BEQ      |L1.4104|
000fcc  dc0c              BGT      |L1.4072|
000fce  2810              CMP      r0,#0x10
000fd0  d02b              BEQ      |L1.4138|
000fd2  dc04              BGT      |L1.4062|
000fd4  2808              CMP      r0,#8
000fd6  d040              BEQ      |L1.4186|
000fd8  280d              CMP      r0,#0xd
                  |L1.4058|
000fda  d16e              BNE      |L1.4282|
000fdc  e077              B        |L1.4302|
                  |L1.4062|
000fde  2811              CMP      r0,#0x11
000fe0  d00b              BEQ      |L1.4090|
000fe2  2812              CMP      r0,#0x12
000fe4  d1f9              BNE      |L1.4058|
000fe6  e016              B        |L1.4118|
                  |L1.4072|
000fe8  3817              SUBS     r0,r0,#0x17
000fea  2808              CMP      r0,#8
000fec  d265              BCS      |L1.4282|
000fee  e8dff000          TBB      [pc,r0]
000ff2  2d26              DCB      0x2d,0x26
000ff4  93939293          DCB      0x93,0x93,0x92,0x93
000ff8  584c              DCB      0x58,0x4c
                  |L1.4090|
;;;1206     case GUI_KEY_UP:
;;;1207       _MoveCursorUp(hObj, pObj);
000ffa  4621              MOV      r1,r4
000ffc  4630              MOV      r0,r6
000ffe  f7fffffe          BL       _MoveCursorUp
;;;1208       r = 1;               /* Key has been consumed */
001002  f04f0701          MOV      r7,#1
;;;1209       break;
001006  e0a7              B        |L1.4440|
                  |L1.4104|
;;;1210     case GUI_KEY_DOWN:
;;;1211       _MoveCursorDown(hObj, pObj);
001008  4621              MOV      r1,r4
00100a  4630              MOV      r0,r6
00100c  f7fffffe          BL       _MoveCursorDown
;;;1212       r = 1;               /* Key has been consumed */
001010  f04f0701          MOV      r7,#1
;;;1213       break;
001014  e0a0              B        |L1.4440|
                  |L1.4118|
;;;1214     case GUI_KEY_RIGHT:
;;;1215       _SetCursorPos(hObj, pObj, pObj->CursorPosChar + 1);
001016  f8b40048          LDRH     r0,[r4,#0x48]
00101a  1c42              ADDS     r2,r0,#1
00101c  4621              MOV      r1,r4
00101e  4630              MOV      r0,r6
001020  f7fffffe          BL       _SetCursorPos
;;;1216       r = 1;               /* Key has been consumed */
001024  f04f0701          MOV      r7,#1
;;;1217       break;
001028  e096              B        |L1.4440|
                  |L1.4138|
;;;1218     case GUI_KEY_LEFT:
;;;1219       _SetCursorPos(hObj, pObj, pObj->CursorPosChar - 1);
00102a  f8b40048          LDRH     r0,[r4,#0x48]
00102e  1e42              SUBS     r2,r0,#1
001030  4621              MOV      r1,r4
001032  4630              MOV      r0,r6
001034  f7fffffe          BL       _SetCursorPos
;;;1220       r = 1;               /* Key has been consumed */
001038  f04f0701          MOV      r7,#1
;;;1221       break;
00103c  e08c              B        |L1.4440|
;;;1222     case GUI_KEY_END:
;;;1223       _MoveCursor2LineEnd(hObj, pObj);
00103e  4621              MOV      r1,r4
001040  4630              MOV      r0,r6
001042  f7fffffe          BL       _MoveCursor2LineEnd
;;;1224       r = 1;               /* Key has been consumed */
001046  f04f0701          MOV      r7,#1
;;;1225       break;
00104a  e085              B        |L1.4440|
;;;1226     case GUI_KEY_HOME:
;;;1227       _MoveCursor2LinePos1(hObj, pObj);
00104c  4621              MOV      r1,r4
00104e  4630              MOV      r0,r6
001050  f7fffffe          BL       _MoveCursor2LinePos1
;;;1228       r = 1;               /* Key has been consumed */
001054  f04f0701          MOV      r7,#1
;;;1229       break;
001058  e07e              B        |L1.4440|
                  |L1.4186|
;;;1230     case GUI_KEY_BACKSPACE:
;;;1231       if (!(pObj->Flags & MULTIEDIT_SF_READONLY)) {
00105a  f8940074          LDRB     r0,[r4,#0x74]
00105e  f0100f01          TST      r0,#1
001062  d111              BNE      |L1.4232|
;;;1232         if (pObj->CursorPosChar > pObj->NumCharsPrompt) {
001064  f8b40048          LDRH     r0,[r4,#0x48]
001068  8fe1              LDRH     r1,[r4,#0x3e]
00106a  4288              CMP      r0,r1
00106c  dd0a              BLE      |L1.4228|
;;;1233           _SetCursorPos(hObj, pObj, pObj->CursorPosChar - 1);
00106e  f8b40048          LDRH     r0,[r4,#0x48]
001072  1e42              SUBS     r2,r0,#1
001074  4621              MOV      r1,r4
001076  4630              MOV      r0,r6
001078  f7fffffe          BL       _SetCursorPos
;;;1234           _DeleteChar(hObj, pObj);
00107c  4621              MOV      r1,r4
00107e  4630              MOV      r0,r6
001080  f7fffffe          BL       _DeleteChar
                  |L1.4228|
;;;1235         }
;;;1236         r = 1;               /* Key has been consumed */
001084  f04f0701          MOV      r7,#1
                  |L1.4232|
;;;1237       }
;;;1238       break;
001088  e066              B        |L1.4440|
;;;1239     case GUI_KEY_DELETE:
;;;1240       if (!(pObj->Flags & MULTIEDIT_SF_READONLY)) {
00108a  f8940074          LDRB     r0,[r4,#0x74]
00108e  f0100f01          TST      r0,#1
001092  d105              BNE      |L1.4256|
;;;1241         _DeleteChar(hObj, pObj);
001094  4621              MOV      r1,r4
001096  4630              MOV      r0,r6
001098  f7fffffe          BL       _DeleteChar
;;;1242         r = 1;               /* Key has been consumed */
00109c  f04f0701          MOV      r7,#1
                  |L1.4256|
;;;1243       }
;;;1244       break;
0010a0  e05a              B        |L1.4440|
;;;1245     case GUI_KEY_INSERT:
;;;1246       if (!(pObj->Flags & MULTIEDIT_CF_INSERT)) {
0010a2  f8940074          LDRB     r0,[r4,#0x74]
0010a6  f0100f04          TST      r0,#4
0010aa  d107              BNE      |L1.4284|
;;;1247         pObj->Flags |= MULTIEDIT_CF_INSERT;
0010ac  f8940074          LDRB     r0,[r4,#0x74]
0010b0  f0400004          ORR      r0,r0,#4
0010b4  f8840074          STRB     r0,[r4,#0x74]
0010b8  e006              B        |L1.4296|
                  |L1.4282|
0010ba  e02d              B        |L1.4376|
                  |L1.4284|
;;;1248       } else {
;;;1249         pObj->Flags &= ~MULTIEDIT_CF_INSERT;
0010bc  f8940074          LDRB     r0,[r4,#0x74]
0010c0  f0200004          BIC      r0,r0,#4
0010c4  f8840074          STRB     r0,[r4,#0x74]
                  |L1.4296|
;;;1250       }
;;;1251       r = 1;               /* Key has been consumed */
0010c8  f04f0701          MOV      r7,#1
;;;1252       break;
0010cc  e044              B        |L1.4440|
                  |L1.4302|
;;;1253     case GUI_KEY_ENTER:
;;;1254       if (pObj->Flags & MULTIEDIT_SF_READONLY) {
0010ce  f8940074          LDRB     r0,[r4,#0x74]
0010d2  f0100f01          TST      r0,#1
0010d6  d004              BEQ      |L1.4322|
;;;1255         _MoveCursor2NextLine(hObj, pObj);
0010d8  4621              MOV      r1,r4
0010da  4630              MOV      r0,r6
0010dc  f7fffffe          BL       _MoveCursor2NextLine
0010e0  e016              B        |L1.4368|
                  |L1.4322|
;;;1256       } else {
;;;1257         if (_InsertChar(hObj, pObj, (U8)('\n'))) {
0010e2  220a              MOVS     r2,#0xa
0010e4  4621              MOV      r1,r4
0010e6  4630              MOV      r0,r6
0010e8  f7fffffe          BL       _InsertChar
0010ec  b180              CBZ      r0,|L1.4368|
;;;1258           if (pObj->Flags & MULTIEDIT_SF_PASSWORD) {
0010ee  f8940074          LDRB     r0,[r4,#0x74]
0010f2  f0100f20          TST      r0,#0x20
0010f6  d007              BEQ      |L1.4360|
;;;1259             _SetCursorPos(hObj, pObj, pObj->CursorPosChar + 1);
0010f8  f8b40048          LDRH     r0,[r4,#0x48]
0010fc  1c42              ADDS     r2,r0,#1
0010fe  4621              MOV      r1,r4
001100  4630              MOV      r0,r6
001102  f7fffffe          BL       _SetCursorPos
001106  e003              B        |L1.4368|
                  |L1.4360|
;;;1260           } else {
;;;1261             _MoveCursor2NextLine(hObj, pObj);
001108  4621              MOV      r1,r4
00110a  4630              MOV      r0,r6
00110c  f7fffffe          BL       _MoveCursor2NextLine
                  |L1.4368|
;;;1262           }
;;;1263         }
;;;1264       }
;;;1265       r = 1;               /* Key has been consumed */
001110  f04f0701          MOV      r7,#1
;;;1266       break;
001114  e020              B        |L1.4440|
;;;1267     case GUI_KEY_ESCAPE:
;;;1268       break;
001116  e01f              B        |L1.4440|
                  |L1.4376|
;;;1269     default:
;;;1270       if (!(pObj->Flags & MULTIEDIT_SF_READONLY) && (Key >= 0x20)) {
001118  f8940074          LDRB     r0,[r4,#0x74]
00111c  f0100f01          TST      r0,#1
001120  d119              BNE      |L1.4438|
001122  2d20              CMP      r5,#0x20
001124  db17              BLT      |L1.4438|
;;;1271         if (_IsOverwriteAtThisChar(hObj, pObj)) {
001126  4621              MOV      r1,r4
001128  4630              MOV      r0,r6
00112a  f7fffffe          BL       _IsOverwriteAtThisChar
00112e  b118              CBZ      r0,|L1.4408|
;;;1272           _DeleteChar(hObj, pObj);
001130  4621              MOV      r1,r4
001132  4630              MOV      r0,r6
001134  f7fffffe          BL       _DeleteChar
                  |L1.4408|
;;;1273         }
;;;1274         if (_InsertChar(hObj, pObj, Key)) {
001138  462a              MOV      r2,r5
00113a  4621              MOV      r1,r4
00113c  4630              MOV      r0,r6
00113e  f7fffffe          BL       _InsertChar
001142  b130              CBZ      r0,|L1.4434|
;;;1275           _SetCursorPos(hObj, pObj, pObj->CursorPosChar + 1);
001144  f8b40048          LDRH     r0,[r4,#0x48]
001148  1c42              ADDS     r2,r0,#1
00114a  4621              MOV      r1,r4
00114c  4630              MOV      r0,r6
00114e  f7fffffe          BL       _SetCursorPos
                  |L1.4434|
;;;1276         }
;;;1277         r = 1;               /* Key has been consumed */
001152  f04f0701          MOV      r7,#1
                  |L1.4438|
001156  bf00              NOP                            ;1205
                  |L1.4440|
001158  bf00              NOP                            ;1209
;;;1278       }
;;;1279     }
;;;1280     _InvalidateTextArea(hObj);
00115a  4630              MOV      r0,r6
00115c  f7fffffe          BL       _InvalidateTextArea
;;;1281     return r;
001160  4638              MOV      r0,r7
;;;1282   }
001162  e8bd81f0          POP      {r4-r8,pc}
;;;1283   
                          ENDP

                  _MULTIEDIT_Callback PROC
;;;1287   */
;;;1288   static void _MULTIEDIT_Callback (WM_MESSAGE *pMsg) {
001166  b5fe              PUSH     {r1-r7,lr}
001168  4604              MOV      r4,r0
;;;1289     MULTIEDIT_HANDLE hObj;
;;;1290     MULTIEDIT_OBJ* pObj;
;;;1291     WM_SCROLL_STATE ScrollState;
;;;1292     hObj = pMsg->hWin;
00116a  f9b46004          LDRSH    r6,[r4,#4]
;;;1293     /* Let widget handle the standard messages */
;;;1294     if (WIDGET_HandleActive(hObj, pMsg) == 0) {
00116e  4621              MOV      r1,r4
001170  4630              MOV      r0,r6
001172  f7fffffe          BL       WIDGET_HandleActive
001176  b900              CBNZ     r0,|L1.4474|
                  |L1.4472|
;;;1295       return;
;;;1296     }
;;;1297     pObj = MULTIEDIT_H2P(hObj);
;;;1298     switch (pMsg->MsgId) {
;;;1299     case WM_NOTIFY_CLIENTCHANGE:
;;;1300       _InvalidateCursorXY(pObj);
;;;1301       _InvalidateNumLines(pObj);
;;;1302       _InvalidateTextSizeX(pObj);
;;;1303       _ClearCache(pObj);
;;;1304       _CalcScrollParas(hObj);
;;;1305       break;
;;;1306     case WM_SIZE:
;;;1307       _InvalidateCursorXY(pObj);
;;;1308       _InvalidateNumLines(pObj);
;;;1309       _InvalidateTextSizeX(pObj);
;;;1310       _ClearCache(pObj);
;;;1311       _Invalidate(hObj);
;;;1312       break;
;;;1313     case WM_NOTIFY_PARENT:
;;;1314       switch (pMsg->Data.v) {
;;;1315       case WM_NOTIFICATION_VALUE_CHANGED:
;;;1316         if (pMsg->hWinSrc  == WM_GetScrollbarV(hObj)) {
;;;1317           WM_GetScrollState(pMsg->hWinSrc, &ScrollState);
;;;1318           pObj->ScrollStateV.v = ScrollState.v;
;;;1319           WM_InvalidateWindow(hObj);
;;;1320           WM_NotifyParent(hObj, WM_NOTIFICATION_SCROLL_CHANGED);
;;;1321         } else if (pMsg->hWinSrc == WM_GetScrollbarH(hObj)) {
;;;1322           WM_GetScrollState(pMsg->hWinSrc, &ScrollState);
;;;1323           pObj->ScrollStateH.v = ScrollState.v;
;;;1324           WM_InvalidateWindow(hObj);
;;;1325           WM_NotifyParent(hObj, WM_NOTIFICATION_SCROLL_CHANGED);
;;;1326         }
;;;1327         break;
;;;1328       case WM_NOTIFICATION_SCROLLBAR_ADDED:
;;;1329         _SetScrollState(hObj);
;;;1330         break;
;;;1331       }
;;;1332       break;
;;;1333     case WM_PAINT:
;;;1334       _MULTIEDIT_Paint(hObj, pObj);
;;;1335       return;
;;;1336     case WM_TOUCH:
;;;1337       _OnTouch(hObj, pObj, pMsg);
;;;1338       break;
;;;1339     case WM_DELETE:
;;;1340       GUI_ALLOC_FreePtr(&pObj->hText);
;;;1341       break;
;;;1342     case WM_KEY:
;;;1343       if (((const WM_KEY_INFO*)(pMsg->Data.p))->PressedCnt >0) {
;;;1344         int Key = ((const WM_KEY_INFO*)(pMsg->Data.p))->Key;
;;;1345         /* Leave code for test purpose
;;;1346         switch (Key) {
;;;1347         case '1': Key = GUI_KEY_LEFT;  break;
;;;1348         case '2': Key = GUI_KEY_UP;    break;
;;;1349         case '3': Key = GUI_KEY_RIGHT; break;
;;;1350         case '4': Key = GUI_KEY_DOWN;  break;
;;;1351         }
;;;1352         */
;;;1353         if (_AddKey(hObj, Key)) {
;;;1354           return;
;;;1355         }
;;;1356       } else {
;;;1357         if (!(pObj->Flags & MULTIEDIT_SF_READONLY)) {
;;;1358           return;                /* Key release is consumed (not sent to parent) */
;;;1359         }
;;;1360       }
;;;1361     }
;;;1362     WM_DefaultProc(pMsg);
;;;1363   }
001178  bdfe              POP      {r1-r7,pc}
                  |L1.4474|
00117a  4630              MOV      r0,r6                 ;1297
00117c  f7fffffe          BL       GUI_ALLOC_h2p
001180  4605              MOV      r5,r0                 ;1297
001182  6820              LDR      r0,[r4,#0]            ;1298
001184  280e              CMP      r0,#0xe               ;1298
001186  d078              BEQ      |L1.4730|
001188  dc06              BGT      |L1.4504|
00118a  2805              CMP      r0,#5                 ;1298
00118c  d01b              BEQ      |L1.4550|
00118e  280b              CMP      r0,#0xb               ;1298
001190  d06e              BEQ      |L1.4720|
001192  280c              CMP      r0,#0xc               ;1298
001194  d116              BNE      |L1.4548|
001196  e063              B        |L1.4704|
                  |L1.4504|
001198  280f              CMP      r0,#0xf               ;1298
00119a  d05c              BEQ      |L1.4694|
00119c  2825              CMP      r0,#0x25              ;1298
00119e  d002              BEQ      |L1.4518|
0011a0  2826              CMP      r0,#0x26              ;1298
0011a2  d17e              BNE      |L1.4770|
0011a4  e01f              B        |L1.4582|
                  |L1.4518|
0011a6  4628              MOV      r0,r5                 ;1300
0011a8  f7fffffe          BL       _InvalidateCursorXY
0011ac  4628              MOV      r0,r5                 ;1301
0011ae  f7fffffe          BL       _InvalidateNumLines
0011b2  4628              MOV      r0,r5                 ;1302
0011b4  f7fffffe          BL       _InvalidateTextSizeX
0011b8  4628              MOV      r0,r5                 ;1303
0011ba  f7fffffe          BL       _ClearCache
0011be  4630              MOV      r0,r6                 ;1304
0011c0  f7fffffe          BL       _CalcScrollParas
                  |L1.4548|
0011c4  e06d              B        |L1.4770|
                  |L1.4550|
0011c6  4628              MOV      r0,r5                 ;1307
0011c8  f7fffffe          BL       _InvalidateCursorXY
0011cc  4628              MOV      r0,r5                 ;1308
0011ce  f7fffffe          BL       _InvalidateNumLines
0011d2  4628              MOV      r0,r5                 ;1309
0011d4  f7fffffe          BL       _InvalidateTextSizeX
0011d8  4628              MOV      r0,r5                 ;1310
0011da  f7fffffe          BL       _ClearCache
0011de  4630              MOV      r0,r6                 ;1311
0011e0  f7fffffe          BL       _Invalidate
0011e4  e05d              B        |L1.4770|
                  |L1.4582|
0011e6  68a0              LDR      r0,[r4,#8]            ;1314
0011e8  2805              CMP      r0,#5                 ;1314
0011ea  d002              BEQ      |L1.4594|
0011ec  2806              CMP      r0,#6                 ;1314
0011ee  d130              BNE      |L1.4690|
0011f0  e02b              B        |L1.4682|
                  |L1.4594|
0011f2  4630              MOV      r0,r6                 ;1316
0011f4  f7fffffe          BL       WM_GetScrollbarV
0011f8  f9b41006          LDRSH    r1,[r4,#6]            ;1316
0011fc  4288              CMP      r0,r1                 ;1316
0011fe  d10e              BNE      |L1.4638|
001200  f9b40006          LDRSH    r0,[r4,#6]            ;1317
001204  4669              MOV      r1,sp                 ;1317
001206  f7fffffe          BL       WM_GetScrollState
00120a  9901              LDR      r1,[sp,#4]            ;1318
00120c  65e9              STR      r1,[r5,#0x5c]         ;1318
00120e  4630              MOV      r0,r6                 ;1319
001210  f7fffffe          BL       WM_InvalidateWindow
001214  210a              MOVS     r1,#0xa               ;1320
001216  4630              MOV      r0,r6                 ;1320
001218  f7fffffe          BL       WM_NotifyParent
00121c  e014              B        |L1.4680|
                  |L1.4638|
00121e  4630              MOV      r0,r6                 ;1321
001220  f7fffffe          BL       WM_GetScrollbarH
001224  f9b41006          LDRSH    r1,[r4,#6]            ;1321
001228  4288              CMP      r0,r1                 ;1321
00122a  d10d              BNE      |L1.4680|
00122c  f9b40006          LDRSH    r0,[r4,#6]            ;1322
001230  4669              MOV      r1,sp                 ;1322
001232  f7fffffe          BL       WM_GetScrollState
001236  9901              LDR      r1,[sp,#4]            ;1323
001238  66a9              STR      r1,[r5,#0x68]         ;1323
00123a  4630              MOV      r0,r6                 ;1324
00123c  f7fffffe          BL       WM_InvalidateWindow
001240  210a              MOVS     r1,#0xa               ;1325
001242  4630              MOV      r0,r6                 ;1325
001244  f7fffffe          BL       WM_NotifyParent
                  |L1.4680|
001248  e003              B        |L1.4690|
                  |L1.4682|
00124a  4630              MOV      r0,r6                 ;1329
00124c  f7fffffe          BL       _SetScrollState
001250  bf00              NOP                            ;1330
                  |L1.4690|
001252  bf00              NOP                            ;1327
001254  e025              B        |L1.4770|
                  |L1.4694|
001256  4629              MOV      r1,r5                 ;1334
001258  4630              MOV      r0,r6                 ;1334
00125a  f7fffffe          BL       _MULTIEDIT_Paint
00125e  e78b              B        |L1.4472|
                  |L1.4704|
001260  4622              MOV      r2,r4                 ;1337
001262  4629              MOV      r1,r5                 ;1337
001264  4630              MOV      r0,r6                 ;1337
001266  f7fffffe          BL       _OnTouch
00126a  e01a              B        |L1.4770|
00126c  e005              B        |L1.4730|
00126e  e7ff              B        |L1.4720|
                  |L1.4720|
001270  f1050038          ADD      r0,r5,#0x38           ;1340
001274  f7fffffe          BL       GUI_ALLOC_FreePtr
001278  e013              B        |L1.4770|
                  |L1.4730|
00127a  68a0              LDR      r0,[r4,#8]            ;1343
00127c  6840              LDR      r0,[r0,#4]            ;1343
00127e  2800              CMP      r0,#0                 ;1343
001280  dd08              BLE      |L1.4756|
001282  68a0              LDR      r0,[r4,#8]            ;1344
001284  6807              LDR      r7,[r0,#0]            ;1344
001286  b2b9              UXTH     r1,r7                 ;1353
001288  4630              MOV      r0,r6                 ;1353
00128a  f7fffffe          BL       _AddKey
00128e  b100              CBZ      r0,|L1.4754|
001290  e772              B        |L1.4472|
                  |L1.4754|
001292  e005              B        |L1.4768|
                  |L1.4756|
001294  f8950074          LDRB     r0,[r5,#0x74]         ;1357
001298  f0100f01          TST      r0,#1                 ;1357
00129c  d100              BNE      |L1.4768|
00129e  e76b              B        |L1.4472|
                  |L1.4768|
0012a0  bf00              NOP                            ;1298
                  |L1.4770|
0012a2  bf00              NOP                            ;1305
0012a4  4620              MOV      r0,r4                 ;1362
0012a6  f7fffffe          BL       WM_DefaultProc
0012aa  bf00              NOP      
0012ac  e764              B        |L1.4472|
;;;1364   
                          ENDP

                  MULTIEDIT_SetText PROC
;;;1456   */
;;;1457   void MULTIEDIT_SetText(MULTIEDIT_HANDLE hObj, const char* pNew) {
0012ae  e92d5ff0          PUSH     {r4-r12,lr}
0012b2  4607              MOV      r7,r0
0012b4  460d              MOV      r5,r1
;;;1458     if (hObj) {
0012b6  2f00              CMP      r7,#0
0012b8  d058              BEQ      |L1.4972|
;;;1459       MULTIEDIT_OBJ* pObj;
;;;1460       int NumCharsNew = 0, NumCharsOld = 0;
0012ba  f04f0800          MOV      r8,#0
0012be  46c1              MOV      r9,r8
;;;1461       int NumBytesNew = 0, NumBytesOld = 0;
0012c0  46c2              MOV      r10,r8
0012c2  46c3              MOV      r11,r8
;;;1462       char* pText;
;;;1463       WM_LOCK();
;;;1464       pObj = MULTIEDIT_H2P(hObj);
0012c4  4638              MOV      r0,r7
0012c6  f7fffffe          BL       GUI_ALLOC_h2p
0012ca  4604              MOV      r4,r0
;;;1465       if (pObj->hText) {
0012cc  8f20              LDRH     r0,[r4,#0x38]
0012ce  b190              CBZ      r0,|L1.4854|
;;;1466         pText  = (char*) GUI_ALLOC_h2p(pObj->hText);
0012d0  f9b40038          LDRSH    r0,[r4,#0x38]
0012d4  f7fffffe          BL       GUI_ALLOC_h2p
0012d8  4606              MOV      r6,r0
;;;1467         pText += GUI_UC__NumChars2NumBytes(pText, pObj->NumCharsPrompt);
0012da  8fe1              LDRH     r1,[r4,#0x3e]
0012dc  4630              MOV      r0,r6
0012de  f7fffffe          BL       GUI_UC__NumChars2NumBytes
0012e2  4406              ADD      r6,r6,r0
;;;1468         NumCharsOld = GUI__GetNumChars(pText);
0012e4  4630              MOV      r0,r6
0012e6  f7fffffe          BL       GUI__GetNumChars
0012ea  4681              MOV      r9,r0
;;;1469         NumBytesOld = GUI_UC__NumChars2NumBytes(pText, NumCharsOld);
0012ec  4649              MOV      r1,r9
0012ee  4630              MOV      r0,r6
0012f0  f7fffffe          BL       GUI_UC__NumChars2NumBytes
0012f4  4683              MOV      r11,r0
                  |L1.4854|
;;;1470       }
;;;1471       if (pNew) {
0012f6  b145              CBZ      r5,|L1.4874|
;;;1472         NumCharsNew = GUI__GetNumChars(pNew);
0012f8  4628              MOV      r0,r5
0012fa  f7fffffe          BL       GUI__GetNumChars
0012fe  4680              MOV      r8,r0
;;;1473         NumBytesNew = GUI_UC__NumChars2NumBytes(pNew, NumCharsNew);
001300  4641              MOV      r1,r8
001302  4628              MOV      r0,r5
001304  f7fffffe          BL       GUI_UC__NumChars2NumBytes
001308  4682              MOV      r10,r0
                  |L1.4874|
;;;1474       }
;;;1475       if (_IsCharsAvailable(pObj, NumCharsNew - NumCharsOld)) {
00130a  eba80109          SUB      r1,r8,r9
00130e  4620              MOV      r0,r4
001310  f7fffffe          BL       _IsCharsAvailable
001314  b348              CBZ      r0,|L1.4970|
;;;1476         if (_IsSpaceInBuffer(pObj, NumBytesNew - NumBytesOld)) {
001316  ebaa010b          SUB      r1,r10,r11
00131a  4620              MOV      r0,r4
00131c  f7fffffe          BL       _IsSpaceInBuffer
001320  b318              CBZ      r0,|L1.4970|
;;;1477           pText  = (char*) GUI_ALLOC_h2p(pObj->hText);
001322  f9b40038          LDRSH    r0,[r4,#0x38]
001326  f7fffffe          BL       GUI_ALLOC_h2p
00132a  4606              MOV      r6,r0
;;;1478           pText += GUI_UC__NumChars2NumBytes(pText, pObj->NumCharsPrompt);
00132c  8fe1              LDRH     r1,[r4,#0x3e]
00132e  4630              MOV      r0,r6
001330  f7fffffe          BL       GUI_UC__NumChars2NumBytes
001334  4406              ADD      r6,r6,r0
;;;1479           if (pNew) {
001336  b125              CBZ      r5,|L1.4930|
;;;1480             strcpy(pText, pNew);
001338  4629              MOV      r1,r5
00133a  4630              MOV      r0,r6
00133c  f7fffffe          BL       strcpy
001340  e002              B        |L1.4936|
                  |L1.4930|
;;;1481           } else {
;;;1482             *pText = 0;
001342  f04f0000          MOV      r0,#0
001346  7030              STRB     r0,[r6,#0]
                  |L1.4936|
;;;1483           }
;;;1484           _SetCursorPos(hObj, pObj, pObj->NumCharsPrompt);
001348  8fe2              LDRH     r2,[r4,#0x3e]
00134a  4621              MOV      r1,r4
00134c  4638              MOV      r0,r7
00134e  f7fffffe          BL       _SetCursorPos
;;;1485           _InvalidateTextArea(hObj);
001352  4638              MOV      r0,r7
001354  f7fffffe          BL       _InvalidateTextArea
;;;1486           _InvalidateNumChars(pObj);
001358  4620              MOV      r0,r4
00135a  f7fffffe          BL       _InvalidateNumChars
;;;1487           _InvalidateNumLines(pObj);
00135e  4620              MOV      r0,r4
001360  f7fffffe          BL       _InvalidateNumLines
;;;1488           _InvalidateTextSizeX(pObj);
001364  4620              MOV      r0,r4
001366  f7fffffe          BL       _InvalidateTextSizeX
                  |L1.4970|
;;;1489         }
;;;1490       }
;;;1491       WM_UNLOCK();
;;;1492     }
00136a  bf00              NOP      
                  |L1.4972|
;;;1493   }
00136c  e8bd9ff0          POP      {r4-r12,pc}
;;;1494   
                          ENDP

                  MULTIEDIT_CreateEx PROC
;;;1378   */
;;;1379   MULTIEDIT_HANDLE MULTIEDIT_CreateEx(int x0, int y0, int xsize, int ysize, WM_HWIN hParent, int WinFlags, int ExFlags,
001370  e92d5fff          PUSH     {r0-r12,lr}
;;;1380                                       int Id, int BufferSize, const char* pText)
;;;1381   {
001374  4680              MOV      r8,r0
001376  4689              MOV      r9,r1
001378  4692              MOV      r10,r2
00137a  469b              MOV      r11,r3
00137c  9e12              LDR      r6,[sp,#0x48]
;;;1382     MULTIEDIT_HANDLE hObj;
;;;1383     /* Create the window */
;;;1384     WM_LOCK();
;;;1385     if ((xsize == 0) && (ysize == 0) && (x0 == 0) && (y0 == 0)) {
00137e  f1ba0f00          CMP      r10,#0
001382  d11d              BNE      |L1.5056|
001384  f1bb0f00          CMP      r11,#0
001388  d11a              BNE      |L1.5056|
00138a  f1b80f00          CMP      r8,#0
00138e  d117              BNE      |L1.5056|
001390  f1b90f00          CMP      r9,#0
001394  d114              BNE      |L1.5056|
;;;1386       GUI_RECT Rect;
;;;1387       WM_GetClientRectEx(hParent, &Rect);
001396  a902              ADD      r1,sp,#8
001398  980e              LDR      r0,[sp,#0x38]
00139a  f7fffffe          BL       WM_GetClientRectEx
;;;1388       xsize = Rect.x1 - Rect.x0 + 1;
00139e  f9bd000c          LDRSH    r0,[sp,#0xc]
0013a2  f9bd1008          LDRSH    r1,[sp,#8]
0013a6  eba00001          SUB      r0,r0,r1
0013aa  f1000a01          ADD      r10,r0,#1
;;;1389       ysize = Rect.y1 - Rect.y0 + 1;
0013ae  f9bd000e          LDRSH    r0,[sp,#0xe]
0013b2  f9bd100a          LDRSH    r1,[sp,#0xa]
0013b6  eba00001          SUB      r0,r0,r1
0013ba  f1000b01          ADD      r11,r0,#1
;;;1390     }
0013be  bf00              NOP      
                  |L1.5056|
;;;1391     hObj = WM_CreateWindowAsChild(x0, y0, xsize, ysize, hParent, WinFlags, &_MULTIEDIT_Callback,
0013c0  225c              MOVS     r2,#0x5c
0013c2  4bfe              LDR      r3,|L1.6076|
0013c4  980f              LDR      r0,[sp,#0x3c]
0013c6  b280              UXTH     r0,r0
0013c8  990e              LDR      r1,[sp,#0x38]
0013ca  e9cd3202          STRD     r3,r2,[sp,#8]
0013ce  e9cd1000          STRD     r1,r0,[sp,#0]
0013d2  465b              MOV      r3,r11
0013d4  4652              MOV      r2,r10
0013d6  4649              MOV      r1,r9
0013d8  4640              MOV      r0,r8
0013da  f7fffffe          BL       WM_CreateWindowAsChild
0013de  4607              MOV      r7,r0
;;;1392                                   sizeof(MULTIEDIT_OBJ) - sizeof(WM_Obj));
;;;1393     if (hObj) {
0013e0  2f00              CMP      r7,#0
0013e2  d04f              BEQ      |L1.5252|
;;;1394       int i;
;;;1395       MULTIEDIT_OBJ* pObj = MULTIEDIT_H2P(hObj);
0013e4  4638              MOV      r0,r7
0013e6  f7fffffe          BL       GUI_ALLOC_h2p
0013ea  4604              MOV      r4,r0
;;;1396       /* init widget specific variables */
;;;1397       WIDGET__Init(&pObj->Widget, Id, WIDGET_STATE_FOCUSSABLE);
0013ec  f04f0210          MOV      r2,#0x10
0013f0  4620              MOV      r0,r4
0013f2  9911              LDR      r1,[sp,#0x44]
0013f4  f7fffffe          BL       WIDGET__Init
;;;1398       /* init member variables */
;;;1399       MULTIEDIT_INIT_ID(pObj);
;;;1400       for (i = 0; i < NUM_DISP_MODES; i++) {
0013f8  f04f0500          MOV      r5,#0
0013fc  e00f              B        |L1.5150|
                  |L1.5118|
;;;1401         pObj->aBkColor[i]  = _aDefaultBkColor[i];
0013fe  48f0              LDR      r0,|L1.6080|
001400  f8501025          LDR      r1,[r0,r5,LSL #2]
001404  f1040028          ADD      r0,r4,#0x28
001408  f8401025          STR      r1,[r0,r5,LSL #2]
;;;1402         pObj->aColor[i]    = _aDefaultColor[i];
00140c  48ed              LDR      r0,|L1.6084|
00140e  f8501025          LDR      r1,[r0,r5,LSL #2]
001412  f1040030          ADD      r0,r4,#0x30
001416  f8401025          STR      r1,[r0,r5,LSL #2]
00141a  f1050501          ADD      r5,r5,#1              ;1400
                  |L1.5150|
00141e  2d02              CMP      r5,#2                 ;1400
001420  dbed              BLT      |L1.5118|
;;;1403       }
;;;1404       pObj->pFont          = _pDefaultFont;
001422  48e9              LDR      r0,|L1.6088|
001424  6800              LDR      r0,[r0,#0]  ; _pDefaultFont
001426  f1040438          ADD      r4,r4,#0x38
00142a  63a0              STR      r0,[r4,#0x38]
;;;1405       pObj->Flags          = ExFlags;
00142c  9810              LDR      r0,[sp,#0x40]
00142e  f884003c          STRB     r0,[r4,#0x3c]
;;;1406       pObj->CursorPosChar  = 0;
001432  f04f0000          MOV      r0,#0
001436  8220              STRH     r0,[r4,#0x10]
;;;1407       pObj->CursorPosByte  = 0;
001438  8260              STRH     r0,[r4,#0x12]
;;;1408       pObj->HBorder        = 1;
00143a  f04f0001          MOV      r0,#1
00143e  f884003f          STRB     r0,[r4,#0x3f]
;;;1409       pObj->MaxNumChars    = 0;
001442  f04f0000          MOV      r0,#0
001446  8060              STRH     r0,[r4,#2]
;;;1410       pObj->NumCharsPrompt = 0;
001448  80e0              STRH     r0,[r4,#6]
;;;1411       pObj->BufferSize     = 0;
00144a  81a0              STRH     r0,[r4,#0xc]
;;;1412       pObj->hText          = 0;
00144c  f8240938          STRH     r0,[r4],#-0x38
;;;1413       if (BufferSize > 0) {
001450  2e00              CMP      r6,#0
001452  dd0f              BLE      |L1.5236|
;;;1414         WM_HWIN hText;
;;;1415         if ((hText = GUI_ALLOC_AllocZero(BufferSize)) != 0) {
001454  b230              SXTH     r0,r6
001456  f7fffffe          BL       GUI_ALLOC_AllocZero
00145a  9003              STR      r0,[sp,#0xc]
00145c  b120              CBZ      r0,|L1.5224|
;;;1416           pObj->BufferSize = BufferSize;
00145e  f8a46044          STRH     r6,[r4,#0x44]
;;;1417           pObj->hText      = hText;
001462  9803              LDR      r0,[sp,#0xc]
001464  8720              STRH     r0,[r4,#0x38]
001466  e004              B        |L1.5234|
                  |L1.5224|
;;;1418         } else {
;;;1419           GUI_DEBUG_ERROROUT("MULTIEDIT_CreateEx failed to alloc buffer");
;;;1420           WM_DeleteWindow(hObj);
001468  4638              MOV      r0,r7
00146a  f7fffffe          BL       WM_DeleteWindow
;;;1421           hObj = 0;
00146e  f04f0700          MOV      r7,#0
                  |L1.5234|
;;;1422         }
;;;1423       }
001472  bf00              NOP      
                  |L1.5236|
;;;1424       MULTIEDIT_SetText(hObj, pText);
001474  4638              MOV      r0,r7
001476  9913              LDR      r1,[sp,#0x4c]
001478  f7fffffe          BL       MULTIEDIT_SetText
;;;1425       _ManageScrollers(hObj);
00147c  4638              MOV      r0,r7
00147e  f7fffffe          BL       _ManageScrollers
;;;1426     } else {
001482  bf00              NOP      
                  |L1.5252|
;;;1427       GUI_DEBUG_ERROROUT_IF(hObj==0, "MULTIEDIT_CreateEx failed")
;;;1428     }
;;;1429     WM_UNLOCK();
;;;1430     return hObj;
001484  4638              MOV      r0,r7
;;;1431   }
001486  b004              ADD      sp,sp,#0x10
001488  e8bd9ff0          POP      {r4-r12,pc}
;;;1432   
                          ENDP

                  MULTIEDIT_AddKey PROC
;;;1442   */
;;;1443   int MULTIEDIT_AddKey(MULTIEDIT_HANDLE hObj, U16 Key) {
00148c  b570              PUSH     {r4-r6,lr}
00148e  4604              MOV      r4,r0
001490  460d              MOV      r5,r1
;;;1444     int r = 0;
001492  f04f0600          MOV      r6,#0
;;;1445     if (hObj) {
001496  b124              CBZ      r4,|L1.5282|
;;;1446       WM_LOCK();
;;;1447       r = _AddKey(hObj, Key);
001498  4629              MOV      r1,r5
00149a  4620              MOV      r0,r4
00149c  f7fffffe          BL       _AddKey
0014a0  4606              MOV      r6,r0
                  |L1.5282|
;;;1448       WM_UNLOCK();
;;;1449     }
;;;1450     return r;
0014a2  4630              MOV      r0,r6
;;;1451   }
0014a4  bd70              POP      {r4-r6,pc}
;;;1452   
                          ENDP

                  MULTIEDIT_GetText PROC
;;;1498   */
;;;1499   void MULTIEDIT_GetText(MULTIEDIT_HANDLE hObj, char* sDest, int MaxLen) {
0014a6  e92d47f0          PUSH     {r4-r10,lr}
0014aa  4681              MOV      r9,r0
0014ac  460c              MOV      r4,r1
0014ae  4615              MOV      r5,r2
;;;1500     if (hObj) {
0014b0  f1b90f00          CMP      r9,#0
0014b4  d022              BEQ      |L1.5372|
;;;1501       MULTIEDIT_OBJ* pObj;
;;;1502       WM_LOCK();
;;;1503       pObj = MULTIEDIT_H2P(hObj);
0014b6  4648              MOV      r0,r9
0014b8  f7fffffe          BL       GUI_ALLOC_h2p
0014bc  4606              MOV      r6,r0
;;;1504       if (pObj) {
0014be  b1e6              CBZ      r6,|L1.5370|
;;;1505         char* pText;
;;;1506         int Len;
;;;1507         pText  = (char*) GUI_ALLOC_h2p(pObj->hText);
0014c0  f9b60038          LDRSH    r0,[r6,#0x38]
0014c4  f7fffffe          BL       GUI_ALLOC_h2p
0014c8  4607              MOV      r7,r0
;;;1508         pText += GUI_UC__NumChars2NumBytes(pText, pObj->NumCharsPrompt);
0014ca  8ff1              LDRH     r1,[r6,#0x3e]
0014cc  4638              MOV      r0,r7
0014ce  f7fffffe          BL       GUI_UC__NumChars2NumBytes
0014d2  4407              ADD      r7,r7,r0
;;;1509         Len    = strlen(pText);
0014d4  4638              MOV      r0,r7
0014d6  f7fffffe          BL       strlen
0014da  4680              MOV      r8,r0
;;;1510         if (Len > (MaxLen - 1)) {
0014dc  f1a50001          SUB      r0,r5,#1
0014e0  4540              CMP      r0,r8
0014e2  da00              BGE      |L1.5350|
;;;1511           Len = MaxLen - 1;
0014e4  4680              MOV      r8,r0
                  |L1.5350|
;;;1512         }
;;;1513         memcpy(sDest, pText, Len);
0014e6  4642              MOV      r2,r8
0014e8  4639              MOV      r1,r7
0014ea  4620              MOV      r0,r4
0014ec  f7fffffe          BL       __aeabi_memcpy
;;;1514         *(sDest + Len) = 0;
0014f0  f04f0000          MOV      r0,#0
0014f4  f8040008          STRB     r0,[r4,r8]
;;;1515       }
0014f8  bf00              NOP      
                  |L1.5370|
;;;1516       WM_UNLOCK();
;;;1517     }
0014fa  bf00              NOP      
                  |L1.5372|
;;;1518   }
0014fc  e8bd87f0          POP      {r4-r10,pc}
;;;1519   
                          ENDP

                  MULTIEDIT_GetPrompt PROC
;;;1523   */
;;;1524   void MULTIEDIT_GetPrompt(MULTIEDIT_HANDLE hObj, char * sDest, int MaxLen) {
001500  e92d47f0          PUSH     {r4-r10,lr}
001504  4680              MOV      r8,r0
001506  460c              MOV      r4,r1
001508  4615              MOV      r5,r2
;;;1525     if (hObj) {
00150a  f1b80f00          CMP      r8,#0
00150e  d01d              BEQ      |L1.5452|
;;;1526       MULTIEDIT_OBJ * pObj;
;;;1527       WM_LOCK();
;;;1528       pObj = MULTIEDIT_H2P(hObj);
001510  4640              MOV      r0,r8
001512  f7fffffe          BL       GUI_ALLOC_h2p
001516  4606              MOV      r6,r0
;;;1529       if (pObj) {
001518  b1be              CBZ      r6,|L1.5450|
;;;1530         char* sSource = (char*)GUI_ALLOC_h2p(pObj->hText);
00151a  f9b60038          LDRSH    r0,[r6,#0x38]
00151e  f7fffffe          BL       GUI_ALLOC_h2p
001522  4681              MOV      r9,r0
;;;1531         int Len = GUI_UC__NumChars2NumBytes(sSource, pObj->NumCharsPrompt);
001524  8ff1              LDRH     r1,[r6,#0x3e]
001526  4648              MOV      r0,r9
001528  f7fffffe          BL       GUI_UC__NumChars2NumBytes
00152c  4607              MOV      r7,r0
;;;1532         if (Len > (MaxLen - 1)) {
00152e  f1a50001          SUB      r0,r5,#1
001532  42b8              CMP      r0,r7
001534  da00              BGE      |L1.5432|
;;;1533           Len = MaxLen - 1;
001536  4607              MOV      r7,r0
                  |L1.5432|
;;;1534         }
;;;1535         memcpy(sDest, sSource, Len);
001538  463a              MOV      r2,r7
00153a  4649              MOV      r1,r9
00153c  4620              MOV      r0,r4
00153e  f7fffffe          BL       __aeabi_memcpy
;;;1536         *(sDest + Len) = 0;
001542  f04f0000          MOV      r0,#0
001546  55e0              STRB     r0,[r4,r7]
;;;1537       }
001548  bf00              NOP      
                  |L1.5450|
;;;1538       WM_UNLOCK();
;;;1539     }
00154a  bf00              NOP      
                  |L1.5452|
;;;1540   }
00154c  e8bd87f0          POP      {r4-r10,pc}
;;;1541   
                          ENDP

                  MULTIEDIT_SetWrapWord PROC
;;;1545   */
;;;1546   void MULTIEDIT_SetWrapWord(MULTIEDIT_HANDLE hObj) {
001550  b510              PUSH     {r4,lr}
001552  4604              MOV      r4,r0
;;;1547     _SetWrapMode(hObj, GUI_WRAPMODE_WORD);
001554  f04f0101          MOV      r1,#1
001558  4620              MOV      r0,r4
00155a  f7fffffe          BL       _SetWrapMode
;;;1548   }
00155e  bd10              POP      {r4,pc}
;;;1549   
                          ENDP

                  MULTIEDIT_SetWrapChar PROC
;;;1553   */
;;;1554   void MULTIEDIT_SetWrapChar(MULTIEDIT_HANDLE hObj) {
001560  b510              PUSH     {r4,lr}
001562  4604              MOV      r4,r0
;;;1555     _SetWrapMode(hObj, GUI_WRAPMODE_CHAR);
001564  f04f0102          MOV      r1,#2
001568  4620              MOV      r0,r4
00156a  f7fffffe          BL       _SetWrapMode
;;;1556   }
00156e  bd10              POP      {r4,pc}
;;;1557   
                          ENDP

                  MULTIEDIT_SetWrapNone PROC
;;;1561   */
;;;1562   void MULTIEDIT_SetWrapNone(MULTIEDIT_HANDLE hObj) {
001570  b510              PUSH     {r4,lr}
001572  4604              MOV      r4,r0
;;;1563     _SetWrapMode(hObj, GUI_WRAPMODE_NONE);
001574  f04f0100          MOV      r1,#0
001578  4620              MOV      r0,r4
00157a  f7fffffe          BL       _SetWrapMode
;;;1564   }
00157e  bd10              POP      {r4,pc}
;;;1565   
                          ENDP

                  MULTIEDIT_SetInsertMode PROC
;;;1569   */
;;;1570   void MULTIEDIT_SetInsertMode(MULTIEDIT_HANDLE hObj, int OnOff) {
001580  b570              PUSH     {r4-r6,lr}
001582  4604              MOV      r4,r0
001584  460d              MOV      r5,r1
;;;1571     _SetFlag(hObj, OnOff, MULTIEDIT_SF_INSERT);
001586  f04f0204          MOV      r2,#4
00158a  4629              MOV      r1,r5
00158c  4620              MOV      r0,r4
00158e  f7fffffe          BL       _SetFlag
;;;1572   }
001592  bd70              POP      {r4-r6,pc}
;;;1573   
                          ENDP

                  MULTIEDIT_SetReadOnly PROC
;;;1577   */
;;;1578   void MULTIEDIT_SetReadOnly(MULTIEDIT_HANDLE hObj, int OnOff) {
001594  b570              PUSH     {r4-r6,lr}
001596  4604              MOV      r4,r0
001598  460d              MOV      r5,r1
;;;1579     _SetFlag(hObj, OnOff, MULTIEDIT_SF_READONLY);
00159a  f04f0201          MOV      r2,#1
00159e  4629              MOV      r1,r5
0015a0  4620              MOV      r0,r4
0015a2  f7fffffe          BL       _SetFlag
;;;1580   }
0015a6  bd70              POP      {r4-r6,pc}
;;;1581   
                          ENDP

                  MULTIEDIT_SetPasswordMode PROC
;;;1585   */
;;;1586   void MULTIEDIT_SetPasswordMode(MULTIEDIT_HANDLE hObj, int OnOff) {
0015a8  b570              PUSH     {r4-r6,lr}
0015aa  4604              MOV      r4,r0
0015ac  460d              MOV      r5,r1
;;;1587     if (hObj) {
0015ae  b19c              CBZ      r4,|L1.5592|
;;;1588       MULTIEDIT_OBJ* pObj;
;;;1589       WM_LOCK();
;;;1590       pObj = MULTIEDIT_H2P(hObj);
0015b0  4620              MOV      r0,r4
0015b2  f7fffffe          BL       GUI_ALLOC_h2p
0015b6  4606              MOV      r6,r0
;;;1591       _SetFlag(hObj, OnOff, MULTIEDIT_SF_PASSWORD);
0015b8  f04f0220          MOV      r2,#0x20
0015bc  4629              MOV      r1,r5
0015be  4620              MOV      r0,r4
0015c0  f7fffffe          BL       _SetFlag
;;;1592       _InvalidateCursorXY(pObj);
0015c4  4630              MOV      r0,r6
0015c6  f7fffffe          BL       _InvalidateCursorXY
;;;1593       _InvalidateNumLines(pObj);
0015ca  4630              MOV      r0,r6
0015cc  f7fffffe          BL       _InvalidateNumLines
;;;1594       _InvalidateTextSizeX(pObj);
0015d0  4630              MOV      r0,r6
0015d2  f7fffffe          BL       _InvalidateTextSizeX
;;;1595       WM_UNLOCK();
;;;1596     }
0015d6  bf00              NOP      
                  |L1.5592|
;;;1597   }
0015d8  bd70              POP      {r4-r6,pc}
;;;1598   
                          ENDP

                  MULTIEDIT_SetAutoScrollV PROC
;;;1602   */
;;;1603   void MULTIEDIT_SetAutoScrollV(MULTIEDIT_HANDLE hObj, int OnOff) {
0015da  b570              PUSH     {r4-r6,lr}
0015dc  4604              MOV      r4,r0
0015de  460d              MOV      r5,r1
;;;1604     _SetFlag(hObj, OnOff, MULTIEDIT_SF_AUTOSCROLLBAR_V);
0015e0  f04f0208          MOV      r2,#8
0015e4  4629              MOV      r1,r5
0015e6  4620              MOV      r0,r4
0015e8  f7fffffe          BL       _SetFlag
;;;1605   }
0015ec  bd70              POP      {r4-r6,pc}
;;;1606   
                          ENDP

                  MULTIEDIT_SetAutoScrollH PROC
;;;1610   */
;;;1611   void MULTIEDIT_SetAutoScrollH(MULTIEDIT_HANDLE hObj, int OnOff) {
0015ee  b570              PUSH     {r4-r6,lr}
0015f0  4604              MOV      r4,r0
0015f2  460d              MOV      r5,r1
;;;1612     _SetFlag(hObj, OnOff, MULTIEDIT_SF_AUTOSCROLLBAR_H);
0015f4  f04f0210          MOV      r2,#0x10
0015f8  4629              MOV      r1,r5
0015fa  4620              MOV      r0,r4
0015fc  f7fffffe          BL       _SetFlag
;;;1613   }
001600  bd70              POP      {r4-r6,pc}
;;;1614   
                          ENDP

                  MULTIEDIT_SetHBorder PROC
;;;1618   */
;;;1619   void MULTIEDIT_SetHBorder(MULTIEDIT_HANDLE hObj, unsigned HBorder) {
001602  b570              PUSH     {r4-r6,lr}
001604  4605              MOV      r5,r0
001606  460c              MOV      r4,r1
;;;1620     if (hObj) {
001608  b16d              CBZ      r5,|L1.5670|
;;;1621       MULTIEDIT_OBJ* pObj;
;;;1622       WM_LOCK();
;;;1623       pObj = MULTIEDIT_H2P(hObj);
00160a  4628              MOV      r0,r5
00160c  f7fffffe          BL       GUI_ALLOC_h2p
001610  4606              MOV      r6,r0
;;;1624       if ((unsigned)pObj->HBorder != HBorder) {
001612  f8960077          LDRB     r0,[r6,#0x77]
001616  42a0              CMP      r0,r4
001618  d004              BEQ      |L1.5668|
;;;1625         pObj->HBorder = HBorder;
00161a  f8864077          STRB     r4,[r6,#0x77]
;;;1626         _Invalidate(hObj);
00161e  4628              MOV      r0,r5
001620  f7fffffe          BL       _Invalidate
                  |L1.5668|
;;;1627       }
;;;1628       WM_UNLOCK();
;;;1629     }
001624  bf00              NOP      
                  |L1.5670|
;;;1630   }
001626  bd70              POP      {r4-r6,pc}
;;;1631   
                          ENDP

                  MULTIEDIT_SetFont PROC
;;;1635   */
;;;1636   void MULTIEDIT_SetFont(MULTIEDIT_HANDLE hObj, const GUI_FONT GUI_UNI_PTR * pFont) {
001628  b570              PUSH     {r4-r6,lr}
00162a  4606              MOV      r6,r0
00162c  460c              MOV      r4,r1
;;;1637     if (hObj) {
00162e  b1a6              CBZ      r6,|L1.5722|
;;;1638       MULTIEDIT_OBJ* pObj;
;;;1639       WM_LOCK();
;;;1640       pObj = MULTIEDIT_H2P(hObj);
001630  4630              MOV      r0,r6
001632  f7fffffe          BL       GUI_ALLOC_h2p
001636  4605              MOV      r5,r0
;;;1641       if (pObj->pFont != pFont) {
001638  6f28              LDR      r0,[r5,#0x70]
00163a  42a0              CMP      r0,r4
00163c  d00c              BEQ      |L1.5720|
;;;1642         pObj->pFont = pFont;
00163e  672c              STR      r4,[r5,#0x70]
;;;1643         _InvalidateTextArea(hObj);
001640  4630              MOV      r0,r6
001642  f7fffffe          BL       _InvalidateTextArea
;;;1644         _InvalidateCursorXY(pObj);
001646  4628              MOV      r0,r5
001648  f7fffffe          BL       _InvalidateCursorXY
;;;1645         _InvalidateNumLines(pObj);
00164c  4628              MOV      r0,r5
00164e  f7fffffe          BL       _InvalidateNumLines
;;;1646         _InvalidateTextSizeX(pObj);
001652  4628              MOV      r0,r5
001654  f7fffffe          BL       _InvalidateTextSizeX
                  |L1.5720|
;;;1647       }
;;;1648       WM_UNLOCK();
;;;1649     }
001658  bf00              NOP      
                  |L1.5722|
;;;1650   }
00165a  bd70              POP      {r4-r6,pc}
;;;1651   
                          ENDP

                  MULTIEDIT_SetBkColor PROC
;;;1655   */
;;;1656   void MULTIEDIT_SetBkColor(MULTIEDIT_HANDLE hObj, unsigned Index, GUI_COLOR color) {
00165c  e92d41f0          PUSH     {r4-r8,lr}
001660  4605              MOV      r5,r0
001662  460c              MOV      r4,r1
001664  4616              MOV      r6,r2
;;;1657     if (hObj && (Index < NUM_DISP_MODES)) {
001666  b16d              CBZ      r5,|L1.5764|
001668  2c02              CMP      r4,#2
00166a  d20b              BCS      |L1.5764|
;;;1658       MULTIEDIT_OBJ* pObj;
;;;1659       WM_LOCK();
;;;1660       pObj = MULTIEDIT_H2P(hObj);
00166c  4628              MOV      r0,r5
00166e  f7fffffe          BL       GUI_ALLOC_h2p
001672  4607              MOV      r7,r0
;;;1661       pObj->aBkColor[Index] = color;
001674  f1070028          ADD      r0,r7,#0x28
001678  f8406024          STR      r6,[r0,r4,LSL #2]
;;;1662       _InvalidateTextArea(hObj);
00167c  4628              MOV      r0,r5
00167e  f7fffffe          BL       _InvalidateTextArea
;;;1663       WM_UNLOCK();
;;;1664     }
001682  bf00              NOP      
                  |L1.5764|
;;;1665   }
001684  e8bd81f0          POP      {r4-r8,pc}
;;;1666   
                          ENDP

                  MULTIEDIT_SetCursorOffset PROC
;;;1670   */
;;;1671   void MULTIEDIT_SetCursorOffset(MULTIEDIT_HANDLE hObj, int Offset) {
001688  b570              PUSH     {r4-r6,lr}
00168a  4604              MOV      r4,r0
00168c  460d              MOV      r5,r1
;;;1672     if (hObj) {
00168e  b164              CBZ      r4,|L1.5802|
;;;1673       MULTIEDIT_OBJ* pObj;
;;;1674       WM_LOCK();
;;;1675       pObj = MULTIEDIT_H2P(hObj);
001690  4620              MOV      r0,r4
001692  f7fffffe          BL       GUI_ALLOC_h2p
001696  4606              MOV      r6,r0
;;;1676       _SetCursorPos(hObj, pObj, Offset);
001698  462a              MOV      r2,r5
00169a  4631              MOV      r1,r6
00169c  4620              MOV      r0,r4
00169e  f7fffffe          BL       _SetCursorPos
;;;1677       WM_Invalidate(hObj);
0016a2  4620              MOV      r0,r4
0016a4  f7fffffe          BL       WM_InvalidateWindow
;;;1678       WM_UNLOCK();
;;;1679     }
0016a8  bf00              NOP      
                  |L1.5802|
;;;1680   }
0016aa  bd70              POP      {r4-r6,pc}
;;;1681   
                          ENDP

                  MULTIEDIT_SetTextColor PROC
;;;1685   */
;;;1686   void MULTIEDIT_SetTextColor(MULTIEDIT_HANDLE hObj, unsigned Index, GUI_COLOR color) {
0016ac  e92d41f0          PUSH     {r4-r8,lr}
0016b0  4605              MOV      r5,r0
0016b2  460c              MOV      r4,r1
0016b4  4616              MOV      r6,r2
;;;1687     if (hObj && (Index < NUM_DISP_MODES)) {
0016b6  b16d              CBZ      r5,|L1.5844|
0016b8  2c02              CMP      r4,#2
0016ba  d20b              BCS      |L1.5844|
;;;1688       MULTIEDIT_OBJ* pObj;
;;;1689       WM_LOCK();
;;;1690       pObj = MULTIEDIT_H2P(hObj);
0016bc  4628              MOV      r0,r5
0016be  f7fffffe          BL       GUI_ALLOC_h2p
0016c2  4607              MOV      r7,r0
;;;1691       pObj->aColor[Index] = color;
0016c4  f1070030          ADD      r0,r7,#0x30
0016c8  f8406024          STR      r6,[r0,r4,LSL #2]
;;;1692       WM_Invalidate(hObj);
0016cc  4628              MOV      r0,r5
0016ce  f7fffffe          BL       WM_InvalidateWindow
;;;1693       WM_UNLOCK();
;;;1694     }
0016d2  bf00              NOP      
                  |L1.5844|
;;;1695   }
0016d4  e8bd81f0          POP      {r4-r8,pc}
;;;1696   
                          ENDP

                  MULTIEDIT_SetPrompt PROC
;;;1700   */
;;;1701   void MULTIEDIT_SetPrompt(MULTIEDIT_HANDLE hObj, const char* pPrompt) {
0016d8  e92d4ff8          PUSH     {r3-r11,lr}
0016dc  4682              MOV      r10,r0
0016de  460e              MOV      r6,r1
;;;1702     if (hObj) {
0016e0  f1ba0f00          CMP      r10,#0
0016e4  d057              BEQ      |L1.6038|
;;;1703       MULTIEDIT_OBJ* pObj;
;;;1704       int NumCharsNew = 0, NumCharsOld = 0;
0016e6  f04f0700          MOV      r7,#0
0016ea  46bb              MOV      r11,r7
;;;1705       int NumBytesNew = 0, NumBytesOld = 0;
0016ec  46b8              MOV      r8,r7
0016ee  46b9              MOV      r9,r7
;;;1706       char* pText;
;;;1707       WM_LOCK();
;;;1708       pObj = MULTIEDIT_H2P(hObj);
0016f0  4650              MOV      r0,r10
0016f2  f7fffffe          BL       GUI_ALLOC_h2p
0016f6  4604              MOV      r4,r0
;;;1709       if (pObj->hText) {
0016f8  8f20              LDRH     r0,[r4,#0x38]
0016fa  b158              CBZ      r0,|L1.5908|
;;;1710         pText = (char*) GUI_ALLOC_h2p(pObj->hText);
0016fc  f9b40038          LDRSH    r0,[r4,#0x38]
001700  f7fffffe          BL       GUI_ALLOC_h2p
001704  4605              MOV      r5,r0
;;;1711         NumCharsOld = pObj->NumCharsPrompt;
001706  f8b4b03e          LDRH     r11,[r4,#0x3e]
;;;1712         NumBytesOld = GUI_UC__NumChars2NumBytes(pText, NumCharsOld);
00170a  4659              MOV      r1,r11
00170c  4628              MOV      r0,r5
00170e  f7fffffe          BL       GUI_UC__NumChars2NumBytes
001712  4681              MOV      r9,r0
                  |L1.5908|
;;;1713       }
;;;1714       if (pPrompt) {
001714  b146              CBZ      r6,|L1.5928|
;;;1715         NumCharsNew = GUI__GetNumChars(pPrompt);
001716  4630              MOV      r0,r6
001718  f7fffffe          BL       GUI__GetNumChars
00171c  4607              MOV      r7,r0
;;;1716         NumBytesNew = GUI_UC__NumChars2NumBytes(pPrompt, NumCharsNew);
00171e  4639              MOV      r1,r7
001720  4630              MOV      r0,r6
001722  f7fffffe          BL       GUI_UC__NumChars2NumBytes
001726  4680              MOV      r8,r0
                  |L1.5928|
;;;1717       }
;;;1718       if (_IsCharsAvailable(pObj, NumCharsNew - NumCharsOld)) {
001728  eba7010b          SUB      r1,r7,r11
00172c  4620              MOV      r0,r4
00172e  f7fffffe          BL       _IsCharsAvailable
001732  b378              CBZ      r0,|L1.6036|
;;;1719         if (_IsSpaceInBuffer(pObj, NumBytesNew - NumBytesOld)) {
001734  eba80109          SUB      r1,r8,r9
001738  4620              MOV      r0,r4
00173a  f7fffffe          BL       _IsSpaceInBuffer
00173e  b348              CBZ      r0,|L1.6036|
;;;1720           pText = (char*) GUI_ALLOC_h2p(pObj->hText);
001740  f9b40038          LDRSH    r0,[r4,#0x38]
001744  f7fffffe          BL       GUI_ALLOC_h2p
001748  4605              MOV      r5,r0
;;;1721           memmove(pText + NumBytesNew, pText + NumBytesOld, strlen(pText + NumBytesOld) + 1);
00174a  eb050009          ADD      r0,r5,r9
00174e  f7fffffe          BL       strlen
001752  1c40              ADDS     r0,r0,#1
001754  eb050109          ADD      r1,r5,r9
001758  9000              STR      r0,[sp,#0]
00175a  eb050008          ADD      r0,r5,r8
00175e  9a00              LDR      r2,[sp,#0]
001760  f7fffffe          BL       __aeabi_memmove
;;;1722           if (pPrompt) {
001764  b126              CBZ      r6,|L1.6000|
;;;1723             memcpy(pText, pPrompt, NumBytesNew);
001766  4642              MOV      r2,r8
001768  4631              MOV      r1,r6
00176a  4628              MOV      r0,r5
00176c  f7fffffe          BL       __aeabi_memcpy
                  |L1.6000|
;;;1724           }
;;;1725           pObj->NumCharsPrompt = NumCharsNew;
001770  87e7              STRH     r7,[r4,#0x3e]
;;;1726           _SetCursorPos(hObj, pObj, NumCharsNew);
001772  463a              MOV      r2,r7
001774  4621              MOV      r1,r4
001776  4650              MOV      r0,r10
001778  f7fffffe          BL       _SetCursorPos
;;;1727           _InvalidateTextArea(hObj);
00177c  4650              MOV      r0,r10
00177e  f7fffffe          BL       _InvalidateTextArea
;;;1728           _InvalidateNumChars(pObj);
001782  4620              MOV      r0,r4
001784  f7fffffe          BL       _InvalidateNumChars
;;;1729           _InvalidateNumLines(pObj);
001788  4620              MOV      r0,r4
00178a  f7fffffe          BL       _InvalidateNumLines
;;;1730           _InvalidateTextSizeX(pObj);
00178e  4620              MOV      r0,r4
001790  f7fffffe          BL       _InvalidateTextSizeX
                  |L1.6036|
;;;1731         }
;;;1732       }
;;;1733       WM_UNLOCK();
;;;1734     }
001794  bf00              NOP      
                  |L1.6038|
;;;1735   }
001796  e8bd8ff8          POP      {r3-r11,pc}
;;;1736   
                          ENDP

                  MULTIEDIT_SetBufferSize PROC
;;;1740   */
;;;1741   void MULTIEDIT_SetBufferSize(MULTIEDIT_HANDLE hObj, int BufferSize) {
00179a  e92d41f0          PUSH     {r4-r8,lr}
00179e  4606              MOV      r6,r0
0017a0  460d              MOV      r5,r1
;;;1742     if (hObj) {
0017a2  b386              CBZ      r6,|L1.6150|
;;;1743       MULTIEDIT_OBJ* pObj;
;;;1744       WM_HMEM hText;
;;;1745       WM_LOCK();
;;;1746       pObj = MULTIEDIT_H2P(hObj);
0017a4  4630              MOV      r0,r6
0017a6  f7fffffe          BL       GUI_ALLOC_h2p
0017aa  4604              MOV      r4,r0
;;;1747       if ((hText = GUI_ALLOC_AllocZero(BufferSize)) == 0) {
0017ac  b228              SXTH     r0,r5
0017ae  f7fffffe          BL       GUI_ALLOC_AllocZero
0017b2  0007              MOVS     r7,r0
0017b4  d023              BEQ      |L1.6142|
;;;1748         GUI_DEBUG_ERROROUT("MULTIEDIT_SetBufferSize failed to alloc buffer");
;;;1749       } else {
;;;1750         GUI_ALLOC_FreePtr(&pObj->hText);
0017b6  f1040038          ADD      r0,r4,#0x38
0017ba  e007              B        |L1.6092|
                  |L1.6076|
                          DCD      _MULTIEDIT_Callback
                  |L1.6080|
                          DCD      _aDefaultBkColor
                  |L1.6084|
                          DCD      _aDefaultColor
                  |L1.6088|
                          DCD      _pDefaultFont
                  |L1.6092|
0017cc  f7fffffe          BL       GUI_ALLOC_FreePtr
;;;1751         pObj->hText          = hText;
0017d0  8727              STRH     r7,[r4,#0x38]
;;;1752         pObj->BufferSize     = BufferSize;
0017d2  f8a45044          STRH     r5,[r4,#0x44]
;;;1753         pObj->NumCharsPrompt = 0;
0017d6  f04f0000          MOV      r0,#0
0017da  87e0              STRH     r0,[r4,#0x3e]
;;;1754         _SetCursorPos(hObj, pObj, 0);
0017dc  4602              MOV      r2,r0
0017de  4621              MOV      r1,r4
0017e0  4630              MOV      r0,r6
0017e2  f7fffffe          BL       _SetCursorPos
;;;1755         _InvalidateNumChars(pObj);
0017e6  4620              MOV      r0,r4
0017e8  f7fffffe          BL       _InvalidateNumChars
;;;1756         _InvalidateCursorXY(pObj);
0017ec  4620              MOV      r0,r4
0017ee  f7fffffe          BL       _InvalidateCursorXY
;;;1757         _InvalidateNumLines(pObj);
0017f2  4620              MOV      r0,r4
0017f4  f7fffffe          BL       _InvalidateNumLines
;;;1758         _InvalidateTextSizeX(pObj);
0017f8  4620              MOV      r0,r4
0017fa  f7fffffe          BL       _InvalidateTextSizeX
                  |L1.6142|
;;;1759       }
;;;1760       _InvalidateTextArea(hObj);
0017fe  4630              MOV      r0,r6
001800  f7fffffe          BL       _InvalidateTextArea
;;;1761       WM_UNLOCK();
;;;1762     }
001804  bf00              NOP      
                  |L1.6150|
;;;1763   }
001806  e8bd81f0          POP      {r4-r8,pc}
;;;1764   
                          ENDP

                  MULTIEDIT_SetMaxNumChars PROC
;;;1768   */
;;;1769   void MULTIEDIT_SetMaxNumChars(MULTIEDIT_HANDLE hObj, unsigned MaxNumChars) {
00180a  e92d41f0          PUSH     {r4-r8,lr}
00180e  4680              MOV      r8,r0
001810  460d              MOV      r5,r1
;;;1770     if (hObj) {
001812  f1b80f00          CMP      r8,#0
001816  d02a              BEQ      |L1.6254|
;;;1771       MULTIEDIT_OBJ* pObj;
;;;1772       WM_LOCK();
;;;1773       pObj = MULTIEDIT_H2P(hObj);
001818  4640              MOV      r0,r8
00181a  f7fffffe          BL       GUI_ALLOC_h2p
00181e  4604              MOV      r4,r0
;;;1774       pObj->MaxNumChars = MaxNumChars;
001820  8765              STRH     r5,[r4,#0x3a]
;;;1775       if (MaxNumChars < (unsigned)pObj->NumCharsPrompt) {
001822  8fe0              LDRH     r0,[r4,#0x3e]
001824  42a8              CMP      r0,r5
001826  d900              BLS      |L1.6186|
;;;1776         pObj->NumCharsPrompt = MaxNumChars;
001828  87e5              STRH     r5,[r4,#0x3e]
                  |L1.6186|
;;;1777       }
;;;1778       if (pObj->hText && MaxNumChars) {
00182a  8f20              LDRH     r0,[r4,#0x38]
00182c  b1f0              CBZ      r0,|L1.6252|
00182e  b1ed              CBZ      r5,|L1.6252|
;;;1779         char* pText;
;;;1780         int Offset;
;;;1781         pText = (char*) GUI_ALLOC_h2p(pObj->hText);
001830  f9b40038          LDRSH    r0,[r4,#0x38]
001834  f7fffffe          BL       GUI_ALLOC_h2p
001838  4606              MOV      r6,r0
;;;1782         Offset = GUI_UC__NumChars2NumBytes(pText, MaxNumChars);
00183a  4629              MOV      r1,r5
00183c  4630              MOV      r0,r6
00183e  f7fffffe          BL       GUI_UC__NumChars2NumBytes
001842  4607              MOV      r7,r0
;;;1783         if (Offset < pObj->BufferSize) {
001844  f8b40044          LDRH     r0,[r4,#0x44]
001848  42b8              CMP      r0,r7
00184a  dd0e              BLE      |L1.6250|
;;;1784           pText += Offset;
00184c  443e              ADD      r6,r6,r7
;;;1785           *pText = 0;
00184e  f04f0000          MOV      r0,#0
001852  7030              STRB     r0,[r6,#0]
;;;1786           _SetCursorPos(hObj, pObj, Offset);
001854  463a              MOV      r2,r7
001856  4621              MOV      r1,r4
001858  4640              MOV      r0,r8
00185a  f7fffffe          BL       _SetCursorPos
;;;1787           _InvalidateTextArea(hObj);
00185e  4640              MOV      r0,r8
001860  f7fffffe          BL       _InvalidateTextArea
;;;1788           _InvalidateNumChars(pObj);
001864  4620              MOV      r0,r4
001866  f7fffffe          BL       _InvalidateNumChars
                  |L1.6250|
;;;1789         }
;;;1790       }
00186a  bf00              NOP      
                  |L1.6252|
;;;1791       WM_UNLOCK();
;;;1792     }
00186c  bf00              NOP      
                  |L1.6254|
;;;1793   }
00186e  e8bd81f0          POP      {r4-r8,pc}
;;;1794   
                          ENDP

                  MULTIEDIT_GetTextSize PROC
;;;1803   */
;;;1804   int MULTIEDIT_GetTextSize(MULTIEDIT_HANDLE hObj) {
001872  e92d41f0          PUSH     {r4-r8,lr}
001876  4605              MOV      r5,r0
;;;1805     int r = 0;
001878  f04f0700          MOV      r7,#0
;;;1806     if (hObj) {
00187c  b1b5              CBZ      r5,|L1.6316|
;;;1807       MULTIEDIT_OBJ* pObj;
;;;1808       WM_LOCK();
;;;1809       pObj = MULTIEDIT_H2P(hObj);
00187e  4628              MOV      r0,r5
001880  f7fffffe          BL       GUI_ALLOC_h2p
001884  4604              MOV      r4,r0
;;;1810       if (pObj->hText) {
001886  8f20              LDRH     r0,[r4,#0x38]
001888  b178              CBZ      r0,|L1.6314|
;;;1811         const char* s;
;;;1812         s = (const char*)GUI_ALLOC_h2p(pObj->hText);
00188a  f9b40038          LDRSH    r0,[r4,#0x38]
00188e  f7fffffe          BL       GUI_ALLOC_h2p
001892  4606              MOV      r6,r0
;;;1813         s += GUI_UC__NumChars2NumBytes(s, pObj->NumCharsPrompt);
001894  8fe1              LDRH     r1,[r4,#0x3e]
001896  4630              MOV      r0,r6
001898  f7fffffe          BL       GUI_UC__NumChars2NumBytes
00189c  4406              ADD      r6,r6,r0
;;;1814         r = 1 + strlen(s);
00189e  4630              MOV      r0,r6
0018a0  f7fffffe          BL       strlen
0018a4  f1000701          ADD      r7,r0,#1
;;;1815       }
0018a8  bf00              NOP      
                  |L1.6314|
;;;1816       WM_UNLOCK();
;;;1817     }
0018aa  bf00              NOP      
                  |L1.6316|
;;;1818     return r;
0018ac  4638              MOV      r0,r7
;;;1819   }
0018ae  e8bd81f0          POP      {r4-r8,pc}
;;;1820   
                          ENDP


                          AREA ||.data||, DATA, ALIGN=2

                  _aDefaultBkColor
                          DCD      0x00ffffff
                          DCD      0x00c0c0c0
                  _aDefaultColor
                          DCD      0x00000000
                          DCD      0x00000000
                  _pDefaultFont
                          DCD      GUI_Font13_1

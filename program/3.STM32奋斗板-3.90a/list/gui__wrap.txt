; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\gui__wrap.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\gui__wrap.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\gui__wrap.crf GUI\Core\GUI__Wrap.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  _IsLineEnd PROC
;;;31     */
;;;32     static int _IsLineEnd(U16 Char) {
000000  4601              MOV      r1,r0
;;;33       if (!Char || (Char == '\n')) {
000002  b109              CBZ      r1,|L1.8|
000004  290a              CMP      r1,#0xa
000006  d101              BNE      |L1.12|
                  |L1.8|
;;;34         return 1;
000008  2001              MOVS     r0,#1
                  |L1.10|
;;;35       }
;;;36       return 0;
;;;37     }
00000a  4770              BX       lr
                  |L1.12|
00000c  2000              MOVS     r0,#0                 ;36
00000e  e7fc              B        |L1.10|
;;;38     
                          ENDP

                  _GetWordWrap PROC
;;;42     */
;;;43     static int _GetWordWrap(const char GUI_UNI_PTR * s, int xSize) {
000010  e92d47f3          PUSH     {r0,r1,r4-r10,lr}
000014  460e              MOV      r6,r1
;;;44       int xDist = 0, NumChars = 0, WordWrap = 0;
000016  f04f0700          MOV      r7,#0
00001a  463c              MOV      r4,r7
00001c  46a0              MOV      r8,r4
;;;45       U16 Char, PrevChar = 0;
00001e  46a1              MOV      r9,r4
;;;46       while (1) {
000020  e01a              B        |L1.88|
                  |L1.34|
;;;47         Char = GUI_UC__GetCharCodeInc(&s);   /* Similar to:  *s++ */
000022  4668              MOV      r0,sp
000024  f7fffffe          BL       GUI_UC__GetCharCodeInc
000028  4605              MOV      r5,r0
;;;48         /* Let's first check if the line end is reached. In this case we are done. */
;;;49         if (_IsLineEnd(Char)) {
00002a  4628              MOV      r0,r5
00002c  f7fffffe          BL       _IsLineEnd
000030  b108              CBZ      r0,|L1.54|
;;;50           WordWrap = NumChars;
000032  46a0              MOV      r8,r4
;;;51           break;
000034  e011              B        |L1.90|
                  |L1.54|
;;;52         }
;;;53         /* If current character is a space, we found a wrap position */
;;;54         if ((Char == ' ') && (Char != PrevChar)) {
000036  2d20              CMP      r5,#0x20
000038  d102              BNE      |L1.64|
00003a  454d              CMP      r5,r9
00003c  d000              BEQ      |L1.64|
;;;55           WordWrap = NumChars;
00003e  46a0              MOV      r8,r4
                  |L1.64|
;;;56         }
;;;57         PrevChar = Char;
000040  46a9              MOV      r9,r5
;;;58         xDist += GUI_GetCharDistX(Char);
000042  4628              MOV      r0,r5
000044  f7fffffe          BL       GUI_GetCharDistX
000048  4407              ADD      r7,r7,r0
;;;59         if ((xDist <= xSize) || (NumChars == 0)) {
00004a  42b7              CMP      r7,r6
00004c  dd00              BLE      |L1.80|
00004e  b914              CBNZ     r4,|L1.86|
                  |L1.80|
;;;60           NumChars++;
000050  f1040401          ADD      r4,r4,#1
000054  e000              B        |L1.88|
                  |L1.86|
;;;61         } else {
;;;62           break;
000056  e000              B        |L1.90|
                  |L1.88|
000058  e7e3              B        |L1.34|
                  |L1.90|
00005a  bf00              NOP                            ;51
;;;63         }
;;;64       }
;;;65       if (!WordWrap) {
00005c  f1b80f00          CMP      r8,#0
000060  d100              BNE      |L1.100|
;;;66         WordWrap = NumChars;
000062  46a0              MOV      r8,r4
                  |L1.100|
;;;67       }
;;;68       return WordWrap;
000064  4640              MOV      r0,r8
;;;69     }
000066  e8bd87fc          POP      {r2-r10,pc}
;;;70     
                          ENDP

                  _GetCharWrap PROC
;;;74     */
;;;75     static int _GetCharWrap(const char GUI_UNI_PTR * s, int xSize) {
00006a  e92d41f3          PUSH     {r0,r1,r4-r8,lr}
00006e  460e              MOV      r6,r1
;;;76       int xDist = 0, NumChars = 0;
000070  f04f0700          MOV      r7,#0
000074  463c              MOV      r4,r7
;;;77       U16 Char;
;;;78       while ((Char = GUI_UC__GetCharCodeInc(&s)) != 0) {
000076  e00b              B        |L1.144|
                  |L1.120|
;;;79         xDist += GUI_GetCharDistX(Char);
000078  4628              MOV      r0,r5
00007a  f7fffffe          BL       GUI_GetCharDistX
00007e  4407              ADD      r7,r7,r0
;;;80         if ((NumChars && (xDist > xSize)) || (Char == '\n')) {
000080  b10c              CBZ      r4,|L1.134|
000082  42b7              CMP      r7,r6
000084  dc01              BGT      |L1.138|
                  |L1.134|
000086  2d0a              CMP      r5,#0xa
000088  d100              BNE      |L1.140|
                  |L1.138|
;;;81           break;
00008a  e006              B        |L1.154|
                  |L1.140|
;;;82         }
;;;83         NumChars++;
00008c  f1040401          ADD      r4,r4,#1
                  |L1.144|
000090  4668              MOV      r0,sp                 ;78
000092  f7fffffe          BL       GUI_UC__GetCharCodeInc
000096  0005              MOVS     r5,r0                 ;78
000098  d1ee              BNE      |L1.120|
                  |L1.154|
00009a  bf00              NOP                            ;81
;;;84       }
;;;85       return NumChars;
00009c  4620              MOV      r0,r4
;;;86     }
00009e  e8bd81fc          POP      {r2-r8,pc}
;;;87     
                          ENDP

                  _GetNoWrap PROC
;;;91     */
;;;92     static int _GetNoWrap(const char GUI_UNI_PTR * s) {
0000a2  b510              PUSH     {r4,lr}
0000a4  4604              MOV      r4,r0
;;;93       return GUI__GetLineNumChars(s, 0x7FFF);
0000a6  f64771ff          MOV      r1,#0x7fff
0000aa  4620              MOV      r0,r4
0000ac  f7fffffe          BL       GUI__GetLineNumChars
;;;94     }
0000b0  bd10              POP      {r4,pc}
;;;95     
                          ENDP

                  GUI__WrapGetNumCharsDisp PROC
;;;110    */
;;;111    int GUI__WrapGetNumCharsDisp(const char GUI_UNI_PTR * pText, int xSize, GUI_WRAPMODE WrapMode) {
0000b2  e92d41f0          PUSH     {r4-r8,lr}
0000b6  4606              MOV      r6,r0
0000b8  460f              MOV      r7,r1
0000ba  4615              MOV      r5,r2
;;;112      int r;
;;;113      switch (WrapMode) {
0000bc  2d01              CMP      r5,#1
0000be  d002              BEQ      |L1.198|
0000c0  2d02              CMP      r5,#2
0000c2  d10c              BNE      |L1.222|
0000c4  e005              B        |L1.210|
                  |L1.198|
;;;114      case GUI_WRAPMODE_WORD:
;;;115        r = _GetWordWrap(pText, xSize);
0000c6  4639              MOV      r1,r7
0000c8  4630              MOV      r0,r6
0000ca  f7fffffe          BL       _GetWordWrap
0000ce  4604              MOV      r4,r0
;;;116        break;
0000d0  e00a              B        |L1.232|
                  |L1.210|
;;;117      case GUI_WRAPMODE_CHAR:
;;;118        r = _GetCharWrap(pText, xSize);
0000d2  4639              MOV      r1,r7
0000d4  4630              MOV      r0,r6
0000d6  f7fffffe          BL       _GetCharWrap
0000da  4604              MOV      r4,r0
;;;119        break;
0000dc  e004              B        |L1.232|
                  |L1.222|
;;;120      default:
;;;121        r = _GetNoWrap(pText);
0000de  4630              MOV      r0,r6
0000e0  f7fffffe          BL       _GetNoWrap
0000e4  4604              MOV      r4,r0
0000e6  bf00              NOP                            ;113
                  |L1.232|
0000e8  bf00              NOP                            ;116
;;;122      }
;;;123      return r;
0000ea  4620              MOV      r0,r4
;;;124    }
0000ec  e8bd81f0          POP      {r4-r8,pc}
;;;125    
                          ENDP

                  GUI__WrapGetNumCharsToNextLine PROC
;;;129    */
;;;130    int GUI__WrapGetNumCharsToNextLine(const char GUI_UNI_PTR * pText, int xSize, GUI_WRAPMODE WrapMode) {
0000f0  b5f7              PUSH     {r0-r2,r4-r7,lr}
0000f2  460f              MOV      r7,r1
0000f4  4615              MOV      r5,r2
;;;131      int NumChars;
;;;132      U16 Char;
;;;133      NumChars = GUI__WrapGetNumCharsDisp(pText, xSize, WrapMode);
0000f6  462a              MOV      r2,r5
0000f8  4639              MOV      r1,r7
0000fa  9800              LDR      r0,[sp,#0]
0000fc  f7fffffe          BL       GUI__WrapGetNumCharsDisp
000100  4604              MOV      r4,r0
;;;134      pText   += GUI_UC__NumChars2NumBytes(pText, NumChars);
000102  4621              MOV      r1,r4
000104  9800              LDR      r0,[sp,#0]
000106  f7fffffe          BL       GUI_UC__NumChars2NumBytes
00010a  9900              LDR      r1,[sp,#0]
00010c  4408              ADD      r0,r0,r1
00010e  9000              STR      r0,[sp,#0]
;;;135      Char     = GUI_UC__GetCharCodeInc(&pText);
000110  4668              MOV      r0,sp
000112  f7fffffe          BL       GUI_UC__GetCharCodeInc
000116  4606              MOV      r6,r0
;;;136      if (Char == '\n') {
000118  2e0a              CMP      r6,#0xa
00011a  d102              BNE      |L1.290|
;;;137        NumChars++;
00011c  f1040401          ADD      r4,r4,#1
000120  e00a              B        |L1.312|
                  |L1.290|
;;;138      } else {
;;;139        if (WrapMode == GUI_WRAPMODE_WORD) {
000122  2d01              CMP      r5,#1
000124  d108              BNE      |L1.312|
;;;140          while (Char == ' ') {
000126  e005              B        |L1.308|
                  |L1.296|
;;;141            NumChars++;
000128  f1040401          ADD      r4,r4,#1
;;;142            Char = GUI_UC__GetCharCodeInc(&pText);
00012c  4668              MOV      r0,sp
00012e  f7fffffe          BL       GUI_UC__GetCharCodeInc
000132  4606              MOV      r6,r0
                  |L1.308|
000134  2e20              CMP      r6,#0x20              ;140
000136  d0f7              BEQ      |L1.296|
                  |L1.312|
;;;143          }
;;;144        }
;;;145      }
;;;146      return NumChars;
000138  4620              MOV      r0,r4
;;;147    }
00013a  bdfe              POP      {r1-r7,pc}
;;;148    
                          ENDP

                  GUI__WrapGetNumBytesToNextLine PROC
;;;152    */
;;;153    int GUI__WrapGetNumBytesToNextLine(const char GUI_UNI_PTR * pText, int xSize, GUI_WRAPMODE WrapMode) {
00013c  e92d41f0          PUSH     {r4-r8,lr}
000140  4604              MOV      r4,r0
000142  460d              MOV      r5,r1
000144  4616              MOV      r6,r2
;;;154      int NumChars, NumBytes;
;;;155      NumChars = GUI__WrapGetNumCharsToNextLine(pText, xSize, WrapMode);
000146  4632              MOV      r2,r6
000148  4629              MOV      r1,r5
00014a  4620              MOV      r0,r4
00014c  f7fffffe          BL       GUI__WrapGetNumCharsToNextLine
000150  4680              MOV      r8,r0
;;;156      NumBytes = GUI_UC__NumChars2NumBytes(pText, NumChars);
000152  4641              MOV      r1,r8
000154  4620              MOV      r0,r4
000156  f7fffffe          BL       GUI_UC__NumChars2NumBytes
00015a  4607              MOV      r7,r0
;;;157      return NumBytes;
00015c  4638              MOV      r0,r7
;;;158    }
00015e  e8bd81f0          POP      {r4-r8,pc}
;;;159    
                          ENDP


; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\guiarc.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\guiarc.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\guiarc.crf GUI\Core\GUIArc.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _CalcX PROC
;;;45     */
;;;46     static void _CalcX(int*px, int y, U32 r2) {
000000  b5f0              PUSH     {r4-r7,lr}
000002  460b              MOV      r3,r1
;;;47       int x =*px;
000004  6801              LDR      r1,[r0,#0]
;;;48       U32 y2 = (U32)y*(U32)y;
000006  fb03f403          MUL      r4,r3,r3
;;;49       U32 r2y2 = r2-y2;
00000a  eba20604          SUB      r6,r2,r4
;;;50       U32 x2;
;;;51       if (y2>=r2) {
00000e  4294              CMP      r4,r2
000010  d303              BCC      |L1.26|
;;;52         *px=0;
000012  f04f0700          MOV      r7,#0
000016  6007              STR      r7,[r0,#0]
                  |L1.24|
;;;53     		return;
;;;54     	}
;;;55       /* x2 = r2-y2 */
;;;56       do {
;;;57         x++;
;;;58         x2 =(U32)x*(U32)x;
;;;59     	} while (x2 < r2y2);
;;;60     	*px = x-1;
;;;61     }
000018  bdf0              POP      {r4-r7,pc}
                  |L1.26|
00001a  bf00              NOP                            ;56
                  |L1.28|
00001c  f1010101          ADD      r1,r1,#1              ;57
000020  fb01f501          MUL      r5,r1,r1              ;58
000024  42b5              CMP      r5,r6                 ;59
000026  d3f9              BCC      |L1.28|
000028  f1a10701          SUB      r7,r1,#1              ;60
00002c  6007              STR      r7,[r0,#0]            ;60
00002e  bf00              NOP      
000030  e7f2              B        |L1.24|
;;;62     
                          ENDP

                  _CalcInterSectLin PROC
;;;66     */
;;;67     static float _CalcInterSectLin(float y, float y0, float y1, float x0, float x1) {
000032  e92d5ff0          PUSH     {r4-r12,lr}
000036  4607              MOV      r7,r0
000038  460c              MOV      r4,r1
00003a  4615              MOV      r5,r2
00003c  461e              MOV      r6,r3
00003e  f8dd8028          LDR      r8,[sp,#0x28]
;;;68       if (y1==y0) {
000042  4621              MOV      r1,r4
000044  4628              MOV      r0,r5
000046  f7fffffe          BL       __aeabi_cfcmpeq
00004a  d102              BNE      |L1.82|
;;;69     	  return y0;
00004c  4620              MOV      r0,r4
                  |L1.78|
;;;70     	} else {
;;;71         float Slope = (x1-x0)/(y1-y0);
;;;72        return (y-y0)*Slope+x0;
;;;73     	}
;;;74     }
00004e  e8bd9ff0          POP      {r4-r12,pc}
                  |L1.82|
000052  4621              MOV      r1,r4                 ;71
000054  4628              MOV      r0,r5                 ;71
000056  f7fffffe          BL       __aeabi_fsub
00005a  4682              MOV      r10,r0                ;71
00005c  4631              MOV      r1,r6                 ;71
00005e  4640              MOV      r0,r8                 ;71
000060  f7fffffe          BL       __aeabi_fsub
000064  4683              MOV      r11,r0                ;71
000066  4651              MOV      r1,r10                ;71
000068  f7fffffe          BL       __aeabi_fdiv
00006c  4681              MOV      r9,r0                 ;71
00006e  4621              MOV      r1,r4                 ;72
000070  4638              MOV      r0,r7                 ;72
000072  f7fffffe          BL       __aeabi_fsub
000076  4683              MOV      r11,r0                ;72
000078  4649              MOV      r1,r9                 ;72
00007a  f7fffffe          BL       __aeabi_fmul
00007e  4682              MOV      r10,r0                ;72
000080  4631              MOV      r1,r6                 ;72
000082  f7fffffe          BL       __aeabi_fadd
000086  e7e2              B        |L1.78|
;;;75     
                          ENDP

                  _DrawArc PROC
;;;79     */
;;;80     static void _DrawArc(int x0, int y0, int rx, int ry, int Angle0, int Angle1, int xMul, int yMul) {
000088  e92d4fff          PUSH     {r0-r11,lr}
00008c  b09d              SUB      sp,sp,#0x74
00008e  4606              MOV      r6,r0
000090  460c              MOV      r4,r1
000092  4692              MOV      r10,r2
000094  9f2d              LDR      r7,[sp,#0xb4]
;;;81       float afx[4];
;;;82       float afy[4];
;;;83     	float ri = rx-(GUI_Context.PenSize+1.5)/2;
000096  49fc              LDR      r1,|L1.1160|
000098  7d08              LDRB     r0,[r1,#0x14]  ; GUI_Context
00009a  f7fffffe          BL       __aeabi_ui2d
00009e  2200              MOVS     r2,#0
0000a0  4bfa              LDR      r3,|L1.1164|
0000a2  e9cd0100          STRD     r0,r1,[sp,#0]
0000a6  f7fffffe          BL       __aeabi_dadd
0000aa  2200              MOVS     r2,#0
0000ac  f04f4380          MOV      r3,#0x40000000
0000b0  e9cd0102          STRD     r0,r1,[sp,#8]
0000b4  f7fffffe          BL       __aeabi_ddiv
0000b8  e9cd0106          STRD     r0,r1,[sp,#0x18]
0000bc  4650              MOV      r0,r10
0000be  f7fffffe          BL       __aeabi_i2d
0000c2  e9cd0104          STRD     r0,r1,[sp,#0x10]
0000c6  e9dd2306          LDRD     r2,r3,[sp,#0x18]
0000ca  f7fffffe          BL       __aeabi_dsub
0000ce  e9cd0108          STRD     r0,r1,[sp,#0x20]
0000d2  f7fffffe          BL       __aeabi_d2f
0000d6  9013              STR      r0,[sp,#0x4c]
;;;84     	float ro = rx+(GUI_Context.PenSize+1.5)/2;
0000d8  49eb              LDR      r1,|L1.1160|
0000da  7d08              LDRB     r0,[r1,#0x14]  ; GUI_Context
0000dc  f7fffffe          BL       __aeabi_ui2d
0000e0  2200              MOVS     r2,#0
0000e2  4bea              LDR      r3,|L1.1164|
0000e4  e9cd0100          STRD     r0,r1,[sp,#0]
0000e8  f7fffffe          BL       __aeabi_dadd
0000ec  2200              MOVS     r2,#0
0000ee  f04f4380          MOV      r3,#0x40000000
0000f2  e9cd0102          STRD     r0,r1,[sp,#8]
0000f6  f7fffffe          BL       __aeabi_ddiv
0000fa  e9cd0106          STRD     r0,r1,[sp,#0x18]
0000fe  4650              MOV      r0,r10
000100  f7fffffe          BL       __aeabi_i2d
000104  e9cd0104          STRD     r0,r1,[sp,#0x10]
000108  e9dd2306          LDRD     r2,r3,[sp,#0x18]
00010c  f7fffffe          BL       __aeabi_dadd
000110  e9cd0108          STRD     r0,r1,[sp,#0x20]
000114  f7fffffe          BL       __aeabi_d2f
000118  9012              STR      r0,[sp,#0x48]
;;;85       float fAngle0 = Angle0*3.1415926/180;
00011a  982a              LDR      r0,[sp,#0xa8]
00011c  f7fffffe          BL       __aeabi_i2d
000120  4adb              LDR      r2,|L1.1168|
000122  4bdc              LDR      r3,|L1.1172|
000124  e9cd0104          STRD     r0,r1,[sp,#0x10]
000128  f7fffffe          BL       __aeabi_dmul
00012c  2200              MOVS     r2,#0
00012e  4bda              LDR      r3,|L1.1176|
000130  e9cd0106          STRD     r0,r1,[sp,#0x18]
000134  f7fffffe          BL       __aeabi_ddiv
000138  e9cd0108          STRD     r0,r1,[sp,#0x20]
00013c  f7fffffe          BL       __aeabi_d2f
000140  9011              STR      r0,[sp,#0x44]
;;;86       float fAngle1 = Angle1*3.1415926/180;
000142  982b              LDR      r0,[sp,#0xac]
000144  f7fffffe          BL       __aeabi_i2d
000148  4ad1              LDR      r2,|L1.1168|
00014a  4bd2              LDR      r3,|L1.1172|
00014c  e9cd0104          STRD     r0,r1,[sp,#0x10]
000150  f7fffffe          BL       __aeabi_dmul
000154  2200              MOVS     r2,#0
000156  4bd0              LDR      r3,|L1.1176|
000158  e9cd0106          STRD     r0,r1,[sp,#0x18]
00015c  f7fffffe          BL       __aeabi_ddiv
000160  e9cd0108          STRD     r0,r1,[sp,#0x20]
000164  f7fffffe          BL       __aeabi_d2f
000168  9010              STR      r0,[sp,#0x40]
;;;87       float sin0 = sin(fAngle0); 
00016a  9811              LDR      r0,[sp,#0x44]
00016c  f7fffffe          BL       __aeabi_f2d
000170  e9cd0106          STRD     r0,r1,[sp,#0x18]
000174  f7fffffe          BL       ||sin||
000178  e9cd0108          STRD     r0,r1,[sp,#0x20]
00017c  f7fffffe          BL       __aeabi_d2f
000180  900f              STR      r0,[sp,#0x3c]
;;;88       float sin1 = sin(fAngle1); 
000182  9810              LDR      r0,[sp,#0x40]
000184  f7fffffe          BL       __aeabi_f2d
000188  e9cd0106          STRD     r0,r1,[sp,#0x18]
00018c  f7fffffe          BL       ||sin||
000190  e9cd0108          STRD     r0,r1,[sp,#0x20]
000194  f7fffffe          BL       __aeabi_d2f
000198  900e              STR      r0,[sp,#0x38]
;;;89       float cos0 = cos(fAngle0); 
00019a  9811              LDR      r0,[sp,#0x44]
00019c  f7fffffe          BL       __aeabi_f2d
0001a0  e9cd0106          STRD     r0,r1,[sp,#0x18]
0001a4  f7fffffe          BL       ||cos||
0001a8  e9cd0108          STRD     r0,r1,[sp,#0x20]
0001ac  f7fffffe          BL       __aeabi_d2f
0001b0  900d              STR      r0,[sp,#0x34]
;;;90       float cos1 = cos(fAngle1); 
0001b2  9810              LDR      r0,[sp,#0x40]
0001b4  f7fffffe          BL       __aeabi_f2d
0001b8  e9cd0106          STRD     r0,r1,[sp,#0x18]
0001bc  f7fffffe          BL       ||cos||
0001c0  e9cd0108          STRD     r0,r1,[sp,#0x20]
0001c4  f7fffffe          BL       __aeabi_d2f
0001c8  900c              STR      r0,[sp,#0x30]
;;;91       U32   ri2 = ri*ri;
0001ca  9913              LDR      r1,[sp,#0x4c]
0001cc  4608              MOV      r0,r1
0001ce  f7fffffe          BL       __aeabi_fmul
0001d2  4683              MOV      r11,r0
0001d4  f7fffffe          BL       __aeabi_f2uiz
0001d8  900b              STR      r0,[sp,#0x2c]
;;;92       U32   ro2 = ro*ro;
0001da  9912              LDR      r1,[sp,#0x48]
0001dc  4608              MOV      r0,r1
0001de  f7fffffe          BL       __aeabi_fmul
0001e2  4683              MOV      r11,r0
0001e4  f7fffffe          BL       __aeabi_f2uiz
0001e8  900a              STR      r0,[sp,#0x28]
;;;93     	int y, yMax, yMin;
;;;94     	afy[0] = ri*sin0;
0001ea  990f              LDR      r1,[sp,#0x3c]
0001ec  9813              LDR      r0,[sp,#0x4c]
0001ee  f7fffffe          BL       __aeabi_fmul
0001f2  9014              STR      r0,[sp,#0x50]
;;;95     	afy[1] = ro*sin0;
0001f4  990f              LDR      r1,[sp,#0x3c]
0001f6  9812              LDR      r0,[sp,#0x48]
0001f8  f7fffffe          BL       __aeabi_fmul
0001fc  9015              STR      r0,[sp,#0x54]
;;;96     	afy[2] = ri*sin1;
0001fe  990e              LDR      r1,[sp,#0x38]
000200  9813              LDR      r0,[sp,#0x4c]
000202  f7fffffe          BL       __aeabi_fmul
000206  9016              STR      r0,[sp,#0x58]
;;;97     	afy[3] = ro*sin1;
000208  990e              LDR      r1,[sp,#0x38]
00020a  9812              LDR      r0,[sp,#0x48]
00020c  f7fffffe          BL       __aeabi_fmul
000210  9017              STR      r0,[sp,#0x5c]
;;;98     	afx[0] = ri*cos0;
000212  990d              LDR      r1,[sp,#0x34]
000214  9813              LDR      r0,[sp,#0x4c]
000216  f7fffffe          BL       __aeabi_fmul
00021a  9018              STR      r0,[sp,#0x60]
;;;99     	afx[1] = ro*cos0;
00021c  990d              LDR      r1,[sp,#0x34]
00021e  9812              LDR      r0,[sp,#0x48]
000220  f7fffffe          BL       __aeabi_fmul
000224  9019              STR      r0,[sp,#0x64]
;;;100    	afx[2] = ri*cos1;
000226  990c              LDR      r1,[sp,#0x30]
000228  9813              LDR      r0,[sp,#0x4c]
00022a  f7fffffe          BL       __aeabi_fmul
00022e  901a              STR      r0,[sp,#0x68]
;;;101    	afx[3] = ro*cos1;
000230  990c              LDR      r1,[sp,#0x30]
000232  9812              LDR      r0,[sp,#0x48]
000234  f7fffffe          BL       __aeabi_fmul
000238  901b              STR      r0,[sp,#0x6c]
;;;102    	yMin = ceil(afy[0]);
00023a  9814              LDR      r0,[sp,#0x50]
00023c  f7fffffe          BL       __aeabi_f2d
000240  e9cd0106          STRD     r0,r1,[sp,#0x18]
000244  f7fffffe          BL       ceil
000248  e9cd0108          STRD     r0,r1,[sp,#0x20]
00024c  f7fffffe          BL       __aeabi_d2iz
000250  4681              MOV      r9,r0
;;;103      yMax = floor(afy[3]);
000252  9817              LDR      r0,[sp,#0x5c]
000254  f7fffffe          BL       __aeabi_f2d
000258  e9cd0106          STRD     r0,r1,[sp,#0x18]
00025c  f7fffffe          BL       floor
000260  e9cd0108          STRD     r0,r1,[sp,#0x20]
000264  f7fffffe          BL       __aeabi_d2iz
000268  4680              MOV      r8,r0
;;;104      /* Use Clipping rect to reduce calculation (if possible) */
;;;105      if (GUI_Context.pClipRect_HL) {
00026a  4887              LDR      r0,|L1.1160|
00026c  6900              LDR      r0,[r0,#0x10]  ; GUI_Context
00026e  b3b8              CBZ      r0,|L1.736|
;;;106        if (yMul ==1) {
000270  2f01              CMP      r7,#1
000272  d119              BNE      |L1.680|
;;;107          if (yMax > (GUI_Context.pClipRect_HL->y1 -y0))
000274  4884              LDR      r0,|L1.1160|
000276  6900              LDR      r0,[r0,#0x10]  ; GUI_Context
000278  f9b00006          LDRSH    r0,[r0,#6]
00027c  1b00              SUBS     r0,r0,r4
00027e  4540              CMP      r0,r8
000280  da05              BGE      |L1.654|
;;;108            yMax = (GUI_Context.pClipRect_HL->y1 -y0);
000282  4881              LDR      r0,|L1.1160|
000284  6900              LDR      r0,[r0,#0x10]  ; GUI_Context
000286  f9b00006          LDRSH    r0,[r0,#6]
00028a  eba00804          SUB      r8,r0,r4
                  |L1.654|
;;;109          if (yMin < (GUI_Context.pClipRect_HL->y0 -y0))
00028e  487e              LDR      r0,|L1.1160|
000290  6900              LDR      r0,[r0,#0x10]  ; GUI_Context
000292  f9b00002          LDRSH    r0,[r0,#2]
000296  1b00              SUBS     r0,r0,r4
000298  4548              CMP      r0,r9
00029a  dd05              BLE      |L1.680|
;;;110            yMin = (GUI_Context.pClipRect_HL->y0 -y0);
00029c  487a              LDR      r0,|L1.1160|
00029e  6900              LDR      r0,[r0,#0x10]  ; GUI_Context
0002a0  f9b00002          LDRSH    r0,[r0,#2]
0002a4  eba00904          SUB      r9,r0,r4
                  |L1.680|
;;;111        }
;;;112        if (yMul == -1) {
0002a8  1c78              ADDS     r0,r7,#1
0002aa  d119              BNE      |L1.736|
;;;113          if (yMin > (GUI_Context.pClipRect_HL->y1 -y0))
0002ac  4876              LDR      r0,|L1.1160|
0002ae  6900              LDR      r0,[r0,#0x10]  ; GUI_Context
0002b0  f9b00006          LDRSH    r0,[r0,#6]
0002b4  1b00              SUBS     r0,r0,r4
0002b6  4548              CMP      r0,r9
0002b8  da05              BGE      |L1.710|
;;;114            yMin = (GUI_Context.pClipRect_HL->y1 -y0);
0002ba  4873              LDR      r0,|L1.1160|
0002bc  6900              LDR      r0,[r0,#0x10]  ; GUI_Context
0002be  f9b00006          LDRSH    r0,[r0,#6]
0002c2  eba00904          SUB      r9,r0,r4
                  |L1.710|
;;;115          if (yMax < (GUI_Context.pClipRect_HL->y0 -y0))
0002c6  4870              LDR      r0,|L1.1160|
0002c8  6900              LDR      r0,[r0,#0x10]  ; GUI_Context
0002ca  f9b00002          LDRSH    r0,[r0,#2]
0002ce  1b00              SUBS     r0,r0,r4
0002d0  4540              CMP      r0,r8
0002d2  dd05              BLE      |L1.736|
;;;116            yMax = (GUI_Context.pClipRect_HL->y0 -y0);
0002d4  486c              LDR      r0,|L1.1160|
0002d6  6900              LDR      r0,[r0,#0x10]  ; GUI_Context
0002d8  f9b00002          LDRSH    r0,[r0,#2]
0002dc  eba00804          SUB      r8,r0,r4
                  |L1.736|
;;;117        }
;;;118      }
;;;119      /* Start drawing lines ... */
;;;120      {
;;;121      int xMinDisp, xMaxDisp, xMin=0,xMax=0;
0002e0  f04f0000          MOV      r0,#0
0002e4  9008              STR      r0,[sp,#0x20]
0002e6  9007              STR      r0,[sp,#0x1c]
;;;122        for (y=yMax; y>=yMin; y--) {
0002e8  4645              MOV      r5,r8
0002ea  e067              B        |L1.956|
                  |L1.748|
;;;123          _CalcX(&xMin, y, ri2);
0002ec  4629              MOV      r1,r5
0002ee  a808              ADD      r0,sp,#0x20
0002f0  9a0b              LDR      r2,[sp,#0x2c]
0002f2  f7fffffe          BL       _CalcX
;;;124          _CalcX(&xMax, y, ro2);
0002f6  4629              MOV      r1,r5
0002f8  a807              ADD      r0,sp,#0x1c
0002fa  9a0a              LDR      r2,[sp,#0x28]
0002fc  f7fffffe          BL       _CalcX
;;;125          if ((float)y< afy[1]) {
000300  4628              MOV      r0,r5
000302  f7fffffe          BL       __aeabi_i2f
000306  9006              STR      r0,[sp,#0x18]
000308  9915              LDR      r1,[sp,#0x54]
00030a  f7fffffe          BL       __aeabi_cfcmple
00030e  d210              BCS      |L1.818|
;;;126            xMaxDisp = _CalcInterSectLin(y,afy[0], afy[1], afx[0], afx[1]);
000310  4628              MOV      r0,r5
000312  f7fffffe          BL       __aeabi_i2f
000316  9005              STR      r0,[sp,#0x14]
000318  9819              LDR      r0,[sp,#0x64]
00031a  9000              STR      r0,[sp,#0]
00031c  9b18              LDR      r3,[sp,#0x60]
00031e  e9dd1214          LDRD     r1,r2,[sp,#0x50]
000322  9805              LDR      r0,[sp,#0x14]
000324  f7fffffe          BL       _CalcInterSectLin
000328  9006              STR      r0,[sp,#0x18]
00032a  f7fffffe          BL       __aeabi_f2iz
00032e  4683              MOV      r11,r0
000330  e001              B        |L1.822|
                  |L1.818|
;;;127    			} else {
;;;128            xMaxDisp = xMax;			
000332  f8ddb01c          LDR      r11,[sp,#0x1c]
                  |L1.822|
;;;129    			}
;;;130          if ((float)y > afy[2]) {
000336  4628              MOV      r0,r5
000338  f7fffffe          BL       __aeabi_i2f
00033c  9006              STR      r0,[sp,#0x18]
00033e  9916              LDR      r1,[sp,#0x58]
000340  f7fffffe          BL       __aeabi_cfrcmple
000344  d210              BCS      |L1.872|
;;;131            xMinDisp = _CalcInterSectLin(y,afy[2], afy[3], afx[2], afx[3]);
000346  4628              MOV      r0,r5
000348  f7fffffe          BL       __aeabi_i2f
00034c  9005              STR      r0,[sp,#0x14]
00034e  981b              LDR      r0,[sp,#0x6c]
000350  9000              STR      r0,[sp,#0]
000352  9b1a              LDR      r3,[sp,#0x68]
000354  e9dd1216          LDRD     r1,r2,[sp,#0x58]
000358  9805              LDR      r0,[sp,#0x14]
00035a  f7fffffe          BL       _CalcInterSectLin
00035e  9006              STR      r0,[sp,#0x18]
000360  f7fffffe          BL       __aeabi_f2iz
000364  9009              STR      r0,[sp,#0x24]
000366  e001              B        |L1.876|
                  |L1.872|
;;;132    			} else {
;;;133            xMinDisp = xMin;			
000368  9808              LDR      r0,[sp,#0x20]
00036a  9009              STR      r0,[sp,#0x24]
                  |L1.876|
;;;134    			}
;;;135          if (xMul>0)
00036c  982c              LDR      r0,[sp,#0xb0]
00036e  2800              CMP      r0,#0
000370  dd0f              BLE      |L1.914|
;;;136            LCD_HL_DrawHLine(xMinDisp+x0, yMul*y+y0, xMaxDisp+x0);
000372  eb0b0206          ADD      r2,r11,r6
000376  fb074105          MLA      r1,r7,r5,r4
00037a  f8ddc024          LDR      r12,[sp,#0x24]
00037e  eb0c0006          ADD      r0,r12,r6
000382  f8dfc104          LDR      r12,|L1.1160|
000386  f8dcc058          LDR      r12,[r12,#0x58]  ; GUI_Context
00038a  f8dc3000          LDR      r3,[r12,#0]
00038e  4798              BLX      r3
000390  e012              B        |L1.952|
                  |L1.914|
;;;137          else
;;;138            LCD_HL_DrawHLine(-xMaxDisp+x0, yMul*y+y0, -xMinDisp+x0);
000392  f8ddc024          LDR      r12,[sp,#0x24]
000396  f1cc0c00          RSB      r12,r12,#0
00039a  eb0c0206          ADD      r2,r12,r6
00039e  fb074105          MLA      r1,r7,r5,r4
0003a2  f1cb0c00          RSB      r12,r11,#0
0003a6  eb0c0006          ADD      r0,r12,r6
0003aa  f8dfc0dc          LDR      r12,|L1.1160|
0003ae  f8dcc058          LDR      r12,[r12,#0x58]  ; GUI_Context
0003b2  f8dc3000          LDR      r3,[r12,#0]
0003b6  4798              BLX      r3
                  |L1.952|
0003b8  f1a50501          SUB      r5,r5,#1              ;122
                  |L1.956|
0003bc  454d              CMP      r5,r9                 ;122
0003be  da95              BGE      |L1.748|
;;;139        }
;;;140    	}
;;;141    #if 0  /* Test code */
;;;142    {
;;;143      int i;
;;;144      GUI_SetColor( GUI_WHITE ); 
;;;145    	for (i=0; i<4; i++)
;;;146        LCD_HL_DrawPixel(afx[i]+x0, afy[i]+y0);
;;;147    }
;;;148    #endif
;;;149      GUI_USE_PARA(ry);
0003c0  9820              LDR      r0,[sp,#0x80]
0003c2  9020              STR      r0,[sp,#0x80]
;;;150    }
0003c4  b021              ADD      sp,sp,#0x84
0003c6  e8bd8ff0          POP      {r4-r11,pc}
;;;151    
                          ENDP

                  GL_DrawArc PROC
;;;161    */
;;;162    void GL_DrawArc(int x0, int y0, int rx, int ry, int a0, int a1) {
0003ca  e92d47ff          PUSH     {r0-r10,lr}
0003ce  4607              MOV      r7,r0
0003d0  4688              MOV      r8,r1
0003d2  4691              MOV      r9,r2
0003d4  469a              MOV      r10,r3
0003d6  e9dd450c          LDRD     r4,r5,[sp,#0x30]
;;;163      int aEnd;
;;;164      a0+=360;
0003da  f50474b4          ADD      r4,r4,#0x168
;;;165    	a1+=360;
0003de  f50575b4          ADD      r5,r5,#0x168
;;;166    	while (a0>=360) {
0003e2  e003              B        |L1.1004|
                  |L1.996|
;;;167        a0 -= 360;
0003e4  f5a474b4          SUB      r4,r4,#0x168
;;;168        a1 -= 360;
0003e8  f5a575b4          SUB      r5,r5,#0x168
                  |L1.1004|
0003ec  f5b47fb4          CMP      r4,#0x168             ;166
0003f0  daf8              BGE      |L1.996|
;;;169    	}
;;;170    /* Do first quadrant 0-90 degree */
;;;171    DoFirst:
0003f2  bf00              NOP      
                  |L1.1012|
;;;172      if (a1<=0)
0003f4  2d00              CMP      r5,#0
0003f6  dc01              BGT      |L1.1020|
                  |L1.1016|
;;;173    	  return;
;;;174    	if (a0<90) {
;;;175        if (a0<0)
;;;176    		  a0=0;
;;;177        aEnd = (a1<90) ? a1 : 90;
;;;178        _DrawArc(x0,y0,rx,ry,a0,aEnd, 1, -1);
;;;179    	}
;;;180      a1-=90;
;;;181    	a0-=90;
;;;182    /* Do second quadrant 90-180 degree */
;;;183      if (a1<=0)
;;;184    	  return;
;;;185    	if (a0<90) {
;;;186        if (a0<0)
;;;187    		  a0=0;
;;;188        aEnd = (a1<90) ? a1 : 90;
;;;189        _DrawArc(x0,y0,rx,ry,90-aEnd, 90-a0,-1,-1);
;;;190    	}
;;;191      a1-=90;
;;;192    	a0-=90;
;;;193    /* Do third quadrant 180-270 degree */
;;;194      if (a1<=0)
;;;195    	  return;
;;;196    	if (a0<90) {
;;;197        if (a0<0)
;;;198    		  a0=0;
;;;199        aEnd = (a1<90) ? a1 : 90;
;;;200        _DrawArc(x0,y0,rx,ry,a0,aEnd, -1, 1);
;;;201    	}
;;;202      a1-=90;
;;;203    	a0-=90;
;;;204    /* Do last quadrant 270-360 degree */
;;;205      if (a1<=0)
;;;206    	  return;
;;;207    	if (a0<90) {
;;;208        if (a0<0)
;;;209    		  a0=0;
;;;210        aEnd = (a1<90) ? a1 : 90;
;;;211        _DrawArc(x0,y0,rx,ry,90-aEnd, 90-a0,1,1);
;;;212    	}
;;;213      a1-=90;
;;;214    	a0-=90;
;;;215    goto DoFirst;
;;;216    }
0003f8  e8bd87ff          POP      {r0-r10,pc}
                  |L1.1020|
0003fc  2c5a              CMP      r4,#0x5a              ;174
0003fe  da18              BGE      |L1.1074|
000400  2c00              CMP      r4,#0                 ;175
000402  da01              BGE      |L1.1032|
000404  f04f0400          MOV      r4,#0                 ;176
                  |L1.1032|
000408  2d5a              CMP      r5,#0x5a              ;177
00040a  da01              BGE      |L1.1040|
00040c  4628              MOV      r0,r5                 ;177
00040e  e001              B        |L1.1044|
                  |L1.1040|
000410  f04f005a          MOV      r0,#0x5a              ;177
                  |L1.1044|
000414  4606              MOV      r6,r0                 ;177
000416  f04f30ff          MOV      r0,#0xffffffff        ;178
00041a  f04f0101          MOV      r1,#1                 ;178
00041e  4653              MOV      r3,r10                ;178
000420  464a              MOV      r2,r9                 ;178
000422  e9cd4600          STRD     r4,r6,[sp,#0]         ;178
000426  e9cd1002          STRD     r1,r0,[sp,#8]         ;178
00042a  4641              MOV      r1,r8                 ;178
00042c  4638              MOV      r0,r7                 ;178
00042e  f7fffffe          BL       _DrawArc
                  |L1.1074|
000432  f1a5055a          SUB      r5,r5,#0x5a           ;180
000436  f1a4045a          SUB      r4,r4,#0x5a           ;181
00043a  2d00              CMP      r5,#0                 ;183
00043c  dc00              BGT      |L1.1088|
00043e  e7db              B        |L1.1016|
                  |L1.1088|
000440  2c5a              CMP      r4,#0x5a              ;185
000442  da1a              BGE      |L1.1146|
000444  2c00              CMP      r4,#0                 ;186
000446  da01              BGE      |L1.1100|
000448  f04f0400          MOV      r4,#0                 ;187
                  |L1.1100|
00044c  2d5a              CMP      r5,#0x5a              ;188
00044e  da01              BGE      |L1.1108|
000450  4628              MOV      r0,r5                 ;188
000452  e001              B        |L1.1112|
                  |L1.1108|
000454  f04f005a          MOV      r0,#0x5a              ;188
                  |L1.1112|
000458  4606              MOV      r6,r0                 ;188
00045a  f04f32ff          MOV      r2,#0xffffffff        ;189
00045e  f1c4005a          RSB      r0,r4,#0x5a           ;189
000462  f1c6015a          RSB      r1,r6,#0x5a           ;189
000466  e9cd0201          STRD     r0,r2,[sp,#4]         ;189
00046a  4653              MOV      r3,r10                ;189
00046c  9203              STR      r2,[sp,#0xc]          ;189
00046e  9100              STR      r1,[sp,#0]            ;189
000470  464a              MOV      r2,r9                 ;189
000472  4641              MOV      r1,r8                 ;189
000474  4638              MOV      r0,r7                 ;189
000476  f7fffffe          BL       _DrawArc
                  |L1.1146|
00047a  f1a5055a          SUB      r5,r5,#0x5a           ;191
00047e  f1a4045a          SUB      r4,r4,#0x5a           ;192
000482  2d00              CMP      r5,#0                 ;194
000484  dc0a              BGT      |L1.1180|
000486  e7b7              B        |L1.1016|
                  |L1.1160|
                          DCD      GUI_Context
                  |L1.1164|
                          DCD      0x3ff80000
                  |L1.1168|
                          DCD      0x4d12d84a
                  |L1.1172|
                          DCD      0x400921fb
                  |L1.1176|
                          DCD      0x40668000
                  |L1.1180|
00049c  2c5a              CMP      r4,#0x5a              ;196
00049e  da18              BGE      |L1.1234|
0004a0  2c00              CMP      r4,#0                 ;197
0004a2  da01              BGE      |L1.1192|
0004a4  f04f0400          MOV      r4,#0                 ;198
                  |L1.1192|
0004a8  2d5a              CMP      r5,#0x5a              ;199
0004aa  da01              BGE      |L1.1200|
0004ac  4628              MOV      r0,r5                 ;199
0004ae  e001              B        |L1.1204|
                  |L1.1200|
0004b0  f04f005a          MOV      r0,#0x5a              ;199
                  |L1.1204|
0004b4  4606              MOV      r6,r0                 ;199
0004b6  f04f0001          MOV      r0,#1                 ;200
0004ba  f04f31ff          MOV      r1,#0xffffffff        ;200
0004be  4653              MOV      r3,r10                ;200
0004c0  464a              MOV      r2,r9                 ;200
0004c2  e9cd4600          STRD     r4,r6,[sp,#0]         ;200
0004c6  e9cd1002          STRD     r1,r0,[sp,#8]         ;200
0004ca  4641              MOV      r1,r8                 ;200
0004cc  4638              MOV      r0,r7                 ;200
0004ce  f7fffffe          BL       _DrawArc
                  |L1.1234|
0004d2  f1a5055a          SUB      r5,r5,#0x5a           ;202
0004d6  f1a4045a          SUB      r4,r4,#0x5a           ;203
0004da  2d00              CMP      r5,#0                 ;205
0004dc  dc00              BGT      |L1.1248|
0004de  e78b              B        |L1.1016|
                  |L1.1248|
0004e0  2c5a              CMP      r4,#0x5a              ;207
0004e2  da1a              BGE      |L1.1306|
0004e4  2c00              CMP      r4,#0                 ;208
0004e6  da01              BGE      |L1.1260|
0004e8  f04f0400          MOV      r4,#0                 ;209
                  |L1.1260|
0004ec  2d5a              CMP      r5,#0x5a              ;210
0004ee  da01              BGE      |L1.1268|
0004f0  4628              MOV      r0,r5                 ;210
0004f2  e001              B        |L1.1272|
                  |L1.1268|
0004f4  f04f005a          MOV      r0,#0x5a              ;210
                  |L1.1272|
0004f8  4606              MOV      r6,r0                 ;210
0004fa  f04f0201          MOV      r2,#1                 ;211
0004fe  f1c4005a          RSB      r0,r4,#0x5a           ;211
000502  f1c6015a          RSB      r1,r6,#0x5a           ;211
000506  e9cd0201          STRD     r0,r2,[sp,#4]         ;211
00050a  4653              MOV      r3,r10                ;211
00050c  9203              STR      r2,[sp,#0xc]          ;211
00050e  9100              STR      r1,[sp,#0]            ;211
000510  464a              MOV      r2,r9                 ;211
000512  4641              MOV      r1,r8                 ;211
000514  4638              MOV      r0,r7                 ;211
000516  f7fffffe          BL       _DrawArc
                  |L1.1306|
00051a  f1a5055a          SUB      r5,r5,#0x5a           ;213
00051e  f1a4045a          SUB      r4,r4,#0x5a           ;214
000522  e767              B        |L1.1012|
;;;217    
                          ENDP

                  GUI_DrawArc PROC
;;;221    */
;;;222    void GUI_DrawArc(int x0, int y0, int rx, int ry, int a0, int a1) {
000524  e92d47fc          PUSH     {r2-r10,lr}
000528  4604              MOV      r4,r0
00052a  460d              MOV      r5,r1
00052c  4616              MOV      r6,r2
00052e  461f              MOV      r7,r3
000530  e9dd890a          LDRD     r8,r9,[sp,#0x28]
;;;223      GUI_LOCK();
;;;224      #if (GUI_WINSUPPORT)
;;;225        WM_ADDORG(x0,y0);
000534  480c              LDR      r0,|L1.1384|
000536  6c00              LDR      r0,[r0,#0x40]  ; GUI_Context
000538  4404              ADD      r4,r4,r0
00053a  480b              LDR      r0,|L1.1384|
00053c  6c40              LDR      r0,[r0,#0x44]  ; GUI_Context
00053e  4405              ADD      r5,r5,r0
;;;226        WM_ITERATE_START(NULL) {
000540  f04f0000          MOV      r0,#0
000544  f7fffffe          BL       WM__InitIVRSearch
000548  b160              CBZ      r0,|L1.1380|
00054a  bf00              NOP      
                  |L1.1356|
;;;227      #endif
;;;228      GL_DrawArc( x0, y0, rx, ry, a0, a1);
00054c  463b              MOV      r3,r7
00054e  4632              MOV      r2,r6
000550  4629              MOV      r1,r5
000552  4620              MOV      r0,r4
000554  e9cd8900          STRD     r8,r9,[sp,#0]
000558  f7fffffe          BL       GL_DrawArc
;;;229      #if (GUI_WINSUPPORT)
;;;230        } WM_ITERATE_END();
00055c  f7fffffe          BL       WM__GetNextIVR
000560  2800              CMP      r0,#0
000562  d1f3              BNE      |L1.1356|
                  |L1.1380|
;;;231      #endif
;;;232      GUI_UNLOCK();
;;;233    }
000564  e8bd87fc          POP      {r2-r10,pc}
;;;234    
                          ENDP

                  |L1.1384|
                          DCD      GUI_Context

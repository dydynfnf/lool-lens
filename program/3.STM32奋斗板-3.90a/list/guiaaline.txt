; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\guiaaline.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\guiaaline.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\guiaaline.crf GUI\AntiAlias\GUIAALine.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _AA_DrawLine PROC
;;;34     */
;;;35     static void _AA_DrawLine(int x0, int y0, int x1, int y1) {
000000  e92d5ffc          PUSH     {r2-r12,lr}
000004  4607              MOV      r7,r0
000006  468b              MOV      r11,r1
000008  4614              MOV      r4,r2
00000a  4699              MOV      r9,r3
;;;36       int xMin, xMax;
;;;37       U8 PenSizeOld = GUI_GetPenSize();
00000c  f7fffffe          BL       GUI_GetPenSize
000010  4680              MOV      r8,r0
;;;38       U8 PenSizeHR  = PenSizeOld * GUI_Context.AA_Factor;
000012  4847              LDR      r0,|L1.304|
000014  f890005c          LDRB     r0,[r0,#0x5c]  ; GUI_Context
000018  fb00f008          MUL      r0,r0,r8
00001c  f0000aff          AND      r10,r0,#0xff
;;;39       U8 OldPenShape = GUI_SetPenShape(GUI_PS_FLAT);
000020  f04f0001          MOV      r0,#1
000024  f7fffffe          BL       GUI_SetPenShape
000028  9001              STR      r0,[sp,#4]
;;;40       /* Calculate left and right borders for AA module */
;;;41       if (x0 < x1) {
00002a  42a7              CMP      r7,r4
00002c  da02              BGE      |L1.52|
;;;42         xMin = x0;
00002e  463d              MOV      r5,r7
;;;43         xMax = x1;
000030  4626              MOV      r6,r4
000032  e001              B        |L1.56|
                  |L1.52|
;;;44       } else {
;;;45         xMin = x1;
000034  4625              MOV      r5,r4
;;;46         xMax = x0;
000036  463e              MOV      r6,r7
                  |L1.56|
;;;47       }
;;;48       if (GUI_Context.AA_HiResEnable) {
000038  483d              LDR      r0,|L1.304|
00003a  f890005d          LDRB     r0,[r0,#0x5d]  ; GUI_Context
00003e  b168              CBZ      r0,|L1.92|
;;;49         xMin -= PenSizeHR;
000040  eba5050a          SUB      r5,r5,r10
;;;50         xMax += PenSizeHR;
000044  4456              ADD      r6,r6,r10
;;;51         xMin /= GUI_Context.AA_Factor;
000046  483a              LDR      r0,|L1.304|
000048  f890005c          LDRB     r0,[r0,#0x5c]  ; GUI_Context
00004c  fb95f5f0          SDIV     r5,r5,r0
;;;52         xMax /= GUI_Context.AA_Factor;
000050  4837              LDR      r0,|L1.304|
000052  f890005c          LDRB     r0,[r0,#0x5c]  ; GUI_Context
000056  fb96f6f0          SDIV     r6,r6,r0
00005a  e016              B        |L1.138|
                  |L1.92|
;;;53       } else {
;;;54         xMin -= PenSizeOld;
00005c  eba50508          SUB      r5,r5,r8
;;;55         xMax += PenSizeOld;
000060  4446              ADD      r6,r6,r8
;;;56         x0 *= GUI_Context.AA_Factor;
000062  4833              LDR      r0,|L1.304|
000064  f890005c          LDRB     r0,[r0,#0x5c]  ; GUI_Context
000068  fb07f700          MUL      r7,r7,r0
;;;57         x1 *= GUI_Context.AA_Factor;
00006c  4830              LDR      r0,|L1.304|
00006e  f890005c          LDRB     r0,[r0,#0x5c]  ; GUI_Context
000072  fb04f400          MUL      r4,r4,r0
;;;58         y0 *= GUI_Context.AA_Factor;
000076  482e              LDR      r0,|L1.304|
000078  f890005c          LDRB     r0,[r0,#0x5c]  ; GUI_Context
00007c  fb0bfb00          MUL      r11,r11,r0
;;;59         y1 *= GUI_Context.AA_Factor;
000080  482b              LDR      r0,|L1.304|
000082  f890005c          LDRB     r0,[r0,#0x5c]  ; GUI_Context
000086  fb09f900          MUL      r9,r9,r0
                  |L1.138|
;;;60       }
;;;61       /* Do the actual drawing */
;;;62       GUI_AA_Init(xMin, xMax);
00008a  4631              MOV      r1,r6
00008c  4628              MOV      r0,r5
00008e  f7fffffe          BL       GUI_AA_Init
;;;63       GUI_SetPenSize(PenSizeHR);
000092  4650              MOV      r0,r10
000094  f7fffffe          BL       GUI_SetPenSize
;;;64       GL_DrawLine(x0 , y0 , x1 ,  y1 );
000098  464b              MOV      r3,r9
00009a  4622              MOV      r2,r4
00009c  4659              MOV      r1,r11
00009e  4638              MOV      r0,r7
0000a0  f7fffffe          BL       GL_DrawLine
;;;65       GUI_AA_Exit();
0000a4  f7fffffe          BL       GUI_AA_Exit
;;;66       /* Draw end points (can be optimized away in future, TBD*/
;;;67       switch (OldPenShape) {
0000a8  9801              LDR      r0,[sp,#4]
0000aa  b9a0              CBNZ     r0,|L1.214|
;;;68       case GUI_PS_ROUND:
;;;69         {
;;;70           int r = GUI_Context.AA_Factor * PenSizeOld / 2;
0000ac  4920              LDR      r1,|L1.304|
0000ae  f891105c          LDRB     r1,[r1,#0x5c]  ; GUI_Context
0000b2  fb01f008          MUL      r0,r1,r8
0000b6  eb0071d0          ADD      r1,r0,r0,LSR #31
0000ba  ea4f0161          ASR      r1,r1,#1
0000be  9100              STR      r1,[sp,#0]
;;;71           GL_FillCircleAA_HiRes(x0 , y0 , r);
0000c0  4659              MOV      r1,r11
0000c2  4638              MOV      r0,r7
0000c4  9a00              LDR      r2,[sp,#0]
0000c6  f7fffffe          BL       GL_FillCircleAA_HiRes
;;;72           GL_FillCircleAA_HiRes(x1 , y1 , r);
0000ca  4649              MOV      r1,r9
0000cc  4620              MOV      r0,r4
0000ce  9a00              LDR      r2,[sp,#0]
0000d0  f7fffffe          BL       GL_FillCircleAA_HiRes
;;;73         }
;;;74         break;
0000d4  bf00              NOP      
                  |L1.214|
0000d6  bf00              NOP      
;;;75       }
;;;76       GUI_SetPenSize(PenSizeOld);
0000d8  4640              MOV      r0,r8
0000da  f7fffffe          BL       GUI_SetPenSize
;;;77       GUI_SetPenShape(OldPenShape);
0000de  9801              LDR      r0,[sp,#4]
0000e0  f7fffffe          BL       GUI_SetPenShape
;;;78     }
0000e4  e8bd9ffc          POP      {r2-r12,pc}
;;;79     
                          ENDP

                  GUI_AA_DrawLine PROC
;;;89     */
;;;90     void GUI_AA_DrawLine(int x0, int y0, int x1, int y1) {
0000e8  e92d41f0          PUSH     {r4-r8,lr}
0000ec  4604              MOV      r4,r0
0000ee  460d              MOV      r5,r1
0000f0  4616              MOV      r6,r2
0000f2  461f              MOV      r7,r3
;;;91       GUI_LOCK();
;;;92       #if (GUI_WINSUPPORT)
;;;93         WM_ADDORG_AA(x0,y0);
0000f4  f7fffffe          BL       WM__GetOrgX_AA
0000f8  4404              ADD      r4,r4,r0
0000fa  f7fffffe          BL       WM__GetOrgY_AA
0000fe  4405              ADD      r5,r5,r0
;;;94         WM_ADDORG_AA(x1,y1);
000100  f7fffffe          BL       WM__GetOrgX_AA
000104  4406              ADD      r6,r6,r0
000106  f7fffffe          BL       WM__GetOrgY_AA
00010a  4407              ADD      r7,r7,r0
;;;95         WM_ITERATE_START(NULL); {
00010c  f04f0000          MOV      r0,#0
000110  f7fffffe          BL       WM__InitIVRSearch
000114  b150              CBZ      r0,|L1.300|
000116  bf00              NOP      
                  |L1.280|
;;;96       #endif
;;;97       _AA_DrawLine(x0, y0, x1, y1);
000118  463b              MOV      r3,r7
00011a  4632              MOV      r2,r6
00011c  4629              MOV      r1,r5
00011e  4620              MOV      r0,r4
000120  f7fffffe          BL       _AA_DrawLine
;;;98       #if (GUI_WINSUPPORT)
;;;99         } WM_ITERATE_END();
000124  f7fffffe          BL       WM__GetNextIVR
000128  2800              CMP      r0,#0
00012a  d1f5              BNE      |L1.280|
                  |L1.300|
;;;100      #endif
;;;101      GUI_UNLOCK();
;;;102    }
00012c  e8bd81f0          POP      {r4-r8,pc}
;;;103    
                          ENDP

                  |L1.304|
                          DCD      GUI_Context

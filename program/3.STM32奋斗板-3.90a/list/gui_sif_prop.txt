; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\gui_sif_prop.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\gui_sif_prop.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\gui_sif_prop.crf GUI\Core\GUI_SIF_Prop.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _GetNumCharAreas PROC
;;;32     */
;;;33     static int _GetNumCharAreas(const GUI_FONT GUI_UNI_PTR * pFont) {
000000  b538              PUSH     {r3-r5,lr}
000002  4604              MOV      r4,r0
;;;34       U16 NumCharAreas;
;;;35       const U8 * pData;
;;;36       pData = (const U8 *)pFont->p.pFontData + 14 /* Skip ID, YSize, YDist, Baseline, LHeight and CHeight */;
000004  69a0              LDR      r0,[r4,#0x18]
000006  f100000e          ADD      r0,r0,#0xe
00000a  9000              STR      r0,[sp,#0]
;;;37       NumCharAreas = GUI__Read16(&pData);
00000c  4668              MOV      r0,sp
00000e  f7fffffe          BL       GUI__Read16
000012  4605              MOV      r5,r0
;;;38       return NumCharAreas;
000014  4628              MOV      r0,r5
;;;39     }
000016  bd38              POP      {r3-r5,pc}
;;;40     
                          ENDP

                  _GetpCharInfo PROC
;;;44     */
;;;45     static const U8 * _GetpCharInfo(const GUI_FONT GUI_UNI_PTR * pFont, U16P c) {
000018  e92d41fc          PUSH     {r2-r8,lr}
00001c  4606              MOV      r6,r0
00001e  460c              MOV      r4,r1
;;;46       const U8 * pCharArea, * pCharInfo;
;;;47       int NumCharAreas;
;;;48       NumCharAreas = _GetNumCharAreas(pFont);                 /* Get # of char areas */
000020  4630              MOV      r0,r6
000022  f7fffffe          BL       _GetNumCharAreas
000026  4607              MOV      r7,r0
;;;49       pCharArea = (const U8 *)pFont->p.pFontData 
000028  69b0              LDR      r0,[r6,#0x18]
00002a  f1000010          ADD      r0,r0,#0x10
00002e  9001              STR      r0,[sp,#4]
;;;50                   + sizeof(GUI_SI_FONT);                      /* Set char area pointer to first char area */
;;;51       pCharInfo = pCharArea
000030  f04f0104          MOV      r1,#4
000034  9801              LDR      r0,[sp,#4]
000036  fb010507          MLA      r5,r1,r7,r0
;;;52                   + sizeof(GUI_SIF_CHAR_AREA) * NumCharAreas; /* Set char info pointer to first character info */
;;;53       do {
00003a  bf00              NOP      
                  |L1.60|
;;;54         GUI_SIF_CHAR_AREA CharArea;
;;;55         CharArea.First    = GUI__Read16(&pCharArea);
00003c  a801              ADD      r0,sp,#4
00003e  f7fffffe          BL       GUI__Read16
000042  f8ad0000          STRH     r0,[sp,#0]
;;;56         CharArea.Last     = GUI__Read16(&pCharArea);
000046  a801              ADD      r0,sp,#4
000048  f7fffffe          BL       GUI__Read16
00004c  f8ad0002          STRH     r0,[sp,#2]
;;;57         if ((c >= CharArea.First) && (c <= CharArea.Last)) {
000050  f8bd0000          LDRH     r0,[sp,#0]
000054  42a0              CMP      r0,r4
000056  dc0e              BGT      |L1.118|
000058  f8bd0002          LDRH     r0,[sp,#2]
00005c  42a0              CMP      r0,r4
00005e  db0a              BLT      |L1.118|
;;;58           pCharInfo += sizeof(GUI_SIF_CHARINFO) * (c - CharArea.First);
000060  f8bd0000          LDRH     r0,[sp,#0]
000064  eba40000          SUB      r0,r4,r0
000068  f04f010c          MOV      r1,#0xc
00006c  fb015500          MLA      r5,r1,r0,r5
;;;59           return pCharInfo;
000070  4628              MOV      r0,r5
                  |L1.114|
;;;60         }
;;;61         pCharInfo += sizeof(GUI_SIF_CHARINFO) * (CharArea.Last - CharArea.First + 1);
;;;62       } while(--NumCharAreas);
;;;63       return 0;
;;;64     }
000072  e8bd81fc          POP      {r2-r8,pc}
                  |L1.118|
000076  f8bd0002          LDRH     r0,[sp,#2]            ;61
00007a  f8bd1000          LDRH     r1,[sp,#0]            ;61
00007e  eba00001          SUB      r0,r0,r1              ;61
000082  f1000001          ADD      r0,r0,#1              ;61
000086  f04f010c          MOV      r1,#0xc               ;61
00008a  fb015500          MLA      r5,r1,r0,r5           ;61
00008e  f1a70001          SUB      r0,r7,#1              ;62
000092  0007              MOVS     r7,r0                 ;62
000094  d1d2              BNE      |L1.60|
000096  bf00              NOP                            ;63
000098  e7eb              B        |L1.114|
;;;65     
                          ENDP

                  _GUI_SIF_DispChar PROC
;;;76     */
;;;77     static void _GUI_SIF_DispChar(U16P c) {
00009a  e92d4ff0          PUSH     {r4-r11,lr}
00009e  b08b              SUB      sp,sp,#0x2c
0000a0  4604              MOV      r4,r0
;;;78       const U8 * pCharInfo, * pData;
;;;79       pCharInfo = _GetpCharInfo(GUI_Context.pAFont, c);
0000a2  4969              LDR      r1,|L1.584|
0000a4  6988              LDR      r0,[r1,#0x18]  ; GUI_Context
0000a6  4621              MOV      r1,r4
0000a8  f7fffffe          BL       _GetpCharInfo
0000ac  900a              STR      r0,[sp,#0x28]
;;;80       if (pCharInfo) {
0000ae  980a              LDR      r0,[sp,#0x28]
0000b0  2800              CMP      r0,#0
0000b2  d07d              BEQ      |L1.432|
;;;81         GUI_DRAWMODE DrawMode, OldDrawMode;
;;;82         GUI_SIF_CHARINFO CharInfo;
;;;83         CharInfo.XSize        = GUI__Read16(&pCharInfo);
0000b4  a80a              ADD      r0,sp,#0x28
0000b6  f7fffffe          BL       GUI__Read16
0000ba  f8ad0018          STRH     r0,[sp,#0x18]
;;;84         CharInfo.XDist        = GUI__Read16(&pCharInfo);
0000be  a80a              ADD      r0,sp,#0x28
0000c0  f7fffffe          BL       GUI__Read16
0000c4  f8ad001a          STRH     r0,[sp,#0x1a]
;;;85         CharInfo.BytesPerLine = GUI__Read16(&pCharInfo);
0000c8  a80a              ADD      r0,sp,#0x28
0000ca  f7fffffe          BL       GUI__Read16
0000ce  f8ad001c          STRH     r0,[sp,#0x1c]
;;;86                                 GUI__Read16(&pCharInfo); /* Dummy */
0000d2  a80a              ADD      r0,sp,#0x28
0000d4  f7fffffe          BL       GUI__Read16
;;;87         CharInfo.OffData      = GUI__Read32(&pCharInfo);
0000d8  a80a              ADD      r0,sp,#0x28
0000da  f7fffffe          BL       GUI__Read32
0000de  9008              STR      r0,[sp,#0x20]
;;;88         pData = (const U8 *)GUI_Context.pAFont->p.pFontData + CharInfo.OffData;
0000e0  4859              LDR      r0,|L1.584|
0000e2  6980              LDR      r0,[r0,#0x18]  ; GUI_Context
0000e4  6980              LDR      r0,[r0,#0x18]
0000e6  9908              LDR      r1,[sp,#0x20]
0000e8  eb000501          ADD      r5,r0,r1
;;;89         DrawMode = GUI_Context.TextMode;
0000ec  4856              LDR      r0,|L1.584|
0000ee  f9b0602a          LDRSH    r6,[r0,#0x2a]  ; GUI_Context
;;;90         OldDrawMode  = LCD_SetDrawMode(DrawMode);
0000f2  4630              MOV      r0,r6
0000f4  f7fffffe          BL       LCD_SetDrawMode
0000f8  9009              STR      r0,[sp,#0x24]
;;;91         LCD_DrawBitmap(GUI_Context.DispPosX, GUI_Context.DispPosY,
0000fa  4953              LDR      r1,|L1.584|
0000fc  f8bd001c          LDRH     r0,[sp,#0x1c]
000100  2201              MOVS     r2,#1
000102  e9cd5104          STRD     r5,r1,[sp,#0x10]
000106  e9cd2002          STRD     r2,r0,[sp,#8]
00010a  4608              MOV      r0,r1
00010c  6980              LDR      r0,[r0,#0x18]  ; GUI_Context
00010e  7dc0              LDRB     r0,[r0,#0x17]
000110  6989              LDR      r1,[r1,#0x18]  ; GUI_Context
000112  7d89              LDRB     r1,[r1,#0x16]
000114  4f4c              LDR      r7,|L1.584|
000116  e9cd1000          STRD     r1,r0,[sp,#0]
00011a  69bf              LDR      r7,[r7,#0x18]  ; GUI_Context
00011c  7d3b              LDRB     r3,[r7,#0x14]
00011e  f8bd2018          LDRH     r2,[sp,#0x18]
000122  4f49              LDR      r7,|L1.584|
000124  f9b71024          LDRSH    r1,[r7,#0x24]  ; GUI_Context
000128  f9b70022          LDRSH    r0,[r7,#0x22]  ; GUI_Context
00012c  f7fffffe          BL       LCD_DrawBitmap
;;;92                        CharInfo.XSize,
;;;93     									 GUI_Context.pAFont->YSize,
;;;94                        GUI_Context.pAFont->XMag,
;;;95     									 GUI_Context.pAFont->YMag,
;;;96                        1,
;;;97                        CharInfo.BytesPerLine,
;;;98                        pData,
;;;99                        &LCD_BKCOLORINDEX);
;;;100        /* Fill empty pixel lines */
;;;101        if (GUI_Context.pAFont->YDist > GUI_Context.pAFont->YSize) {
000130  4638              MOV      r0,r7
000132  6980              LDR      r0,[r0,#0x18]  ; GUI_Context
000134  7d40              LDRB     r0,[r0,#0x15]
000136  4639              MOV      r1,r7
000138  6989              LDR      r1,[r1,#0x18]  ; GUI_Context
00013a  7d09              LDRB     r1,[r1,#0x14]
00013c  4288              CMP      r0,r1
00013e  dd35              BLE      |L1.428|
;;;102          int YMag = GUI_Context.pAFont->YMag;
000140  4638              MOV      r0,r7
000142  6980              LDR      r0,[r0,#0x18]  ; GUI_Context
000144  7dc7              LDRB     r7,[r0,#0x17]
;;;103          int YDist = GUI_Context.pAFont->YDist * YMag;
000146  4840              LDR      r0,|L1.584|
000148  6980              LDR      r0,[r0,#0x18]  ; GUI_Context
00014a  7d40              LDRB     r0,[r0,#0x15]
00014c  fb00f807          MUL      r8,r0,r7
;;;104          int YSize = GUI_Context.pAFont->YSize * YMag;
000150  483d              LDR      r0,|L1.584|
000152  6980              LDR      r0,[r0,#0x18]  ; GUI_Context
000154  7d00              LDRB     r0,[r0,#0x14]
000156  fb00f907          MUL      r9,r0,r7
;;;105          if (DrawMode != LCD_DRAWMODE_TRANS) {
00015a  2e02              CMP      r6,#2
00015c  d025              BEQ      |L1.426|
;;;106            LCD_COLOR OldColor = GUI_GetColor();
00015e  f7fffffe          BL       GUI_GetColor
000162  4682              MOV      r10,r0
;;;107            GUI_SetColor(GUI_GetBkColor());
000164  f7fffffe          BL       GUI_GetBkColor
000168  4683              MOV      r11,r0
00016a  f7fffffe          BL       GUI_SetColor
;;;108            LCD_FillRect(GUI_Context.DispPosX, 
00016e  f8dfc0d8          LDR      r12,|L1.584|
000172  f9bcc022          LDRSH    r12,[r12,#0x22]  ; GUI_Context
000176  f8bdb018          LDRH     r11,[sp,#0x18]
00017a  eb0c020b          ADD      r2,r12,r11
00017e  f8dfc0c8          LDR      r12,|L1.584|
000182  f9bcc024          LDRSH    r12,[r12,#0x24]  ; GUI_Context
000186  eb0c0308          ADD      r3,r12,r8
00018a  f8dfc0bc          LDR      r12,|L1.584|
00018e  f9bcc024          LDRSH    r12,[r12,#0x24]  ; GUI_Context
000192  eb0c0109          ADD      r1,r12,r9
000196  f8dfc0b0          LDR      r12,|L1.584|
00019a  f9bc0022          LDRSH    r0,[r12,#0x22]  ; GUI_Context
00019e  f7fffffe          BL       LCD_FillRect
;;;109                         GUI_Context.DispPosY + YSize, 
;;;110                         GUI_Context.DispPosX + CharInfo.XSize, 
;;;111                         GUI_Context.DispPosY + YDist);
;;;112            GUI_SetColor(OldColor);
0001a2  4650              MOV      r0,r10
0001a4  f7fffffe          BL       GUI_SetColor
;;;113          }
0001a8  bf00              NOP      
                  |L1.426|
;;;114        }
0001aa  bf00              NOP      
                  |L1.428|
;;;115        LCD_SetDrawMode(OldDrawMode); /* Restore draw mode */
0001ac  9809              LDR      r0,[sp,#0x24]
0001ae  e000              B        |L1.434|
                  |L1.432|
0001b0  e00a              B        |L1.456|
                  |L1.434|
0001b2  f7fffffe          BL       LCD_SetDrawMode
;;;116        GUI_Context.DispPosX += CharInfo.XDist;
0001b6  4824              LDR      r0,|L1.584|
0001b8  8c40              LDRH     r0,[r0,#0x22]  ; GUI_Context
0001ba  f8bd101a          LDRH     r1,[sp,#0x1a]
0001be  4408              ADD      r0,r0,r1
0001c0  b200              SXTH     r0,r0
0001c2  4921              LDR      r1,|L1.584|
0001c4  8448              STRH     r0,[r1,#0x22]
;;;117      }
0001c6  bf00              NOP      
                  |L1.456|
;;;118    }
0001c8  b00b              ADD      sp,sp,#0x2c
0001ca  e8bd8ff0          POP      {r4-r11,pc}
;;;119    
                          ENDP

                  _GUI_SIF_GetCharDistX PROC
;;;123    */
;;;124    static int _GUI_SIF_GetCharDistX(U16P c) {
0001ce  b538              PUSH     {r3-r5,lr}
0001d0  4604              MOV      r4,r0
;;;125      const U8 * pCharInfo;
;;;126      U16 DistX = 0;
0001d2  f04f0500          MOV      r5,#0
;;;127      pCharInfo = _GetpCharInfo(GUI_Context.pAFont, c); /* Get pointer to char info data */
0001d6  491c              LDR      r1,|L1.584|
0001d8  6988              LDR      r0,[r1,#0x18]  ; GUI_Context
0001da  4621              MOV      r1,r4
0001dc  f7fffffe          BL       _GetpCharInfo
0001e0  9000              STR      r0,[sp,#0]
;;;128      if (pCharInfo) {
0001e2  9800              LDR      r0,[sp,#0]
0001e4  b138              CBZ      r0,|L1.502|
;;;129        pCharInfo += 2 /* Skip XSize */;
0001e6  9800              LDR      r0,[sp,#0]
0001e8  f1000002          ADD      r0,r0,#2
0001ec  9000              STR      r0,[sp,#0]
;;;130        DistX = GUI__Read16(&pCharInfo);
0001ee  4668              MOV      r0,sp
0001f0  f7fffffe          BL       GUI__Read16
0001f4  4605              MOV      r5,r0
                  |L1.502|
;;;131      }
;;;132      return DistX;
0001f6  4628              MOV      r0,r5
;;;133    }
0001f8  bd38              POP      {r3-r5,pc}
;;;134    
                          ENDP

                  _GUI_SIF_GetFontInfo PROC
;;;138    */
;;;139    static void _GUI_SIF_GetFontInfo(const GUI_FONT GUI_UNI_PTR * pFont, GUI_FONTINFO * pfi) {
0001fa  b538              PUSH     {r3-r5,lr}
0001fc  4605              MOV      r5,r0
0001fe  460c              MOV      r4,r1
;;;140      const U8 * pData;
;;;141      pData = (const U8 *)pFont->p.pFontData + 4 /* Skip XSize and XDist */;
000200  69a8              LDR      r0,[r5,#0x18]
000202  f1000004          ADD      r0,r0,#4
000206  9000              STR      r0,[sp,#0]
;;;142      pfi->Baseline = GUI__Read16(&pData);
000208  4668              MOV      r0,sp
00020a  f7fffffe          BL       GUI__Read16
00020e  70a0              STRB     r0,[r4,#2]
;;;143      pfi->LHeight  = GUI__Read16(&pData);
000210  4668              MOV      r0,sp
000212  f7fffffe          BL       GUI__Read16
000216  70e0              STRB     r0,[r4,#3]
;;;144      pfi->CHeight  = GUI__Read16(&pData);
000218  4668              MOV      r0,sp
00021a  f7fffffe          BL       GUI__Read16
00021e  7120              STRB     r0,[r4,#4]
;;;145      pfi->Flags    = GUI_FONTINFO_FLAG_PROP;
000220  f04f0001          MOV      r0,#1
000224  8020              STRH     r0,[r4,#0]
;;;146    }
000226  bd38              POP      {r3-r5,pc}
;;;147    
                          ENDP

                  _GUI_SIF_IsInFont PROC
;;;151    */
;;;152    static char _GUI_SIF_IsInFont(const GUI_FONT GUI_UNI_PTR * pFont, U16 c) {
000228  b570              PUSH     {r4-r6,lr}
00022a  4604              MOV      r4,r0
00022c  460d              MOV      r5,r1
;;;153      const U8 * pCharInfo;
;;;154      GUI_USE_PARA(pFont);
00022e  bf00              NOP      
;;;155      pCharInfo = _GetpCharInfo(GUI_Context.pAFont, c);
000230  4905              LDR      r1,|L1.584|
000232  6988              LDR      r0,[r1,#0x18]  ; GUI_Context
000234  4629              MOV      r1,r5
000236  f7fffffe          BL       _GetpCharInfo
00023a  4606              MOV      r6,r0
;;;156      return (pCharInfo) ? 1 : 0;
00023c  b10e              CBZ      r6,|L1.578|
00023e  2001              MOVS     r0,#1
                  |L1.576|
;;;157    }
000240  bd70              POP      {r4-r6,pc}
                  |L1.578|
000242  2000              MOVS     r0,#0                 ;156
000244  e7fc              B        |L1.576|
;;;158    
                          ENDP

000246  0000              DCW      0x0000
                  |L1.584|
                          DCD      GUI_Context

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  GUI_SIF_APIList_Prop
                          DCD      _GUI_SIF_DispChar
                          DCD      _GUI_SIF_GetCharDistX
                          DCD      _GUI_SIF_GetFontInfo
                          DCD      _GUI_SIF_IsInFont

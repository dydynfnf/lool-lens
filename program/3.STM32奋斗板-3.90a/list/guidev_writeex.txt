; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\guidev_writeex.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\guidev_writeex.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\guidev_writeex.crf GUI\MemDev\GUIDEV_WriteEx.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _GetPixelIndex PROC
;;;41     */
;;;42     static int _GetPixelIndex(const U8* pData, int x, int y, int bpp, int BytesPerLine) {
000000  b530              PUSH     {r4,r5,lr}
000002  4604              MOV      r4,r0
000004  9d03              LDR      r5,[sp,#0xc]
;;;43       if (bpp == 8) {
000006  2b08              CMP      r3,#8
000008  d103              BNE      |L1.18|
;;;44         return (int)(*(pData + (y * BytesPerLine) + x));
00000a  fb024005          MLA      r0,r2,r5,r4
00000e  5c40              LDRB     r0,[r0,r1]
                  |L1.16|
;;;45       } else {
;;;46         return (int)(*(const U16*)(pData + (y * BytesPerLine) + (x << 1)));
;;;47       }
;;;48     }
000010  bd30              POP      {r4,r5,pc}
                  |L1.18|
000012  fb024005          MLA      r0,r2,r5,r4           ;46
000016  f8300011          LDRH     r0,[r0,r1,LSL #1]     ;46
00001a  e7f9              B        |L1.16|
;;;49     
                          ENDP

                  _DrawHLineAlpha PROC
;;;53     */
;;;54     static void _DrawHLineAlpha(int x0, int y, int x1, int Intens) {
00001c  e92d4ffe          PUSH     {r1-r11,lr}
000020  4604              MOV      r4,r0
000022  460f              MOV      r7,r1
000024  4690              MOV      r8,r2
000026  4699              MOV      r9,r3
;;;55       GUI_MEMDEV* pDev   = GUI_MEMDEV_H2P(GUI_Context.hDevData);
000028  49fe              LDR      r1,|L1.1060|
00002a  f9b1004c          LDRSH    r0,[r1,#0x4c]  ; GUI_Context
00002e  f7fffffe          BL       GUI_ALLOC_h2p
000032  4682              MOV      r10,r0
;;;56       GUI_USAGE_h hUsage = pDev->hUsage; 
000034  f9bab018          LDRSH    r11,[r10,#0x18]
;;;57       LCD_COLOR Color1, Color2;
;;;58       int Len = x1 - x0 + 1;
000038  eba80004          SUB      r0,r8,r4
00003c  f1000501          ADD      r5,r0,#1
;;;59       if (hUsage) {
000040  f1bb0f00          CMP      r11,#0
000044  d00d              BEQ      |L1.98|
;;;60         GUI_USAGE_AddHLine(GUI_USAGE_H2P(hUsage), x0, y, Len);
000046  4658              MOV      r0,r11
000048  f7fffffe          BL       GUI_ALLOC_h2p
00004c  9000              STR      r0,[sp,#0]
00004e  4658              MOV      r0,r11
000050  f7fffffe          BL       GUI_ALLOC_h2p
000054  6880              LDR      r0,[r0,#8]
000056  462b              MOV      r3,r5
000058  463a              MOV      r2,r7
00005a  4621              MOV      r1,r4
00005c  6846              LDR      r6,[r0,#4]
00005e  9800              LDR      r0,[sp,#0]
000060  47b0              BLX      r6
                  |L1.98|
;;;61       }
;;;62       Color1 = LCD_Index2Color(LCD_COLORINDEX);
000062  49f0              LDR      r1,|L1.1060|
000064  8848              LDRH     r0,[r1,#2]  ; GUI_Context
000066  f7fffffe          BL       LCD_Index2Color
00006a  9002              STR      r0,[sp,#8]
;;;63       if (pDev->BitsPerPixel == 8) {
00006c  f8da0010          LDR      r0,[r10,#0x10]
000070  2808              CMP      r0,#8
000072  d119              BNE      |L1.168|
;;;64         U8* pData;
;;;65         pData  = (U8*) GUI_MEMDEV__XY2PTR(x0, y);
000074  4639              MOV      r1,r7
000076  4620              MOV      r0,r4
000078  f7fffffe          BL       GUI_MEMDEV__XY2PTR
00007c  4606              MOV      r6,r0
;;;66         while (Len--) {
00007e  e00e              B        |L1.158|
                  |L1.128|
;;;67           Color2 = LCD_Index2Color(*(pData));
000080  7830              LDRB     r0,[r6,#0]
000082  f7fffffe          BL       LCD_Index2Color
000086  9001              STR      r0,[sp,#4]
;;;68           Color2 = LCD_MixColors256(Color1, Color2, Intens);
000088  464a              MOV      r2,r9
00008a  e9dd1001          LDRD     r1,r0,[sp,#4]
00008e  f7fffffe          BL       LCD_MixColors256
000092  9001              STR      r0,[sp,#4]
;;;69           *(pData++) = LCD_Color2Index(Color2);
000094  9801              LDR      r0,[sp,#4]
000096  f7fffffe          BL       LCD_Color2Index
00009a  f8060b01          STRB     r0,[r6],#1
                  |L1.158|
00009e  0028              MOVS     r0,r5                 ;66
0000a0  f1a50501          SUB      r5,r5,#1              ;66
0000a4  d1ec              BNE      |L1.128|
;;;70         }
;;;71       } else {
0000a6  e019              B        |L1.220|
                  |L1.168|
;;;72         U16* pData;
;;;73         pData  = (U16*) GUI_MEMDEV__XY2PTR(x0, y);
0000a8  4639              MOV      r1,r7
0000aa  4620              MOV      r0,r4
0000ac  f7fffffe          BL       GUI_MEMDEV__XY2PTR
0000b0  4606              MOV      r6,r0
;;;74         while (Len--) {
0000b2  e00e              B        |L1.210|
                  |L1.180|
;;;75           Color2 = LCD_Index2Color(*(pData));
0000b4  8830              LDRH     r0,[r6,#0]
0000b6  f7fffffe          BL       LCD_Index2Color
0000ba  9001              STR      r0,[sp,#4]
;;;76           Color2 = LCD_MixColors256(Color1, Color2, Intens);
0000bc  464a              MOV      r2,r9
0000be  e9dd1001          LDRD     r1,r0,[sp,#4]
0000c2  f7fffffe          BL       LCD_MixColors256
0000c6  9001              STR      r0,[sp,#4]
;;;77           *(pData++) = LCD_Color2Index(Color2);
0000c8  9801              LDR      r0,[sp,#4]
0000ca  f7fffffe          BL       LCD_Color2Index
0000ce  f8260b02          STRH     r0,[r6],#2
                  |L1.210|
0000d2  0028              MOVS     r0,r5                 ;74
0000d4  f1a50501          SUB      r5,r5,#1              ;74
0000d8  d1ec              BNE      |L1.180|
;;;78         }
;;;79       }
0000da  bf00              NOP      
                  |L1.220|
;;;80     }
0000dc  e8bd8ffe          POP      {r1-r11,pc}
;;;81     
                          ENDP

                  _DrawBitmapLineEx PROC
;;;85     */
;;;86     static void _DrawBitmapLineEx(int x0, int y0, int xOff, int yOff, int xSize, int xMag, int Alpha,
0000e0  e92d4fff          PUSH     {r0-r11,lr}
;;;87                                   int bpp, int BytesPerLine, const U8* pData) {
0000e4  b087              SUB      sp,sp,#0x1c
0000e6  4604              MOV      r4,r0
0000e8  4691              MOV      r9,r2
0000ea  f8ddb054          LDR      r11,[sp,#0x54]
;;;88       int x, xi, xAct, xStart, xMagAbs, xiMag, xMin, xMax, Cached;
;;;89       LCD_PIXELINDEX Index = 0, IndexPrev = 0;
0000ee  f04f0000          MOV      r0,#0
0000f2  9002              STR      r0,[sp,#8]
0000f4  9001              STR      r0,[sp,#4]
;;;90       /* Use clipping rect */
;;;91       xMin = GUI_Context.ClipRect.x0 - x0;
0000f6  48cb              LDR      r0,|L1.1060|
0000f8  f9b00004          LDRSH    r0,[r0,#4]  ; GUI_Context
0000fc  eba00704          SUB      r7,r0,r4
;;;92       xMax = GUI_Context.ClipRect.x1 - x0;
000100  48c8              LDR      r0,|L1.1060|
000102  f9b00008          LDRSH    r0,[r0,#8]
000106  eba00004          SUB      r0,r0,r4
00010a  9004              STR      r0,[sp,#0x10]
;;;93       /* Init some values */
;;;94       xMagAbs =  (xMag > 0) ? xMag : -xMag;
00010c  f1bb0f00          CMP      r11,#0
000110  dd01              BLE      |L1.278|
000112  4658              MOV      r0,r11
000114  e001              B        |L1.282|
                  |L1.278|
000116  f1cb0000          RSB      r0,r11,#0
                  |L1.282|
00011a  9005              STR      r0,[sp,#0x14]
;;;95       x       =  (xOff * xMagAbs) / 1000;
00011c  9805              LDR      r0,[sp,#0x14]
00011e  fb09f000          MUL      r0,r9,r0
000122  f44f717a          MOV      r1,#0x3e8
000126  fb90f5f1          SDIV     r5,r0,r1
;;;96       xiMag   =  (xOff * xMagAbs) % 1000;
00012a  9805              LDR      r0,[sp,#0x14]
00012c  fb09f000          MUL      r0,r9,r0
000130  fb90f2f1          SDIV     r2,r0,r1
000134  fb010812          MLS      r8,r1,r2,r0
;;;97       xStart  = -1;
000138  f04f36ff          MOV      r6,#0xffffffff
;;;98       Cached  =  0;
00013c  f04f0000          MOV      r0,#0
000140  9003              STR      r0,[sp,#0xc]
;;;99       for (xi = 0; xi < xSize; xi++) {
000142  4682              MOV      r10,r0
000144  e05b              B        |L1.510|
                  |L1.326|
;;;100        xiMag += xMagAbs;
000146  9805              LDR      r0,[sp,#0x14]
000148  4480              ADD      r8,r8,r0
;;;101        if (xiMag >= 1000) {  
00014a  f5b87f7a          CMP      r8,#0x3e8
00014e  db54              BLT      |L1.506|
;;;102          if (x <= xMax) {
000150  9804              LDR      r0,[sp,#0x10]
000152  4285              CMP      r5,r0
000154  dc4d              BGT      |L1.498|
;;;103            xAct  = (xMag > 0) ? xi : xSize - xi - 1;
000156  f1bb0f00          CMP      r11,#0
00015a  dd01              BLE      |L1.352|
00015c  4650              MOV      r0,r10
00015e  e004              B        |L1.362|
                  |L1.352|
000160  9814              LDR      r0,[sp,#0x50]
000162  eba0000a          SUB      r0,r0,r10
000166  f1a00001          SUB      r0,r0,#1
                  |L1.362|
00016a  9006              STR      r0,[sp,#0x18]
;;;104            Index = _GetPixelIndex(pData, xOff + xAct, yOff, bpp, BytesPerLine);
00016c  9818              LDR      r0,[sp,#0x60]
00016e  9000              STR      r0,[sp,#0]
000170  9806              LDR      r0,[sp,#0x18]
000172  eb090100          ADD      r1,r9,r0
000176  9b17              LDR      r3,[sp,#0x5c]
000178  9a0a              LDR      r2,[sp,#0x28]
00017a  9819              LDR      r0,[sp,#0x64]
00017c  f7fffffe          BL       _GetPixelIndex
000180  b280              UXTH     r0,r0
000182  9002              STR      r0,[sp,#8]
;;;105            if ((Index != IndexPrev) || (xStart == -1)) {
000184  e9dd1001          LDRD     r1,r0,[sp,#4]
000188  4288              CMP      r0,r1
00018a  d101              BNE      |L1.400|
00018c  1c70              ADDS     r0,r6,#1
00018e  d127              BNE      |L1.480|
                  |L1.400|
;;;106              if ((xStart != -1) && (x > xMin)) {
000190  1c70              ADDS     r0,r6,#1
000192  d01f              BEQ      |L1.468|
000194  42bd              CMP      r5,r7
000196  dd1d              BLE      |L1.468|
;;;107                /* Clear cache */
;;;108                if (xStart < xMin) {
000198  42be              CMP      r6,r7
00019a  da00              BGE      |L1.414|
;;;109                  xStart = xMin;
00019c  463e              MOV      r6,r7
                  |L1.414|
;;;110                }
;;;111                LCD_SetColorIndex(IndexPrev);
00019e  9801              LDR      r0,[sp,#4]
0001a0  f7fffffe          BL       LCD_SetColorIndex
;;;112                if (Alpha == 256 || !GUI_Context.hDevData) {
0001a4  9816              LDR      r0,[sp,#0x58]
0001a6  f5b07f80          CMP      r0,#0x100
0001aa  d003              BEQ      |L1.436|
0001ac  489d              LDR      r0,|L1.1060|
0001ae  f8b0004c          LDRH     r0,[r0,#0x4c]  ; GUI_Context
0001b2  b940              CBNZ     r0,|L1.454|
                  |L1.436|
;;;113                  LCDDEV_L0_DrawHLine(x0 + xStart, y0, x0 + x - 1);
0001b4  1961              ADDS     r1,r4,r5
0001b6  1e4a              SUBS     r2,r1,#1
0001b8  19a0              ADDS     r0,r4,r6
0001ba  499a              LDR      r1,|L1.1060|
0001bc  6c89              LDR      r1,[r1,#0x48]  ; GUI_Context
0001be  690b              LDR      r3,[r1,#0x10]
0001c0  9908              LDR      r1,[sp,#0x20]
0001c2  4798              BLX      r3
0001c4  e006              B        |L1.468|
                  |L1.454|
;;;114                } else {
;;;115                  _DrawHLineAlpha(x0 + xStart, y0, x0 + x - 1, Alpha);
0001c6  1961              ADDS     r1,r4,r5
0001c8  1e4a              SUBS     r2,r1,#1
0001ca  19a0              ADDS     r0,r4,r6
0001cc  9b16              LDR      r3,[sp,#0x58]
0001ce  9908              LDR      r1,[sp,#0x20]
0001d0  f7fffffe          BL       _DrawHLineAlpha
                  |L1.468|
;;;116                }
;;;117              }
;;;118              IndexPrev = Index;
0001d4  9802              LDR      r0,[sp,#8]
0001d6  9001              STR      r0,[sp,#4]
;;;119              xStart    = x;
0001d8  462e              MOV      r6,r5
;;;120              Cached    = 1;
0001da  f04f0001          MOV      r0,#1
0001de  9003              STR      r0,[sp,#0xc]
                  |L1.480|
;;;121            }
;;;122            do {
0001e0  bf00              NOP      
                  |L1.482|
;;;123              x++;
0001e2  f1050501          ADD      r5,r5,#1
;;;124              xiMag -= 1000;
0001e6  f5a8787a          SUB      r8,r8,#0x3e8
;;;125            } while (xiMag >= 1000);
0001ea  f5b87f7a          CMP      r8,#0x3e8
0001ee  daf8              BGE      |L1.482|
0001f0  e003              B        |L1.506|
                  |L1.498|
;;;126          } else {
;;;127            x = xMax + 1;
0001f2  9804              LDR      r0,[sp,#0x10]
0001f4  f1000501          ADD      r5,r0,#1
;;;128            break;
0001f8  e004              B        |L1.516|
                  |L1.506|
0001fa  f10a0a01          ADD      r10,r10,#1            ;99
                  |L1.510|
0001fe  9814              LDR      r0,[sp,#0x50]         ;99
000200  4582              CMP      r10,r0                ;99
000202  dba0              BLT      |L1.326|
                  |L1.516|
000204  bf00              NOP      
;;;129          }
;;;130        }
;;;131      }
;;;132      if (Cached && (x > xMin)) {
000206  9803              LDR      r0,[sp,#0xc]
000208  b1f8              CBZ      r0,|L1.586|
00020a  42bd              CMP      r5,r7
00020c  dd1d              BLE      |L1.586|
;;;133        /* Clear cache */
;;;134        if (xStart < xMin) {
00020e  42be              CMP      r6,r7
000210  da00              BGE      |L1.532|
;;;135          xStart = xMin;
000212  463e              MOV      r6,r7
                  |L1.532|
;;;136        }
;;;137        LCD_SetColorIndex(Index);
000214  9802              LDR      r0,[sp,#8]
000216  f7fffffe          BL       LCD_SetColorIndex
;;;138        if (Alpha == 256 || !GUI_Context.hDevData) {
00021a  9816              LDR      r0,[sp,#0x58]
00021c  f5b07f80          CMP      r0,#0x100
000220  d003              BEQ      |L1.554|
000222  4880              LDR      r0,|L1.1060|
000224  f8b0004c          LDRH     r0,[r0,#0x4c]  ; GUI_Context
000228  b940              CBNZ     r0,|L1.572|
                  |L1.554|
;;;139          LCDDEV_L0_DrawHLine(x0 + xStart, y0, x0 + x - 1);
00022a  1961              ADDS     r1,r4,r5
00022c  1e4a              SUBS     r2,r1,#1
00022e  19a0              ADDS     r0,r4,r6
000230  497c              LDR      r1,|L1.1060|
000232  6c89              LDR      r1,[r1,#0x48]  ; GUI_Context
000234  690b              LDR      r3,[r1,#0x10]
000236  9908              LDR      r1,[sp,#0x20]
000238  4798              BLX      r3
00023a  e006              B        |L1.586|
                  |L1.572|
;;;140        } else {
;;;141          _DrawHLineAlpha(x0 + xStart, y0, x0 + x - 1, Alpha);
00023c  1961              ADDS     r1,r4,r5
00023e  1e4a              SUBS     r2,r1,#1
000240  19a0              ADDS     r0,r4,r6
000242  9b16              LDR      r3,[sp,#0x58]
000244  9908              LDR      r1,[sp,#0x20]
000246  f7fffffe          BL       _DrawHLineAlpha
                  |L1.586|
;;;142        }
;;;143      }
;;;144    }
00024a  b00b              ADD      sp,sp,#0x2c
00024c  e8bd8ff0          POP      {r4-r11,pc}
;;;145    
                          ENDP

                  _DrawBitmapEx PROC
;;;149    */
;;;150    static void _DrawBitmapEx(int x0, int y0, int xOff, int yOff, int xSize, int ySize, int xMag, int yMag,
000250  e92d4fff          PUSH     {r0-r11,lr}
;;;151                              int Alpha, int BmpSizeX, int BmpSizeY, int bpp, int BytesPerLine, const U8* pData) {
000254  b089              SUB      sp,sp,#0x24
000256  4683              MOV      r11,r0
000258  4688              MOV      r8,r1
00025a  4699              MOV      r9,r3
00025c  e9dda618          LDRD     r10,r6,[sp,#0x60]
;;;152      int y, yi, yMin, yMax, yEnd, yPrev;
;;;153      yMin = GUI_Context.ClipRect.y0;
000260  4870              LDR      r0,|L1.1060|
000262  f9b00006          LDRSH    r0,[r0,#6]
000266  9008              STR      r0,[sp,#0x20]
;;;154      yMax = GUI_Context.ClipRect.y1;
000268  486e              LDR      r0,|L1.1060|
00026a  f9b0000a          LDRSH    r0,[r0,#0xa]
00026e  9007              STR      r0,[sp,#0x1c]
;;;155      if (xMag < 0) {
000270  f1ba0f00          CMP      r10,#0
000274  da0e              BGE      |L1.660|
;;;156        x0 -= (BmpSizeX - (xOff << 1) - xSize) * xMag / 1000;
000276  990b              LDR      r1,[sp,#0x2c]
000278  981b              LDR      r0,[sp,#0x6c]
00027a  eba00141          SUB      r1,r0,r1,LSL #1
00027e  9816              LDR      r0,[sp,#0x58]
000280  eba10000          SUB      r0,r1,r0
000284  fb00f00a          MUL      r0,r0,r10
000288  f44f717a          MOV      r1,#0x3e8
00028c  fb90f0f1          SDIV     r0,r0,r1
000290  ebab0b00          SUB      r11,r11,r0
                  |L1.660|
;;;157      }
;;;158      if (yMag < 0) {
000294  2e00              CMP      r6,#0
000296  da0a              BGE      |L1.686|
;;;159        y0 -= (BmpSizeY - 1) * yMag / 1000;
000298  981c              LDR      r0,[sp,#0x70]
00029a  f1a00001          SUB      r0,r0,#1
00029e  fb00f006          MUL      r0,r0,r6
0002a2  f44f717a          MOV      r1,#0x3e8
0002a6  fb90f0f1          SDIV     r0,r0,r1
0002aa  eba80800          SUB      r8,r8,r0
                  |L1.686|
;;;160      }
;;;161      yEnd  = y0 + GUI__DivideRound32(((I32)(yOff) * yMag), 1000);
0002ae  fb09f006          MUL      r0,r9,r6
0002b2  f44f717a          MOV      r1,#0x3e8
0002b6  f7fffffe          BL       GUI__DivideRound32
0002ba  eb000708          ADD      r7,r0,r8
;;;162      yPrev = yEnd + 1;
0002be  f1070001          ADD      r0,r7,#1
0002c2  9006              STR      r0,[sp,#0x18]
;;;163      for (yi = yOff; yi < (yOff + ySize); yi++) {
0002c4  464d              MOV      r5,r9
0002c6  e03b              B        |L1.832|
                  |L1.712|
;;;164        y = yEnd;
0002c8  463c              MOV      r4,r7
;;;165        yEnd = y0 + GUI__DivideRound32(((I32)(yi + 1) * yMag), 1000);
0002ca  f1050101          ADD      r1,r5,#1
0002ce  fb01f006          MUL      r0,r1,r6
0002d2  f44f717a          MOV      r1,#0x3e8
0002d6  f7fffffe          BL       GUI__DivideRound32
0002da  eb000708          ADD      r7,r0,r8
;;;166        if (y != yPrev) {
0002de  9806              LDR      r0,[sp,#0x18]
0002e0  4284              CMP      r4,r0
0002e2  d02b              BEQ      |L1.828|
;;;167          yPrev = y;
0002e4  9406              STR      r4,[sp,#0x18]
;;;168          do {
0002e6  bf00              NOP      
                  |L1.744|
;;;169            if ((y >= yMin) && (y <= yMax)) {
0002e8  9808              LDR      r0,[sp,#0x20]
0002ea  4284              CMP      r4,r0
0002ec  db13              BLT      |L1.790|
0002ee  9807              LDR      r0,[sp,#0x1c]
0002f0  4284              CMP      r4,r0
0002f2  dc10              BGT      |L1.790|
;;;170              _DrawBitmapLineEx(x0, y, xOff, yi, xSize, xMag, Alpha, bpp, BytesPerLine, pData);
0002f4  e9dd311d          LDRD     r3,r1,[sp,#0x74]
0002f8  9a1a              LDR      r2,[sp,#0x68]
0002fa  981f              LDR      r0,[sp,#0x7c]
0002fc  e9cd2302          STRD     r2,r3,[sp,#8]
000300  e9cd1004          STRD     r1,r0,[sp,#0x10]
000304  9816              LDR      r0,[sp,#0x58]
000306  462b              MOV      r3,r5
000308  e9cd0a00          STRD     r0,r10,[sp,#0]
00030c  4621              MOV      r1,r4
00030e  4658              MOV      r0,r11
000310  9a0b              LDR      r2,[sp,#0x2c]
000312  f7fffffe          BL       _DrawBitmapLineEx
                  |L1.790|
;;;171            }
;;;172          } while ((yMag < 0) ? (--y > yEnd) : (++y < yEnd));
000316  2e00              CMP      r6,#0
000318  da07              BGE      |L1.810|
00031a  1e60              SUBS     r0,r4,#1
00031c  4604              MOV      r4,r0
00031e  42b8              CMP      r0,r7
000320  dd01              BLE      |L1.806|
000322  2001              MOVS     r0,#1
000324  e008              B        |L1.824|
                  |L1.806|
000326  2000              MOVS     r0,#0
000328  e006              B        |L1.824|
                  |L1.810|
00032a  1c60              ADDS     r0,r4,#1
00032c  4604              MOV      r4,r0
00032e  42b8              CMP      r0,r7
000330  da01              BGE      |L1.822|
000332  2001              MOVS     r0,#1
000334  e000              B        |L1.824|
                  |L1.822|
000336  2000              MOVS     r0,#0
                  |L1.824|
000338  2800              CMP      r0,#0
00033a  d1d5              BNE      |L1.744|
                  |L1.828|
00033c  f1050501          ADD      r5,r5,#1              ;163
                  |L1.832|
000340  9817              LDR      r0,[sp,#0x5c]         ;163
000342  4448              ADD      r0,r0,r9              ;163
000344  42a8              CMP      r0,r5                 ;163
000346  dcbf              BGT      |L1.712|
;;;173        }
;;;174      }
;;;175    }
000348  b00d              ADD      sp,sp,#0x34
00034a  e8bd8ff0          POP      {r4-r11,pc}
;;;176    
                          ENDP

                  _WriteExToActiveAt PROC
;;;180    */
;;;181    static void _WriteExToActiveAt(GUI_MEMDEV_Handle hMem, int x, int y, int xMag, int yMag, int Alpha) {
00034e  e92d4fff          PUSH     {r0-r11,lr}
000352  b093              SUB      sp,sp,#0x4c
000354  4616              MOV      r6,r2
000356  469a              MOV      r10,r3
000358  9f20              LDR      r7,[sp,#0x80]
;;;182      GUI_MEMDEV* pDev;
;;;183      GUI_USAGE_h hUsage; 
;;;184      GUI_USAGE*  pUsage;
;;;185      U8* pData;
;;;186      int yAct, yPrev, ySize, yi;
;;;187      int BytesPerLine, bpp;
;;;188      pDev         = GUI_MEMDEV_H2P(hMem);
00035a  9813              LDR      r0,[sp,#0x4c]
00035c  f7fffffe          BL       GUI_ALLOC_h2p
000360  4604              MOV      r4,r0
;;;189      hUsage       = pDev->hUsage;
000362  f9b40018          LDRSH    r0,[r4,#0x18]
000366  9012              STR      r0,[sp,#0x48]
;;;190      ySize        = pDev->YSize;
000368  f9b40006          LDRSH    r0,[r4,#6]
00036c  900e              STR      r0,[sp,#0x38]
;;;191      BytesPerLine = pDev->BytesPerLine;
00036e  68e0              LDR      r0,[r4,#0xc]
000370  900d              STR      r0,[sp,#0x34]
;;;192      pData        = (U8*)(pDev + 1);
000372  f104002c          ADD      r0,r4,#0x2c
000376  9011              STR      r0,[sp,#0x44]
;;;193      bpp          = pDev->BitsPerPixel;
000378  6920              LDR      r0,[r4,#0x10]
00037a  900c              STR      r0,[sp,#0x30]
;;;194      yPrev = y + 1;
00037c  f1060001          ADD      r0,r6,#1
000380  900f              STR      r0,[sp,#0x3c]
;;;195      if (hUsage) {
000382  9812              LDR      r0,[sp,#0x48]
000384  2800              CMP      r0,#0
000386  d07d              BEQ      |L1.1156|
;;;196        int xOff, xSize, y0;
;;;197        pUsage = GUI_USAGE_H2P(hUsage);
000388  9812              LDR      r0,[sp,#0x48]
00038a  f7fffffe          BL       GUI_ALLOC_h2p
00038e  4680              MOV      r8,r0
;;;198        for (yi = 0; yi < ySize; yi++) {
000390  f04f0500          MOV      r5,#0
000394  e07f              B        |L1.1174|
                  |L1.918|
;;;199          yAct = y + GUI__DivideRound32(((I32)(yi) * yMag), 1000);
000396  fb05f007          MUL      r0,r5,r7
00039a  f44f717a          MOV      r1,#0x3e8
00039e  f7fffffe          BL       GUI__DivideRound32
0003a2  4430              ADD      r0,r0,r6
0003a4  9010              STR      r0,[sp,#0x40]
;;;200          if (yAct != yPrev) {
0003a6  e9dd100f          LDRD     r1,r0,[sp,#0x3c]
0003aa  4288              CMP      r0,r1
0003ac  d071              BEQ      |L1.1170|
;;;201            xOff  = 0;
0003ae  f04f0000          MOV      r0,#0
0003b2  900b              STR      r0,[sp,#0x2c]
;;;202            xSize = GUI_USAGE_GetNextDirty(pUsage, &xOff, yi);
0003b4  f8d80008          LDR      r0,[r8,#8]
0003b8  462a              MOV      r2,r5
0003ba  a90b              ADD      r1,sp,#0x2c
0003bc  6943              LDR      r3,[r0,#0x14]
0003be  4640              MOV      r0,r8
0003c0  4798              BLX      r3
0003c2  4681              MOV      r9,r0
;;;203            if (xSize == pDev->XSize) {
0003c4  f9b40004          LDRSH    r0,[r4,#4]
0003c8  4548              CMP      r0,r9
0003ca  d136              BNE      |L1.1082|
;;;204              /* If the entire line is affected, calculate the number of entire lines */
;;;205              y0 = yi;
0003cc  46ab              MOV      r11,r5
;;;206              while (GUI_USAGE_GetNextDirty(pUsage, &xOff, yi + 1) == xSize) {
0003ce  e001              B        |L1.980|
                  |L1.976|
;;;207                yi++;
0003d0  f1050501          ADD      r5,r5,#1
                  |L1.980|
0003d4  f8d80008          LDR      r0,[r8,#8]            ;206
0003d8  1c6a              ADDS     r2,r5,#1              ;206
0003da  a90b              ADD      r1,sp,#0x2c           ;206
0003dc  6943              LDR      r3,[r0,#0x14]         ;206
0003de  4640              MOV      r0,r8                 ;206
0003e0  4798              BLX      r3                    ;206
0003e2  4548              CMP      r0,r9                 ;206
0003e4  d0f4              BEQ      |L1.976|
;;;208              }
;;;209              _DrawBitmapEx(x, y, 0, y0, pDev->XSize, yi - y0 + 1, xMag, yMag, Alpha,
0003e6  f9b43006          LDRSH    r3,[r4,#6]
0003ea  e9dd210c          LDRD     r2,r1,[sp,#0x30]
0003ee  9811              LDR      r0,[sp,#0x44]
0003f0  e9cd3206          STRD     r3,r2,[sp,#0x18]
0003f4  e9cd1008          STRD     r1,r0,[sp,#0x20]
0003f8  f9b40004          LDRSH    r0,[r4,#4]
0003fc  9921              LDR      r1,[sp,#0x84]
0003fe  e9cda702          STRD     r10,r7,[sp,#8]
000402  e9cd1004          STRD     r1,r0,[sp,#0x10]
000406  eba5000b          SUB      r0,r5,r11
00040a  1c40              ADDS     r0,r0,#1
00040c  f9b41004          LDRSH    r1,[r4,#4]
000410  465b              MOV      r3,r11
000412  2200              MOVS     r2,#0
000414  e9cd1000          STRD     r1,r0,[sp,#0]
000418  4631              MOV      r1,r6
00041a  9814              LDR      r0,[sp,#0x50]
00041c  f7fffffe          BL       _DrawBitmapEx
;;;210                            pDev->XSize, pDev->YSize, bpp, BytesPerLine, pData);
;;;211              yPrev = y + GUI__DivideRound32(((I32)(yi) * yMag), 1000);
000420  e002              B        |L1.1064|
000422  0000              DCW      0x0000
                  |L1.1060|
                          DCD      GUI_Context
                  |L1.1064|
000428  fb05f007          MUL      r0,r5,r7
00042c  f44f717a          MOV      r1,#0x3e8
000430  f7fffffe          BL       GUI__DivideRound32
000434  4430              ADD      r0,r0,r6
000436  900f              STR      r0,[sp,#0x3c]
000438  e02b              B        |L1.1170|
                  |L1.1082|
;;;212            } else {
;;;213              /* Draw the partial line which needs to be drawn */
;;;214              while (xSize) {
00043a  e025              B        |L1.1160|
                  |L1.1084|
;;;215                _DrawBitmapEx(x, y, xOff, yi, xSize, 1, xMag, yMag, Alpha,
00043c  f9b43006          LDRSH    r3,[r4,#6]
000440  e9dd120c          LDRD     r1,r2,[sp,#0x30]
000444  9811              LDR      r0,[sp,#0x44]
000446  e9cd3106          STRD     r3,r1,[sp,#0x18]
00044a  e9cd2008          STRD     r2,r0,[sp,#0x20]
00044e  f9b41004          LDRSH    r1,[r4,#4]
000452  9821              LDR      r0,[sp,#0x84]
000454  e9cda702          STRD     r10,r7,[sp,#8]
000458  e9cd0104          STRD     r0,r1,[sp,#0x10]
00045c  2001              MOVS     r0,#1
00045e  462b              MOV      r3,r5
000460  e9cd9000          STRD     r9,r0,[sp,#0]
000464  4631              MOV      r1,r6
000466  9a0b              LDR      r2,[sp,#0x2c]
000468  9814              LDR      r0,[sp,#0x50]
00046a  f7fffffe          BL       _DrawBitmapEx
;;;216                              pDev->XSize, pDev->YSize, bpp, BytesPerLine, pData);
;;;217                xOff += xSize;
00046e  980b              LDR      r0,[sp,#0x2c]
000470  4448              ADD      r0,r0,r9
000472  900b              STR      r0,[sp,#0x2c]
;;;218                xSize = GUI_USAGE_GetNextDirty(pUsage, &xOff, yi);
000474  f8d80008          LDR      r0,[r8,#8]
000478  462a              MOV      r2,r5
00047a  a90b              ADD      r1,sp,#0x2c
00047c  6943              LDR      r3,[r0,#0x14]
00047e  4640              MOV      r0,r8
000480  4798              BLX      r3
000482  e000              B        |L1.1158|
                  |L1.1156|
000484  e00c              B        |L1.1184|
                  |L1.1158|
000486  4681              MOV      r9,r0
                  |L1.1160|
000488  f1b90f00          CMP      r9,#0                 ;214
00048c  d1d6              BNE      |L1.1084|
;;;219              }
;;;220              yPrev = yAct;
00048e  9810              LDR      r0,[sp,#0x40]
000490  900f              STR      r0,[sp,#0x3c]
                  |L1.1170|
000492  f1050501          ADD      r5,r5,#1              ;198
                  |L1.1174|
000496  980e              LDR      r0,[sp,#0x38]         ;198
000498  4285              CMP      r5,r0                 ;198
00049a  f6ffaf7c          BLT      |L1.918|
;;;221            }
;;;222          }
;;;223        }
;;;224      } else {
00049e  e01a              B        |L1.1238|
                  |L1.1184|
;;;225        _DrawBitmapEx(x, y, 0, 0, pDev->XSize, ySize, xMag, yMag, Alpha,
0004a0  f9b43006          LDRSH    r3,[r4,#6]
0004a4  9a11              LDR      r2,[sp,#0x44]
0004a6  e9dd010c          LDRD     r0,r1,[sp,#0x30]
0004aa  e9cd3006          STRD     r3,r0,[sp,#0x18]
0004ae  e9cd1208          STRD     r1,r2,[sp,#0x20]
0004b2  f9b40004          LDRSH    r0,[r4,#4]
0004b6  9921              LDR      r1,[sp,#0x84]
0004b8  e9cda702          STRD     r10,r7,[sp,#8]
0004bc  e9cd1004          STRD     r1,r0,[sp,#0x10]
0004c0  f9b41004          LDRSH    r1,[r4,#4]
0004c4  980e              LDR      r0,[sp,#0x38]
0004c6  2300              MOVS     r3,#0
0004c8  461a              MOV      r2,r3
0004ca  e9cd1000          STRD     r1,r0,[sp,#0]
0004ce  4631              MOV      r1,r6
0004d0  9814              LDR      r0,[sp,#0x50]
0004d2  f7fffffe          BL       _DrawBitmapEx
                  |L1.1238|
;;;226                      pDev->XSize, pDev->YSize, bpp, BytesPerLine, pData);
;;;227      }
;;;228    }
0004d6  b017              ADD      sp,sp,#0x5c
0004d8  e8bd8ff0          POP      {r4-r11,pc}
;;;229    
                          ENDP

                  GUI_MEMDEV_WriteExAt PROC
;;;239    */
;;;240    void GUI_MEMDEV_WriteExAt(GUI_MEMDEV_Handle hMem, int x, int y, int xMag, int yMag, int Alpha) {
0004dc  e92d47ff          PUSH     {r0-r10,lr}
0004e0  4604              MOV      r4,r0
0004e2  460d              MOV      r5,r1
0004e4  4617              MOV      r7,r2
0004e6  4698              MOV      r8,r3
0004e8  e9dd9a0c          LDRD     r9,r10,[sp,#0x30]
;;;241      if (hMem) {
0004ec  b304              CBZ      r4,|L1.1328|
;;;242        GUI_MEMDEV* pDevData;
;;;243        GUI_RECT ClipRectPrev;
;;;244        GUI_LOCK();
;;;245        pDevData = (GUI_MEMDEV*) GUI_ALLOC_h2p(hMem);
0004ee  4620              MOV      r0,r4
0004f0  f7fffffe          BL       GUI_ALLOC_h2p
0004f4  4606              MOV      r6,r0
;;;246        if (x == GUI_POS_AUTO) {
0004f6  f64070ff          MOV      r0,#0xfff
0004fa  1940              ADDS     r0,r0,r5
0004fc  d103              BNE      |L1.1286|
;;;247          x = pDevData->x0;
0004fe  f9b65000          LDRSH    r5,[r6,#0]
;;;248          y = pDevData->y0;
000502  f9b67002          LDRSH    r7,[r6,#2]
                  |L1.1286|
;;;249        }
;;;250        ClipRectPrev = GUI_Context.ClipRect;
000506  4913              LDR      r1,|L1.1364|
000508  e9d10101          LDRD     r0,r1,[r1,#4]
00050c  e9cd0102          STRD     r0,r1,[sp,#8]
;;;251        LCD_SetClipRectMax();
000510  f7fffffe          BL       LCD_SetClipRectMax
;;;252        _WriteExToActiveAt(hMem, x, y, xMag, yMag, Alpha);
000514  4643              MOV      r3,r8
000516  463a              MOV      r2,r7
000518  4629              MOV      r1,r5
00051a  4620              MOV      r0,r4
00051c  e9cd9a00          STRD     r9,r10,[sp,#0]
000520  f7fffffe          BL       _WriteExToActiveAt
;;;253        GUI_Context.ClipRect = ClipRectPrev;
000524  480b              LDR      r0,|L1.1364|
000526  e9dd1202          LDRD     r1,r2,[sp,#8]
00052a  e9c01201          STRD     r1,r2,[r0,#4]
;;;254        GUI_UNLOCK();
;;;255      }
00052e  bf00              NOP      
                  |L1.1328|
;;;256    }
000530  e8bd87ff          POP      {r0-r10,pc}
;;;257    
                          ENDP

                  GUI_MEMDEV_WriteEx PROC
;;;261    */
;;;262    void GUI_MEMDEV_WriteEx(GUI_MEMDEV_Handle hMem, int xMag, int yMag, int Alpha) {
000534  e92d41fc          PUSH     {r2-r8,lr}
000538  4607              MOV      r7,r0
00053a  460c              MOV      r4,r1
00053c  4615              MOV      r5,r2
00053e  461e              MOV      r6,r3
;;;263      GUI_MEMDEV_WriteExAt(hMem, GUI_POS_AUTO, GUI_POS_AUTO, xMag, yMag, Alpha);
000540  4623              MOV      r3,r4
000542  4a05              LDR      r2,|L1.1368|
000544  4611              MOV      r1,r2
000546  4638              MOV      r0,r7
000548  e9cd5600          STRD     r5,r6,[sp,#0]
00054c  f7fffffe          BL       GUI_MEMDEV_WriteExAt
;;;264    }
000550  e8bd81fc          POP      {r2-r8,pc}
;;;265    
                          ENDP

                  |L1.1364|
                          DCD      GUI_Context
                  |L1.1368|
                          DCD      0xfffff001

; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\guicore.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\guicore.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\guicore.crf GUI\Core\GUICore.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _InitContext PROC
;;;61     */
;;;62     static void _InitContext(GUI_CONTEXT* pContext) {
000000  b510              PUSH     {r4,lr}
000002  4604              MOV      r4,r0
;;;63       /* memset(..,0,..) is not required, as this function is called only at startup of the GUI when data is 0 */
;;;64       #if GUI_SUPPORT_DEVICES
;;;65         pContext->pDeviceAPI   = LCD_aAPI[0]; /* &LCD_L0_APIList; */
000004  4842              LDR      r0,|L1.272|
000006  6800              LDR      r0,[r0,#0]  ; LCD_aAPI
000008  64a0              STR      r0,[r4,#0x48]
;;;66       #endif
;;;67       pContext->pClipRect_HL = &GUI_Context.ClipRect;
00000a  4842              LDR      r0,|L1.276|
00000c  6120              STR      r0,[r4,#0x10]
;;;68       LCD_L0_GetRect(&pContext->ClipRect);
00000e  f1040004          ADD      r0,r4,#4
000012  f7fffffe          BL       LCD_L0_GetRect
;;;69       #if GUI_SUPPORT_AA
;;;70         pContext->pLCD_HL      = &_HL_APIList;
000016  4840              LDR      r0,|L1.280|
000018  65a0              STR      r0,[r4,#0x58]
;;;71       #endif
;;;72       pContext->pAFont       = GUI_DEFAULT_FONT;
00001a  4840              LDR      r0,|L1.284|
00001c  61a0              STR      r0,[r4,#0x18]
;;;73       pContext->pClipRect_HL = &GUI_Context.ClipRect;
00001e  483d              LDR      r0,|L1.276|
000020  6120              STR      r0,[r4,#0x10]
;;;74       pContext->PenSize      = 1;
000022  f04f0001          MOV      r0,#1
000026  7520              STRB     r0,[r4,#0x14]
;;;75       /* Variables in WM module */
;;;76       #if GUI_WINSUPPORT
;;;77         pContext->hAWin    = WM_GetDesktopWindow();
000028  f7fffffe          BL       WM_GetDesktopWindow
00002c  87a0              STRH     r0,[r4,#0x3c]
;;;78       #endif
;;;79       /* Variables in GUI_AA module */
;;;80       #if GUI_SUPPORT_AA
;;;81         pContext->AA_Factor = 3;
00002e  f04f0003          MOV      r0,#3
000032  f884005c          STRB     r0,[r4,#0x5c]
;;;82       #endif
;;;83       pContext->Color   = GUI_INVALID_COLOR;
000036  f06f4070          MVN      r0,#0xf0000000
00003a  6320              STR      r0,[r4,#0x30]
;;;84       pContext->BkColor = GUI_INVALID_COLOR;
00003c  6360              STR      r0,[r4,#0x34]
;;;85       LCD_SetBkColor(GUI_DEFAULT_BKCOLOR);
00003e  f04f0000          MOV      r0,#0
000042  f7fffffe          BL       LCD_SetBkColor
;;;86       LCD_SetColor(GUI_DEFAULT_COLOR);
000046  f06f407f          MVN      r0,#0xff000000
00004a  f7fffffe          BL       LCD_SetColor
;;;87       pContext->pUC_API = &GUI__API_TableNone;
00004e  4834              LDR      r0,|L1.288|
000050  61e0              STR      r0,[r4,#0x1c]
;;;88     }
000052  bd10              POP      {r4,pc}
;;;89     
                          ENDP

                  GUI_ClearRect PROC
;;;99     */
;;;100    void GUI_ClearRect(int x0, int y0, int x1, int y1) {
000054  e92d41fc          PUSH     {r2-r8,lr}
000058  4604              MOV      r4,r0
00005a  460d              MOV      r5,r1
00005c  4616              MOV      r6,r2
00005e  461f              MOV      r7,r3
;;;101      GUI_DRAWMODE PrevDraw;
;;;102      #if GUI_WINSUPPORT
;;;103        GUI_RECT r;
;;;104      #endif
;;;105      GUI_LOCK();
;;;106      PrevDraw = LCD_SetDrawMode(GUI_DRAWMODE_REV);
000060  f04f0004          MOV      r0,#4
000064  f7fffffe          BL       LCD_SetDrawMode
000068  4680              MOV      r8,r0
;;;107      #if GUI_WINSUPPORT
;;;108        WM_ADDORG(x0,y0);
00006a  482a              LDR      r0,|L1.276|
00006c  f1a00004          SUB      r0,r0,#4
000070  6c00              LDR      r0,[r0,#0x40]  ; GUI_Context
000072  4404              ADD      r4,r4,r0
000074  4827              LDR      r0,|L1.276|
000076  f1a00004          SUB      r0,r0,#4
00007a  6c40              LDR      r0,[r0,#0x44]  ; GUI_Context
00007c  4405              ADD      r5,r5,r0
;;;109        WM_ADDORG(x1,y1);
00007e  4825              LDR      r0,|L1.276|
000080  f1a00004          SUB      r0,r0,#4
000084  6c00              LDR      r0,[r0,#0x40]  ; GUI_Context
000086  4406              ADD      r6,r6,r0
000088  4822              LDR      r0,|L1.276|
00008a  f1a00004          SUB      r0,r0,#4
00008e  6c40              LDR      r0,[r0,#0x44]  ; GUI_Context
000090  4407              ADD      r7,r7,r0
;;;110        r.x0 = x0;
000092  b220              SXTH     r0,r4
000094  f8ad0000          STRH     r0,[sp,#0]
;;;111        r.x1 = x1;
000098  b230              SXTH     r0,r6
00009a  f8ad0004          STRH     r0,[sp,#4]
;;;112        r.y0 = y0;
00009e  b228              SXTH     r0,r5
0000a0  f8ad0002          STRH     r0,[sp,#2]
;;;113        r.y1 = y1;
0000a4  b238              SXTH     r0,r7
0000a6  f8ad0006          STRH     r0,[sp,#6]
;;;114        WM_ITERATE_START(&r) {
0000aa  4668              MOV      r0,sp
0000ac  f7fffffe          BL       WM__InitIVRSearch
0000b0  b150              CBZ      r0,|L1.200|
0000b2  bf00              NOP      
                  |L1.180|
;;;115      #endif
;;;116      LCD_FillRect(x0,y0,x1,y1);
0000b4  463b              MOV      r3,r7
0000b6  4632              MOV      r2,r6
0000b8  4629              MOV      r1,r5
0000ba  4620              MOV      r0,r4
0000bc  f7fffffe          BL       LCD_FillRect
;;;117      #if GUI_WINSUPPORT
;;;118        } WM_ITERATE_END();
0000c0  f7fffffe          BL       WM__GetNextIVR
0000c4  2800              CMP      r0,#0
0000c6  d1f5              BNE      |L1.180|
                  |L1.200|
;;;119      #endif
;;;120      LCD_SetDrawMode(PrevDraw);
0000c8  4640              MOV      r0,r8
0000ca  f7fffffe          BL       LCD_SetDrawMode
;;;121      GUI_UNLOCK();
;;;122    }
0000ce  e8bd81fc          POP      {r2-r8,pc}
;;;123    
                          ENDP

                  GUI_Clear PROC
;;;127    */
;;;128    void GUI_Clear(void) {
0000d2  b510              PUSH     {r4,lr}
;;;129      GUI_GotoXY(0,0);     /* Reset text cursor to upper left */
0000d4  2100              MOVS     r1,#0
0000d6  4608              MOV      r0,r1
0000d8  f7fffffe          BL       GUI_GotoXY
;;;130      GUI_ClearRect(GUI_XMIN, GUI_YMIN, GUI_XMAX, GUI_YMAX);
0000dc  f64073ff          MOV      r3,#0xfff
0000e0  461a              MOV      r2,r3
0000e2  4259              RSBS     r1,r3,#0
0000e4  4608              MOV      r0,r1
0000e6  f7fffffe          BL       GUI_ClearRect
;;;131    }
0000ea  bd10              POP      {r4,pc}
;;;132    
                          ENDP

                  GUI_Init PROC
;;;139    */
;;;140    int GUI_Init(void) {
0000ec  b510              PUSH     {r4,lr}
;;;141      int r;
;;;142      GUI_DEBUG_LOG("\nGUI_Init()");
;;;143      /* Init system wide globals first */
;;;144      GUI_DecChar = '.';
0000ee  f04f002e          MOV      r0,#0x2e
0000f2  490c              LDR      r1,|L1.292|
0000f4  7008              STRB     r0,[r1,#0]
;;;145      GUI_X_Init();
0000f6  f7fffffe          BL       GUI_X_Init
;;;146      /* Init context */
;;;147      _InitContext(&GUI_Context);
0000fa  4806              LDR      r0,|L1.276|
0000fc  1f00              SUBS     r0,r0,#4
0000fe  f7fffffe          BL       _InitContext
;;;148      GUITASK_INIT();
;;;149      r = LCD_Init();
000102  f7fffffe          BL       LCD_Init
000106  4604              MOV      r4,r0
;;;150      #if GUI_WINSUPPORT
;;;151        WM_Init();
000108  f7fffffe          BL       WM_Init
;;;152      #endif
;;;153      GUITASK_COPY_CONTEXT();
;;;154      #if defined(GUI_TRIAL_VERSION)
;;;155      {
;;;156        int i;
;;;157        for (i = 0; i < 10; i++) {
;;;158          GUI_DispString("This uC-GUI library\n"
;;;159    	                     "is for evaluation\n"
;;;160    	                     "purpose only.\n"
;;;161    	                     "A license is\n"
;;;162    	                     "required to use\n"
;;;163    	                     "it in a product\n\n"
;;;164    	                     "www.micrium.com\n");
;;;165          GUI_GotoXY(0, 0);
;;;166        }
;;;167      }
;;;168      GUI_Clear();
;;;169      #endif
;;;170      return r;
00010c  4620              MOV      r0,r4
;;;171    }
00010e  bd10              POP      {r4,pc}
;;;172    
                          ENDP

                  |L1.272|
                          DCD      LCD_aAPI
                  |L1.276|
                          DCD      GUI_Context+0x4
                  |L1.280|
                          DCD      _HL_APIList
                  |L1.284|
                          DCD      GUI_Font6x8
                  |L1.288|
                          DCD      GUI__API_TableNone
                  |L1.292|
                          DCD      GUI_DecChar

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  GUI_Context
                          %        96

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  _HL_APIList
                          DCD      LCD_DrawHLine
                          DCD      LCD_DrawPixel

                          AREA ||.data||, DATA, ALIGN=2

                  GUI_DecChar
000000  00000000          DCB      0x00,0x00,0x00,0x00
                  GUI_pfTimerExec
                          DCD      0x00000000
                  WM_pfHandlePID
                          DCD      0x00000000
                  GUI_pfDispCharStyle
                          DCD      0x00000000
                  GUI_pLCD_APIList
                          DCD      0x00000000

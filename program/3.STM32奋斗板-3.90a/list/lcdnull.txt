; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\lcdnull.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\lcdnull.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\lcdnull.crf GUI\LCDDriver\LCDNull.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  LCD_L0_SetPixelIndex PROC
;;;30     
;;;31     void LCD_L0_SetPixelIndex(int x, int y, int PixelIndex) 
000000  b570              PUSH     {r4-r6,lr}
;;;32     {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
000006  4616              MOV      r6,r2
;;;33     	TFT_DrawPoint(x,y,PixelIndex);
000008  b2b2              UXTH     r2,r6
00000a  b2a9              UXTH     r1,r5
00000c  b2a0              UXTH     r0,r4
00000e  f7fffffe          BL       TFT_DrawPoint
;;;34     }
000012  bd70              POP      {r4-r6,pc}
;;;35     
                          ENDP

                  LCD_L0_GetPixelIndex PROC
;;;39     */
;;;40     unsigned int LCD_L0_GetPixelIndex(int x, int y) 
000014  b570              PUSH     {r4-r6,lr}
;;;41     {
000016  4604              MOV      r4,r0
000018  460d              MOV      r5,r1
;;;42     	return (TFT_ReadPoint(x,y));
00001a  b2a9              UXTH     r1,r5
00001c  b2a0              UXTH     r0,r4
00001e  f7fffffe          BL       TFT_ReadPoint
;;;43     }
000022  bd70              POP      {r4-r6,pc}
;;;44     
                          ENDP

                  LCD_L0_XorPixel PROC
;;;48     */
;;;49     void LCD_L0_XorPixel(int x, int y) 
000024  b570              PUSH     {r4-r6,lr}
;;;50     {
000026  4604              MOV      r4,r0
000028  460d              MOV      r5,r1
;;;51     	LCD_PIXELINDEX Index = TFT_ReadPoint(x,y);
00002a  b2a9              UXTH     r1,r5
00002c  b2a0              UXTH     r0,r4
00002e  f7fffffe          BL       TFT_ReadPoint
000032  4606              MOV      r6,r0
;;;52     	TFT_DrawPoint(x,y,LCD_NUM_COLORS-1-Index);
000034  f64f70ff          MOV      r0,#0xffff
000038  eba00206          SUB      r2,r0,r6
00003c  b2a9              UXTH     r1,r5
00003e  b2a0              UXTH     r0,r4
000040  f7fffffe          BL       TFT_DrawPoint
;;;53     }
000044  bd70              POP      {r4-r6,pc}
;;;54     
                          ENDP

                  LCD_L0_DrawHLine PROC
;;;59     
;;;60     void LCD_L0_DrawHLine(int x0, int y,  int x1) 
000046  b570              PUSH     {r4-r6,lr}
;;;61     {
000048  4604              MOV      r4,r0
00004a  460d              MOV      r5,r1
00004c  4616              MOV      r6,r2
;;;62     	TFT_HLine(x0,y,x1,LCD_COLORINDEX);
00004e  48f8              LDR      r0,|L1.1072|
000050  8843              LDRH     r3,[r0,#2]  ; GUI_Context
000052  b2b2              UXTH     r2,r6
000054  b2a9              UXTH     r1,r5
000056  b2a0              UXTH     r0,r4
000058  f7fffffe          BL       TFT_HLine
;;;63     }
00005c  bd70              POP      {r4-r6,pc}
;;;64     
                          ENDP

                  LCD_L0_DrawVLine PROC
;;;68     */
;;;69     void LCD_L0_DrawVLine(int x, int y0,  int y1) 
00005e  b570              PUSH     {r4-r6,lr}
;;;70     {
000060  4604              MOV      r4,r0
000062  460d              MOV      r5,r1
000064  4616              MOV      r6,r2
;;;71     	TFT_VLine(x,y0,y1,LCD_COLORINDEX);
000066  48f2              LDR      r0,|L1.1072|
000068  8843              LDRH     r3,[r0,#2]  ; GUI_Context
00006a  b2b2              UXTH     r2,r6
00006c  b2a9              UXTH     r1,r5
00006e  b2a0              UXTH     r0,r4
000070  f7fffffe          BL       TFT_VLine
;;;72     }
000074  bd70              POP      {r4-r6,pc}
;;;73     
                          ENDP

                  LCD_L0_FillRect PROC
;;;77     */
;;;78     void LCD_L0_FillRect(int x0, int y0, int x1, int y1) 
000076  b5f8              PUSH     {r3-r7,lr}
;;;79     {
000078  4604              MOV      r4,r0
00007a  460d              MOV      r5,r1
00007c  4616              MOV      r6,r2
00007e  461f              MOV      r7,r3
;;;80     	TFT_Fill(x0,y0,x1,y1,LCD_COLORINDEX);
000080  48eb              LDR      r0,|L1.1072|
000082  8840              LDRH     r0,[r0,#2]  ; GUI_Context
000084  b2bb              UXTH     r3,r7
000086  b2b2              UXTH     r2,r6
000088  b2a9              UXTH     r1,r5
00008a  9000              STR      r0,[sp,#0]
00008c  b2a0              UXTH     r0,r4
00008e  f7fffffe          BL       TFT_Fill
;;;81     }
000092  bdf8              POP      {r3-r7,pc}
;;;82     
                          ENDP

                  DrawBitLine1BPP PROC
;;;87     
;;;88     void DrawBitLine1BPP(int x, int y, U8 const*p, int Diff, int xsize, const LCD_PIXELINDEX*pTrans)
000094  e92d4ff8          PUSH     {r3-r11,lr}
;;;89     {
000098  4604              MOV      r4,r0
00009a  460f              MOV      r7,r1
00009c  4690              MOV      r8,r2
00009e  4699              MOV      r9,r3
0000a0  e9dd5a0a          LDRD     r5,r10,[sp,#0x28]
;;;90       LCD_PIXELINDEX pixels;
;;;91       LCD_PIXELINDEX Index0 = *(pTrans+0);
0000a4  f8ba0000          LDRH     r0,[r10,#0]
0000a8  9000              STR      r0,[sp,#0]
;;;92       LCD_PIXELINDEX Index1 = *(pTrans+1);
0000aa  f8bab002          LDRH     r11,[r10,#2]
;;;93     /*
;;;94     // Jump to right entry point
;;;95     */
;;;96       pixels = *p;
0000ae  f8986000          LDRB     r6,[r8,#0]
;;;97       switch (GUI_Context.DrawMode & (LCD_DRAWMODE_TRANS|LCD_DRAWMODE_XOR)) {
0000b2  48df              LDR      r0,|L1.1072|
0000b4  7b00              LDRB     r0,[r0,#0xc]  ; GUI_Context
0000b6  f0100003          ANDS     r0,r0,#3
0000ba  d004              BEQ      |L1.198|
0000bc  2801              CMP      r0,#1
0000be  d028              BEQ      |L1.274|
0000c0  2802              CMP      r0,#2
0000c2  d139              BNE      |L1.312|
0000c4  e012              B        |L1.236|
                  |L1.198|
;;;98       case 0:
;;;99         #if defined (SETNEXTPIXEL)   /* Optimization ! */
;;;100          x+=Diff;
;;;101        #endif
;;;102        switch (Diff&7) {
0000c6  f0090007          AND      r0,r9,#7
0000ca  2808              CMP      r0,#8
0000cc  d20d              BCS      |L1.234|
0000ce  e8dff000          TBB      [pc,r0]
0000d2  0405              DCB      0x04,0x05
0000d4  06070809          DCB      0x06,0x07,0x08,0x09
0000d8  0a0b              DCB      0x0a,0x0b
;;;103        case 0:   
;;;104          goto WriteBit0;
0000da  e0ad              B        |L1.568|
;;;105        case 1:   
;;;106          goto WriteBit1;
0000dc  e0bd              B        |L1.602|
;;;107        case 2:
;;;108          goto WriteBit2;
0000de  e0ce              B        |L1.638|
;;;109        case 3:
;;;110          goto WriteBit3;
0000e0  e0df              B        |L1.674|
;;;111        case 4:
;;;112          goto WriteBit4;
0000e2  e0f0              B        |L1.710|
;;;113        case 5:   
;;;114          goto WriteBit5;
0000e4  e101              B        |L1.746|
;;;115        case 6:   
;;;116          goto WriteBit6;
0000e6  e112              B        |L1.782|
;;;117        case 7:   
;;;118          goto WriteBit7;
0000e8  e123              B        |L1.818|
                  |L1.234|
;;;119        }
;;;120        break;
0000ea  e025              B        |L1.312|
                  |L1.236|
;;;121      case LCD_DRAWMODE_TRANS:
;;;122        switch (Diff&7) {
0000ec  f0090007          AND      r0,r9,#7
0000f0  2808              CMP      r0,#8
0000f2  d20d              BCS      |L1.272|
0000f4  e8dff000          TBB      [pc,r0]
0000f8  04050607          DCB      0x04,0x05,0x06,0x07
0000fc  08090a0b          DCB      0x08,0x09,0x0a,0x0b
;;;123        case 0:
;;;124          goto WriteTBit0;
000100  e01c              B        |L1.316|
;;;125        case 1:
;;;126          goto WriteTBit1;
000102  e02a              B        |L1.346|
;;;127        case 2:
;;;128          goto WriteTBit2;
000104  e038              B        |L1.376|
;;;129        case 3:
;;;130          goto WriteTBit3;
000106  e046              B        |L1.406|
;;;131        case 4:
;;;132          goto WriteTBit4;
000108  e054              B        |L1.436|
;;;133        case 5:   
;;;134          goto WriteTBit5;
00010a  e062              B        |L1.466|
;;;135        case 6:   
;;;136          goto WriteTBit6;
00010c  e070              B        |L1.496|
;;;137        case 7:   
;;;138          goto WriteTBit7;
00010e  e07e              B        |L1.526|
                  |L1.272|
;;;139        }
;;;140        break;
000110  e012              B        |L1.312|
                  |L1.274|
;;;141      case LCD_DRAWMODE_XOR:
;;;142        switch (Diff&7) {
000112  f0090007          AND      r0,r9,#7
000116  2808              CMP      r0,#8
000118  d20d              BCS      |L1.310|
00011a  e8dff000          TBB      [pc,r0]
00011e  0405              DCB      0x04,0x05
000120  06070809          DCB      0x06,0x07,0x08,0x09
000124  0a0b              DCB      0x0a,0x0b
;;;143        case 0:   
;;;144          goto WriteXBit0;
000126  e11c              B        |L1.866|
;;;145        case 1:   
;;;146          goto WriteXBit1;
000128  e128              B        |L1.892|
;;;147        case 2:
;;;148          goto WriteXBit2;
00012a  e134              B        |L1.918|
;;;149        case 3:
;;;150          goto WriteXBit3;
00012c  e140              B        |L1.944|
;;;151        case 4:
;;;152          goto WriteXBit4;
00012e  e14c              B        |L1.970|
;;;153        case 5:   
;;;154          goto WriteXBit5;
000130  e158              B        |L1.996|
;;;155        case 6:   
;;;156          goto WriteXBit6;
000132  e164              B        |L1.1022|
;;;157        case 7:   
;;;158          goto WriteXBit7;
000134  e170              B        |L1.1048|
                  |L1.310|
000136  bf00              NOP                            ;97
                  |L1.312|
000138  bf00              NOP                            ;120
;;;159        }
;;;160      }
;;;161    /*
;;;162            Write with transparency
;;;163    */
;;;164      WriteTBit0:
00013a  bf00              NOP      
                  |L1.316|
;;;165        if (pixels&(1<<7)) TFT_DrawPoint(x+0, y, Index1);
00013c  f0160f80          TST      r6,#0x80
000140  d004              BEQ      |L1.332|
000142  465a              MOV      r2,r11
000144  b2b9              UXTH     r1,r7
000146  b2a0              UXTH     r0,r4
000148  f7fffffe          BL       TFT_DrawPoint
                  |L1.332|
;;;166        if (!--xsize)
00014c  f1a50001          SUB      r0,r5,#1
000150  0005              MOVS     r5,r0
000152  d101              BNE      |L1.344|
                  |L1.340|
;;;167          return;
;;;168      WriteTBit1:
;;;169        if (pixels&(1<<6)) TFT_DrawPoint(x+1, y, Index1);
;;;170        if (!--xsize)
;;;171          return;
;;;172      WriteTBit2:
;;;173        if (pixels&(1<<5)) TFT_DrawPoint(x+2, y, Index1);
;;;174        if (!--xsize)
;;;175          return;
;;;176      WriteTBit3:
;;;177        if (pixels&(1<<4)) TFT_DrawPoint(x+3, y, Index1);
;;;178        if (!--xsize)
;;;179          return;
;;;180      WriteTBit4:
;;;181        if (pixels&(1<<3)) TFT_DrawPoint(x+4, y, Index1);
;;;182        if (!--xsize)
;;;183          return;
;;;184      WriteTBit5:
;;;185        if (pixels&(1<<2)) TFT_DrawPoint(x+5, y, Index1);
;;;186        if (!--xsize)
;;;187          return;
;;;188      WriteTBit6:
;;;189        if (pixels&(1<<1)) TFT_DrawPoint(x+6, y, Index1);
;;;190        if (!--xsize)
;;;191          return;
;;;192      WriteTBit7:
;;;193        if (pixels&(1<<0)) TFT_DrawPoint(x+7, y, Index1);
;;;194        if (!--xsize)
;;;195          return;
;;;196        x+=8;
;;;197        pixels = *(++p);
;;;198        goto WriteTBit0;
;;;199    
;;;200    /*
;;;201            Write without transparency
;;;202    */
;;;203    
;;;204      WriteBit0:
;;;205        TFT_DrawPoint(x+0, y, (pixels&(1<<7)) ? Index1 : Index0);
;;;206        if (!--xsize)
;;;207          return;
;;;208      WriteBit1:
;;;209        TFT_DrawPoint(x+1, y, (pixels&(1<<6)) ? Index1 : Index0);
;;;210        if (!--xsize)
;;;211          return;
;;;212      WriteBit2:
;;;213        TFT_DrawPoint(x+2, y, (pixels&(1<<5)) ? Index1 : Index0);
;;;214        if (!--xsize)
;;;215          return;
;;;216      WriteBit3:
;;;217        TFT_DrawPoint(x+3, y, (pixels&(1<<4)) ? Index1 : Index0);
;;;218        if (!--xsize)
;;;219          return;
;;;220      WriteBit4:
;;;221        TFT_DrawPoint(x+4, y, (pixels&(1<<3)) ? Index1 : Index0);
;;;222        if (!--xsize)
;;;223          return;
;;;224      WriteBit5:
;;;225        TFT_DrawPoint(x+5, y, (pixels&(1<<2)) ? Index1 : Index0);
;;;226        if (!--xsize)
;;;227          return;
;;;228      WriteBit6:
;;;229        TFT_DrawPoint(x+6, y, (pixels&(1<<1)) ? Index1 : Index0);
;;;230        if (!--xsize)
;;;231          return;
;;;232      WriteBit7:
;;;233        TFT_DrawPoint(x+7, y, (pixels&(1<<0)) ? Index1 : Index0);
;;;234        if (!--xsize)
;;;235          return;
;;;236        x+=8;
;;;237        pixels = *(++p);
;;;238        goto WriteBit0;
;;;239    
;;;240    /*
;;;241            Write XOR mode
;;;242    */
;;;243      WriteXBit0:
;;;244        if (pixels&(1<<7))
;;;245          LCD_L0_XorPixel(x+0, y);
;;;246        if (!--xsize)
;;;247          return;
;;;248      WriteXBit1:
;;;249        if (pixels&(1<<6))
;;;250          LCD_L0_XorPixel(x+1, y);
;;;251        if (!--xsize)
;;;252          return;
;;;253      WriteXBit2:
;;;254        if (pixels&(1<<5))
;;;255          LCD_L0_XorPixel(x+2, y);
;;;256        if (!--xsize)
;;;257          return;
;;;258      WriteXBit3:
;;;259        if (pixels&(1<<4))
;;;260          LCD_L0_XorPixel(x+3, y);
;;;261        if (!--xsize)
;;;262          return;
;;;263      WriteXBit4:
;;;264        if (pixels&(1<<3))
;;;265          LCD_L0_XorPixel(x+4, y);
;;;266        if (!--xsize)
;;;267          return;
;;;268      WriteXBit5:
;;;269        if (pixels&(1<<2))
;;;270          LCD_L0_XorPixel(x+5, y);
;;;271        if (!--xsize)
;;;272          return;
;;;273      WriteXBit6:
;;;274        if (pixels&(1<<1))
;;;275          LCD_L0_XorPixel(x+6, y);
;;;276        if (!--xsize)
;;;277          return;
;;;278      WriteXBit7:
;;;279        if (pixels&(1<<0))
;;;280          LCD_L0_XorPixel(x+7, y);
;;;281        if (!--xsize)
;;;282          return;
;;;283        x+=8;
;;;284        pixels = *(++p);
;;;285        goto WriteXBit0;
;;;286    }
000154  e8bd8ff8          POP      {r3-r11,pc}
                  |L1.344|
000158  bf00              NOP                            ;168
                  |L1.346|
00015a  f0160f40          TST      r6,#0x40              ;169
00015e  d005              BEQ      |L1.364|
000160  465a              MOV      r2,r11                ;169
000162  b2b9              UXTH     r1,r7                 ;169
000164  1c60              ADDS     r0,r4,#1              ;169
000166  b280              UXTH     r0,r0                 ;169
000168  f7fffffe          BL       TFT_DrawPoint
                  |L1.364|
00016c  f1a50001          SUB      r0,r5,#1              ;170
000170  0005              MOVS     r5,r0                 ;170
000172  d100              BNE      |L1.374|
000174  e7ee              B        |L1.340|
                  |L1.374|
000176  bf00              NOP                            ;172
                  |L1.376|
000178  f0160f20          TST      r6,#0x20              ;173
00017c  d005              BEQ      |L1.394|
00017e  465a              MOV      r2,r11                ;173
000180  b2b9              UXTH     r1,r7                 ;173
000182  1ca0              ADDS     r0,r4,#2              ;173
000184  b280              UXTH     r0,r0                 ;173
000186  f7fffffe          BL       TFT_DrawPoint
                  |L1.394|
00018a  f1a50001          SUB      r0,r5,#1              ;174
00018e  0005              MOVS     r5,r0                 ;174
000190  d100              BNE      |L1.404|
000192  e7df              B        |L1.340|
                  |L1.404|
000194  bf00              NOP                            ;176
                  |L1.406|
000196  f0160f10          TST      r6,#0x10              ;177
00019a  d005              BEQ      |L1.424|
00019c  465a              MOV      r2,r11                ;177
00019e  b2b9              UXTH     r1,r7                 ;177
0001a0  1ce0              ADDS     r0,r4,#3              ;177
0001a2  b280              UXTH     r0,r0                 ;177
0001a4  f7fffffe          BL       TFT_DrawPoint
                  |L1.424|
0001a8  f1a50001          SUB      r0,r5,#1              ;178
0001ac  0005              MOVS     r5,r0                 ;178
0001ae  d100              BNE      |L1.434|
0001b0  e7d0              B        |L1.340|
                  |L1.434|
0001b2  bf00              NOP                            ;180
                  |L1.436|
0001b4  f0160f08          TST      r6,#8                 ;181
0001b8  d005              BEQ      |L1.454|
0001ba  465a              MOV      r2,r11                ;181
0001bc  b2b9              UXTH     r1,r7                 ;181
0001be  1d20              ADDS     r0,r4,#4              ;181
0001c0  b280              UXTH     r0,r0                 ;181
0001c2  f7fffffe          BL       TFT_DrawPoint
                  |L1.454|
0001c6  f1a50001          SUB      r0,r5,#1              ;182
0001ca  0005              MOVS     r5,r0                 ;182
0001cc  d100              BNE      |L1.464|
0001ce  e7c1              B        |L1.340|
                  |L1.464|
0001d0  bf00              NOP                            ;184
                  |L1.466|
0001d2  f0160f04          TST      r6,#4                 ;185
0001d6  d005              BEQ      |L1.484|
0001d8  465a              MOV      r2,r11                ;185
0001da  b2b9              UXTH     r1,r7                 ;185
0001dc  1d60              ADDS     r0,r4,#5              ;185
0001de  b280              UXTH     r0,r0                 ;185
0001e0  f7fffffe          BL       TFT_DrawPoint
                  |L1.484|
0001e4  f1a50001          SUB      r0,r5,#1              ;186
0001e8  0005              MOVS     r5,r0                 ;186
0001ea  d100              BNE      |L1.494|
0001ec  e7b2              B        |L1.340|
                  |L1.494|
0001ee  bf00              NOP                            ;188
                  |L1.496|
0001f0  f0160f02          TST      r6,#2                 ;189
0001f4  d005              BEQ      |L1.514|
0001f6  465a              MOV      r2,r11                ;189
0001f8  b2b9              UXTH     r1,r7                 ;189
0001fa  1da0              ADDS     r0,r4,#6              ;189
0001fc  b280              UXTH     r0,r0                 ;189
0001fe  f7fffffe          BL       TFT_DrawPoint
                  |L1.514|
000202  f1a50001          SUB      r0,r5,#1              ;190
000206  0005              MOVS     r5,r0                 ;190
000208  d100              BNE      |L1.524|
00020a  e7a3              B        |L1.340|
                  |L1.524|
00020c  bf00              NOP                            ;192
                  |L1.526|
00020e  f0160f01          TST      r6,#1                 ;193
000212  d005              BEQ      |L1.544|
000214  465a              MOV      r2,r11                ;193
000216  b2b9              UXTH     r1,r7                 ;193
000218  1de0              ADDS     r0,r4,#7              ;193
00021a  b280              UXTH     r0,r0                 ;193
00021c  f7fffffe          BL       TFT_DrawPoint
                  |L1.544|
000220  f1a50001          SUB      r0,r5,#1              ;194
000224  0005              MOVS     r5,r0                 ;194
000226  d100              BNE      |L1.554|
000228  e794              B        |L1.340|
                  |L1.554|
00022a  f1040408          ADD      r4,r4,#8              ;196
00022e  f1080001          ADD      r0,r8,#1              ;197
000232  4680              MOV      r8,r0                 ;197
000234  7806              LDRB     r6,[r0,#0]            ;197
000236  e781              B        |L1.316|
                  |L1.568|
000238  f0160f80          TST      r6,#0x80              ;205
00023c  d001              BEQ      |L1.578|
00023e  4658              MOV      r0,r11                ;205
000240  e000              B        |L1.580|
                  |L1.578|
000242  9800              LDR      r0,[sp,#0]            ;205
                  |L1.580|
000244  4602              MOV      r2,r0                 ;205
000246  b2b9              UXTH     r1,r7                 ;205
000248  b2a0              UXTH     r0,r4                 ;205
00024a  f7fffffe          BL       TFT_DrawPoint
00024e  f1a50001          SUB      r0,r5,#1              ;206
000252  0005              MOVS     r5,r0                 ;206
000254  d100              BNE      |L1.600|
000256  e77d              B        |L1.340|
                  |L1.600|
000258  bf00              NOP                            ;208
                  |L1.602|
00025a  f0160f40          TST      r6,#0x40              ;209
00025e  d001              BEQ      |L1.612|
000260  4658              MOV      r0,r11                ;209
000262  e000              B        |L1.614|
                  |L1.612|
000264  9800              LDR      r0,[sp,#0]            ;209
                  |L1.614|
000266  4602              MOV      r2,r0                 ;209
000268  b2b9              UXTH     r1,r7                 ;209
00026a  1c60              ADDS     r0,r4,#1              ;209
00026c  b280              UXTH     r0,r0                 ;209
00026e  f7fffffe          BL       TFT_DrawPoint
000272  f1a50001          SUB      r0,r5,#1              ;210
000276  0005              MOVS     r5,r0                 ;210
000278  d100              BNE      |L1.636|
00027a  e76b              B        |L1.340|
                  |L1.636|
00027c  bf00              NOP                            ;212
                  |L1.638|
00027e  f0160f20          TST      r6,#0x20              ;213
000282  d001              BEQ      |L1.648|
000284  4658              MOV      r0,r11                ;213
000286  e000              B        |L1.650|
                  |L1.648|
000288  9800              LDR      r0,[sp,#0]            ;213
                  |L1.650|
00028a  4602              MOV      r2,r0                 ;213
00028c  b2b9              UXTH     r1,r7                 ;213
00028e  1ca0              ADDS     r0,r4,#2              ;213
000290  b280              UXTH     r0,r0                 ;213
000292  f7fffffe          BL       TFT_DrawPoint
000296  f1a50001          SUB      r0,r5,#1              ;214
00029a  0005              MOVS     r5,r0                 ;214
00029c  d100              BNE      |L1.672|
00029e  e759              B        |L1.340|
                  |L1.672|
0002a0  bf00              NOP                            ;216
                  |L1.674|
0002a2  f0160f10          TST      r6,#0x10              ;217
0002a6  d001              BEQ      |L1.684|
0002a8  4658              MOV      r0,r11                ;217
0002aa  e000              B        |L1.686|
                  |L1.684|
0002ac  9800              LDR      r0,[sp,#0]            ;217
                  |L1.686|
0002ae  4602              MOV      r2,r0                 ;217
0002b0  b2b9              UXTH     r1,r7                 ;217
0002b2  1ce0              ADDS     r0,r4,#3              ;217
0002b4  b280              UXTH     r0,r0                 ;217
0002b6  f7fffffe          BL       TFT_DrawPoint
0002ba  f1a50001          SUB      r0,r5,#1              ;218
0002be  0005              MOVS     r5,r0                 ;218
0002c0  d100              BNE      |L1.708|
0002c2  e747              B        |L1.340|
                  |L1.708|
0002c4  bf00              NOP                            ;220
                  |L1.710|
0002c6  f0160f08          TST      r6,#8                 ;221
0002ca  d001              BEQ      |L1.720|
0002cc  4658              MOV      r0,r11                ;221
0002ce  e000              B        |L1.722|
                  |L1.720|
0002d0  9800              LDR      r0,[sp,#0]            ;221
                  |L1.722|
0002d2  4602              MOV      r2,r0                 ;221
0002d4  b2b9              UXTH     r1,r7                 ;221
0002d6  1d20              ADDS     r0,r4,#4              ;221
0002d8  b280              UXTH     r0,r0                 ;221
0002da  f7fffffe          BL       TFT_DrawPoint
0002de  f1a50001          SUB      r0,r5,#1              ;222
0002e2  0005              MOVS     r5,r0                 ;222
0002e4  d100              BNE      |L1.744|
0002e6  e735              B        |L1.340|
                  |L1.744|
0002e8  bf00              NOP                            ;224
                  |L1.746|
0002ea  f0160f04          TST      r6,#4                 ;225
0002ee  d001              BEQ      |L1.756|
0002f0  4658              MOV      r0,r11                ;225
0002f2  e000              B        |L1.758|
                  |L1.756|
0002f4  9800              LDR      r0,[sp,#0]            ;225
                  |L1.758|
0002f6  4602              MOV      r2,r0                 ;225
0002f8  b2b9              UXTH     r1,r7                 ;225
0002fa  1d60              ADDS     r0,r4,#5              ;225
0002fc  b280              UXTH     r0,r0                 ;225
0002fe  f7fffffe          BL       TFT_DrawPoint
000302  f1a50001          SUB      r0,r5,#1              ;226
000306  0005              MOVS     r5,r0                 ;226
000308  d100              BNE      |L1.780|
00030a  e723              B        |L1.340|
                  |L1.780|
00030c  bf00              NOP                            ;228
                  |L1.782|
00030e  f0160f02          TST      r6,#2                 ;229
000312  d001              BEQ      |L1.792|
000314  4658              MOV      r0,r11                ;229
000316  e000              B        |L1.794|
                  |L1.792|
000318  9800              LDR      r0,[sp,#0]            ;229
                  |L1.794|
00031a  4602              MOV      r2,r0                 ;229
00031c  b2b9              UXTH     r1,r7                 ;229
00031e  1da0              ADDS     r0,r4,#6              ;229
000320  b280              UXTH     r0,r0                 ;229
000322  f7fffffe          BL       TFT_DrawPoint
000326  f1a50001          SUB      r0,r5,#1              ;230
00032a  0005              MOVS     r5,r0                 ;230
00032c  d100              BNE      |L1.816|
00032e  e711              B        |L1.340|
                  |L1.816|
000330  bf00              NOP                            ;232
                  |L1.818|
000332  f0160f01          TST      r6,#1                 ;233
000336  d001              BEQ      |L1.828|
000338  4658              MOV      r0,r11                ;233
00033a  e000              B        |L1.830|
                  |L1.828|
00033c  9800              LDR      r0,[sp,#0]            ;233
                  |L1.830|
00033e  4602              MOV      r2,r0                 ;233
000340  b2b9              UXTH     r1,r7                 ;233
000342  1de0              ADDS     r0,r4,#7              ;233
000344  b280              UXTH     r0,r0                 ;233
000346  f7fffffe          BL       TFT_DrawPoint
00034a  f1a50001          SUB      r0,r5,#1              ;234
00034e  0005              MOVS     r5,r0                 ;234
000350  d100              BNE      |L1.852|
000352  e6ff              B        |L1.340|
                  |L1.852|
000354  f1040408          ADD      r4,r4,#8              ;236
000358  f1080001          ADD      r0,r8,#1              ;237
00035c  4680              MOV      r8,r0                 ;237
00035e  7806              LDRB     r6,[r0,#0]            ;237
000360  e76a              B        |L1.568|
                  |L1.866|
000362  f0160f80          TST      r6,#0x80              ;244
000366  d003              BEQ      |L1.880|
000368  4639              MOV      r1,r7                 ;245
00036a  4620              MOV      r0,r4                 ;245
00036c  f7fffffe          BL       LCD_L0_XorPixel
                  |L1.880|
000370  f1a50001          SUB      r0,r5,#1              ;246
000374  0005              MOVS     r5,r0                 ;246
000376  d100              BNE      |L1.890|
000378  e6ec              B        |L1.340|
                  |L1.890|
00037a  bf00              NOP                            ;248
                  |L1.892|
00037c  f0160f40          TST      r6,#0x40              ;249
000380  d003              BEQ      |L1.906|
000382  4639              MOV      r1,r7                 ;250
000384  1c60              ADDS     r0,r4,#1              ;250
000386  f7fffffe          BL       LCD_L0_XorPixel
                  |L1.906|
00038a  f1a50001          SUB      r0,r5,#1              ;251
00038e  0005              MOVS     r5,r0                 ;251
000390  d100              BNE      |L1.916|
000392  e6df              B        |L1.340|
                  |L1.916|
000394  bf00              NOP                            ;253
                  |L1.918|
000396  f0160f20          TST      r6,#0x20              ;254
00039a  d003              BEQ      |L1.932|
00039c  4639              MOV      r1,r7                 ;255
00039e  1ca0              ADDS     r0,r4,#2              ;255
0003a0  f7fffffe          BL       LCD_L0_XorPixel
                  |L1.932|
0003a4  f1a50001          SUB      r0,r5,#1              ;256
0003a8  0005              MOVS     r5,r0                 ;256
0003aa  d100              BNE      |L1.942|
0003ac  e6d2              B        |L1.340|
                  |L1.942|
0003ae  bf00              NOP                            ;258
                  |L1.944|
0003b0  f0160f10          TST      r6,#0x10              ;259
0003b4  d003              BEQ      |L1.958|
0003b6  4639              MOV      r1,r7                 ;260
0003b8  1ce0              ADDS     r0,r4,#3              ;260
0003ba  f7fffffe          BL       LCD_L0_XorPixel
                  |L1.958|
0003be  f1a50001          SUB      r0,r5,#1              ;261
0003c2  0005              MOVS     r5,r0                 ;261
0003c4  d100              BNE      |L1.968|
0003c6  e6c5              B        |L1.340|
                  |L1.968|
0003c8  bf00              NOP                            ;263
                  |L1.970|
0003ca  f0160f08          TST      r6,#8                 ;264
0003ce  d003              BEQ      |L1.984|
0003d0  4639              MOV      r1,r7                 ;265
0003d2  1d20              ADDS     r0,r4,#4              ;265
0003d4  f7fffffe          BL       LCD_L0_XorPixel
                  |L1.984|
0003d8  f1a50001          SUB      r0,r5,#1              ;266
0003dc  0005              MOVS     r5,r0                 ;266
0003de  d100              BNE      |L1.994|
0003e0  e6b8              B        |L1.340|
                  |L1.994|
0003e2  bf00              NOP                            ;268
                  |L1.996|
0003e4  f0160f04          TST      r6,#4                 ;269
0003e8  d003              BEQ      |L1.1010|
0003ea  4639              MOV      r1,r7                 ;270
0003ec  1d60              ADDS     r0,r4,#5              ;270
0003ee  f7fffffe          BL       LCD_L0_XorPixel
                  |L1.1010|
0003f2  f1a50001          SUB      r0,r5,#1              ;271
0003f6  0005              MOVS     r5,r0                 ;271
0003f8  d100              BNE      |L1.1020|
0003fa  e6ab              B        |L1.340|
                  |L1.1020|
0003fc  bf00              NOP                            ;273
                  |L1.1022|
0003fe  f0160f02          TST      r6,#2                 ;274
000402  d003              BEQ      |L1.1036|
000404  4639              MOV      r1,r7                 ;275
000406  1da0              ADDS     r0,r4,#6              ;275
000408  f7fffffe          BL       LCD_L0_XorPixel
                  |L1.1036|
00040c  f1a50001          SUB      r0,r5,#1              ;276
000410  0005              MOVS     r5,r0                 ;276
000412  d100              BNE      |L1.1046|
000414  e69e              B        |L1.340|
                  |L1.1046|
000416  bf00              NOP                            ;278
                  |L1.1048|
000418  f0160f01          TST      r6,#1                 ;279
00041c  d003              BEQ      |L1.1062|
00041e  4639              MOV      r1,r7                 ;280
000420  1de0              ADDS     r0,r4,#7              ;280
000422  f7fffffe          BL       LCD_L0_XorPixel
                  |L1.1062|
000426  f1a50001          SUB      r0,r5,#1              ;281
00042a  0005              MOVS     r5,r0                 ;281
00042c  d102              BNE      |L1.1076|
00042e  e691              B        |L1.340|
                  |L1.1072|
                          DCD      GUI_Context
                  |L1.1076|
000434  f1040408          ADD      r4,r4,#8              ;283
000438  f1080001          ADD      r0,r8,#1              ;284
00043c  4680              MOV      r8,r0                 ;284
00043e  7806              LDRB     r6,[r0,#0]            ;284
000440  e78f              B        |L1.866|
;;;287    
                          ENDP

                  DrawBitLine2BPP PROC
;;;288    static void  DrawBitLine2BPP(int x, int y, U8 const*p, int Diff, int xsize, const LCD_PIXELINDEX*pTrans) {
000442  e92d47f0          PUSH     {r4-r10,lr}
000446  4604              MOV      r4,r0
000448  460e              MOV      r6,r1
00044a  4691              MOV      r9,r2
00044c  469a              MOV      r10,r3
00044e  e9dd7808          LDRD     r7,r8,[sp,#0x20]
;;;289      LCD_PIXELINDEX pixels;
;;;290    /*
;;;291    // Jump to right entry point
;;;292    */
;;;293      pixels = *p;
000452  f8995000          LDRB     r5,[r9,#0]
;;;294      if (pTrans) {
000456  f1b80f00          CMP      r8,#0
00045a  d06e              BEQ      |L1.1338|
;;;295        /*
;;;296          with palette
;;;297        */
;;;298        if (GUI_Context.DrawMode & LCD_DRAWMODE_TRANS) switch (Diff&3) {
00045c  48fd              LDR      r0,|L1.2132|
00045e  7b00              LDRB     r0,[r0,#0xc]  ; GUI_Context
000460  f0100f02          TST      r0,#2
000464  d00b              BEQ      |L1.1150|
000466  f01a0003          ANDS     r0,r10,#3
00046a  d004              BEQ      |L1.1142|
00046c  2801              CMP      r0,#1
00046e  d003              BEQ      |L1.1144|
000470  2802              CMP      r0,#2
000472  d103              BNE      |L1.1148|
000474  e001              B        |L1.1146|
                  |L1.1142|
;;;299        case 0:
;;;300          goto WriteTBit0;
000476  e051              B        |L1.1308|
                  |L1.1144|
;;;301        case 1:
;;;302          goto WriteTBit1;
000478  e061              B        |L1.1342|
                  |L1.1146|
;;;303        case 2:
;;;304          goto WriteTBit2;
00047a  e073              B        |L1.1380|
                  |L1.1148|
;;;305        default:
;;;306          goto WriteTBit3;
00047c  e085              B        |L1.1418|
                  |L1.1150|
;;;307        } else switch (Diff&3) {
00047e  f01a0003          ANDS     r0,r10,#3
000482  d004              BEQ      |L1.1166|
000484  2801              CMP      r0,#1
000486  d003              BEQ      |L1.1168|
000488  2802              CMP      r0,#2
00048a  d103              BNE      |L1.1172|
00048c  e001              B        |L1.1170|
                  |L1.1166|
;;;308        case 0:
;;;309          goto WriteBit0;
00048e  e002              B        |L1.1174|
                  |L1.1168|
;;;310        case 1:
;;;311          goto WriteBit1;
000490  e00f              B        |L1.1202|
                  |L1.1170|
;;;312        case 2:
;;;313          goto WriteBit2;
000492  e01e              B        |L1.1234|
                  |L1.1172|
;;;314        default:
;;;315          goto WriteBit3;
000494  e02d              B        |L1.1266|
                  |L1.1174|
;;;316        }
;;;317      /*
;;;318              Write without transparency
;;;319      */
;;;320      WriteBit0:
;;;321        TFT_DrawPoint(x+0, y, *(pTrans+(pixels>>6)));
000496  11a8              ASRS     r0,r5,#6
000498  f8382010          LDRH     r2,[r8,r0,LSL #1]
00049c  b2b1              UXTH     r1,r6
00049e  b2a0              UXTH     r0,r4
0004a0  f7fffffe          BL       TFT_DrawPoint
;;;322        if (!--xsize)
0004a4  f1a70001          SUB      r0,r7,#1
0004a8  0007              MOVS     r7,r0
0004aa  d101              BNE      |L1.1200|
                  |L1.1196|
;;;323          return;
;;;324      WriteBit1:
;;;325        TFT_DrawPoint(x+1, y, *(pTrans+(3&(pixels>>4))));
;;;326        if (!--xsize)
;;;327          return;
;;;328      WriteBit2:
;;;329        TFT_DrawPoint(x+2, y, *(pTrans+(3&(pixels>>2))));
;;;330        if (!--xsize)
;;;331          return;
;;;332      WriteBit3:
;;;333        TFT_DrawPoint(x+3, y, *(pTrans+(3&(pixels))));
;;;334        if (!--xsize)
;;;335          return;
;;;336        pixels = *(++p);
;;;337        x+=4;
;;;338        goto WriteBit0;
;;;339      /*
;;;340              Write with transparency
;;;341      */
;;;342      WriteTBit0:
;;;343        if (pixels&(3<<6))
;;;344          TFT_DrawPoint(x+0, y, *(pTrans+(pixels>>6)));
;;;345        if (!--xsize)
;;;346          return;
;;;347      WriteTBit1:
;;;348        if (pixels&(3<<4))
;;;349          TFT_DrawPoint(x+1, y, *(pTrans+(3&(pixels>>4))));
;;;350        if (!--xsize)
;;;351          return;
;;;352      WriteTBit2:
;;;353        if (pixels&(3<<2))
;;;354          TFT_DrawPoint(x+2, y, *(pTrans+(3&(pixels>>2))));
;;;355        if (!--xsize)
;;;356          return;
;;;357      WriteTBit3:
;;;358        if (pixels&(3<<0))
;;;359          TFT_DrawPoint(x+3, y, *(pTrans+(3&(pixels))));
;;;360        if (!--xsize)
;;;361          return;
;;;362        pixels = *(++p);
;;;363        x+=4;
;;;364        goto WriteTBit0;
;;;365      } else { 
;;;366        /* 
;;;367          without palette 
;;;368        */
;;;369        if (GUI_Context.DrawMode & LCD_DRAWMODE_TRANS) switch (Diff&3) {
;;;370        case 0:
;;;371          goto WriteDDPTBit0;
;;;372        case 1:
;;;373          goto WriteDDPTBit1;
;;;374        case 2:
;;;375          goto WriteDDPTBit2;
;;;376        default:
;;;377          goto WriteDDPTBit3;
;;;378        } else switch (Diff&3) {
;;;379        case 0:
;;;380          goto WriteDDPBit0;
;;;381        case 1:
;;;382          goto WriteDDPBit1;
;;;383        case 2:
;;;384          goto WriteDDPBit2;
;;;385        default:
;;;386          goto WriteDDPBit3;
;;;387        }
;;;388      /*
;;;389              Write without transparency
;;;390      */
;;;391      WriteDDPBit0:
;;;392        TFT_DrawPoint(x+0, y, (pixels>>6));
;;;393        if (!--xsize)
;;;394          return;
;;;395      WriteDDPBit1:
;;;396        TFT_DrawPoint(x+1, y, (3&(pixels>>4)));
;;;397        if (!--xsize)
;;;398          return;
;;;399      WriteDDPBit2:
;;;400        TFT_DrawPoint(x+2, y, (3&(pixels>>2)));
;;;401        if (!--xsize)
;;;402          return;
;;;403      WriteDDPBit3:
;;;404        TFT_DrawPoint(x+3, y, (3&(pixels)));
;;;405        if (!--xsize)
;;;406          return;
;;;407        pixels = *(++p);
;;;408        x+=4;
;;;409        goto WriteDDPBit0;
;;;410      /*
;;;411              Write with transparency
;;;412      */
;;;413      WriteDDPTBit0:
;;;414        if (pixels&(3<<6))
;;;415          TFT_DrawPoint(x+0, y, (pixels>>6));
;;;416        if (!--xsize)
;;;417          return;
;;;418      WriteDDPTBit1:
;;;419        if (pixels&(3<<4))
;;;420          TFT_DrawPoint(x+1, y, (3&(pixels>>4)));
;;;421        if (!--xsize)
;;;422          return;
;;;423      WriteDDPTBit2:
;;;424        if (pixels&(3<<2))
;;;425          TFT_DrawPoint(x+2, y, (3&(pixels>>2)));
;;;426        if (!--xsize)
;;;427          return;
;;;428      WriteDDPTBit3:
;;;429        if (pixels&(3<<0))
;;;430          TFT_DrawPoint(x+3, y, (3&(pixels)));
;;;431        if (!--xsize)
;;;432          return;
;;;433        pixels = *(++p);
;;;434        x+=4;
;;;435        goto WriteDDPTBit0;
;;;436      }
;;;437    }
0004ac  e8bd87f0          POP      {r4-r10,pc}
                  |L1.1200|
0004b0  bf00              NOP                            ;324
                  |L1.1202|
0004b2  2003              MOVS     r0,#3                 ;325
0004b4  ea001025          AND      r0,r0,r5,ASR #4       ;325
0004b8  f8382010          LDRH     r2,[r8,r0,LSL #1]     ;325
0004bc  b2b1              UXTH     r1,r6                 ;325
0004be  1c60              ADDS     r0,r4,#1              ;325
0004c0  b280              UXTH     r0,r0                 ;325
0004c2  f7fffffe          BL       TFT_DrawPoint
0004c6  f1a70001          SUB      r0,r7,#1              ;326
0004ca  0007              MOVS     r7,r0                 ;326
0004cc  d100              BNE      |L1.1232|
0004ce  e7ed              B        |L1.1196|
                  |L1.1232|
0004d0  bf00              NOP                            ;328
                  |L1.1234|
0004d2  2003              MOVS     r0,#3                 ;329
0004d4  ea0000a5          AND      r0,r0,r5,ASR #2       ;329
0004d8  f8382010          LDRH     r2,[r8,r0,LSL #1]     ;329
0004dc  b2b1              UXTH     r1,r6                 ;329
0004de  1ca0              ADDS     r0,r4,#2              ;329
0004e0  b280              UXTH     r0,r0                 ;329
0004e2  f7fffffe          BL       TFT_DrawPoint
0004e6  f1a70001          SUB      r0,r7,#1              ;330
0004ea  0007              MOVS     r7,r0                 ;330
0004ec  d100              BNE      |L1.1264|
0004ee  e7dd              B        |L1.1196|
                  |L1.1264|
0004f0  bf00              NOP                            ;332
                  |L1.1266|
0004f2  f0050003          AND      r0,r5,#3              ;333
0004f6  f8382010          LDRH     r2,[r8,r0,LSL #1]     ;333
0004fa  b2b1              UXTH     r1,r6                 ;333
0004fc  1ce0              ADDS     r0,r4,#3              ;333
0004fe  b280              UXTH     r0,r0                 ;333
000500  f7fffffe          BL       TFT_DrawPoint
000504  f1a70001          SUB      r0,r7,#1              ;334
000508  0007              MOVS     r7,r0                 ;334
00050a  d100              BNE      |L1.1294|
00050c  e7ce              B        |L1.1196|
                  |L1.1294|
00050e  f1090001          ADD      r0,r9,#1              ;336
000512  4681              MOV      r9,r0                 ;336
000514  7805              LDRB     r5,[r0,#0]            ;336
000516  f1040404          ADD      r4,r4,#4              ;337
00051a  e7bc              B        |L1.1174|
                  |L1.1308|
00051c  f0150fc0          TST      r5,#0xc0              ;343
000520  d006              BEQ      |L1.1328|
000522  11a8              ASRS     r0,r5,#6              ;344
000524  f8382010          LDRH     r2,[r8,r0,LSL #1]     ;344
000528  b2b1              UXTH     r1,r6                 ;344
00052a  b2a0              UXTH     r0,r4                 ;344
00052c  f7fffffe          BL       TFT_DrawPoint
                  |L1.1328|
000530  f1a70001          SUB      r0,r7,#1              ;345
000534  0007              MOVS     r7,r0                 ;345
000536  d101              BNE      |L1.1340|
000538  e7b8              B        |L1.1196|
                  |L1.1338|
00053a  e03e              B        |L1.1466|
                  |L1.1340|
00053c  bf00              NOP                            ;347
                  |L1.1342|
00053e  f0150f30          TST      r5,#0x30              ;348
000542  d009              BEQ      |L1.1368|
000544  2003              MOVS     r0,#3                 ;349
000546  ea001025          AND      r0,r0,r5,ASR #4       ;349
00054a  f8382010          LDRH     r2,[r8,r0,LSL #1]     ;349
00054e  b2b1              UXTH     r1,r6                 ;349
000550  1c60              ADDS     r0,r4,#1              ;349
000552  b280              UXTH     r0,r0                 ;349
000554  f7fffffe          BL       TFT_DrawPoint
                  |L1.1368|
000558  f1a70001          SUB      r0,r7,#1              ;350
00055c  0007              MOVS     r7,r0                 ;350
00055e  d100              BNE      |L1.1378|
000560  e7a4              B        |L1.1196|
                  |L1.1378|
000562  bf00              NOP                            ;352
                  |L1.1380|
000564  f0150f0c          TST      r5,#0xc               ;353
000568  d009              BEQ      |L1.1406|
00056a  2003              MOVS     r0,#3                 ;354
00056c  ea0000a5          AND      r0,r0,r5,ASR #2       ;354
000570  f8382010          LDRH     r2,[r8,r0,LSL #1]     ;354
000574  b2b1              UXTH     r1,r6                 ;354
000576  1ca0              ADDS     r0,r4,#2              ;354
000578  b280              UXTH     r0,r0                 ;354
00057a  f7fffffe          BL       TFT_DrawPoint
                  |L1.1406|
00057e  f1a70001          SUB      r0,r7,#1              ;355
000582  0007              MOVS     r7,r0                 ;355
000584  d100              BNE      |L1.1416|
000586  e791              B        |L1.1196|
                  |L1.1416|
000588  bf00              NOP                            ;357
                  |L1.1418|
00058a  f0150f03          TST      r5,#3                 ;358
00058e  d008              BEQ      |L1.1442|
000590  f0050003          AND      r0,r5,#3              ;359
000594  f8382010          LDRH     r2,[r8,r0,LSL #1]     ;359
000598  b2b1              UXTH     r1,r6                 ;359
00059a  1ce0              ADDS     r0,r4,#3              ;359
00059c  b280              UXTH     r0,r0                 ;359
00059e  f7fffffe          BL       TFT_DrawPoint
                  |L1.1442|
0005a2  f1a70001          SUB      r0,r7,#1              ;360
0005a6  0007              MOVS     r7,r0                 ;360
0005a8  d100              BNE      |L1.1452|
0005aa  e77f              B        |L1.1196|
                  |L1.1452|
0005ac  f1090001          ADD      r0,r9,#1              ;362
0005b0  4681              MOV      r9,r0                 ;362
0005b2  7805              LDRB     r5,[r0,#0]            ;362
0005b4  f1040404          ADD      r4,r4,#4              ;363
0005b8  e7b0              B        |L1.1308|
                  |L1.1466|
0005ba  48a6              LDR      r0,|L1.2132|
0005bc  7b00              LDRB     r0,[r0,#0xc]          ;369  ; GUI_Context
0005be  f0100f02          TST      r0,#2                 ;369
0005c2  d00b              BEQ      |L1.1500|
0005c4  f01a0003          ANDS     r0,r10,#3             ;369
0005c8  d004              BEQ      |L1.1492|
0005ca  2801              CMP      r0,#1                 ;369
0005cc  d003              BEQ      |L1.1494|
0005ce  2802              CMP      r0,#2                 ;369
0005d0  d103              BNE      |L1.1498|
0005d2  e001              B        |L1.1496|
                  |L1.1492|
0005d4  e048              B        |L1.1640|
                  |L1.1494|
0005d6  e055              B        |L1.1668|
                  |L1.1496|
0005d8  e065              B        |L1.1702|
                  |L1.1498|
0005da  e075              B        |L1.1736|
                  |L1.1500|
0005dc  f01a0003          ANDS     r0,r10,#3             ;378
0005e0  d004              BEQ      |L1.1516|
0005e2  2801              CMP      r0,#1                 ;378
0005e4  d003              BEQ      |L1.1518|
0005e6  2802              CMP      r0,#2                 ;378
0005e8  d103              BNE      |L1.1522|
0005ea  e001              B        |L1.1520|
                  |L1.1516|
0005ec  e002              B        |L1.1524|
                  |L1.1518|
0005ee  e00c              B        |L1.1546|
                  |L1.1520|
0005f0  e019              B        |L1.1574|
                  |L1.1522|
0005f2  e026              B        |L1.1602|
                  |L1.1524|
0005f4  11aa              ASRS     r2,r5,#6              ;392
0005f6  b2b1              UXTH     r1,r6                 ;392
0005f8  b2a0              UXTH     r0,r4                 ;392
0005fa  f7fffffe          BL       TFT_DrawPoint
0005fe  f1a70001          SUB      r0,r7,#1              ;393
000602  0007              MOVS     r7,r0                 ;393
000604  d100              BNE      |L1.1544|
000606  e751              B        |L1.1196|
                  |L1.1544|
000608  bf00              NOP                            ;395
                  |L1.1546|
00060a  2003              MOVS     r0,#3                 ;396
00060c  ea001225          AND      r2,r0,r5,ASR #4       ;396
000610  b2b1              UXTH     r1,r6                 ;396
000612  1c60              ADDS     r0,r4,#1              ;396
000614  b280              UXTH     r0,r0                 ;396
000616  f7fffffe          BL       TFT_DrawPoint
00061a  f1a70001          SUB      r0,r7,#1              ;397
00061e  0007              MOVS     r7,r0                 ;397
000620  d100              BNE      |L1.1572|
000622  e743              B        |L1.1196|
                  |L1.1572|
000624  bf00              NOP                            ;399
                  |L1.1574|
000626  2003              MOVS     r0,#3                 ;400
000628  ea0002a5          AND      r2,r0,r5,ASR #2       ;400
00062c  b2b1              UXTH     r1,r6                 ;400
00062e  1ca0              ADDS     r0,r4,#2              ;400
000630  b280              UXTH     r0,r0                 ;400
000632  f7fffffe          BL       TFT_DrawPoint
000636  f1a70001          SUB      r0,r7,#1              ;401
00063a  0007              MOVS     r7,r0                 ;401
00063c  d100              BNE      |L1.1600|
00063e  e735              B        |L1.1196|
                  |L1.1600|
000640  bf00              NOP                            ;403
                  |L1.1602|
000642  f0050203          AND      r2,r5,#3              ;404
000646  b2b1              UXTH     r1,r6                 ;404
000648  1ce0              ADDS     r0,r4,#3              ;404
00064a  b280              UXTH     r0,r0                 ;404
00064c  f7fffffe          BL       TFT_DrawPoint
000650  f1a70001          SUB      r0,r7,#1              ;405
000654  0007              MOVS     r7,r0                 ;405
000656  d100              BNE      |L1.1626|
000658  e728              B        |L1.1196|
                  |L1.1626|
00065a  f1090001          ADD      r0,r9,#1              ;407
00065e  4681              MOV      r9,r0                 ;407
000660  7805              LDRB     r5,[r0,#0]            ;407
000662  f1040404          ADD      r4,r4,#4              ;408
000666  e7c5              B        |L1.1524|
                  |L1.1640|
000668  f0150fc0          TST      r5,#0xc0              ;414
00066c  d004              BEQ      |L1.1656|
00066e  11aa              ASRS     r2,r5,#6              ;415
000670  b2b1              UXTH     r1,r6                 ;415
000672  b2a0              UXTH     r0,r4                 ;415
000674  f7fffffe          BL       TFT_DrawPoint
                  |L1.1656|
000678  f1a70001          SUB      r0,r7,#1              ;416
00067c  0007              MOVS     r7,r0                 ;416
00067e  d100              BNE      |L1.1666|
000680  e714              B        |L1.1196|
                  |L1.1666|
000682  bf00              NOP                            ;418
                  |L1.1668|
000684  f0150f30          TST      r5,#0x30              ;419
000688  d007              BEQ      |L1.1690|
00068a  2003              MOVS     r0,#3                 ;420
00068c  ea001225          AND      r2,r0,r5,ASR #4       ;420
000690  b2b1              UXTH     r1,r6                 ;420
000692  1c60              ADDS     r0,r4,#1              ;420
000694  b280              UXTH     r0,r0                 ;420
000696  f7fffffe          BL       TFT_DrawPoint
                  |L1.1690|
00069a  f1a70001          SUB      r0,r7,#1              ;421
00069e  0007              MOVS     r7,r0                 ;421
0006a0  d100              BNE      |L1.1700|
0006a2  e703              B        |L1.1196|
                  |L1.1700|
0006a4  bf00              NOP                            ;423
                  |L1.1702|
0006a6  f0150f0c          TST      r5,#0xc               ;424
0006aa  d007              BEQ      |L1.1724|
0006ac  2003              MOVS     r0,#3                 ;425
0006ae  ea0002a5          AND      r2,r0,r5,ASR #2       ;425
0006b2  b2b1              UXTH     r1,r6                 ;425
0006b4  1ca0              ADDS     r0,r4,#2              ;425
0006b6  b280              UXTH     r0,r0                 ;425
0006b8  f7fffffe          BL       TFT_DrawPoint
                  |L1.1724|
0006bc  f1a70001          SUB      r0,r7,#1              ;426
0006c0  0007              MOVS     r7,r0                 ;426
0006c2  d100              BNE      |L1.1734|
0006c4  e6f2              B        |L1.1196|
                  |L1.1734|
0006c6  bf00              NOP                            ;428
                  |L1.1736|
0006c8  f0150f03          TST      r5,#3                 ;429
0006cc  d006              BEQ      |L1.1756|
0006ce  f0050203          AND      r2,r5,#3              ;430
0006d2  b2b1              UXTH     r1,r6                 ;430
0006d4  1ce0              ADDS     r0,r4,#3              ;430
0006d6  b280              UXTH     r0,r0                 ;430
0006d8  f7fffffe          BL       TFT_DrawPoint
                  |L1.1756|
0006dc  f1a70001          SUB      r0,r7,#1              ;431
0006e0  0007              MOVS     r7,r0                 ;431
0006e2  d100              BNE      |L1.1766|
0006e4  e6e2              B        |L1.1196|
                  |L1.1766|
0006e6  f1090001          ADD      r0,r9,#1              ;433
0006ea  4681              MOV      r9,r0                 ;433
0006ec  7805              LDRB     r5,[r0,#0]            ;433
0006ee  f1040404          ADD      r4,r4,#4              ;434
0006f2  e7b9              B        |L1.1640|
;;;438    
                          ENDP

                  DrawBitLine4BPP PROC
;;;439    static void  DrawBitLine4BPP(int x, int y, U8 const*p, int Diff, int xsize, const LCD_PIXELINDEX*pTrans)
0006f4  e92d47f0          PUSH     {r4-r10,lr}
;;;440    {
0006f8  4604              MOV      r4,r0
0006fa  460e              MOV      r6,r1
0006fc  4690              MOV      r8,r2
0006fe  4699              MOV      r9,r3
000700  e9dd7a08          LDRD     r7,r10,[sp,#0x20]
;;;441      LCD_PIXELINDEX pixels;
;;;442    
;;;443      pixels = *p;
000704  f8985000          LDRB     r5,[r8,#0]
;;;444      if (pTrans)
000708  f1ba0f00          CMP      r10,#0
00070c  d058              BEQ      |L1.1984|
;;;445      {
;;;446        if (GUI_Context.DrawMode & LCD_DRAWMODE_TRANS)
00070e  4851              LDR      r0,|L1.2132|
000710  7b00              LDRB     r0,[r0,#0xc]  ; GUI_Context
000712  f0100f02          TST      r0,#2
000716  d004              BEQ      |L1.1826|
;;;447        {
;;;448          if ((Diff&1) ==0)
000718  f0190f01          TST      r9,#1
00071c  d100              BNE      |L1.1824|
;;;449            goto WriteTBit0;
00071e  e028              B        |L1.1906|
                  |L1.1824|
;;;450            goto WriteTBit1;
000720  e036              B        |L1.1936|
                  |L1.1826|
;;;451        }
;;;452        else
;;;453        {
;;;454          if ((Diff&1) ==0)
000722  f0190f01          TST      r9,#1
000726  d100              BNE      |L1.1834|
;;;455            goto WriteBit0;
000728  e000              B        |L1.1836|
                  |L1.1834|
;;;456            goto WriteBit1;
00072a  e00d              B        |L1.1864|
                  |L1.1836|
;;;457        }
;;;458    
;;;459      WriteBit0:
;;;460        TFT_DrawPoint(x+0, y, *(pTrans+(pixels>>4)));
00072c  1128              ASRS     r0,r5,#4
00072e  f83a2010          LDRH     r2,[r10,r0,LSL #1]
000732  b2b1              UXTH     r1,r6
000734  b2a0              UXTH     r0,r4
000736  f7fffffe          BL       TFT_DrawPoint
;;;461        if (!--xsize)
00073a  f1a70001          SUB      r0,r7,#1
00073e  0007              MOVS     r7,r0
000740  d101              BNE      |L1.1862|
                  |L1.1858|
;;;462          return;
;;;463      WriteBit1:
;;;464        TFT_DrawPoint(x+1, y, *(pTrans+(pixels&0xf)));
;;;465        if (!--xsize)
;;;466          return;
;;;467        x+=2;
;;;468        pixels = *(++p);
;;;469        goto WriteBit0;
;;;470      /*
;;;471              Write with transparency
;;;472      */
;;;473      WriteTBit0:
;;;474        if (pixels>>4)
;;;475          TFT_DrawPoint(x+0, y, *(pTrans+(pixels>>4)));
;;;476        if (!--xsize)
;;;477          return;
;;;478      WriteTBit1:
;;;479        if (pixels&0xf)
;;;480          TFT_DrawPoint(x+1, y, *(pTrans+(pixels&0xf)));
;;;481        if (!--xsize)
;;;482          return;
;;;483        x+=2;
;;;484        pixels = *(++p);
;;;485        goto WriteTBit0;
;;;486      } else {
;;;487        /*
;;;488          without palette
;;;489        */
;;;490        if (GUI_Context.DrawMode & LCD_DRAWMODE_TRANS) {
;;;491          if ((Diff&1) ==0)
;;;492            goto WriteDDPTBit0;
;;;493          goto WriteDDPTBit1;
;;;494        } else {
;;;495          if ((Diff&1) ==0)
;;;496            goto WriteDDPBit0;
;;;497          goto WriteDDPBit1;
;;;498        }
;;;499      /*
;;;500              Write without transparency
;;;501      */
;;;502      WriteDDPBit0:
;;;503        TFT_DrawPoint(x+0, y, (pixels>>4));
;;;504        if (!--xsize)
;;;505          return;
;;;506      WriteDDPBit1:
;;;507        TFT_DrawPoint(x+1, y, (pixels&0xf));
;;;508        if (!--xsize)
;;;509          return;
;;;510        x+=2;
;;;511        pixels = *(++p);
;;;512        goto WriteDDPBit0;
;;;513      /*
;;;514              Write with transparency
;;;515      */
;;;516      WriteDDPTBit0:
;;;517        if (pixels>>4)
;;;518          TFT_DrawPoint(x+0, y, (pixels>>4));
;;;519        if (!--xsize)
;;;520          return;
;;;521      WriteDDPTBit1:
;;;522        if (pixels&0xf)
;;;523          TFT_DrawPoint(x+1, y, (pixels&0xf));
;;;524        if (!--xsize)
;;;525          return;
;;;526        x+=2;
;;;527        pixels = *(++p);
;;;528        goto WriteDDPTBit0;
;;;529      }
;;;530    }
000742  e8bd87f0          POP      {r4-r10,pc}
                  |L1.1862|
000746  bf00              NOP                            ;463
                  |L1.1864|
000748  f005000f          AND      r0,r5,#0xf            ;464
00074c  f83a2010          LDRH     r2,[r10,r0,LSL #1]    ;464
000750  b2b1              UXTH     r1,r6                 ;464
000752  1c60              ADDS     r0,r4,#1              ;464
000754  b280              UXTH     r0,r0                 ;464
000756  f7fffffe          BL       TFT_DrawPoint
00075a  f1a70001          SUB      r0,r7,#1              ;465
00075e  0007              MOVS     r7,r0                 ;465
000760  d100              BNE      |L1.1892|
000762  e7ee              B        |L1.1858|
                  |L1.1892|
000764  f1040402          ADD      r4,r4,#2              ;467
000768  f1080001          ADD      r0,r8,#1              ;468
00076c  4680              MOV      r8,r0                 ;468
00076e  7805              LDRB     r5,[r0,#0]            ;468
000770  e7dc              B        |L1.1836|
                  |L1.1906|
000772  1128              ASRS     r0,r5,#4              ;474
000774  d006              BEQ      |L1.1924|
000776  1128              ASRS     r0,r5,#4              ;475
000778  f83a2010          LDRH     r2,[r10,r0,LSL #1]    ;475
00077c  b2b1              UXTH     r1,r6                 ;475
00077e  b2a0              UXTH     r0,r4                 ;475
000780  f7fffffe          BL       TFT_DrawPoint
                  |L1.1924|
000784  f1a70001          SUB      r0,r7,#1              ;476
000788  0007              MOVS     r7,r0                 ;476
00078a  d100              BNE      |L1.1934|
00078c  e7d9              B        |L1.1858|
                  |L1.1934|
00078e  bf00              NOP                            ;478
                  |L1.1936|
000790  f0150f0f          TST      r5,#0xf               ;479
000794  d008              BEQ      |L1.1960|
000796  f005000f          AND      r0,r5,#0xf            ;480
00079a  f83a2010          LDRH     r2,[r10,r0,LSL #1]    ;480
00079e  b2b1              UXTH     r1,r6                 ;480
0007a0  1c60              ADDS     r0,r4,#1              ;480
0007a2  b280              UXTH     r0,r0                 ;480
0007a4  f7fffffe          BL       TFT_DrawPoint
                  |L1.1960|
0007a8  f1a70001          SUB      r0,r7,#1              ;481
0007ac  0007              MOVS     r7,r0                 ;481
0007ae  d100              BNE      |L1.1970|
0007b0  e7c7              B        |L1.1858|
                  |L1.1970|
0007b2  f1040402          ADD      r4,r4,#2              ;483
0007b6  f1080001          ADD      r0,r8,#1              ;484
0007ba  4680              MOV      r8,r0                 ;484
0007bc  7805              LDRB     r5,[r0,#0]            ;484
0007be  e7d8              B        |L1.1906|
                  |L1.1984|
0007c0  4824              LDR      r0,|L1.2132|
0007c2  7b00              LDRB     r0,[r0,#0xc]          ;490  ; GUI_Context
0007c4  f0100f02          TST      r0,#2                 ;490
0007c8  d004              BEQ      |L1.2004|
0007ca  f0190f01          TST      r9,#1                 ;491
0007ce  d100              BNE      |L1.2002|
0007d0  e023              B        |L1.2074|
                  |L1.2002|
0007d2  e02f              B        |L1.2100|
                  |L1.2004|
0007d4  f0190f01          TST      r9,#1                 ;495
0007d8  d100              BNE      |L1.2012|
0007da  e000              B        |L1.2014|
                  |L1.2012|
0007dc  e00a              B        |L1.2036|
                  |L1.2014|
0007de  112a              ASRS     r2,r5,#4              ;503
0007e0  b2b1              UXTH     r1,r6                 ;503
0007e2  b2a0              UXTH     r0,r4                 ;503
0007e4  f7fffffe          BL       TFT_DrawPoint
0007e8  f1a70001          SUB      r0,r7,#1              ;504
0007ec  0007              MOVS     r7,r0                 ;504
0007ee  d100              BNE      |L1.2034|
0007f0  e7a7              B        |L1.1858|
                  |L1.2034|
0007f2  bf00              NOP                            ;506
                  |L1.2036|
0007f4  f005020f          AND      r2,r5,#0xf            ;507
0007f8  b2b1              UXTH     r1,r6                 ;507
0007fa  1c60              ADDS     r0,r4,#1              ;507
0007fc  b280              UXTH     r0,r0                 ;507
0007fe  f7fffffe          BL       TFT_DrawPoint
000802  f1a70001          SUB      r0,r7,#1              ;508
000806  0007              MOVS     r7,r0                 ;508
000808  d100              BNE      |L1.2060|
00080a  e79a              B        |L1.1858|
                  |L1.2060|
00080c  f1040402          ADD      r4,r4,#2              ;510
000810  f1080001          ADD      r0,r8,#1              ;511
000814  4680              MOV      r8,r0                 ;511
000816  7805              LDRB     r5,[r0,#0]            ;511
000818  e7e1              B        |L1.2014|
                  |L1.2074|
00081a  1128              ASRS     r0,r5,#4              ;517
00081c  d004              BEQ      |L1.2088|
00081e  112a              ASRS     r2,r5,#4              ;518
000820  b2b1              UXTH     r1,r6                 ;518
000822  b2a0              UXTH     r0,r4                 ;518
000824  f7fffffe          BL       TFT_DrawPoint
                  |L1.2088|
000828  f1a70001          SUB      r0,r7,#1              ;519
00082c  0007              MOVS     r7,r0                 ;519
00082e  d100              BNE      |L1.2098|
000830  e787              B        |L1.1858|
                  |L1.2098|
000832  bf00              NOP                            ;521
                  |L1.2100|
000834  f0150f0f          TST      r5,#0xf               ;522
000838  d006              BEQ      |L1.2120|
00083a  f005020f          AND      r2,r5,#0xf            ;523
00083e  b2b1              UXTH     r1,r6                 ;523
000840  1c60              ADDS     r0,r4,#1              ;523
000842  b280              UXTH     r0,r0                 ;523
000844  f7fffffe          BL       TFT_DrawPoint
                  |L1.2120|
000848  f1a70001          SUB      r0,r7,#1              ;524
00084c  0007              MOVS     r7,r0                 ;524
00084e  d103              BNE      |L1.2136|
000850  e777              B        |L1.1858|
000852  0000              DCW      0x0000
                  |L1.2132|
                          DCD      GUI_Context
                  |L1.2136|
000858  f1040402          ADD      r4,r4,#2              ;526
00085c  f1080001          ADD      r0,r8,#1              ;527
000860  4680              MOV      r8,r0                 ;527
000862  7805              LDRB     r5,[r0,#0]            ;527
000864  e7d9              B        |L1.2074|
;;;531    
                          ENDP

                  DrawBitLine8BPP PROC
;;;532    void DrawBitLine8BPP(int x, int y, U8 const*p, int xsize, const LCD_PIXELINDEX*pTrans) {
000866  e92d47f0          PUSH     {r4-r10,lr}
00086a  4604              MOV      r4,r0
00086c  4688              MOV      r8,r1
00086e  4615              MOV      r5,r2
000870  461e              MOV      r6,r3
000872  f8dd9020          LDR      r9,[sp,#0x20]
;;;533      LCD_PIXELINDEX pixel;
;;;534      if ((GUI_Context.DrawMode & LCD_DRAWMODE_TRANS)==0) {
000876  4881              LDR      r0,|L1.2684|
000878  7b00              LDRB     r0,[r0,#0xc]  ; GUI_Context
00087a  f0100f02          TST      r0,#2
00087e  d124              BNE      |L1.2250|
;;;535        if (pTrans) {
000880  f1b90f00          CMP      r9,#0
000884  d011              BEQ      |L1.2218|
;;;536          for (;xsize > 0; xsize--,x++,p++) {
000886  e00d              B        |L1.2212|
                  |L1.2184|
;;;537            pixel = *p;
000888  782f              LDRB     r7,[r5,#0]
;;;538            TFT_DrawPoint(x, y, *(pTrans+pixel));
00088a  f8392017          LDRH     r2,[r9,r7,LSL #1]
00088e  fa1ff188          UXTH     r1,r8
000892  b2a0              UXTH     r0,r4
000894  f7fffffe          BL       TFT_DrawPoint
000898  f1a60601          SUB      r6,r6,#1              ;536
00089c  f1040401          ADD      r4,r4,#1              ;536
0008a0  f1050501          ADD      r5,r5,#1              ;536
                  |L1.2212|
0008a4  2e00              CMP      r6,#0                 ;536
0008a6  dcef              BGT      |L1.2184|
0008a8  e036              B        |L1.2328|
                  |L1.2218|
;;;539          }
;;;540        } else {
;;;541          for (;xsize > 0; xsize--,x++,p++) {
0008aa  e00b              B        |L1.2244|
                  |L1.2220|
;;;542            TFT_DrawPoint(x, y, *p);
0008ac  782a              LDRB     r2,[r5,#0]
0008ae  fa1ff188          UXTH     r1,r8
0008b2  b2a0              UXTH     r0,r4
0008b4  f7fffffe          BL       TFT_DrawPoint
0008b8  f1a60601          SUB      r6,r6,#1              ;541
0008bc  f1040401          ADD      r4,r4,#1              ;541
0008c0  f1050501          ADD      r5,r5,#1              ;541
                  |L1.2244|
0008c4  2e00              CMP      r6,#0                 ;541
0008c6  dcf1              BGT      |L1.2220|
0008c8  e026              B        |L1.2328|
                  |L1.2250|
;;;543          }
;;;544        }
;;;545      } else {   /* Handle transparent bitmap */
;;;546        if (pTrans) {
0008ca  f1b90f00          CMP      r9,#0
0008ce  d012              BEQ      |L1.2294|
;;;547          for (; xsize > 0; xsize--, x++, p++) {
0008d0  e00e              B        |L1.2288|
                  |L1.2258|
;;;548            pixel = *p;
0008d2  782f              LDRB     r7,[r5,#0]
;;;549            if (pixel) {
0008d4  b137              CBZ      r7,|L1.2276|
;;;550              TFT_DrawPoint(x+0, y, *(pTrans+pixel));
0008d6  f8392017          LDRH     r2,[r9,r7,LSL #1]
0008da  fa1ff188          UXTH     r1,r8
0008de  b2a0              UXTH     r0,r4
0008e0  f7fffffe          BL       TFT_DrawPoint
                  |L1.2276|
0008e4  f1a60601          SUB      r6,r6,#1              ;547
0008e8  f1040401          ADD      r4,r4,#1              ;547
0008ec  f1050501          ADD      r5,r5,#1              ;547
                  |L1.2288|
0008f0  2e00              CMP      r6,#0                 ;547
0008f2  dcee              BGT      |L1.2258|
0008f4  e010              B        |L1.2328|
                  |L1.2294|
;;;551            }
;;;552          }
;;;553        } else {
;;;554          for (; xsize > 0; xsize--, x++, p++) {
0008f6  e00d              B        |L1.2324|
                  |L1.2296|
;;;555            pixel = *p;
0008f8  782f              LDRB     r7,[r5,#0]
;;;556            if (pixel) {
0008fa  b12f              CBZ      r7,|L1.2312|
;;;557              TFT_DrawPoint(x+0, y, pixel);
0008fc  463a              MOV      r2,r7
0008fe  fa1ff188          UXTH     r1,r8
000902  b2a0              UXTH     r0,r4
000904  f7fffffe          BL       TFT_DrawPoint
                  |L1.2312|
000908  f1a60601          SUB      r6,r6,#1              ;554
00090c  f1040401          ADD      r4,r4,#1              ;554
000910  f1050501          ADD      r5,r5,#1              ;554
                  |L1.2324|
000914  2e00              CMP      r6,#0                 ;554
000916  dcef              BGT      |L1.2296|
                  |L1.2328|
;;;558            }
;;;559          }
;;;560        }
;;;561      }
;;;562    }
000918  e8bd87f0          POP      {r4-r10,pc}
;;;563    
                          ENDP

                  DrawBitLine16BPP PROC
;;;564    void DrawBitLine16BPP(int x, int y, U16 const*p, int xsize)
00091c  e92d41f0          PUSH     {r4-r8,lr}
;;;565    {
000920  4604              MOV      r4,r0
000922  460f              MOV      r7,r1
000924  4615              MOV      r5,r2
000926  461e              MOV      r6,r3
;;;566      LCD_PIXELINDEX Index;
;;;567    
;;;568      if ((GUI_Context.DrawMode & LCD_DRAWMODE_TRANS)==0)
000928  4854              LDR      r0,|L1.2684|
00092a  7b00              LDRB     r0,[r0,#0xc]  ; GUI_Context
00092c  f0100f02          TST      r0,#2
000930  d10e              BNE      |L1.2384|
;;;569      {
;;;570        for (;xsize > 0; xsize--,x++,p++)
000932  e00a              B        |L1.2378|
                  |L1.2356|
;;;571        {
;;;572          	TFT_DrawPoint(x, y, *p);
000934  882a              LDRH     r2,[r5,#0]
000936  b2b9              UXTH     r1,r7
000938  b2a0              UXTH     r0,r4
00093a  f7fffffe          BL       TFT_DrawPoint
00093e  f1a60601          SUB      r6,r6,#1              ;570
000942  f1040401          ADD      r4,r4,#1              ;570
000946  f1050502          ADD      r5,r5,#2              ;570
                  |L1.2378|
00094a  2e00              CMP      r6,#0                 ;570
00094c  dcf2              BGT      |L1.2356|
00094e  e012              B        |L1.2422|
                  |L1.2384|
;;;573        }
;;;574      }
;;;575      else
;;;576      {   /* Handle transparent bitmap */
;;;577        for (; xsize > 0; xsize--, x++, p++)
000950  e00f              B        |L1.2418|
                  |L1.2386|
;;;578        {
;;;579          Index = *p;
000952  f8b58000          LDRH     r8,[r5,#0]
;;;580          if (Index)
000956  f1b80f00          CMP      r8,#0
00095a  d004              BEQ      |L1.2406|
;;;581          {
;;;582            TFT_DrawPoint(x+0, y, Index);
00095c  4642              MOV      r2,r8
00095e  b2b9              UXTH     r1,r7
000960  b2a0              UXTH     r0,r4
000962  f7fffffe          BL       TFT_DrawPoint
                  |L1.2406|
000966  f1a60601          SUB      r6,r6,#1              ;577
00096a  f1040401          ADD      r4,r4,#1              ;577
00096e  f1050502          ADD      r5,r5,#2              ;577
                  |L1.2418|
000972  2e00              CMP      r6,#0                 ;577
000974  dced              BGT      |L1.2386|
                  |L1.2422|
;;;583          }
;;;584        }
;;;585      }
;;;586    }
000976  e8bd81f0          POP      {r4-r8,pc}
;;;587    
                          ENDP

                  LCD_L0_DrawBitmap PROC
;;;588    void LCD_L0_DrawBitmap   (int x0, int y0,
00097a  e92d4fff          PUSH     {r0-r11,lr}
;;;589                           int xsize, int ysize,
;;;590                           int BitsPerPixel, 
;;;591                           int BytesPerLine,
;;;592                           const U8* pData, int Diff,
;;;593                           const LCD_PIXELINDEX* pTrans)
;;;594    {
00097e  b083              SUB      sp,sp,#0xc
000980  460d              MOV      r5,r1
000982  4690              MOV      r8,r2
000984  461e              MOV      r6,r3
000986  e9ddb910          LDRD     r11,r9,[sp,#0x40]
00098a  f8dda050          LDR      r10,[sp,#0x50]
00098e  9f12              LDR      r7,[sp,#0x48]
;;;595      int i;
;;;596      switch (BitsPerPixel)
000990  f1bb0f04          CMP      r11,#4
000994  d030              BEQ      |L1.2552|
000996  dc06              BGT      |L1.2470|
000998  f1bb0f01          CMP      r11,#1
00099c  d00a              BEQ      |L1.2484|
00099e  f1bb0f02          CMP      r11,#2
0009a2  d15a              BNE      |L1.2650|
0009a4  e017              B        |L1.2518|
                  |L1.2470|
0009a6  f1bb0f08          CMP      r11,#8
0009aa  d036              BEQ      |L1.2586|
0009ac  f1bb0f10          CMP      r11,#0x10
0009b0  d153              BNE      |L1.2650|
0009b2  e043              B        |L1.2620|
                  |L1.2484|
;;;597      {
;;;598      case 1:
;;;599        for (i=0; i<ysize; i++)
0009b4  f04f0400          MOV      r4,#0
0009b8  e00a              B        |L1.2512|
                  |L1.2490|
;;;600        {
;;;601          DrawBitLine1BPP(x0, i+y0, pData, Diff, xsize, pTrans);
0009ba  1961              ADDS     r1,r4,r5
0009bc  e9cd8a00          STRD     r8,r10,[sp,#0]
0009c0  463a              MOV      r2,r7
0009c2  9b13              LDR      r3,[sp,#0x4c]
0009c4  9803              LDR      r0,[sp,#0xc]
0009c6  f7fffffe          BL       DrawBitLine1BPP
;;;602          pData += BytesPerLine;
0009ca  444f              ADD      r7,r7,r9
0009cc  f1040401          ADD      r4,r4,#1              ;599
                  |L1.2512|
0009d0  42b4              CMP      r4,r6                 ;599
0009d2  dbf2              BLT      |L1.2490|
;;;603        }
;;;604        break;
0009d4  e041              B        |L1.2650|
                  |L1.2518|
;;;605      case 2:
;;;606        for (i=0; i<ysize; i++)
0009d6  f04f0400          MOV      r4,#0
0009da  e00a              B        |L1.2546|
                  |L1.2524|
;;;607        {
;;;608          DrawBitLine2BPP(x0, i+y0, pData, Diff, xsize, pTrans);
0009dc  1961              ADDS     r1,r4,r5
0009de  e9cd8a00          STRD     r8,r10,[sp,#0]
0009e2  463a              MOV      r2,r7
0009e4  9b13              LDR      r3,[sp,#0x4c]
0009e6  9803              LDR      r0,[sp,#0xc]
0009e8  f7fffffe          BL       DrawBitLine2BPP
;;;609          pData += BytesPerLine;
0009ec  444f              ADD      r7,r7,r9
0009ee  f1040401          ADD      r4,r4,#1              ;606
                  |L1.2546|
0009f2  42b4              CMP      r4,r6                 ;606
0009f4  dbf2              BLT      |L1.2524|
;;;610        }
;;;611        break;
0009f6  e030              B        |L1.2650|
                  |L1.2552|
;;;612      case 4:
;;;613        for (i=0; i<ysize; i++)
0009f8  f04f0400          MOV      r4,#0
0009fc  e00a              B        |L1.2580|
                  |L1.2558|
;;;614        {
;;;615          DrawBitLine4BPP(x0, i+y0, pData, Diff, xsize, pTrans);
0009fe  1961              ADDS     r1,r4,r5
000a00  e9cd8a00          STRD     r8,r10,[sp,#0]
000a04  463a              MOV      r2,r7
000a06  9b13              LDR      r3,[sp,#0x4c]
000a08  9803              LDR      r0,[sp,#0xc]
000a0a  f7fffffe          BL       DrawBitLine4BPP
;;;616          pData += BytesPerLine;
000a0e  444f              ADD      r7,r7,r9
000a10  f1040401          ADD      r4,r4,#1              ;613
                  |L1.2580|
000a14  42b4              CMP      r4,r6                 ;613
000a16  dbf2              BLT      |L1.2558|
;;;617        }
;;;618        break;
000a18  e01f              B        |L1.2650|
                  |L1.2586|
;;;619      case 8:
;;;620        for (i=0; i<ysize; i++)
000a1a  f04f0400          MOV      r4,#0
000a1e  e00a              B        |L1.2614|
                  |L1.2592|
;;;621        {
;;;622          DrawBitLine8BPP(x0, i+y0, pData, xsize, pTrans);
000a20  1961              ADDS     r1,r4,r5
000a22  4643              MOV      r3,r8
000a24  463a              MOV      r2,r7
000a26  f8cda000          STR      r10,[sp,#0]
000a2a  9803              LDR      r0,[sp,#0xc]
000a2c  f7fffffe          BL       DrawBitLine8BPP
;;;623          pData += BytesPerLine;
000a30  444f              ADD      r7,r7,r9
000a32  f1040401          ADD      r4,r4,#1              ;620
                  |L1.2614|
000a36  42b4              CMP      r4,r6                 ;620
000a38  dbf2              BLT      |L1.2592|
;;;624        }
;;;625        break;
000a3a  e00e              B        |L1.2650|
                  |L1.2620|
;;;626      case 16:
;;;627        for (i=0; i<ysize; i++)
000a3c  f04f0400          MOV      r4,#0
000a40  e008              B        |L1.2644|
                  |L1.2626|
;;;628        {
;;;629          DrawBitLine16BPP(x0, i+y0, (U16*)pData, xsize);
000a42  1961              ADDS     r1,r4,r5
000a44  4643              MOV      r3,r8
000a46  463a              MOV      r2,r7
000a48  9803              LDR      r0,[sp,#0xc]
000a4a  f7fffffe          BL       DrawBitLine16BPP
;;;630          pData += BytesPerLine;
000a4e  444f              ADD      r7,r7,r9
000a50  f1040401          ADD      r4,r4,#1              ;627
                  |L1.2644|
000a54  42b4              CMP      r4,r6                 ;627
000a56  dbf4              BLT      |L1.2626|
;;;631        }
;;;632        break;
000a58  bf00              NOP      
                  |L1.2650|
000a5a  bf00              NOP                            ;604
;;;633      }
;;;634    }
000a5c  b007              ADD      sp,sp,#0x1c
000a5e  e8bd8ff0          POP      {r4-r11,pc}
;;;635    
                          ENDP

                  LCD_L0_SetOrg PROC
;;;639    */
;;;640    void LCD_L0_SetOrg(int x, int y) {
000a62  bf00              NOP      
;;;641      GUI_USE_PARA(x);
;;;642      GUI_USE_PARA(y);
000a64  bf00              NOP      
;;;643    }
000a66  4770              BX       lr
;;;644    
                          ENDP

                  LCD_L0_On PROC
;;;648    */
;;;649    void LCD_On (void) {}
000a68  4770              BX       lr
;;;650    void LCD_Off(void) {}
                          ENDP

                  LCD_L0_Off PROC
000a6a  4770              BX       lr
;;;651    
                          ENDP

                  LCD_L0_Init PROC
;;;655    */
;;;656    int LCD_L0_Init(void) 
000a6c  b510              PUSH     {r4,lr}
;;;657    {
;;;658    	LCD_init();
000a6e  f7fffffe          BL       LCD_init
;;;659    	return 0;
000a72  2000              MOVS     r0,#0
;;;660    }
000a74  bd10              POP      {r4,pc}
;;;661    
                          ENDP

                  LCD_L0_SetLUTEntry PROC
;;;665    */
;;;666    void LCD_L0_SetLUTEntry(U8 Pos, LCD_COLOR Color) {
000a76  bf00              NOP      
;;;667      GUI_USE_PARA(Pos);
;;;668      GUI_USE_PARA(Color);
000a78  bf00              NOP      
;;;669    }
000a7a  4770              BX       lr
                          ENDP

                  |L1.2684|
                          DCD      GUI_Context

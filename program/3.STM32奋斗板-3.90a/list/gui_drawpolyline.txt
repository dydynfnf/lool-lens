; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\gui_drawpolyline.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\gui_drawpolyline.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\gui_drawpolyline.crf GUI\Core\GUI_DrawPolyline.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _DrawPolyLine PROC
;;;34     */
;;;35     static void _DrawPolyLine(const GUI_POINT*pPoints, int NumPoints, int x0, int y0) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4604              MOV      r4,r0
000006  460f              MOV      r7,r1
000008  4615              MOV      r5,r2
00000a  461e              MOV      r6,r3
;;;36       GL_MoveTo(pPoints->x+x0, pPoints->y+y0);
00000c  f9b42002          LDRSH    r2,[r4,#2]
000010  eb020106          ADD      r1,r2,r6
000014  f9b42000          LDRSH    r2,[r4,#0]
000018  eb020005          ADD      r0,r2,r5
00001c  f7fffffe          BL       GL_MoveTo
;;;37       while (--NumPoints >0) {
000020  e00b              B        |L1.58|
                  |L1.34|
;;;38         pPoints++;
000022  f1040404          ADD      r4,r4,#4
;;;39         GL_DrawLineTo(pPoints->x+x0, pPoints->y+y0);
000026  f9b42002          LDRSH    r2,[r4,#2]
00002a  eb020106          ADD      r1,r2,r6
00002e  f9b42000          LDRSH    r2,[r4,#0]
000032  eb020005          ADD      r0,r2,r5
000036  f7fffffe          BL       GL_DrawLineTo
                  |L1.58|
00003a  1e78              SUBS     r0,r7,#1              ;37
00003c  1e07              SUBS     r7,r0,#0              ;37
00003e  dcf0              BGT      |L1.34|
;;;40       }
;;;41     }
000040  e8bd81f0          POP      {r4-r8,pc}
;;;42     
                          ENDP

                  GUI_DrawPolyLine PROC
;;;52     */
;;;53     void GUI_DrawPolyLine(const GUI_POINT* pPoints, int NumPoints, int x0, int y0) {
000044  e92d41f0          PUSH     {r4-r8,lr}
000048  4606              MOV      r6,r0
00004a  460f              MOV      r7,r1
00004c  4614              MOV      r4,r2
00004e  461d              MOV      r5,r3
;;;54       GUI_LOCK();
;;;55       #if (GUI_WINSUPPORT)
;;;56         WM_ADDORG(x0,y0);
000050  480b              LDR      r0,|L1.128|
000052  6c00              LDR      r0,[r0,#0x40]  ; GUI_Context
000054  4404              ADD      r4,r4,r0
000056  480a              LDR      r0,|L1.128|
000058  6c40              LDR      r0,[r0,#0x44]  ; GUI_Context
00005a  4405              ADD      r5,r5,r0
;;;57         WM_ITERATE_START(NULL); {
00005c  f04f0000          MOV      r0,#0
000060  f7fffffe          BL       WM__InitIVRSearch
000064  b150              CBZ      r0,|L1.124|
000066  bf00              NOP      
                  |L1.104|
;;;58       #endif
;;;59       _DrawPolyLine (pPoints, NumPoints, x0, y0);
000068  462b              MOV      r3,r5
00006a  4622              MOV      r2,r4
00006c  4639              MOV      r1,r7
00006e  4630              MOV      r0,r6
000070  f7fffffe          BL       _DrawPolyLine
;;;60       #if (GUI_WINSUPPORT)
;;;61         } WM_ITERATE_END();
000074  f7fffffe          BL       WM__GetNextIVR
000078  2800              CMP      r0,#0
00007a  d1f5              BNE      |L1.104|
                  |L1.124|
;;;62       #endif
;;;63       GUI_UNLOCK();
;;;64     }
00007c  e8bd81f0          POP      {r4-r8,pc}
;;;65     
                          ENDP

                  |L1.128|
                          DCD      GUI_Context

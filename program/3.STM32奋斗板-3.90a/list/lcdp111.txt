; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\lcdp111.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\lcdp111.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\lcdp111.crf GUI\ConvertColor\LCDP111.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  LCD_Color2Index_111 PROC
;;;31     */
;;;32     unsigned LCD_Color2Index_111(LCD_COLOR Color) {
000000  b510              PUSH     {r4,lr}
000002  4601              MOV      r1,r0
;;;33       int r,g,b;
;;;34       r = (Color>>(0+7))  &1;
000004  f3c114c0          UBFX     r4,r1,#7,#1
;;;35       g = (Color>>(8+7))  &1;
000008  f3c132c0          UBFX     r2,r1,#15,#1
;;;36       b = (Color>>(16+7)) &1;
00000c  f3c153c0          UBFX     r3,r1,#23,#1
;;;37       return r+(g<<1)+(b<<2);
000010  eb040042          ADD      r0,r4,r2,LSL #1
000014  eb000083          ADD      r0,r0,r3,LSL #2
;;;38     }
000018  bd10              POP      {r4,pc}
;;;39     
                          ENDP

                  LCD_Index2Color_111 PROC
;;;43     */
;;;44     LCD_COLOR LCD_Index2Color_111(int Index) {
00001a  b510              PUSH     {r4,lr}
00001c  4601              MOV      r1,r0
;;;45       U16 r,g,b;
;;;46       r = (((Index>>0)&1)*0xff);
00001e  f0010001          AND      r0,r1,#1
000022  ebc02400          RSB      r4,r0,r0,LSL #8
;;;47       g = (((Index>>1)&1)*0xff);
000026  f3c10040          UBFX     r0,r1,#1,#1
00002a  ebc02200          RSB      r2,r0,r0,LSL #8
;;;48       b =   (Index>>2)   *0xff;
00002e  ea4f00a1          ASR      r0,r1,#2
000032  ebc02000          RSB      r0,r0,r0,LSL #8
000036  b283              UXTH     r3,r0
;;;49       return r | (g<<8) | ((U32)b<<16);
000038  ea442002          ORR      r0,r4,r2,LSL #8
00003c  ea404003          ORR      r0,r0,r3,LSL #16
;;;50     }
000040  bd10              POP      {r4,pc}
;;;51     
                          ENDP

                  LCD_GetIndexMask_111 PROC
;;;55     */
;;;56     unsigned LCD_GetIndexMask_111(void) {
000042  2007              MOVS     r0,#7
;;;57       return 0x0007;
;;;58     }
000044  4770              BX       lr
;;;59     
                          ENDP

                  LCD_Color2Index_M111 PROC
;;;69     */
;;;70     unsigned LCD_Color2Index_M111(LCD_COLOR Color) {
000046  b510              PUSH     {r4,lr}
000048  4601              MOV      r1,r0
;;;71       int r,g,b;
;;;72       r = (Color>>(0+7))  &1;
00004a  f3c112c0          UBFX     r2,r1,#7,#1
;;;73       g = (Color>>(8+7))  &1;
00004e  f3c133c0          UBFX     r3,r1,#15,#1
;;;74       b = (Color>>(16+7)) &1;
000052  f3c154c0          UBFX     r4,r1,#23,#1
;;;75       return b+(g<<1)+(r<<2); 
000056  eb040043          ADD      r0,r4,r3,LSL #1
00005a  eb000082          ADD      r0,r0,r2,LSL #2
;;;76     }
00005e  bd10              POP      {r4,pc}
;;;77     
                          ENDP

                  LCD_Index2Color_M111 PROC
;;;81     */
;;;82     LCD_COLOR LCD_Index2Color_M111(int Index) {
000060  b510              PUSH     {r4,lr}
000062  4601              MOV      r1,r0
;;;83       U16 r,g,b;
;;;84       r = (((Index>>0)&1)*0xff);
000064  f0010001          AND      r0,r1,#1
000068  ebc02200          RSB      r2,r0,r0,LSL #8
;;;85       g = (((Index>>1)&1)*0xff);
00006c  f3c10040          UBFX     r0,r1,#1,#1
000070  ebc02300          RSB      r3,r0,r0,LSL #8
;;;86       b =   (Index>>2)   *0xff;
000074  ea4f00a1          ASR      r0,r1,#2
000078  ebc02000          RSB      r0,r0,r0,LSL #8
00007c  b284              UXTH     r4,r0
;;;87       return b | (g<<8) | ((U32)r<<16);
00007e  ea442003          ORR      r0,r4,r3,LSL #8
000082  ea404002          ORR      r0,r0,r2,LSL #16
;;;88     }
000086  bd10              POP      {r4,pc}
;;;89     
                          ENDP

                  LCD_GetIndexMask_M111 PROC
;;;93     */
;;;94     unsigned LCD_GetIndexMask_M111(void) {
000088  2007              MOVS     r0,#7
;;;95       return 0x0007;
;;;96     }
00008a  4770              BX       lr
;;;97     
                          ENDP


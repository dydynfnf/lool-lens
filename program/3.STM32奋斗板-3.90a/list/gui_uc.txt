; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\gui_uc.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\gui_uc.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\gui_uc.crf GUI\Core\GUI_UC.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  GUI_UC_GetCharSize PROC
;;;31     */
;;;32     int GUI_UC_GetCharSize(const char GUI_UNI_PTR * s) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
;;;33       int r;
;;;34       GUI_LOCK();
;;;35       r =  GUI_Context.pUC_API->pfGetCharSize(s);
000004  4831              LDR      r0,|L1.204|
000006  69c0              LDR      r0,[r0,#0x1c]  ; GUI_Context
000008  6841              LDR      r1,[r0,#4]
00000a  4620              MOV      r0,r4
00000c  4788              BLX      r1
00000e  4605              MOV      r5,r0
;;;36       GUI_UNLOCK();
;;;37       return r;
000010  4628              MOV      r0,r5
;;;38     }
000012  bd70              POP      {r4-r6,pc}
;;;39     
                          ENDP

                  GUI_UC_GetCharCode PROC
;;;43     */
;;;44     U16 GUI_UC_GetCharCode(const char GUI_UNI_PTR * s) {
000014  b570              PUSH     {r4-r6,lr}
000016  4604              MOV      r4,r0
;;;45       U16 r;
;;;46       GUI_LOCK();
;;;47       r =  GUI_Context.pUC_API->pfGetCharCode(s);
000018  482c              LDR      r0,|L1.204|
00001a  69c0              LDR      r0,[r0,#0x1c]  ; GUI_Context
00001c  6801              LDR      r1,[r0,#0]
00001e  4620              MOV      r0,r4
000020  4788              BLX      r1
000022  4605              MOV      r5,r0
;;;48       GUI_UNLOCK();
;;;49       return r;
000024  4628              MOV      r0,r5
;;;50     }
000026  bd70              POP      {r4-r6,pc}
;;;51     
                          ENDP

                  GUI_UC_Encode PROC
;;;55     */
;;;56     int GUI_UC_Encode(char* s, U16 Char) {
000028  b570              PUSH     {r4-r6,lr}
00002a  4604              MOV      r4,r0
00002c  460d              MOV      r5,r1
;;;57       #if GUI_COMPILER_SUPPORTS_FP
;;;58         int r;
;;;59         GUI_LOCK();
;;;60         r = GUI_Context.pUC_API->pfEncode(s, Char);
00002e  4827              LDR      r0,|L1.204|
000030  69c0              LDR      r0,[r0,#0x1c]  ; GUI_Context
000032  4629              MOV      r1,r5
000034  68c2              LDR      r2,[r0,#0xc]
000036  4620              MOV      r0,r4
000038  4790              BLX      r2
00003a  4606              MOV      r6,r0
;;;61         GUI_UNLOCK();
;;;62         return r;
00003c  4630              MOV      r0,r6
;;;63       #else
;;;64         GUI_USE_PARA(s);
;;;65         GUI_USE_PARA(Char);
;;;66         return 0;
;;;67       #endif
;;;68     }
00003e  bd70              POP      {r4-r6,pc}
;;;69     
                          ENDP

                  GUI_UC__CalcSizeOfChar PROC
;;;73     */
;;;74     int GUI_UC__CalcSizeOfChar(U16 Char) {
000040  b510              PUSH     {r4,lr}
000042  4604              MOV      r4,r0
;;;75       return GUI_Context.pUC_API->pfCalcSizeOfChar(Char);
000044  4821              LDR      r0,|L1.204|
000046  69c0              LDR      r0,[r0,#0x1c]  ; GUI_Context
000048  6881              LDR      r1,[r0,#8]
00004a  4620              MOV      r0,r4
00004c  4788              BLX      r1
;;;76     }
00004e  bd10              POP      {r4,pc}
;;;77     
                          ENDP

                  GUI_UC__GetCharCodeInc PROC
;;;81     */
;;;82     U16 GUI_UC__GetCharCodeInc(const char GUI_UNI_PTR ** ps) {
000050  b570              PUSH     {r4-r6,lr}
000052  4604              MOV      r4,r0
;;;83       const char GUI_UNI_PTR * s;
;;;84       U16 r;
;;;85       s   = *ps;
000054  6825              LDR      r5,[r4,#0]
;;;86       r   = GUI_UC__GetCharCode(s);
000056  481d              LDR      r0,|L1.204|
000058  69c0              LDR      r0,[r0,#0x1c]  ; GUI_Context
00005a  6801              LDR      r1,[r0,#0]
00005c  4628              MOV      r0,r5
00005e  4788              BLX      r1
000060  4606              MOV      r6,r0
;;;87       s  += GUI_UC__GetCharSize(s);
000062  481a              LDR      r0,|L1.204|
000064  69c0              LDR      r0,[r0,#0x1c]  ; GUI_Context
000066  6841              LDR      r1,[r0,#4]
000068  4628              MOV      r0,r5
00006a  4788              BLX      r1
00006c  4405              ADD      r5,r5,r0
;;;88       *ps = s;
00006e  6025              STR      r5,[r4,#0]
;;;89       return r;
000070  4630              MOV      r0,r6
;;;90     }
000072  bd70              POP      {r4-r6,pc}
;;;91     
                          ENDP

                  GUI_UC__NumChars2NumBytes PROC
;;;95     */
;;;96     int GUI_UC__NumChars2NumBytes(const char GUI_UNI_PTR * s, int NumChars) {
000074  e92d41f0          PUSH     {r4-r8,lr}
000078  4605              MOV      r5,r0
00007a  460e              MOV      r6,r1
;;;97       int CharSize, NumBytes = 0;
00007c  f04f0700          MOV      r7,#0
;;;98       while (NumChars--) {
000080  e007              B        |L1.146|
                  |L1.130|
;;;99         CharSize = GUI_UC__GetCharSize(s);
000082  4812              LDR      r0,|L1.204|
000084  69c0              LDR      r0,[r0,#0x1c]  ; GUI_Context
000086  6841              LDR      r1,[r0,#4]
000088  4628              MOV      r0,r5
00008a  4788              BLX      r1
00008c  4604              MOV      r4,r0
;;;100        s += CharSize;    
00008e  4425              ADD      r5,r5,r4
;;;101        NumBytes += CharSize;
000090  4427              ADD      r7,r7,r4
                  |L1.146|
000092  0030              MOVS     r0,r6                 ;98
000094  f1a60601          SUB      r6,r6,#1              ;98
000098  d1f3              BNE      |L1.130|
;;;102      }
;;;103      return NumBytes;
00009a  4638              MOV      r0,r7
;;;104    }
00009c  e8bd81f0          POP      {r4-r8,pc}
;;;105    
                          ENDP

                  GUI_UC__NumBytes2NumChars PROC
;;;109    */
;;;110    int GUI_UC__NumBytes2NumChars(const char GUI_UNI_PTR * s, int NumBytes) {
0000a0  e92d41f0          PUSH     {r4-r8,lr}
0000a4  4606              MOV      r6,r0
0000a6  460f              MOV      r7,r1
;;;111      int CharSize, Chars = 0, Bytes = 0;
0000a8  f04f0800          MOV      r8,#0
0000ac  4645              MOV      r5,r8
;;;112      while (NumBytes > Bytes) {
0000ae  e008              B        |L1.194|
                  |L1.176|
;;;113        CharSize = GUI_UC__GetCharSize(s + Bytes);
0000b0  1970              ADDS     r0,r6,r5
0000b2  4a06              LDR      r2,|L1.204|
0000b4  69d2              LDR      r2,[r2,#0x1c]  ; GUI_Context
0000b6  6851              LDR      r1,[r2,#4]
0000b8  4788              BLX      r1
0000ba  4604              MOV      r4,r0
;;;114        Bytes += CharSize;
0000bc  4425              ADD      r5,r5,r4
;;;115        Chars++;
0000be  f1080801          ADD      r8,r8,#1
                  |L1.194|
0000c2  42af              CMP      r7,r5                 ;112
0000c4  dcf4              BGT      |L1.176|
;;;116      }
;;;117      return Chars;
0000c6  4640              MOV      r0,r8
;;;118    }
0000c8  e8bd81f0          POP      {r4-r8,pc}
;;;119    
                          ENDP

                  |L1.204|
                          DCD      GUI_Context

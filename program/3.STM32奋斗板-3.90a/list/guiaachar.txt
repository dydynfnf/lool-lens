; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\guiaachar.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\guiaachar.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\guiaachar.crf GUI\AntiAlias\GUIAAChar.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  Draw PROC
;;;55     */
;;;56     static void Draw(int x0, int y0, int XSize, int YSize, int BytesPerLine, const U8*pData) {
000000  e92d4fff          PUSH     {r0-r11,lr}
000004  b083              SUB      sp,sp,#0xc
000006  4606              MOV      r6,r0
000008  460f              MOV      r7,r1
00000a  f8dda044          LDR      r10,[sp,#0x44]
;;;57         int x, y;
;;;58         tSetPixelAA* pfSetPixelAA;
;;;59         pfSetPixelAA = (GUI_Context.TextMode & GUI_TM_TRANS)
00000e  487d              LDR      r0,|L1.516|
000010  8d40              LDRH     r0,[r0,#0x2a]  ; GUI_Context
000012  f0100f02          TST      r0,#2
000016  d001              BEQ      |L1.28|
;;;60                      ? LCD_SetPixelAA : LCD_SetPixelAA_NoTrans;
000018  487b              LDR      r0,|L1.520|
00001a  e000              B        |L1.30|
                  |L1.28|
00001c  487b              LDR      r0,|L1.524|
                  |L1.30|
00001e  4683              MOV      r11,r0
;;;61     	  for (y=0; y<YSize; y++) {
000020  f04f0500          MOV      r5,#0
000024  e067              B        |L1.246|
                  |L1.38|
;;;62       	  const U8* pData0 = pData;
000026  46d1              MOV      r9,r10
;;;63     	    const U8* pData1 = pData+BytesPerLine;
000028  9810              LDR      r0,[sp,#0x40]
00002a  4450              ADD      r0,r0,r10
00002c  9002              STR      r0,[sp,#8]
;;;64       	  for (x=0; x<XSize; x++) {
00002e  f04f0400          MOV      r4,#0
000032  e056              B        |L1.226|
                  |L1.52|
;;;65             int PixelCnt=0;
000034  f04f0800          MOV      r8,#0
;;;66             int Mask0 = Bit2Mask0[x&3];
000038  f0040003          AND      r0,r4,#3
00003c  4974              LDR      r1,|L1.528|
00003e  5c08              LDRB     r0,[r1,r0]
000040  9001              STR      r0,[sp,#4]
;;;67             int Mask1 = Bit2Mask1[x&3];
000042  f0040003          AND      r0,r4,#3
000046  4973              LDR      r1,|L1.532|
000048  5c08              LDRB     r0,[r1,r0]
00004a  9000              STR      r0,[sp,#0]
;;;68     			  if ((*pData0) & Mask0)
00004c  f8990000          LDRB     r0,[r9,#0]
000050  9901              LDR      r1,[sp,#4]
000052  4208              TST      r0,r1
000054  d001              BEQ      |L1.90|
;;;69     			    PixelCnt++;
000056  f1080801          ADD      r8,r8,#1
                  |L1.90|
;;;70     			  if ((*pData0) & Mask1)
00005a  f8990000          LDRB     r0,[r9,#0]
00005e  9900              LDR      r1,[sp,#0]
000060  4208              TST      r0,r1
000062  d001              BEQ      |L1.104|
;;;71     			    PixelCnt++;
000064  f1080801          ADD      r8,r8,#1
                  |L1.104|
;;;72     			  if ((*pData1) & Mask0)
000068  9802              LDR      r0,[sp,#8]
00006a  7800              LDRB     r0,[r0,#0]
00006c  9901              LDR      r1,[sp,#4]
00006e  4208              TST      r0,r1
000070  d001              BEQ      |L1.118|
;;;73     			    PixelCnt++;
000072  f1080801          ADD      r8,r8,#1
                  |L1.118|
;;;74     			  if ((*pData1) & Mask1)
000076  9802              LDR      r0,[sp,#8]
000078  7800              LDRB     r0,[r0,#0]
00007a  9900              LDR      r1,[sp,#0]
00007c  4208              TST      r0,r1
00007e  d001              BEQ      |L1.132|
;;;75     			    PixelCnt++;
000080  f1080801          ADD      r8,r8,#1
                  |L1.132|
;;;76             if ((x&3) ==3) {
000084  f0040003          AND      r0,r4,#3
000088  2803              CMP      r0,#3
00008a  d105              BNE      |L1.152|
;;;77               pData0++;
00008c  f1090901          ADD      r9,r9,#1
;;;78               pData1++;
000090  9802              LDR      r0,[sp,#8]
000092  f1000001          ADD      r0,r0,#1
000096  9002              STR      r0,[sp,#8]
                  |L1.152|
;;;79     			  }
;;;80             switch (PixelCnt) {
000098  f1b80f01          CMP      r8,#1
00009c  d019              BEQ      |L1.210|
00009e  f1b80f02          CMP      r8,#2
0000a2  d011              BEQ      |L1.200|
0000a4  f1b80f03          CMP      r8,#3
0000a8  d009              BEQ      |L1.190|
0000aa  f1b80f04          CMP      r8,#4
0000ae  d115              BNE      |L1.220|
;;;81             case 4: LCD_HL_DrawPixel(x0+x,y0+y);      break;
0000b0  1979              ADDS     r1,r7,r5
0000b2  1930              ADDS     r0,r6,r4
0000b4  4b53              LDR      r3,|L1.516|
0000b6  6d9b              LDR      r3,[r3,#0x58]  ; GUI_Context
0000b8  685a              LDR      r2,[r3,#4]
0000ba  4790              BLX      r2
0000bc  e00e              B        |L1.220|
                  |L1.190|
;;;82             case 3: (*pfSetPixelAA) (x0+x,y0+y, 12); break;
0000be  1979              ADDS     r1,r7,r5
0000c0  1930              ADDS     r0,r6,r4
0000c2  220c              MOVS     r2,#0xc
0000c4  47d8              BLX      r11
0000c6  e009              B        |L1.220|
                  |L1.200|
;;;83             case 2: (*pfSetPixelAA) (x0+x,y0+y, 8);  break;
0000c8  1979              ADDS     r1,r7,r5
0000ca  1930              ADDS     r0,r6,r4
0000cc  2208              MOVS     r2,#8
0000ce  47d8              BLX      r11
0000d0  e004              B        |L1.220|
                  |L1.210|
;;;84             case 1: (*pfSetPixelAA) (x0+x,y0+y, 4);  break;
0000d2  1979              ADDS     r1,r7,r5
0000d4  1930              ADDS     r0,r6,r4
0000d6  2204              MOVS     r2,#4
0000d8  47d8              BLX      r11
0000da  bf00              NOP      
                  |L1.220|
0000dc  bf00              NOP                            ;81
0000de  f1040401          ADD      r4,r4,#1              ;64
                  |L1.226|
0000e2  9805              LDR      r0,[sp,#0x14]         ;64
0000e4  4284              CMP      r4,r0                 ;64
0000e6  dba5              BLT      |L1.52|
;;;85     			  }
;;;86       	  }
;;;87           pData+=2*BytesPerLine;
0000e8  f04f0102          MOV      r1,#2
0000ec  9810              LDR      r0,[sp,#0x40]
0000ee  fb01aa00          MLA      r10,r1,r0,r10
0000f2  f1050501          ADD      r5,r5,#1              ;61
                  |L1.246|
0000f6  9806              LDR      r0,[sp,#0x18]         ;61
0000f8  4285              CMP      r5,r0                 ;61
0000fa  db94              BLT      |L1.38|
;;;88     	  }
;;;89     }
0000fc  b007              ADD      sp,sp,#0x1c
0000fe  e8bd8ff0          POP      {r4-r11,pc}
;;;90     
                          ENDP

                  GUIPROP_FindChar PROC
;;;94     */
;;;95     static const GUI_FONT_PROP* GUIPROP_FindChar(const GUI_FONT_PROP* pProp, U16P c) {
000102  4a40              LDR      r2,|L1.516|
;;;96       for (pProp = GUI_Context.pAFont->p.pProp; pProp; pProp=(const GUI_FONT_PROP*) pProp->pNext) {
000104  6992              LDR      r2,[r2,#0x18]  ; GUI_Context
000106  6990              LDR      r0,[r2,#0x18]
000108  e007              B        |L1.282|
                  |L1.266|
;;;97         if ((c>=pProp->First) && (c<=pProp->Last))
00010a  8802              LDRH     r2,[r0,#0]
00010c  428a              CMP      r2,r1
00010e  dc03              BGT      |L1.280|
000110  8842              LDRH     r2,[r0,#2]
000112  428a              CMP      r2,r1
000114  db00              BLT      |L1.280|
;;;98           break;
000116  e002              B        |L1.286|
                  |L1.280|
000118  6880              LDR      r0,[r0,#8]            ;96
                  |L1.282|
00011a  2800              CMP      r0,#0                 ;96
00011c  d1f5              BNE      |L1.266|
                  |L1.286|
00011e  bf00              NOP      
;;;99       }
;;;100      return pProp;
;;;101    }
000120  4770              BX       lr
;;;102    
                          ENDP

                  GUIPROPAA_DispChar PROC
;;;112    */
;;;113    void GUIPROPAA_DispChar(U16P c) {
000122  e92d47fc          PUSH     {r2-r10,lr}
000126  4605              MOV      r5,r0
;;;114      int BytesPerLine;
;;;115      GUI_DRAWMODE DrawMode = GUI_Context.TextMode;
000128  4836              LDR      r0,|L1.516|
00012a  f9b0802a          LDRSH    r8,[r0,#0x2a]  ; GUI_Context
;;;116      const GUI_FONT_PROP* pProp = GUIPROP_FindChar(GUI_Context.pAFont->p.pProp, c);
00012e  4601              MOV      r1,r0
000130  6989              LDR      r1,[r1,#0x18]  ; GUI_Context
000132  6988              LDR      r0,[r1,#0x18]
000134  4629              MOV      r1,r5
000136  f7fffffe          BL       GUIPROP_FindChar
00013a  4606              MOV      r6,r0
;;;117      if (pProp) {
00013c  b396              CBZ      r6,|L1.420|
;;;118        GUI_DRAWMODE OldDrawMode;
;;;119        const GUI_CHARINFO* pCharInfo = pProp->paCharInfo+(c-pProp->First);
00013e  8831              LDRH     r1,[r6,#0]
000140  eba50101          SUB      r1,r5,r1
000144  6870              LDR      r0,[r6,#4]
000146  eb0004c1          ADD      r4,r0,r1,LSL #3
;;;120        BytesPerLine = pCharInfo->BytesPerLine;
00014a  78a7              LDRB     r7,[r4,#2]
;;;121        OldDrawMode  = LCD_SetDrawMode(DrawMode);
00014c  4640              MOV      r0,r8
00014e  f7fffffe          BL       LCD_SetDrawMode
000152  4682              MOV      r10,r0
;;;122        Draw  ( GUI_Context.DispPosX, GUI_Context.DispPosY,
000154  7820              LDRB     r0,[r4,#0]
000156  f1000901          ADD      r9,r0,#1
00015a  6860              LDR      r0,[r4,#4]
00015c  f8dfc0a4          LDR      r12,|L1.516|
000160  e9cd7000          STRD     r7,r0,[sp,#0]
000164  f8dcc018          LDR      r12,[r12,#0x18]  ; GUI_Context
000168  f89c3014          LDRB     r3,[r12,#0x14]
00016c  eb097cd9          ADD      r12,r9,r9,LSR #31
000170  ea4f026c          ASR      r2,r12,#1
000174  f8dfc08c          LDR      r12,|L1.516|
000178  f9bc1024          LDRSH    r1,[r12,#0x24]  ; GUI_Context
00017c  f9bc0022          LDRSH    r0,[r12,#0x22]  ; GUI_Context
000180  f7fffffe          BL       Draw
;;;123                           (pCharInfo->XSize+1)/2,
;;;124                           GUI_Context.pAFont->YSize,
;;;125                           BytesPerLine,
;;;126                           (U8 const*) pCharInfo->pData
;;;127                           );
;;;128        LCD_SetDrawMode(OldDrawMode); /* Restore draw mode */
000184  4650              MOV      r0,r10
000186  f7fffffe          BL       LCD_SetDrawMode
;;;129        GUI_Context.DispPosX += (pCharInfo->XDist+1)/2;
00018a  7861              LDRB     r1,[r4,#1]
00018c  f1010001          ADD      r0,r1,#1
000190  eb0071d0          ADD      r1,r0,r0,LSR #31
000194  4a1b              LDR      r2,|L1.516|
000196  8c52              LDRH     r2,[r2,#0x22]  ; GUI_Context
000198  eb020161          ADD      r1,r2,r1,ASR #1
00019c  b209              SXTH     r1,r1
00019e  4a19              LDR      r2,|L1.516|
0001a0  8451              STRH     r1,[r2,#0x22]
;;;130      }
0001a2  bf00              NOP      
                  |L1.420|
;;;131    }
0001a4  e8bd87fc          POP      {r2-r10,pc}
;;;132    
                          ENDP

                  GUIPROPAA_GetCharDistX PROC
;;;136    */
;;;137    int GUIPROPAA_GetCharDistX(U16P c) {
0001a8  b570              PUSH     {r4-r6,lr}
0001aa  4604              MOV      r4,r0
;;;138      int r;
;;;139      const GUI_FONT_PROP* pProp = GUIPROP_FindChar(GUI_Context.pAFont->p.pProp, c);
0001ac  4915              LDR      r1,|L1.516|
0001ae  6989              LDR      r1,[r1,#0x18]  ; GUI_Context
0001b0  6988              LDR      r0,[r1,#0x18]
0001b2  4621              MOV      r1,r4
0001b4  f7fffffe          BL       GUIPROP_FindChar
0001b8  4605              MOV      r5,r0
;;;140      r = (pProp) ? (pProp->paCharInfo+(c-pProp->First))->XSize : 0;
0001ba  b135              CBZ      r5,|L1.458|
0001bc  8829              LDRH     r1,[r5,#0]
0001be  eba40101          SUB      r1,r4,r1
0001c2  6868              LDR      r0,[r5,#4]
0001c4  f8100031          LDRB     r0,[r0,r1,LSL #3]
0001c8  e001              B        |L1.462|
                  |L1.458|
0001ca  f04f0000          MOV      r0,#0
                  |L1.462|
0001ce  4606              MOV      r6,r0
;;;141      return (r+1)/2;
0001d0  f1060101          ADD      r1,r6,#1
0001d4  eb0170d1          ADD      r0,r1,r1,LSR #31
0001d8  ea4f0060          ASR      r0,r0,#1
;;;142    }
0001dc  bd70              POP      {r4-r6,pc}
;;;143    
                          ENDP

                  GUIPROPAA_GetFontInfo PROC
;;;147    */
;;;148    void GUIPROPAA_GetFontInfo(const GUI_FONT * pFont, GUI_FONTINFO* pfi) {
0001de  bf00              NOP      
;;;149      GUI_USE_PARA(pFont);
;;;150      pfi->Flags = GUI_FONTINFO_FLAG_PROP | GUI_FONTINFO_FLAG_AA;
0001e0  f04f0205          MOV      r2,#5
0001e4  800a              STRH     r2,[r1,#0]
;;;151    }
0001e6  4770              BX       lr
;;;152    
                          ENDP

                  GUIPROPAA_IsInFont PROC
;;;156    */
;;;157    char GUIPROPAA_IsInFont(const GUI_FONT * pFont, U16 c) {
0001e8  b570              PUSH     {r4-r6,lr}
0001ea  4604              MOV      r4,r0
0001ec  460d              MOV      r5,r1
;;;158      const GUI_FONT_PROP* pProp = GUIPROP_FindChar(pFont->p.pProp, c);
0001ee  4629              MOV      r1,r5
0001f0  69a0              LDR      r0,[r4,#0x18]
0001f2  f7fffffe          BL       GUIPROP_FindChar
0001f6  4606              MOV      r6,r0
;;;159      return (pProp==NULL) ? 0 : 1;
0001f8  b10e              CBZ      r6,|L1.510|
0001fa  2001              MOVS     r0,#1
                  |L1.508|
;;;160    }
0001fc  bd70              POP      {r4-r6,pc}
                  |L1.510|
0001fe  2000              MOVS     r0,#0                 ;159
000200  e7fc              B        |L1.508|
;;;161    
                          ENDP

000202  0000              DCW      0x0000
                  |L1.516|
                          DCD      GUI_Context
                  |L1.520|
                          DCD      LCD_SetPixelAA
                  |L1.524|
                          DCD      LCD_SetPixelAA_NoTrans
                  |L1.528|
                          DCD      Bit2Mask0
                  |L1.532|
                          DCD      Bit2Mask1

                          AREA ||.constdata||, DATA, READONLY, ALIGN=0

                  Bit2Mask0
000000  80200802          DCB      0x80,0x20,0x08,0x02
                  Bit2Mask1
000004  40100401          DCB      0x40,0x10,0x04,0x01

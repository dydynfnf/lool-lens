; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\progbar.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\progbar.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\progbar.crf GUI\Widget\PROGBAR.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _FreeText PROC
;;;122    */
;;;123    static void _FreeText(PROGBAR_Handle hObj) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
;;;124      PROGBAR_Obj* pObj = PROGBAR_H2P(hObj);
000004  4620              MOV      r0,r4
000006  f7fffffe          BL       GUI_ALLOC_h2p
00000a  4605              MOV      r5,r0
;;;125      GUI_ALLOC_FreePtr(&pObj->hpText);
00000c  f1050040          ADD      r0,r5,#0x40
000010  f7fffffe          BL       GUI_ALLOC_FreePtr
;;;126    }
000014  bd70              POP      {r4-r6,pc}
;;;127    
                          ENDP

                  _Value2X PROC
;;;131    */
;;;132    static int _Value2X(const PROGBAR_Obj* pObj, int v) {
000016  b5f0              PUSH     {r4-r7,lr}
000018  4602              MOV      r2,r0
;;;133      int EffectSize = pObj->Widget.pEffect->EffectSize;
00001a  6a10              LDR      r0,[r2,#0x20]
00001c  6945              LDR      r5,[r0,#0x14]
;;;134      int xSize = pObj->Widget.Win.Rect.x1 - pObj->Widget.Win.Rect.x0 + 1;
00001e  f9b20004          LDRSH    r0,[r2,#4]
000022  f9b27000          LDRSH    r7,[r2,#0]
000026  eba00007          SUB      r0,r0,r7
00002a  f1000601          ADD      r6,r0,#1
;;;135      int Min   = pObj->Min;
00002e  6c93              LDR      r3,[r2,#0x48]
;;;136      int Max   = pObj->Max;
000030  6cd4              LDR      r4,[r2,#0x4c]
;;;137      if (v < Min) {
000032  4299              CMP      r1,r3
000034  da00              BGE      |L1.56|
;;;138    	  v = Min;
000036  4619              MOV      r1,r3
                  |L1.56|
;;;139      }
;;;140      if (v > Max) {
000038  42a1              CMP      r1,r4
00003a  dd00              BLE      |L1.62|
;;;141    	  v = Max;
00003c  4621              MOV      r1,r4
                  |L1.62|
;;;142      }
;;;143      return EffectSize + ((xSize - 2 * EffectSize) * (I32)(v - Min)) / (Max - Min);
00003e  2002              MOVS     r0,#2
000040  fb006015          MLS      r0,r0,r5,r6
000044  1acf              SUBS     r7,r1,r3
000046  4378              MULS     r0,r7,r0
000048  1ae7              SUBS     r7,r4,r3
00004a  fb90f0f7          SDIV     r0,r0,r7
00004e  4428              ADD      r0,r0,r5
;;;144    }
000050  bdf0              POP      {r4-r7,pc}
;;;145    
                          ENDP

                  _DrawPart PROC
;;;149    */
;;;150    static void _DrawPart(const PROGBAR_Obj* pObj, int Index,
000052  e92d41f0          PUSH     {r4-r8,lr}
;;;151    										  int xText, int yText, const char* pText) {
000056  4604              MOV      r4,r0
000058  460d              MOV      r5,r1
00005a  4616              MOV      r6,r2
00005c  461f              MOV      r7,r3
00005e  f8dd8018          LDR      r8,[sp,#0x18]
;;;152      LCD_SetBkColor(pObj->BarColor[Index]);
000062  f1040130          ADD      r1,r4,#0x30
000066  f8510025          LDR      r0,[r1,r5,LSL #2]
00006a  f7fffffe          BL       LCD_SetBkColor
;;;153      LCD_SetColor(pObj->TextColor[Index]);
00006e  f1040138          ADD      r1,r4,#0x38
000072  f8510025          LDR      r0,[r1,r5,LSL #2]
000076  f7fffffe          BL       LCD_SetColor
;;;154      GUI_Clear();
00007a  f7fffffe          BL       GUI_Clear
;;;155      GUI_GotoXY(xText, yText);
00007e  4639              MOV      r1,r7
000080  4630              MOV      r0,r6
000082  f7fffffe          BL       GUI_GotoXY
;;;156      GUI_DispString(pText);
000086  4640              MOV      r0,r8
000088  f7fffffe          BL       GUI_DispString
;;;157    }
00008c  e8bd81f0          POP      {r4-r8,pc}
;;;158    
                          ENDP

                  _GetText PROC
;;;162    */
;;;163    static const char* _GetText(const PROGBAR_Obj* pObj, char* pBuffer) {
000090  b573              PUSH     {r0,r1,r4-r6,lr}
000092  4604              MOV      r4,r0
;;;164      char* pText;
;;;165      if (pObj->hpText) {
000094  f8b40040          LDRH     r0,[r4,#0x40]
000098  b128              CBZ      r0,|L1.166|
;;;166        pText = (char*) GUI_ALLOC_h2p(pObj->hpText);
00009a  f9b40040          LDRSH    r0,[r4,#0x40]
00009e  f7fffffe          BL       GUI_ALLOC_h2p
0000a2  4605              MOV      r5,r0
0000a4  e01a              B        |L1.220|
                  |L1.166|
;;;167      } else {
;;;168        pText = pBuffer;
0000a6  9d01              LDR      r5,[sp,#4]
;;;169        GUI_AddDecMin((100 * (I32)(pObj->v - pObj->Min)) / (pObj->Max - pObj->Min), &pBuffer);
0000a8  6ca1              LDR      r1,[r4,#0x48]
0000aa  6aa0              LDR      r0,[r4,#0x28]
0000ac  1a40              SUBS     r0,r0,r1
0000ae  2164              MOVS     r1,#0x64
0000b0  4348              MULS     r0,r1,r0
0000b2  e9d42112          LDRD     r2,r1,[r4,#0x48]
0000b6  1a89              SUBS     r1,r1,r2
0000b8  fb90f6f1          SDIV     r6,r0,r1
0000bc  a901              ADD      r1,sp,#4
0000be  4630              MOV      r0,r6
0000c0  f7fffffe          BL       GUI_AddDecMin
;;;170        *pBuffer++ = '%';
0000c4  f04f0025          MOV      r0,#0x25
0000c8  9901              LDR      r1,[sp,#4]
0000ca  7008              STRB     r0,[r1,#0]
0000cc  9801              LDR      r0,[sp,#4]
0000ce  f1000001          ADD      r0,r0,#1
0000d2  9001              STR      r0,[sp,#4]
;;;171    		*pBuffer   = 0;
0000d4  f04f0000          MOV      r0,#0
0000d8  9901              LDR      r1,[sp,#4]
0000da  7008              STRB     r0,[r1,#0]
                  |L1.220|
;;;172    	}
;;;173      return (const char*)pText;
0000dc  4628              MOV      r0,r5
;;;174    }
0000de  bd7c              POP      {r2-r6,pc}
;;;175    
                          ENDP

                  _GetTextRect PROC
;;;179    */
;;;180    static void _GetTextRect(const PROGBAR_Obj* pObj, GUI_RECT* pRect, const char* pText) {
0000e0  e92d5ff0          PUSH     {r4-r12,lr}
0000e4  4605              MOV      r5,r0
0000e6  460c              MOV      r4,r1
0000e8  4617              MOV      r7,r2
;;;181      int xSize      = pObj->Widget.Win.Rect.x1 - pObj->Widget.Win.Rect.x0 + 1;
0000ea  f9b50004          LDRSH    r0,[r5,#4]
0000ee  f9b51000          LDRSH    r1,[r5,#0]
0000f2  eba00001          SUB      r0,r0,r1
0000f6  f1000801          ADD      r8,r0,#1
;;;182      int ySize      = pObj->Widget.Win.Rect.y1 - pObj->Widget.Win.Rect.y0 + 1;
0000fa  f9b50006          LDRSH    r0,[r5,#6]
0000fe  f9b51002          LDRSH    r1,[r5,#2]
000102  eba00001          SUB      r0,r0,r1
000106  f1000b01          ADD      r11,r0,#1
;;;183      int TextWidth  = GUI_GetStringDistX(pText);
00010a  4638              MOV      r0,r7
00010c  f7fffffe          BL       GUI_GetStringDistX
000110  4606              MOV      r6,r0
;;;184      int TextHeight = GUI_GetFontSizeY();
000112  f7fffffe          BL       GUI_GetFontSizeY
000116  4681              MOV      r9,r0
;;;185      int EffectSize = pObj->Widget.pEffect->EffectSize;
000118  6a28              LDR      r0,[r5,#0x20]
00011a  f8d0a014          LDR      r10,[r0,#0x14]
;;;186      switch (pObj->TextAlign & GUI_TA_HORIZONTAL) {
00011e  f8b50046          LDRH     r0,[r5,#0x46]
000122  f0000003          AND      r0,r0,#3
000126  2801              CMP      r0,#1
000128  d00a              BEQ      |L1.320|
00012a  2802              CMP      r0,#2
00012c  d111              BNE      |L1.338|
;;;187      case GUI_TA_CENTER:
;;;188        pRect->x0 = (xSize - TextWidth) / 2;
00012e  eba80006          SUB      r0,r8,r6
000132  eb0071d0          ADD      r1,r0,r0,LSR #31
000136  ea4f0161          ASR      r1,r1,#1
00013a  b209              SXTH     r1,r1
00013c  8021              STRH     r1,[r4,#0]
;;;189    		break;
00013e  e00c              B        |L1.346|
                  |L1.320|
;;;190      case GUI_TA_RIGHT:
;;;191        pRect->x0 = xSize - TextWidth - 1 - EffectSize;
000140  eba80006          SUB      r0,r8,r6
000144  f1a00001          SUB      r0,r0,#1
000148  eba0000a          SUB      r0,r0,r10
00014c  b200              SXTH     r0,r0
00014e  8020              STRH     r0,[r4,#0]
;;;192    		break;
000150  e003              B        |L1.346|
                  |L1.338|
;;;193      default:
;;;194        pRect->x0 = EffectSize;
000152  fa0ff08a          SXTH     r0,r10
000156  8020              STRH     r0,[r4,#0]
000158  bf00              NOP                            ;186
                  |L1.346|
00015a  bf00              NOP                            ;189
;;;195    	}
;;;196      pRect->y0  = (ySize - TextHeight) / 2;
00015c  ebab0009          SUB      r0,r11,r9
000160  eb0071d0          ADD      r1,r0,r0,LSR #31
000164  ea4f0161          ASR      r1,r1,#1
000168  b209              SXTH     r1,r1
00016a  8061              STRH     r1,[r4,#2]
;;;197      pRect->x0 += pObj->XOff;
00016c  8820              LDRH     r0,[r4,#0]
00016e  f8b51042          LDRH     r1,[r5,#0x42]
000172  4408              ADD      r0,r0,r1
000174  b200              SXTH     r0,r0
000176  8020              STRH     r0,[r4,#0]
;;;198      pRect->y0 += pObj->YOff;
000178  8860              LDRH     r0,[r4,#2]
00017a  f8b51044          LDRH     r1,[r5,#0x44]
00017e  4408              ADD      r0,r0,r1
000180  b200              SXTH     r0,r0
000182  8060              STRH     r0,[r4,#2]
;;;199      pRect->x1  = pRect->x0 + TextWidth  - 1;
000184  8820              LDRH     r0,[r4,#0]
000186  4430              ADD      r0,r0,r6
000188  f1a00001          SUB      r0,r0,#1
00018c  b200              SXTH     r0,r0
00018e  80a0              STRH     r0,[r4,#4]
;;;200      pRect->y1  = pRect->y0 + TextHeight - 1;
000190  8860              LDRH     r0,[r4,#2]
000192  4448              ADD      r0,r0,r9
000194  f1a00001          SUB      r0,r0,#1
000198  b200              SXTH     r0,r0
00019a  80e0              STRH     r0,[r4,#6]
;;;201    }
00019c  e8bd9ff0          POP      {r4-r12,pc}
;;;202    
                          ENDP

                  _Paint PROC
;;;206    */
;;;207    static void _Paint(PROGBAR_Handle hObj) {
0001a0  e92d41f0          PUSH     {r4-r8,lr}
0001a4  b08c              SUB      sp,sp,#0x30
0001a6  4607              MOV      r7,r0
;;;208      PROGBAR_Obj* pObj;
;;;209      GUI_RECT r, rInside, rClient, rText;
;;;210      const char* pText;
;;;211      char ac[5];
;;;212      int tm, xPos;
;;;213      pObj = PROGBAR_H2P(hObj);
0001a8  4638              MOV      r0,r7
0001aa  f7fffffe          BL       GUI_ALLOC_h2p
0001ae  4604              MOV      r4,r0
;;;214      WM_GetClientRect(&rClient);
0001b0  a806              ADD      r0,sp,#0x18
0001b2  f7fffffe          BL       WM_GetClientRect
;;;215      GUI__ReduceRect(&rInside, &rClient, pObj->Widget.pEffect->EffectSize);
0001b6  6a20              LDR      r0,[r4,#0x20]
0001b8  a906              ADD      r1,sp,#0x18
0001ba  6942              LDR      r2,[r0,#0x14]
0001bc  a808              ADD      r0,sp,#0x20
0001be  f7fffffe          BL       GUI__ReduceRect
;;;216      xPos  = _Value2X(pObj, pObj->v);
0001c2  4620              MOV      r0,r4
0001c4  6aa1              LDR      r1,[r4,#0x28]
0001c6  f7fffffe          BL       _Value2X
0001ca  4606              MOV      r6,r0
;;;217      pText = _GetText(pObj, ac);
0001cc  a902              ADD      r1,sp,#8
0001ce  4620              MOV      r0,r4
0001d0  f7fffffe          BL       _GetText
0001d4  4605              MOV      r5,r0
;;;218      GUI_SetFont(pObj->pFont);
0001d6  6ae0              LDR      r0,[r4,#0x2c]
0001d8  f7fffffe          BL       GUI_SetFont
;;;219      _GetTextRect(pObj, &rText, pText);
0001dc  462a              MOV      r2,r5
0001de  a904              ADD      r1,sp,#0x10
0001e0  4620              MOV      r0,r4
0001e2  f7fffffe          BL       _GetTextRect
;;;220      tm = GUI_SetTextMode(GUI_TM_TRANS);
0001e6  2002              MOVS     r0,#2
0001e8  f7fffffe          BL       GUI_SetTextMode
0001ec  4680              MOV      r8,r0
;;;221      /* Draw left bar */
;;;222      r    = rInside;
0001ee  e9dd0108          LDRD     r0,r1,[sp,#0x20]
0001f2  e9cd010a          STRD     r0,r1,[sp,#0x28]
;;;223      r.x1 = xPos - 1;
0001f6  f1a60001          SUB      r0,r6,#1
0001fa  b200              SXTH     r0,r0
0001fc  f8ad002c          STRH     r0,[sp,#0x2c]
;;;224      WM_SetUserClipArea(&r);
000200  a80a              ADD      r0,sp,#0x28
000202  f7fffffe          BL       WM_SetUserClipRect
;;;225      _DrawPart(pObj, 0, rText.x0, rText.y0, pText);
000206  9500              STR      r5,[sp,#0]
000208  f9bd3012          LDRSH    r3,[sp,#0x12]
00020c  f9bd2010          LDRSH    r2,[sp,#0x10]
000210  2100              MOVS     r1,#0
000212  4620              MOV      r0,r4
000214  f7fffffe          BL       _DrawPart
;;;226      /* Draw right bar */
;;;227      r    = rInside;
000218  e9dd0108          LDRD     r0,r1,[sp,#0x20]
00021c  e9cd010a          STRD     r0,r1,[sp,#0x28]
;;;228      r.x0 = xPos;
000220  b230              SXTH     r0,r6
000222  f8ad0028          STRH     r0,[sp,#0x28]
;;;229      WM_SetUserClipArea(&r);
000226  a80a              ADD      r0,sp,#0x28
000228  f7fffffe          BL       WM_SetUserClipRect
;;;230      _DrawPart(pObj, 1, rText.x0, rText.y0, pText);
00022c  9500              STR      r5,[sp,#0]
00022e  f9bd3012          LDRSH    r3,[sp,#0x12]
000232  f9bd2010          LDRSH    r2,[sp,#0x10]
000236  2101              MOVS     r1,#1
000238  4620              MOV      r0,r4
00023a  f7fffffe          BL       _DrawPart
;;;231      WM_SetUserClipArea(NULL);
00023e  2000              MOVS     r0,#0
000240  f7fffffe          BL       WM_SetUserClipRect
;;;232      GUI_SetTextMode(tm);
000244  4640              MOV      r0,r8
000246  f7fffffe          BL       GUI_SetTextMode
;;;233      WIDGET__EFFECT_DrawDownRect(&pObj->Widget, &rClient);
00024a  a906              ADD      r1,sp,#0x18
00024c  4620              MOV      r0,r4
00024e  f7fffffe          BL       WIDGET__EFFECT_DrawDownRect
;;;234    }
000252  b00c              ADD      sp,sp,#0x30
000254  e8bd81f0          POP      {r4-r8,pc}
;;;235    
                          ENDP

                  _Delete PROC
;;;239    */
;;;240    static void _Delete(PROGBAR_Handle hObj) {
000258  b510              PUSH     {r4,lr}
00025a  4604              MOV      r4,r0
;;;241      _FreeText(hObj);
00025c  4620              MOV      r0,r4
00025e  f7fffffe          BL       _FreeText
;;;242      DEINIT_ID(PROGBAR_H2P(hObj));
;;;243    }
000262  bd10              POP      {r4,pc}
;;;244    
                          ENDP

                  _PROGBAR_Callback PROC
;;;248    */
;;;249    static void _PROGBAR_Callback(WM_MESSAGE*pMsg) {
000264  b570              PUSH     {r4-r6,lr}
000266  4604              MOV      r4,r0
;;;250      PROGBAR_Handle hObj = (PROGBAR_Handle)pMsg->hWin;
000268  f9b45004          LDRSH    r5,[r4,#4]
;;;251      /* Let widget handle the standard messages */
;;;252      if (WIDGET_HandleActive(hObj, pMsg) == 0) {
00026c  4621              MOV      r1,r4
00026e  4628              MOV      r0,r5
000270  f7fffffe          BL       WIDGET_HandleActive
000274  b900              CBNZ     r0,|L1.632|
                  |L1.630|
;;;253        return;
;;;254      }
;;;255      switch (pMsg->MsgId) {
;;;256      case WM_PAINT:
;;;257        _Paint(hObj);
;;;258        return;
;;;259      case WM_DELETE:
;;;260        _Delete(hObj);
;;;261        break;
;;;262      }
;;;263      WM_DefaultProc(pMsg);
;;;264    }
000276  bd70              POP      {r4-r6,pc}
                  |L1.632|
000278  6820              LDR      r0,[r4,#0]            ;255
00027a  280b              CMP      r0,#0xb               ;255
00027c  d005              BEQ      |L1.650|
00027e  280f              CMP      r0,#0xf               ;255
000280  d107              BNE      |L1.658|
000282  4628              MOV      r0,r5                 ;257
000284  f7fffffe          BL       _Paint
000288  e7f5              B        |L1.630|
                  |L1.650|
00028a  4628              MOV      r0,r5                 ;260
00028c  f7fffffe          BL       _Delete
000290  bf00              NOP                            ;261
                  |L1.658|
000292  bf00              NOP                            ;261
000294  4620              MOV      r0,r4                 ;263
000296  f7fffffe          BL       WM_DefaultProc
00029a  bf00              NOP      
00029c  e7eb              B        |L1.630|
;;;265    
                          ENDP

                  PROGBAR_CreateEx PROC
;;;275    */
;;;276    PROGBAR_Handle PROGBAR_CreateEx(int x0, int y0, int xsize, int ysize, WM_HWIN hParent,
00029e  e92d4fff          PUSH     {r0-r11,lr}
;;;277                                    int WinFlags, int ExFlags, int Id)
;;;278    {
0002a2  b085              SUB      sp,sp,#0x14
0002a4  4606              MOV      r6,r0
0002a6  460f              MOV      r7,r1
0002a8  4690              MOV      r8,r2
0002aa  e9ddab13          LDRD     r10,r11,[sp,#0x4c]
0002ae  f8dd9048          LDR      r9,[sp,#0x48]
;;;279      PROGBAR_Handle hObj;
;;;280      GUI_USE_PARA(ExFlags);
0002b2  bf00              NOP      
;;;281      hObj = WM_CreateWindowAsChild(x0, y0, xsize, ysize, hParent, WinFlags, _PROGBAR_Callback,
0002b4  f04f0130          MOV      r1,#0x30
0002b8  4aab              LDR      r2,|L1.1384|
0002ba  fa1ff08a          UXTH     r0,r10
0002be  e9cd9000          STRD     r9,r0,[sp,#0]
0002c2  e9cd2102          STRD     r2,r1,[sp,#8]
0002c6  4642              MOV      r2,r8
0002c8  4639              MOV      r1,r7
0002ca  4630              MOV      r0,r6
0002cc  9b08              LDR      r3,[sp,#0x20]
0002ce  f7fffffe          BL       WM_CreateWindowAsChild
0002d2  4605              MOV      r5,r0
;;;282                                    sizeof(PROGBAR_Obj) - sizeof(WM_Obj));
;;;283      if (hObj) {
0002d4  b32d              CBZ      r5,|L1.802|
;;;284        PROGBAR_Obj* pObj;
;;;285        WM_LOCK();
;;;286        pObj = (PROGBAR_Obj*) GUI_ALLOC_h2p(hObj);
0002d6  4628              MOV      r0,r5
0002d8  f7fffffe          BL       GUI_ALLOC_h2p
0002dc  4604              MOV      r4,r0
;;;287        /* init widget specific variables */
;;;288        WIDGET__Init(&pObj->Widget, Id, 0);
0002de  f04f0200          MOV      r2,#0
0002e2  4620              MOV      r0,r4
0002e4  9915              LDR      r1,[sp,#0x54]
0002e6  f7fffffe          BL       WIDGET__Init
;;;289        WIDGET_SetEffect(hObj, &WIDGET_Effect_None); /* Standard effect for progbar: None */
0002ea  49a0              LDR      r1,|L1.1388|
0002ec  4628              MOV      r0,r5
0002ee  f7fffffe          BL       WIDGET_SetEffect
;;;290        INIT_ID(pObj);
;;;291        /* init member variables */
;;;292        pObj->pFont        = GUI_DEFAULT_FONT;
0002f2  489f              LDR      r0,|L1.1392|
0002f4  62e0              STR      r0,[r4,#0x2c]
;;;293        pObj->BarColor[0]  = PROGBAR_DEFAULT_BARCOLOR0;
0002f6  489f              LDR      r0,|L1.1396|
0002f8  6320              STR      r0,[r4,#0x30]
;;;294        pObj->BarColor[1]  = PROGBAR_DEFAULT_BARCOLOR1;
0002fa  ea4f0140          LSL      r1,r0,#1
0002fe  6361              STR      r1,[r4,#0x34]
;;;295        pObj->TextColor[0] = PROGBAR_DEFAULT_TEXTCOLOR0;
000300  f06f407f          MVN      r0,#0xff000000
000304  63a0              STR      r0,[r4,#0x38]
;;;296        pObj->TextColor[1] = PROGBAR_DEFAULT_TEXTCOLOR1;
000306  f04f0100          MOV      r1,#0
00030a  63e1              STR      r1,[r4,#0x3c]
;;;297        pObj->TextAlign    = GUI_TA_CENTER;
00030c  f04f0002          MOV      r0,#2
000310  f8a40046          STRH     r0,[r4,#0x46]
;;;298        pObj->Max          = 100;
000314  f04f0064          MOV      r0,#0x64
000318  64e0              STR      r0,[r4,#0x4c]
;;;299        pObj->Min          = 0;
00031a  f04f0000          MOV      r0,#0
00031e  64a0              STR      r0,[r4,#0x48]
;;;300        WM_UNLOCK();
;;;301      }
000320  bf00              NOP      
                  |L1.802|
;;;302      return hObj;
000322  4628              MOV      r0,r5
;;;303    }
000324  b009              ADD      sp,sp,#0x24
000326  e8bd8ff0          POP      {r4-r11,pc}
;;;304    
                          ENDP

                  PROGBAR_SetValue PROC
;;;314    */
;;;315    void PROGBAR_SetValue(PROGBAR_Handle hObj, int v) {
00032a  e92d41f0          PUSH     {r4-r8,lr}
00032e  b086              SUB      sp,sp,#0x18
000330  4606              MOV      r6,r0
000332  460d              MOV      r5,r1
;;;316      if (hObj) {
000334  2e00              CMP      r6,#0
000336  d067              BEQ      |L1.1032|
;;;317        PROGBAR_Obj* pObj;
;;;318        WM_LOCK();
;;;319        pObj= PROGBAR_H2P(hObj);
000338  4630              MOV      r0,r6
00033a  f7fffffe          BL       GUI_ALLOC_h2p
00033e  4604              MOV      r4,r0
;;;320        /* Put v into legal range */
;;;321        if (v < pObj->Min) {
000340  6ca0              LDR      r0,[r4,#0x48]
000342  42a8              CMP      r0,r5
000344  dd00              BLE      |L1.840|
;;;322    	    v = pObj->Min;
000346  6ca5              LDR      r5,[r4,#0x48]
                  |L1.840|
;;;323        }
;;;324        if (v > pObj->Max) {
000348  6ce0              LDR      r0,[r4,#0x4c]
00034a  42a8              CMP      r0,r5
00034c  da00              BGE      |L1.848|
;;;325    	    v = pObj->Max;
00034e  6ce5              LDR      r5,[r4,#0x4c]
                  |L1.848|
;;;326        }
;;;327        if (pObj->v != v) {
000350  6aa0              LDR      r0,[r4,#0x28]
000352  42a8              CMP      r0,r5
000354  d057              BEQ      |L1.1030|
;;;328          GUI_RECT r;
;;;329          /* Get x values */
;;;330          if (v < pObj->v) {
000356  6aa0              LDR      r0,[r4,#0x28]
000358  42a8              CMP      r0,r5
00035a  dd0e              BLE      |L1.890|
;;;331            r.x0 = _Value2X(pObj, v);
00035c  4629              MOV      r1,r5
00035e  4620              MOV      r0,r4
000360  f7fffffe          BL       _Value2X
000364  b200              SXTH     r0,r0
000366  f8ad0010          STRH     r0,[sp,#0x10]
;;;332            r.x1 = _Value2X(pObj, pObj->v);
00036a  4620              MOV      r0,r4
00036c  6aa1              LDR      r1,[r4,#0x28]
00036e  f7fffffe          BL       _Value2X
000372  b200              SXTH     r0,r0
000374  f8ad0014          STRH     r0,[sp,#0x14]
000378  e00d              B        |L1.918|
                  |L1.890|
;;;333          } else {
;;;334            r.x0 = _Value2X(pObj, pObj->v);
00037a  4620              MOV      r0,r4
00037c  6aa1              LDR      r1,[r4,#0x28]
00037e  f7fffffe          BL       _Value2X
000382  b200              SXTH     r0,r0
000384  f8ad0010          STRH     r0,[sp,#0x10]
;;;335            r.x1 = _Value2X(pObj, v);
000388  4629              MOV      r1,r5
00038a  4620              MOV      r0,r4
00038c  f7fffffe          BL       _Value2X
000390  b200              SXTH     r0,r0
000392  f8ad0014          STRH     r0,[sp,#0x14]
                  |L1.918|
;;;336          }
;;;337    		  r.y0    = 0;
000396  f04f0000          MOV      r0,#0
00039a  f8ad0012          STRH     r0,[sp,#0x12]
;;;338    		  r.y1    = 4095;
00039e  f64070ff          MOV      r0,#0xfff
0003a2  f8ad0016          STRH     r0,[sp,#0x16]
;;;339          if (pObj->hpText == 0) {
0003a6  f8b40040          LDRH     r0,[r4,#0x40]
0003aa  bb30              CBNZ     r0,|L1.1018|
;;;340            const GUI_FONT GUI_UNI_PTR * pOldFont;
;;;341            char acBuffer[5];
;;;342            GUI_RECT rText;
;;;343            pOldFont = GUI_SetFont(pObj->pFont);
0003ac  6ae0              LDR      r0,[r4,#0x2c]
0003ae  f7fffffe          BL       GUI_SetFont
0003b2  4607              MOV      r7,r0
;;;344            _GetTextRect(pObj, &rText, _GetText(pObj, acBuffer));
0003b4  a902              ADD      r1,sp,#8
0003b6  4620              MOV      r0,r4
0003b8  f7fffffe          BL       _GetText
0003bc  4680              MOV      r8,r0
0003be  4642              MOV      r2,r8
0003c0  4669              MOV      r1,sp
0003c2  4620              MOV      r0,r4
0003c4  f7fffffe          BL       _GetTextRect
;;;345            GUI_MergeRect(&r, &r, &rText);
0003c8  466a              MOV      r2,sp
0003ca  a904              ADD      r1,sp,#0x10
0003cc  a804              ADD      r0,sp,#0x10
0003ce  f7fffffe          BL       GUI_MergeRect
;;;346            pObj->v = v;
0003d2  62a5              STR      r5,[r4,#0x28]
;;;347            _GetTextRect(pObj, &rText, _GetText(pObj, acBuffer));
0003d4  a902              ADD      r1,sp,#8
0003d6  4620              MOV      r0,r4
0003d8  f7fffffe          BL       _GetText
0003dc  4680              MOV      r8,r0
0003de  4642              MOV      r2,r8
0003e0  4669              MOV      r1,sp
0003e2  4620              MOV      r0,r4
0003e4  f7fffffe          BL       _GetTextRect
;;;348            GUI_MergeRect(&r, &r, &rText);
0003e8  466a              MOV      r2,sp
0003ea  a904              ADD      r1,sp,#0x10
0003ec  a804              ADD      r0,sp,#0x10
0003ee  f7fffffe          BL       GUI_MergeRect
;;;349            GUI_SetFont(pOldFont);
0003f2  4638              MOV      r0,r7
0003f4  f7fffffe          BL       GUI_SetFont
;;;350          } else {
0003f8  e000              B        |L1.1020|
                  |L1.1018|
;;;351            pObj->v = v;
0003fa  62a5              STR      r5,[r4,#0x28]
                  |L1.1020|
;;;352          }
;;;353          WM_InvalidateRect(hObj, &r);
0003fc  a904              ADD      r1,sp,#0x10
0003fe  4630              MOV      r0,r6
000400  f7fffffe          BL       WM_InvalidateRect
;;;354        }
000404  bf00              NOP      
                  |L1.1030|
;;;355        WM_UNLOCK();
;;;356      }
000406  bf00              NOP      
                  |L1.1032|
;;;357    }
000408  b006              ADD      sp,sp,#0x18
00040a  e8bd81f0          POP      {r4-r8,pc}
;;;358    
                          ENDP

                  PROGBAR_SetFont PROC
;;;362    */
;;;363    void PROGBAR_SetFont(PROGBAR_Handle hObj, const GUI_FONT GUI_UNI_PTR * pfont) {
00040e  b570              PUSH     {r4-r6,lr}
000410  4604              MOV      r4,r0
000412  460d              MOV      r5,r1
;;;364      PROGBAR_Obj* pObj;
;;;365      if (hObj) {
000414  b13c              CBZ      r4,|L1.1062|
;;;366        WM_LOCK();
;;;367        pObj = PROGBAR_H2P(hObj);
000416  4620              MOV      r0,r4
000418  f7fffffe          BL       GUI_ALLOC_h2p
00041c  4606              MOV      r6,r0
;;;368        pObj->pFont = pfont;
00041e  62f5              STR      r5,[r6,#0x2c]
;;;369        WM_InvalidateWindow(hObj);
000420  4620              MOV      r0,r4
000422  f7fffffe          BL       WM_InvalidateWindow
                  |L1.1062|
;;;370        WM_UNLOCK();
;;;371      }
;;;372    }
000426  bd70              POP      {r4-r6,pc}
;;;373    
                          ENDP

                  PROGBAR_SetBarColor PROC
;;;377    */
;;;378    void PROGBAR_SetBarColor(PROGBAR_Handle hObj, unsigned int Index, GUI_COLOR color) {
000428  e92d41f0          PUSH     {r4-r8,lr}
00042c  4606              MOV      r6,r0
00042e  460c              MOV      r4,r1
000430  4617              MOV      r7,r2
;;;379      PROGBAR_Obj* pObj;
;;;380      if (hObj) {
000432  b166              CBZ      r6,|L1.1102|
;;;381        WM_LOCK();
;;;382        pObj = PROGBAR_H2P(hObj);
000434  4630              MOV      r0,r6
000436  f7fffffe          BL       GUI_ALLOC_h2p
00043a  4605              MOV      r5,r0
;;;383        if (Index < GUI_COUNTOF(pObj->BarColor)) {
00043c  2c02              CMP      r4,#2
00043e  d206              BCS      |L1.1102|
;;;384          pObj->BarColor[Index] = color;
000440  f1050030          ADD      r0,r5,#0x30
000444  f8407024          STR      r7,[r0,r4,LSL #2]
;;;385          WM_InvalidateWindow(hObj);
000448  4630              MOV      r0,r6
00044a  f7fffffe          BL       WM_InvalidateWindow
                  |L1.1102|
;;;386        }
;;;387        WM_UNLOCK();
;;;388      }
;;;389    }
00044e  e8bd81f0          POP      {r4-r8,pc}
;;;390    
                          ENDP

                  PROGBAR_SetTextColor PROC
;;;394    */
;;;395    void PROGBAR_SetTextColor(PROGBAR_Handle hObj, unsigned int Index, GUI_COLOR color) {
000452  e92d41f0          PUSH     {r4-r8,lr}
000456  4606              MOV      r6,r0
000458  460c              MOV      r4,r1
00045a  4617              MOV      r7,r2
;;;396      PROGBAR_Obj* pObj;
;;;397      if (hObj) {
00045c  b166              CBZ      r6,|L1.1144|
;;;398        WM_LOCK();
;;;399        pObj = PROGBAR_H2P(hObj);
00045e  4630              MOV      r0,r6
000460  f7fffffe          BL       GUI_ALLOC_h2p
000464  4605              MOV      r5,r0
;;;400        if (Index < GUI_COUNTOF(pObj->TextColor)) {
000466  2c02              CMP      r4,#2
000468  d206              BCS      |L1.1144|
;;;401          pObj->TextColor[Index] = color;
00046a  f1050038          ADD      r0,r5,#0x38
00046e  f8407024          STR      r7,[r0,r4,LSL #2]
;;;402          WM_InvalidateWindow(hObj);
000472  4630              MOV      r0,r6
000474  f7fffffe          BL       WM_InvalidateWindow
                  |L1.1144|
;;;403        }
;;;404        WM_UNLOCK();
;;;405      }
;;;406    }
000478  e8bd81f0          POP      {r4-r8,pc}
;;;407    
                          ENDP

                  PROGBAR_SetText PROC
;;;411    */
;;;412    void PROGBAR_SetText(PROGBAR_Handle hObj, const char* s) {
00047c  e92d41f0          PUSH     {r4-r8,lr}
000480  b086              SUB      sp,sp,#0x18
000482  4605              MOV      r5,r0
000484  460e              MOV      r6,r1
;;;413      if (hObj) {
000486  b37d              CBZ      r5,|L1.1256|
;;;414        PROGBAR_Obj* pObj;
;;;415        const GUI_FONT GUI_UNI_PTR * pOldFont;
;;;416        GUI_RECT r1;
;;;417        char acBuffer[5];
;;;418        WM_LOCK();
;;;419        pObj = PROGBAR_H2P(hObj);
000488  4628              MOV      r0,r5
00048a  f7fffffe          BL       GUI_ALLOC_h2p
00048e  4604              MOV      r4,r0
;;;420        pOldFont = GUI_SetFont(pObj->pFont);
000490  6ae0              LDR      r0,[r4,#0x2c]
000492  f7fffffe          BL       GUI_SetFont
000496  4607              MOV      r7,r0
;;;421        _GetTextRect(pObj, &r1, _GetText(pObj, acBuffer));
000498  a902              ADD      r1,sp,#8
00049a  4620              MOV      r0,r4
00049c  f7fffffe          BL       _GetText
0004a0  4680              MOV      r8,r0
0004a2  4642              MOV      r2,r8
0004a4  a904              ADD      r1,sp,#0x10
0004a6  4620              MOV      r0,r4
0004a8  f7fffffe          BL       _GetTextRect
;;;422        if (GUI__SetText(&pObj->hpText, s)) {
0004ac  4631              MOV      r1,r6
0004ae  f1040040          ADD      r0,r4,#0x40
0004b2  f7fffffe          BL       GUI__SetText
0004b6  b198              CBZ      r0,|L1.1248|
;;;423          GUI_RECT r2;
;;;424          _GetTextRect(pObj, &r2, _GetText(pObj, acBuffer));
0004b8  a902              ADD      r1,sp,#8
0004ba  4620              MOV      r0,r4
0004bc  f7fffffe          BL       _GetText
0004c0  4680              MOV      r8,r0
0004c2  4642              MOV      r2,r8
0004c4  4669              MOV      r1,sp
0004c6  4620              MOV      r0,r4
0004c8  f7fffffe          BL       _GetTextRect
;;;425          GUI_MergeRect(&r1, &r1, &r2);
0004cc  466a              MOV      r2,sp
0004ce  a904              ADD      r1,sp,#0x10
0004d0  a804              ADD      r0,sp,#0x10
0004d2  f7fffffe          BL       GUI_MergeRect
;;;426          WM_InvalidateRect(hObj, &r1);
0004d6  a904              ADD      r1,sp,#0x10
0004d8  4628              MOV      r0,r5
0004da  f7fffffe          BL       WM_InvalidateRect
;;;427        }
0004de  bf00              NOP      
                  |L1.1248|
;;;428        GUI_SetFont(pOldFont);
0004e0  4638              MOV      r0,r7
0004e2  f7fffffe          BL       GUI_SetFont
;;;429        WM_UNLOCK();
;;;430      }
0004e6  bf00              NOP      
                  |L1.1256|
;;;431    }
0004e8  b006              ADD      sp,sp,#0x18
0004ea  e8bd81f0          POP      {r4-r8,pc}
;;;432    
                          ENDP

                  PROGBAR_SetTextAlign PROC
;;;436    */
;;;437    void PROGBAR_SetTextAlign(PROGBAR_Handle hObj, int Align) {
0004ee  b570              PUSH     {r4-r6,lr}
0004f0  4604              MOV      r4,r0
0004f2  460d              MOV      r5,r1
;;;438      PROGBAR_Obj* pObj;
;;;439      if (hObj) {
0004f4  b14c              CBZ      r4,|L1.1290|
;;;440        WM_LOCK();
;;;441        pObj = PROGBAR_H2P(hObj);
0004f6  4620              MOV      r0,r4
0004f8  f7fffffe          BL       GUI_ALLOC_h2p
0004fc  4606              MOV      r6,r0
;;;442        pObj->TextAlign = Align;
0004fe  b228              SXTH     r0,r5
000500  f8a60046          STRH     r0,[r6,#0x46]
;;;443        WM_InvalidateWindow(hObj);
000504  4620              MOV      r0,r4
000506  f7fffffe          BL       WM_InvalidateWindow
                  |L1.1290|
;;;444        WM_UNLOCK();
;;;445      }
;;;446    }
00050a  bd70              POP      {r4-r6,pc}
;;;447    
                          ENDP

                  PROGBAR_SetTextPos PROC
;;;451    */
;;;452    void PROGBAR_SetTextPos(PROGBAR_Handle hObj, int XOff, int YOff) {
00050c  e92d41f0          PUSH     {r4-r8,lr}
000510  4605              MOV      r5,r0
000512  460e              MOV      r6,r1
000514  4617              MOV      r7,r2
;;;453      PROGBAR_Obj* pObj;
;;;454      if (hObj) {
000516  b165              CBZ      r5,|L1.1330|
;;;455        WM_LOCK();
;;;456        pObj = PROGBAR_H2P(hObj);
000518  4628              MOV      r0,r5
00051a  f7fffffe          BL       GUI_ALLOC_h2p
00051e  4604              MOV      r4,r0
;;;457        pObj->XOff = XOff;
000520  b230              SXTH     r0,r6
000522  f8a40042          STRH     r0,[r4,#0x42]
;;;458        pObj->YOff = YOff;
000526  b238              SXTH     r0,r7
000528  f8a40044          STRH     r0,[r4,#0x44]
;;;459        WM_InvalidateWindow(hObj);
00052c  4628              MOV      r0,r5
00052e  f7fffffe          BL       WM_InvalidateWindow
                  |L1.1330|
;;;460        WM_UNLOCK();
;;;461      }
;;;462    }
000532  e8bd81f0          POP      {r4-r8,pc}
;;;463    
                          ENDP

                  PROGBAR_SetMinMax PROC
;;;467    */
;;;468    void PROGBAR_SetMinMax(PROGBAR_Handle hObj, int Min, int Max) {
000536  e92d41f0          PUSH     {r4-r8,lr}
00053a  4607              MOV      r7,r0
00053c  460d              MOV      r5,r1
00053e  4616              MOV      r6,r2
;;;469      PROGBAR_Obj* pObj;
;;;470      if (hObj) {
000540  b187              CBZ      r7,|L1.1380|
;;;471        WM_LOCK();
;;;472        pObj = PROGBAR_H2P(hObj);
000542  4638              MOV      r0,r7
000544  f7fffffe          BL       GUI_ALLOC_h2p
000548  4604              MOV      r4,r0
;;;473        if (Max > Min) {
00054a  42ae              CMP      r6,r5
00054c  dd0a              BLE      |L1.1380|
;;;474          if ((Max != pObj->Max) || (Min != pObj->Min)) {
00054e  6ce0              LDR      r0,[r4,#0x4c]
000550  42b0              CMP      r0,r6
000552  d102              BNE      |L1.1370|
000554  6ca0              LDR      r0,[r4,#0x48]
000556  42a8              CMP      r0,r5
000558  d004              BEQ      |L1.1380|
                  |L1.1370|
;;;475            pObj->Min = Min;
00055a  64a5              STR      r5,[r4,#0x48]
;;;476            pObj->Max = Max;
00055c  64e6              STR      r6,[r4,#0x4c]
;;;477            WM_InvalidateWindow(hObj);
00055e  4638              MOV      r0,r7
000560  f7fffffe          BL       WM_InvalidateWindow
                  |L1.1380|
;;;478          }
;;;479        }
;;;480        WM_UNLOCK();
;;;481      }
;;;482    }
000564  e8bd81f0          POP      {r4-r8,pc}
;;;483    
                          ENDP

                  |L1.1384|
                          DCD      _PROGBAR_Callback
                  |L1.1388|
                          DCD      WIDGET_Effect_None
                  |L1.1392|
                          DCD      GUI_Font6x8
                  |L1.1396|
                          DCD      0x00555555

; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\gui_bmp_serialize.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\gui_bmp_serialize.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\gui_bmp_serialize.crf GUI\Core\GUI_BMP_Serialize.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  _SendU16 PROC
;;;43     */
;;;44     static void _SendU16(GUI_CALLBACK_VOID_U8_P * pfSerialize, U16 Data, void * p) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
000006  4616              MOV      r6,r2
;;;45       (*pfSerialize)((U8)Data, p);
000008  4631              MOV      r1,r6
00000a  b2e8              UXTB     r0,r5
00000c  47a0              BLX      r4
;;;46       (*pfSerialize)(Data >> 8, p);
00000e  1228              ASRS     r0,r5,#8
000010  4631              MOV      r1,r6
000012  47a0              BLX      r4
;;;47     }
000014  bd70              POP      {r4-r6,pc}
;;;48     
                          ENDP

                  _SendU32 PROC
;;;52     */
;;;53     static void _SendU32(GUI_CALLBACK_VOID_U8_P * pfSerialize, U32 Data, void * p) {
000016  b570              PUSH     {r4-r6,lr}
000018  4605              MOV      r5,r0
00001a  460c              MOV      r4,r1
00001c  4616              MOV      r6,r2
;;;54       _SendU16(pfSerialize, (U16)Data, p);
00001e  4632              MOV      r2,r6
000020  b2a1              UXTH     r1,r4
000022  4628              MOV      r0,r5
000024  f7fffffe          BL       _SendU16
;;;55       _SendU16(pfSerialize, Data >> 16, p);
000028  0c21              LSRS     r1,r4,#16
00002a  4632              MOV      r2,r6
00002c  4628              MOV      r0,r5
00002e  f7fffffe          BL       _SendU16
;;;56     }
000032  bd70              POP      {r4-r6,pc}
;;;57     
                          ENDP

                  GUI_BMP_SerializeEx PROC
;;;67     */
;;;68     void GUI_BMP_SerializeEx(GUI_CALLBACK_VOID_U8_P * pfSerialize, int x0, int y0, int xSize, int ySize, void * p) {
000034  e92d4fff          PUSH     {r0-r11,lr}
000038  b087              SUB      sp,sp,#0x1c
00003a  4683              MOV      r11,r0
00003c  461d              MOV      r5,r3
;;;69       int x, y, i;
;;;70       U32 BitmapOffset, FileSize;
;;;71       int BPP          = LCD_GetBitsPerPixel();
00003e  f7fffffe          BL       LCD_GetBitsPerPixel
000042  4607              MOV      r7,r0
;;;72       int BytesPerLine = ((BPP > 8) ? (2 * xSize + 2) : (xSize + 3)) & ~3;
000044  2f08              CMP      r7,#8
000046  dd04              BLE      |L1.82|
000048  ea4f0045          LSL      r0,r5,#1
00004c  f1000002          ADD      r0,r0,#2
000050  e001              B        |L1.86|
                  |L1.82|
000052  f1050003          ADD      r0,r5,#3
                  |L1.86|
000056  f0200003          BIC      r0,r0,#3
00005a  9004              STR      r0,[sp,#0x10]
;;;73       int NumColors    = (BPP > 8) ? 0 : (1 << BPP);
00005c  2f08              CMP      r7,#8
00005e  dd02              BLE      |L1.102|
000060  f04f0000          MOV      r0,#0
000064  e003              B        |L1.110|
                  |L1.102|
000066  f04f0001          MOV      r0,#1
00006a  fa00f007          LSL      r0,r0,r7
                  |L1.110|
00006e  4681              MOV      r9,r0
;;;74       /* Write BITMAPFILEHEADER */
;;;75       BitmapOffset   = SIZEOF_BITMAPFILEHEADER
000070  f04f0036          MOV      r0,#0x36
000074  eb000089          ADD      r0,r0,r9,LSL #2
000078  9006              STR      r0,[sp,#0x18]
;;;76                      + SIZEOF_BITMAPINFOHEADER
;;;77                      + NumColors * 4;
;;;78       FileSize       = BitmapOffset
00007a  9a04              LDR      r2,[sp,#0x10]
00007c  9914              LDR      r1,[sp,#0x50]
00007e  9806              LDR      r0,[sp,#0x18]
000080  fb010002          MLA      r0,r1,r2,r0
000084  9005              STR      r0,[sp,#0x14]
;;;79                      + ySize * BytesPerLine;
;;;80       _SendU16(pfSerialize, DIB_HEADER_MARKER, p);       /* bfType */
000086  f6445142          MOV      r1,#0x4d42
00008a  4658              MOV      r0,r11
00008c  9a15              LDR      r2,[sp,#0x54]
00008e  f7fffffe          BL       _SendU16
;;;81       _SendU32(pfSerialize, FileSize, p);                /* bfSize */
000092  4658              MOV      r0,r11
000094  9a15              LDR      r2,[sp,#0x54]
000096  9905              LDR      r1,[sp,#0x14]
000098  f7fffffe          BL       _SendU32
;;;82       _SendU32(pfSerialize, 0, p);                       /* bfReserved1, bfReserved2 */
00009c  2100              MOVS     r1,#0
00009e  4658              MOV      r0,r11
0000a0  9a15              LDR      r2,[sp,#0x54]
0000a2  f7fffffe          BL       _SendU32
;;;83       _SendU32(pfSerialize, BitmapOffset, p);            /* bfOffBits */
0000a6  4658              MOV      r0,r11
0000a8  9a15              LDR      r2,[sp,#0x54]
0000aa  9906              LDR      r1,[sp,#0x18]
0000ac  f7fffffe          BL       _SendU32
;;;84       /* Write BITMAPINFOHEADER */
;;;85       _SendU32(pfSerialize, SIZEOF_BITMAPINFOHEADER, p); /* biSize */
0000b0  2128              MOVS     r1,#0x28
0000b2  4658              MOV      r0,r11
0000b4  9a15              LDR      r2,[sp,#0x54]
0000b6  f7fffffe          BL       _SendU32
;;;86       _SendU32(pfSerialize, xSize, p);                   /* biWidth */
0000ba  4629              MOV      r1,r5
0000bc  4658              MOV      r0,r11
0000be  9a15              LDR      r2,[sp,#0x54]
0000c0  f7fffffe          BL       _SendU32
;;;87       _SendU32(pfSerialize, ySize, p);                   /* biHeighth */
0000c4  4658              MOV      r0,r11
0000c6  e9dd1214          LDRD     r1,r2,[sp,#0x50]
0000ca  f7fffffe          BL       _SendU32
;;;88       _SendU16(pfSerialize, 1, p);                       /* biPlanes */
0000ce  2101              MOVS     r1,#1
0000d0  4658              MOV      r0,r11
0000d2  9a15              LDR      r2,[sp,#0x54]
0000d4  f7fffffe          BL       _SendU16
;;;89       _SendU16(pfSerialize, (BPP  <= 8) ? 8 : 16, p);    /* biBitCount */
0000d8  2f08              CMP      r7,#8
0000da  dc01              BGT      |L1.224|
0000dc  2008              MOVS     r0,#8
0000de  e000              B        |L1.226|
                  |L1.224|
0000e0  2010              MOVS     r0,#0x10
                  |L1.226|
0000e2  4601              MOV      r1,r0
0000e4  4658              MOV      r0,r11
0000e6  9a15              LDR      r2,[sp,#0x54]
0000e8  f7fffffe          BL       _SendU16
;;;90       _SendU32(pfSerialize, 0, p);                       /* biCompression */
0000ec  2100              MOVS     r1,#0
0000ee  4658              MOV      r0,r11
0000f0  9a15              LDR      r2,[sp,#0x54]
0000f2  f7fffffe          BL       _SendU32
;;;91       _SendU32(pfSerialize, 0, p);                       /* biSizeImage */
0000f6  2100              MOVS     r1,#0
0000f8  4658              MOV      r0,r11
0000fa  9a15              LDR      r2,[sp,#0x54]
0000fc  f7fffffe          BL       _SendU32
;;;92       _SendU32(pfSerialize, 0, p);                       /* biXPelsPerMeter */
000100  2100              MOVS     r1,#0
000102  4658              MOV      r0,r11
000104  9a15              LDR      r2,[sp,#0x54]
000106  f7fffffe          BL       _SendU32
;;;93       _SendU32(pfSerialize, 0, p);                       /* biYPelsPerMeter */
00010a  2100              MOVS     r1,#0
00010c  4658              MOV      r0,r11
00010e  9a15              LDR      r2,[sp,#0x54]
000110  f7fffffe          BL       _SendU32
;;;94       _SendU32(pfSerialize, NumColors, p);               /* biClrUsed */
000114  4649              MOV      r1,r9
000116  4658              MOV      r0,r11
000118  9a15              LDR      r2,[sp,#0x54]
00011a  f7fffffe          BL       _SendU32
;;;95       _SendU32(pfSerialize, 0, p);                       /* biClrImportant */
00011e  2100              MOVS     r1,#0
000120  4658              MOV      r0,r11
000122  9a15              LDR      r2,[sp,#0x54]
000124  f7fffffe          BL       _SendU32
;;;96       /* Write palette */
;;;97       for (i = 0; i < NumColors; i++) {
000128  f04f0400          MOV      r4,#0
00012c  e014              B        |L1.344|
                  |L1.302|
;;;98         U32 Color;
;;;99         Color = GUI_Index2Color(i);
00012e  4620              MOV      r0,r4
000130  f7fffffe          BL       GUI_Index2Color
000134  4682              MOV      r10,r0
;;;100        Color = ((Color >> 16) & 255) | (Color & 0xff00) | ((Color & 0xff) << 16);
000136  f40a407f          AND      r0,r10,#0xff00
00013a  f3ca4107          UBFX     r1,r10,#16,#8
00013e  ea400001          ORR      r0,r0,r1
000142  f00a01ff          AND      r1,r10,#0xff
000146  ea404a01          ORR      r10,r0,r1,LSL #16
;;;101        _SendU32(pfSerialize, Color, p);
00014a  4651              MOV      r1,r10
00014c  4658              MOV      r0,r11
00014e  9a15              LDR      r2,[sp,#0x54]
000150  f7fffffe          BL       _SendU32
000154  f1040401          ADD      r4,r4,#1              ;97
                  |L1.344|
000158  454c              CMP      r4,r9                 ;97
00015a  dbe8              BLT      |L1.302|
;;;102      }
;;;103      /* Write pixels */
;;;104      for (y = ySize - 1; y >= 0; y--) {
00015c  9814              LDR      r0,[sp,#0x50]
00015e  f1a00601          SUB      r6,r0,#1
000162  e058              B        |L1.534|
                  |L1.356|
;;;105        for (x = 0; x < xSize; x++) {
000164  f04f0800          MOV      r8,#0
000168  e046              B        |L1.504|
                  |L1.362|
;;;106          if (BPP <= 8) {
00016a  2f08              CMP      r7,#8
00016c  dc0c              BGT      |L1.392|
;;;107            pfSerialize(LCD_GetPixelIndex(x0 + x, y0 + y), p);
00016e  9a09              LDR      r2,[sp,#0x24]
000170  1991              ADDS     r1,r2,r6
000172  9a08              LDR      r2,[sp,#0x20]
000174  eb020008          ADD      r0,r2,r8
000178  f7fffffe          BL       LCD_GetPixelIndex
00017c  f0000aff          AND      r10,r0,#0xff
000180  4650              MOV      r0,r10
000182  9915              LDR      r1,[sp,#0x54]
000184  47d8              BLX      r11
000186  e035              B        |L1.500|
                  |L1.392|
;;;108          } else {
;;;109            U16 Color16;
;;;110            U32 Color = LCD_GetPixelColor(x0 + x, y0 + y);
000188  9a09              LDR      r2,[sp,#0x24]
00018a  1991              ADDS     r1,r2,r6
00018c  9a08              LDR      r2,[sp,#0x20]
00018e  eb020008          ADD      r0,r2,r8
000192  f7fffffe          BL       LCD_GetPixelColor
000196  4682              MOV      r10,r0
;;;111            int b = ((Color >> 16) * 31 + 127) / 255;
000198  ea4f401a          LSR      r0,r10,#16
00019c  ebc01040          RSB      r0,r0,r0,LSL #5
0001a0  f100007f          ADD      r0,r0,#0x7f
0001a4  f04f01ff          MOV      r1,#0xff
0001a8  fbb0f0f1          UDIV     r0,r0,r1
0001ac  9002              STR      r0,[sp,#8]
;;;112            int g = (((Color >> 8) & 255) * 31 + 127) / 255;
0001ae  f3ca2007          UBFX     r0,r10,#8,#8
0001b2  ebc01040          RSB      r0,r0,r0,LSL #5
0001b6  f100007f          ADD      r0,r0,#0x7f
0001ba  fbb0f0f1          UDIV     r0,r0,r1
0001be  9001              STR      r0,[sp,#4]
;;;113            int r = ((Color & 255) * 31 + 127) / 255;
0001c0  f00a00ff          AND      r0,r10,#0xff
0001c4  ebc01040          RSB      r0,r0,r0,LSL #5
0001c8  f100007f          ADD      r0,r0,#0x7f
0001cc  fbb0f0f1          UDIV     r0,r0,r1
0001d0  9000              STR      r0,[sp,#0]
;;;114            Color16 = (r << 10) | (g << 5) | b;       /* 16 bpp Bitmaps in windows are 555: rrrrrgggggbbbbb */
0001d2  9800              LDR      r0,[sp,#0]
0001d4  ea4f2180          LSL      r1,r0,#10
0001d8  9801              LDR      r0,[sp,#4]
0001da  ea411040          ORR      r0,r1,r0,LSL #5
0001de  9902              LDR      r1,[sp,#8]
0001e0  ea400001          ORR      r0,r0,r1
0001e4  b280              UXTH     r0,r0
0001e6  9003              STR      r0,[sp,#0xc]
;;;115            _SendU16(pfSerialize, Color16, p);
0001e8  4658              MOV      r0,r11
0001ea  9a15              LDR      r2,[sp,#0x54]
0001ec  9903              LDR      r1,[sp,#0xc]
0001ee  f7fffffe          BL       _SendU16
;;;116          }
0001f2  bf00              NOP      
                  |L1.500|
0001f4  f1080801          ADD      r8,r8,#1              ;105
                  |L1.504|
0001f8  45a8              CMP      r8,r5                 ;105
0001fa  dbb6              BLT      |L1.362|
;;;117        }
;;;118        /* Align pointer to next U32 */
;;;119        for (i = BytesPerLine & 3; i > 0; i--) {
0001fc  9804              LDR      r0,[sp,#0x10]
0001fe  f0000403          AND      r4,r0,#3
000202  e004              B        |L1.526|
                  |L1.516|
;;;120          pfSerialize(0, p);
000204  2000              MOVS     r0,#0
000206  9915              LDR      r1,[sp,#0x54]
000208  47d8              BLX      r11
00020a  f1a40401          SUB      r4,r4,#1              ;119
                  |L1.526|
00020e  2c00              CMP      r4,#0                 ;119
000210  dcf8              BGT      |L1.516|
000212  f1a60601          SUB      r6,r6,#1              ;104
                  |L1.534|
000216  2e00              CMP      r6,#0                 ;104
000218  daa4              BGE      |L1.356|
;;;121        }
;;;122      }
;;;123    }
00021a  b00b              ADD      sp,sp,#0x2c
00021c  e8bd8ff0          POP      {r4-r11,pc}
;;;124    
                          ENDP

                  GUI_BMP_Serialize PROC
;;;128    */
;;;129    void GUI_BMP_Serialize(GUI_CALLBACK_VOID_U8_P * pfSerialize, void * p) {
000220  e92d41fc          PUSH     {r2-r8,lr}
000224  4605              MOV      r5,r0
000226  460c              MOV      r4,r1
;;;130      GUI_BMP_SerializeEx(pfSerialize, 0, 0, LCD_GetXSize(), LCD_GetYSize(), p);
000228  f7fffffe          BL       LCD_GetYSize
00022c  4606              MOV      r6,r0
00022e  f7fffffe          BL       LCD_GetXSize
000232  4607              MOV      r7,r0
000234  463b              MOV      r3,r7
000236  2200              MOVS     r2,#0
000238  4611              MOV      r1,r2
00023a  4628              MOV      r0,r5
00023c  e9cd6400          STRD     r6,r4,[sp,#0]
000240  f7fffffe          BL       GUI_BMP_SerializeEx
;;;131    }
000244  e8bd81fc          POP      {r2-r8,pc}
;;;132    
                          ENDP


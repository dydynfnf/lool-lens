; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\gui__strcmp.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\gui__strcmp.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\gui__strcmp.crf GUI\Core\GUI__strcmp.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  GUI__strcmp PROC
;;;40     */
;;;41     int GUI__strcmp(const char GUI_UNI_PTR * s0, const char GUI_UNI_PTR * s1) {
000000  4602              MOV      r2,r0
;;;42       if (s0 == NULL) {
000002  b902              CBNZ     r2,|L1.6|
;;;43         s0 = "";
000004  a213              ADR      r2,|L1.84|
                  |L1.6|
;;;44       }
;;;45       if (s1 == NULL) {
000006  b901              CBNZ     r1,|L1.10|
;;;46         s1 = "";
000008  a112              ADR      r1,|L1.84|
                  |L1.10|
;;;47       }
;;;48       do {
00000a  bf00              NOP      
                  |L1.12|
;;;49         if (*s0 != *s1) {
00000c  7810              LDRB     r0,[r2,#0]
00000e  780b              LDRB     r3,[r1,#0]
000010  4298              CMP      r0,r3
000012  d001              BEQ      |L1.24|
;;;50           return 1;
000014  2001              MOVS     r0,#1
                  |L1.22|
;;;51         }
;;;52         s1++;
;;;53       } while (*++s0);
;;;54       if (*s1) {
;;;55         return 1;    /* Not equal, since s1 is longer than s0 */
;;;56       }
;;;57       return 0;      /* Equal ! */
;;;58     }
000016  4770              BX       lr
                  |L1.24|
000018  f1010101          ADD      r1,r1,#1              ;52
00001c  f1020001          ADD      r0,r2,#1              ;53
000020  4602              MOV      r2,r0                 ;53
000022  7800              LDRB     r0,[r0,#0]            ;53
000024  2800              CMP      r0,#0                 ;53
000026  d1f1              BNE      |L1.12|
000028  7808              LDRB     r0,[r1,#0]            ;54
00002a  b108              CBZ      r0,|L1.48|
00002c  2001              MOVS     r0,#1                 ;55
00002e  e7f2              B        |L1.22|
                  |L1.48|
000030  2000              MOVS     r0,#0                 ;57
000032  e7f0              B        |L1.22|
;;;59     
                          ENDP

                  GUI__strcmp_hp PROC
;;;71     */
;;;72     int GUI__strcmp_hp(GUI_HMEM  hs0, const char GUI_UNI_PTR * s1) {
000034  b570              PUSH     {r4-r6,lr}
000036  4604              MOV      r4,r0
000038  460d              MOV      r5,r1
;;;73       const char* s0 = NULL;
00003a  f04f0600          MOV      r6,#0
;;;74       if (hs0) {
00003e  b11c              CBZ      r4,|L1.72|
;;;75         s0 = (const char*)GUI_ALLOC_h2p(hs0);
000040  4620              MOV      r0,r4
000042  f7fffffe          BL       GUI_ALLOC_h2p
000046  4606              MOV      r6,r0
                  |L1.72|
;;;76       }
;;;77       return GUI__strcmp(s0, s1);
000048  4629              MOV      r1,r5
00004a  4630              MOV      r0,r6
00004c  f7fffffe          BL       GUI__strcmp
;;;78     }
000050  bd70              POP      {r4-r6,pc}
;;;79     
                          ENDP

000052  0000              DCW      0x0000
                  |L1.84|
000054  00                DCB      0
000055  00                DCB      0
000056  00                DCB      0
000057  00                DCB      0

; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\guiaacircle.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\guiaacircle.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\guiaacircle.crf GUI\AntiAlias\GUIAACircle.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  FillCircle PROC
;;;41     */
;;;42     static void FillCircle(int x0, int y0, int r) {
000000  e92d4ff8          PUSH     {r3-r11,lr}
000004  4607              MOV      r7,r0
000006  4688              MOV      r8,r1
000008  4614              MOV      r4,r2
;;;43       int i, x;
;;;44       int sqmax = r*r+r/2;
00000a  4620              MOV      r0,r4
00000c  eb0471d0          ADD      r1,r4,r0,LSR #31
000010  ea4f0161          ASR      r1,r1,#1
000014  fb041104          MLA      r1,r4,r4,r1
000018  9100              STR      r1,[sp,#0]
;;;45       int yMin, yMax;
;;;46       /* First step : find uppermost and lowermost coordinates */
;;;47       yMin = y0 - r;
00001a  eba80904          SUB      r9,r8,r4
;;;48       yMax = y0 + r;
00001e  eb080a04          ADD      r10,r8,r4
;;;49       /* Use Clipping rect to reduce calculation (if possible) */
;;;50       if (GUI_Context.pClipRect_HL) {
000022  4853              LDR      r0,|L1.368|
000024  6900              LDR      r0,[r0,#0x10]  ; GUI_Context
000026  b198              CBZ      r0,|L1.80|
;;;51         if (yMax > GUI_Context.pClipRect_HL->y1)
000028  4851              LDR      r0,|L1.368|
00002a  6900              LDR      r0,[r0,#0x10]  ; GUI_Context
00002c  f9b00006          LDRSH    r0,[r0,#6]
000030  4550              CMP      r0,r10
000032  da03              BGE      |L1.60|
;;;52           yMax = GUI_Context.pClipRect_HL->y1;
000034  484e              LDR      r0,|L1.368|
000036  6900              LDR      r0,[r0,#0x10]  ; GUI_Context
000038  f9b0a006          LDRSH    r10,[r0,#6]
                  |L1.60|
;;;53         if (yMin < GUI_Context.pClipRect_HL->y0)
00003c  484c              LDR      r0,|L1.368|
00003e  6900              LDR      r0,[r0,#0x10]  ; GUI_Context
000040  f9b00002          LDRSH    r0,[r0,#2]
000044  4548              CMP      r0,r9
000046  dd03              BLE      |L1.80|
;;;54           yMin = GUI_Context.pClipRect_HL->y0;
000048  4849              LDR      r0,|L1.368|
00004a  6900              LDR      r0,[r0,#0x10]  ; GUI_Context
00004c  f9b09002          LDRSH    r9,[r0,#2]
                  |L1.80|
;;;55       }
;;;56       /* Draw top half */
;;;57       for (i=0, x=r; i<r; i++) {
000050  f04f0600          MOV      r6,#0
000054  4625              MOV      r5,r4
000056  e018              B        |L1.138|
                  |L1.88|
;;;58         int y = y0-i;
000058  eba80b06          SUB      r11,r8,r6
;;;59         if ((y >= yMin) && (y <= yMax)) {
00005c  45cb              CMP      r11,r9
00005e  db12              BLT      |L1.134|
000060  45d3              CMP      r11,r10
000062  dc10              BGT      |L1.134|
;;;60           /* calc proper x-value */
;;;61           while ((i*i+x*x) >sqmax)
000064  e001              B        |L1.106|
                  |L1.102|
;;;62             --x;
000066  f1a50501          SUB      r5,r5,#1
                  |L1.106|
00006a  fb06f006          MUL      r0,r6,r6              ;61
00006e  fb050105          MLA      r1,r5,r5,r0           ;61
000072  9800              LDR      r0,[sp,#0]            ;61
000074  4281              CMP      r1,r0                 ;61
000076  dcf6              BGT      |L1.102|
;;;63           LCD_HL_DrawHLine (x0-x, y, x0+x);
000078  197a              ADDS     r2,r7,r5
00007a  1b78              SUBS     r0,r7,r5
00007c  493c              LDR      r1,|L1.368|
00007e  6d89              LDR      r1,[r1,#0x58]  ; GUI_Context
000080  680b              LDR      r3,[r1,#0]
000082  4659              MOV      r1,r11
000084  4798              BLX      r3
                  |L1.134|
000086  f1060601          ADD      r6,r6,#1              ;57
                  |L1.138|
00008a  42a6              CMP      r6,r4                 ;57
00008c  dbe4              BLT      |L1.88|
;;;64         }
;;;65       }
;;;66       /* Draw bottom half */
;;;67       for (i=0, x=r; i<r; i++) {
00008e  f04f0600          MOV      r6,#0
000092  4625              MOV      r5,r4
000094  e018              B        |L1.200|
                  |L1.150|
;;;68         int y = y0 + i;
000096  eb080b06          ADD      r11,r8,r6
;;;69         if ((y >= yMin) && (y <= yMax)) {
00009a  45cb              CMP      r11,r9
00009c  db12              BLT      |L1.196|
00009e  45d3              CMP      r11,r10
0000a0  dc10              BGT      |L1.196|
;;;70           /* calc proper x-value */
;;;71           while ((i*i+x*x) >sqmax)
0000a2  e001              B        |L1.168|
                  |L1.164|
;;;72             --x;
0000a4  f1a50501          SUB      r5,r5,#1
                  |L1.168|
0000a8  fb06f006          MUL      r0,r6,r6              ;71
0000ac  fb050105          MLA      r1,r5,r5,r0           ;71
0000b0  9800              LDR      r0,[sp,#0]            ;71
0000b2  4281              CMP      r1,r0                 ;71
0000b4  dcf6              BGT      |L1.164|
;;;73           LCD_HL_DrawHLine (x0-x, y, x0+x);
0000b6  197a              ADDS     r2,r7,r5
0000b8  1b78              SUBS     r0,r7,r5
0000ba  492d              LDR      r1,|L1.368|
0000bc  6d89              LDR      r1,[r1,#0x58]  ; GUI_Context
0000be  680b              LDR      r3,[r1,#0]
0000c0  4659              MOV      r1,r11
0000c2  4798              BLX      r3
                  |L1.196|
0000c4  f1060601          ADD      r6,r6,#1              ;67
                  |L1.200|
0000c8  42a6              CMP      r6,r4                 ;67
0000ca  dbe4              BLT      |L1.150|
;;;74         }
;;;75       }
;;;76     }
0000cc  e8bd8ff8          POP      {r3-r11,pc}
;;;77     
                          ENDP

                  GL_FillCircleAA_HiRes PROC
;;;87     */
;;;88     void GL_FillCircleAA_HiRes(int x0, int y0, int r) {
0000d0  b570              PUSH     {r4-r6,lr}
0000d2  4604              MOV      r4,r0
0000d4  460e              MOV      r6,r1
0000d6  4615              MOV      r5,r2
;;;89     /* Init AA Subsystem, pass horizontal limits */
;;;90       GUI_AA_Init_HiRes(x0-r, x0+r);
0000d8  eb040105          ADD      r1,r4,r5
0000dc  eba40005          SUB      r0,r4,r5
0000e0  f7fffffe          BL       GUI_AA_Init_HiRes
;;;91     /* Do the actual drawing */
;;;92       FillCircle(x0, y0, r);
0000e4  462a              MOV      r2,r5
0000e6  4631              MOV      r1,r6
0000e8  4620              MOV      r0,r4
0000ea  f7fffffe          BL       FillCircle
;;;93     /* Cleanup */
;;;94       GUI_AA_Exit();
0000ee  f7fffffe          BL       GUI_AA_Exit
;;;95     }
0000f2  bd70              POP      {r4-r6,pc}
;;;96     
                          ENDP

                  GUI_AA_FillCircle PROC
;;;100    */
;;;101    void GUI_AA_FillCircle(int x0, int y0, int r) {
0000f4  b57c              PUSH     {r2-r6,lr}
0000f6  4605              MOV      r5,r0
0000f8  460e              MOV      r6,r1
0000fa  4614              MOV      r4,r2
;;;102      #if (GUI_WINSUPPORT)
;;;103        GUI_RECT Rect;
;;;104      #endif
;;;105      GUI_LOCK();
;;;106      #if (GUI_WINSUPPORT)
;;;107        WM_ADDORG_AA(x0,y0);
0000fc  f7fffffe          BL       WM__GetOrgX_AA
000100  4405              ADD      r5,r5,r0
000102  f7fffffe          BL       WM__GetOrgY_AA
000106  4406              ADD      r6,r6,r0
;;;108      #endif
;;;109      if (!GUI_Context.AA_HiResEnable) {
000108  4819              LDR      r0,|L1.368|
00010a  f890005d          LDRB     r0,[r0,#0x5d]  ; GUI_Context
00010e  b958              CBNZ     r0,|L1.296|
;;;110        x0 *= GUI_Context.AA_Factor;
000110  4817              LDR      r0,|L1.368|
000112  f890005c          LDRB     r0,[r0,#0x5c]  ; GUI_Context
000116  4345              MULS     r5,r0,r5
;;;111        y0 *= GUI_Context.AA_Factor;
000118  4815              LDR      r0,|L1.368|
00011a  f890005c          LDRB     r0,[r0,#0x5c]  ; GUI_Context
00011e  4346              MULS     r6,r0,r6
;;;112        r  *= GUI_Context.AA_Factor;
000120  4813              LDR      r0,|L1.368|
000122  f890005c          LDRB     r0,[r0,#0x5c]  ; GUI_Context
000126  4344              MULS     r4,r0,r4
                  |L1.296|
;;;113      }
;;;114      #if (GUI_WINSUPPORT)
;;;115        Rect.x0 = GUI_AA_HiRes2Pixel(x0 - r);
000128  1b28              SUBS     r0,r5,r4
00012a  f7fffffe          BL       GUI_AA_HiRes2Pixel
00012e  f8ad0000          STRH     r0,[sp,#0]
;;;116        Rect.x1 = GUI_AA_HiRes2Pixel(x0 + r);
000132  1928              ADDS     r0,r5,r4
000134  f7fffffe          BL       GUI_AA_HiRes2Pixel
000138  f8ad0004          STRH     r0,[sp,#4]
;;;117        Rect.y0 = GUI_AA_HiRes2Pixel(y0 - r);
00013c  1b30              SUBS     r0,r6,r4
00013e  f7fffffe          BL       GUI_AA_HiRes2Pixel
000142  f8ad0002          STRH     r0,[sp,#2]
;;;118        Rect.y1 = GUI_AA_HiRes2Pixel(y0 + r);
000146  1930              ADDS     r0,r6,r4
000148  f7fffffe          BL       GUI_AA_HiRes2Pixel
00014c  f8ad0006          STRH     r0,[sp,#6]
;;;119        WM_ITERATE_START(&Rect); {
000150  4668              MOV      r0,sp
000152  f7fffffe          BL       WM__InitIVRSearch
000156  b148              CBZ      r0,|L1.364|
000158  bf00              NOP      
                  |L1.346|
;;;120      #endif
;;;121      GL_FillCircleAA_HiRes(x0, y0, r);
00015a  4622              MOV      r2,r4
00015c  4631              MOV      r1,r6
00015e  4628              MOV      r0,r5
000160  f7fffffe          BL       GL_FillCircleAA_HiRes
;;;122      #if (GUI_WINSUPPORT)
;;;123        } WM_ITERATE_END();
000164  f7fffffe          BL       WM__GetNextIVR
000168  2800              CMP      r0,#0
00016a  d1f6              BNE      |L1.346|
                  |L1.364|
;;;124      #endif
;;;125      GUI_UNLOCK();
;;;126    }
00016c  bd7c              POP      {r2-r6,pc}
;;;127    
                          ENDP

00016e  0000              DCW      0x0000
                  |L1.368|
                          DCD      GUI_Context

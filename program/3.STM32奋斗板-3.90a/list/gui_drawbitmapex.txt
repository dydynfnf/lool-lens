; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\gui_drawbitmapex.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\gui_drawbitmapex.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\gui_drawbitmapex.crf GUI\Core\GUI_DrawBitmapEx.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  GL_DrawBitmapEx PROC
;;;32     */
;;;33     static void GL_DrawBitmapEx(const GUI_BITMAP GUI_UNI_PTR * pBitmap, int x0, int y0,
000000  e92d4fff          PUSH     {r0-r11,lr}
;;;34                                 int xCenter, int yCenter, int xMag, int yMag) {
000004  b08f              SUB      sp,sp,#0x3c
000006  4604              MOV      r4,r0
000008  460d              MOV      r5,r1
;;;35       LCD_PIXELINDEX Index, IndexPrev = 0;
00000a  f04f0000          MOV      r0,#0
00000e  900e              STR      r0,[sp,#0x38]
;;;36       LCD_COLOR Color;
;;;37       int x, y, xi, yi, xSize, ySize, xAct, xStart, xMagAbs, xiMag, yMin, yMax, yEnd, yPrev, yStep;
;;;38       char Cached, HasTrans = 0;
000010  9001              STR      r0,[sp,#4]
;;;39       /* Use clipping rect to reduce calculation */
;;;40       yMin = GUI_Context.ClipRect.y0;
000012  48d2              LDR      r0,|L1.860|
000014  f9b00006          LDRSH    r0,[r0,#6]
000018  9006              STR      r0,[sp,#0x18]
;;;41       yMax = GUI_Context.ClipRect.y1;
00001a  48d0              LDR      r0,|L1.860|
00001c  f9b0000a          LDRSH    r0,[r0,#0xa]
000020  9005              STR      r0,[sp,#0x14]
;;;42       /* Init some values */
;;;43       xSize    = pBitmap->XSize;
000022  8820              LDRH     r0,[r4,#0]
000024  900b              STR      r0,[sp,#0x2c]
;;;44       ySize    = pBitmap->YSize;
000026  8860              LDRH     r0,[r4,#2]
000028  900a              STR      r0,[sp,#0x28]
;;;45       xMagAbs  = ((xMag < 0) ? -xMag : xMag);
00002a  981d              LDR      r0,[sp,#0x74]
00002c  2800              CMP      r0,#0
00002e  da03              BGE      |L1.56|
000030  981d              LDR      r0,[sp,#0x74]
000032  f1c00000          RSB      r0,r0,#0
000036  e000              B        |L1.58|
                  |L1.56|
000038  981d              LDR      r0,[sp,#0x74]
                  |L1.58|
00003a  9008              STR      r0,[sp,#0x20]
;;;46       x0      -= (I32)((xMag < 0) ? xSize - xCenter - 1 : xCenter) * (I32)(xMagAbs) / (I32)(1000);
00003c  981d              LDR      r0,[sp,#0x74]
00003e  2800              CMP      r0,#0
000040  da06              BGE      |L1.80|
000042  9912              LDR      r1,[sp,#0x48]
000044  980b              LDR      r0,[sp,#0x2c]
000046  eba00001          SUB      r0,r0,r1
00004a  f1a00001          SUB      r0,r0,#1
00004e  e000              B        |L1.82|
                  |L1.80|
000050  9812              LDR      r0,[sp,#0x48]
                  |L1.82|
000052  9908              LDR      r1,[sp,#0x20]
000054  4348              MULS     r0,r1,r0
000056  f44f717a          MOV      r1,#0x3e8
00005a  fb90f0f1          SDIV     r0,r0,r1
00005e  eba50500          SUB      r5,r5,r0
;;;47       yEnd     = y0 + GUI__DivideRound32(((I32)(-yCenter) * (I32)(yMag)), 1000);
000062  991c              LDR      r1,[sp,#0x70]
000064  f1c10100          RSB      r1,r1,#0
000068  9a1e              LDR      r2,[sp,#0x78]
00006a  fb01f002          MUL      r0,r1,r2
00006e  f44f717a          MOV      r1,#0x3e8
000072  f7fffffe          BL       GUI__DivideRound32
000076  9911              LDR      r1,[sp,#0x44]
000078  eb000b01          ADD      r11,r0,r1
;;;48       yPrev    = yEnd + 1;
00007c  f10b0001          ADD      r0,r11,#1
000080  9004              STR      r0,[sp,#0x10]
;;;49       yStep = (yMag < 0) ? -1 : 1;
000082  981e              LDR      r0,[sp,#0x78]
000084  2800              CMP      r0,#0
000086  da02              BGE      |L1.142|
000088  f04f30ff          MOV      r0,#0xffffffff
00008c  e001              B        |L1.146|
                  |L1.142|
00008e  f04f0001          MOV      r0,#1
                  |L1.146|
000092  9003              STR      r0,[sp,#0xc]
;;;50       if (pBitmap->pPal) {
000094  68e0              LDR      r0,[r4,#0xc]
000096  b128              CBZ      r0,|L1.164|
;;;51         if (pBitmap->pPal->HasTrans) {
000098  68e0              LDR      r0,[r4,#0xc]
00009a  7900              LDRB     r0,[r0,#4]
00009c  b110              CBZ      r0,|L1.164|
;;;52           HasTrans = 1;
00009e  f04f0001          MOV      r0,#1
0000a2  9001              STR      r0,[sp,#4]
                  |L1.164|
;;;53         }
;;;54       }
;;;55       for (yi = 0; yi < ySize; yi++) {
0000a4  f04f0900          MOV      r9,#0
0000a8  e0b0              B        |L1.524|
                  |L1.170|
;;;56         y = yEnd;
0000aa  465e              MOV      r6,r11
;;;57         yEnd = y0 + GUI__DivideRound32(((I32)(yi + 1 - yCenter) * (I32)(yMag)), 1000);
0000ac  f1090101          ADD      r1,r9,#1
0000b0  9a1c              LDR      r2,[sp,#0x70]
0000b2  eba10102          SUB      r1,r1,r2
0000b6  9a1e              LDR      r2,[sp,#0x78]
0000b8  fb01f002          MUL      r0,r1,r2
0000bc  f44f717a          MOV      r1,#0x3e8
0000c0  f7fffffe          BL       GUI__DivideRound32
0000c4  9911              LDR      r1,[sp,#0x44]
0000c6  eb000b01          ADD      r11,r0,r1
;;;58         if (y != yPrev) {
0000ca  9804              LDR      r0,[sp,#0x10]
0000cc  4286              CMP      r6,r0
0000ce  d07d              BEQ      |L1.460|
;;;59           yPrev = y;
0000d0  9604              STR      r6,[sp,#0x10]
;;;60           do {
0000d2  bf00              NOP      
                  |L1.212|
;;;61             if ((y >= yMin) && (y <= yMax)) {
0000d4  9806              LDR      r0,[sp,#0x18]
0000d6  4286              CMP      r6,r0
0000d8  db79              BLT      |L1.462|
0000da  9805              LDR      r0,[sp,#0x14]
0000dc  4286              CMP      r6,r0
0000de  dc76              BGT      |L1.462|
;;;62               xStart = -1;
0000e0  f04f3aff          MOV      r10,#0xffffffff
;;;63               x      =  0;
0000e4  f04f0800          MOV      r8,#0
;;;64               xiMag  =  0;
0000e8  4640              MOV      r0,r8
0000ea  9007              STR      r0,[sp,#0x1c]
;;;65               Cached =  0;
0000ec  9002              STR      r0,[sp,#8]
;;;66               for (xi = 0; xi < xSize; xi++) {
0000ee  900c              STR      r0,[sp,#0x30]
0000f0  e066              B        |L1.448|
                  |L1.242|
;;;67                 xiMag += xMagAbs;
0000f2  e9dd0107          LDRD     r0,r1,[sp,#0x1c]
0000f6  4408              ADD      r0,r0,r1
0000f8  9007              STR      r0,[sp,#0x1c]
;;;68                 if (xiMag >= 1000) {
0000fa  9807              LDR      r0,[sp,#0x1c]
0000fc  f5b07f7a          CMP      r0,#0x3e8
000100  db5a              BLT      |L1.440|
;;;69                   xAct  = (xMag > 0) ? xi : xSize - xi - 1;
000102  981d              LDR      r0,[sp,#0x74]
000104  2800              CMP      r0,#0
000106  dd01              BLE      |L1.268|
000108  980c              LDR      r0,[sp,#0x30]
00010a  e005              B        |L1.280|
                  |L1.268|
00010c  e9dd010b          LDRD     r0,r1,[sp,#0x2c]
000110  eba00001          SUB      r0,r0,r1
000114  f1a00001          SUB      r0,r0,#1
                  |L1.280|
000118  9009              STR      r0,[sp,#0x24]
;;;70                   Index = GUI_GetBitmapPixelIndex(pBitmap, xAct, yi);
00011a  464a              MOV      r2,r9
00011c  4620              MOV      r0,r4
00011e  9909              LDR      r1,[sp,#0x24]
000120  f7fffffe          BL       GUI_GetBitmapPixelIndex
000124  b287              UXTH     r7,r0
;;;71                   if (Index != IndexPrev || xStart == -1) {
000126  980e              LDR      r0,[sp,#0x38]
000128  4287              CMP      r7,r0
00012a  d102              BNE      |L1.306|
00012c  f11a0001          ADDS     r0,r10,#1
000130  d137              BNE      |L1.418|
                  |L1.306|
;;;72                     if ((Index == 0) && HasTrans) {
000132  b97f              CBNZ     r7,|L1.340|
000134  9801              LDR      r0,[sp,#4]
000136  b168              CBZ      r0,|L1.340|
;;;73                       /* Transparent color ... clear cache */
;;;74                       if (Cached) {
000138  9802              LDR      r0,[sp,#8]
00013a  b388              CBZ      r0,|L1.416|
;;;75                         LCD_DrawHLine(x0 + xStart, y, x0 + x - 1);
00013c  eb050108          ADD      r1,r5,r8
000140  1e4a              SUBS     r2,r1,#1
000142  eb05000a          ADD      r0,r5,r10
000146  4631              MOV      r1,r6
000148  f7fffffe          BL       LCD_DrawHLine
;;;76                         Cached = 0;
00014c  f04f0000          MOV      r0,#0
000150  9002              STR      r0,[sp,#8]
000152  e025              B        |L1.416|
                  |L1.340|
;;;77                       }
;;;78                     } else {
;;;79                       /* Another color ... draw contents of cache */
;;;80                       if (Cached && xStart != -1) {
000154  9802              LDR      r0,[sp,#8]
000156  b150              CBZ      r0,|L1.366|
000158  f11a0001          ADDS     r0,r10,#1
00015c  d007              BEQ      |L1.366|
;;;81                         LCD_DrawHLine(x0 + xStart, y, x0 + x - 1);
00015e  eb050108          ADD      r1,r5,r8
000162  1e4a              SUBS     r2,r1,#1
000164  eb05000a          ADD      r0,r5,r10
000168  4631              MOV      r1,r6
00016a  f7fffffe          BL       LCD_DrawHLine
                  |L1.366|
;;;82                       }
;;;83                       xStart    = x;
00016e  46c2              MOV      r10,r8
;;;84                       Cached    = 1;
000170  f04f0001          MOV      r0,#1
000174  9002              STR      r0,[sp,#8]
;;;85                       if (pBitmap->pMethods) {
000176  6920              LDR      r0,[r4,#0x10]
000178  b128              CBZ      r0,|L1.390|
;;;86                         Color = pBitmap->pMethods->pfIndex2Color(Index);
00017a  6920              LDR      r0,[r4,#0x10]
00017c  6841              LDR      r1,[r0,#4]
00017e  4638              MOV      r0,r7
000180  4788              BLX      r1
000182  900d              STR      r0,[sp,#0x34]
000184  e004              B        |L1.400|
                  |L1.390|
;;;87                       } else {
;;;88                         Color = pBitmap->pPal->pPalEntries[Index];
000186  68e0              LDR      r0,[r4,#0xc]
000188  6880              LDR      r0,[r0,#8]
00018a  f8500027          LDR      r0,[r0,r7,LSL #2]
00018e  900d              STR      r0,[sp,#0x34]
                  |L1.400|
;;;89                       }
;;;90                       LCD_SetColorIndex(LCDDEV_L0_Color2Index(Color));
000190  4872              LDR      r0,|L1.860|
000192  6c80              LDR      r0,[r0,#0x48]  ; GUI_Context
000194  6801              LDR      r1,[r0,#0]
000196  980d              LDR      r0,[sp,#0x34]
000198  4788              BLX      r1
00019a  9000              STR      r0,[sp,#0]
00019c  f7fffffe          BL       LCD_SetColorIndex
                  |L1.416|
;;;91                     }
;;;92                     IndexPrev = Index;
0001a0  970e              STR      r7,[sp,#0x38]
                  |L1.418|
;;;93                   }
;;;94                   do {
0001a2  bf00              NOP      
                  |L1.420|
;;;95                     x++;
0001a4  f1080801          ADD      r8,r8,#1
;;;96                     xiMag -= 1000;
0001a8  9807              LDR      r0,[sp,#0x1c]
0001aa  f5a0707a          SUB      r0,r0,#0x3e8
0001ae  9007              STR      r0,[sp,#0x1c]
;;;97                   } while (xiMag >= 1000);
0001b0  9807              LDR      r0,[sp,#0x1c]
0001b2  f5b07f7a          CMP      r0,#0x3e8
0001b6  daf5              BGE      |L1.420|
                  |L1.440|
0001b8  980c              LDR      r0,[sp,#0x30]         ;66
0001ba  f1000001          ADD      r0,r0,#1              ;66
0001be  900c              STR      r0,[sp,#0x30]         ;66
                  |L1.448|
0001c0  e9dd100b          LDRD     r1,r0,[sp,#0x2c]      ;66
0001c4  4288              CMP      r0,r1                 ;66
0001c6  db94              BLT      |L1.242|
;;;98                 }
;;;99               }
;;;100              /* Clear cache */
;;;101              if (Cached) {
0001c8  9802              LDR      r0,[sp,#8]
0001ca  e001              B        |L1.464|
                  |L1.460|
0001cc  e01c              B        |L1.520|
                  |L1.462|
0001ce  e008              B        |L1.482|
                  |L1.464|
0001d0  b138              CBZ      r0,|L1.482|
;;;102                LCD_DrawHLine(x0 + xStart, y, x0 + x - 1);
0001d2  eb050108          ADD      r1,r5,r8
0001d6  1e4a              SUBS     r2,r1,#1
0001d8  eb05000a          ADD      r0,r5,r10
0001dc  4631              MOV      r1,r6
0001de  f7fffffe          BL       LCD_DrawHLine
                  |L1.482|
;;;103              }
;;;104            }
;;;105            y += yStep;
0001e2  9803              LDR      r0,[sp,#0xc]
0001e4  4406              ADD      r6,r6,r0
;;;106          } while ((yMag < 0) ? (y > yEnd) : (y < yEnd));
0001e6  981e              LDR      r0,[sp,#0x78]
0001e8  2800              CMP      r0,#0
0001ea  da05              BGE      |L1.504|
0001ec  455e              CMP      r6,r11
0001ee  dd01              BLE      |L1.500|
0001f0  2001              MOVS     r0,#1
0001f2  e006              B        |L1.514|
                  |L1.500|
0001f4  2000              MOVS     r0,#0
0001f6  e004              B        |L1.514|
                  |L1.504|
0001f8  455e              CMP      r6,r11
0001fa  da01              BGE      |L1.512|
0001fc  2001              MOVS     r0,#1
0001fe  e000              B        |L1.514|
                  |L1.512|
000200  2000              MOVS     r0,#0
                  |L1.514|
000202  2800              CMP      r0,#0
000204  f47faf66          BNE      |L1.212|
                  |L1.520|
000208  f1090901          ADD      r9,r9,#1              ;55
                  |L1.524|
00020c  980a              LDR      r0,[sp,#0x28]         ;55
00020e  4581              CMP      r9,r0                 ;55
000210  f6ffaf4b          BLT      |L1.170|
;;;107        }
;;;108      }
;;;109    }
000214  b013              ADD      sp,sp,#0x4c
000216  e8bd8ff0          POP      {r4-r11,pc}
;;;110    
                          ENDP

                  GUI_DrawBitmapEx PROC
;;;120    */
;;;121    void GUI_DrawBitmapEx(const GUI_BITMAP GUI_UNI_PTR * pBitmap, int x0, int y0,
00021a  e92d4ff0          PUSH     {r4-r11,lr}
;;;122                          int xCenter, int yCenter, int xMag, int yMag) {
00021e  b085              SUB      sp,sp,#0x14
000220  4680              MOV      r8,r0
000222  460c              MOV      r4,r1
000224  4615              MOV      r5,r2
000226  4699              MOV      r9,r3
000228  e9dda60e          LDRD     r10,r6,[sp,#0x38]
00022c  9f10              LDR      r7,[sp,#0x40]
;;;123      GUI_COLOR OldColor;
;;;124      #if (GUI_WINSUPPORT)
;;;125        GUI_RECT r;
;;;126      #endif
;;;127      GUI_LOCK();
;;;128      OldColor = GUI_GetColor();
00022e  f7fffffe          BL       GUI_GetColor
000232  4683              MOV      r11,r0
;;;129      #if (GUI_WINSUPPORT)
;;;130        WM_ADDORG(x0, y0);
000234  4849              LDR      r0,|L1.860|
000236  6c00              LDR      r0,[r0,#0x40]  ; GUI_Context
000238  4404              ADD      r4,r4,r0
00023a  4848              LDR      r0,|L1.860|
00023c  6c40              LDR      r0,[r0,#0x44]  ; GUI_Context
00023e  4405              ADD      r5,r5,r0
;;;131        if (xMag >= 0) {
000240  2e00              CMP      r6,#0
000242  db1c              BLT      |L1.638|
;;;132          r.x0 = x0 + GUI__DivideRound32(((I32)(-xCenter) * (I32)(xMag)), 1000);
000244  f1c90100          RSB      r1,r9,#0
000248  fb01f006          MUL      r0,r1,r6
00024c  f44f717a          MOV      r1,#0x3e8
000250  f7fffffe          BL       GUI__DivideRound32
000254  4420              ADD      r0,r0,r4
000256  b200              SXTH     r0,r0
000258  f8ad000c          STRH     r0,[sp,#0xc]
;;;133          r.x1 = x0 + GUI__DivideRound32(((I32)(pBitmap->XSize - xCenter - 1) * (I32)(xMag)), 1000);
00025c  f8b81000          LDRH     r1,[r8,#0]
000260  eba10109          SUB      r1,r1,r9
000264  f1a10101          SUB      r1,r1,#1
000268  fb01f006          MUL      r0,r1,r6
00026c  f44f717a          MOV      r1,#0x3e8
000270  f7fffffe          BL       GUI__DivideRound32
000274  4420              ADD      r0,r0,r4
000276  b200              SXTH     r0,r0
000278  f8ad0010          STRH     r0,[sp,#0x10]
00027c  e01b              B        |L1.694|
                  |L1.638|
;;;134        } else {
;;;135          r.x1 = x0 + GUI__DivideRound32(((I32)(-xCenter) * (I32)(xMag)), 1000);
00027e  f1c90100          RSB      r1,r9,#0
000282  fb01f006          MUL      r0,r1,r6
000286  f44f717a          MOV      r1,#0x3e8
00028a  f7fffffe          BL       GUI__DivideRound32
00028e  4420              ADD      r0,r0,r4
000290  b200              SXTH     r0,r0
000292  f8ad0010          STRH     r0,[sp,#0x10]
;;;136          r.x0 = x0 + GUI__DivideRound32(((I32)(pBitmap->XSize - xCenter - 1) * (I32)(xMag)), 1000);
000296  f8b81000          LDRH     r1,[r8,#0]
00029a  eba10109          SUB      r1,r1,r9
00029e  f1a10101          SUB      r1,r1,#1
0002a2  fb01f006          MUL      r0,r1,r6
0002a6  f44f717a          MOV      r1,#0x3e8
0002aa  f7fffffe          BL       GUI__DivideRound32
0002ae  4420              ADD      r0,r0,r4
0002b0  b200              SXTH     r0,r0
0002b2  f8ad000c          STRH     r0,[sp,#0xc]
                  |L1.694|
;;;137        }
;;;138        if (yMag >= 0) {
0002b6  2f00              CMP      r7,#0
0002b8  db1c              BLT      |L1.756|
;;;139          r.y0 = y0 + GUI__DivideRound32(((I32)(-yCenter) * (I32)(yMag)), 1000);
0002ba  f1ca0100          RSB      r1,r10,#0
0002be  fb01f007          MUL      r0,r1,r7
0002c2  f44f717a          MOV      r1,#0x3e8
0002c6  f7fffffe          BL       GUI__DivideRound32
0002ca  4428              ADD      r0,r0,r5
0002cc  b200              SXTH     r0,r0
0002ce  f8ad000e          STRH     r0,[sp,#0xe]
;;;140          r.y1 = y0 + GUI__DivideRound32(((I32)(pBitmap->YSize - yCenter - 1) * (I32)(yMag)), 1000);
0002d2  f8b81002          LDRH     r1,[r8,#2]
0002d6  eba1010a          SUB      r1,r1,r10
0002da  f1a10101          SUB      r1,r1,#1
0002de  fb01f007          MUL      r0,r1,r7
0002e2  f44f717a          MOV      r1,#0x3e8
0002e6  f7fffffe          BL       GUI__DivideRound32
0002ea  4428              ADD      r0,r0,r5
0002ec  b200              SXTH     r0,r0
0002ee  f8ad0012          STRH     r0,[sp,#0x12]
0002f2  e01b              B        |L1.812|
                  |L1.756|
;;;141        } else {
;;;142          r.y1 = y0 + GUI__DivideRound32(((I32)(-yCenter) * (I32)(yMag)), 1000);
0002f4  f1ca0100          RSB      r1,r10,#0
0002f8  fb01f007          MUL      r0,r1,r7
0002fc  f44f717a          MOV      r1,#0x3e8
000300  f7fffffe          BL       GUI__DivideRound32
000304  4428              ADD      r0,r0,r5
000306  b200              SXTH     r0,r0
000308  f8ad0012          STRH     r0,[sp,#0x12]
;;;143          r.y0 = y0 + GUI__DivideRound32(((I32)(pBitmap->YSize - yCenter - 1) * (I32)(yMag)), 1000);
00030c  f8b81002          LDRH     r1,[r8,#2]
000310  eba1010a          SUB      r1,r1,r10
000314  f1a10101          SUB      r1,r1,#1
000318  fb01f007          MUL      r0,r1,r7
00031c  f44f717a          MOV      r1,#0x3e8
000320  f7fffffe          BL       GUI__DivideRound32
000324  4428              ADD      r0,r0,r5
000326  b200              SXTH     r0,r0
000328  f8ad000e          STRH     r0,[sp,#0xe]
                  |L1.812|
;;;144        }
;;;145        WM_ITERATE_START(&r) {
00032c  a803              ADD      r0,sp,#0xc
00032e  f7fffffe          BL       WM__InitIVRSearch
000332  b168              CBZ      r0,|L1.848|
000334  bf00              NOP      
                  |L1.822|
;;;146      #endif
;;;147      GL_DrawBitmapEx(pBitmap, x0, y0, xCenter, yCenter, xMag, yMag);
000336  464b              MOV      r3,r9
000338  462a              MOV      r2,r5
00033a  4621              MOV      r1,r4
00033c  4640              MOV      r0,r8
00033e  e9cda600          STRD     r10,r6,[sp,#0]
000342  9702              STR      r7,[sp,#8]
000344  f7fffffe          BL       GL_DrawBitmapEx
;;;148      #if (GUI_WINSUPPORT)
;;;149        } WM_ITERATE_END();
000348  f7fffffe          BL       WM__GetNextIVR
00034c  2800              CMP      r0,#0
00034e  d1f2              BNE      |L1.822|
                  |L1.848|
;;;150      #endif
;;;151      GUI_SetColor(OldColor);
000350  4658              MOV      r0,r11
000352  f7fffffe          BL       GUI_SetColor
;;;152      GUI_UNLOCK();
;;;153    }
000356  b005              ADD      sp,sp,#0x14
000358  e8bd8ff0          POP      {r4-r11,pc}
;;;154    
                          ENDP

                  |L1.860|
                          DCD      GUI_Context

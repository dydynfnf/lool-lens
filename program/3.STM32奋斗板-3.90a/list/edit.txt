; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\edit.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\edit.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\edit.crf GUI\Widget\EDIT.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _Paint PROC
;;;151    */
;;;152    static void _Paint(EDIT_Obj* pObj, EDIT_Handle hObj) {
000000  e92d4ff0          PUSH     {r4-r11,lr}
000004  b08d              SUB      sp,sp,#0x34
000006  4604              MOV      r4,r0
000008  4689              MOV      r9,r1
;;;153      GUI_RECT rFillRect, rInside, r, rText, rInvert;
;;;154      const char GUI_UNI_PTR * pText = NULL;
00000a  f04f0600          MOV      r6,#0
;;;155      int IsEnabled, CursorWidth;
;;;156      IsEnabled = WM__IsEnabled(hObj);
00000e  4648              MOV      r0,r9
000010  f7fffffe          BL       WM__IsEnabled
000014  4682              MOV      r10,r0
;;;157      /* Set colors and font */
;;;158      LCD_SetBkColor(pObj->Props.aBkColor[IsEnabled]);
000016  f1040168          ADD      r1,r4,#0x68
00001a  f851002a          LDR      r0,[r1,r10,LSL #2]
00001e  f7fffffe          BL       LCD_SetBkColor
;;;159      LCD_SetColor(pObj->Props.aTextColor[0]);
000022  6e20              LDR      r0,[r4,#0x60]
000024  f7fffffe          BL       LCD_SetColor
;;;160      GUI_SetFont(pObj->Props.pFont);
000028  6de0              LDR      r0,[r4,#0x5c]
00002a  f7fffffe          BL       GUI_SetFont
;;;161      /* Calculate size */
;;;162      WM__GetClientRectWin(&pObj->Widget.Win, &r);
00002e  a907              ADD      r1,sp,#0x1c
000030  4620              MOV      r0,r4
000032  f7fffffe          BL       WM__GetClientRectWin
;;;163      WIDGET__GetInsideRect(&pObj->Widget, &rFillRect);
000036  a90b              ADD      r1,sp,#0x2c
000038  4620              MOV      r0,r4
00003a  f7fffffe          BL       WIDGET__GetInsideRect
;;;164      if (pObj->hpText) {
00003e  8d20              LDRH     r0,[r4,#0x28]
000040  b120              CBZ      r0,|L1.76|
;;;165        pText = (const char*) GUI_ALLOC_h2p(pObj->hpText);
000042  f9b40028          LDRSH    r0,[r4,#0x28]
000046  f7fffffe          BL       GUI_ALLOC_h2p
00004a  4606              MOV      r6,r0
                  |L1.76|
;;;166      }
;;;167      rInside = rFillRect;
00004c  e9dd010b          LDRD     r0,r1,[sp,#0x2c]
000050  e9cd0109          STRD     r0,r1,[sp,#0x24]
;;;168      rInside.x0 += pObj->Props.Border + EDIT_XOFF;
000054  f8bd1024          LDRH     r1,[sp,#0x24]
000058  6da0              LDR      r0,[r4,#0x58]
00005a  f1000001          ADD      r0,r0,#1
00005e  4408              ADD      r0,r0,r1
000060  b200              SXTH     r0,r0
000062  f8ad0024          STRH     r0,[sp,#0x24]
;;;169      rInside.x1 -= pObj->Props.Border + EDIT_XOFF;
000066  f8bd1028          LDRH     r1,[sp,#0x28]
00006a  6da0              LDR      r0,[r4,#0x58]
00006c  f1000001          ADD      r0,r0,#1
000070  eba10000          SUB      r0,r1,r0
000074  b200              SXTH     r0,r0
000076  f8ad0028          STRH     r0,[sp,#0x28]
;;;170      GUI__CalcTextRect(pText, &rInside, &rText, pObj->Props.Align);
00007a  aa05              ADD      r2,sp,#0x14
00007c  a909              ADD      r1,sp,#0x24
00007e  4630              MOV      r0,r6
000080  6d63              LDR      r3,[r4,#0x54]
000082  f7fffffe          BL       GUI__CalcTextRect
;;;171      /* Calculate position and size of cursor */
;;;172      if (pObj->Widget.State & WIDGET_STATE_FOCUS) {
000086  8ce0              LDRH     r0,[r4,#0x26]
000088  f0100f01          TST      r0,#1
00008c  d062              BEQ      |L1.340|
;;;173        const char GUI_UNI_PTR * p = pText;
00008e  9602              STR      r6,[sp,#8]
;;;174        CursorWidth = ((pObj->XSizeCursor > 0) ? (pObj->XSizeCursor) : (1));
000090  f8940049          LDRB     r0,[r4,#0x49]
000094  2800              CMP      r0,#0
000096  dd02              BLE      |L1.158|
000098  f8940049          LDRB     r0,[r4,#0x49]
00009c  e001              B        |L1.162|
                  |L1.158|
00009e  f04f0001          MOV      r0,#1
                  |L1.162|
0000a2  4607              MOV      r7,r0
;;;175        if (pText) {
0000a4  2e00              CMP      r6,#0
0000a6  d054              BEQ      |L1.338|
;;;176          U16 Char;
;;;177          int i;
;;;178    	//  pObj->SelSize = 3;	//houhh 20061023...
;;;179          if ((pObj->EditMode != GUI_EDIT_MODE_INSERT) || (pObj->SelSize)) {
0000a8  f8940048          LDRB     r0,[r4,#0x48]
0000ac  b910              CBNZ     r0,|L1.180|
0000ae  6c60              LDR      r0,[r4,#0x44]
0000b0  2800              CMP      r0,#0
0000b2  d034              BEQ      |L1.286|
                  |L1.180|
;;;180            int NumChars, CursorOffset;
;;;181            NumChars = GUI__GetNumChars(pText);
0000b4  4630              MOV      r0,r6
0000b6  f7fffffe          BL       GUI__GetNumChars
0000ba  4683              MOV      r11,r0
;;;182            if (pObj->CursorPos < NumChars) {
0000bc  6c20              LDR      r0,[r4,#0x40]
0000be  4558              CMP      r0,r11
0000c0  da2c              BGE      |L1.284|
;;;183              if (pObj->SelSize) {
0000c2  6c60              LDR      r0,[r4,#0x44]
0000c4  b1e0              CBZ      r0,|L1.256|
;;;184                CursorWidth = 0;
0000c6  f04f0700          MOV      r7,#0
;;;185                for (i = pObj->CursorPos; i < (int)(pObj->CursorPos + pObj->SelSize); i++) {
0000ca  6c25              LDR      r5,[r4,#0x40]
0000cc  e00f              B        |L1.238|
                  |L1.206|
;;;186                  CursorOffset = GUI_UC__NumChars2NumBytes(pText, i);
0000ce  4629              MOV      r1,r5
0000d0  4630              MOV      r0,r6
0000d2  f7fffffe          BL       GUI_UC__NumChars2NumBytes
0000d6  4680              MOV      r8,r0
;;;187                  Char         = GUI_UC_GetCharCode      (pText + CursorOffset);
0000d8  eb060008          ADD      r0,r6,r8
0000dc  f7fffffe          BL       GUI_UC_GetCharCode
0000e0  9001              STR      r0,[sp,#4]
;;;188                  CursorWidth += GUI_GetCharDistX        (Char);
0000e2  9801              LDR      r0,[sp,#4]
0000e4  f7fffffe          BL       GUI_GetCharDistX
0000e8  4407              ADD      r7,r7,r0
0000ea  f1050501          ADD      r5,r5,#1              ;185
                  |L1.238|
0000ee  e9d40110          LDRD     r0,r1,[r4,#0x40]      ;185
0000f2  4408              ADD      r0,r0,r1              ;185
0000f4  42a8              CMP      r0,r5                 ;185
0000f6  dcea              BGT      |L1.206|
;;;189                }
;;;190                if (!CursorWidth) {
0000f8  b987              CBNZ     r7,|L1.284|
;;;191                  CursorWidth = 1;
0000fa  f04f0701          MOV      r7,#1
0000fe  e00d              B        |L1.284|
                  |L1.256|
;;;192                }
;;;193              } else {
;;;194                CursorOffset = GUI_UC__NumChars2NumBytes(pText, pObj->CursorPos);
000100  4630              MOV      r0,r6
000102  6c21              LDR      r1,[r4,#0x40]
000104  f7fffffe          BL       GUI_UC__NumChars2NumBytes
000108  4680              MOV      r8,r0
;;;195                Char = GUI_UC_GetCharCode(pText + CursorOffset);
00010a  eb060008          ADD      r0,r6,r8
00010e  f7fffffe          BL       GUI_UC_GetCharCode
000112  9001              STR      r0,[sp,#4]
;;;196                CursorWidth = GUI_GetCharDistX(Char);
000114  9801              LDR      r0,[sp,#4]
000116  f7fffffe          BL       GUI_GetCharDistX
00011a  4607              MOV      r7,r0
                  |L1.284|
;;;197              }
;;;198            }
;;;199          }
00011c  bf00              NOP      
                  |L1.286|
;;;200          rInvert = rText;
00011e  e9dd0105          LDRD     r0,r1,[sp,#0x14]
000122  e9cd0103          STRD     r0,r1,[sp,#0xc]
;;;201          for (i = 0; i != pObj->CursorPos; i++) {
000126  f04f0500          MOV      r5,#0
00012a  e00e              B        |L1.330|
                  |L1.300|
;;;202            Char = GUI_UC__GetCharCodeInc(&p);
00012c  a802              ADD      r0,sp,#8
00012e  f7fffffe          BL       GUI_UC__GetCharCodeInc
000132  9001              STR      r0,[sp,#4]
;;;203            rInvert.x0 += GUI_GetCharDistX(Char);
000134  9801              LDR      r0,[sp,#4]
000136  f7fffffe          BL       GUI_GetCharDistX
00013a  f8bd100c          LDRH     r1,[sp,#0xc]
00013e  4408              ADD      r0,r0,r1
000140  b200              SXTH     r0,r0
000142  f8ad000c          STRH     r0,[sp,#0xc]
000146  f1050501          ADD      r5,r5,#1              ;201
                  |L1.330|
00014a  6c20              LDR      r0,[r4,#0x40]         ;201
00014c  42a8              CMP      r0,r5                 ;201
00014e  d1ed              BNE      |L1.300|
;;;204          }
;;;205        }
000150  bf00              NOP      
                  |L1.338|
;;;206      }
000152  bf00              NOP      
                  |L1.340|
;;;207      /* WM loop */
;;;208      WM_ITERATE_START(NULL) {
000154  2000              MOVS     r0,#0
000156  f7fffffe          BL       WM__InitIVRSearch
00015a  2800              CMP      r0,#0
00015c  d05a              BEQ      |L1.532|
00015e  bf00              NOP      
                  |L1.352|
;;;209        /* Set clipping rectangle */
;;;210        WM_SetUserClipRect(&rFillRect);
000160  a80b              ADD      r0,sp,#0x2c
000162  f7fffffe          BL       WM_SetUserClipRect
;;;211        /* Display text */
;;;212        WIDGET__FillStringInRect(pText, &rFillRect, &rInside, &rText);
000166  ab05              ADD      r3,sp,#0x14
000168  aa09              ADD      r2,sp,#0x24
00016a  a90b              ADD      r1,sp,#0x2c
00016c  4630              MOV      r0,r6
00016e  f7fffffe          BL       WIDGET__FillStringInRect
;;;213        /* Display cursor if needed */
;;;214        if (pObj->Widget.State & WIDGET_STATE_FOCUS) {
000172  8ce0              LDRH     r0,[r4,#0x26]
000174  f0100f01          TST      r0,#1
000178  d042              BEQ      |L1.512|
;;;215    		///////////////houhh 20061020...
;;;216    		//  static GUI_TIMER_HANDLE Timer1 = NULL;	//houhh 20061018...
;;;217    		if(!Timer1){
00017a  48fe              LDR      r0,|L1.1396|
00017c  8800              LDRH     r0,[r0,#0]  ; Timer1
00017e  b9b0              CBNZ     r0,|L1.430|
;;;218    			  Timer1 = GUI_TIMER_Create((GUI_TIMER_CALLBACK*)ShowCurrsor, 1000*2, 0, 0);	//houhh 20061018...
000180  2300              MOVS     r3,#0
000182  461a              MOV      r2,r3
000184  f44f61fa          MOV      r1,#0x7d0
000188  48fb              LDR      r0,|L1.1400|
00018a  f7fffffe          BL       GUI_TIMER_Create
00018e  49f9              LDR      r1,|L1.1396|
000190  8008              STRH     r0,[r1,#0]
;;;219    			  GUI_TIMER_SetTime(Timer1, 1000*2);
000192  f44f61fa          MOV      r1,#0x7d0
000196  48f7              LDR      r0,|L1.1396|
000198  f9b00000          LDRSH    r0,[r0,#0]  ; Timer1
00019c  f7fffffe          BL       GUI_TIMER_SetTime
;;;220    			  GUI_TIMER_SetPeriod(Timer1, 500);
0001a0  f44f71fa          MOV      r1,#0x1f4
0001a4  48f3              LDR      r0,|L1.1396|
0001a6  f9b00000          LDRSH    r0,[r0,#0]  ; Timer1
0001aa  f7fffffe          BL       GUI_TIMER_SetPeriod
                  |L1.430|
;;;221    		  }
;;;222    		if(Timer1) GUI_TIMER_Context(Timer1, hObj);
0001ae  48f1              LDR      r0,|L1.1396|
0001b0  8800              LDRH     r0,[r0,#0]  ; Timer1
0001b2  b128              CBZ      r0,|L1.448|
0001b4  4649              MOV      r1,r9
0001b6  48ef              LDR      r0,|L1.1396|
0001b8  f9b00000          LDRSH    r0,[r0,#0]  ; Timer1
0001bc  f7fffffe          BL       GUI_TIMER_Context
                  |L1.448|
;;;223    		if(pObj->CurrsorShow%2) //houhh 20061022...
0001c0  6f20              LDR      r0,[r4,#0x70]
0001c2  eb0071d0          ADD      r1,r0,r0,LSR #31
0001c6  ea4f0161          ASR      r1,r1,#1
0001ca  ebb00141          SUBS     r1,r0,r1,LSL #1
0001ce  d00b              BEQ      |L1.488|
;;;224    		  GUI_InvertRect(rInvert.x0, rInvert.y0, rInvert.x0 + CursorWidth - 1, rInvert.y1);
0001d0  f9bd3012          LDRSH    r3,[sp,#0x12]
0001d4  f9bd500c          LDRSH    r5,[sp,#0xc]
0001d8  443d              ADD      r5,r5,r7
0001da  1e6a              SUBS     r2,r5,#1
0001dc  f9bd100e          LDRSH    r1,[sp,#0xe]
0001e0  f9bd000c          LDRSH    r0,[sp,#0xc]
0001e4  f7fffffe          BL       GUI_InvertRect
                  |L1.488|
;;;225    		/////////////
;;;226    		GUI_InvertRect(rInvert.x0, rInvert.y0, rInvert.x0 + CursorWidth - 1, rInvert.y1);
0001e8  f9bd3012          LDRSH    r3,[sp,#0x12]
0001ec  f9bd500c          LDRSH    r5,[sp,#0xc]
0001f0  443d              ADD      r5,r5,r7
0001f2  1e6a              SUBS     r2,r5,#1
0001f4  f9bd100e          LDRSH    r1,[sp,#0xe]
0001f8  f9bd000c          LDRSH    r0,[sp,#0xc]
0001fc  f7fffffe          BL       GUI_InvertRect
                  |L1.512|
;;;227        }
;;;228        WM_SetUserClipRect(NULL);
000200  2000              MOVS     r0,#0
000202  f7fffffe          BL       WM_SetUserClipRect
;;;229        /* Draw the 3D effect (if configured) */
;;;230        WIDGET__EFFECT_DrawDown(&pObj->Widget);
000206  4620              MOV      r0,r4
000208  f7fffffe          BL       WIDGET__EFFECT_DrawDown
;;;231      } WM_ITERATE_END();
00020c  f7fffffe          BL       WM__GetNextIVR
000210  2800              CMP      r0,#0
000212  d1a5              BNE      |L1.352|
                  |L1.532|
;;;232    }
000214  b00d              ADD      sp,sp,#0x34
000216  e8bd8ff0          POP      {r4-r11,pc}
;;;233    
                          ENDP

                  ShowCurrsor PROC
;;;132    
;;;133    void ShowCurrsor(GUI_TIMER_MESSAGE* TimeMsg)
00021a  e92d41f0          PUSH     {r4-r8,lr}
;;;134    {
00021e  4605              MOV      r5,r0
;;;135    	EDIT_Handle hObj = (EDIT_Handle) TimeMsg->Context;
000220  6868              LDR      r0,[r5,#4]
000222  b206              SXTH     r6,r0
;;;136    	EDIT_Obj*   pObj = (EDIT_Obj*) GUI_ALLOC_h2p(hObj);
000224  4630              MOV      r0,r6
000226  f7fffffe          BL       GUI_ALLOC_h2p
00022a  4604              MOV      r4,r0
;;;137    
;;;138        WM_Obj* pWin = WM_H2P(hObj);
00022c  4630              MOV      r0,r6
00022e  f7fffffe          BL       GUI_ALLOC_h2p
000232  4607              MOV      r7,r0
;;;139    	GUI_DEBUG_LOG("EDIT: _Callback(WM_PAINT)\n");
;;;140        WM_SelectWindow(hObj);
000234  4630              MOV      r0,r6
000236  f7fffffe          BL       WM_SelectWindow
;;;141    	_Paint(pObj, hObj);
00023a  4631              MOV      r1,r6
00023c  4620              MOV      r0,r4
00023e  f7fffffe          BL       _Paint
;;;142    	pObj->CurrsorShow++;
000242  6f20              LDR      r0,[r4,#0x70]
000244  f1000001          ADD      r0,r0,#1
000248  6720              STR      r0,[r4,#0x70]
;;;143    	GUI_TIMER_Restart(Timer1);
00024a  48ca              LDR      r0,|L1.1396|
00024c  f9b00000          LDRSH    r0,[r0,#0]  ; Timer1
000250  f7fffffe          BL       GUI_TIMER_Restart
;;;144    
;;;145    }
000254  e8bd81f0          POP      {r4-r8,pc}
;;;146    ///////
                          ENDP

                  _Delete PROC
;;;237    */
;;;238    static void _Delete(EDIT_Obj* pObj) {
000258  b510              PUSH     {r4,lr}
00025a  4604              MOV      r4,r0
;;;239      GUI_ALLOC_FreePtr(&pObj->hpText);
00025c  f1040028          ADD      r0,r4,#0x28
000260  f7fffffe          BL       GUI_ALLOC_FreePtr
;;;240    }
000264  bd10              POP      {r4,pc}
;;;241    
                          ENDP

                  EDIT__SetCursorPos PROC
;;;433    */
;;;434    void EDIT__SetCursorPos(EDIT_Obj* pObj, int CursorPos) {
000266  e92d41f0          PUSH     {r4-r8,lr}
00026a  4604              MOV      r4,r0
00026c  460d              MOV      r5,r1
;;;435      if (pObj->hpText) {
00026e  8d20              LDRH     r0,[r4,#0x28]
000270  b348              CBZ      r0,|L1.710|
;;;436        char* pText;
;;;437        int NumChars, Offset;
;;;438        pText    = (char*) GUI_ALLOC_h2p(pObj->hpText);
000272  f9b40028          LDRSH    r0,[r4,#0x28]
000276  f7fffffe          BL       GUI_ALLOC_h2p
00027a  4680              MOV      r8,r0
;;;439        NumChars = GUI__GetNumChars(pText);
00027c  4640              MOV      r0,r8
00027e  f7fffffe          BL       GUI__GetNumChars
000282  4606              MOV      r6,r0
;;;440        Offset   = (pObj->EditMode == GUI_EDIT_MODE_INSERT) ? 0 : 1;
000284  f8940048          LDRB     r0,[r4,#0x48]
000288  b110              CBZ      r0,|L1.656|
00028a  f04f0001          MOV      r0,#1
00028e  e001              B        |L1.660|
                  |L1.656|
000290  f04f0000          MOV      r0,#0
                  |L1.660|
000294  4607              MOV      r7,r0
;;;441        if (CursorPos < 0) {
000296  2d00              CMP      r5,#0
000298  da01              BGE      |L1.670|
;;;442          CursorPos = 0;
00029a  f04f0500          MOV      r5,#0
                  |L1.670|
;;;443        }
;;;444        if (CursorPos > NumChars) {
00029e  42b5              CMP      r5,r6
0002a0  dd00              BLE      |L1.676|
;;;445          CursorPos = NumChars;
0002a2  4635              MOV      r5,r6
                  |L1.676|
;;;446        }
;;;447        if (CursorPos > (pObj->MaxLen - Offset)) {
0002a4  f9b4002a          LDRSH    r0,[r4,#0x2a]
0002a8  1bc0              SUBS     r0,r0,r7
0002aa  42a8              CMP      r0,r5
0002ac  da03              BGE      |L1.694|
;;;448          CursorPos = pObj->MaxLen - Offset;
0002ae  f9b4002a          LDRSH    r0,[r4,#0x2a]
0002b2  eba00507          SUB      r5,r0,r7
                  |L1.694|
;;;449        }
;;;450        if (pObj->CursorPos != CursorPos) {
0002b6  6c20              LDR      r0,[r4,#0x40]
0002b8  42a8              CMP      r0,r5
0002ba  d000              BEQ      |L1.702|
;;;451          pObj->CursorPos = CursorPos;
0002bc  6425              STR      r5,[r4,#0x40]
                  |L1.702|
;;;452        }
;;;453        pObj->SelSize = 0;
0002be  f04f0000          MOV      r0,#0
0002c2  6460              STR      r0,[r4,#0x44]
;;;454      }
0002c4  bf00              NOP      
                  |L1.710|
;;;455    }
0002c6  e8bd81f0          POP      {r4-r8,pc}
;;;456    
                          ENDP

                  EDIT_SetCursorAtPixel PROC
;;;245    */
;;;246    void EDIT_SetCursorAtPixel(EDIT_Handle hObj, int xPos) {
0002ca  e92d4ff3          PUSH     {r0,r1,r4-r11,lr}
0002ce  b083              SUB      sp,sp,#0xc
0002d0  460c              MOV      r4,r1
;;;247      if (hObj) {
0002d2  9803              LDR      r0,[sp,#0xc]
0002d4  2800              CMP      r0,#0
0002d6  d073              BEQ      |L1.960|
;;;248        EDIT_Obj* pObj;
;;;249        WM_LOCK();
;;;250        pObj = EDIT_H2P(hObj);
0002d8  9803              LDR      r0,[sp,#0xc]
0002da  f7fffffe          BL       GUI_ALLOC_h2p
0002de  4605              MOV      r5,r0
;;;251        if (pObj->hpText) {    
0002e0  8d28              LDRH     r0,[r5,#0x28]
0002e2  2800              CMP      r0,#0
0002e4  d06b              BEQ      |L1.958|
;;;252          const GUI_FONT GUI_UNI_PTR *pOldFont;
;;;253          int xSize, TextWidth, NumChars;
;;;254          const char GUI_UNI_PTR * pText;
;;;255          pText = (char*) GUI_ALLOC_h2p(pObj->hpText);
0002e6  f9b50028          LDRSH    r0,[r5,#0x28]
0002ea  f7fffffe          BL       GUI_ALLOC_h2p
0002ee  9001              STR      r0,[sp,#4]
;;;256          pOldFont = GUI_SetFont(pObj->Props.pFont);
0002f0  6de8              LDR      r0,[r5,#0x5c]
0002f2  f7fffffe          BL       GUI_SetFont
0002f6  9002              STR      r0,[sp,#8]
;;;257          xSize = WM_GetWindowSizeX(hObj);
0002f8  9803              LDR      r0,[sp,#0xc]
0002fa  f7fffffe          BL       WM_GetWindowSizeX
0002fe  4683              MOV      r11,r0
;;;258          TextWidth = GUI_GetStringDistX(pText);
000300  9801              LDR      r0,[sp,#4]
000302  f7fffffe          BL       GUI_GetStringDistX
000306  4680              MOV      r8,r0
;;;259          switch (pObj->Props.Align & GUI_TA_HORIZONTAL) {
000308  6d68              LDR      r0,[r5,#0x54]
00030a  f0000003          AND      r0,r0,#3
00030e  2801              CMP      r0,#1
000310  d00a              BEQ      |L1.808|
000312  2802              CMP      r0,#2
000314  d112              BNE      |L1.828|
;;;260          case GUI_TA_HCENTER:
;;;261            xPos -= (xSize - TextWidth + 1) / 2;
000316  ebab0108          SUB      r1,r11,r8
00031a  f1010001          ADD      r0,r1,#1
00031e  eb0071d0          ADD      r1,r0,r0,LSR #31
000322  eba40461          SUB      r4,r4,r1,ASR #1
;;;262            break;
000326  e012              B        |L1.846|
                  |L1.808|
;;;263          case GUI_TA_RIGHT:
;;;264            xPos -= xSize - TextWidth - (pObj->Props.Border + EDIT_XOFF);
000328  ebab0108          SUB      r1,r11,r8
00032c  6da8              LDR      r0,[r5,#0x58]
00032e  f1000001          ADD      r0,r0,#1
000332  eba10000          SUB      r0,r1,r0
000336  eba40400          SUB      r4,r4,r0
;;;265            break;
00033a  e008              B        |L1.846|
                  |L1.828|
;;;266          default:
;;;267            xPos -= (pObj->Props.Border + EDIT_XOFF) + pObj->Widget.pEffect->EffectSize;
00033c  6da8              LDR      r0,[r5,#0x58]
00033e  f1000001          ADD      r0,r0,#1
000342  6a29              LDR      r1,[r5,#0x20]
000344  6949              LDR      r1,[r1,#0x14]
000346  4408              ADD      r0,r0,r1
000348  eba40400          SUB      r4,r4,r0
00034c  bf00              NOP                            ;259
                  |L1.846|
00034e  bf00              NOP                            ;262
;;;268          }
;;;269          NumChars = GUI__GetNumChars(pText);
000350  9801              LDR      r0,[sp,#4]
000352  f7fffffe          BL       GUI__GetNumChars
000356  4606              MOV      r6,r0
;;;270          if (xPos < 0) {
000358  2c00              CMP      r4,#0
00035a  da04              BGE      |L1.870|
;;;271            EDIT__SetCursorPos(pObj, 0);
00035c  2100              MOVS     r1,#0
00035e  4628              MOV      r0,r5
000360  f7fffffe          BL       EDIT__SetCursorPos
000364  e024              B        |L1.944|
                  |L1.870|
;;;272          } else if (xPos > TextWidth) {
000366  4544              CMP      r4,r8
000368  dd04              BLE      |L1.884|
;;;273            EDIT__SetCursorPos(pObj, NumChars);
00036a  4631              MOV      r1,r6
00036c  4628              MOV      r0,r5
00036e  f7fffffe          BL       EDIT__SetCursorPos
000372  e01d              B        |L1.944|
                  |L1.884|
;;;274          } else {
;;;275            int i, x, xLenChar;
;;;276            U16 Char;
;;;277            for (i = 0, x = 0; (i < NumChars) && (x < xPos); i++) {
000374  f04f0900          MOV      r9,#0
000378  46ca              MOV      r10,r9
00037a  e00f              B        |L1.924|
                  |L1.892|
;;;278              Char     = GUI_UC__GetCharCodeInc(&pText);
00037c  a801              ADD      r0,sp,#4
00037e  f7fffffe          BL       GUI_UC__GetCharCodeInc
000382  9000              STR      r0,[sp,#0]
;;;279              xLenChar = GUI_GetCharDistX(Char);
000384  9800              LDR      r0,[sp,#0]
000386  f7fffffe          BL       GUI_GetCharDistX
00038a  4607              MOV      r7,r0
;;;280              if (xPos < (x + xLenChar))
00038c  eb0a0007          ADD      r0,r10,r7
000390  42a0              CMP      r0,r4
000392  dd00              BLE      |L1.918|
;;;281                break;
000394  e006              B        |L1.932|
                  |L1.918|
;;;282              x += xLenChar;
000396  44ba              ADD      r10,r10,r7
000398  f1090901          ADD      r9,r9,#1              ;277
                  |L1.924|
00039c  45b1              CMP      r9,r6                 ;277
00039e  da01              BGE      |L1.932|
0003a0  45a2              CMP      r10,r4                ;277
0003a2  dbeb              BLT      |L1.892|
                  |L1.932|
0003a4  bf00              NOP                            ;281
;;;283            }
;;;284            EDIT__SetCursorPos(pObj, i);
0003a6  4649              MOV      r1,r9
0003a8  4628              MOV      r0,r5
0003aa  f7fffffe          BL       EDIT__SetCursorPos
;;;285          }
0003ae  bf00              NOP      
                  |L1.944|
;;;286          GUI_SetFont(pOldFont);
0003b0  9802              LDR      r0,[sp,#8]
0003b2  f7fffffe          BL       GUI_SetFont
;;;287          EDIT_Invalidate(hObj);
0003b6  9803              LDR      r0,[sp,#0xc]
0003b8  f7fffffe          BL       WM_InvalidateWindow
;;;288        }
0003bc  bf00              NOP      
                  |L1.958|
;;;289        WM_UNLOCK();
;;;290      }
0003be  bf00              NOP      
                  |L1.960|
;;;291    }
0003c0  b005              ADD      sp,sp,#0x14
0003c2  e8bd8ff0          POP      {r4-r11,pc}
;;;292    
                          ENDP

                  _IncrementBuffer PROC
;;;298    */
;;;299    static int _IncrementBuffer(EDIT_Obj* pObj, unsigned AddBytes) {
0003c6  e92d41f0          PUSH     {r4-r8,lr}
0003ca  4604              MOV      r4,r0
0003cc  460e              MOV      r6,r1
;;;300      WM_HMEM hNew;
;;;301      int NewSize;
;;;302      NewSize = pObj->BufferSize + AddBytes;
0003ce  8da0              LDRH     r0,[r4,#0x2c]
0003d0  eb000706          ADD      r7,r0,r6
;;;303      hNew    = GUI_ALLOC_Realloc(pObj->hpText, NewSize);
0003d4  f9b40028          LDRSH    r0,[r4,#0x28]
0003d8  4639              MOV      r1,r7
0003da  f7fffffe          BL       GUI_ALLOC_Realloc
0003de  4605              MOV      r5,r0
;;;304      if (hNew) {
0003e0  b17d              CBZ      r5,|L1.1026|
;;;305        if (!(pObj->hpText)) {
0003e2  8d20              LDRH     r0,[r4,#0x28]
0003e4  b940              CBNZ     r0,|L1.1016|
;;;306          char* pText;
;;;307          pText  = (char*) GUI_ALLOC_h2p(hNew);
0003e6  4628              MOV      r0,r5
0003e8  f7fffffe          BL       GUI_ALLOC_h2p
0003ec  4680              MOV      r8,r0
;;;308          *pText = 0;
0003ee  f04f0000          MOV      r0,#0
0003f2  f8880000          STRB     r0,[r8,#0]
;;;309        }
0003f6  bf00              NOP      
                  |L1.1016|
;;;310        pObj->BufferSize = NewSize;
0003f8  85a7              STRH     r7,[r4,#0x2c]
;;;311        pObj->hpText     = hNew;
0003fa  8525              STRH     r5,[r4,#0x28]
;;;312        return 1;
0003fc  2001              MOVS     r0,#1
                  |L1.1022|
;;;313      }
;;;314      return 0;
;;;315    }
0003fe  e8bd81f0          POP      {r4-r8,pc}
                  |L1.1026|
000402  2000              MOVS     r0,#0                 ;314
000404  e7fb              B        |L1.1022|
;;;316    
                          ENDP

                  _IsSpaceInBuffer PROC
;;;327    */
;;;328    static int _IsSpaceInBuffer(EDIT_Obj* pObj, int BytesNeeded) {
000406  e92d41f0          PUSH     {r4-r8,lr}
00040a  4604              MOV      r4,r0
00040c  460d              MOV      r5,r1
;;;329      int NumBytes = 0;
00040e  f04f0600          MOV      r6,#0
;;;330      if (pObj->hpText) {
000412  8d20              LDRH     r0,[r4,#0x28]
000414  b138              CBZ      r0,|L1.1062|
;;;331        NumBytes = strlen((char*)GUI_ALLOC_h2p(pObj->hpText));
000416  f9b40028          LDRSH    r0,[r4,#0x28]
00041a  f7fffffe          BL       GUI_ALLOC_h2p
00041e  4607              MOV      r7,r0
000420  f7fffffe          BL       strlen
000424  4606              MOV      r6,r0
                  |L1.1062|
;;;332      }
;;;333      BytesNeeded = (BytesNeeded + NumBytes + 1) - pObj->BufferSize;
000426  eb050006          ADD      r0,r5,r6
00042a  f1000001          ADD      r0,r0,#1
00042e  8da1              LDRH     r1,[r4,#0x2c]
000430  eba00501          SUB      r5,r0,r1
;;;334      if (BytesNeeded > 0) {
000434  2d00              CMP      r5,#0
000436  dd08              BLE      |L1.1098|
;;;335        if (!_IncrementBuffer(pObj, BytesNeeded + EDIT_REALLOC_SIZE)) {
000438  f1050110          ADD      r1,r5,#0x10
00043c  4620              MOV      r0,r4
00043e  f7fffffe          BL       _IncrementBuffer
000442  b910              CBNZ     r0,|L1.1098|
;;;336          return 0;
000444  2000              MOVS     r0,#0
                  |L1.1094|
;;;337        }
;;;338      }
;;;339      return 1;
;;;340    }
000446  e8bd81f0          POP      {r4-r8,pc}
                  |L1.1098|
00044a  2001              MOVS     r0,#1                 ;339
00044c  e7fb              B        |L1.1094|
;;;341    
                          ENDP

                  _IsCharsAvailable PROC
;;;351    */
;;;352    static int _IsCharsAvailable(EDIT_Obj* pObj, int CharsNeeded) {
00044e  e92d41f0          PUSH     {r4-r8,lr}
000452  4604              MOV      r4,r0
000454  460d              MOV      r5,r1
;;;353      if ((CharsNeeded > 0) && (pObj->MaxLen > 0)) {
000456  2d00              CMP      r5,#0
000458  dd18              BLE      |L1.1164|
00045a  f9b4002a          LDRSH    r0,[r4,#0x2a]
00045e  2800              CMP      r0,#0
000460  dd14              BLE      |L1.1164|
;;;354        int NumChars = 0;
000462  f04f0600          MOV      r6,#0
;;;355        if (pObj->hpText) {
000466  8d20              LDRH     r0,[r4,#0x28]
000468  b138              CBZ      r0,|L1.1146|
;;;356          NumChars = GUI__GetNumChars((char*)GUI_ALLOC_h2p(pObj->hpText));
00046a  f9b40028          LDRSH    r0,[r4,#0x28]
00046e  f7fffffe          BL       GUI_ALLOC_h2p
000472  4607              MOV      r7,r0
000474  f7fffffe          BL       GUI__GetNumChars
000478  4606              MOV      r6,r0
                  |L1.1146|
;;;357        }
;;;358        if ((CharsNeeded + NumChars) > pObj->MaxLen) {
00047a  19a8              ADDS     r0,r5,r6
00047c  f9b4102a          LDRSH    r1,[r4,#0x2a]
000480  4288              CMP      r0,r1
000482  dd02              BLE      |L1.1162|
;;;359          return 0;
000484  2000              MOVS     r0,#0
                  |L1.1158|
;;;360        }
;;;361      }
;;;362      return 1;
;;;363    }
000486  e8bd81f0          POP      {r4-r8,pc}
                  |L1.1162|
00048a  bf00              NOP                            ;361
                  |L1.1164|
00048c  2001              MOVS     r0,#1                 ;362
00048e  e7fa              B        |L1.1158|
;;;364    
                          ENDP

                  _DeleteChar PROC
;;;371    */
;;;372    static void _DeleteChar(EDIT_Handle hObj, EDIT_Obj* pObj) {
000490  e92d41f0          PUSH     {r4-r8,lr}
000494  4607              MOV      r7,r0
000496  460c              MOV      r4,r1
;;;373      if (pObj->hpText) {
000498  8d20              LDRH     r0,[r4,#0x28]
00049a  b1f0              CBZ      r0,|L1.1242|
;;;374        unsigned CursorOffset;
;;;375        char* pText;
;;;376        pText = (char*) GUI_ALLOC_h2p(pObj->hpText);
00049c  f9b40028          LDRSH    r0,[r4,#0x28]
0004a0  f7fffffe          BL       GUI_ALLOC_h2p
0004a4  4605              MOV      r5,r0
;;;377        CursorOffset = GUI_UC__NumChars2NumBytes(pText, pObj->CursorPos);
0004a6  4628              MOV      r0,r5
0004a8  6c21              LDR      r1,[r4,#0x40]
0004aa  f7fffffe          BL       GUI_UC__NumChars2NumBytes
0004ae  4606              MOV      r6,r0
;;;378        if (CursorOffset < strlen(pText)) {
0004b0  4628              MOV      r0,r5
0004b2  f7fffffe          BL       strlen
0004b6  42b0              CMP      r0,r6
0004b8  d90e              BLS      |L1.1240|
;;;379          int NumBytes;
;;;380          pText += CursorOffset;
0004ba  4435              ADD      r5,r5,r6
;;;381          NumBytes = GUI_UC_GetCharSize(pText);
0004bc  4628              MOV      r0,r5
0004be  f7fffffe          BL       GUI_UC_GetCharSize
0004c2  4680              MOV      r8,r0
;;;382          strcpy(pText, pText + NumBytes);
0004c4  eb050108          ADD      r1,r5,r8
0004c8  4628              MOV      r0,r5
0004ca  f7fffffe          BL       strcpy
;;;383          WM_NotifyParent(hObj, WM_NOTIFICATION_VALUE_CHANGED);
0004ce  2105              MOVS     r1,#5
0004d0  4638              MOV      r0,r7
0004d2  f7fffffe          BL       WM_NotifyParent
;;;384        }
0004d6  bf00              NOP      
                  |L1.1240|
;;;385      }
0004d8  bf00              NOP      
                  |L1.1242|
;;;386    }
0004da  e8bd81f0          POP      {r4-r8,pc}
;;;387    
                          ENDP

                  _InsertChar PROC
;;;393    */
;;;394    static int _InsertChar(EDIT_Handle hObj, EDIT_Obj* pObj, U16 Char) {
0004de  e92d47f0          PUSH     {r4-r10,lr}
0004e2  4680              MOV      r8,r0
0004e4  460c              MOV      r4,r1
0004e6  4616              MOV      r6,r2
;;;395      if (_IsCharsAvailable(pObj, 1)) {
0004e8  f04f0101          MOV      r1,#1
0004ec  4620              MOV      r0,r4
0004ee  f7fffffe          BL       _IsCharsAvailable
0004f2  b348              CBZ      r0,|L1.1352|
;;;396        int BytesNeeded;
;;;397        BytesNeeded = GUI_UC__CalcSizeOfChar(Char);
0004f4  4630              MOV      r0,r6
0004f6  f7fffffe          BL       GUI_UC__CalcSizeOfChar
0004fa  4607              MOV      r7,r0
;;;398        if (_IsSpaceInBuffer(pObj, BytesNeeded)) {
0004fc  4639              MOV      r1,r7
0004fe  4620              MOV      r0,r4
000500  f7fffffe          BL       _IsSpaceInBuffer
000504  b1f8              CBZ      r0,|L1.1350|
;;;399          int CursorOffset;
;;;400          char* pText;
;;;401          pText = (char*) GUI_ALLOC_h2p(pObj->hpText);
000506  f9b40028          LDRSH    r0,[r4,#0x28]
00050a  f7fffffe          BL       GUI_ALLOC_h2p
00050e  4605              MOV      r5,r0
;;;402          CursorOffset = GUI_UC__NumChars2NumBytes(pText, pObj->CursorPos);
000510  4628              MOV      r0,r5
000512  6c21              LDR      r1,[r4,#0x40]
000514  f7fffffe          BL       GUI_UC__NumChars2NumBytes
000518  4681              MOV      r9,r0
;;;403          pText += CursorOffset;
00051a  444d              ADD      r5,r5,r9
;;;404          memmove(pText + BytesNeeded, pText, strlen(pText) + 1);
00051c  4628              MOV      r0,r5
00051e  f7fffffe          BL       strlen
000522  f1000a01          ADD      r10,r0,#1
000526  19e8              ADDS     r0,r5,r7
000528  4652              MOV      r2,r10
00052a  4629              MOV      r1,r5
00052c  f7fffffe          BL       __aeabi_memmove
;;;405          GUI_UC_Encode(pText, Char);
000530  4631              MOV      r1,r6
000532  4628              MOV      r0,r5
000534  f7fffffe          BL       GUI_UC_Encode
;;;406          WM_NotifyParent(hObj, WM_NOTIFICATION_VALUE_CHANGED);
000538  2105              MOVS     r1,#5
00053a  4640              MOV      r0,r8
00053c  f7fffffe          BL       WM_NotifyParent
;;;407          return 1;
000540  2001              MOVS     r0,#1
                  |L1.1346|
;;;408        }
;;;409      }
;;;410      return 0;
;;;411    }
000542  e8bd87f0          POP      {r4-r10,pc}
                  |L1.1350|
000546  bf00              NOP                            ;409
                  |L1.1352|
000548  2000              MOVS     r0,#0                 ;410
00054a  e7fa              B        |L1.1346|
;;;412    
                          ENDP

                  EDIT__GetCurrentChar PROC
;;;416    */
;;;417    U16 EDIT__GetCurrentChar(EDIT_Obj* pObj) {
00054c  b570              PUSH     {r4-r6,lr}
00054e  4604              MOV      r4,r0
;;;418      U16 Char = 0;
000550  f04f0600          MOV      r6,#0
;;;419      if (pObj->hpText) {
000554  8d20              LDRH     r0,[r4,#0x28]
000556  b198              CBZ      r0,|L1.1408|
;;;420        const char* pText;
;;;421        pText  = (const char*) GUI_ALLOC_h2p(pObj->hpText);
000558  f9b40028          LDRSH    r0,[r4,#0x28]
00055c  f7fffffe          BL       GUI_ALLOC_h2p
000560  4605              MOV      r5,r0
;;;422        pText += GUI_UC__NumChars2NumBytes(pText, pObj->CursorPos);
000562  4628              MOV      r0,r5
000564  6c21              LDR      r1,[r4,#0x40]
000566  f7fffffe          BL       GUI_UC__NumChars2NumBytes
00056a  4405              ADD      r5,r5,r0
;;;423        Char   = GUI_UC_GetCharCode(pText);
00056c  4628              MOV      r0,r5
00056e  f7fffffe          BL       GUI_UC_GetCharCode
000572  e003              B        |L1.1404|
                  |L1.1396|
                          DCD      Timer1
                  |L1.1400|
                          DCD      ShowCurrsor
                  |L1.1404|
00057c  4606              MOV      r6,r0
;;;424      }
00057e  bf00              NOP      
                  |L1.1408|
;;;425      return Char;
000580  4630              MOV      r0,r6
;;;426    }
000582  bd70              POP      {r4-r6,pc}
;;;427    
                          ENDP

                  _OnTouch PROC
;;;460    */
;;;461    static void _OnTouch(EDIT_Handle hObj, EDIT_Obj* pObj, WM_MESSAGE*pMsg) {
000584  e92d41f0          PUSH     {r4-r8,lr}
000588  4607              MOV      r7,r0
00058a  460c              MOV      r4,r1
00058c  4615              MOV      r5,r2
;;;462      const GUI_PID_STATE* pState = (const GUI_PID_STATE*)pMsg->Data.p;
00058e  68ae              LDR      r6,[r5,#8]
;;;463      GUI_USE_PARA(pObj);
000590  bf00              NOP      
;;;464      if (pMsg->Data.p) {  /* Something happened in our area (pressed or released) */
000592  68a8              LDR      r0,[r5,#8]
000594  b140              CBZ      r0,|L1.1448|
;;;465    	  static int StartPress = 0;	//houhh 20061023...
;;;466        if (pState->Pressed) {
000596  7a30              LDRB     r0,[r6,#8]
000598  b130              CBZ      r0,|L1.1448|
;;;467          GUI_DEBUG_LOG1("EDIT__Callback(WM_TOUCH, Pressed, Handle %d)\n",1);
;;;468          EDIT_SetCursorAtPixel(hObj, pState->x);
00059a  4638              MOV      r0,r7
00059c  6831              LDR      r1,[r6,#0]
00059e  f7fffffe          BL       EDIT_SetCursorAtPixel
;;;469    	  StartPress = pObj->CursorPos;	//houhh 20061023...
0005a2  49fe              LDR      r1,|L1.2460|
0005a4  6c20              LDR      r0,[r4,#0x40]
0005a6  6008              STR      r0,[r1,#0]  ; StartPress
                  |L1.1448|
;;;470        } else {
;;;471          GUI_DEBUG_LOG1("EDIT__Callback(WM_TOUCH, Released, Handle %d)\n",1);
;;;472        }
;;;473      } else {
;;;474        GUI_DEBUG_LOG1("_EDIT_Callback(WM_TOUCH, Moved out, Handle %d)\n",1);
;;;475      }
;;;476    }
0005a8  e8bd81f0          POP      {r4-r8,pc}
;;;477    
                          ENDP

                  EDIT_AddKey PROC
;;;572    */
;;;573    void EDIT_AddKey(EDIT_Handle hObj, int Key) {
0005ac  e92d41f0          PUSH     {r4-r8,lr}
0005b0  4607              MOV      r7,r0
0005b2  460d              MOV      r5,r1
;;;574      if (hObj) {
0005b4  2f00              CMP      r7,#0
0005b6  d071              BEQ      |L1.1692|
;;;575        EDIT_Obj* pObj;
;;;576        WM_LOCK();
;;;577        pObj = EDIT_H2P(hObj);
0005b8  4638              MOV      r0,r7
0005ba  f7fffffe          BL       GUI_ALLOC_h2p
0005be  4604              MOV      r4,r0
;;;578        if (pObj) {
0005c0  2c00              CMP      r4,#0
0005c2  d06c              BEQ      |L1.1694|
;;;579          if (pObj->pfAddKeyEx) {
0005c4  6ce0              LDR      r0,[r4,#0x4c]
0005c6  b120              CBZ      r0,|L1.1490|
;;;580            pObj->pfAddKeyEx(hObj, Key);
0005c8  4629              MOV      r1,r5
0005ca  4638              MOV      r0,r7
0005cc  6ce2              LDR      r2,[r4,#0x4c]
0005ce  4790              BLX      r2
0005d0  e098              B        |L1.1796|
                  |L1.1490|
;;;581          } else {
;;;582            switch (Key) {
0005d2  2d12              CMP      r5,#0x12
0005d4  d04c              BEQ      |L1.1648|
0005d6  dc08              BGT      |L1.1514|
0005d8  2d08              CMP      r5,#8
0005da  d055              BEQ      |L1.1672|
0005dc  2d0d              CMP      r5,#0xd
0005de  d079              BEQ      |L1.1748|
0005e0  2d10              CMP      r5,#0x10
0005e2  d04b              BEQ      |L1.1660|
0005e4  2d11              CMP      r5,#0x11
0005e6  d177              BNE      |L1.1752|
0005e8  e008              B        |L1.1532|
                  |L1.1514|
0005ea  2d13              CMP      r5,#0x13
0005ec  d023              BEQ      |L1.1590|
0005ee  2d1b              CMP      r5,#0x1b
0005f0  d071              BEQ      |L1.1750|
0005f2  2d1d              CMP      r5,#0x1d
0005f4  d059              BEQ      |L1.1706|
0005f6  2d1e              CMP      r5,#0x1e
0005f8  d16e              BNE      |L1.1752|
0005fa  e051              B        |L1.1696|
                  |L1.1532|
;;;583            case GUI_KEY_UP:
;;;584              if (pObj->hpText) {
0005fc  8d20              LDRH     r0,[r4,#0x28]
0005fe  b1c8              CBZ      r0,|L1.1588|
;;;585                char* pText;
;;;586                U16 Char;
;;;587                pText  = (char*) GUI_ALLOC_h2p(pObj->hpText);
000600  f9b40028          LDRSH    r0,[r4,#0x28]
000604  f7fffffe          BL       GUI_ALLOC_h2p
000608  4606              MOV      r6,r0
;;;588                pText += GUI_UC__NumChars2NumBytes(pText, pObj->CursorPos);
00060a  4630              MOV      r0,r6
00060c  6c21              LDR      r1,[r4,#0x40]
00060e  f7fffffe          BL       GUI_UC__NumChars2NumBytes
000612  4406              ADD      r6,r6,r0
;;;589                Char   = GUI_UC_GetCharCode(pText);
000614  4630              MOV      r0,r6
000616  f7fffffe          BL       GUI_UC_GetCharCode
00061a  4680              MOV      r8,r0
;;;590                if (Char < 0x7f) {  
00061c  f1b80f7f          CMP      r8,#0x7f
000620  da07              BGE      |L1.1586|
;;;591                  *pText = Char + 1;
000622  f1080001          ADD      r0,r8,#1
000626  7030              STRB     r0,[r6,#0]
;;;592                  WM_NotifyParent(hObj, WM_NOTIFICATION_VALUE_CHANGED);
000628  f04f0105          MOV      r1,#5
00062c  4638              MOV      r0,r7
00062e  f7fffffe          BL       WM_NotifyParent
                  |L1.1586|
;;;593                }
;;;594              }
000632  bf00              NOP      
                  |L1.1588|
;;;595              break;
000634  e065              B        |L1.1794|
                  |L1.1590|
;;;596            case GUI_KEY_DOWN:
;;;597              if (pObj->hpText) {
000636  8d20              LDRH     r0,[r4,#0x28]
000638  b1c8              CBZ      r0,|L1.1646|
;;;598                char* pText;
;;;599                U16 Char;
;;;600                pText  = (char*) GUI_ALLOC_h2p(pObj->hpText);
00063a  f9b40028          LDRSH    r0,[r4,#0x28]
00063e  f7fffffe          BL       GUI_ALLOC_h2p
000642  4606              MOV      r6,r0
;;;601                pText += GUI_UC__NumChars2NumBytes(pText, pObj->CursorPos);
000644  4630              MOV      r0,r6
000646  6c21              LDR      r1,[r4,#0x40]
000648  f7fffffe          BL       GUI_UC__NumChars2NumBytes
00064c  4406              ADD      r6,r6,r0
;;;602                Char   = GUI_UC_GetCharCode(pText);
00064e  4630              MOV      r0,r6
000650  f7fffffe          BL       GUI_UC_GetCharCode
000654  4680              MOV      r8,r0
;;;603                if (Char > 0x20) {  
000656  f1b80f20          CMP      r8,#0x20
00065a  dd07              BLE      |L1.1644|
;;;604                  *pText = Char - 1;
00065c  f1a80001          SUB      r0,r8,#1
000660  7030              STRB     r0,[r6,#0]
;;;605                  WM_NotifyParent(hObj, WM_NOTIFICATION_VALUE_CHANGED);
000662  f04f0105          MOV      r1,#5
000666  4638              MOV      r0,r7
000668  f7fffffe          BL       WM_NotifyParent
                  |L1.1644|
;;;606                }
;;;607              }
00066c  bf00              NOP      
                  |L1.1646|
;;;608              break;
00066e  e048              B        |L1.1794|
                  |L1.1648|
;;;609            case GUI_KEY_RIGHT:
;;;610              EDIT__SetCursorPos(pObj, pObj->CursorPos + 1);
000670  6c20              LDR      r0,[r4,#0x40]
000672  1c41              ADDS     r1,r0,#1
000674  4620              MOV      r0,r4
000676  f7fffffe          BL       EDIT__SetCursorPos
;;;611              break;
00067a  e042              B        |L1.1794|
                  |L1.1660|
;;;612            case GUI_KEY_LEFT:
;;;613              EDIT__SetCursorPos(pObj, pObj->CursorPos - 1);
00067c  6c20              LDR      r0,[r4,#0x40]
00067e  1e41              SUBS     r1,r0,#1
000680  4620              MOV      r0,r4
000682  f7fffffe          BL       EDIT__SetCursorPos
;;;614              break;
000686  e03c              B        |L1.1794|
                  |L1.1672|
;;;615            case GUI_KEY_BACKSPACE:
;;;616              EDIT__SetCursorPos(pObj, pObj->CursorPos - 1);
000688  6c20              LDR      r0,[r4,#0x40]
00068a  1e41              SUBS     r1,r0,#1
00068c  4620              MOV      r0,r4
00068e  f7fffffe          BL       EDIT__SetCursorPos
;;;617              _DeleteChar(hObj, pObj);
000692  4621              MOV      r1,r4
000694  4638              MOV      r0,r7
000696  f7fffffe          BL       _DeleteChar
;;;618              break;
00069a  e032              B        |L1.1794|
                  |L1.1692|
00069c  e036              B        |L1.1804|
                  |L1.1694|
00069e  e034              B        |L1.1802|
                  |L1.1696|
;;;619            case GUI_KEY_DELETE:
;;;620              _DeleteChar(hObj, pObj);
0006a0  4621              MOV      r1,r4
0006a2  4638              MOV      r0,r7
0006a4  f7fffffe          BL       _DeleteChar
;;;621              break;
0006a8  e02b              B        |L1.1794|
                  |L1.1706|
;;;622            case GUI_KEY_INSERT:
;;;623              if (pObj->EditMode == GUI_EDIT_MODE_OVERWRITE) {
0006aa  f8940048          LDRB     r0,[r4,#0x48]
0006ae  2801              CMP      r0,#1
0006b0  d104              BNE      |L1.1724|
;;;624                pObj->EditMode = GUI_EDIT_MODE_INSERT;
0006b2  f04f0000          MOV      r0,#0
0006b6  f8840048          STRB     r0,[r4,#0x48]
0006ba  e007              B        |L1.1740|
                  |L1.1724|
;;;625              } else {
;;;626                pObj->EditMode = GUI_EDIT_MODE_OVERWRITE;
0006bc  f04f0001          MOV      r0,#1
0006c0  f8840048          STRB     r0,[r4,#0x48]
;;;627                EDIT__SetCursorPos(pObj, pObj->CursorPos);
0006c4  4620              MOV      r0,r4
0006c6  6c21              LDR      r1,[r4,#0x40]
0006c8  f7fffffe          BL       EDIT__SetCursorPos
                  |L1.1740|
;;;628              }
;;;629              break;
0006cc  e019              B        |L1.1794|
0006ce  e001              B        |L1.1748|
0006d0  e002              B        |L1.1752|
0006d2  e000              B        |L1.1750|
                  |L1.1748|
;;;630            case GUI_KEY_ENTER:
;;;631            case GUI_KEY_ESCAPE:
0006d4  bf00              NOP      
                  |L1.1750|
;;;632              break;
0006d6  e014              B        |L1.1794|
                  |L1.1752|
;;;633            default:
;;;634              if (Key >= 0x20) {
0006d8  2d20              CMP      r5,#0x20
0006da  db11              BLT      |L1.1792|
;;;635                if (pObj->EditMode != GUI_EDIT_MODE_INSERT) {
0006dc  f8940048          LDRB     r0,[r4,#0x48]
0006e0  b118              CBZ      r0,|L1.1770|
;;;636                  _DeleteChar(hObj, pObj);
0006e2  4621              MOV      r1,r4
0006e4  4638              MOV      r0,r7
0006e6  f7fffffe          BL       _DeleteChar
                  |L1.1770|
;;;637                }
;;;638                if (_InsertChar(hObj, pObj, Key)) {
0006ea  b2aa              UXTH     r2,r5
0006ec  4621              MOV      r1,r4
0006ee  4638              MOV      r0,r7
0006f0  f7fffffe          BL       _InsertChar
0006f4  b120              CBZ      r0,|L1.1792|
;;;639                  EDIT__SetCursorPos(pObj, pObj->CursorPos + 1);
0006f6  6c20              LDR      r0,[r4,#0x40]
0006f8  1c41              ADDS     r1,r0,#1
0006fa  4620              MOV      r0,r4
0006fc  f7fffffe          BL       EDIT__SetCursorPos
                  |L1.1792|
000700  bf00              NOP                            ;582
                  |L1.1794|
000702  bf00              NOP                            ;595
                  |L1.1796|
;;;640                }
;;;641              }
;;;642            }
;;;643          }
;;;644          EDIT_Invalidate(hObj);
000704  4638              MOV      r0,r7
000706  f7fffffe          BL       WM_InvalidateWindow
                  |L1.1802|
;;;645        }
;;;646        WM_UNLOCK();
;;;647      }
00070a  bf00              NOP      
                  |L1.1804|
;;;648    }
00070c  e8bd81f0          POP      {r4-r8,pc}
;;;649    
                          ENDP

                  EDIT__Callback PROC
;;;481    */
;;;482    static void EDIT__Callback (WM_MESSAGE * pMsg) {
000710  e92d41f0          PUSH     {r4-r8,lr}
000714  4604              MOV      r4,r0
;;;483      int IsEnabled;
;;;484      EDIT_Handle hObj = (EDIT_Handle) pMsg->hWin;
000716  f9b45004          LDRSH    r5,[r4,#4]
;;;485      EDIT_Obj*   pObj = (EDIT_Obj*) GUI_ALLOC_h2p(hObj);
00071a  4628              MOV      r0,r5
00071c  f7fffffe          BL       GUI_ALLOC_h2p
000720  4680              MOV      r8,r0
;;;486      IsEnabled = WM__IsEnabled(hObj);
000722  4628              MOV      r0,r5
000724  f7fffffe          BL       WM__IsEnabled
000728  4607              MOV      r7,r0
;;;487      /* Let widget handle the standard messages */
;;;488      if (WIDGET_HandleActive(hObj, pMsg) == 0) {
00072a  4621              MOV      r1,r4
00072c  4628              MOV      r0,r5
00072e  f7fffffe          BL       WIDGET_HandleActive
000732  b908              CBNZ     r0,|L1.1848|
                  |L1.1844|
;;;489        return;
;;;490      }
;;;491      switch (pMsg->MsgId) {
;;;492      case WM_TOUCH:
;;;493        _OnTouch(hObj, pObj, pMsg);
;;;494        break;
;;;495      case WM_PAINT:
;;;496        GUI_DEBUG_LOG("EDIT: _Callback(WM_PAINT)\n");
;;;497        _Paint(pObj, hObj);
;;;498        return;
;;;499      case WM_DELETE:
;;;500        GUI_DEBUG_LOG("EDIT: _Callback(WM_DELETE)\n");
;;;501        _Delete(pObj);
;;;502        break;       /* No return here ... WM_DefaultProc needs to be called */
;;;503      case WM_KEY:
;;;504        if (IsEnabled) {
;;;505          if ( ((const WM_KEY_INFO*)(pMsg->Data.p))->PressedCnt >0) {
;;;506            int Key = ((const WM_KEY_INFO*)(pMsg->Data.p))->Key;
;;;507            switch (Key) {
;;;508              case GUI_KEY_TAB:
;;;509                break;                    /* Send to parent by not doing anything */
;;;510              default:
;;;511                EDIT_AddKey(hObj, Key);
;;;512                return;
;;;513            }
;;;514          }
;;;515        }
;;;516        break;
;;;517      }
;;;518      WM_DefaultProc(pMsg);
;;;519    }
000734  e8bd81f0          POP      {r4-r8,pc}
                  |L1.1848|
000738  6820              LDR      r0,[r4,#0]            ;491
00073a  280b              CMP      r0,#0xb               ;491
00073c  d011              BEQ      |L1.1890|
00073e  280c              CMP      r0,#0xc               ;491
000740  d004              BEQ      |L1.1868|
000742  280e              CMP      r0,#0xe               ;491
000744  d011              BEQ      |L1.1898|
000746  280f              CMP      r0,#0xf               ;491
000748  d121              BNE      |L1.1934|
00074a  e005              B        |L1.1880|
                  |L1.1868|
00074c  4622              MOV      r2,r4                 ;493
00074e  4641              MOV      r1,r8                 ;493
000750  4628              MOV      r0,r5                 ;493
000752  f7fffffe          BL       _OnTouch
000756  e01a              B        |L1.1934|
                  |L1.1880|
000758  4629              MOV      r1,r5                 ;497
00075a  4640              MOV      r0,r8                 ;497
00075c  f7fffffe          BL       _Paint
000760  e7e8              B        |L1.1844|
                  |L1.1890|
000762  4640              MOV      r0,r8                 ;501
000764  f7fffffe          BL       _Delete
000768  e011              B        |L1.1934|
                  |L1.1898|
00076a  b17f              CBZ      r7,|L1.1932|
00076c  68a0              LDR      r0,[r4,#8]            ;505
00076e  6840              LDR      r0,[r0,#4]            ;505
000770  2800              CMP      r0,#0                 ;505
000772  dd0b              BLE      |L1.1932|
000774  68a0              LDR      r0,[r4,#8]            ;506
000776  6806              LDR      r6,[r0,#0]            ;506
000778  2e09              CMP      r6,#9                 ;507
00077a  d100              BNE      |L1.1918|
00077c  e004              B        |L1.1928|
                  |L1.1918|
00077e  4631              MOV      r1,r6                 ;511
000780  4628              MOV      r0,r5                 ;511
000782  f7fffffe          BL       EDIT_AddKey
000786  e7d5              B        |L1.1844|
                  |L1.1928|
000788  bf00              NOP                            ;509
00078a  bf00              NOP                            ;514
                  |L1.1932|
00078c  bf00              NOP                            ;516
                  |L1.1934|
00078e  bf00              NOP                            ;494
000790  4620              MOV      r0,r4                 ;518
000792  f7fffffe          BL       WM_DefaultProc
000796  bf00              NOP      
000798  e7cc              B        |L1.1844|
;;;520    
                          ENDP

                  EDIT_CreateEx PROC
;;;530    */
;;;531    EDIT_Handle EDIT_CreateEx(int x0, int y0, int xsize, int ysize, WM_HWIN hParent, int WinFlags, int ExFlags,
00079a  e92d4fff          PUSH     {r0-r11,lr}
;;;532                              int Id, int MaxLen)
;;;533    {
00079e  b085              SUB      sp,sp,#0x14
0007a0  4607              MOV      r7,r0
0007a2  4688              MOV      r8,r1
0007a4  4691              MOV      r9,r2
0007a6  f8ddb058          LDR      r11,[sp,#0x58]
0007aa  e9dd5a13          LDRD     r5,r10,[sp,#0x4c]
;;;534      EDIT_Handle hObj;
;;;535      GUI_USE_PARA(ExFlags);
0007ae  bf00              NOP      
;;;536      /* Alloc memory for obj */
;;;537      WinFlags |= WM_CF_LATE_CLIP;    /* Always use late clipping since widget is optimized for it. */
0007b0  f4455580          ORR      r5,r5,#0x1000
;;;538      hObj = WM_CreateWindowAsChild(x0, y0, xsize, ysize, hParent, WM_CF_SHOW | WinFlags, EDIT__Callback,
0007b4  f04f0254          MOV      r2,#0x54
0007b8  4b79              LDR      r3,|L1.2464|
0007ba  b2a8              UXTH     r0,r5
0007bc  f0400002          ORR      r0,r0,#2
0007c0  9912              LDR      r1,[sp,#0x48]
0007c2  e9cd3202          STRD     r3,r2,[sp,#8]
0007c6  e9cd1000          STRD     r1,r0,[sp,#0]
0007ca  464a              MOV      r2,r9
0007cc  4641              MOV      r1,r8
0007ce  4638              MOV      r0,r7
0007d0  9b08              LDR      r3,[sp,#0x20]
0007d2  f7fffffe          BL       WM_CreateWindowAsChild
0007d6  4606              MOV      r6,r0
;;;539                                    sizeof(EDIT_Obj) - sizeof(WM_Obj));
;;;540      if (hObj) {
0007d8  b376              CBZ      r6,|L1.2104|
;;;541        EDIT_Obj* pObj;
;;;542        WM_LOCK();
;;;543        pObj = (EDIT_Obj*)GUI_ALLOC_h2p(hObj);
0007da  4630              MOV      r0,r6
0007dc  f7fffffe          BL       GUI_ALLOC_h2p
0007e0  4604              MOV      r4,r0
;;;544        /* init widget specific variables */
;;;545        WIDGET__Init(&pObj->Widget, Id, WIDGET_STATE_FOCUSSABLE);
0007e2  f04f0210          MOV      r2,#0x10
0007e6  4620              MOV      r0,r4
0007e8  9915              LDR      r1,[sp,#0x54]
0007ea  f7fffffe          BL       WIDGET__Init
;;;546        /* init member variables */
;;;547        INIT_ID(pObj);
;;;548        pObj->Props         = EDIT__DefaultProps;
0007ee  221c              MOVS     r2,#0x1c
0007f0  496c              LDR      r1,|L1.2468|
0007f2  f1040054          ADD      r0,r4,#0x54
0007f6  f7fffffe          BL       __aeabi_memcpy4
;;;549        pObj->XSizeCursor   = 1;
0007fa  f04f0001          MOV      r0,#1
0007fe  f8840049          STRB     r0,[r4,#0x49]
;;;550        pObj->MaxLen        = (MaxLen == 0) ? 8 : MaxLen;
000802  f1bb0f00          CMP      r11,#0
000806  d102              BNE      |L1.2062|
000808  f04f0008          MOV      r0,#8
00080c  e000              B        |L1.2064|
                  |L1.2062|
00080e  4658              MOV      r0,r11
                  |L1.2064|
000810  b200              SXTH     r0,r0
000812  8560              STRH     r0,[r4,#0x2a]
;;;551        pObj->BufferSize    = 0;
000814  f04f0000          MOV      r0,#0
000818  85a0              STRH     r0,[r4,#0x2c]
;;;552        pObj->hpText        = 0;
00081a  8520              STRH     r0,[r4,#0x28]
;;;553        if (_IncrementBuffer(pObj, pObj->MaxLen + 1) == 0) {
00081c  f9b4002a          LDRSH    r0,[r4,#0x2a]
000820  f1000101          ADD      r1,r0,#1
000824  4620              MOV      r0,r4
000826  f7fffffe          BL       _IncrementBuffer
00082a  b920              CBNZ     r0,|L1.2102|
;;;554          GUI_DEBUG_ERROROUT("EDIT_Create failed to alloc buffer");
;;;555          EDIT_Delete(hObj);
00082c  4630              MOV      r0,r6
00082e  f7fffffe          BL       WM_DeleteWindow
;;;556          hObj = 0;
000832  f04f0600          MOV      r6,#0
                  |L1.2102|
;;;557        }
;;;558        WM_UNLOCK();
;;;559      }
000836  bf00              NOP      
                  |L1.2104|
;;;560      return hObj;
000838  4630              MOV      r0,r6
;;;561    }
00083a  b009              ADD      sp,sp,#0x24
00083c  e8bd8ff0          POP      {r4-r11,pc}
;;;562    
                          ENDP

                  EDIT_SetFont PROC
;;;653    */
;;;654    void EDIT_SetFont(EDIT_Handle hObj, const GUI_FONT GUI_UNI_PTR * pfont) {
000840  b570              PUSH     {r4-r6,lr}
000842  4605              MOV      r5,r0
000844  460e              MOV      r6,r1
;;;655      EDIT_Obj* pObj;
;;;656      if (hObj == 0)
000846  b905              CBNZ     r5,|L1.2122|
                  |L1.2120|
;;;657        return;
;;;658      WM_LOCK();
;;;659      pObj = EDIT_H2P(hObj);
;;;660      if (pObj) {
;;;661        pObj->Props.pFont = pfont;
;;;662        EDIT_Invalidate(hObj);
;;;663      }
;;;664      WM_UNLOCK();
;;;665    }
000848  bd70              POP      {r4-r6,pc}
                  |L1.2122|
00084a  4628              MOV      r0,r5                 ;659
00084c  f7fffffe          BL       GUI_ALLOC_h2p
000850  4604              MOV      r4,r0                 ;659
000852  b11c              CBZ      r4,|L1.2140|
000854  65e6              STR      r6,[r4,#0x5c]         ;661
000856  4628              MOV      r0,r5                 ;662
000858  f7fffffe          BL       WM_InvalidateWindow
                  |L1.2140|
00085c  bf00              NOP      
00085e  e7f3              B        |L1.2120|
;;;666    
                          ENDP

                  EDIT_SetBkColor PROC
;;;670    */
;;;671    void EDIT_SetBkColor(EDIT_Handle hObj, unsigned int Index, GUI_COLOR color) {
000860  e92d41f0          PUSH     {r4-r8,lr}
000864  4606              MOV      r6,r0
000866  460d              MOV      r5,r1
000868  4617              MOV      r7,r2
;;;672      EDIT_Obj* pObj;
;;;673      if (hObj == 0)
00086a  b90e              CBNZ     r6,|L1.2160|
                  |L1.2156|
;;;674        return;
;;;675      WM_LOCK();
;;;676      pObj = EDIT_H2P(hObj);
;;;677      if (pObj) {
;;;678        if (Index < GUI_COUNTOF(pObj->Props.aBkColor)) {
;;;679          pObj->Props.aBkColor[Index] = color;
;;;680          EDIT_Invalidate(hObj);
;;;681        }
;;;682      }
;;;683      WM_UNLOCK();
;;;684    }
00086c  e8bd81f0          POP      {r4-r8,pc}
                  |L1.2160|
000870  4630              MOV      r0,r6                 ;676
000872  f7fffffe          BL       GUI_ALLOC_h2p
000876  4604              MOV      r4,r0                 ;676
000878  b144              CBZ      r4,|L1.2188|
00087a  2d02              CMP      r5,#2                 ;678
00087c  d206              BCS      |L1.2188|
00087e  f1040068          ADD      r0,r4,#0x68           ;679
000882  f8407025          STR      r7,[r0,r5,LSL #2]     ;679
000886  4630              MOV      r0,r6                 ;680
000888  f7fffffe          BL       WM_InvalidateWindow
                  |L1.2188|
00088c  bf00              NOP      
00088e  e7ed              B        |L1.2156|
;;;685    
                          ENDP

                  EDIT_SetTextColor PROC
;;;689    */
;;;690    void EDIT_SetTextColor(EDIT_Handle hObj, unsigned int Index, GUI_COLOR color) {
000890  e92d41f0          PUSH     {r4-r8,lr}
000894  4606              MOV      r6,r0
000896  460d              MOV      r5,r1
000898  4617              MOV      r7,r2
;;;691      EDIT_Obj* pObj;
;;;692      if (hObj == 0)
00089a  b90e              CBNZ     r6,|L1.2208|
                  |L1.2204|
;;;693        return;
;;;694      WM_LOCK();
;;;695      pObj = EDIT_H2P(hObj);
;;;696      if (pObj) {
;;;697        if (Index < GUI_COUNTOF(pObj->Props.aTextColor)) {
;;;698          pObj->Props.aTextColor[Index] = color;
;;;699          EDIT_Invalidate(hObj);
;;;700        }
;;;701      }
;;;702      WM_UNLOCK();
;;;703    }
00089c  e8bd81f0          POP      {r4-r8,pc}
                  |L1.2208|
0008a0  4630              MOV      r0,r6                 ;695
0008a2  f7fffffe          BL       GUI_ALLOC_h2p
0008a6  4604              MOV      r4,r0                 ;695
0008a8  b144              CBZ      r4,|L1.2236|
0008aa  2d02              CMP      r5,#2                 ;697
0008ac  d206              BCS      |L1.2236|
0008ae  f1040060          ADD      r0,r4,#0x60           ;698
0008b2  f8407025          STR      r7,[r0,r5,LSL #2]     ;698
0008b6  4630              MOV      r0,r6                 ;699
0008b8  f7fffffe          BL       WM_InvalidateWindow
                  |L1.2236|
0008bc  bf00              NOP      
0008be  e7ed              B        |L1.2204|
;;;704    
                          ENDP

                  EDIT_SetText PROC
;;;708    */
;;;709    void EDIT_SetText(EDIT_Handle hObj, const char* s) {
0008c0  e92d47f0          PUSH     {r4-r10,lr}
0008c4  4680              MOV      r8,r0
0008c6  460f              MOV      r7,r1
;;;710      if (hObj) {
0008c8  f1b80f00          CMP      r8,#0
0008cc  d052              BEQ      |L1.2420|
;;;711        EDIT_Obj* pObj;
;;;712        WM_LOCK();
;;;713        pObj = EDIT_H2P(hObj);
0008ce  4640              MOV      r0,r8
0008d0  f7fffffe          BL       GUI_ALLOC_h2p
0008d4  4604              MOV      r4,r0
;;;714        if (s) {
0008d6  2f00              CMP      r7,#0
0008d8  d040              BEQ      |L1.2396|
;;;715          int NumBytesNew, NumBytesOld = 0;
0008da  f04f0900          MOV      r9,#0
;;;716          int NumCharsNew;
;;;717          if (pObj->hpText) {
0008de  8d20              LDRH     r0,[r4,#0x28]
0008e0  b150              CBZ      r0,|L1.2296|
;;;718            char* pText;
;;;719            pText       = (char*) GUI_ALLOC_h2p(pObj->hpText);
0008e2  f9b40028          LDRSH    r0,[r4,#0x28]
0008e6  f7fffffe          BL       GUI_ALLOC_h2p
0008ea  4682              MOV      r10,r0
;;;720            NumBytesOld = strlen(pText) + 1;
0008ec  4650              MOV      r0,r10
0008ee  f7fffffe          BL       strlen
0008f2  f1000901          ADD      r9,r0,#1
;;;721          }
0008f6  bf00              NOP      
                  |L1.2296|
;;;722          NumCharsNew = GUI__GetNumChars(s);
0008f8  4638              MOV      r0,r7
0008fa  f7fffffe          BL       GUI__GetNumChars
0008fe  4606              MOV      r6,r0
;;;723          if (NumCharsNew > pObj->MaxLen) {
000900  f9b4102a          LDRSH    r1,[r4,#0x2a]
000904  42b1              CMP      r1,r6
000906  da01              BGE      |L1.2316|
;;;724            NumCharsNew = pObj->MaxLen;
000908  f9b4602a          LDRSH    r6,[r4,#0x2a]
                  |L1.2316|
;;;725          }
;;;726          NumBytesNew = GUI_UC__NumChars2NumBytes(s, NumCharsNew) + 1;
00090c  4631              MOV      r1,r6
00090e  4638              MOV      r0,r7
000910  f7fffffe          BL       GUI_UC__NumChars2NumBytes
000914  f1000501          ADD      r5,r0,#1
;;;727          if (_IsSpaceInBuffer(pObj, NumBytesNew - NumBytesOld)) {
000918  eba50109          SUB      r1,r5,r9
00091c  4620              MOV      r0,r4
00091e  f7fffffe          BL       _IsSpaceInBuffer
000922  b1d0              CBZ      r0,|L1.2394|
;;;728            char* pText;
;;;729            pText = (char*) GUI_ALLOC_h2p(pObj->hpText);
000924  f9b40028          LDRSH    r0,[r4,#0x28]
000928  f7fffffe          BL       GUI_ALLOC_h2p
00092c  4682              MOV      r10,r0
;;;730            memcpy(pText, s, NumBytesNew);
00092e  462a              MOV      r2,r5
000930  4639              MOV      r1,r7
000932  4650              MOV      r0,r10
000934  f7fffffe          BL       __aeabi_memcpy
;;;731            pObj->CursorPos = NumBytesNew - 1;
000938  f1a50001          SUB      r0,r5,#1
00093c  6420              STR      r0,[r4,#0x40]
;;;732            if (pObj->CursorPos == pObj->MaxLen) {
00093e  f9b4102a          LDRSH    r1,[r4,#0x2a]
000942  6c20              LDR      r0,[r4,#0x40]
000944  4288              CMP      r0,r1
000946  d107              BNE      |L1.2392|
;;;733              if (pObj->EditMode == GUI_EDIT_MODE_OVERWRITE) {
000948  f8940048          LDRB     r0,[r4,#0x48]
00094c  2801              CMP      r0,#1
00094e  d103              BNE      |L1.2392|
;;;734                pObj->CursorPos--;
000950  6c20              LDR      r0,[r4,#0x40]
000952  f1a00001          SUB      r0,r0,#1
000956  6420              STR      r0,[r4,#0x40]
                  |L1.2392|
;;;735              }
;;;736            }
;;;737          }
000958  bf00              NOP      
                  |L1.2394|
;;;738        } else {
00095a  e007              B        |L1.2412|
                  |L1.2396|
;;;739          GUI_ALLOC_FreePtr(&pObj->hpText);
00095c  f1040028          ADD      r0,r4,#0x28
000960  f7fffffe          BL       GUI_ALLOC_FreePtr
;;;740          pObj->BufferSize = 0;
000964  f04f0000          MOV      r0,#0
000968  85a0              STRH     r0,[r4,#0x2c]
;;;741          pObj->CursorPos  = 0;
00096a  6420              STR      r0,[r4,#0x40]
                  |L1.2412|
;;;742        }
;;;743        EDIT_Invalidate(hObj);
00096c  4640              MOV      r0,r8
00096e  f7fffffe          BL       WM_InvalidateWindow
;;;744        WM_UNLOCK();
;;;745      }
000972  bf00              NOP      
                  |L1.2420|
;;;746    }
000974  e8bd87f0          POP      {r4-r10,pc}
;;;747    
                          ENDP

                  EDIT_GetText PROC
;;;751    */
;;;752    void EDIT_GetText(EDIT_Handle hObj, char* sDest, int MaxLen) {
000978  e92d47f0          PUSH     {r4-r10,lr}
00097c  4607              MOV      r7,r0
00097e  460c              MOV      r4,r1
000980  4615              MOV      r5,r2
;;;753      if (sDest) {
000982  b364              CBZ      r4,|L1.2526|
;;;754        *sDest = 0;
000984  f04f0000          MOV      r0,#0
000988  7020              STRB     r0,[r4,#0]
;;;755        if (hObj) {
00098a  b347              CBZ      r7,|L1.2526|
;;;756          EDIT_Obj* pObj;
;;;757          WM_LOCK();
;;;758          pObj = EDIT_H2P(hObj);
00098c  4638              MOV      r0,r7
00098e  f7fffffe          BL       GUI_ALLOC_h2p
000992  4680              MOV      r8,r0
;;;759          if (pObj->hpText) {
000994  f8b80028          LDRH     r0,[r8,#0x28]
000998  b300              CBZ      r0,|L1.2524|
;;;760            char* pText;
;;;761            int NumChars, NumBytes;
;;;762            pText = (char*) GUI_ALLOC_h2p(pObj->hpText);
00099a  e005              B        |L1.2472|
                  |L1.2460|
                          DCD      StartPress
                  |L1.2464|
                          DCD      EDIT__Callback
                  |L1.2468|
                          DCD      EDIT__DefaultProps
                  |L1.2472|
0009a8  f9b80028          LDRSH    r0,[r8,#0x28]
0009ac  f7fffffe          BL       GUI_ALLOC_h2p
0009b0  4682              MOV      r10,r0
;;;763            NumChars = GUI__GetNumChars(pText);
0009b2  4650              MOV      r0,r10
0009b4  f7fffffe          BL       GUI__GetNumChars
0009b8  4681              MOV      r9,r0
;;;764            if (NumChars > MaxLen) {
0009ba  45a9              CMP      r9,r5
0009bc  dd00              BLE      |L1.2496|
;;;765              NumChars = MaxLen;
0009be  46a9              MOV      r9,r5
                  |L1.2496|
;;;766            }
;;;767            NumBytes = GUI_UC__NumChars2NumBytes(pText, NumChars);
0009c0  4649              MOV      r1,r9
0009c2  4650              MOV      r0,r10
0009c4  f7fffffe          BL       GUI_UC__NumChars2NumBytes
0009c8  4606              MOV      r6,r0
;;;768            memcpy(sDest, pText, NumBytes);
0009ca  4632              MOV      r2,r6
0009cc  4651              MOV      r1,r10
0009ce  4620              MOV      r0,r4
0009d0  f7fffffe          BL       __aeabi_memcpy
;;;769            *(sDest + NumBytes) = 0;
0009d4  f04f0000          MOV      r0,#0
0009d8  55a0              STRB     r0,[r4,r6]
;;;770          }
0009da  bf00              NOP      
                  |L1.2524|
;;;771          WM_UNLOCK();
;;;772        }
0009dc  bf00              NOP      
                  |L1.2526|
;;;773      }
;;;774    }
0009de  e8bd87f0          POP      {r4-r10,pc}
;;;775    
                          ENDP

                  EDIT_GetValue PROC
;;;779    */
;;;780    I32  EDIT_GetValue(EDIT_Handle hObj) {
0009e2  b570              PUSH     {r4-r6,lr}
0009e4  4605              MOV      r5,r0
;;;781      EDIT_Obj* pObj;
;;;782      I32 r = 0;
0009e6  f04f0600          MOV      r6,#0
;;;783      if (hObj) {
0009ea  b125              CBZ      r5,|L1.2550|
;;;784        WM_LOCK();
;;;785        pObj = EDIT_H2P(hObj);
0009ec  4628              MOV      r0,r5
0009ee  f7fffffe          BL       GUI_ALLOC_h2p
0009f2  4604              MOV      r4,r0
;;;786        r = pObj->CurrentValue;
0009f4  6be6              LDR      r6,[r4,#0x3c]
                  |L1.2550|
;;;787        WM_UNLOCK();
;;;788      }
;;;789      return r;
0009f6  4630              MOV      r0,r6
;;;790    }
0009f8  bd70              POP      {r4-r6,pc}
;;;791    
                          ENDP

                  EDIT_SetValue PROC
;;;795    */
;;;796    void EDIT_SetValue(EDIT_Handle hObj, I32 Value) {
0009fa  b570              PUSH     {r4-r6,lr}
0009fc  4606              MOV      r6,r0
0009fe  460d              MOV      r5,r1
;;;797      EDIT_Obj* pObj;
;;;798      if (hObj) {
000a00  b1de              CBZ      r6,|L1.2618|
;;;799        WM_LOCK();
;;;800        pObj = EDIT_H2P(hObj);
000a02  4630              MOV      r0,r6
000a04  f7fffffe          BL       GUI_ALLOC_h2p
000a08  4604              MOV      r4,r0
;;;801        /* Put in min/max range */
;;;802        if (Value < pObj->Min) {
000a0a  6b20              LDR      r0,[r4,#0x30]
000a0c  42a8              CMP      r0,r5
000a0e  dd00              BLE      |L1.2578|
;;;803          Value = pObj->Min;
000a10  6b25              LDR      r5,[r4,#0x30]
                  |L1.2578|
;;;804        }
;;;805        if (Value > pObj->Max) {
000a12  6b60              LDR      r0,[r4,#0x34]
000a14  42a8              CMP      r0,r5
000a16  da00              BGE      |L1.2586|
;;;806          Value = pObj->Max;
000a18  6b65              LDR      r5,[r4,#0x34]
                  |L1.2586|
;;;807        }
;;;808        if (pObj->CurrentValue != (U32)Value) {
000a1a  6be0              LDR      r0,[r4,#0x3c]
000a1c  42a8              CMP      r0,r5
000a1e  d00c              BEQ      |L1.2618|
;;;809          pObj->CurrentValue = Value;
000a20  63e5              STR      r5,[r4,#0x3c]
;;;810          if (pObj->pfUpdateBuffer) {
000a22  6d20              LDR      r0,[r4,#0x50]
000a24  b110              CBZ      r0,|L1.2604|
;;;811            pObj->pfUpdateBuffer(hObj);
000a26  4630              MOV      r0,r6
000a28  6d21              LDR      r1,[r4,#0x50]
000a2a  4788              BLX      r1
                  |L1.2604|
;;;812          }
;;;813          WM_InvalidateWindow(hObj);
000a2c  4630              MOV      r0,r6
000a2e  f7fffffe          BL       WM_InvalidateWindow
;;;814          WM_NotifyParent(hObj, WM_NOTIFICATION_VALUE_CHANGED);
000a32  2105              MOVS     r1,#5
000a34  4630              MOV      r0,r6
000a36  f7fffffe          BL       WM_NotifyParent
                  |L1.2618|
;;;815        }
;;;816        WM_UNLOCK();
;;;817      }
;;;818    }
000a3a  bd70              POP      {r4-r6,pc}
;;;819    
                          ENDP

                  EDIT_SetMaxLen PROC
;;;823    */
;;;824    void EDIT_SetMaxLen(EDIT_Handle  hObj, int MaxLen) {
000a3c  e92d47f0          PUSH     {r4-r10,lr}
000a40  4606              MOV      r6,r0
000a42  460d              MOV      r5,r1
;;;825      if (hObj) {
000a44  b37e              CBZ      r6,|L1.2726|
;;;826        EDIT_Obj* pObj;
;;;827        WM_LOCK();
;;;828        pObj = EDIT_H2P(hObj);
000a46  4630              MOV      r0,r6
000a48  f7fffffe          BL       GUI_ALLOC_h2p
000a4c  4604              MOV      r4,r0
;;;829        if (MaxLen != pObj->MaxLen) {
000a4e  f9b4002a          LDRSH    r0,[r4,#0x2a]
000a52  42a8              CMP      r0,r5
000a54  d026              BEQ      |L1.2724|
;;;830          if (MaxLen < pObj->MaxLen) {
000a56  f9b4002a          LDRSH    r0,[r4,#0x2a]
000a5a  42a8              CMP      r0,r5
000a5c  dd17              BLE      |L1.2702|
;;;831            if (pObj->hpText) {
000a5e  8d20              LDRH     r0,[r4,#0x28]
000a60  b1a8              CBZ      r0,|L1.2702|
;;;832              char* pText;
;;;833              int   NumChars;
;;;834              pText    = (char*) GUI_ALLOC_h2p(pObj->hpText);
000a62  f9b40028          LDRSH    r0,[r4,#0x28]
000a66  f7fffffe          BL       GUI_ALLOC_h2p
000a6a  4607              MOV      r7,r0
;;;835              NumChars = GUI__GetNumChars(pText);
000a6c  4638              MOV      r0,r7
000a6e  f7fffffe          BL       GUI__GetNumChars
000a72  4680              MOV      r8,r0
;;;836              if (NumChars > MaxLen) {
000a74  45a8              CMP      r8,r5
000a76  dd09              BLE      |L1.2700|
;;;837                int NumBytes;
;;;838                NumBytes = GUI_UC__NumChars2NumBytes(pText, MaxLen);
000a78  4629              MOV      r1,r5
000a7a  4638              MOV      r0,r7
000a7c  f7fffffe          BL       GUI_UC__NumChars2NumBytes
000a80  4681              MOV      r9,r0
;;;839                *(pText + NumBytes) = 0;
000a82  f04f0000          MOV      r0,#0
000a86  f8070009          STRB     r0,[r7,r9]
;;;840              }
000a8a  bf00              NOP      
                  |L1.2700|
;;;841            }
000a8c  bf00              NOP      
                  |L1.2702|
;;;842          }
;;;843          _IncrementBuffer(pObj, MaxLen - pObj->BufferSize + 1);
000a8e  8da0              LDRH     r0,[r4,#0x2c]
000a90  1a28              SUBS     r0,r5,r0
000a92  1c41              ADDS     r1,r0,#1
000a94  4620              MOV      r0,r4
000a96  f7fffffe          BL       _IncrementBuffer
;;;844          pObj->MaxLen = MaxLen;
000a9a  b228              SXTH     r0,r5
000a9c  8560              STRH     r0,[r4,#0x2a]
;;;845          EDIT_Invalidate(hObj);
000a9e  4630              MOV      r0,r6
000aa0  f7fffffe          BL       WM_InvalidateWindow
                  |L1.2724|
;;;846        }
;;;847        WM_UNLOCK();
;;;848      }
000aa4  bf00              NOP      
                  |L1.2726|
;;;849    }
000aa6  e8bd87f0          POP      {r4-r10,pc}
;;;850    
                          ENDP

                  EDIT_SetTextAlign PROC
;;;854    */
;;;855    void EDIT_SetTextAlign(EDIT_Handle hObj, int Align) {
000aaa  b570              PUSH     {r4-r6,lr}
000aac  4605              MOV      r5,r0
000aae  460e              MOV      r6,r1
;;;856      EDIT_Obj* pObj;
;;;857      if (hObj == 0)
000ab0  b905              CBNZ     r5,|L1.2740|
                  |L1.2738|
;;;858        return;
;;;859      WM_LOCK();
;;;860      pObj = EDIT_H2P(hObj);
;;;861      if (pObj) {
;;;862        pObj->Props.Align = Align;
;;;863        EDIT_Invalidate(hObj);
;;;864      }
;;;865      WM_UNLOCK();
;;;866    }
000ab2  bd70              POP      {r4-r6,pc}
                  |L1.2740|
000ab4  4628              MOV      r0,r5                 ;860
000ab6  f7fffffe          BL       GUI_ALLOC_h2p
000aba  4604              MOV      r4,r0                 ;860
000abc  b11c              CBZ      r4,|L1.2758|
000abe  6566              STR      r6,[r4,#0x54]         ;862
000ac0  4628              MOV      r0,r5                 ;863
000ac2  f7fffffe          BL       WM_InvalidateWindow
                  |L1.2758|
000ac6  bf00              NOP      
000ac8  e7f3              B        |L1.2738|
;;;867    
                          ENDP


                          AREA ||.data||, DATA, ALIGN=2

                  EDIT__DefaultProps
                          DCD      0x0000000c
                          DCD      0x00000001
                          DCD      GUI_Font13_1
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00c0c0c0
                          DCD      0x00ffffff
                  Timer1
00001c  0000              DCW      0x0000
00001e  0000              DCB      0x00,0x00
                  StartPress
                          DCD      0x00000000

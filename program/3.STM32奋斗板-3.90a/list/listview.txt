; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\listview.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\listview.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\listview.crf GUI\Widget\LISTVIEW.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  LISTVIEW__GetRowDistY PROC
;;;105    */
;;;106    unsigned LISTVIEW__GetRowDistY(const LISTVIEW_Obj* pObj) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
;;;107      unsigned RowDistY;
;;;108      if (pObj->RowDistY) {
000004  6de0              LDR      r0,[r4,#0x5c]
000006  b108              CBZ      r0,|L1.12|
;;;109        RowDistY = pObj->RowDistY;
000008  6de5              LDR      r5,[r4,#0x5c]
00000a  e007              B        |L1.28|
                  |L1.12|
;;;110      } else {
;;;111        RowDistY = GUI_GetYDistOfFont(pObj->Props.pFont);
00000c  6d20              LDR      r0,[r4,#0x50]
00000e  f7fffffe          BL       GUI_GetYDistOfFont
000012  4605              MOV      r5,r0
;;;112        if (pObj->ShowGrid) {
000014  6da0              LDR      r0,[r4,#0x58]
000016  b108              CBZ      r0,|L1.28|
;;;113          RowDistY++;
000018  f1050501          ADD      r5,r5,#1
                  |L1.28|
;;;114        }
;;;115      }
;;;116      return RowDistY;
00001c  4628              MOV      r0,r5
;;;117    }
00001e  bd70              POP      {r4-r6,pc}
;;;118    
                          ENDP

                  _GetNumVisibleRows PROC
;;;130    */
;;;131    static unsigned _GetNumVisibleRows(LISTVIEW_Handle hObj, const LISTVIEW_Obj* pObj) {
000020  e92d41fc          PUSH     {r2-r8,lr}
000024  4607              MOV      r7,r0
000026  460c              MOV      r4,r1
;;;132      unsigned RowDistY, ySize, r = 1;
000028  f04f0601          MOV      r6,#1
;;;133      GUI_RECT Rect;
;;;134      WM_GetInsideRectExScrollbar(hObj, &Rect);
00002c  4669              MOV      r1,sp
00002e  4638              MOV      r0,r7
000030  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;135      ySize    = Rect.y1 - Rect.y0 + 1 - HEADER_GetHeight(pObj->hHeader);
000034  f9b40028          LDRSH    r0,[r4,#0x28]
000038  f7fffffe          BL       HEADER_GetHeight
00003c  f9bd1006          LDRSH    r1,[sp,#6]
000040  f9bd2002          LDRSH    r2,[sp,#2]
000044  eba10102          SUB      r1,r1,r2
000048  f1010101          ADD      r1,r1,#1
00004c  eba10800          SUB      r8,r1,r0
;;;136      RowDistY = LISTVIEW__GetRowDistY(pObj);
000050  4620              MOV      r0,r4
000052  f7fffffe          BL       LISTVIEW__GetRowDistY
000056  4605              MOV      r5,r0
;;;137      if (RowDistY) {
000058  b13d              CBZ      r5,|L1.106|
;;;138        r = ySize / RowDistY;
00005a  fbb8f6f5          UDIV     r6,r8,r5
;;;139        r = (r == 0) ? 1 : r;
00005e  b916              CBNZ     r6,|L1.102|
000060  f04f0001          MOV      r0,#1
000064  e000              B        |L1.104|
                  |L1.102|
000066  4630              MOV      r0,r6
                  |L1.104|
000068  4606              MOV      r6,r0
                  |L1.106|
;;;140      }
;;;141      return r;
00006a  4630              MOV      r0,r6
;;;142    }
00006c  e8bd81fc          POP      {r2-r8,pc}
;;;143    
                          ENDP

                  _Paint PROC
;;;147    */
;;;148    static void _Paint(LISTVIEW_Handle hObj, LISTVIEW_Obj* pObj, WM_MESSAGE* pMsg) {
000070  e92d4ff7          PUSH     {r0-r2,r4-r11,lr}
000074  b090              SUB      sp,sp,#0x40
000076  460c              MOV      r4,r1
;;;149      const GUI_ARRAY* pRow;
;;;150      GUI_RECT ClipRect, Rect;
;;;151      int NumRows, NumVisRows, NumColumns;
;;;152      int LBorder, RBorder, EffectSize;
;;;153      int xPos, yPos, Width, RowDistY;
;;;154      int Align, i, j, EndRow;
;;;155      /* Init some values */
;;;156      NumColumns = HEADER_GetNumItems(pObj->hHeader);
000078  f9b40028          LDRSH    r0,[r4,#0x28]
00007c  f7fffffe          BL       HEADER_GetNumItems
000080  9008              STR      r0,[sp,#0x20]
;;;157      NumRows    = GUI_ARRAY_GetNumItems(&pObj->RowArray);
000082  f104002a          ADD      r0,r4,#0x2a
000086  f7fffffe          BL       GUI_ARRAY_GetNumItems
00008a  900a              STR      r0,[sp,#0x28]
;;;158      NumVisRows = _GetNumVisibleRows(hObj, pObj);
00008c  4621              MOV      r1,r4
00008e  9810              LDR      r0,[sp,#0x40]
000090  f7fffffe          BL       _GetNumVisibleRows
000094  9009              STR      r0,[sp,#0x24]
;;;159      RowDistY   = LISTVIEW__GetRowDistY(pObj);
000096  4620              MOV      r0,r4
000098  f7fffffe          BL       LISTVIEW__GetRowDistY
00009c  9005              STR      r0,[sp,#0x14]
;;;160      LBorder    = pObj->LBorder;
00009e  6e20              LDR      r0,[r4,#0x60]
0000a0  9007              STR      r0,[sp,#0x1c]
;;;161      RBorder    = pObj->RBorder;
0000a2  6e60              LDR      r0,[r4,#0x64]
0000a4  9006              STR      r0,[sp,#0x18]
;;;162      EffectSize = pObj->Widget.pEffect->EffectSize;
0000a6  6a20              LDR      r0,[r4,#0x20]
0000a8  f8d09014          LDR      r9,[r0,#0x14]
;;;163      yPos       = HEADER_GetHeight(pObj->hHeader) + EffectSize;
0000ac  f9b40028          LDRSH    r0,[r4,#0x28]
0000b0  f7fffffe          BL       HEADER_GetHeight
0000b4  eb000509          ADD      r5,r0,r9
;;;164      EndRow     = pObj->ScrollStateV.v + (((NumVisRows + 1) > NumRows) ? NumRows : NumVisRows + 1);
0000b8  6ee2              LDR      r2,[r4,#0x6c]
0000ba  9809              LDR      r0,[sp,#0x24]
0000bc  f1000001          ADD      r0,r0,#1
0000c0  990a              LDR      r1,[sp,#0x28]
0000c2  4288              CMP      r0,r1
0000c4  dd01              BLE      |L1.202|
0000c6  980a              LDR      r0,[sp,#0x28]
0000c8  e002              B        |L1.208|
                  |L1.202|
0000ca  9809              LDR      r0,[sp,#0x24]
0000cc  f1000001          ADD      r0,r0,#1
                  |L1.208|
0000d0  4410              ADD      r0,r0,r2
0000d2  9002              STR      r0,[sp,#8]
;;;165      /* Calculate clipping rectangle */
;;;166      ClipRect = *(const GUI_RECT*)pMsg->Data.p;
0000d4  9812              LDR      r0,[sp,#0x48]
0000d6  6880              LDR      r0,[r0,#8]
0000d8  6801              LDR      r1,[r0,#0]
0000da  910d              STR      r1,[sp,#0x34]
0000dc  6840              LDR      r0,[r0,#4]
0000de  900e              STR      r0,[sp,#0x38]
;;;167      GUI_MoveRect(&ClipRect, -pObj->Widget.Win.Rect.x0, -pObj->Widget.Win.Rect.y0);
0000e0  f9b40002          LDRSH    r0,[r4,#2]
0000e4  f1c00200          RSB      r2,r0,#0
0000e8  f9b40000          LDRSH    r0,[r4,#0]
0000ec  f1c00100          RSB      r1,r0,#0
0000f0  a80d              ADD      r0,sp,#0x34
0000f2  f7fffffe          BL       GUI_MoveRect
;;;168      WM_GetInsideRectExScrollbar(hObj, &Rect);
0000f6  a90b              ADD      r1,sp,#0x2c
0000f8  9810              LDR      r0,[sp,#0x40]
0000fa  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;169      GUI__IntersectRect(&ClipRect, &Rect);
0000fe  a90b              ADD      r1,sp,#0x2c
000100  a80d              ADD      r0,sp,#0x34
000102  f7fffffe          BL       GUI__IntersectRect
;;;170      /* Set drawing color, font and text mode */
;;;171      LCD_SetColor(pObj->Props.aTextColor[0]);
000106  6c20              LDR      r0,[r4,#0x40]
000108  f7fffffe          BL       LCD_SetColor
;;;172      GUI_SetFont(pObj->Props.pFont);
00010c  6d20              LDR      r0,[r4,#0x50]
00010e  f7fffffe          BL       GUI_SetFont
;;;173      GUI_SetTextMode(GUI_TM_TRANS);
000112  2002              MOVS     r0,#2
000114  f7fffffe          BL       GUI_SetTextMode
;;;174      /* Do the drawing */
;;;175      for (i = pObj->ScrollStateV.v; i < EndRow; i++) {
000118  6ee6              LDR      r6,[r4,#0x6c]
00011a  e0d0              B        |L1.702|
                  |L1.284|
;;;176        pRow = (const GUI_ARRAY*)GUI_ARRAY_GetpItem(&pObj->RowArray, i);
00011c  4631              MOV      r1,r6
00011e  f104002a          ADD      r0,r4,#0x2a
000122  f7fffffe          BL       GUI_ARRAY_GetpItem
000126  900f              STR      r0,[sp,#0x3c]
;;;177        if (pRow) {
000128  980f              LDR      r0,[sp,#0x3c]
00012a  2800              CMP      r0,#0
00012c  d072              BEQ      |L1.532|
;;;178          Rect.y0 = yPos;
00012e  b228              SXTH     r0,r5
000130  f8ad002e          STRH     r0,[sp,#0x2e]
;;;179          /* Break when all other rows are outside the drawing area */
;;;180          if (Rect.y0 > ClipRect.y1) {
000134  f9bd002e          LDRSH    r0,[sp,#0x2e]
000138  f9bd103a          LDRSH    r1,[sp,#0x3a]
00013c  4288              CMP      r0,r1
00013e  dd00              BLE      |L1.322|
;;;181            break;
000140  e0c1              B        |L1.710|
                  |L1.322|
;;;182          }
;;;183          Rect.y1 = yPos + RowDistY - 1;
000142  9805              LDR      r0,[sp,#0x14]
000144  4428              ADD      r0,r0,r5
000146  f1a00001          SUB      r0,r0,#1
00014a  b200              SXTH     r0,r0
00014c  f8ad0032          STRH     r0,[sp,#0x32]
;;;184          /* Make sure that we draw only when row is in drawing area */
;;;185          if (Rect.y1 >= ClipRect.y0) {
000150  f9bd0032          LDRSH    r0,[sp,#0x32]
000154  f9bd1036          LDRSH    r1,[sp,#0x36]
000158  4288              CMP      r0,r1
00015a  db7c              BLT      |L1.598|
;;;186            int ColorIndex;
;;;187            /* Set background color */
;;;188            if (i == pObj->Sel) {
00015c  6d60              LDR      r0,[r4,#0x54]
00015e  42b0              CMP      r0,r6
000160  d10a              BNE      |L1.376|
;;;189              ColorIndex = (pObj->Widget.State & WIDGET_STATE_FOCUS) ? 2 : 1;
000162  8ce0              LDRH     r0,[r4,#0x26]
000164  f0100f01          TST      r0,#1
000168  d002              BEQ      |L1.368|
00016a  f04f0002          MOV      r0,#2
00016e  e001              B        |L1.372|
                  |L1.368|
000170  f04f0001          MOV      r0,#1
                  |L1.372|
000174  4680              MOV      r8,r0
000176  e001              B        |L1.380|
                  |L1.376|
;;;190            } else {
;;;191              ColorIndex = 0;
000178  f04f0800          MOV      r8,#0
                  |L1.380|
;;;192            }
;;;193            LCD_SetBkColor(pObj->Props.aBkColor[ColorIndex]);
00017c  f1040134          ADD      r1,r4,#0x34
000180  f8510028          LDR      r0,[r1,r8,LSL #2]
000184  f7fffffe          BL       LCD_SetBkColor
;;;194            /* Iterate over all columns */
;;;195            if (pObj->ShowGrid) {
000188  6da0              LDR      r0,[r4,#0x58]
00018a  b130              CBZ      r0,|L1.410|
;;;196              Rect.y1--;
00018c  f8bd0032          LDRH     r0,[sp,#0x32]
000190  f1a00001          SUB      r0,r0,#1
000194  b200              SXTH     r0,r0
000196  f8ad0032          STRH     r0,[sp,#0x32]
                  |L1.410|
;;;197            }
;;;198            xPos = EffectSize - pObj->ScrollStateH.v;
00019a  6fa0              LDR      r0,[r4,#0x78]
00019c  eba90700          SUB      r7,r9,r0
;;;199            for (j = 0; j < NumColumns; j++) {
0001a0  f04f0000          MOV      r0,#0
0001a4  9003              STR      r0,[sp,#0xc]
0001a6  e073              B        |L1.656|
                  |L1.424|
;;;200              Width   = HEADER_GetItemWidth(pObj->hHeader, j);
0001a8  f9b40028          LDRSH    r0,[r4,#0x28]
0001ac  9903              LDR      r1,[sp,#0xc]
0001ae  f7fffffe          BL       HEADER_GetItemWidth
0001b2  4682              MOV      r10,r0
;;;201              Rect.x0 = xPos;
0001b4  b238              SXTH     r0,r7
0001b6  f8ad002c          STRH     r0,[sp,#0x2c]
;;;202              /* Break when all other columns are outside the drawing area */
;;;203              if (Rect.x0 > ClipRect.x1) {
0001ba  f9bd002c          LDRSH    r0,[sp,#0x2c]
0001be  f9bd1038          LDRSH    r1,[sp,#0x38]
0001c2  4288              CMP      r0,r1
0001c4  dd00              BLE      |L1.456|
;;;204                break;
0001c6  e067              B        |L1.664|
                  |L1.456|
;;;205              }
;;;206              Rect.x1 = xPos + Width - 1;
0001c8  eb07000a          ADD      r0,r7,r10
0001cc  f1a00001          SUB      r0,r0,#1
0001d0  b200              SXTH     r0,r0
0001d2  f8ad0030          STRH     r0,[sp,#0x30]
;;;207              /* Make sure that we draw only when column is in drawing area */
;;;208              if (Rect.x1 >= ClipRect.x0) {
0001d6  f9bd0030          LDRSH    r0,[sp,#0x30]
0001da  f9bd1034          LDRSH    r1,[sp,#0x34]
0001de  4288              CMP      r0,r1
0001e0  db51              BLT      |L1.646|
;;;209                LISTVIEW_ITEM * pItem;
;;;210                pItem = (LISTVIEW_ITEM *)GUI_ARRAY_GetpItem(pRow, j);
0001e2  9903              LDR      r1,[sp,#0xc]
0001e4  980f              LDR      r0,[sp,#0x3c]
0001e6  f7fffffe          BL       GUI_ARRAY_GetpItem
0001ea  4683              MOV      r11,r0
;;;211                if (pItem->hItemInfo) {
0001ec  f8bb0000          LDRH     r0,[r11,#0]
0001f0  b188              CBZ      r0,|L1.534|
;;;212                  LISTVIEW_ITEM_INFO * pItemInfo;
;;;213                  pItemInfo = (LISTVIEW_ITEM_INFO *)GUI_ALLOC_h2p(pItem->hItemInfo);
0001f2  f9bb0000          LDRSH    r0,[r11,#0]
0001f6  f7fffffe          BL       GUI_ALLOC_h2p
0001fa  9001              STR      r0,[sp,#4]
;;;214                  LCD_SetBkColor(pItemInfo->aBkColor[ColorIndex]);
0001fc  9901              LDR      r1,[sp,#4]
0001fe  f8510028          LDR      r0,[r1,r8,LSL #2]
000202  f7fffffe          BL       LCD_SetBkColor
;;;215                  LCD_SetColor(pItemInfo->aTextColor[ColorIndex]);
000206  9901              LDR      r1,[sp,#4]
000208  310c              ADDS     r1,r1,#0xc
00020a  f8510028          LDR      r0,[r1,r8,LSL #2]
00020e  f7fffffe          BL       LCD_SetColor
;;;216                } else {
000212  e006              B        |L1.546|
                  |L1.532|
000214  e051              B        |L1.698|
                  |L1.534|
;;;217                  LCD_SetColor(pObj->Props.aTextColor[ColorIndex]);
000216  f1040140          ADD      r1,r4,#0x40
00021a  f8510028          LDR      r0,[r1,r8,LSL #2]
00021e  f7fffffe          BL       LCD_SetColor
                  |L1.546|
;;;218                }
;;;219                /* Clear background */
;;;220                GUI_ClearRect(Rect.x0, Rect.y0, Rect.x1, Rect.y1);
000222  f9bd3032          LDRSH    r3,[sp,#0x32]
000226  f9bd2030          LDRSH    r2,[sp,#0x30]
00022a  f9bd102e          LDRSH    r1,[sp,#0x2e]
00022e  f9bd002c          LDRSH    r0,[sp,#0x2c]
000232  f7fffffe          BL       GUI_ClearRect
;;;221                /* Draw text */
;;;222                Rect.x0 += LBorder;
000236  f8bd102c          LDRH     r1,[sp,#0x2c]
00023a  9807              LDR      r0,[sp,#0x1c]
00023c  4408              ADD      r0,r0,r1
00023e  b200              SXTH     r0,r0
000240  f8ad002c          STRH     r0,[sp,#0x2c]
;;;223                Rect.x1 -= RBorder;
000244  f8bd1030          LDRH     r1,[sp,#0x30]
000248  9806              LDR      r0,[sp,#0x18]
00024a  eba10000          SUB      r0,r1,r0
00024e  b200              SXTH     r0,r0
000250  f8ad0030          STRH     r0,[sp,#0x30]
;;;224                Align = *((int*)GUI_ARRAY_GetpItem(&pObj->AlignArray, j));
000254  e000              B        |L1.600|
                  |L1.598|
000256  e02e              B        |L1.694|
                  |L1.600|
000258  f104002e          ADD      r0,r4,#0x2e
00025c  9903              LDR      r1,[sp,#0xc]
00025e  f7fffffe          BL       GUI_ARRAY_GetpItem
000262  6800              LDR      r0,[r0,#0]
000264  9004              STR      r0,[sp,#0x10]
;;;225                GUI_DispStringInRect(pItem->acText, &Rect, Align);
000266  a90b              ADD      r1,sp,#0x2c
000268  f10b0002          ADD      r0,r11,#2
00026c  9a04              LDR      r2,[sp,#0x10]
00026e  f7fffffe          BL       GUI_DispStringInRect
;;;226                if (pItem->hItemInfo) {
000272  f8bb0000          LDRH     r0,[r11,#0]
000276  b128              CBZ      r0,|L1.644|
;;;227                  LCD_SetBkColor(pObj->Props.aBkColor[ColorIndex]);
000278  f1040134          ADD      r1,r4,#0x34
00027c  f8510028          LDR      r0,[r1,r8,LSL #2]
000280  f7fffffe          BL       LCD_SetBkColor
                  |L1.644|
;;;228                }
;;;229              }
000284  bf00              NOP      
                  |L1.646|
;;;230              xPos += Width;
000286  4457              ADD      r7,r7,r10
000288  9803              LDR      r0,[sp,#0xc]          ;199
00028a  f1000001          ADD      r0,r0,#1              ;199
00028e  9003              STR      r0,[sp,#0xc]          ;199
                  |L1.656|
000290  9908              LDR      r1,[sp,#0x20]         ;199
000292  9803              LDR      r0,[sp,#0xc]          ;199
000294  4288              CMP      r0,r1                 ;199
000296  db87              BLT      |L1.424|
                  |L1.664|
000298  bf00              NOP                            ;204
;;;231            }
;;;232            /* Clear unused area to the right of items */
;;;233            if (xPos <= ClipRect.x1) {
00029a  f9bd0038          LDRSH    r0,[sp,#0x38]
00029e  42b8              CMP      r0,r7
0002a0  db08              BLT      |L1.692|
;;;234              GUI_ClearRect(xPos, Rect.y0, ClipRect.x1, Rect.y1);
0002a2  f9bd3032          LDRSH    r3,[sp,#0x32]
0002a6  f9bd2038          LDRSH    r2,[sp,#0x38]
0002aa  f9bd102e          LDRSH    r1,[sp,#0x2e]
0002ae  4638              MOV      r0,r7
0002b0  f7fffffe          BL       GUI_ClearRect
                  |L1.692|
;;;235            }
;;;236          }
0002b4  bf00              NOP      
                  |L1.694|
;;;237          yPos += RowDistY;
0002b6  9805              LDR      r0,[sp,#0x14]
0002b8  4405              ADD      r5,r5,r0
                  |L1.698|
0002ba  f1060601          ADD      r6,r6,#1              ;175
                  |L1.702|
0002be  9802              LDR      r0,[sp,#8]            ;175
0002c0  4286              CMP      r6,r0                 ;175
0002c2  f6ffaf2b          BLT      |L1.284|
                  |L1.710|
0002c6  bf00              NOP                            ;181
;;;238        }
;;;239      }
;;;240      /* Clear unused area below items */
;;;241      if (yPos <= ClipRect.y1) {
0002c8  f9bd003a          LDRSH    r0,[sp,#0x3a]
0002cc  42a8              CMP      r0,r5
0002ce  db0b              BLT      |L1.744|
;;;242        LCD_SetBkColor(pObj->Props.aBkColor[0]);
0002d0  6b60              LDR      r0,[r4,#0x34]
0002d2  f7fffffe          BL       LCD_SetBkColor
;;;243        GUI_ClearRect(ClipRect.x0, yPos, ClipRect.x1, ClipRect.y1);
0002d6  f9bd303a          LDRSH    r3,[sp,#0x3a]
0002da  f9bd2038          LDRSH    r2,[sp,#0x38]
0002de  f9bd0034          LDRSH    r0,[sp,#0x34]
0002e2  4629              MOV      r1,r5
0002e4  f7fffffe          BL       GUI_ClearRect
                  |L1.744|
;;;244      }
;;;245      /* Draw grid */
;;;246      if (pObj->ShowGrid) {
0002e8  6da0              LDR      r0,[r4,#0x58]
0002ea  2800              CMP      r0,#0
0002ec  d046              BEQ      |L1.892|
;;;247        LCD_SetColor(pObj->Props.GridColor);
0002ee  6ce0              LDR      r0,[r4,#0x4c]
0002f0  f7fffffe          BL       LCD_SetColor
;;;248        yPos = HEADER_GetHeight(pObj->hHeader) + EffectSize - 1;
0002f4  f9b40028          LDRSH    r0,[r4,#0x28]
0002f8  f7fffffe          BL       HEADER_GetHeight
0002fc  4448              ADD      r0,r0,r9
0002fe  f1a00501          SUB      r5,r0,#1
;;;249        for (i = 0; i < NumVisRows; i++) {
000302  f04f0600          MOV      r6,#0
000306  e013              B        |L1.816|
                  |L1.776|
;;;250          yPos += RowDistY;
000308  9805              LDR      r0,[sp,#0x14]
00030a  4405              ADD      r5,r5,r0
;;;251          /* Break when all other rows are outside the drawing area */
;;;252          if (yPos > ClipRect.y1) {
00030c  f9bd003a          LDRSH    r0,[sp,#0x3a]
000310  42a8              CMP      r0,r5
000312  da00              BGE      |L1.790|
;;;253            break;
000314  e00f              B        |L1.822|
                  |L1.790|
;;;254          }
;;;255          /* Make sure that we draw only when row is in drawing area */
;;;256          if (yPos >= ClipRect.y0) {
000316  f9bd0036          LDRSH    r0,[sp,#0x36]
00031a  42a8              CMP      r0,r5
00031c  dc06              BGT      |L1.812|
;;;257            GUI_DrawHLine(yPos, ClipRect.x0, ClipRect.x1);
00031e  f9bd2038          LDRSH    r2,[sp,#0x38]
000322  f9bd1034          LDRSH    r1,[sp,#0x34]
000326  4628              MOV      r0,r5
000328  f7fffffe          BL       GUI_DrawHLine
                  |L1.812|
00032c  f1060601          ADD      r6,r6,#1              ;249
                  |L1.816|
000330  9809              LDR      r0,[sp,#0x24]         ;249
000332  4286              CMP      r6,r0                 ;249
000334  dbe8              BLT      |L1.776|
                  |L1.822|
000336  bf00              NOP                            ;253
;;;258          }
;;;259        }
;;;260        xPos = EffectSize - pObj->ScrollStateH.v;
000338  6fa0              LDR      r0,[r4,#0x78]
00033a  eba90700          SUB      r7,r9,r0
;;;261        for (i = 0; i < NumColumns; i++) {
00033e  f04f0600          MOV      r6,#0
000342  e017              B        |L1.884|
                  |L1.836|
;;;262          xPos += HEADER_GetItemWidth(pObj->hHeader, i);
000344  f9b40028          LDRSH    r0,[r4,#0x28]
000348  4631              MOV      r1,r6
00034a  f7fffffe          BL       HEADER_GetItemWidth
00034e  4407              ADD      r7,r7,r0
;;;263          /* Break when all other columns are outside the drawing area */
;;;264          if (xPos > ClipRect.x1) {
000350  f9bd0038          LDRSH    r0,[sp,#0x38]
000354  42b8              CMP      r0,r7
000356  da00              BGE      |L1.858|
;;;265            break;
000358  e00f              B        |L1.890|
                  |L1.858|
;;;266          }
;;;267          /* Make sure that we draw only when column is in drawing area */
;;;268          if (xPos >= ClipRect.x0) {
00035a  f9bd0034          LDRSH    r0,[sp,#0x34]
00035e  42b8              CMP      r0,r7
000360  dc06              BGT      |L1.880|
;;;269            GUI_DrawVLine(xPos, ClipRect.y0, ClipRect.y1);
000362  f9bd203a          LDRSH    r2,[sp,#0x3a]
000366  f9bd1036          LDRSH    r1,[sp,#0x36]
00036a  4638              MOV      r0,r7
00036c  f7fffffe          BL       GUI_DrawVLine
                  |L1.880|
000370  f1060601          ADD      r6,r6,#1              ;261
                  |L1.884|
000374  9808              LDR      r0,[sp,#0x20]         ;261
000376  4286              CMP      r6,r0                 ;261
000378  dbe4              BLT      |L1.836|
                  |L1.890|
00037a  bf00              NOP                            ;265
                  |L1.892|
;;;270          }
;;;271        }
;;;272      }
;;;273      /* Draw the effect */
;;;274      WIDGET__EFFECT_DrawDown(&pObj->Widget);
00037c  4620              MOV      r0,r4
00037e  f7fffffe          BL       WIDGET__EFFECT_DrawDown
;;;275    }
000382  b013              ADD      sp,sp,#0x4c
000384  e8bd8ff0          POP      {r4-r11,pc}
;;;276    
                          ENDP

                  LISTVIEW__InvalidateInsideArea PROC
;;;280    */
;;;281    void LISTVIEW__InvalidateInsideArea(LISTVIEW_Handle hObj, LISTVIEW_Obj* pObj) {
000388  b57c              PUSH     {r2-r6,lr}
00038a  4605              MOV      r5,r0
00038c  460c              MOV      r4,r1
;;;282      GUI_RECT Rect;
;;;283      int HeaderHeight;
;;;284      HeaderHeight = HEADER_GetHeight(pObj->hHeader);
00038e  f9b40028          LDRSH    r0,[r4,#0x28]
000392  f7fffffe          BL       HEADER_GetHeight
000396  4606              MOV      r6,r0
;;;285      WM_GetInsideRectExScrollbar(hObj, &Rect);
000398  4669              MOV      r1,sp
00039a  4628              MOV      r0,r5
00039c  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;286      Rect.y0 += HeaderHeight;
0003a0  f8bd0002          LDRH     r0,[sp,#2]
0003a4  4430              ADD      r0,r0,r6
0003a6  b200              SXTH     r0,r0
0003a8  f8ad0002          STRH     r0,[sp,#2]
;;;287      WM_InvalidateRect(hObj, &Rect);
0003ac  4669              MOV      r1,sp
0003ae  4628              MOV      r0,r5
0003b0  f7fffffe          BL       WM_InvalidateRect
;;;288    }
0003b4  bd7c              POP      {r2-r6,pc}
;;;289    
                          ENDP

                  LISTVIEW__InvalidateRow PROC
;;;293    */
;;;294    void LISTVIEW__InvalidateRow(LISTVIEW_Handle hObj, LISTVIEW_Obj* pObj, int Sel) {
0003b6  e92d41fc          PUSH     {r2-r8,lr}
0003ba  4607              MOV      r7,r0
0003bc  460c              MOV      r4,r1
0003be  4615              MOV      r5,r2
;;;295      if (Sel >= 0) {
0003c0  2d00              CMP      r5,#0
0003c2  db24              BLT      |L1.1038|
;;;296        GUI_RECT Rect;
;;;297        int HeaderHeight, RowDistY;
;;;298        HeaderHeight = HEADER_GetHeight(pObj->hHeader);
0003c4  f9b40028          LDRSH    r0,[r4,#0x28]
0003c8  f7fffffe          BL       HEADER_GetHeight
0003cc  4680              MOV      r8,r0
;;;299        RowDistY     = LISTVIEW__GetRowDistY(pObj);
0003ce  4620              MOV      r0,r4
0003d0  f7fffffe          BL       LISTVIEW__GetRowDistY
0003d4  4606              MOV      r6,r0
;;;300        WM_GetInsideRectExScrollbar(hObj, &Rect);
0003d6  4669              MOV      r1,sp
0003d8  4638              MOV      r0,r7
0003da  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;301        Rect.y0 += HeaderHeight + (Sel - pObj->ScrollStateV.v) * RowDistY;
0003de  f8bd1002          LDRH     r1,[sp,#2]
0003e2  6ee0              LDR      r0,[r4,#0x6c]
0003e4  eba50000          SUB      r0,r5,r0
0003e8  fb008006          MLA      r0,r0,r6,r8
0003ec  4408              ADD      r0,r0,r1
0003ee  b200              SXTH     r0,r0
0003f0  f8ad0002          STRH     r0,[sp,#2]
;;;302        Rect.y1  = Rect.y0 + RowDistY - 1;
0003f4  f8bd0002          LDRH     r0,[sp,#2]
0003f8  4430              ADD      r0,r0,r6
0003fa  f1a00001          SUB      r0,r0,#1
0003fe  b200              SXTH     r0,r0
000400  f8ad0006          STRH     r0,[sp,#6]
;;;303        WM_InvalidateRect(hObj, &Rect);
000404  4669              MOV      r1,sp
000406  4638              MOV      r0,r7
000408  f7fffffe          BL       WM_InvalidateRect
;;;304      }
00040c  bf00              NOP      
                  |L1.1038|
;;;305    }
00040e  e8bd81fc          POP      {r2-r8,pc}
;;;306    
                          ENDP

                  _SetSelFromPos PROC
;;;310    */
;;;311    static void _SetSelFromPos(LISTVIEW_Handle hObj, LISTVIEW_Obj* pObj, const GUI_PID_STATE* pState) {
000412  e92d47fc          PUSH     {r2-r10,lr}
000416  4682              MOV      r10,r0
000418  460c              MOV      r4,r1
00041a  4615              MOV      r5,r2
;;;312      GUI_RECT Rect;
;;;313      int x, y, HeaderHeight;
;;;314      HeaderHeight = HEADER_GetHeight(pObj->hHeader);
00041c  f9b40028          LDRSH    r0,[r4,#0x28]
000420  f7fffffe          BL       HEADER_GetHeight
000424  4680              MOV      r8,r0
;;;315      WM_GetInsideRectExScrollbar(hObj, &Rect);
000426  4669              MOV      r1,sp
000428  4650              MOV      r0,r10
00042a  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;316      x = pState->x - Rect.x0;
00042e  f9bd1000          LDRSH    r1,[sp,#0]
000432  6828              LDR      r0,[r5,#0]
000434  eba00701          SUB      r7,r0,r1
;;;317      y = pState->y - Rect.y0 - HeaderHeight;
000438  f9bd1002          LDRSH    r1,[sp,#2]
00043c  6868              LDR      r0,[r5,#4]
00043e  eba00001          SUB      r0,r0,r1
000442  eba00608          SUB      r6,r0,r8
;;;318      Rect.x1 -= Rect.x0;
000446  f8bd0004          LDRH     r0,[sp,#4]
00044a  f8bd1000          LDRH     r1,[sp,#0]
00044e  eba00001          SUB      r0,r0,r1
000452  b200              SXTH     r0,r0
000454  f8ad0004          STRH     r0,[sp,#4]
;;;319      Rect.y1 -= Rect.y0;
000458  f8bd0006          LDRH     r0,[sp,#6]
00045c  f8bd1002          LDRH     r1,[sp,#2]
000460  eba00001          SUB      r0,r0,r1
000464  b200              SXTH     r0,r0
000466  f8ad0006          STRH     r0,[sp,#6]
;;;320      if ((x >= 0) && (x <= Rect.x1) && (y >= 0) && (y <= (Rect.y1 - HeaderHeight))) {
00046a  2f00              CMP      r7,#0
00046c  db1e              BLT      |L1.1196|
00046e  f9bd0004          LDRSH    r0,[sp,#4]
000472  42b8              CMP      r0,r7
000474  db1a              BLT      |L1.1196|
000476  2e00              CMP      r6,#0
000478  db18              BLT      |L1.1196|
00047a  f9bd0006          LDRSH    r0,[sp,#6]
00047e  eba00008          SUB      r0,r0,r8
000482  42b0              CMP      r0,r6
000484  db12              BLT      |L1.1196|
;;;321        unsigned Sel;
;;;322        Sel = (y / LISTVIEW__GetRowDistY(pObj)) + pObj->ScrollStateV.v;
000486  4620              MOV      r0,r4
000488  f7fffffe          BL       LISTVIEW__GetRowDistY
00048c  fbb6f1f0          UDIV     r1,r6,r0
000490  6ee0              LDR      r0,[r4,#0x6c]
000492  eb010900          ADD      r9,r1,r0
;;;323        if (Sel < GUI_ARRAY_GetNumItems(&pObj->RowArray)) {
000496  f104002a          ADD      r0,r4,#0x2a
00049a  f7fffffe          BL       GUI_ARRAY_GetNumItems
00049e  4548              CMP      r0,r9
0004a0  d903              BLS      |L1.1194|
;;;324          LISTVIEW_SetSel(hObj, Sel);
0004a2  4649              MOV      r1,r9
0004a4  4650              MOV      r0,r10
0004a6  f7fffffe          BL       LISTVIEW_SetSel
                  |L1.1194|
;;;325        }
;;;326      }
0004aa  bf00              NOP      
                  |L1.1196|
;;;327    }
0004ac  e8bd87fc          POP      {r2-r10,pc}
;;;328    
                          ENDP

                  _NotifyOwner PROC
;;;336    */
;;;337    static void _NotifyOwner(WM_HWIN hObj, int Notification) {
0004b0  b5fe              PUSH     {r1-r7,lr}
0004b2  4604              MOV      r4,r0
0004b4  460d              MOV      r5,r1
;;;338      WM_MESSAGE Msg = {0};
0004b6  f04f0000          MOV      r0,#0
0004ba  9000              STR      r0,[sp,#0]
0004bc  9001              STR      r0,[sp,#4]
0004be  9002              STR      r0,[sp,#8]
;;;339      WM_HWIN hOwner;
;;;340      LISTVIEW_Obj* pObj    = LISTVIEW_H2P(hObj);
0004c0  4620              MOV      r0,r4
0004c2  f7fffffe          BL       GUI_ALLOC_h2p
0004c6  4606              MOV      r6,r0
;;;341      hOwner = pObj->hOwner ? pObj->hOwner : WM_GetParent(hObj);
0004c8  f8b60080          LDRH     r0,[r6,#0x80]
0004cc  b110              CBZ      r0,|L1.1236|
0004ce  f9b60080          LDRSH    r0,[r6,#0x80]
0004d2  e002              B        |L1.1242|
                  |L1.1236|
0004d4  4620              MOV      r0,r4
0004d6  f7fffffe          BL       WM_GetParent
                  |L1.1242|
0004da  4607              MOV      r7,r0
;;;342      Msg.MsgId   = WM_NOTIFY_PARENT;
0004dc  f04f0026          MOV      r0,#0x26
0004e0  9000              STR      r0,[sp,#0]
;;;343      Msg.Data.v  = Notification;
0004e2  9502              STR      r5,[sp,#8]
;;;344      Msg.hWin    = hObj;
0004e4  f8ad4004          STRH     r4,[sp,#4]
;;;345      WM_SendMessage(hOwner, &Msg);
0004e8  4669              MOV      r1,sp
0004ea  4638              MOV      r0,r7
0004ec  f7fffffe          BL       WM_SendMessage
;;;346    }
0004f0  bdfe              POP      {r1-r7,pc}
;;;347    
                          ENDP

                  _OnTouch PROC
;;;351    */
;;;352    static void _OnTouch(LISTVIEW_Handle hObj, LISTVIEW_Obj* pObj, WM_MESSAGE*pMsg) {
0004f2  e92d41f0          PUSH     {r4-r8,lr}
0004f6  4680              MOV      r8,r0
0004f8  460e              MOV      r6,r1
0004fa  4615              MOV      r5,r2
;;;353      int Notification;
;;;354      const GUI_PID_STATE* pState = (const GUI_PID_STATE*)pMsg->Data.p;
0004fc  68af              LDR      r7,[r5,#8]
;;;355      GUI_USE_PARA(pObj);
0004fe  bf00              NOP      
;;;356      if (pMsg->Data.p) {  /* Something happened in our area (pressed or released) */
000500  68a8              LDR      r0,[r5,#8]
000502  b178              CBZ      r0,|L1.1316|
;;;357        if (pState->Pressed) {
000504  7a38              LDRB     r0,[r7,#8]
000506  b150              CBZ      r0,|L1.1310|
;;;358          _SetSelFromPos(hObj, pObj, pState);
000508  463a              MOV      r2,r7
00050a  4631              MOV      r1,r6
00050c  4640              MOV      r0,r8
00050e  f7fffffe          BL       _SetSelFromPos
;;;359          Notification = WM_NOTIFICATION_CLICKED;
000512  f04f0401          MOV      r4,#1
;;;360          WM_SetFocus(hObj);
000516  4640              MOV      r0,r8
000518  f7fffffe          BL       WM_SetFocus
00051c  e004              B        |L1.1320|
                  |L1.1310|
;;;361        } else {
;;;362          Notification = WM_NOTIFICATION_RELEASED;
00051e  f04f0402          MOV      r4,#2
000522  e001              B        |L1.1320|
                  |L1.1316|
;;;363        }
;;;364      } else {
;;;365        Notification = WM_NOTIFICATION_MOVED_OUT;
000524  f04f0403          MOV      r4,#3
                  |L1.1320|
;;;366      }
;;;367      _NotifyOwner(hObj, Notification);
000528  4621              MOV      r1,r4
00052a  4640              MOV      r0,r8
00052c  f7fffffe          BL       _NotifyOwner
;;;368    }
000530  e8bd81f0          POP      {r4-r8,pc}
;;;369    
                          ENDP

                  _GetXSize PROC
;;;376    */
;;;377    static int _GetXSize(LISTVIEW_Handle hObj) {
000534  b51c              PUSH     {r2-r4,lr}
000536  4604              MOV      r4,r0
;;;378      GUI_RECT Rect;
;;;379      WM_GetInsideRectExScrollbar(hObj, &Rect);
000538  4669              MOV      r1,sp
00053a  4620              MOV      r0,r4
00053c  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;380      return Rect.x1 + 1;
000540  f9bd0004          LDRSH    r0,[sp,#4]
000544  1c40              ADDS     r0,r0,#1
;;;381    }
000546  bd1c              POP      {r2-r4,pc}
;;;382    
                          ENDP

                  _GetHeaderWidth PROC
;;;393    */
;;;394    static int _GetHeaderWidth(LISTVIEW_Obj* pObj, HEADER_Handle hHeader) {
000548  e92d41f0          PUSH     {r4-r8,lr}
00054c  4604              MOV      r4,r0
00054e  460f              MOV      r7,r1
;;;395      int NumItems, i, r = 1;
000550  f04f0501          MOV      r5,#1
;;;396      NumItems = HEADER_GetNumItems(hHeader);
000554  4638              MOV      r0,r7
000556  f7fffffe          BL       HEADER_GetNumItems
00055a  4680              MOV      r8,r0
;;;397      if (NumItems) {
00055c  f1b80f00          CMP      r8,#0
000560  d00d              BEQ      |L1.1406|
;;;398        for (i = 0, r = 0; i < NumItems; i++) {
000562  f04f0600          MOV      r6,#0
000566  f04f0500          MOV      r5,#0
00056a  e006              B        |L1.1402|
                  |L1.1388|
;;;399          r += HEADER_GetItemWidth(hHeader, i);
00056c  4631              MOV      r1,r6
00056e  4638              MOV      r0,r7
000570  f7fffffe          BL       HEADER_GetItemWidth
000574  4405              ADD      r5,r5,r0
000576  f1060601          ADD      r6,r6,#1              ;398
                  |L1.1402|
00057a  4546              CMP      r6,r8                 ;398
00057c  dbf6              BLT      |L1.1388|
                  |L1.1406|
;;;400        }
;;;401      }
;;;402      if (pObj->ScrollStateH.v > (r - pObj->ScrollStateH.PageSize)) {
00057e  e9d4101e          LDRD     r1,r0,[r4,#0x78]
000582  1a28              SUBS     r0,r5,r0
000584  4281              CMP      r1,r0
000586  dd06              BLE      |L1.1430|
;;;403        r += pObj->ScrollStateH.PageSize - (r - pObj->ScrollStateH.v);
000588  e9d4011e          LDRD     r0,r1,[r4,#0x78]
00058c  eba50000          SUB      r0,r5,r0
000590  eba10000          SUB      r0,r1,r0
000594  4405              ADD      r5,r5,r0
                  |L1.1430|
;;;404      }
;;;405      return r;
000596  4628              MOV      r0,r5
;;;406    }
000598  e8bd81f0          POP      {r4-r8,pc}
;;;407    
                          ENDP

                  LISTVIEW__UpdateScrollPos PROC
;;;419    */
;;;420    int LISTVIEW__UpdateScrollPos(LISTVIEW_Handle hObj, LISTVIEW_Obj* pObj) {
00059c  b570              PUSH     {r4-r6,lr}
00059e  4605              MOV      r5,r0
0005a0  460c              MOV      r4,r1
;;;421      int PrevScrollStateV;
;;;422      PrevScrollStateV = pObj->ScrollStateV.v;
0005a2  6ee6              LDR      r6,[r4,#0x6c]
;;;423      if (pObj->Sel >= 0) {
0005a4  6d60              LDR      r0,[r4,#0x54]
0005a6  2800              CMP      r0,#0
0005a8  db07              BLT      |L1.1466|
;;;424        WM_CheckScrollPos(&pObj->ScrollStateV, pObj->Sel, 0, 0);
0005aa  2300              MOVS     r3,#0
0005ac  461a              MOV      r2,r3
0005ae  f1040068          ADD      r0,r4,#0x68
0005b2  6d61              LDR      r1,[r4,#0x54]
0005b4  f7fffffe          BL       WM_CheckScrollPos
0005b8  e003              B        |L1.1474|
                  |L1.1466|
;;;425      } else {
;;;426        WM_CheckScrollBounds(&pObj->ScrollStateV);
0005ba  f1040068          ADD      r0,r4,#0x68
0005be  f7fffffe          BL       WM_CheckScrollBounds
                  |L1.1474|
;;;427      }
;;;428      WM_CheckScrollBounds(&pObj->ScrollStateH);
0005c2  f1040074          ADD      r0,r4,#0x74
0005c6  f7fffffe          BL       WM_CheckScrollBounds
;;;429      WIDGET__SetScrollState(hObj, &pObj->ScrollStateV, &pObj->ScrollStateH);
0005ca  f1040274          ADD      r2,r4,#0x74
0005ce  f1040168          ADD      r1,r4,#0x68
0005d2  4628              MOV      r0,r5
0005d4  f7fffffe          BL       WIDGET__SetScrollState
;;;430      return pObj->ScrollStateV.v - PrevScrollStateV;
0005d8  6ee0              LDR      r0,[r4,#0x6c]
0005da  1b80              SUBS     r0,r0,r6
;;;431    }
0005dc  bd70              POP      {r4-r6,pc}
;;;432    
                          ENDP

                  LISTVIEW__UpdateScrollParas PROC
;;;441    */
;;;442    int LISTVIEW__UpdateScrollParas(LISTVIEW_Handle hObj, LISTVIEW_Obj* pObj) {
0005de  b570              PUSH     {r4-r6,lr}
0005e0  4605              MOV      r5,r0
0005e2  460c              MOV      r4,r1
;;;443      int NumRows;
;;;444      NumRows = GUI_ARRAY_GetNumItems(&pObj->RowArray);
0005e4  f104002a          ADD      r0,r4,#0x2a
0005e8  f7fffffe          BL       GUI_ARRAY_GetNumItems
0005ec  4606              MOV      r6,r0
;;;445      /* update vertical scrollbar */
;;;446      pObj->ScrollStateV.PageSize = _GetNumVisibleRows(hObj, pObj);
0005ee  4621              MOV      r1,r4
0005f0  4628              MOV      r0,r5
0005f2  f7fffffe          BL       _GetNumVisibleRows
0005f6  6720              STR      r0,[r4,#0x70]
;;;447      pObj->ScrollStateV.NumItems = (NumRows) ? NumRows : 1;
0005f8  b10e              CBZ      r6,|L1.1534|
0005fa  4630              MOV      r0,r6
0005fc  e001              B        |L1.1538|
                  |L1.1534|
0005fe  f04f0001          MOV      r0,#1
                  |L1.1538|
000602  66a0              STR      r0,[r4,#0x68]
;;;448      /* update horizontal scrollbar */
;;;449      pObj->ScrollStateH.PageSize = _GetXSize(hObj);
000604  4628              MOV      r0,r5
000606  f7fffffe          BL       _GetXSize
00060a  67e0              STR      r0,[r4,#0x7c]
;;;450      pObj->ScrollStateH.NumItems = _GetHeaderWidth(pObj, pObj->hHeader);
00060c  f9b41028          LDRSH    r1,[r4,#0x28]
000610  4620              MOV      r0,r4
000612  f7fffffe          BL       _GetHeaderWidth
000616  6760              STR      r0,[r4,#0x74]
;;;451      return LISTVIEW__UpdateScrollPos(hObj, pObj);
000618  4621              MOV      r1,r4
00061a  4628              MOV      r0,r5
00061c  f7fffffe          BL       LISTVIEW__UpdateScrollPos
;;;452    }
000620  bd70              POP      {r4-r6,pc}
;;;453    
                          ENDP

                  _FreeAttached PROC
;;;460    */
;;;461    static void _FreeAttached(LISTVIEW_Obj * pObj) {
000622  e92d47f0          PUSH     {r4-r10,lr}
000626  4604              MOV      r4,r0
;;;462      int i, j, NumRows, NumColumns;
;;;463      NumRows    = GUI_ARRAY_GetNumItems(&pObj->RowArray);
000628  f104002a          ADD      r0,r4,#0x2a
00062c  f7fffffe          BL       GUI_ARRAY_GetNumItems
000630  4680              MOV      r8,r0
;;;464      NumColumns = GUI_ARRAY_GetNumItems(&pObj->AlignArray);
000632  f104002e          ADD      r0,r4,#0x2e
000636  f7fffffe          BL       GUI_ARRAY_GetNumItems
00063a  4681              MOV      r9,r0
;;;465      for (i = 0; i < NumRows; i++) {
00063c  f04f0500          MOV      r5,#0
000640  e01c              B        |L1.1660|
                  |L1.1602|
;;;466        GUI_ARRAY * pRow;
;;;467        pRow = (GUI_ARRAY *)GUI_ARRAY_GetpItem(&pObj->RowArray, i);
000642  4629              MOV      r1,r5
000644  f104002a          ADD      r0,r4,#0x2a
000648  f7fffffe          BL       GUI_ARRAY_GetpItem
00064c  4682              MOV      r10,r0
;;;468        /* Delete attached info items */
;;;469        for (j = 0; j < NumColumns; j++) {
00064e  f04f0600          MOV      r6,#0
000652  e00c              B        |L1.1646|
                  |L1.1620|
;;;470          LISTVIEW_ITEM * pItem;
;;;471          pItem = (LISTVIEW_ITEM *)GUI_ARRAY_GetpItem(pRow, j);
000654  4631              MOV      r1,r6
000656  4650              MOV      r0,r10
000658  f7fffffe          BL       GUI_ARRAY_GetpItem
00065c  4607              MOV      r7,r0
;;;472          if (pItem->hItemInfo) {
00065e  8838              LDRH     r0,[r7,#0]
000660  b118              CBZ      r0,|L1.1642|
;;;473            GUI_ALLOC_Free(pItem->hItemInfo);
000662  f9b70000          LDRSH    r0,[r7,#0]
000666  f7fffffe          BL       GUI_ALLOC_Free
                  |L1.1642|
00066a  f1060601          ADD      r6,r6,#1              ;469
                  |L1.1646|
00066e  454e              CMP      r6,r9                 ;469
000670  dbf0              BLT      |L1.1620|
;;;474          }
;;;475        }
;;;476        /* Delete row */
;;;477        GUI_ARRAY_Delete(pRow);
000672  4650              MOV      r0,r10
000674  f7fffffe          BL       GUI_ARRAY_Delete
000678  f1050501          ADD      r5,r5,#1              ;465
                  |L1.1660|
00067c  4545              CMP      r5,r8                 ;465
00067e  dbe0              BLT      |L1.1602|
;;;478      }
;;;479      GUI_ARRAY_Delete(&pObj->AlignArray);
000680  f104002e          ADD      r0,r4,#0x2e
000684  f7fffffe          BL       GUI_ARRAY_Delete
;;;480      GUI_ARRAY_Delete(&pObj->RowArray);
000688  f104002a          ADD      r0,r4,#0x2a
00068c  f7fffffe          BL       GUI_ARRAY_Delete
;;;481    }
000690  e8bd87f0          POP      {r4-r10,pc}
;;;482    
                          ENDP

                  LISTVIEW_DecSel PROC
;;;642    */
;;;643    void LISTVIEW_DecSel(LISTVIEW_Handle hObj) {
000694  b570              PUSH     {r4-r6,lr}
000696  4605              MOV      r5,r0
;;;644      int Sel = LISTVIEW_GetSel(hObj);
000698  4628              MOV      r0,r5
00069a  f7fffffe          BL       LISTVIEW_GetSel
00069e  4604              MOV      r4,r0
;;;645      if (Sel) {
0006a0  b11c              CBZ      r4,|L1.1706|
;;;646        LISTVIEW_SetSel(hObj, Sel - 1);
0006a2  1e61              SUBS     r1,r4,#1
0006a4  4628              MOV      r0,r5
0006a6  f7fffffe          BL       LISTVIEW_SetSel
                  |L1.1706|
;;;647      }
;;;648    }
0006aa  bd70              POP      {r4-r6,pc}
;;;649    
                          ENDP

                  LISTVIEW_IncSel PROC
;;;633    */
;;;634    void LISTVIEW_IncSel(LISTVIEW_Handle hObj) {
0006ac  b570              PUSH     {r4-r6,lr}
0006ae  4604              MOV      r4,r0
;;;635      int Sel = LISTVIEW_GetSel(hObj);
0006b0  4620              MOV      r0,r4
0006b2  f7fffffe          BL       LISTVIEW_GetSel
0006b6  4605              MOV      r5,r0
;;;636      LISTVIEW_SetSel(hObj, Sel + 1);
0006b8  f1050101          ADD      r1,r5,#1
0006bc  4620              MOV      r0,r4
0006be  f7fffffe          BL       LISTVIEW_SetSel
;;;637    }
0006c2  bd70              POP      {r4-r6,pc}
;;;638    
                          ENDP

                  _AddKey PROC
;;;489    */
;;;490    static int _AddKey(LISTVIEW_Handle hObj, int Key) {
0006c4  b570              PUSH     {r4-r6,lr}
0006c6  4605              MOV      r5,r0
0006c8  460c              MOV      r4,r1
;;;491      switch (Key) {
0006ca  2c11              CMP      r4,#0x11
0006cc  d006              BEQ      |L1.1756|
0006ce  2c13              CMP      r4,#0x13
0006d0  d109              BNE      |L1.1766|
;;;492      case GUI_KEY_DOWN:
;;;493        LISTVIEW_IncSel(hObj);
0006d2  4628              MOV      r0,r5
0006d4  f7fffffe          BL       LISTVIEW_IncSel
;;;494        return 1;               /* Key has been consumed */
0006d8  2001              MOVS     r0,#1
                  |L1.1754|
;;;495      case GUI_KEY_UP:
;;;496        LISTVIEW_DecSel(hObj);
;;;497        return 1;               /* Key has been consumed */
;;;498      }
;;;499      return 0;                 /* Key has NOT been consumed */
;;;500    }
0006da  bd70              POP      {r4-r6,pc}
                  |L1.1756|
0006dc  4628              MOV      r0,r5                 ;496
0006de  f7fffffe          BL       LISTVIEW_DecSel
0006e2  2001              MOVS     r0,#1                 ;497
0006e4  e7f9              B        |L1.1754|
                  |L1.1766|
0006e6  2000              MOVS     r0,#0                 ;499
0006e8  e7f7              B        |L1.1754|
;;;501    
                          ENDP

                  _LISTVIEW_Callback PROC
;;;505    */
;;;506    static void _LISTVIEW_Callback (WM_MESSAGE *pMsg) {
0006ea  b5fe              PUSH     {r1-r7,lr}
0006ec  4604              MOV      r4,r0
;;;507      LISTVIEW_Handle hObj;
;;;508      LISTVIEW_Obj* pObj;
;;;509      WM_SCROLL_STATE ScrollState;
;;;510      hObj = pMsg->hWin;
0006ee  f9b46004          LDRSH    r6,[r4,#4]
;;;511      /* Let widget handle the standard messages */
;;;512      if (WIDGET_HandleActive(hObj, pMsg) == 0) {
0006f2  4621              MOV      r1,r4
0006f4  4630              MOV      r0,r6
0006f6  f7fffffe          BL       WIDGET_HandleActive
0006fa  b900              CBNZ     r0,|L1.1790|
                  |L1.1788|
;;;513        return;
;;;514      }
;;;515      pObj = LISTVIEW_H2P(hObj);
;;;516      switch (pMsg->MsgId) {
;;;517      case WM_NOTIFY_CLIENTCHANGE:
;;;518      case WM_SIZE:
;;;519        LISTVIEW__UpdateScrollParas(hObj, pObj);
;;;520        return;
;;;521      case WM_NOTIFY_PARENT:
;;;522        switch (pMsg->Data.v) {
;;;523        case WM_NOTIFICATION_CHILD_DELETED:
;;;524          /* make sure we do not send any messages to the header child once it has been deleted */
;;;525          if (pMsg->hWinSrc == pObj->hHeader) {
;;;526            pObj->hHeader = 0;
;;;527          }
;;;528          break;
;;;529        case WM_NOTIFICATION_VALUE_CHANGED:
;;;530          if (pMsg->hWinSrc == WM_GetScrollbarV(hObj)) {
;;;531            WM_GetScrollState(pMsg->hWinSrc, &ScrollState);
;;;532            pObj->ScrollStateV.v = ScrollState.v;
;;;533            LISTVIEW__InvalidateInsideArea(hObj, pObj);
;;;534            _NotifyOwner(hObj, WM_NOTIFICATION_SCROLL_CHANGED);
;;;535          } else if (pMsg->hWinSrc == WM_GetScrollbarH(hObj)) {
;;;536            WM_GetScrollState(pMsg->hWinSrc, &ScrollState);
;;;537            pObj->ScrollStateH.v = ScrollState.v;
;;;538            LISTVIEW__UpdateScrollParas(hObj, pObj);
;;;539            HEADER_SetScrollPos(pObj->hHeader, pObj->ScrollStateH.v);
;;;540            _NotifyOwner(hObj, WM_NOTIFICATION_SCROLL_CHANGED);
;;;541          }
;;;542          break;
;;;543        case WM_NOTIFICATION_SCROLLBAR_ADDED:
;;;544          LISTVIEW__UpdateScrollParas(hObj, pObj);
;;;545          break;
;;;546        }
;;;547        return;
;;;548      case WM_PAINT:
;;;549        _Paint(hObj, pObj, pMsg);
;;;550        return;
;;;551      case WM_TOUCH:
;;;552        _OnTouch(hObj, pObj, pMsg);
;;;553        return;        /* Important: message handled ! */
;;;554      case WM_KEY:
;;;555        if (((const WM_KEY_INFO*)(pMsg->Data.p))->PressedCnt > 0) {
;;;556          int Key;
;;;557          Key = ((const WM_KEY_INFO*)(pMsg->Data.p))->Key;
;;;558          if (_AddKey(hObj, Key)) {
;;;559            return;
;;;560          }
;;;561        }
;;;562        break;  /* No return here ... WM_DefaultProc needs to be called */
;;;563      case WM_DELETE:
;;;564        _FreeAttached(pObj);
;;;565        break;  /* No return here ... WM_DefaultProc needs to be called */
;;;566      }
;;;567      WM_DefaultProc(pMsg);
;;;568    }
0006fc  bdfe              POP      {r1-r7,pc}
                  |L1.1790|
0006fe  4630              MOV      r0,r6                 ;515
000700  f7fffffe          BL       GUI_ALLOC_h2p
000704  4605              MOV      r5,r0                 ;515
000706  6820              LDR      r0,[r4,#0]            ;516
000708  280e              CMP      r0,#0xe               ;516
00070a  d06b              BEQ      |L1.2020|
00070c  dc06              BGT      |L1.1820|
00070e  2805              CMP      r0,#5                 ;516
000710  d00c              BEQ      |L1.1836|
000712  280b              CMP      r0,#0xb               ;516
000714  d076              BEQ      |L1.2052|
000716  280c              CMP      r0,#0xc               ;516
000718  d178              BNE      |L1.2060|
00071a  e05d              B        |L1.2008|
                  |L1.1820|
00071c  280f              CMP      r0,#0xf               ;516
00071e  d055              BEQ      |L1.1996|
000720  2825              CMP      r0,#0x25              ;516
000722  d002              BEQ      |L1.1834|
000724  2826              CMP      r0,#0x26              ;516
000726  d171              BNE      |L1.2060|
000728  e005              B        |L1.1846|
                  |L1.1834|
00072a  bf00              NOP                            ;518
                  |L1.1836|
00072c  4629              MOV      r1,r5                 ;519
00072e  4630              MOV      r0,r6                 ;519
000730  f7fffffe          BL       LISTVIEW__UpdateScrollParas
000734  e7e2              B        |L1.1788|
                  |L1.1846|
000736  68a0              LDR      r0,[r4,#8]            ;522
000738  2805              CMP      r0,#5                 ;522
00073a  d00d              BEQ      |L1.1880|
00073c  2806              CMP      r0,#6                 ;522
00073e  d03e              BEQ      |L1.1982|
000740  2807              CMP      r0,#7                 ;522
000742  d141              BNE      |L1.1992|
000744  f9b40006          LDRSH    r0,[r4,#6]            ;525
000748  f9b51028          LDRSH    r1,[r5,#0x28]         ;525
00074c  4288              CMP      r0,r1                 ;525
00074e  d102              BNE      |L1.1878|
000750  f04f0000          MOV      r0,#0                 ;526
000754  8528              STRH     r0,[r5,#0x28]         ;526
                  |L1.1878|
000756  e037              B        |L1.1992|
                  |L1.1880|
000758  4630              MOV      r0,r6                 ;530
00075a  f7fffffe          BL       WM_GetScrollbarV
00075e  f9b41006          LDRSH    r1,[r4,#6]            ;530
000762  4288              CMP      r0,r1                 ;530
000764  d10f              BNE      |L1.1926|
000766  f9b40006          LDRSH    r0,[r4,#6]            ;531
00076a  4669              MOV      r1,sp                 ;531
00076c  f7fffffe          BL       WM_GetScrollState
000770  9901              LDR      r1,[sp,#4]            ;532
000772  66e9              STR      r1,[r5,#0x6c]         ;532
000774  4629              MOV      r1,r5                 ;533
000776  4630              MOV      r0,r6                 ;533
000778  f7fffffe          BL       LISTVIEW__InvalidateInsideArea
00077c  210a              MOVS     r1,#0xa               ;534
00077e  4630              MOV      r0,r6                 ;534
000780  f7fffffe          BL       _NotifyOwner
000784  e01a              B        |L1.1980|
                  |L1.1926|
000786  4630              MOV      r0,r6                 ;535
000788  f7fffffe          BL       WM_GetScrollbarH
00078c  f9b41006          LDRSH    r1,[r4,#6]            ;535
000790  4288              CMP      r0,r1                 ;535
000792  d113              BNE      |L1.1980|
000794  f9b40006          LDRSH    r0,[r4,#6]            ;536
000798  4669              MOV      r1,sp                 ;536
00079a  f7fffffe          BL       WM_GetScrollState
00079e  9901              LDR      r1,[sp,#4]            ;537
0007a0  67a9              STR      r1,[r5,#0x78]         ;537
0007a2  4629              MOV      r1,r5                 ;538
0007a4  4630              MOV      r0,r6                 ;538
0007a6  f7fffffe          BL       LISTVIEW__UpdateScrollParas
0007aa  f9b50028          LDRSH    r0,[r5,#0x28]         ;539
0007ae  6fa9              LDR      r1,[r5,#0x78]         ;539
0007b0  f7fffffe          BL       HEADER_SetScrollPos
0007b4  210a              MOVS     r1,#0xa               ;540
0007b6  4630              MOV      r0,r6                 ;540
0007b8  f7fffffe          BL       _NotifyOwner
                  |L1.1980|
0007bc  e004              B        |L1.1992|
                  |L1.1982|
0007be  4629              MOV      r1,r5                 ;544
0007c0  4630              MOV      r0,r6                 ;544
0007c2  f7fffffe          BL       LISTVIEW__UpdateScrollParas
0007c6  bf00              NOP                            ;545
                  |L1.1992|
0007c8  bf00              NOP                            ;528
0007ca  e797              B        |L1.1788|
                  |L1.1996|
0007cc  4622              MOV      r2,r4                 ;549
0007ce  4629              MOV      r1,r5                 ;549
0007d0  4630              MOV      r0,r6                 ;549
0007d2  f7fffffe          BL       _Paint
0007d6  e791              B        |L1.1788|
                  |L1.2008|
0007d8  4622              MOV      r2,r4                 ;552
0007da  4629              MOV      r1,r5                 ;552
0007dc  4630              MOV      r0,r6                 ;552
0007de  f7fffffe          BL       _OnTouch
0007e2  e78b              B        |L1.1788|
                  |L1.2020|
0007e4  68a0              LDR      r0,[r4,#8]            ;555
0007e6  6840              LDR      r0,[r0,#4]            ;555
0007e8  2800              CMP      r0,#0                 ;555
0007ea  dd0a              BLE      |L1.2050|
0007ec  68a0              LDR      r0,[r4,#8]            ;557
0007ee  6807              LDR      r7,[r0,#0]            ;557
0007f0  4639              MOV      r1,r7                 ;558
0007f2  4630              MOV      r0,r6                 ;558
0007f4  f7fffffe          BL       _AddKey
0007f8  b110              CBZ      r0,|L1.2048|
0007fa  e77f              B        |L1.1788|
0007fc  e002              B        |L1.2052|
0007fe  e005              B        |L1.2060|
                  |L1.2048|
000800  bf00              NOP                            ;561
                  |L1.2050|
000802  e003              B        |L1.2060|
                  |L1.2052|
000804  4628              MOV      r0,r5                 ;564
000806  f7fffffe          BL       _FreeAttached
00080a  bf00              NOP                            ;565
                  |L1.2060|
00080c  bf00              NOP                            ;562
00080e  4620              MOV      r0,r4                 ;567
000810  f7fffffe          BL       WM_DefaultProc
000814  bf00              NOP      
000816  e771              B        |L1.1788|
;;;569    
                          ENDP

                  LISTVIEW_CreateEx PROC
;;;583    */
;;;584    LISTVIEW_Handle LISTVIEW_CreateEx(int x0, int y0, int xsize, int ysize, WM_HWIN hParent,
000818  e92d5fff          PUSH     {r0-r12,lr}
;;;585                                      int WinFlags, int ExFlags, int Id)
;;;586    {
00081c  4606              MOV      r6,r0
00081e  460f              MOV      r7,r1
000820  4690              MOV      r8,r2
000822  4699              MOV      r9,r3
000824  e9ddab0e          LDRD     r10,r11,[sp,#0x38]
;;;587      LISTVIEW_Handle hObj;
;;;588      GUI_USE_PARA(ExFlags);
000828  9810              LDR      r0,[sp,#0x40]
00082a  9010              STR      r0,[sp,#0x40]
;;;589      /* Create the window */
;;;590      if ((xsize == 0) && (ysize == 0) && (x0 == 0) && (y0 == 0)) {
00082c  f1b80f00          CMP      r8,#0
000830  d119              BNE      |L1.2150|
000832  f1b90f00          CMP      r9,#0
000836  d116              BNE      |L1.2150|
000838  b9ae              CBNZ     r6,|L1.2150|
00083a  b9a7              CBNZ     r7,|L1.2150|
;;;591        GUI_RECT Rect;
;;;592        WM_GetClientRectEx(hParent, &Rect);
00083c  a902              ADD      r1,sp,#8
00083e  4650              MOV      r0,r10
000840  f7fffffe          BL       WM_GetClientRectEx
;;;593        xsize = Rect.x1 - Rect.x0 + 1;
000844  f9bd000c          LDRSH    r0,[sp,#0xc]
000848  f9bd1008          LDRSH    r1,[sp,#8]
00084c  eba00001          SUB      r0,r0,r1
000850  f1000801          ADD      r8,r0,#1
;;;594        ysize = Rect.y1 - Rect.y0 + 1;
000854  f9bd000e          LDRSH    r0,[sp,#0xe]
000858  f9bd100a          LDRSH    r1,[sp,#0xa]
00085c  eba00001          SUB      r0,r0,r1
000860  f1000901          ADD      r9,r0,#1
;;;595      }
000864  bf00              NOP      
                  |L1.2150|
;;;596      hObj = WM_CreateWindowAsChild(x0, y0, xsize, ysize, hParent, WinFlags, &_LISTVIEW_Callback,
000866  2164              MOVS     r1,#0x64
000868  4a6b              LDR      r2,|L1.2584|
00086a  fa1ff08b          UXTH     r0,r11
00086e  464b              MOV      r3,r9
000870  e9cda000          STRD     r10,r0,[sp,#0]
000874  e9cd2102          STRD     r2,r1,[sp,#8]
000878  4642              MOV      r2,r8
00087a  4639              MOV      r1,r7
00087c  4630              MOV      r0,r6
00087e  f7fffffe          BL       WM_CreateWindowAsChild
000882  4605              MOV      r5,r0
;;;597                                    sizeof(LISTVIEW_Obj) - sizeof(WM_Obj));
;;;598      if (hObj) {
000884  b36d              CBZ      r5,|L1.2274|
;;;599        LISTVIEW_Obj* pObj;
;;;600        WM_LOCK();
;;;601        pObj = LISTVIEW_H2P(hObj);
000886  4628              MOV      r0,r5
000888  f7fffffe          BL       GUI_ALLOC_h2p
00088c  4604              MOV      r4,r0
;;;602        /* Init sub-classes */
;;;603        GUI_ARRAY_CREATE(&pObj->RowArray);
;;;604        GUI_ARRAY_CREATE(&pObj->AlignArray);
;;;605        /* Init widget specific variables */
;;;606        WIDGET__Init(&pObj->Widget, Id, WIDGET_STATE_FOCUSSABLE);
00088e  f04f0210          MOV      r2,#0x10
000892  4620              MOV      r0,r4
000894  9911              LDR      r1,[sp,#0x44]
000896  f7fffffe          BL       WIDGET__Init
;;;607        /* Init member variables */
;;;608        LISTVIEW_INIT_ID(pObj);
;;;609        pObj->Props = LISTVIEW_DefaultProps;
00089a  2220              MOVS     r2,#0x20
00089c  495f              LDR      r1,|L1.2588|
00089e  f1040034          ADD      r0,r4,#0x34
0008a2  f7fffffe          BL       __aeabi_memcpy4
;;;610        pObj->ShowGrid  = 0;
0008a6  f04f0000          MOV      r0,#0
0008aa  65a0              STR      r0,[r4,#0x58]
;;;611        pObj->RowDistY  = 0;
0008ac  65e0              STR      r0,[r4,#0x5c]
;;;612        pObj->Sel       = -1;
0008ae  f04f30ff          MOV      r0,#0xffffffff
0008b2  6560              STR      r0,[r4,#0x54]
;;;613        pObj->LBorder   = 1;
0008b4  f04f0001          MOV      r0,#1
0008b8  6620              STR      r0,[r4,#0x60]
;;;614        pObj->RBorder   = 1;
0008ba  6660              STR      r0,[r4,#0x64]
;;;615        pObj->hHeader   = HEADER_CreateEx(0, 0, 0, 0, hObj, WM_CF_SHOW, 0, 0);
0008bc  f04f0000          MOV      r0,#0
0008c0  f04f0202          MOV      r2,#2
0008c4  e9cd2001          STRD     r2,r0,[sp,#4]
0008c8  4603              MOV      r3,r0
0008ca  4602              MOV      r2,r0
0008cc  4601              MOV      r1,r0
0008ce  9500              STR      r5,[sp,#0]
0008d0  9003              STR      r0,[sp,#0xc]
0008d2  f7fffffe          BL       HEADER_CreateEx
0008d6  8520              STRH     r0,[r4,#0x28]
;;;616        LISTVIEW__UpdateScrollParas(hObj, pObj);
0008d8  4621              MOV      r1,r4
0008da  4628              MOV      r0,r5
0008dc  f7fffffe          BL       LISTVIEW__UpdateScrollParas
;;;617        WM_UNLOCK();
;;;618      } else {
0008e0  bf00              NOP      
                  |L1.2274|
;;;619        GUI_DEBUG_ERROROUT_IF(hObj==0, "LISTVIEW_Create failed")
;;;620      }
;;;621      return hObj;
0008e2  4628              MOV      r0,r5
;;;622    }
0008e4  b004              ADD      sp,sp,#0x10
0008e6  e8bd9ff0          POP      {r4-r12,pc}
;;;623    
                          ENDP

                  LISTVIEW_AddColumn PROC
;;;653    */
;;;654    void LISTVIEW_AddColumn(LISTVIEW_Handle hObj, int Width, const char * s, int Align) {
0008ea  e92d47ff          PUSH     {r0-r10,lr}
0008ee  4606              MOV      r6,r0
0008f0  4688              MOV      r8,r1
0008f2  4691              MOV      r9,r2
;;;655      if (hObj) {
0008f4  b39e              CBZ      r6,|L1.2398|
;;;656        LISTVIEW_Obj* pObj;
;;;657        unsigned NumRows;
;;;658        WM_LOCK();
;;;659        pObj = LISTVIEW_H2P(hObj);
0008f6  4630              MOV      r0,r6
0008f8  f7fffffe          BL       GUI_ALLOC_h2p
0008fc  4604              MOV      r4,r0
;;;660        HEADER_AddItem(pObj->hHeader, Width, s, Align);   /* Modify header */
0008fe  f9b40028          LDRSH    r0,[r4,#0x28]
000902  464a              MOV      r2,r9
000904  4641              MOV      r1,r8
000906  9b03              LDR      r3,[sp,#0xc]
000908  f7fffffe          BL       HEADER_AddItem
;;;661        GUI_ARRAY_AddItem(&pObj->AlignArray, &Align, sizeof(int));
00090c  2204              MOVS     r2,#4
00090e  a903              ADD      r1,sp,#0xc
000910  f104002e          ADD      r0,r4,#0x2e
000914  f7fffffe          BL       GUI_ARRAY_AddItem
;;;662        NumRows = LISTVIEW_GetNumRows(hObj);
000918  4630              MOV      r0,r6
00091a  f7fffffe          BL       LISTVIEW_GetNumRows
00091e  4607              MOV      r7,r0
;;;663        if (NumRows) {
000920  b1a7              CBZ      r7,|L1.2380|
;;;664          GUI_ARRAY* pRow;
;;;665          unsigned i;
;;;666          for (i = 0; i < NumRows; i++) {
000922  f04f0500          MOV      r5,#0
000926  e00e              B        |L1.2374|
                  |L1.2344|
;;;667            pRow = (GUI_ARRAY*) GUI_ARRAY_GetpItem(&pObj->RowArray, i);
000928  4629              MOV      r1,r5
00092a  f104002a          ADD      r0,r4,#0x2a
00092e  f7fffffe          BL       GUI_ARRAY_GetpItem
000932  4682              MOV      r10,r0
;;;668            GUI_ARRAY_AddItem(pRow, NULL, sizeof(LISTVIEW_ITEM) + 1);
000934  f04f0205          MOV      r2,#5
000938  f04f0100          MOV      r1,#0
00093c  4650              MOV      r0,r10
00093e  f7fffffe          BL       GUI_ARRAY_AddItem
000942  f1050501          ADD      r5,r5,#1              ;666
                  |L1.2374|
000946  42bd              CMP      r5,r7                 ;666
000948  d3ee              BCC      |L1.2344|
;;;669          }
;;;670        }
00094a  bf00              NOP      
                  |L1.2380|
;;;671        LISTVIEW__UpdateScrollParas(hObj, pObj);
00094c  4621              MOV      r1,r4
00094e  4630              MOV      r0,r6
000950  f7fffffe          BL       LISTVIEW__UpdateScrollParas
;;;672        LISTVIEW__InvalidateInsideArea(hObj, pObj);
000954  4621              MOV      r1,r4
000956  4630              MOV      r0,r6
000958  f7fffffe          BL       LISTVIEW__InvalidateInsideArea
;;;673        WM_UNLOCK();
;;;674      }
00095c  bf00              NOP      
                  |L1.2398|
;;;675    }
00095e  e8bd87ff          POP      {r0-r10,pc}
;;;676    
                          ENDP

                  LISTVIEW_AddRow PROC
;;;680    */
;;;681    void LISTVIEW_AddRow(LISTVIEW_Handle hObj, const GUI_ConstString* ppText) {
000962  e92d5ffc          PUSH     {r2-r12,lr}
000966  4682              MOV      r10,r0
000968  460d              MOV      r5,r1
;;;682      if (hObj) {
00096a  f1ba0f00          CMP      r10,#0
00096e  d050              BEQ      |L1.2578|
;;;683        LISTVIEW_Obj* pObj;
;;;684        int NumRows;
;;;685        WM_LOCK();
;;;686        pObj = LISTVIEW_H2P(hObj);
000970  4650              MOV      r0,r10
000972  f7fffffe          BL       GUI_ALLOC_h2p
000976  4604              MOV      r4,r0
;;;687        NumRows = GUI_ARRAY_GetNumItems(&pObj->RowArray);
000978  f104002a          ADD      r0,r4,#0x2a
00097c  f7fffffe          BL       GUI_ARRAY_GetNumItems
000980  9001              STR      r0,[sp,#4]
;;;688    
;;;689        /* Create GUI_ARRAY for the new row */
;;;690        if (GUI_ARRAY_AddItem(&pObj->RowArray, NULL, sizeof(GUI_ARRAY)) == 0) {
000982  2204              MOVS     r2,#4
000984  2100              MOVS     r1,#0
000986  f104002a          ADD      r0,r4,#0x2a
00098a  f7fffffe          BL       GUI_ARRAY_AddItem
00098e  2800              CMP      r0,#0
000990  d13e              BNE      |L1.2576|
;;;691          int i, NumColumns, NumBytes;
;;;692          GUI_ARRAY* pRow;
;;;693          const char* s;
;;;694          GUI_ARRAY_CREATE((GUI_ARRAY *)GUI_ARRAY_GetpItem(&pObj->RowArray, NumRows));  /* For higher debug levels only */
;;;695          /* Add columns for the new row */
;;;696          NumColumns = HEADER_GetNumItems(pObj->hHeader);
000992  f9b40028          LDRSH    r0,[r4,#0x28]
000996  f7fffffe          BL       HEADER_GetNumItems
00099a  4683              MOV      r11,r0
;;;697          for (i = 0; i < NumColumns; i++) {
00099c  f04f0600          MOV      r6,#0
0009a0  e02a              B        |L1.2552|
                  |L1.2466|
;;;698            LISTVIEW_ITEM * pItem;
;;;699            pRow = (GUI_ARRAY *)GUI_ARRAY_GetpItem(&pObj->RowArray, NumRows);
0009a2  f104002a          ADD      r0,r4,#0x2a
0009a6  9901              LDR      r1,[sp,#4]
0009a8  f7fffffe          BL       GUI_ARRAY_GetpItem
0009ac  9000              STR      r0,[sp,#0]
;;;700            s = (ppText) ? *ppText++ : 0;
0009ae  b10d              CBZ      r5,|L1.2484|
0009b0  cd01              LDM      r5!,{r0}
0009b2  e001              B        |L1.2488|
                  |L1.2484|
0009b4  f04f0000          MOV      r0,#0
                  |L1.2488|
0009b8  4680              MOV      r8,r0
;;;701            if (s == 0) {
0009ba  f1b80f00          CMP      r8,#0
0009be  d101              BNE      |L1.2500|
;;;702              ppText = 0;
0009c0  f04f0500          MOV      r5,#0
                  |L1.2500|
;;;703            }
;;;704            NumBytes = GUI__strlen(s) + 1;     /* 0 if no string is specified (s == NULL) */
0009c4  4640              MOV      r0,r8
0009c6  f7fffffe          BL       GUI__strlen
0009ca  f1000701          ADD      r7,r0,#1
;;;705            GUI_ARRAY_AddItem(pRow, NULL, sizeof(LISTVIEW_ITEM) + NumBytes);
0009ce  f1070204          ADD      r2,r7,#4
0009d2  f04f0100          MOV      r1,#0
0009d6  9800              LDR      r0,[sp,#0]
0009d8  f7fffffe          BL       GUI_ARRAY_AddItem
;;;706            pItem = (LISTVIEW_ITEM *)GUI_ARRAY_GetpItem(pRow, i);
0009dc  4631              MOV      r1,r6
0009de  9800              LDR      r0,[sp,#0]
0009e0  f7fffffe          BL       GUI_ARRAY_GetpItem
0009e4  4681              MOV      r9,r0
;;;707            if (NumBytes > 1) {
0009e6  2f01              CMP      r7,#1
0009e8  dd04              BLE      |L1.2548|
;;;708              strcpy(pItem->acText, s);
0009ea  4641              MOV      r1,r8
0009ec  f1090002          ADD      r0,r9,#2
0009f0  f7fffffe          BL       strcpy
                  |L1.2548|
0009f4  f1060601          ADD      r6,r6,#1              ;697
                  |L1.2552|
0009f8  455e              CMP      r6,r11                ;697
0009fa  dbd2              BLT      |L1.2466|
;;;709            }
;;;710          }
;;;711          LISTVIEW__UpdateScrollParas(hObj, pObj);
0009fc  4621              MOV      r1,r4
0009fe  4650              MOV      r0,r10
000a00  f7fffffe          BL       LISTVIEW__UpdateScrollParas
;;;712          LISTVIEW__InvalidateRow(hObj, pObj, NumRows);
000a04  4621              MOV      r1,r4
000a06  4650              MOV      r0,r10
000a08  9a01              LDR      r2,[sp,#4]
000a0a  f7fffffe          BL       LISTVIEW__InvalidateRow
;;;713        }
000a0e  bf00              NOP      
                  |L1.2576|
;;;714        WM_UNLOCK();
;;;715      }
000a10  bf00              NOP      
                  |L1.2578|
;;;716    }
000a12  e8bd9ffc          POP      {r2-r12,pc}
;;;717    
                          ENDP

000a16  0000              DCW      0x0000
                  |L1.2584|
                          DCD      _LISTVIEW_Callback
                  |L1.2588|
                          DCD      LISTVIEW_DefaultProps

                          AREA ||.data||, DATA, ALIGN=2

                  LISTVIEW_DefaultProps
                          DCD      0x00ffffff
                          DCD      0x00808080
                          DCD      0x00ff0000
                          DCD      0x00000000
                          DCD      0x00ffffff
                          DCD      0x00ffffff
                          DCD      0x00d3d3d3
                          DCD      GUI_Font13_1

; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\framewin.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\framewin.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\framewin.crf GUI\Widget\FRAMEWIN.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _SetActive PROC
;;;123    */
;;;124    static void _SetActive(FRAMEWIN_Handle hObj, int State) {
000000  b570              PUSH     {r4-r6,lr}
000002  4606              MOV      r6,r0
000004  460d              MOV      r5,r1
;;;125      FRAMEWIN_Obj* pObj;
;;;126      pObj = FRAMEWIN_H2P(hObj);
000006  4630              MOV      r0,r6
000008  f7fffffe          BL       GUI_ALLOC_h2p
00000c  4604              MOV      r4,r0
;;;127      if        (State && !(pObj->Flags & FRAMEWIN_SF_ACTIVE)) {
00000e  b175              CBZ      r5,|L1.46|
000010  f8b4005c          LDRH     r0,[r4,#0x5c]
000014  f0100f08          TST      r0,#8
000018  d109              BNE      |L1.46|
;;;128        pObj->Flags |= FRAMEWIN_CF_ACTIVE;
00001a  f8b4005c          LDRH     r0,[r4,#0x5c]
00001e  f0400008          ORR      r0,r0,#8
000022  f8a4005c          STRH     r0,[r4,#0x5c]
;;;129        FRAMEWIN_Invalidate(hObj);
000026  4630              MOV      r0,r6
000028  f7fffffe          BL       WM_InvalidateWindow
00002c  e00e              B        |L1.76|
                  |L1.46|
;;;130      } else if (!State && (pObj->Flags & FRAMEWIN_SF_ACTIVE)) {
00002e  b96d              CBNZ     r5,|L1.76|
000030  f8b4005c          LDRH     r0,[r4,#0x5c]
000034  f0100f08          TST      r0,#8
000038  d008              BEQ      |L1.76|
;;;131        pObj->Flags &= ~FRAMEWIN_CF_ACTIVE;
00003a  f8b4005c          LDRH     r0,[r4,#0x5c]
00003e  f0200008          BIC      r0,r0,#8
000042  f8a4005c          STRH     r0,[r4,#0x5c]
;;;132        FRAMEWIN_Invalidate(hObj);
000046  4630              MOV      r0,r6
000048  f7fffffe          BL       WM_InvalidateWindow
                  |L1.76|
;;;133      }
;;;134    }
00004c  bd70              POP      {r4-r6,pc}
;;;135    
                          ENDP

                  _OnTouch PROC
;;;139    */
;;;140    static void _OnTouch(FRAMEWIN_Handle hWin, FRAMEWIN_Obj* pObj, WM_MESSAGE* pMsg) {
00004e  e92d41f0          PUSH     {r4-r8,lr}
000052  4607              MOV      r7,r0
000054  460c              MOV      r4,r1
000056  4615              MOV      r5,r2
;;;141      const GUI_PID_STATE* pState;
;;;142      pState = (const GUI_PID_STATE*)pMsg->Data.p;
000058  68ae              LDR      r6,[r5,#8]
;;;143      if (pMsg->Data.p) {  /* Something happened in our area (pressed or released) */
00005a  68a8              LDR      r0,[r5,#8]
00005c  b1c0              CBZ      r0,|L1.144|
;;;144        if (pState->Pressed) {
00005e  7a30              LDRB     r0,[r6,#8]
000060  b1b0              CBZ      r0,|L1.144|
;;;145          if (!(pObj->Flags & FRAMEWIN_SF_ACTIVE)) {
000062  f8b4005c          LDRH     r0,[r4,#0x5c]
000066  f0100f08          TST      r0,#8
00006a  d102              BNE      |L1.114|
;;;146            WM_SetFocus(hWin);
00006c  4638              MOV      r0,r7
00006e  f7fffffe          BL       WM_SetFocus
                  |L1.114|
;;;147          }
;;;148          WM_BringToTop(hWin);
000072  4638              MOV      r0,r7
000074  f7fffffe          BL       WM_BringToTop
;;;149          if (pObj->Flags & FRAMEWIN_SF_MOVEABLE) {
000078  f8b4005c          LDRH     r0,[r4,#0x5c]
00007c  f0100f10          TST      r0,#0x10
000080  d006              BEQ      |L1.144|
;;;150            WM_SetCaptureMove(hWin, pState, FRAMEWIN__MinVisibility);
000082  48f9              LDR      r0,|L1.1128|
000084  f9b02000          LDRSH    r2,[r0,#0]  ; FRAMEWIN__MinVisibility
000088  4631              MOV      r1,r6
00008a  4638              MOV      r0,r7
00008c  f7fffffe          BL       WM_SetCaptureMove
                  |L1.144|
;;;151          }
;;;152        }
;;;153      }
;;;154    }
000090  e8bd81f0          POP      {r4-r8,pc}
;;;155    
                          ENDP

                  FRAMEWIN__CalcTitleHeight PROC
;;;409    */
;;;410    int FRAMEWIN__CalcTitleHeight(FRAMEWIN_Obj* pObj) {
000094  b570              PUSH     {r4-r6,lr}
000096  4604              MOV      r4,r0
;;;411      int r = 0;
000098  f04f0500          MOV      r5,#0
;;;412      if (pObj->Widget.State & FRAMEWIN_SF_TITLEVIS) {
00009c  8ce0              LDRH     r0,[r4,#0x26]
00009e  f0100f20          TST      r0,#0x20
0000a2  d007              BEQ      |L1.180|
;;;413        r = pObj->Props.TitleHeight;
0000a4  f9b45040          LDRSH    r5,[r4,#0x40]
;;;414        if (r == 0) {
0000a8  b925              CBNZ     r5,|L1.180|
;;;415          r = 2 + GUI_GetYSizeOfFont(pObj->Props.pFont);
0000aa  6aa0              LDR      r0,[r4,#0x28]
0000ac  f7fffffe          BL       GUI_GetYSizeOfFont
0000b0  f1000502          ADD      r5,r0,#2
                  |L1.180|
;;;416        }
;;;417      }
;;;418      return r;
0000b4  4628              MOV      r0,r5
;;;419    }
0000b6  bd70              POP      {r4-r6,pc}
;;;420    
                          ENDP

                  FRAMEWIN__CalcPositions PROC
;;;424    */
;;;425    void FRAMEWIN__CalcPositions(FRAMEWIN_Obj* pObj, POSITIONS* pPos) {
0000b8  e92d4ff0          PUSH     {r4-r11,lr}
0000bc  b085              SUB      sp,sp,#0x14
0000be  4605              MOV      r5,r0
0000c0  460c              MOV      r4,r1
;;;426      WM_HWIN hChild;
;;;427      WM_Obj* pChild;
;;;428      int TitleHeight;
;;;429      int MenuHeight = 0;
0000c2  f04f0000          MOV      r0,#0
0000c6  9004              STR      r0,[sp,#0x10]
;;;430      int IBorderSize = 0;
0000c8  9003              STR      r0,[sp,#0xc]
;;;431      int BorderSize;
;;;432      int xsize, ysize;
;;;433      int x0, x1, y0;
;;;434      BorderSize = pObj->Props.BorderSize;
0000ca  f9b56042          LDRSH    r6,[r5,#0x42]
;;;435      xsize = WM__GetWindowSizeX(&pObj->Widget.Win);
0000ce  4628              MOV      r0,r5
0000d0  f7fffffe          BL       WM__GetWindowSizeX
0000d4  9002              STR      r0,[sp,#8]
;;;436      ysize = WM__GetWindowSizeY(&pObj->Widget.Win);
0000d6  4628              MOV      r0,r5
0000d8  f7fffffe          BL       WM__GetWindowSizeY
0000dc  9001              STR      r0,[sp,#4]
;;;437      if (pObj->Widget.State & FRAMEWIN_SF_TITLEVIS) {
0000de  8ce8              LDRH     r0,[r5,#0x26]
0000e0  f0100f20          TST      r0,#0x20
0000e4  d002              BEQ      |L1.236|
;;;438        IBorderSize = pObj->Props.IBorderSize;
0000e6  f9b50044          LDRSH    r0,[r5,#0x44]
0000ea  9003              STR      r0,[sp,#0xc]
                  |L1.236|
;;;439      }
;;;440      TitleHeight = FRAMEWIN__CalcTitleHeight(pObj);
0000ec  4628              MOV      r0,r5
0000ee  f7fffffe          BL       FRAMEWIN__CalcTitleHeight
0000f2  4680              MOV      r8,r0
;;;441      if (pObj->hMenu) {
0000f4  f8b5004e          LDRH     r0,[r5,#0x4e]
0000f8  b120              CBZ      r0,|L1.260|
;;;442        MenuHeight = WM_GetWindowSizeY(pObj->hMenu);
0000fa  f9b5004e          LDRSH    r0,[r5,#0x4e]
0000fe  f7fffffe          BL       WM_GetWindowSizeY
000102  9004              STR      r0,[sp,#0x10]
                  |L1.260|
;;;443      }
;;;444      pPos->TitleHeight = TitleHeight;
000104  fa0ff088          SXTH     r0,r8
000108  8020              STRH     r0,[r4,#0]
;;;445      pPos->MenuHeight  = MenuHeight;
00010a  9804              LDR      r0,[sp,#0x10]
00010c  b200              SXTH     r0,r0
00010e  8060              STRH     r0,[r4,#2]
;;;446      /* Set object properties accordingly */
;;;447      pPos->rClient.x0  =         BorderSize;
000110  b230              SXTH     r0,r6
000112  80a0              STRH     r0,[r4,#4]
;;;448      pPos->rClient.x1  = xsize - BorderSize - 1;
000114  9802              LDR      r0,[sp,#8]
000116  eba00006          SUB      r0,r0,r6
00011a  f1a00001          SUB      r0,r0,#1
00011e  b201              SXTH     r1,r0
000120  8121              STRH     r1,[r4,#8]
;;;449      pPos->rClient.y0  =         BorderSize + IBorderSize + TitleHeight + MenuHeight;
000122  9803              LDR      r0,[sp,#0xc]
000124  4430              ADD      r0,r0,r6
000126  eb000108          ADD      r1,r0,r8
00012a  9804              LDR      r0,[sp,#0x10]
00012c  4408              ADD      r0,r0,r1
00012e  b201              SXTH     r1,r0
000130  80e1              STRH     r1,[r4,#6]
;;;450      pPos->rClient.y1  = ysize - BorderSize - 1;
000132  9801              LDR      r0,[sp,#4]
000134  eba00006          SUB      r0,r0,r6
000138  f1a00001          SUB      r0,r0,#1
00013c  b201              SXTH     r1,r0
00013e  8161              STRH     r1,[r4,#0xa]
;;;451      /* Calculate title rect */
;;;452      pPos->rTitleText.x0 =         BorderSize;
000140  b230              SXTH     r0,r6
000142  81a0              STRH     r0,[r4,#0xc]
;;;453      pPos->rTitleText.x1 = xsize - BorderSize - 1;
000144  9802              LDR      r0,[sp,#8]
000146  eba00006          SUB      r0,r0,r6
00014a  f1a00001          SUB      r0,r0,#1
00014e  b201              SXTH     r1,r0
000150  8221              STRH     r1,[r4,#0x10]
;;;454      pPos->rTitleText.y0 =         BorderSize;
000152  b231              SXTH     r1,r6
000154  81e1              STRH     r1,[r4,#0xe]
;;;455      pPos->rTitleText.y1 =         BorderSize + TitleHeight - 1;
000156  eb060008          ADD      r0,r6,r8
00015a  f1a00001          SUB      r0,r0,#1
00015e  b201              SXTH     r1,r0
000160  8261              STRH     r1,[r4,#0x12]
;;;456      /* Iterate over all children */
;;;457      for (hChild = pObj->Widget.Win.hFirstChild; hChild; hChild = pChild->hNext) {
000162  f9b59018          LDRSH    r9,[r5,#0x18]
000166  e030              B        |L1.458|
                  |L1.360|
;;;458        pChild = WM_H2P(hChild);
000168  4648              MOV      r0,r9
00016a  f7fffffe          BL       GUI_ALLOC_h2p
00016e  4607              MOV      r7,r0
;;;459        x0 = pChild->Rect.x0 - pObj->Widget.Win.Rect.x0;
000170  f9b70000          LDRSH    r0,[r7,#0]
000174  f9b51000          LDRSH    r1,[r5,#0]
000178  eba00a01          SUB      r10,r0,r1
;;;460        x1 = pChild->Rect.x1 - pObj->Widget.Win.Rect.x0;
00017c  f9b70004          LDRSH    r0,[r7,#4]
000180  f9b51000          LDRSH    r1,[r5,#0]
000184  eba00b01          SUB      r11,r0,r1
;;;461        y0 = pChild->Rect.y0 - pObj->Widget.Win.Rect.y0;
000188  f9b70002          LDRSH    r0,[r7,#2]
00018c  f9b51002          LDRSH    r1,[r5,#2]
000190  eba00001          SUB      r0,r0,r1
000194  9000              STR      r0,[sp,#0]
;;;462        if (y0 == BorderSize) {
000196  9800              LDR      r0,[sp,#0]
000198  42b0              CMP      r0,r6
00019a  d114              BNE      |L1.454|
;;;463          if (pChild->Status & WM_SF_ANCHOR_RIGHT) {
00019c  8bb8              LDRH     r0,[r7,#0x1c]
00019e  f0100f80          TST      r0,#0x80
0001a2  d008              BEQ      |L1.438|
;;;464            if (x0 <= pPos->rTitleText.x1) {
0001a4  f9b40010          LDRSH    r0,[r4,#0x10]
0001a8  4550              CMP      r0,r10
0001aa  db0c              BLT      |L1.454|
;;;465              pPos->rTitleText.x1 = x0 - 1;
0001ac  f1aa0001          SUB      r0,r10,#1
0001b0  b201              SXTH     r1,r0
0001b2  8221              STRH     r1,[r4,#0x10]
0001b4  e007              B        |L1.454|
                  |L1.438|
;;;466            }
;;;467          } else {
;;;468            if (x1 >= pPos->rTitleText.x0) {
0001b6  f9b4000c          LDRSH    r0,[r4,#0xc]
0001ba  4558              CMP      r0,r11
0001bc  dc03              BGT      |L1.454|
;;;469              pPos->rTitleText.x0 = x1 + 1;
0001be  f10b0001          ADD      r0,r11,#1
0001c2  b200              SXTH     r0,r0
0001c4  81a0              STRH     r0,[r4,#0xc]
                  |L1.454|
0001c6  f9b7901a          LDRSH    r9,[r7,#0x1a]         ;457
                  |L1.458|
0001ca  f1b90f00          CMP      r9,#0                 ;457
0001ce  d1cb              BNE      |L1.360|
;;;470            }
;;;471          }
;;;472        }
;;;473      }
;;;474    }
0001d0  b005              ADD      sp,sp,#0x14
0001d2  e8bd8ff0          POP      {r4-r11,pc}
;;;475    
                          ENDP

                  _Paint PROC
;;;160    */
;;;161    static void _Paint(FRAMEWIN_Obj* pObj) {
0001d6  e92d4ff0          PUSH     {r4-r11,lr}
0001da  b089              SUB      sp,sp,#0x24
0001dc  4604              MOV      r4,r0
;;;162      WM_HWIN hWin = WM_GetActiveWindow();
0001de  f7fffffe          BL       WM_GetActiveWindow
0001e2  4683              MOV      r11,r0
;;;163      const char* pText = NULL;
0001e4  f04f0a00          MOV      r10,#0
;;;164      int xsize = WM_GetWindowSizeX(hWin);
0001e8  4658              MOV      r0,r11
0001ea  f7fffffe          BL       WM_GetWindowSizeX
0001ee  4605              MOV      r5,r0
;;;165      int ysize = WM_GetWindowSizeY(hWin);
0001f0  4658              MOV      r0,r11
0001f2  f7fffffe          BL       WM_GetWindowSizeY
0001f6  4606              MOV      r6,r0
;;;166      int BorderSize = pObj->Props.BorderSize;
0001f8  f9b48042          LDRSH    r8,[r4,#0x42]
;;;167      int y0, Index;
;;;168      POSITIONS Pos;
;;;169      GUI_RECT r, rText;
;;;170    
;;;171      /* Perform computations */
;;;172      FRAMEWIN__CalcPositions(pObj, &Pos);
0001fc  a904              ADD      r1,sp,#0x10
0001fe  4620              MOV      r0,r4
000200  f7fffffe          BL       FRAMEWIN__CalcPositions
;;;173      Index = (pObj->Flags & FRAMEWIN_SF_ACTIVE) ? 1 : 0;
000204  f8b4005c          LDRH     r0,[r4,#0x5c]
000208  f3c009c0          UBFX     r9,r0,#3,#1
;;;174    
;;;175      if (pObj->hText) {
00020c  f8b40050          LDRH     r0,[r4,#0x50]
000210  b120              CBZ      r0,|L1.540|
;;;176        pText = (const char*) GUI_ALLOC_h2p(pObj->hText);
000212  f9b40050          LDRSH    r0,[r4,#0x50]
000216  f7fffffe          BL       GUI_ALLOC_h2p
00021a  4682              MOV      r10,r0
                  |L1.540|
;;;177      }
;;;178      r.x0 = Pos.rClient.x0;
00021c  f8bd0014          LDRH     r0,[sp,#0x14]
000220  f8ad0008          STRH     r0,[sp,#8]
;;;179      r.x1 = Pos.rClient.x1;
000224  f8bd0018          LDRH     r0,[sp,#0x18]
000228  f8ad000c          STRH     r0,[sp,#0xc]
;;;180      r.y0 = Pos.rTitleText.y0;
00022c  f8bd001e          LDRH     r0,[sp,#0x1e]
000230  f8ad000a          STRH     r0,[sp,#0xa]
;;;181      r.y1 = Pos.rTitleText.y1;
000234  f8bd0022          LDRH     r0,[sp,#0x22]
000238  f8ad000e          STRH     r0,[sp,#0xe]
;;;182      Pos.rTitleText.y0++;
00023c  f8bd001e          LDRH     r0,[sp,#0x1e]
000240  f1000001          ADD      r0,r0,#1
000244  b201              SXTH     r1,r0
000246  f8ad101e          STRH     r1,[sp,#0x1e]
;;;183      Pos.rTitleText.x0++;
00024a  f8bd001c          LDRH     r0,[sp,#0x1c]
00024e  f1000001          ADD      r0,r0,#1
000252  b200              SXTH     r0,r0
000254  f8ad001c          STRH     r0,[sp,#0x1c]
;;;184      Pos.rTitleText.x1--;
000258  f8bd0020          LDRH     r0,[sp,#0x20]
00025c  f1a00001          SUB      r0,r0,#1
000260  b201              SXTH     r1,r0
000262  f8ad1020          STRH     r1,[sp,#0x20]
;;;185      GUI_SetFont(pObj->Props.pFont);
000266  6aa0              LDR      r0,[r4,#0x28]
000268  f7fffffe          BL       GUI_SetFont
;;;186      GUI__CalcTextRect(pText, &Pos.rTitleText, &rText, pObj->TextAlign);
00026c  f9b4305a          LDRSH    r3,[r4,#0x5a]
000270  466a              MOV      r2,sp
000272  a907              ADD      r1,sp,#0x1c
000274  4650              MOV      r0,r10
000276  f7fffffe          BL       GUI__CalcTextRect
;;;187      y0 = Pos.TitleHeight + BorderSize;
00027a  f9bd0010          LDRSH    r0,[sp,#0x10]
00027e  eb000708          ADD      r7,r0,r8
;;;188    
;;;189      /* Perform drawing operations */
;;;190      WM_ITERATE_START(NULL) {
000282  f04f0000          MOV      r0,#0
000286  f7fffffe          BL       WM__InitIVRSearch
00028a  2800              CMP      r0,#0
00028c  d047              BEQ      |L1.798|
00028e  bf00              NOP      
                  |L1.656|
;;;191        /* Draw Title */
;;;192        LCD_SetBkColor(pObj->Props.aBarColor[Index]);
000290  f104012c          ADD      r1,r4,#0x2c
000294  f8510029          LDR      r0,[r1,r9,LSL #2]
000298  f7fffffe          BL       LCD_SetBkColor
;;;193        LCD_SetColor(pObj->Props.aTextColor[Index]);
00029c  f1040134          ADD      r1,r4,#0x34
0002a0  f8510029          LDR      r0,[r1,r9,LSL #2]
0002a4  f7fffffe          BL       LCD_SetColor
;;;194        WIDGET__FillStringInRect(pText, &r, &Pos.rTitleText, &rText);
0002a8  466b              MOV      r3,sp
0002aa  aa07              ADD      r2,sp,#0x1c
0002ac  a902              ADD      r1,sp,#8
0002ae  4650              MOV      r0,r10
0002b0  f7fffffe          BL       WIDGET__FillStringInRect
;;;195        /* Draw Frame */
;;;196        LCD_SetColor(FRAMEWIN_FRAMECOLOR_DEFAULT);
0002b4  486d              LDR      r0,|L1.1132|
0002b6  f7fffffe          BL       LCD_SetColor
;;;197        GUI_FillRect(0, 0, xsize-1, BorderSize-1);
0002ba  f1a80301          SUB      r3,r8,#1
0002be  1e6a              SUBS     r2,r5,#1
0002c0  2100              MOVS     r1,#0
0002c2  4608              MOV      r0,r1
0002c4  f7fffffe          BL       GUI_FillRect
;;;198    	  GUI_FillRect(0, 0, Pos.rClient.x0-1, ysize-1);
0002c8  1e73              SUBS     r3,r6,#1
0002ca  f9bd0014          LDRSH    r0,[sp,#0x14]
0002ce  1e42              SUBS     r2,r0,#1
0002d0  2100              MOVS     r1,#0
0002d2  4608              MOV      r0,r1
0002d4  f7fffffe          BL       GUI_FillRect
;;;199    	  GUI_FillRect(Pos.rClient.x1+1, 0, xsize-1, ysize-1);
0002d8  1e73              SUBS     r3,r6,#1
0002da  1e6a              SUBS     r2,r5,#1
0002dc  f9bd1018          LDRSH    r1,[sp,#0x18]
0002e0  1c48              ADDS     r0,r1,#1
0002e2  2100              MOVS     r1,#0
0002e4  f7fffffe          BL       GUI_FillRect
;;;200        GUI_FillRect(0, Pos.rClient.y1+1, xsize-1, ysize-1);
0002e8  1e73              SUBS     r3,r6,#1
0002ea  1e6a              SUBS     r2,r5,#1
0002ec  f9bd001a          LDRSH    r0,[sp,#0x1a]
0002f0  1c41              ADDS     r1,r0,#1
0002f2  2000              MOVS     r0,#0
0002f4  f7fffffe          BL       GUI_FillRect
;;;201        GUI_FillRect(0, y0, xsize - 1, y0 + pObj->Props.IBorderSize - 1);
0002f8  f9b40044          LDRSH    r0,[r4,#0x44]
0002fc  4438              ADD      r0,r0,r7
0002fe  1e43              SUBS     r3,r0,#1
000300  1e6a              SUBS     r2,r5,#1
000302  4639              MOV      r1,r7
000304  2000              MOVS     r0,#0
000306  f7fffffe          BL       GUI_FillRect
;;;202        /* Draw the 3D effect (if configured) */
;;;203        if (pObj->Props.BorderSize >= 2) {
00030a  f9b40042          LDRSH    r0,[r4,#0x42]
00030e  2802              CMP      r0,#2
000310  db01              BLT      |L1.790|
;;;204          WIDGET_EFFECT_3D_DrawUp();  /* pObj->Widget.pEffect->pfDrawUp(); */
000312  f7fffffe          BL       WIDGET_EFFECT_3D_DrawUp
                  |L1.790|
;;;205        }
;;;206    
;;;207      } WM_ITERATE_END();
000316  f7fffffe          BL       WM__GetNextIVR
00031a  2800              CMP      r0,#0
00031c  d1b8              BNE      |L1.656|
                  |L1.798|
;;;208    
;;;209    
;;;210    }
00031e  b009              ADD      sp,sp,#0x24
000320  e8bd8ff0          POP      {r4-r11,pc}
;;;211    
                          ENDP

                  _OnChildHasFocus PROC
;;;225    */
;;;226    static void _OnChildHasFocus(FRAMEWIN_Handle hWin, FRAMEWIN_Obj* pObj, WM_MESSAGE *pMsg) {
000324  e92d41f0          PUSH     {r4-r8,lr}
000328  4606              MOV      r6,r0
00032a  460f              MOV      r7,r1
00032c  4614              MOV      r4,r2
;;;227      if (pMsg->Data.p) {
00032e  68a0              LDR      r0,[r4,#8]
000330  b1e0              CBZ      r0,|L1.876|
;;;228        const WM_NOTIFY_CHILD_HAS_FOCUS_INFO * pInfo = (const WM_NOTIFY_CHILD_HAS_FOCUS_INFO *)pMsg->Data.p;
000332  68a5              LDR      r5,[r4,#8]
;;;229        int IsDesc = WM__IsAncestorOrSelf(pInfo->hNew, hWin);
000334  f9b50002          LDRSH    r0,[r5,#2]
000338  4631              MOV      r1,r6
00033a  f7fffffe          BL       WM__IsAncestorOrSelf
00033e  4680              MOV      r8,r0
;;;230        if (IsDesc) {                         /* A child has received the focus, Framewindow needs to be activated */
000340  f1b80f00          CMP      r8,#0
000344  d004              BEQ      |L1.848|
;;;231          _SetActive(hWin, 1);
000346  2101              MOVS     r1,#1
000348  4630              MOV      r0,r6
00034a  f7fffffe          BL       _SetActive
00034e  e00c              B        |L1.874|
                  |L1.848|
;;;232        } else {                  /* A child has lost the focus, we need to deactivate */
;;;233          _SetActive(hWin, 0);
000350  2100              MOVS     r1,#0
000352  4630              MOV      r0,r6
000354  f7fffffe          BL       _SetActive
;;;234          /* Remember the child which had the focus so we can reactive this child */
;;;235          if (WM__IsAncestor(pInfo->hOld, hWin)) {
000358  f9b50000          LDRSH    r0,[r5,#0]
00035c  4631              MOV      r1,r6
00035e  f7fffffe          BL       WM__IsAncestor
000362  b110              CBZ      r0,|L1.874|
;;;236            pObj->hFocussedChild = pInfo->hOld;
000364  8828              LDRH     r0,[r5,#0]
000366  f8a7005e          STRH     r0,[r7,#0x5e]
                  |L1.874|
;;;237          }
;;;238        }
;;;239      }
00036a  bf00              NOP      
                  |L1.876|
;;;240    }
00036c  e8bd81f0          POP      {r4-r8,pc}
;;;241    
                          ENDP

                  FRAMEWIN_SetActive PROC
;;;610    */
;;;611    void FRAMEWIN_SetActive(FRAMEWIN_Handle hObj, int State) {
000370  b570              PUSH     {r4-r6,lr}
000372  4604              MOV      r4,r0
000374  460d              MOV      r5,r1
;;;612      if (hObj) {
000376  b11c              CBZ      r4,|L1.896|
;;;613        WM_LOCK();
;;;614        _SetActive(hObj, State);
000378  4629              MOV      r1,r5
00037a  4620              MOV      r0,r4
00037c  f7fffffe          BL       _SetActive
                  |L1.896|
;;;615        WM_UNLOCK();
;;;616      }
;;;617    }
000380  bd70              POP      {r4-r6,pc}
;;;618    
                          ENDP

                  _FRAMEWIN_Callback PROC
;;;245    */
;;;246    static void _FRAMEWIN_Callback (WM_MESSAGE *pMsg) {
000382  e92d47f0          PUSH     {r4-r10,lr}
000386  b088              SUB      sp,sp,#0x20
000388  4604              MOV      r4,r0
;;;247      FRAMEWIN_Handle hWin = (FRAMEWIN_Handle)(pMsg->hWin);
00038a  f9b47004          LDRSH    r7,[r4,#4]
;;;248      FRAMEWIN_Obj* pObj = FRAMEWIN_H2P(hWin);
00038e  4638              MOV      r0,r7
000390  f7fffffe          BL       GUI_ALLOC_h2p
000394  4605              MOV      r5,r0
;;;249      GUI_RECT* pRect = (GUI_RECT*)(pMsg->Data.p);
000396  f8d49008          LDR      r9,[r4,#8]
;;;250      POSITIONS Pos;
;;;251      GUI_HOOK* pHook;
;;;252      /* Call hook functions */
;;;253      for (pHook = pObj->pFirstHook; pHook; pHook = pHook->pNext) {
00039a  6e6e              LDR      r6,[r5,#0x64]
00039c  e00a              B        |L1.948|
                  |L1.926|
;;;254        int r;
;;;255        r = (*pHook->pHookFunc)(pMsg);
00039e  4620              MOV      r0,r4
0003a0  6871              LDR      r1,[r6,#4]
0003a2  4788              BLX      r1
0003a4  4680              MOV      r8,r0
;;;256        if (r) {
0003a6  f1b80f00          CMP      r8,#0
0003aa  d002              BEQ      |L1.946|
                  |L1.940|
;;;257          return;   /* Message handled */
;;;258        }
;;;259      }
;;;260      switch (pMsg->MsgId) {
;;;261      case WM_HANDLE_DIALOG_STATUS:
;;;262        if (pMsg->Data.p) {                           /* set pointer to Dialog status */
;;;263          pObj->pDialogStatus = (WM_DIALOG_STATUS*)pMsg->Data.p;
;;;264        } else {                                      /* return pointer to Dialog status */
;;;265          pMsg->Data.p = pObj->pDialogStatus;      
;;;266        }
;;;267        return;
;;;268      case WM_PAINT:
;;;269        _Paint(pObj);
;;;270        break;
;;;271      case WM_TOUCH:
;;;272        _OnTouch(hWin, pObj, pMsg);
;;;273        return;                       /* Return here ... Message handled */
;;;274      case WM_GET_INSIDE_RECT:
;;;275        FRAMEWIN__CalcPositions(pObj, &Pos);
;;;276    		*pRect = Pos.rClient;
;;;277        return;                       /* Return here ... Message handled */
;;;278      case WM_GET_CLIENT_WINDOW:      /* return handle to client window. For most windows, there is no seperate client window, so it is the same handle */
;;;279        pMsg->Data.v = (int)pObj->hClient;
;;;280        return;                       /* Return here ... Message handled */
;;;281      case WM_NOTIFY_PARENT:
;;;282        if (pMsg->Data.v == WM_NOTIFICATION_RELEASED) {
;;;283          WM_MESSAGE Msg;
;;;284          Msg.hWinSrc = hWin;
;;;285          Msg.Data    = pMsg->Data;
;;;286          Msg.MsgId   = WM_NOTIFY_PARENT_REFLECTION;
;;;287          WM_SendMessage(pMsg->hWinSrc, &Msg);
;;;288        }
;;;289        return;
;;;290      case WM_SET_FOCUS:                 /* We have received or lost focus */
;;;291        if (pMsg->Data.v == 1) {
;;;292          if (WM_IsWindow(pObj->hFocussedChild)) {
;;;293            WM_SetFocus(pObj->hFocussedChild);
;;;294          } else {
;;;295            pObj->hFocussedChild = WM_SetFocusOnNextChild(pObj->hClient);
;;;296          }
;;;297          FRAMEWIN_SetActive(hWin, 1);
;;;298          pMsg->Data.v = 0;              /* Focus could be accepted */
;;;299        } else {
;;;300          FRAMEWIN_SetActive(hWin, 0);
;;;301        }
;;;302        return;
;;;303      case WM_TOUCH_CHILD:
;;;304        /* If a child of this framewindow has been touched and the frame window was not active,
;;;305           the framewindow will receive the focus.
;;;306         */
;;;307        if (!(pObj->Flags & FRAMEWIN_SF_ACTIVE)) {
;;;308          const WM_MESSAGE * pMsgOrg;
;;;309          const GUI_PID_STATE * pState;
;;;310          pMsgOrg = (const WM_MESSAGE*)pMsg->Data.p;      /* The original touch message */
;;;311          pState = (const GUI_PID_STATE*)pMsgOrg->Data.p;
;;;312          if (pState) {          /* Message may not have a valid pointer (moved out) ! */
;;;313            if (pState->Pressed) {
;;;314              WM_SetFocus(hWin);
;;;315            }
;;;316          }
;;;317        }
;;;318        break;
;;;319      case WM_NOTIFY_CHILD_HAS_FOCUS:
;;;320        _OnChildHasFocus(hWin, pObj, pMsg);
;;;321        break;
;;;322      case WM_DELETE:
;;;323        GUI_DEBUG_LOG("FRAMEWIN: _FRAMEWIN_Callback(WM_DELETE)\n");
;;;324        GUI_ALLOC_FreePtr(&pObj->hText);
;;;325        break;
;;;326      }
;;;327      /* Let widget handle the standard messages */
;;;328      if (WIDGET_HandleActive(hWin, pMsg) == 0) {
;;;329        return;
;;;330      }
;;;331      WM_DefaultProc(pMsg);
;;;332    }
0003ac  b008              ADD      sp,sp,#0x20
0003ae  e8bd87f0          POP      {r4-r10,pc}
                  |L1.946|
0003b2  6836              LDR      r6,[r6,#0]            ;253
                  |L1.948|
0003b4  2e00              CMP      r6,#0                 ;253
0003b6  d1f2              BNE      |L1.926|
0003b8  6820              LDR      r0,[r4,#0]            ;260
0003ba  2817              CMP      r0,#0x17              ;260
0003bc  d032              BEQ      |L1.1060|
0003be  dc0c              BGT      |L1.986|
0003c0  280d              CMP      r0,#0xd               ;260
0003c2  d068              BEQ      |L1.1174|
0003c4  dc04              BGT      |L1.976|
0003c6  280b              CMP      r0,#0xb               ;260
0003c8  d079              BEQ      |L1.1214|
0003ca  280c              CMP      r0,#0xc               ;260
0003cc  d118              BNE      |L1.1024|
0003ce  e018              B        |L1.1026|
                  |L1.976|
0003d0  280f              CMP      r0,#0xf               ;260
0003d2  d012              BEQ      |L1.1018|
0003d4  2814              CMP      r0,#0x14              ;260
0003d6  d17f              BNE      |L1.1240|
0003d8  e019              B        |L1.1038|
                  |L1.986|
0003da  281f              CMP      r0,#0x1f              ;260
0003dc  d037              BEQ      |L1.1102|
0003de  2821              CMP      r0,#0x21              ;260
0003e0  d06f              BEQ      |L1.1218|
0003e2  2826              CMP      r0,#0x26              ;260
0003e4  d022              BEQ      |L1.1068|
0003e6  282a              CMP      r0,#0x2a              ;260
0003e8  d176              BNE      |L1.1240|
0003ea  68a0              LDR      r0,[r4,#8]            ;262
0003ec  b110              CBZ      r0,|L1.1012|
0003ee  68a0              LDR      r0,[r4,#8]            ;263
0003f0  6628              STR      r0,[r5,#0x60]         ;263
0003f2  e001              B        |L1.1016|
                  |L1.1012|
0003f4  6e28              LDR      r0,[r5,#0x60]         ;265
0003f6  60a0              STR      r0,[r4,#8]            ;265
                  |L1.1016|
0003f8  e7d8              B        |L1.940|
                  |L1.1018|
0003fa  4628              MOV      r0,r5                 ;269
0003fc  f7fffffe          BL       _Paint
                  |L1.1024|
000400  e06a              B        |L1.1240|
                  |L1.1026|
000402  4622              MOV      r2,r4                 ;272
000404  4629              MOV      r1,r5                 ;272
000406  4638              MOV      r0,r7                 ;272
000408  f7fffffe          BL       _OnTouch
00040c  e7ce              B        |L1.940|
                  |L1.1038|
00040e  a903              ADD      r1,sp,#0xc            ;275
000410  4628              MOV      r0,r5                 ;275
000412  f7fffffe          BL       FRAMEWIN__CalcPositions
000416  9804              LDR      r0,[sp,#0x10]         ;276
000418  f8c90000          STR      r0,[r9,#0]            ;276
00041c  9805              LDR      r0,[sp,#0x14]         ;276
00041e  f8c90004          STR      r0,[r9,#4]            ;276
000422  e7c3              B        |L1.940|
                  |L1.1060|
000424  f9b5004c          LDRSH    r0,[r5,#0x4c]         ;279
000428  60a0              STR      r0,[r4,#8]            ;279
00042a  e7bf              B        |L1.940|
                  |L1.1068|
00042c  68a0              LDR      r0,[r4,#8]            ;282
00042e  2802              CMP      r0,#2                 ;282
000430  d10c              BNE      |L1.1100|
000432  f8ad7006          STRH     r7,[sp,#6]            ;284
000436  68a0              LDR      r0,[r4,#8]            ;285
000438  9002              STR      r0,[sp,#8]            ;285
00043a  f04f0027          MOV      r0,#0x27              ;286
00043e  9000              STR      r0,[sp,#0]            ;286
000440  f9b40006          LDRSH    r0,[r4,#6]            ;287
000444  4669              MOV      r1,sp                 ;287
000446  f7fffffe          BL       WM_SendMessage
00044a  bf00              NOP                            ;288
                  |L1.1100|
00044c  e7ae              B        |L1.940|
                  |L1.1102|
00044e  68a0              LDR      r0,[r4,#8]            ;291
000450  2801              CMP      r0,#1                 ;291
000452  d11b              BNE      |L1.1164|
000454  f9b5005e          LDRSH    r0,[r5,#0x5e]         ;292
000458  f7fffffe          BL       WM_IsWindow
00045c  b140              CBZ      r0,|L1.1136|
00045e  f9b5005e          LDRSH    r0,[r5,#0x5e]         ;293
000462  f7fffffe          BL       WM_SetFocus
000466  e009              B        |L1.1148|
                  |L1.1128|
                          DCD      FRAMEWIN__MinVisibility
                  |L1.1132|
                          DCD      0x00aaaaaa
                  |L1.1136|
000470  f9b5004c          LDRSH    r0,[r5,#0x4c]         ;295
000474  f7fffffe          BL       WM_SetFocusOnNextChild
000478  f8a5005e          STRH     r0,[r5,#0x5e]         ;295
                  |L1.1148|
00047c  2101              MOVS     r1,#1                 ;297
00047e  4638              MOV      r0,r7                 ;297
000480  f7fffffe          BL       FRAMEWIN_SetActive
000484  f04f0000          MOV      r0,#0                 ;298
000488  60a0              STR      r0,[r4,#8]            ;298
00048a  e003              B        |L1.1172|
                  |L1.1164|
00048c  2100              MOVS     r1,#0                 ;300
00048e  4638              MOV      r0,r7                 ;300
000490  f7fffffe          BL       FRAMEWIN_SetActive
                  |L1.1172|
000494  e78a              B        |L1.940|
                  |L1.1174|
000496  f8b5005c          LDRH     r0,[r5,#0x5c]         ;307
00049a  f0100f08          TST      r0,#8                 ;307
00049e  d10d              BNE      |L1.1212|
0004a0  f8d4a008          LDR      r10,[r4,#8]           ;310
0004a4  f8da8008          LDR      r8,[r10,#8]           ;311
0004a8  f1b80f00          CMP      r8,#0                 ;312
0004ac  d005              BEQ      |L1.1210|
0004ae  f8980008          LDRB     r0,[r8,#8]            ;313
0004b2  b110              CBZ      r0,|L1.1210|
0004b4  4638              MOV      r0,r7                 ;314
0004b6  f7fffffe          BL       WM_SetFocus
                  |L1.1210|
0004ba  bf00              NOP                            ;317
                  |L1.1212|
0004bc  e00c              B        |L1.1240|
                  |L1.1214|
0004be  e006              B        |L1.1230|
0004c0  e7ff              B        |L1.1218|
                  |L1.1218|
0004c2  4622              MOV      r2,r4                 ;320
0004c4  4629              MOV      r1,r5                 ;320
0004c6  4638              MOV      r0,r7                 ;320
0004c8  f7fffffe          BL       _OnChildHasFocus
0004cc  e004              B        |L1.1240|
                  |L1.1230|
0004ce  f1050050          ADD      r0,r5,#0x50           ;324
0004d2  f7fffffe          BL       GUI_ALLOC_FreePtr
0004d6  bf00              NOP                            ;325
                  |L1.1240|
0004d8  bf00              NOP                            ;270
0004da  4621              MOV      r1,r4                 ;328
0004dc  4638              MOV      r0,r7                 ;328
0004de  f7fffffe          BL       WIDGET_HandleActive
0004e2  b900              CBNZ     r0,|L1.1254|
0004e4  e762              B        |L1.940|
                  |L1.1254|
0004e6  4620              MOV      r0,r4                 ;331
0004e8  f7fffffe          BL       WM_DefaultProc
0004ec  bf00              NOP      
0004ee  e75d              B        |L1.940|
;;;333    
                          ENDP

                  FRAMEWIN__cbClient PROC
;;;337    */
;;;338    static void FRAMEWIN__cbClient(WM_MESSAGE* pMsg) {
0004f0  e92d43fe          PUSH     {r1-r9,lr}
0004f4  4604              MOV      r4,r0
;;;339      WM_HWIN hWin    = pMsg->hWin;
0004f6  f9b47004          LDRSH    r7,[r4,#4]
;;;340      WM_HWIN hParent = WM_GetParent(pMsg->hWin);
0004fa  f9b40004          LDRSH    r0,[r4,#4]
0004fe  f7fffffe          BL       WM_GetParent
000502  4680              MOV      r8,r0
;;;341      FRAMEWIN_Obj* pObj = FRAMEWIN_H2P(hParent);
000504  4640              MOV      r0,r8
000506  f7fffffe          BL       GUI_ALLOC_h2p
00050a  4605              MOV      r5,r0
;;;342      WM_CALLBACK* cb = pObj->cb;
00050c  6cae              LDR      r6,[r5,#0x48]
;;;343      switch (pMsg->MsgId) {
00050e  6820              LDR      r0,[r4,#0]
000510  2817              CMP      r0,#0x17
000512  d059              BEQ      |L1.1480|
000514  dc08              BGT      |L1.1320|
000516  280e              CMP      r0,#0xe
000518  d03f              BEQ      |L1.1434|
00051a  280f              CMP      r0,#0xf
00051c  d00b              BEQ      |L1.1334|
00051e  2814              CMP      r0,#0x14
000520  d050              BEQ      |L1.1476|
000522  2815              CMP      r0,#0x15
000524  d154              BNE      |L1.1488|
000526  e04e              B        |L1.1478|
                  |L1.1320|
000528  281f              CMP      r0,#0x1f
00052a  d01a              BEQ      |L1.1378|
00052c  2820              CMP      r0,#0x20
00052e  d02f              BEQ      |L1.1424|
000530  2822              CMP      r0,#0x22
000532  d14d              BNE      |L1.1488|
000534  e043              B        |L1.1470|
                  |L1.1334|
;;;344      case WM_PAINT:
;;;345        if (pObj->Props.ClientColor != GUI_INVALID_COLOR) {
000536  f06f4170          MVN      r1,#0xf0000000
00053a  6be8              LDR      r0,[r5,#0x3c]
00053c  4288              CMP      r0,r1
00053e  d004              BEQ      |L1.1354|
;;;346          LCD_SetBkColor(pObj->Props.ClientColor);
000540  6be8              LDR      r0,[r5,#0x3c]
000542  f7fffffe          BL       LCD_SetBkColor
;;;347          GUI_Clear();
000546  f7fffffe          BL       GUI_Clear
                  |L1.1354|
;;;348        }
;;;349        /* Give the user callback  a chance to draw.
;;;350         * Note that we can not run into the bottom part, as this passes the parents handle
;;;351         */
;;;352        if (cb) {
00054a  b146              CBZ      r6,|L1.1374|
;;;353    	    WM_MESSAGE Msg;
;;;354          Msg      = *pMsg;
00054c  e8940007          LDM      r4,{r0-r2}
000550  e88d0007          STM      sp,{r0-r2}
;;;355          Msg.hWin = hWin;
000554  f8ad7004          STRH     r7,[sp,#4]
;;;356          (*cb)(&Msg);
000558  4668              MOV      r0,sp
00055a  47b0              BLX      r6
;;;357        }
00055c  bf00              NOP      
                  |L1.1374|
;;;358        return;
;;;359      case WM_SET_FOCUS:
;;;360        if (pMsg->Data.v) {     /* Focus received */
;;;361          if (pObj->hFocussedChild && (pObj->hFocussedChild != hWin)) {
;;;362            WM_SetFocus(pObj->hFocussedChild);
;;;363          } else {
;;;364            pObj->hFocussedChild = WM_SetFocusOnNextChild(hWin);
;;;365          }
;;;366          pMsg->Data.v = 0;     /* Focus change accepted */
;;;367        }
;;;368        return;
;;;369      case WM_GET_ACCEPT_FOCUS:
;;;370        WIDGET_HandleActive(hParent, pMsg);
;;;371        return;
;;;372      case WM_KEY:
;;;373        if (((const WM_KEY_INFO*)(pMsg->Data.p))->PressedCnt > 0) {
;;;374          int Key = ((const WM_KEY_INFO*)(pMsg->Data.p))->Key;
;;;375          switch (Key) {
;;;376          case GUI_KEY_TAB:
;;;377            pObj->hFocussedChild = WM_SetFocusOnNextChild(hWin);
;;;378            return;
;;;379          }
;;;380        }
;;;381        break;	                       /* Send to parent by not doing anything */
;;;382      case WM_GET_BKCOLOR:
;;;383        pMsg->Data.Color = pObj->Props.ClientColor;
;;;384        return;                       /* Message handled */
;;;385      case WM_GET_INSIDE_RECT:        /* This should not be passed to parent ... (We do not want parents coordinates)*/
;;;386      case WM_GET_ID:                 /* This should not be passed to parent ... (Possible recursion problem)*/
;;;387      case WM_GET_CLIENT_WINDOW:      /* return handle to client window. For most windows, there is no seperate client window, so it is the same handle */
;;;388        WM_DefaultProc(pMsg);
;;;389        return;                       /* We are done ! */
;;;390      }
;;;391      /* Call user callback. Note that the user callback gets the handle of the Framewindow itself, NOT the Client. */
;;;392      if (cb) {
;;;393        pMsg->hWin = hParent;
;;;394        (*cb)(pMsg);
;;;395      } else {
;;;396        WM_DefaultProc(pMsg);
;;;397      }
;;;398    }
00055e  e8bd83fe          POP      {r1-r9,pc}
                  |L1.1378|
000562  68a0              LDR      r0,[r4,#8]            ;360
000564  b198              CBZ      r0,|L1.1422|
000566  f8b5005e          LDRH     r0,[r5,#0x5e]         ;361
00056a  b140              CBZ      r0,|L1.1406|
00056c  f9b5005e          LDRSH    r0,[r5,#0x5e]         ;361
000570  42b8              CMP      r0,r7                 ;361
000572  d004              BEQ      |L1.1406|
000574  f9b5005e          LDRSH    r0,[r5,#0x5e]         ;362
000578  f7fffffe          BL       WM_SetFocus
00057c  e004              B        |L1.1416|
                  |L1.1406|
00057e  4638              MOV      r0,r7                 ;364
000580  f7fffffe          BL       WM_SetFocusOnNextChild
000584  f8a5005e          STRH     r0,[r5,#0x5e]         ;364
                  |L1.1416|
000588  f04f0000          MOV      r0,#0                 ;366
00058c  60a0              STR      r0,[r4,#8]            ;366
                  |L1.1422|
00058e  e7e6              B        |L1.1374|
                  |L1.1424|
000590  4621              MOV      r1,r4                 ;370
000592  4640              MOV      r0,r8                 ;370
000594  f7fffffe          BL       WIDGET_HandleActive
000598  e7e1              B        |L1.1374|
                  |L1.1434|
00059a  68a0              LDR      r0,[r4,#8]            ;373
00059c  6840              LDR      r0,[r0,#4]            ;373
00059e  2800              CMP      r0,#0                 ;373
0005a0  dd0c              BLE      |L1.1468|
0005a2  68a0              LDR      r0,[r4,#8]            ;374
0005a4  f8d09000          LDR      r9,[r0,#0]            ;374
0005a8  f1b90f09          CMP      r9,#9                 ;375
0005ac  d105              BNE      |L1.1466|
0005ae  4638              MOV      r0,r7                 ;377
0005b0  f7fffffe          BL       WM_SetFocusOnNextChild
0005b4  f8a5005e          STRH     r0,[r5,#0x5e]         ;377
0005b8  e7d1              B        |L1.1374|
                  |L1.1466|
0005ba  bf00              NOP                            ;380
                  |L1.1468|
0005bc  e008              B        |L1.1488|
                  |L1.1470|
0005be  6be8              LDR      r0,[r5,#0x3c]         ;383
0005c0  60a0              STR      r0,[r4,#8]            ;383
0005c2  e7cc              B        |L1.1374|
                  |L1.1476|
0005c4  bf00              NOP                            ;386
                  |L1.1478|
0005c6  bf00              NOP                            ;387
                  |L1.1480|
0005c8  4620              MOV      r0,r4                 ;388
0005ca  f7fffffe          BL       WM_DefaultProc
0005ce  e7c6              B        |L1.1374|
                  |L1.1488|
0005d0  bf00              NOP                            ;381
0005d2  b126              CBZ      r6,|L1.1502|
0005d4  f8a48004          STRH     r8,[r4,#4]            ;393
0005d8  4620              MOV      r0,r4                 ;394
0005da  47b0              BLX      r6                    ;394
0005dc  e002              B        |L1.1508|
                  |L1.1502|
0005de  4620              MOV      r0,r4                 ;396
0005e0  f7fffffe          BL       WM_DefaultProc
                  |L1.1508|
0005e4  bf00              NOP      
0005e6  e7ba              B        |L1.1374|
;;;399    
                          ENDP

                  FRAMEWIN__UpdatePositions PROC
;;;479    */
;;;480    void FRAMEWIN__UpdatePositions(FRAMEWIN_Obj* pObj) {
0005e8  b530              PUSH     {r4,r5,lr}
0005ea  b085              SUB      sp,sp,#0x14
0005ec  4604              MOV      r4,r0
;;;481      /* Move client window accordingly */
;;;482      if (pObj->hClient || pObj->hMenu) {
0005ee  f8b4004c          LDRH     r0,[r4,#0x4c]
0005f2  b910              CBNZ     r0,|L1.1530|
0005f4  f8b4004e          LDRH     r0,[r4,#0x4e]
0005f8  b368              CBZ      r0,|L1.1622|
                  |L1.1530|
;;;483        POSITIONS Pos;
;;;484        FRAMEWIN__CalcPositions(pObj, &Pos);
0005fa  4669              MOV      r1,sp
0005fc  4620              MOV      r0,r4
0005fe  f7fffffe          BL       FRAMEWIN__CalcPositions
;;;485        if (pObj->hClient) {
000602  f8b4004c          LDRH     r0,[r4,#0x4c]
000606  b1b8              CBZ      r0,|L1.1592|
;;;486          WM_MoveChildTo(pObj->hClient, Pos.rClient.x0, Pos.rClient.y0);
000608  f9bd2006          LDRSH    r2,[sp,#6]
00060c  f9bd1004          LDRSH    r1,[sp,#4]
000610  f9b4004c          LDRSH    r0,[r4,#0x4c]
000614  f7fffffe          BL       WM_MoveChildTo
;;;487          WM_SetSize(pObj->hClient, 
000618  f9bd500a          LDRSH    r5,[sp,#0xa]
00061c  f9bd3006          LDRSH    r3,[sp,#6]
000620  1aeb              SUBS     r3,r5,r3
000622  1c5a              ADDS     r2,r3,#1
000624  f9bd3008          LDRSH    r3,[sp,#8]
000628  f9bd5004          LDRSH    r5,[sp,#4]
00062c  1b5b              SUBS     r3,r3,r5
00062e  1c59              ADDS     r1,r3,#1
000630  f9b4004c          LDRSH    r0,[r4,#0x4c]
000634  f7fffffe          BL       WM_SetSize
                  |L1.1592|
;;;488                     Pos.rClient.x1 - Pos.rClient.x0 + 1, 
;;;489                     Pos.rClient.y1 - Pos.rClient.y0 + 1);
;;;490        }
;;;491        if (pObj->hMenu) {
000638  f8b4004e          LDRH     r0,[r4,#0x4e]
00063c  b150              CBZ      r0,|L1.1620|
;;;492          WM_MoveChildTo(pObj->hMenu, Pos.rClient.x0, Pos.rClient.y0 - Pos.MenuHeight);
00063e  f9bd3006          LDRSH    r3,[sp,#6]
000642  f9bd5002          LDRSH    r5,[sp,#2]
000646  1b5a              SUBS     r2,r3,r5
000648  f9bd1004          LDRSH    r1,[sp,#4]
00064c  f9b4004e          LDRSH    r0,[r4,#0x4e]
000650  f7fffffe          BL       WM_MoveChildTo
                  |L1.1620|
;;;493        }
;;;494      }
000654  bf00              NOP      
                  |L1.1622|
;;;495    }
000656  b005              ADD      sp,sp,#0x14
000658  bd30              POP      {r4,r5,pc}
;;;496    
                          ENDP

                  FRAMEWIN_SetText PROC
;;;559    */
;;;560    void FRAMEWIN_SetText(FRAMEWIN_Handle hObj, const char* s) {
00065a  b570              PUSH     {r4-r6,lr}
00065c  4604              MOV      r4,r0
00065e  460d              MOV      r5,r1
;;;561      if (hObj) {
000660  b16c              CBZ      r4,|L1.1662|
;;;562        FRAMEWIN_Obj* pObj;
;;;563        GUI_LOCK();
;;;564        pObj = FRAMEWIN_H2P(hObj);
000662  4620              MOV      r0,r4
000664  f7fffffe          BL       GUI_ALLOC_h2p
000668  4606              MOV      r6,r0
;;;565        if (GUI__SetText(&pObj->hText, s)) {
00066a  4629              MOV      r1,r5
00066c  f1060050          ADD      r0,r6,#0x50
000670  f7fffffe          BL       GUI__SetText
000674  b110              CBZ      r0,|L1.1660|
;;;566          FRAMEWIN_Invalidate(hObj);
000676  4620              MOV      r0,r4
000678  f7fffffe          BL       WM_InvalidateWindow
                  |L1.1660|
;;;567        }
;;;568        GUI_UNLOCK();
;;;569      }
00067c  bf00              NOP      
                  |L1.1662|
;;;570    }
00067e  bd70              POP      {r4-r6,pc}
;;;571    
                          ENDP

                  FRAMEWIN_CreateEx PROC
;;;506    */
;;;507    FRAMEWIN_Handle FRAMEWIN_CreateEx(int x0, int y0, int xsize, int ysize, WM_HWIN hParent,
000680  e92d4ff0          PUSH     {r4-r11,lr}
;;;508                                      int WinFlags, int ExFlags, int Id, const char* pTitle, WM_CALLBACK* cb)
;;;509    {
000684  b089              SUB      sp,sp,#0x24
000686  4607              MOV      r7,r0
000688  4688              MOV      r8,r1
00068a  4691              MOV      r9,r2
00068c  469b              MOV      r11,r3
00068e  e9dd5a13          LDRD     r5,r10,[sp,#0x4c]
;;;510      FRAMEWIN_Handle hObj;
;;;511      /* Create the window */
;;;512      WinFlags |= WM_CF_LATE_CLIP;    /* Always use late clipping since widget is optimized for it. */
000692  f4455580          ORR      r5,r5,#0x1000
;;;513      hObj = WM_CreateWindowAsChild(x0, y0, xsize, ysize, hParent, WinFlags, _FRAMEWIN_Callback,
000696  f04f0248          MOV      r2,#0x48
00069a  4b47              LDR      r3,|L1.1976|
00069c  b2a8              UXTH     r0,r5
00069e  9912              LDR      r1,[sp,#0x48]
0006a0  e9cd3202          STRD     r3,r2,[sp,#8]
0006a4  e9cd1000          STRD     r1,r0,[sp,#0]
0006a8  465b              MOV      r3,r11
0006aa  464a              MOV      r2,r9
0006ac  4641              MOV      r1,r8
0006ae  4638              MOV      r0,r7
0006b0  f7fffffe          BL       WM_CreateWindowAsChild
0006b4  4606              MOV      r6,r0
;;;514                                    sizeof(FRAMEWIN_Obj) - sizeof(WM_Obj));
;;;515      if (hObj) {
0006b6  2e00              CMP      r6,#0
0006b8  d04e              BEQ      |L1.1880|
;;;516        FRAMEWIN_Obj* pObj;
;;;517        POSITIONS Pos;
;;;518        GUI_LOCK();
;;;519        pObj = FRAMEWIN_H2P(hObj);
0006ba  4630              MOV      r0,r6
0006bc  f7fffffe          BL       GUI_ALLOC_h2p
0006c0  4604              MOV      r4,r0
;;;520        /* init widget specific variables */
;;;521        WIDGET__Init(&pObj->Widget, Id, WIDGET_STATE_FOCUSSABLE | FRAMEWIN_SF_TITLEVIS);
0006c2  f04f0230          MOV      r2,#0x30
0006c6  4620              MOV      r0,r4
0006c8  9915              LDR      r1,[sp,#0x54]
0006ca  f7fffffe          BL       WIDGET__Init
;;;522        /* init member variables */
;;;523        pObj->Props = FRAMEWIN__DefaultProps;
0006ce  2220              MOVS     r2,#0x20
0006d0  493a              LDR      r1,|L1.1980|
0006d2  f1040028          ADD      r0,r4,#0x28
0006d6  f7fffffe          BL       __aeabi_memcpy4
;;;524        pObj->TextAlign      = GUI_TA_LEFT;
0006da  f04f0000          MOV      r0,#0
0006de  f1040448          ADD      r4,r4,#0x48
0006e2  8260              STRH     r0,[r4,#0x12]
;;;525        pObj->cb             = cb;
0006e4  9817              LDR      r0,[sp,#0x5c]
0006e6  6020              STR      r0,[r4,#0]
;;;526        pObj->Flags          = ExFlags;
0006e8  f8a4a014          STRH     r10,[r4,#0x14]
;;;527        pObj->hFocussedChild = 0;
0006ec  f04f0000          MOV      r0,#0
0006f0  82e0              STRH     r0,[r4,#0x16]
;;;528        pObj->hMenu          = 0;
0006f2  80e0              STRH     r0,[r4,#6]
;;;529        pObj->pFirstHook     = NULL;
0006f4  61e0              STR      r0,[r4,#0x1c]
0006f6  f1a40448          SUB      r4,r4,#0x48
;;;530        FRAMEWIN__CalcPositions(pObj, &Pos);
0006fa  a904              ADD      r1,sp,#0x10
0006fc  4620              MOV      r0,r4
0006fe  f7fffffe          BL       FRAMEWIN__CalcPositions
;;;531        pObj->hClient = WM_CreateWindowAsChild(Pos.rClient.x0,Pos.rClient.y0,
000702  2000              MOVS     r0,#0
000704  492e              LDR      r1,|L1.1984|
000706  f2417282          MOV      r2,#0x1782
00070a  e9cd6200          STRD     r6,r2,[sp,#0]
00070e  e9cd1002          STRD     r1,r0,[sp,#8]
000712  f9bde01a          LDRSH    lr,[sp,#0x1a]
000716  f9bdc016          LDRSH    r12,[sp,#0x16]
00071a  ebae0c0c          SUB      r12,lr,r12
00071e  f10c0301          ADD      r3,r12,#1
000722  f9bdc018          LDRSH    r12,[sp,#0x18]
000726  f9bde014          LDRSH    lr,[sp,#0x14]
00072a  ebac0c0e          SUB      r12,r12,lr
00072e  f10c0201          ADD      r2,r12,#1
000732  f9bd1016          LDRSH    r1,[sp,#0x16]
000736  4670              MOV      r0,lr
000738  f7fffffe          BL       WM_CreateWindowAsChild
00073c  f8a4004c          STRH     r0,[r4,#0x4c]
;;;532                                               Pos.rClient.x1 - Pos.rClient.x0 +1,
;;;533                                               Pos.rClient.y1 - Pos.rClient.y0 +1,
;;;534                                               hObj, 
;;;535                                               WM_CF_ANCHOR_RIGHT | WM_CF_ANCHOR_LEFT | WM_CF_ANCHOR_TOP | WM_CF_ANCHOR_BOTTOM | WM_CF_SHOW | WM_CF_LATE_CLIP, 
;;;536                                               FRAMEWIN__cbClient, 0);
;;;537        /* Normally we disable memory devices for the frame window:
;;;538         * The frame window does not flicker, and not using memory devices is usually faster.
;;;539         * You can still use memory by explicitly specifying the flag
;;;540         */
;;;541        if ((WinFlags & (WM_CF_MEMDEV | (WM_CF_MEMDEV_ON_REDRAW))) == 0) {
000740  f2420004          MOV      r0,#0x2004
000744  4205              TST      r5,r0
000746  d102              BNE      |L1.1870|
;;;542          WM_DisableMemdev(hObj);
000748  4630              MOV      r0,r6
00074a  f7fffffe          BL       WM_DisableMemdev
                  |L1.1870|
;;;543        }
;;;544        FRAMEWIN_SetText(hObj, pTitle);
00074e  4630              MOV      r0,r6
000750  9916              LDR      r1,[sp,#0x58]
000752  f7fffffe          BL       FRAMEWIN_SetText
;;;545        GUI_UNLOCK();
;;;546      }
000756  bf00              NOP      
                  |L1.1880|
;;;547      return hObj;
000758  4630              MOV      r0,r6
;;;548    }
00075a  b009              ADD      sp,sp,#0x24
00075c  e8bd8ff0          POP      {r4-r11,pc}
;;;549    
                          ENDP

                  FRAMEWIN_SetTextAlign PROC
;;;575    */
;;;576    void FRAMEWIN_SetTextAlign(FRAMEWIN_Handle hObj, int Align) {
000760  b570              PUSH     {r4-r6,lr}
000762  4605              MOV      r5,r0
000764  460c              MOV      r4,r1
;;;577      if (hObj) {
000766  b175              CBZ      r5,|L1.1926|
;;;578        FRAMEWIN_Obj* pObj;
;;;579        GUI_LOCK();
;;;580        pObj = FRAMEWIN_H2P(hObj);
000768  4628              MOV      r0,r5
00076a  f7fffffe          BL       GUI_ALLOC_h2p
00076e  4606              MOV      r6,r0
;;;581        if (pObj->TextAlign != Align) {
000770  f9b6005a          LDRSH    r0,[r6,#0x5a]
000774  42a0              CMP      r0,r4
000776  d005              BEQ      |L1.1924|
;;;582          pObj->TextAlign = Align;
000778  b220              SXTH     r0,r4
00077a  f8a6005a          STRH     r0,[r6,#0x5a]
;;;583          FRAMEWIN_Invalidate(hObj);
00077e  4628              MOV      r0,r5
000780  f7fffffe          BL       WM_InvalidateWindow
                  |L1.1924|
;;;584        }
;;;585        GUI_UNLOCK();
;;;586      }
000784  bf00              NOP      
                  |L1.1926|
;;;587    }
000786  bd70              POP      {r4-r6,pc}
;;;588    
                          ENDP

                  FRAMEWIN_SetMoveable PROC
;;;592    */
;;;593    void FRAMEWIN_SetMoveable(FRAMEWIN_Handle hObj, int State) {
000788  b570              PUSH     {r4-r6,lr}
00078a  4605              MOV      r5,r0
00078c  460e              MOV      r6,r1
;;;594      if (hObj) {
00078e  b195              CBZ      r5,|L1.1974|
;;;595        FRAMEWIN_Obj* pObj;
;;;596        GUI_LOCK();
;;;597        pObj = FRAMEWIN_H2P(hObj);
000790  4628              MOV      r0,r5
000792  f7fffffe          BL       GUI_ALLOC_h2p
000796  4604              MOV      r4,r0
;;;598        if (State) {
000798  b136              CBZ      r6,|L1.1960|
;;;599          pObj->Flags |= FRAMEWIN_CF_MOVEABLE;
00079a  f8b4005c          LDRH     r0,[r4,#0x5c]
00079e  f0400010          ORR      r0,r0,#0x10
0007a2  f8a4005c          STRH     r0,[r4,#0x5c]
0007a6  e005              B        |L1.1972|
                  |L1.1960|
;;;600        } else {
;;;601          pObj->Flags &= ~FRAMEWIN_CF_MOVEABLE;
0007a8  f8b4005c          LDRH     r0,[r4,#0x5c]
0007ac  f0200010          BIC      r0,r0,#0x10
0007b0  f8a4005c          STRH     r0,[r4,#0x5c]
                  |L1.1972|
;;;602        }
;;;603        GUI_UNLOCK();
;;;604      }
0007b4  bf00              NOP      
                  |L1.1974|
;;;605    }
0007b6  bd70              POP      {r4-r6,pc}
;;;606    
                          ENDP

                  |L1.1976|
                          DCD      _FRAMEWIN_Callback
                  |L1.1980|
                          DCD      FRAMEWIN__DefaultProps
                  |L1.1984|
                          DCD      FRAMEWIN__cbClient

                          AREA ||.data||, DATA, ALIGN=2

                  FRAMEWIN__DefaultProps
                          DCD      GUI_Font8_1
                          DCD      0x00404040
                          DCD      0x00ff0000
                          DCD      0x00ffffff
                          DCD      0x00ffffff
                          DCD      0x00c0c0c0
000018  00000003          DCW      0x0000,0x0003
00001c  0001              DCW      0x0001
00001e  0000              DCB      0x00,0x00
                  FRAMEWIN__MinVisibility
000020  0005              DCW      0x0005

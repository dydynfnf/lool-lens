; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\lcd_l0_generic.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\lcd_l0_generic.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\lcd_l0_generic.crf GUI\Core\LCD_L0_Generic.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  LCD_L0_Color2Index PROC
;;;186    */
;;;187    unsigned int LCD_L0_Color2Index(LCD_COLOR Color) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
;;;188      unsigned int Index;
;;;189      Index = COLOR2INDEX(Color);
000004  4620              MOV      r0,r4
000006  f7fffffe          BL       LCD_Color2Index_M565
00000a  4605              MOV      r5,r0
;;;190      #if LCD_REVERSE
;;;191        Index ^= ((1<<LCD_BITSPERPIXEL)-1);
;;;192      #endif
;;;193      return Index;
00000c  4628              MOV      r0,r5
;;;194    }
00000e  bd70              POP      {r4-r6,pc}
;;;195    
                          ENDP

                  LCD_L0_Index2Color PROC
;;;199    */
;;;200    LCD_COLOR LCD_L0_Index2Color(int Index) {
000010  b510              PUSH     {r4,lr}
000012  4604              MOV      r4,r0
;;;201      #if LCD_REVERSE
;;;202        Index ^= ((1<<LCD_BITSPERPIXEL)-1);
;;;203      #endif
;;;204      return INDEX2COLOR(Index);
000014  4620              MOV      r0,r4
000016  f7fffffe          BL       LCD_Index2Color_M565
;;;205    }
00001a  bd10              POP      {r4,pc}
;;;206    
                          ENDP

                  LCD_L0_GetIndexMask PROC
;;;210    */
;;;211    unsigned int LCD_L0_GetIndexMask(void) {
00001c  b510              PUSH     {r4,lr}
;;;212      return GETINDEXMASK();
00001e  f7fffffe          BL       LCD_GetIndexMask_M565
;;;213    }
000022  bd10              POP      {r4,pc}
;;;214    
                          ENDP

                  LCD_L0_GetRect PROC
;;;218    */
;;;219    void LCD_L0_GetRect(LCD_RECT *pRect) {
000024  f04f0100          MOV      r1,#0
;;;220      pRect->x0 = 0;
000028  8001              STRH     r1,[r0,#0]
;;;221      pRect->y0 = 0;
00002a  8041              STRH     r1,[r0,#2]
;;;222      pRect->x1 = LCD_XSIZE - 1;
00002c  f240113f          MOV      r1,#0x13f
000030  8081              STRH     r1,[r0,#4]
;;;223      pRect->y1 = LCD_YSIZE - 1;
000032  f04f01ef          MOV      r1,#0xef
000036  80c1              STRH     r1,[r0,#6]
;;;224    }
000038  4770              BX       lr
;;;225    
                          ENDP


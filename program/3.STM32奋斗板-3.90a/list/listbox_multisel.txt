; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\listbox_multisel.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\listbox_multisel.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\listbox_multisel.crf GUI\Widget\LISTBOX_MultiSel.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  LISTBOX_SetMulti PROC
;;;38     */
;;;39     void LISTBOX_SetMulti(LISTBOX_Handle hObj, int Mode) {
000000  b570              PUSH     {r4-r6,lr}
000002  4605              MOV      r5,r0
000004  460e              MOV      r6,r1
;;;40       if (hObj) {
000006  b315              CBZ      r5,|L1.78|
;;;41         LISTBOX_Obj* pObj;
;;;42         WM_LOCK();
;;;43         pObj = LISTBOX_H2P(hObj);
000008  4628              MOV      r0,r5
00000a  f7fffffe          BL       GUI_ALLOC_h2p
00000e  4604              MOV      r4,r0
;;;44         if (Mode) {
000010  b176              CBZ      r6,|L1.48|
;;;45           if (!(pObj->Flags & LISTBOX_SF_MULTISEL)) {
000012  f8940074          LDRB     r0,[r4,#0x74]
000016  f0100f04          TST      r0,#4
00001a  d117              BNE      |L1.76|
;;;46             pObj->Flags |= LISTBOX_SF_MULTISEL;
00001c  f8940074          LDRB     r0,[r4,#0x74]
000020  f0400004          ORR      r0,r0,#4
000024  f8840074          STRB     r0,[r4,#0x74]
;;;47             LISTBOX__InvalidateInsideArea(hObj);
000028  4628              MOV      r0,r5
00002a  f7fffffe          BL       LISTBOX__InvalidateInsideArea
00002e  e00d              B        |L1.76|
                  |L1.48|
;;;48           }
;;;49         } else {
;;;50           if (pObj->Flags & LISTBOX_SF_MULTISEL) {
000030  f8940074          LDRB     r0,[r4,#0x74]
000034  f0100f04          TST      r0,#4
000038  d008              BEQ      |L1.76|
;;;51             pObj->Flags &= ~LISTBOX_SF_MULTISEL;
00003a  f8940074          LDRB     r0,[r4,#0x74]
00003e  f0200004          BIC      r0,r0,#4
000042  f8840074          STRB     r0,[r4,#0x74]
;;;52             LISTBOX__InvalidateInsideArea(hObj);
000046  4628              MOV      r0,r5
000048  f7fffffe          BL       LISTBOX__InvalidateInsideArea
                  |L1.76|
;;;53           }
;;;54         }
;;;55         WM_UNLOCK();
;;;56       }
00004c  bf00              NOP      
                  |L1.78|
;;;57     }
00004e  bd70              POP      {r4-r6,pc}
;;;58     
                          ENDP

                  LISTBOX_GetMulti PROC
;;;62     */
;;;63     int LISTBOX_GetMulti(LISTBOX_Handle hObj) {
000050  b570              PUSH     {r4-r6,lr}
000052  4604              MOV      r4,r0
;;;64       int Multi = 0;
000054  f04f0500          MOV      r5,#0
;;;65       if (hObj) {
000058  b164              CBZ      r4,|L1.116|
;;;66         LISTBOX_Obj* pObj;
;;;67         WM_LOCK();
;;;68         pObj = LISTBOX_H2P(hObj);
00005a  4620              MOV      r0,r4
00005c  f7fffffe          BL       GUI_ALLOC_h2p
000060  4606              MOV      r6,r0
;;;69         if (!(pObj->Flags & LISTBOX_SF_MULTISEL)) {
000062  f8960074          LDRB     r0,[r6,#0x74]
000066  f0100f04          TST      r0,#4
00006a  d100              BNE      |L1.110|
;;;70           Multi = 0;
00006c  e001              B        |L1.114|
                  |L1.110|
;;;71         } else {
;;;72           Multi = 1;
00006e  f04f0501          MOV      r5,#1
                  |L1.114|
;;;73         }
;;;74         WM_UNLOCK();
;;;75       }
000072  bf00              NOP      
                  |L1.116|
;;;76       return Multi;
000074  4628              MOV      r0,r5
;;;77     }
000076  bd70              POP      {r4-r6,pc}
;;;78     
                          ENDP

                  LISTBOX_GetItemSel PROC
;;;82     */
;;;83     int LISTBOX_GetItemSel(LISTBOX_Handle hObj, unsigned Index) {
000078  e92d47f0          PUSH     {r4-r10,lr}
00007c  4605              MOV      r5,r0
00007e  460e              MOV      r6,r1
;;;84       int Ret = 0;
000080  f04f0800          MOV      r8,#0
;;;85       if (hObj) {
000084  b31d              CBZ      r5,|L1.206|
;;;86         unsigned NumItems;
;;;87         LISTBOX_Obj* pObj;
;;;88         WM_LOCK();
;;;89         pObj = LISTBOX_H2P(hObj);
000086  4628              MOV      r0,r5
000088  f7fffffe          BL       GUI_ALLOC_h2p
00008c  4604              MOV      r4,r0
;;;90         NumItems = LISTBOX__GetNumItems(pObj);
00008e  4620              MOV      r0,r4
000090  f7fffffe          BL       LISTBOX__GetNumItems
000094  4681              MOV      r9,r0
;;;91         if ((Index < NumItems) && (pObj->Flags & LISTBOX_SF_MULTISEL)) {
000096  454e              CMP      r6,r9
000098  d218              BCS      |L1.204|
00009a  f8940074          LDRB     r0,[r4,#0x74]
00009e  f0100f04          TST      r0,#4
0000a2  d013              BEQ      |L1.204|
;;;92           WM_HMEM hItem = GUI_ARRAY_GethItem(&pObj->ItemArray, Index);
0000a4  4631              MOV      r1,r6
0000a6  f1040028          ADD      r0,r4,#0x28
0000aa  f7fffffe          BL       GUI_ARRAY_GethItem
0000ae  4607              MOV      r7,r0
;;;93           if (hItem) {
0000b0  b15f              CBZ      r7,|L1.202|
;;;94             LISTBOX_ITEM * pItem = (LISTBOX_ITEM *)GUI_ALLOC_h2p(hItem);
0000b2  4638              MOV      r0,r7
0000b4  f7fffffe          BL       GUI_ALLOC_h2p
0000b8  4682              MOV      r10,r0
;;;95             if (pItem->Status & LISTBOX_ITEM_SELECTED) {
0000ba  f89a0004          LDRB     r0,[r10,#4]
0000be  f0100f01          TST      r0,#1
0000c2  d001              BEQ      |L1.200|
;;;96               Ret = 1;
0000c4  f04f0801          MOV      r8,#1
                  |L1.200|
;;;97             }
;;;98           }
0000c8  bf00              NOP      
                  |L1.202|
;;;99         }
0000ca  bf00              NOP      
                  |L1.204|
;;;100        WM_UNLOCK();
;;;101      }
0000cc  bf00              NOP      
                  |L1.206|
;;;102      return Ret;
0000ce  4640              MOV      r0,r8
;;;103    }
0000d0  e8bd87f0          POP      {r4-r10,pc}
;;;104    
                          ENDP

                  LISTBOX_SetItemSel PROC
;;;108    */
;;;109    void LISTBOX_SetItemSel(LISTBOX_Handle hObj, unsigned Index, int OnOff) {
0000d4  e92d47f0          PUSH     {r4-r10,lr}
0000d8  4607              MOV      r7,r0
0000da  460e              MOV      r6,r1
0000dc  4690              MOV      r8,r2
;;;110      if (hObj) {
0000de  2f00              CMP      r7,#0
0000e0  d03c              BEQ      |L1.348|
;;;111        unsigned NumItems;
;;;112        LISTBOX_Obj* pObj;
;;;113        WM_LOCK();
;;;114        pObj = LISTBOX_H2P(hObj);
0000e2  4638              MOV      r0,r7
0000e4  f7fffffe          BL       GUI_ALLOC_h2p
0000e8  4605              MOV      r5,r0
;;;115        NumItems = LISTBOX__GetNumItems(pObj);
0000ea  4628              MOV      r0,r5
0000ec  f7fffffe          BL       LISTBOX__GetNumItems
0000f0  4682              MOV      r10,r0
;;;116        if ((Index < NumItems) && (pObj->Flags & LISTBOX_SF_MULTISEL)) {
0000f2  4556              CMP      r6,r10
0000f4  d231              BCS      |L1.346|
0000f6  f8950074          LDRB     r0,[r5,#0x74]
0000fa  f0100f04          TST      r0,#4
0000fe  d02c              BEQ      |L1.346|
;;;117          WM_HMEM hItem = GUI_ARRAY_GethItem(&pObj->ItemArray, Index);
000100  4631              MOV      r1,r6
000102  f1050028          ADD      r0,r5,#0x28
000106  f7fffffe          BL       GUI_ARRAY_GethItem
00010a  4681              MOV      r9,r0
;;;118          if (hItem) {
00010c  f1b90f00          CMP      r9,#0
000110  d022              BEQ      |L1.344|
;;;119            LISTBOX_ITEM * pItem = (LISTBOX_ITEM *)GUI_ALLOC_h2p(hItem);
000112  4648              MOV      r0,r9
000114  f7fffffe          BL       GUI_ALLOC_h2p
000118  4604              MOV      r4,r0
;;;120            if (OnOff) {
00011a  f1b80f00          CMP      r8,#0
00011e  d00d              BEQ      |L1.316|
;;;121              if (!(pItem->Status & LISTBOX_ITEM_SELECTED)) {
000120  7920              LDRB     r0,[r4,#4]
000122  f0100f01          TST      r0,#1
000126  d116              BNE      |L1.342|
;;;122                pItem->Status |= LISTBOX_ITEM_SELECTED;
000128  7920              LDRB     r0,[r4,#4]
00012a  f0400001          ORR      r0,r0,#1
00012e  7120              STRB     r0,[r4,#4]
;;;123                LISTBOX__InvalidateItem(hObj, pObj, Index);
000130  4632              MOV      r2,r6
000132  4629              MOV      r1,r5
000134  4638              MOV      r0,r7
000136  f7fffffe          BL       LISTBOX__InvalidateItem
00013a  e00c              B        |L1.342|
                  |L1.316|
;;;124              }
;;;125            } else {
;;;126              if (pItem->Status & LISTBOX_ITEM_SELECTED) {
00013c  7920              LDRB     r0,[r4,#4]
00013e  f0100f01          TST      r0,#1
000142  d008              BEQ      |L1.342|
;;;127                pItem->Status &= ~LISTBOX_ITEM_SELECTED;
000144  7920              LDRB     r0,[r4,#4]
000146  f0200001          BIC      r0,r0,#1
00014a  7120              STRB     r0,[r4,#4]
;;;128                LISTBOX__InvalidateItem(hObj, pObj, Index);
00014c  4632              MOV      r2,r6
00014e  4629              MOV      r1,r5
000150  4638              MOV      r0,r7
000152  f7fffffe          BL       LISTBOX__InvalidateItem
                  |L1.342|
;;;129              }
;;;130            }
;;;131          }
000156  bf00              NOP      
                  |L1.344|
;;;132        }
000158  bf00              NOP      
                  |L1.346|
;;;133        WM_UNLOCK();
;;;134      }
00015a  bf00              NOP      
                  |L1.348|
;;;135    }
00015c  e8bd87f0          POP      {r4-r10,pc}
;;;136    
                          ENDP


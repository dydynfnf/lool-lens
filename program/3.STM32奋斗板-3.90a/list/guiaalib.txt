; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\guiaalib.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\guiaalib.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\guiaalib.crf GUI\AntiAlias\GUIAALib.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _CleanLine PROC
;;;63     */
;;;64     static void _CleanLine(void) {
000000  b510              PUSH     {r4,lr}
;;;65       GUI_MEMSET(pabAABuffer,0, _x1 - _x0+1);
000002  48e5              LDR      r0,|L1.920|
000004  6800              LDR      r0,[r0,#0]  ; _x1
000006  49e5              LDR      r1,|L1.924|
000008  6809              LDR      r1,[r1,#0]  ; _x0
00000a  1a40              SUBS     r0,r0,r1
00000c  1c42              ADDS     r2,r0,#1
00000e  2100              MOVS     r1,#0
000010  48e3              LDR      r0,|L1.928|
000012  6800              LDR      r0,[r0,#0]  ; pabAABuffer
000014  f7fffffe          BL       GUI__memset
;;;66       _y = -16383;  /* Invalidate */  
000018  48e2              LDR      r0,|L1.932|
00001a  49e3              LDR      r1,|L1.936|
00001c  6008              STR      r0,[r1,#0]  ; _y
;;;67       _x0_InUse =  16383;
00001e  f64370ff          MOV      r0,#0x3fff
000022  49e2              LDR      r1,|L1.940|
000024  6008              STR      r0,[r1,#0]  ; _x0_InUse
;;;68       _x1_InUse = -16383;
000026  48df              LDR      r0,|L1.932|
000028  49e1              LDR      r1,|L1.944|
00002a  6008              STR      r0,[r1,#0]  ; _x1_InUse
;;;69     }
00002c  bd10              POP      {r4,pc}
;;;70     
                          ENDP

                  _FlushLine PROC
;;;74     */
;;;75     static void _FlushLine(void) {
00002e  e92d47f0          PUSH     {r4-r10,lr}
;;;76       int i;
;;;77       int iEnd = _x1_InUse-_x0;
000032  48df              LDR      r0,|L1.944|
000034  6800              LDR      r0,[r0,#0]  ; _x1_InUse
000036  49d9              LDR      r1,|L1.924|
000038  6809              LDR      r1,[r1,#0]  ; _x0
00003a  eba00801          SUB      r8,r0,r1
;;;78       int IMax = GUI_Context.AA_Factor * GUI_Context.AA_Factor;
00003e  48dd              LDR      r0,|L1.948|
000040  f890005c          LDRB     r0,[r0,#0x5c]  ; GUI_Context
000044  fb00f600          MUL      r6,r0,r0
;;;79       for (i =_x0_InUse-_x0; i<=iEnd; i++) {
000048  48d8              LDR      r0,|L1.940|
00004a  6800              LDR      r0,[r0,#0]  ; _x0_InUse
00004c  49d3              LDR      r1,|L1.924|
00004e  6809              LDR      r1,[r1,#0]  ; _x0
000050  eba00401          SUB      r4,r0,r1
000054  e043              B        |L1.222|
                  |L1.86|
;;;80         int Intens = *(pabAABuffer+i);
000056  48d2              LDR      r0,|L1.928|
000058  6800              LDR      r0,[r0,#0]  ; pabAABuffer
00005a  5d07              LDRB     r7,[r0,r4]
;;;81         if (Intens) {
00005c  2f00              CMP      r7,#0
00005e  d03c              BEQ      |L1.218|
;;;82           /* Check we can use line draw */
;;;83           if (Intens == IMax) {
000060  42b7              CMP      r7,r6
000062  d127              BNE      |L1.180|
;;;84             int j;
;;;85             for (j=i; j<iEnd; ) {
000064  4625              MOV      r5,r4
000066  e008              B        |L1.122|
                  |L1.104|
;;;86               if (*(pabAABuffer+j+1) != IMax) {
000068  48cd              LDR      r0,|L1.928|
00006a  6800              LDR      r0,[r0,#0]  ; pabAABuffer
00006c  4428              ADD      r0,r0,r5
00006e  7840              LDRB     r0,[r0,#1]
000070  42b0              CMP      r0,r6
000072  d000              BEQ      |L1.118|
;;;87                 break;
000074  e003              B        |L1.126|
                  |L1.118|
;;;88               }
;;;89               j++;
000076  f1050501          ADD      r5,r5,#1
                  |L1.122|
00007a  4545              CMP      r5,r8                 ;85
00007c  dbf4              BLT      |L1.104|
                  |L1.126|
00007e  bf00              NOP                            ;87
;;;90             }
;;;91             /* Draw the full pixel(s) */
;;;92             if (j!=i) {
000080  42a5              CMP      r5,r4
000082  d00d              BEQ      |L1.160|
;;;93               pLCD_HLPrev->pfDrawHLine(_x0+i, _y, _x0+j);
000084  49c5              LDR      r1,|L1.924|
000086  6809              LDR      r1,[r1,#0]  ; _x0
000088  194a              ADDS     r2,r1,r5
00008a  49c4              LDR      r1,|L1.924|
00008c  6809              LDR      r1,[r1,#0]  ; _x0
00008e  1908              ADDS     r0,r1,r4
000090  49c9              LDR      r1,|L1.952|
000092  6809              LDR      r1,[r1,#0]  ; pLCD_HLPrev
000094  680b              LDR      r3,[r1,#0]
000096  49c4              LDR      r1,|L1.936|
000098  6809              LDR      r1,[r1,#0]  ; _y
00009a  4798              BLX      r3
;;;94               i = j;  /*xxx*/
00009c  462c              MOV      r4,r5
00009e  e008              B        |L1.178|
                  |L1.160|
;;;95             } else {
;;;96               LCD_HL_DrawPixel (_x0+i,_y);
0000a0  49be              LDR      r1,|L1.924|
0000a2  6809              LDR      r1,[r1,#0]  ; _x0
0000a4  1908              ADDS     r0,r1,r4
0000a6  49c3              LDR      r1,|L1.948|
0000a8  6d89              LDR      r1,[r1,#0x58]  ; GUI_Context
0000aa  684a              LDR      r2,[r1,#4]
0000ac  49be              LDR      r1,|L1.936|
0000ae  6809              LDR      r1,[r1,#0]  ; _y
0000b0  4790              BLX      r2
                  |L1.178|
;;;97             }
;;;98           } else {
0000b2  e012              B        |L1.218|
                  |L1.180|
;;;99             LCD_SetPixelAA(_x0+i,_y, (15*Intens+IMax/2)/IMax);
0000b4  4635              MOV      r5,r6
0000b6  eb0670d5          ADD      r0,r6,r5,LSR #31
0000ba  1040              ASRS     r0,r0,#1
0000bc  210f              MOVS     r1,#0xf
0000be  fb010007          MLA      r0,r1,r7,r0
0000c2  fb90f0f6          SDIV     r0,r0,r6
0000c6  f00009ff          AND      r9,r0,#0xff
0000ca  49b4              LDR      r1,|L1.924|
0000cc  6809              LDR      r1,[r1,#0]  ; _x0
0000ce  1908              ADDS     r0,r1,r4
0000d0  464a              MOV      r2,r9
0000d2  49b5              LDR      r1,|L1.936|
0000d4  6809              LDR      r1,[r1,#0]  ; _y
0000d6  f7fffffe          BL       LCD_SetPixelAA
                  |L1.218|
0000da  f1040401          ADD      r4,r4,#1              ;79
                  |L1.222|
0000de  4544              CMP      r4,r8                 ;79
0000e0  ddb9              BLE      |L1.86|
;;;100          }
;;;101        }    
;;;102      }
;;;103      _CleanLine();
0000e2  f7fffffe          BL       _CleanLine
;;;104    }
0000e6  e8bd87f0          POP      {r4-r10,pc}
;;;105    
                          ENDP

                  _DrawHLine PROC
;;;114    */
;;;115    static void _DrawHLine  (int x0, int y,  int x1) {
0000ea  e92d47f0          PUSH     {r4-r10,lr}
0000ee  4604              MOV      r4,r0
0000f0  4688              MOV      r8,r1
0000f2  4615              MOV      r5,r2
;;;116      int x0Real, x1Real;
;;;117    /* Make sure there is something to do */
;;;118      if (x1<x0)
0000f4  42a5              CMP      r5,r4
0000f6  da01              BGE      |L1.252|
                  |L1.248|
;;;119        return;
;;;120    /* Flush line if we are in an other pixel (real) line */
;;;121      if (y/GUI_Context.AA_Factor != _y) {
;;;122        _FlushLine();
;;;123        _y = y/GUI_Context.AA_Factor;
;;;124      }
;;;125      x0Real = x0/GUI_Context.AA_Factor;
;;;126      x1Real = x1/GUI_Context.AA_Factor;
;;;127    /* Handle used area (speed optimization for drawing) */
;;;128      if (x0Real < _x0_InUse)
;;;129        _x0_InUse = x0Real;
;;;130      if (x1Real > _x1_InUse)
;;;131        _x1_InUse = x1Real;
;;;132    /* Clip (should not be necessary ... Just to be on the safe side ! */
;;;133      if (x0Real < _x0) {
;;;134        x0 = _x0 * GUI_Context.AA_Factor;
;;;135      }
;;;136      if (x1Real > _x1) {
;;;137        x1 = (_x1+1)*GUI_Context.AA_Factor-1;
;;;138      }
;;;139    /* Make sure there is still something to do (after clipping) */
;;;140      if (x1<x0)
;;;141        return;
;;;142    /* Inc. hit counters in buffer */
;;;143      {
;;;144        int x0_Off = x0/GUI_Context.AA_Factor-_x0;
;;;145        int x1_Off = x1/GUI_Context.AA_Factor-_x0;
;;;146        int iRem = x1_Off-x0_Off+1;
;;;147        U8 *pDest = pabAABuffer+x0_Off;
;;;148        if (iRem ==1) {
;;;149          *(pDest) += x1-x0+1;
;;;150        } else {
;;;151          /* First Pixel */
;;;152          *pDest++ += ((x0_Off+_x0+1)*GUI_Context.AA_Factor-x0);
;;;153          /* Middle Pixels */
;;;154          for (;--iRem>1; ) {
;;;155            *pDest++ +=GUI_Context.AA_Factor;
;;;156          }
;;;157          /* Last Pixel */
;;;158          *pDest += (1+x1- (x1_Off+_x0) *GUI_Context.AA_Factor);
;;;159        }
;;;160      }
;;;161    }
0000f8  e8bd87f0          POP      {r4-r10,pc}
                  |L1.252|
0000fc  48ad              LDR      r0,|L1.948|
0000fe  f890005c          LDRB     r0,[r0,#0x5c]         ;121  ; GUI_Context
000102  fb98f0f0          SDIV     r0,r8,r0              ;121
000106  49a8              LDR      r1,|L1.936|
000108  6809              LDR      r1,[r1,#0]            ;121  ; _y
00010a  4288              CMP      r0,r1                 ;121
00010c  d008              BEQ      |L1.288|
00010e  f7fffffe          BL       _FlushLine
000112  48a8              LDR      r0,|L1.948|
000114  f890005c          LDRB     r0,[r0,#0x5c]         ;123  ; GUI_Context
000118  fb98f0f0          SDIV     r0,r8,r0              ;123
00011c  49a2              LDR      r1,|L1.936|
00011e  6008              STR      r0,[r1,#0]            ;123  ; _y
                  |L1.288|
000120  48a4              LDR      r0,|L1.948|
000122  f890005c          LDRB     r0,[r0,#0x5c]         ;125  ; GUI_Context
000126  fb94f6f0          SDIV     r6,r4,r0              ;125
00012a  48a2              LDR      r0,|L1.948|
00012c  f890005c          LDRB     r0,[r0,#0x5c]         ;126  ; GUI_Context
000130  fb95f7f0          SDIV     r7,r5,r0              ;126
000134  489d              LDR      r0,|L1.940|
000136  6800              LDR      r0,[r0,#0]            ;128  ; _x0_InUse
000138  4286              CMP      r6,r0                 ;128
00013a  da01              BGE      |L1.320|
00013c  489b              LDR      r0,|L1.940|
00013e  6006              STR      r6,[r0,#0]            ;129  ; _x0_InUse
                  |L1.320|
000140  489b              LDR      r0,|L1.944|
000142  6800              LDR      r0,[r0,#0]            ;130  ; _x1_InUse
000144  4287              CMP      r7,r0                 ;130
000146  dd01              BLE      |L1.332|
000148  4899              LDR      r0,|L1.944|
00014a  6007              STR      r7,[r0,#0]            ;131  ; _x1_InUse
                  |L1.332|
00014c  4893              LDR      r0,|L1.924|
00014e  6800              LDR      r0,[r0,#0]            ;133  ; _x0
000150  4286              CMP      r6,r0                 ;133
000152  da06              BGE      |L1.354|
000154  4897              LDR      r0,|L1.948|
000156  f890005c          LDRB     r0,[r0,#0x5c]         ;134  ; GUI_Context
00015a  4990              LDR      r1,|L1.924|
00015c  6809              LDR      r1,[r1,#0]            ;134  ; _x0
00015e  fb00f401          MUL      r4,r0,r1              ;134
                  |L1.354|
000162  488d              LDR      r0,|L1.920|
000164  6800              LDR      r0,[r0,#0]            ;136  ; _x1
000166  4287              CMP      r7,r0                 ;136
000168  dd0a              BLE      |L1.384|
00016a  4892              LDR      r0,|L1.948|
00016c  f890005c          LDRB     r0,[r0,#0x5c]         ;137  ; GUI_Context
000170  4989              LDR      r1,|L1.920|
000172  6809              LDR      r1,[r1,#0]            ;137  ; _x1
000174  f1010101          ADD      r1,r1,#1              ;137
000178  fb00f001          MUL      r0,r0,r1              ;137
00017c  f1a00501          SUB      r5,r0,#1              ;137
                  |L1.384|
000180  42a5              CMP      r5,r4                 ;140
000182  da00              BGE      |L1.390|
000184  e7b8              B        |L1.248|
                  |L1.390|
000186  f8dfc22c          LDR      r12,|L1.948|
00018a  f89cc05c          LDRB     r12,[r12,#0x5c]       ;144  ; GUI_Context
00018e  fb94fcfc          SDIV     r12,r4,r12            ;144
000192  f8df9208          LDR      r9,|L1.924|
000196  f8d99000          LDR      r9,[r9,#0]            ;144  ; _x0
00019a  ebac0109          SUB      r1,r12,r9             ;144
00019e  f8dfc214          LDR      r12,|L1.948|
0001a2  f89cc05c          LDRB     r12,[r12,#0x5c]       ;145  ; GUI_Context
0001a6  fb95fcfc          SDIV     r12,r5,r12            ;145
0001aa  f8df91f0          LDR      r9,|L1.924|
0001ae  f8d99000          LDR      r9,[r9,#0]            ;145  ; _x0
0001b2  ebac0209          SUB      r2,r12,r9             ;145
0001b6  eba20c01          SUB      r12,r2,r1             ;146
0001ba  f10c0301          ADD      r3,r12,#1             ;146
0001be  f8dfc1e0          LDR      r12,|L1.928|
0001c2  f8dcc000          LDR      r12,[r12,#0]          ;147  ; pabAABuffer
0001c6  eb0c0001          ADD      r0,r12,r1             ;147
0001ca  2b01              CMP      r3,#1                 ;148
0001cc  d109              BNE      |L1.482|
0001ce  f8909000          LDRB     r9,[r0,#0]            ;149
0001d2  eba50c04          SUB      r12,r5,r4             ;149
0001d6  f10c0c01          ADD      r12,r12,#1            ;149
0001da  44cc              ADD      r12,r12,r9            ;149
0001dc  f880c000          STRB     r12,[r0,#0]           ;149
0001e0  e035              B        |L1.590|
                  |L1.482|
0001e2  f8dfc1b8          LDR      r12,|L1.924|
0001e6  f8dcc000          LDR      r12,[r12,#0]          ;152  ; _x0
0001ea  448c              ADD      r12,r12,r1            ;152
0001ec  f10c0c01          ADD      r12,r12,#1            ;152
0001f0  f8df91c0          LDR      r9,|L1.948|
0001f4  f899905c          LDRB     r9,[r9,#0x5c]         ;152  ; GUI_Context
0001f8  fb0cfc09          MUL      r12,r12,r9            ;152
0001fc  ebac0c04          SUB      r12,r12,r4            ;152
000200  f8909000          LDRB     r9,[r0,#0]            ;152
000204  44cc              ADD      r12,r12,r9            ;152
000206  f800cb01          STRB     r12,[r0],#1           ;152
00020a  e008              B        |L1.542|
                  |L1.524|
00020c  f890c000          LDRB     r12,[r0,#0]           ;155
000210  f8df91a0          LDR      r9,|L1.948|
000214  f899905c          LDRB     r9,[r9,#0x5c]         ;155  ; GUI_Context
000218  44cc              ADD      r12,r12,r9            ;155
00021a  f800cb01          STRB     r12,[r0],#1           ;155
                  |L1.542|
00021e  f1a30c01          SUB      r12,r3,#1             ;154
000222  4663              MOV      r3,r12                ;154
000224  f1bc0f01          CMP      r12,#1                ;154
000228  dcf0              BGT      |L1.524|
00022a  f1050c01          ADD      r12,r5,#1             ;158
00022e  f8df916c          LDR      r9,|L1.924|
000232  f8d99000          LDR      r9,[r9,#0]            ;158  ; _x0
000236  4491              ADD      r9,r9,r2              ;158
000238  f8dfa178          LDR      r10,|L1.948|
00023c  f89aa05c          LDRB     r10,[r10,#0x5c]       ;158  ; GUI_Context
000240  fb09cc1a          MLS      r12,r9,r10,r12        ;158
000244  f8909000          LDRB     r9,[r0,#0]            ;158
000248  44cc              ADD      r12,r12,r9            ;158
00024a  f880c000          STRB     r12,[r0,#0]           ;158
                  |L1.590|
00024e  bf00              NOP      
000250  e752              B        |L1.248|
;;;162    
                          ENDP

                  CalcClipRectHL PROC
;;;166    */
;;;167    static void CalcClipRectHL(void) {
000252  4858              LDR      r0,|L1.948|
;;;168      ClipRect_HL.x0 =  GUI_Context.ClipRect.x0    * GUI_Context.AA_Factor;
000254  8880              LDRH     r0,[r0,#4]  ; GUI_Context
000256  4957              LDR      r1,|L1.948|
000258  f891105c          LDRB     r1,[r1,#0x5c]  ; GUI_Context
00025c  4348              MULS     r0,r1,r0
00025e  b200              SXTH     r0,r0
000260  4956              LDR      r1,|L1.956|
000262  8008              STRH     r0,[r1,#0]
;;;169      ClipRect_HL.y0 =  GUI_Context.ClipRect.y0    * GUI_Context.AA_Factor;
000264  4853              LDR      r0,|L1.948|
000266  88c0              LDRH     r0,[r0,#6]
000268  4952              LDR      r1,|L1.948|
00026a  f891105c          LDRB     r1,[r1,#0x5c]  ; GUI_Context
00026e  4348              MULS     r0,r1,r0
000270  b200              SXTH     r0,r0
000272  4952              LDR      r1,|L1.956|
000274  8048              STRH     r0,[r1,#2]
;;;170      ClipRect_HL.x1 = (GUI_Context.ClipRect.x1+1) * GUI_Context.AA_Factor -1;
000276  484f              LDR      r0,|L1.948|
000278  8900              LDRH     r0,[r0,#8]
00027a  f1000001          ADD      r0,r0,#1
00027e  494d              LDR      r1,|L1.948|
000280  f891105c          LDRB     r1,[r1,#0x5c]  ; GUI_Context
000284  fb00f001          MUL      r0,r0,r1
000288  f1a00001          SUB      r0,r0,#1
00028c  b200              SXTH     r0,r0
00028e  494b              LDR      r1,|L1.956|
000290  8088              STRH     r0,[r1,#4]
;;;171      ClipRect_HL.y1 = (GUI_Context.ClipRect.y1+1) * GUI_Context.AA_Factor -1;
000292  4848              LDR      r0,|L1.948|
000294  8940              LDRH     r0,[r0,#0xa]
000296  f1000001          ADD      r0,r0,#1
00029a  4946              LDR      r1,|L1.948|
00029c  f891105c          LDRB     r1,[r1,#0x5c]  ; GUI_Context
0002a0  fb00f001          MUL      r0,r0,r1
0002a4  f1a00001          SUB      r0,r0,#1
0002a8  b200              SXTH     r0,r0
0002aa  4944              LDR      r1,|L1.956|
0002ac  80c8              STRH     r0,[r1,#6]
;;;172    }
0002ae  4770              BX       lr
;;;173    
                          ENDP

                  GUI_AA_Init PROC
;;;183    */
;;;184    int GUI_AA_Init(int x0, int x1) {
0002b0  b570              PUSH     {r4-r6,lr}
0002b2  4604              MOV      r4,r0
0002b4  460d              MOV      r5,r1
;;;185      int r =0;
0002b6  f04f0600          MOV      r6,#0
;;;186      /* Bounds checking:
;;;187         Make sure x0, x1 are in legal range ...
;;;188         (The important point is that they span no more than configured as
;;;189          buffer size)
;;;190      */
;;;191      if (x0<0)
0002ba  2c00              CMP      r4,#0
0002bc  da00              BGE      |L1.704|
;;;192        x0 =0;
0002be  4634              MOV      r4,r6
                  |L1.704|
;;;193      if (x1-x0 > GUI_AA_LINEBUFFER_SIZE-1)
0002c0  1b28              SUBS     r0,r5,r4
0002c2  f5b07fa0          CMP      r0,#0x140
0002c6  db01              BLT      |L1.716|
;;;194        x1 = x0+GUI_AA_LINEBUFFER_SIZE-1;
0002c8  f204153f          ADD      r5,r4,#0x13f
                  |L1.716|
;;;195      /* Is there anything to do at all ??? */
;;;196      if (x1 < x0) {
0002cc  42a5              CMP      r5,r4
0002ce  da02              BGE      |L1.726|
;;;197        x1 = x0;   /* Not really ... */
0002d0  4625              MOV      r5,r4
;;;198        r =1;
0002d2  f04f0601          MOV      r6,#1
                  |L1.726|
;;;199      }
;;;200      DrawAPICopy = *GUI_Context.pLCD_HL; /* Copy API table */
0002d6  4837              LDR      r0,|L1.948|
0002d8  6d82              LDR      r2,[r0,#0x58]  ; GUI_Context
0002da  4839              LDR      r0,|L1.960|
0002dc  ca06              LDM      r2,{r1,r2}
0002de  c006              STM      r0!,{r1,r2}
;;;201      pLCD_HLPrev = GUI_Context.pLCD_HL; /* Remember list ptr (for restore) */
0002e0  4834              LDR      r0,|L1.948|
0002e2  6d80              LDR      r0,[r0,#0x58]  ; GUI_Context
0002e4  4934              LDR      r1,|L1.952|
0002e6  6008              STR      r0,[r1,#0]  ; pLCD_HLPrev
;;;202      DrawAPICopy.pfDrawHLine = _DrawHLine;  /* modify function ptr. for hline */
0002e8  4836              LDR      r0,|L1.964|
0002ea  4935              LDR      r1,|L1.960|
0002ec  6008              STR      r0,[r1,#0]  ; DrawAPICopy
;;;203      GUI_Context.pLCD_HL = &DrawAPICopy;      /* Use copy of fp-list */
0002ee  4608              MOV      r0,r1
0002f0  4930              LDR      r1,|L1.948|
0002f2  6588              STR      r0,[r1,#0x58]  ; GUI_Context
;;;204      pabAABuffer = abAABuffer;
0002f4  4834              LDR      r0,|L1.968|
0002f6  492a              LDR      r1,|L1.928|
0002f8  6008              STR      r0,[r1,#0]  ; pabAABuffer
;;;205      _x0 = x0;
0002fa  4828              LDR      r0,|L1.924|
0002fc  6004              STR      r4,[r0,#0]  ; _x0
;;;206      _x1 = x1;
0002fe  4826              LDR      r0,|L1.920|
000300  6005              STR      r5,[r0,#0]  ; _x1
;;;207      _CleanLine();
000302  f7fffffe          BL       _CleanLine
;;;208      CalcClipRectHL();
000306  f7fffffe          BL       CalcClipRectHL
;;;209      GUI_Context.pClipRect_HL = &ClipRect_HL;
00030a  482c              LDR      r0,|L1.956|
00030c  4929              LDR      r1,|L1.948|
00030e  6108              STR      r0,[r1,#0x10]  ; GUI_Context
;;;210      return r;
000310  4630              MOV      r0,r6
;;;211    }
000312  bd70              POP      {r4-r6,pc}
;;;212    
                          ENDP

                  GUI_AA_Init_HiRes PROC
;;;216    */
;;;217    int GUI_AA_Init_HiRes(int x0, int x1) {
000314  b570              PUSH     {r4-r6,lr}
000316  4604              MOV      r4,r0
000318  460d              MOV      r5,r1
;;;218      x0 /= GUI_Context.AA_Factor;
00031a  4826              LDR      r0,|L1.948|
00031c  f890005c          LDRB     r0,[r0,#0x5c]  ; GUI_Context
000320  fb94f4f0          SDIV     r4,r4,r0
;;;219      x1 /= GUI_Context.AA_Factor;
000324  4823              LDR      r0,|L1.948|
000326  f890005c          LDRB     r0,[r0,#0x5c]  ; GUI_Context
00032a  fb95f5f0          SDIV     r5,r5,r0
;;;220      return GUI_AA_Init(x0, x1);
00032e  4629              MOV      r1,r5
000330  4620              MOV      r0,r4
000332  f7fffffe          BL       GUI_AA_Init
;;;221    }
000336  bd70              POP      {r4-r6,pc}
;;;222    
                          ENDP

                  GUI_AA_SetFactor PROC
;;;226    */
;;;227    void GUI_AA_SetFactor(int Factor) {
000338  b510              PUSH     {r4,lr}
00033a  4604              MOV      r4,r0
;;;228      GUI_Context.AA_Factor = Factor;
00033c  491d              LDR      r1,|L1.948|
00033e  f881405c          STRB     r4,[r1,#0x5c]
;;;229      CalcClipRectHL();      /* High level clipping depends on quality factor */
000342  f7fffffe          BL       CalcClipRectHL
;;;230    }
000346  bd10              POP      {r4,pc}
;;;231    
                          ENDP

                  GUI_AA_GetFactor PROC
;;;235    */
;;;236    int GUI_AA_GetFactor(void) {
000348  481a              LDR      r0,|L1.948|
;;;237      return GUI_Context.AA_Factor;
00034a  f890005c          LDRB     r0,[r0,#0x5c]  ; GUI_Context
;;;238    }
00034e  4770              BX       lr
;;;239    
                          ENDP

                  GUI_AA_DisableHiRes PROC
;;;243    */
;;;244    void GUI_AA_DisableHiRes(void) {
000350  f04f0000          MOV      r0,#0
;;;245      GUI_Context.AA_HiResEnable = 0;
000354  4917              LDR      r1,|L1.948|
000356  f881005d          STRB     r0,[r1,#0x5d]
;;;246    }
00035a  4770              BX       lr
;;;247    
                          ENDP

                  GUI_AA_EnableHiRes PROC
;;;251    */
;;;252    void GUI_AA_EnableHiRes(void) {
00035c  f04f0001          MOV      r0,#1
;;;253      GUI_Context.AA_HiResEnable =1;
000360  4914              LDR      r1,|L1.948|
000362  f881005d          STRB     r0,[r1,#0x5d]
;;;254    }
000366  4770              BX       lr
;;;255    
                          ENDP

                  GUI_AA_HiRes2Pixel PROC
;;;259    */
;;;260    I16 GUI_AA_HiRes2Pixel(int HiRes) {
000368  4601              MOV      r1,r0
;;;261      return GUI_Context.AA_Factor ? (HiRes / GUI_Context.AA_Factor) : HiRes;
00036a  4812              LDR      r0,|L1.948|
00036c  f890005c          LDRB     r0,[r0,#0x5c]  ; GUI_Context
000370  b128              CBZ      r0,|L1.894|
000372  4810              LDR      r0,|L1.948|
000374  f890005c          LDRB     r0,[r0,#0x5c]  ; GUI_Context
000378  fb91f0f0          SDIV     r0,r1,r0
00037c  e000              B        |L1.896|
                  |L1.894|
00037e  4608              MOV      r0,r1
                  |L1.896|
000380  b200              SXTH     r0,r0
;;;262    }
000382  4770              BX       lr
;;;263    
                          ENDP

                  GUI_AA_Exit PROC
;;;267    */
;;;268    void GUI_AA_Exit(void) {
000384  b510              PUSH     {r4,lr}
;;;269      _FlushLine();
000386  f7fffffe          BL       _FlushLine
;;;270      /* restore previous settings */
;;;271      GUI_Context.pLCD_HL = pLCD_HLPrev;
00038a  480b              LDR      r0,|L1.952|
00038c  6800              LDR      r0,[r0,#0]  ; pLCD_HLPrev
00038e  4909              LDR      r1,|L1.948|
000390  6588              STR      r0,[r1,#0x58]  ; GUI_Context
;;;272      GUI_Context.pClipRect_HL = &GUI_Context.ClipRect;
000392  1d08              ADDS     r0,r1,#4
000394  6108              STR      r0,[r1,#0x10]  ; GUI_Context
;;;273    }
000396  bd10              POP      {r4,pc}
;;;274    
                          ENDP

                  |L1.920|
                          DCD      _x1
                  |L1.924|
                          DCD      _x0
                  |L1.928|
                          DCD      pabAABuffer
                  |L1.932|
                          DCD      0xffffc001
                  |L1.936|
                          DCD      ||_y||
                  |L1.940|
                          DCD      _x0_InUse
                  |L1.944|
                          DCD      _x1_InUse
                  |L1.948|
                          DCD      GUI_Context
                  |L1.952|
                          DCD      pLCD_HLPrev
                  |L1.956|
                          DCD      ClipRect_HL
                  |L1.960|
                          DCD      DrawAPICopy
                  |L1.964|
                          DCD      _DrawHLine
                  |L1.968|
                          DCD      abAABuffer

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  abAABuffer
                          %        320

                          AREA ||.data||, DATA, ALIGN=2

                  pabAABuffer
                          DCD      0x00000000
                  _x0
                          DCD      0x00000000
                  _x1
                          DCD      0x00000000
                  ||_y||
                          DCD      0x00000000
                  _x0_InUse
                          DCD      0x00000000
                  _x1_InUse
                          DCD      0x00000000
                  ClipRect_HL
                          %        8
                  DrawAPICopy
                          %        8
                  pLCD_HLPrev
                          DCD      0x00000000

; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\lcdrle8.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\lcdrle8.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\lcdrle8.crf GUI\Core\LCDRLE8.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _DrawBitmap_RLE8 PROC
;;;47     */
;;;48     static void _DrawBitmap_RLE8(int x0,int y0,int xsize, int ysize, const U8 GUI_UNI_PTR * pPixel, const LCD_LOGPALETTE GUI_UNI_PTR * pLogPal, int xMag, int yMag) {
000000  e92d4fff          PUSH     {r0-r11,lr}
000004  b08b              SUB      sp,sp,#0x2c
000006  4680              MOV      r8,r0
000008  460e              MOV      r6,r1
00000a  4693              MOV      r11,r2
00000c  f8dd906c          LDR      r9,[sp,#0x6c]
000010  9f18              LDR      r7,[sp,#0x60]
;;;49       LCD_PIXELINDEX aColorIndex[2];
;;;50       LCD_PIXELINDEX PixelIndex;
;;;51       int xi,y;
;;;52       int xL, yL;
;;;53       const U8 GUI_UNI_PTR * pPixelOrg = pPixel;
000012  9706              STR      r7,[sp,#0x18]
;;;54       char NoTrans = !(GUI_Context.DrawMode & LCD_DRAWMODE_TRANS);
000014  488c              LDR      r0,|L1.584|
000016  7b00              LDRB     r0,[r0,#0xc]  ; GUI_Context
000018  f04f0101          MOV      r1,#1
00001c  ea210050          BIC      r0,r1,r0,LSR #1
000020  9005              STR      r0,[sp,#0x14]
;;;55       const LCD_PIXELINDEX* pTrans =NULL;
000022  f04f0000          MOV      r0,#0
000026  9004              STR      r0,[sp,#0x10]
;;;56       char IsMagnified = ((yMag | xMag) != 1);
000028  981a              LDR      r0,[sp,#0x68]
00002a  ea490000          ORR      r0,r9,r0
00002e  2801              CMP      r0,#1
000030  d001              BEQ      |L1.54|
000032  4608              MOV      r0,r1
000034  e001              B        |L1.58|
                  |L1.54|
000036  f04f0000          MOV      r0,#0
                  |L1.58|
00003a  9003              STR      r0,[sp,#0xc]
;;;57       aColorIndex[0] = LCD_ACOLORINDEX[0];
00003c  4882              LDR      r0,|L1.584|
00003e  8800              LDRH     r0,[r0,#0]  ; GUI_Context
000040  f8ad0028          STRH     r0,[sp,#0x28]
;;;58       aColorIndex[1] = LCD_ACOLORINDEX[1];
000044  4880              LDR      r0,|L1.584|
000046  8840              LDRH     r0,[r0,#2]  ; GUI_Context
000048  f8ad002a          STRH     r0,[sp,#0x2a]
;;;59       /* Handle color translation */
;;;60       if ((pLogPal) && (pLogPal->pPalEntries)) {
00004c  9819              LDR      r0,[sp,#0x64]
00004e  b150              CBZ      r0,|L1.102|
000050  9819              LDR      r0,[sp,#0x64]
000052  6880              LDR      r0,[r0,#8]
000054  b138              CBZ      r0,|L1.102|
;;;61         if ((pTrans = LCD_GetpPalConvTable(pLogPal)) == NULL) {
000056  9819              LDR      r0,[sp,#0x64]
000058  f7fffffe          BL       LCD_GetpPalConvTable
00005c  9004              STR      r0,[sp,#0x10]
00005e  b910              CBNZ     r0,|L1.102|
                  |L1.96|
;;;62           return;
;;;63         }
;;;64       }
;;;65      /* Check if we can limit the number of lines due to clipping) */
;;;66       if (yMag == 1) {
;;;67         if (ysize > GUI_Context.ClipRect.y1 - y0 + 1)
;;;68           ysize = GUI_Context.ClipRect.y1 - y0 + 1;
;;;69       }
;;;70       /* Init variables for looping */
;;;71       xi=0;
;;;72       y =0;
;;;73       /* Check if we can use the cache to save some unnecessary iterations */
;;;74       if (!IsMagnified) {
;;;75         int yDiff = GUI_Context.ClipRect.y0 - y0;
;;;76         if ((Cache.pPixelStart == pPixel) && (yDiff > Cache.y)) {
;;;77           /* Accept cache values */
;;;78           y = Cache.y;
;;;79           xi = Cache.x;
;;;80           pPixel = Cache.pPixel;
;;;81         }
;;;82       }
;;;83       /* Init values for caching */
;;;84       Cache.pPixel = Cache.pPixelStart = pPixelOrg;
;;;85       Cache.x = Cache.y = 0;
;;;86       /* Repeat until we have reached bottom */
;;;87       for (; y < ysize; ) {
;;;88         U8 Cmd  = *pPixel++;
;;;89         U8 Data = *pPixel++;
;;;90         if (Cmd) {
;;;91           /* Save cache info */
;;;92           Cache.pPixel = pPixel-2;
;;;93           Cache.x = xi;
;;;94           Cache.y = y;
;;;95           LCD_ACOLORINDEX[1] = pTrans ? *(pTrans+Data) : Data;
;;;96           while (Cmd) {
;;;97             int xi1 = xi+Cmd;
;;;98             if (xi1>=xsize)
;;;99               xi1 = xsize;
;;;100            Cmd -= (xi1-xi);
;;;101            if (Data || NoTrans) {  /* Skip transparent pixels */
;;;102              if (IsMagnified) {
;;;103                xL = xMag * xi + x0;
;;;104                yL = yMag * y + y0;
;;;105                LCD_FillRect(xL, yL, xL + xMag * (xi1 - xi) -1 , yL + yMag - 1);
;;;106              } else {
;;;107                LCD_DrawHLine(x0+xi, y + y0, xi1+x0-1);
;;;108              }
;;;109            }
;;;110            xi =xi1;
;;;111            if (xi1==xsize) {
;;;112              y++;
;;;113              xi=0;
;;;114            }
;;;115          }
;;;116        } else {
;;;117          do {
;;;118            U8 Index = *pPixel++;
;;;119            if (Index || NoTrans) {  /* Skip transparent pixels */
;;;120              int x = x0+xi;
;;;121              PixelIndex = pTrans ? *(pTrans+Index) : Index;
;;;122              if (IsMagnified) {
;;;123                LCD_SetColorIndex(PixelIndex);
;;;124                xL = xMag * xi + x0;
;;;125                yL = yMag * y + y0;
;;;126                LCD_FillRect(xL, yL, xL + xMag -1 , yL + yMag - 1);
;;;127              } else {
;;;128                #if 1 /* High speed variant */
;;;129                  if (y + y0>= GUI_Context.ClipRect.y0)
;;;130                    if (x >= GUI_Context.ClipRect.x0)
;;;131                      if (x <= GUI_Context.ClipRect.x1)
;;;132                        LCDDEV_L0_SetPixelIndex(x, y + y0, PixelIndex);
;;;133                #else
;;;134                  LCD_SetPixelIndex(x, y + y0, PixelIndex);
;;;135                #endif
;;;136              }
;;;137            }
;;;138            if (++xi >= xsize) {
;;;139              xi=0; y++;
;;;140              if (y >= ysize)
;;;141                break;
;;;142            }
;;;143          } while (--Data);
;;;144        }
;;;145      }
;;;146      LCD_ACOLORINDEX[0] = aColorIndex[0];
;;;147      LCD_ACOLORINDEX[1] = aColorIndex[1];
;;;148    }
000060  b00f              ADD      sp,sp,#0x3c
000062  e8bd8ff0          POP      {r4-r11,pc}
                  |L1.102|
000066  f1b90f01          CMP      r9,#1                 ;66
00006a  d10f              BNE      |L1.140|
00006c  4876              LDR      r0,|L1.584|
00006e  f9b0000a          LDRSH    r0,[r0,#0xa]          ;67
000072  1b80              SUBS     r0,r0,r6              ;67
000074  1c40              ADDS     r0,r0,#1              ;67
000076  990e              LDR      r1,[sp,#0x38]         ;67
000078  4288              CMP      r0,r1                 ;67
00007a  da07              BGE      |L1.140|
00007c  4872              LDR      r0,|L1.584|
00007e  f9b0000a          LDRSH    r0,[r0,#0xa]          ;68
000082  eba00006          SUB      r0,r0,r6              ;68
000086  f1000001          ADD      r0,r0,#1              ;68
00008a  900e              STR      r0,[sp,#0x38]         ;68
                  |L1.140|
00008c  f04f0400          MOV      r4,#0                 ;71
000090  4625              MOV      r5,r4                 ;72
000092  9803              LDR      r0,[sp,#0xc]          ;74
000094  b988              CBNZ     r0,|L1.186|
000096  496c              LDR      r1,|L1.584|
000098  f9b11006          LDRSH    r1,[r1,#6]            ;75  ; GUI_Context
00009c  eba10006          SUB      r0,r1,r6              ;75
0000a0  496a              LDR      r1,|L1.588|
0000a2  68c9              LDR      r1,[r1,#0xc]          ;76  ; Cache
0000a4  42b9              CMP      r1,r7                 ;76
0000a6  d107              BNE      |L1.184|
0000a8  4968              LDR      r1,|L1.588|
0000aa  6849              LDR      r1,[r1,#4]            ;76  ; Cache
0000ac  4281              CMP      r1,r0                 ;76
0000ae  da03              BGE      |L1.184|
0000b0  4966              LDR      r1,|L1.588|
0000b2  684d              LDR      r5,[r1,#4]            ;78  ; Cache
0000b4  680c              LDR      r4,[r1,#0]            ;79  ; Cache
0000b6  688f              LDR      r7,[r1,#8]            ;80  ; Cache
                  |L1.184|
0000b8  bf00              NOP                            ;82
                  |L1.186|
0000ba  4964              LDR      r1,|L1.588|
0000bc  9806              LDR      r0,[sp,#0x18]         ;84
0000be  60c8              STR      r0,[r1,#0xc]          ;84  ; Cache
0000c0  6088              STR      r0,[r1,#8]            ;84  ; Cache
0000c2  f04f0000          MOV      r0,#0                 ;85
0000c6  6048              STR      r0,[r1,#4]            ;85  ; Cache
0000c8  6008              STR      r0,[r1,#0]            ;85  ; Cache
0000ca  e0af              B        |L1.556|
                  |L1.204|
0000cc  f8170b01          LDRB     r0,[r7],#1            ;88
0000d0  9002              STR      r0,[sp,#8]            ;88
0000d2  f8170b01          LDRB     r0,[r7],#1            ;89
0000d6  9001              STR      r0,[sp,#4]            ;89
0000d8  9802              LDR      r0,[sp,#8]            ;90
0000da  2800              CMP      r0,#0                 ;90
0000dc  d04e              BEQ      |L1.380|
0000de  f1a70002          SUB      r0,r7,#2              ;92
0000e2  495a              LDR      r1,|L1.588|
0000e4  6088              STR      r0,[r1,#8]            ;92  ; Cache
0000e6  4608              MOV      r0,r1                 ;93
0000e8  6004              STR      r4,[r0,#0]            ;93  ; Cache
0000ea  6045              STR      r5,[r0,#4]            ;94  ; Cache
0000ec  9804              LDR      r0,[sp,#0x10]         ;95
0000ee  b120              CBZ      r0,|L1.250|
0000f0  9901              LDR      r1,[sp,#4]            ;95
0000f2  9804              LDR      r0,[sp,#0x10]         ;95
0000f4  f8300011          LDRH     r0,[r0,r1,LSL #1]     ;95
0000f8  e000              B        |L1.252|
                  |L1.250|
0000fa  9801              LDR      r0,[sp,#4]            ;95
                  |L1.252|
0000fc  4952              LDR      r1,|L1.584|
0000fe  8048              STRH     r0,[r1,#2]            ;95
000100  e038              B        |L1.372|
                  |L1.258|
000102  9802              LDR      r0,[sp,#8]            ;97
000104  eb040a00          ADD      r10,r4,r0             ;97
000108  45da              CMP      r10,r11               ;98
00010a  db00              BLT      |L1.270|
00010c  46da              MOV      r10,r11               ;99
                  |L1.270|
00010e  ebaa0104          SUB      r1,r10,r4             ;100
000112  9802              LDR      r0,[sp,#8]            ;100
000114  eba00001          SUB      r0,r0,r1              ;100
000118  b2c0              UXTB     r0,r0                 ;100
00011a  9002              STR      r0,[sp,#8]            ;100
00011c  9801              LDR      r0,[sp,#4]            ;101
00011e  b908              CBNZ     r0,|L1.292|
000120  9805              LDR      r0,[sp,#0x14]         ;101
000122  b1f8              CBZ      r0,|L1.356|
                  |L1.292|
000124  9803              LDR      r0,[sp,#0xc]          ;102
000126  b1a8              CBZ      r0,|L1.340|
000128  981a              LDR      r0,[sp,#0x68]         ;103
00012a  fb008004          MLA      r0,r0,r4,r8           ;103
00012e  9008              STR      r0,[sp,#0x20]         ;103
000130  fb096005          MLA      r0,r9,r5,r6           ;104
000134  9007              STR      r0,[sp,#0x1c]         ;104
000136  9807              LDR      r0,[sp,#0x1c]         ;105
000138  4448              ADD      r0,r0,r9              ;105
00013a  1e43              SUBS     r3,r0,#1              ;105
00013c  ebaa0c04          SUB      r12,r10,r4            ;105
000140  991a              LDR      r1,[sp,#0x68]         ;105
000142  9808              LDR      r0,[sp,#0x20]         ;105
000144  fb01000c          MLA      r0,r1,r12,r0          ;105
000148  1e42              SUBS     r2,r0,#1              ;105
00014a  e9dd1007          LDRD     r1,r0,[sp,#0x1c]      ;105
00014e  f7fffffe          BL       LCD_FillRect
000152  e007              B        |L1.356|
                  |L1.340|
000154  eb0a0308          ADD      r3,r10,r8             ;107
000158  1e5a              SUBS     r2,r3,#1              ;107
00015a  19a9              ADDS     r1,r5,r6              ;107
00015c  eb080004          ADD      r0,r8,r4              ;107
000160  f7fffffe          BL       LCD_DrawHLine
                  |L1.356|
000164  4654              MOV      r4,r10                ;110
000166  45da              CMP      r10,r11               ;111
000168  d103              BNE      |L1.370|
00016a  f1050501          ADD      r5,r5,#1              ;112
00016e  f04f0400          MOV      r4,#0                 ;113
                  |L1.370|
000172  bf00              NOP                            ;115
                  |L1.372|
000174  9802              LDR      r0,[sp,#8]            ;96
000176  2800              CMP      r0,#0                 ;96
000178  d1c3              BNE      |L1.258|
00017a  e056              B        |L1.554|
                  |L1.380|
00017c  bf00              NOP                            ;117
                  |L1.382|
00017e  f8170b01          LDRB     r0,[r7],#1            ;118
000182  9000              STR      r0,[sp,#0]            ;118
000184  9800              LDR      r0,[sp,#0]            ;119
000186  b908              CBNZ     r0,|L1.396|
000188  9805              LDR      r0,[sp,#0x14]         ;119
00018a  b3d0              CBZ      r0,|L1.514|
                  |L1.396|
00018c  eb080a04          ADD      r10,r8,r4             ;120
000190  9804              LDR      r0,[sp,#0x10]         ;121
000192  b120              CBZ      r0,|L1.414|
000194  9900              LDR      r1,[sp,#0]            ;121
000196  9804              LDR      r0,[sp,#0x10]         ;121
000198  f8300011          LDRH     r0,[r0,r1,LSL #1]     ;121
00019c  e000              B        |L1.416|
                  |L1.414|
00019e  9800              LDR      r0,[sp,#0]            ;121
                  |L1.416|
0001a0  9009              STR      r0,[sp,#0x24]         ;121
0001a2  9803              LDR      r0,[sp,#0xc]          ;122
0001a4  b1a8              CBZ      r0,|L1.466|
0001a6  9809              LDR      r0,[sp,#0x24]         ;123
0001a8  f7fffffe          BL       LCD_SetColorIndex
0001ac  981a              LDR      r0,[sp,#0x68]         ;124
0001ae  fb008004          MLA      r0,r0,r4,r8           ;124
0001b2  9008              STR      r0,[sp,#0x20]         ;124
0001b4  fb096005          MLA      r0,r9,r5,r6           ;125
0001b8  9007              STR      r0,[sp,#0x1c]         ;125
0001ba  9807              LDR      r0,[sp,#0x1c]         ;126
0001bc  4448              ADD      r0,r0,r9              ;126
0001be  1e43              SUBS     r3,r0,#1              ;126
0001c0  991a              LDR      r1,[sp,#0x68]         ;126
0001c2  9808              LDR      r0,[sp,#0x20]         ;126
0001c4  4408              ADD      r0,r0,r1              ;126
0001c6  1e42              SUBS     r2,r0,#1              ;126
0001c8  e9dd1007          LDRD     r1,r0,[sp,#0x1c]      ;126
0001cc  f7fffffe          BL       LCD_FillRect
0001d0  e016              B        |L1.512|
                  |L1.466|
0001d2  19a9              ADDS     r1,r5,r6              ;129
0001d4  481c              LDR      r0,|L1.584|
0001d6  f9b00006          LDRSH    r0,[r0,#6]            ;129
0001da  4281              CMP      r1,r0                 ;129
0001dc  db10              BLT      |L1.512|
0001de  481a              LDR      r0,|L1.584|
0001e0  f9b00004          LDRSH    r0,[r0,#4]            ;130  ; GUI_Context
0001e4  4550              CMP      r0,r10                ;130
0001e6  dc0b              BGT      |L1.512|
0001e8  4817              LDR      r0,|L1.584|
0001ea  f9b00008          LDRSH    r0,[r0,#8]            ;131
0001ee  4550              CMP      r0,r10                ;131
0001f0  db06              BLT      |L1.512|
0001f2  19a9              ADDS     r1,r5,r6              ;132
0001f4  4814              LDR      r0,|L1.584|
0001f6  6c80              LDR      r0,[r0,#0x48]         ;132  ; GUI_Context
0001f8  6a43              LDR      r3,[r0,#0x24]         ;132
0001fa  4650              MOV      r0,r10                ;132
0001fc  9a09              LDR      r2,[sp,#0x24]         ;132
0001fe  4798              BLX      r3                    ;132
                  |L1.512|
000200  bf00              NOP                            ;137
                  |L1.514|
000202  1c60              ADDS     r0,r4,#1              ;138
000204  4604              MOV      r4,r0                 ;138
000206  4558              CMP      r0,r11                ;138
000208  db07              BLT      |L1.538|
00020a  f04f0400          MOV      r4,#0                 ;139
00020e  f1050501          ADD      r5,r5,#1              ;139
000212  980e              LDR      r0,[sp,#0x38]         ;140
000214  4285              CMP      r5,r0                 ;140
000216  db00              BLT      |L1.538|
000218  e006              B        |L1.552|
                  |L1.538|
00021a  9801              LDR      r0,[sp,#4]            ;143
00021c  f1a00001          SUB      r0,r0,#1              ;143
000220  f01000ff          ANDS     r0,r0,#0xff           ;143
000224  9001              STR      r0,[sp,#4]            ;143
000226  d1aa              BNE      |L1.382|
                  |L1.552|
000228  bf00              NOP                            ;141
                  |L1.554|
00022a  bf00              NOP                            ;145
                  |L1.556|
00022c  980e              LDR      r0,[sp,#0x38]         ;87
00022e  4285              CMP      r5,r0                 ;87
000230  f6ffaf4c          BLT      |L1.204|
000234  f8bd0028          LDRH     r0,[sp,#0x28]         ;146
000238  4903              LDR      r1,|L1.584|
00023a  8008              STRH     r0,[r1,#0]            ;146
00023c  f8bd002a          LDRH     r0,[sp,#0x2a]         ;147
000240  8048              STRH     r0,[r1,#2]            ;147
000242  bf00              NOP      
000244  e70c              B        |L1.96|
;;;149    
                          ENDP

000246  0000              DCW      0x0000
                  |L1.584|
                          DCD      GUI_Context
                  |L1.588|
                          DCD      Cache

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  Cache
                          %        16

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  GUI_BitmapMethodsRLE8
                          DCD      _DrawBitmap_RLE8
                          DCD      0x00000000

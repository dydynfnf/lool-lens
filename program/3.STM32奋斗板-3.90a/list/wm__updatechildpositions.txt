; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\wm__updatechildpositions.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\wm__updatechildpositions.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\wm__updatechildpositions.crf GUI\WM\WM__UpdateChildPositions.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  WM__UpdateChildPositions PROC
;;;41     */
;;;42     void WM__UpdateChildPositions(WM_Obj* pObj, int dx0, int dy0, int dx1, int dy1) {
000000  e92d4fff          PUSH     {r0-r11,lr}
000004  b087              SUB      sp,sp,#0x1c
000006  460d              MOV      r5,r1
000008  4616              MOV      r6,r2
00000a  461f              MOV      r7,r3
00000c  f8dd8050          LDR      r8,[sp,#0x50]
;;;43       WM_HWIN hChild;
;;;44       WM_Obj* pChild;
;;;45       int dx, dy, dw, dh;
;;;46       for (hChild = pObj->hFirstChild; hChild; hChild = pChild->hNext) {
000010  9807              LDR      r0,[sp,#0x1c]
000012  f9b00018          LDRSH    r0,[r0,#0x18]
000016  9006              STR      r0,[sp,#0x18]
000018  e0b3              B        |L1.386|
                  |L1.26|
;;;47         int Status;
;;;48         GUI_RECT rOld, rNew;
;;;49         pChild = WM_H2P(hChild);
00001a  9806              LDR      r0,[sp,#0x18]
00001c  f7fffffe          BL       GUI_ALLOC_h2p
000020  4604              MOV      r4,r0
;;;50         /* Compute size of new rectangle */
;;;51         rOld = pChild->Rect;
000022  e9d40100          LDRD     r0,r1,[r4,#0]
000026  e9cd0102          STRD     r0,r1,[sp,#8]
;;;52         rNew = rOld;
00002a  e9dd0102          LDRD     r0,r1,[sp,#8]
00002e  e9cd0100          STRD     r0,r1,[sp,#0]
;;;53         Status = pChild->Status & (WM_SF_ANCHOR_RIGHT | WM_SF_ANCHOR_LEFT);
000032  8ba0              LDRH     r0,[r4,#0x1c]
000034  f4007020          AND      r0,r0,#0x280
000038  9004              STR      r0,[sp,#0x10]
;;;54         switch (Status) {
00003a  9804              LDR      r0,[sp,#0x10]
00003c  2880              CMP      r0,#0x80
00003e  d003              BEQ      |L1.72|
000040  f5b07f20          CMP      r0,#0x280
000044  d11a              BNE      |L1.124|
000046  e00c              B        |L1.98|
                  |L1.72|
;;;55           case WM_SF_ANCHOR_RIGHT:                      /* Right ANCHOR : Move window with right side */
;;;56             rNew.x0 += dx1;
000048  f8bd0000          LDRH     r0,[sp,#0]
00004c  4438              ADD      r0,r0,r7
00004e  b200              SXTH     r0,r0
000050  f8ad0000          STRH     r0,[sp,#0]
;;;57             rNew.x1 += dx1;
000054  f8bd0004          LDRH     r0,[sp,#4]
000058  4438              ADD      r0,r0,r7
00005a  b200              SXTH     r0,r0
00005c  f8ad0004          STRH     r0,[sp,#4]
;;;58             break;
000060  e019              B        |L1.150|
                  |L1.98|
;;;59           case WM_SF_ANCHOR_RIGHT | WM_SF_ANCHOR_LEFT:    /* Left & Right ANCHOR: Resize window */
;;;60             rNew.x0 += dx0;
000062  f8bd0000          LDRH     r0,[sp,#0]
000066  4428              ADD      r0,r0,r5
000068  b200              SXTH     r0,r0
00006a  f8ad0000          STRH     r0,[sp,#0]
;;;61             rNew.x1 += dx1;
00006e  f8bd0004          LDRH     r0,[sp,#4]
000072  4438              ADD      r0,r0,r7
000074  b200              SXTH     r0,r0
000076  f8ad0004          STRH     r0,[sp,#4]
;;;62             break;
00007a  e00c              B        |L1.150|
                  |L1.124|
;;;63           default:                                    /* Left ANCHOR: Move window with left side of parent */
;;;64             rNew.x0 += dx0;
00007c  f8bd0000          LDRH     r0,[sp,#0]
000080  4428              ADD      r0,r0,r5
000082  b200              SXTH     r0,r0
000084  f8ad0000          STRH     r0,[sp,#0]
;;;65             rNew.x1 += dx0;
000088  f8bd0004          LDRH     r0,[sp,#4]
00008c  4428              ADD      r0,r0,r5
00008e  b200              SXTH     r0,r0
000090  f8ad0004          STRH     r0,[sp,#4]
000094  bf00              NOP                            ;54
                  |L1.150|
000096  bf00              NOP                            ;58
;;;66         }
;;;67         Status = pChild->Status & (WM_SF_ANCHOR_TOP   | WM_SF_ANCHOR_BOTTOM);
000098  8ba0              LDRH     r0,[r4,#0x1c]
00009a  f40060a0          AND      r0,r0,#0x500
00009e  9004              STR      r0,[sp,#0x10]
;;;68         switch (Status) {
0000a0  9804              LDR      r0,[sp,#0x10]
0000a2  f5b07f80          CMP      r0,#0x100
0000a6  d003              BEQ      |L1.176|
0000a8  f5b06fa0          CMP      r0,#0x500
0000ac  d11a              BNE      |L1.228|
0000ae  e00c              B        |L1.202|
                  |L1.176|
;;;69           case WM_SF_ANCHOR_BOTTOM:                     /* Bottom ANCHOR */
;;;70             rNew.y0 += dy1;
0000b0  f8bd0002          LDRH     r0,[sp,#2]
0000b4  4440              ADD      r0,r0,r8
0000b6  b200              SXTH     r0,r0
0000b8  f8ad0002          STRH     r0,[sp,#2]
;;;71             rNew.y1 += dy1;
0000bc  f8bd0006          LDRH     r0,[sp,#6]
0000c0  4440              ADD      r0,r0,r8
0000c2  b200              SXTH     r0,r0
0000c4  f8ad0006          STRH     r0,[sp,#6]
;;;72             break;
0000c8  e019              B        |L1.254|
                  |L1.202|
;;;73           case WM_SF_ANCHOR_BOTTOM | WM_SF_ANCHOR_TOP:    /* resize window */
;;;74             rNew.y0 += dy0;
0000ca  f8bd0002          LDRH     r0,[sp,#2]
0000ce  4430              ADD      r0,r0,r6
0000d0  b200              SXTH     r0,r0
0000d2  f8ad0002          STRH     r0,[sp,#2]
;;;75             rNew.y1 += dy1;
0000d6  f8bd0006          LDRH     r0,[sp,#6]
0000da  4440              ADD      r0,r0,r8
0000dc  b200              SXTH     r0,r0
0000de  f8ad0006          STRH     r0,[sp,#6]
;;;76             break;
0000e2  e00c              B        |L1.254|
                  |L1.228|
;;;77           default:                                    /* Top ANCHOR */
;;;78             rNew.y0 += dy0;
0000e4  f8bd0002          LDRH     r0,[sp,#2]
0000e8  4430              ADD      r0,r0,r6
0000ea  b200              SXTH     r0,r0
0000ec  f8ad0002          STRH     r0,[sp,#2]
;;;79             rNew.y1 += dy0;
0000f0  f8bd0006          LDRH     r0,[sp,#6]
0000f4  4430              ADD      r0,r0,r6
0000f6  b200              SXTH     r0,r0
0000f8  f8ad0006          STRH     r0,[sp,#6]
0000fc  bf00              NOP                            ;68
                  |L1.254|
0000fe  bf00              NOP                            ;72
;;;80         }
;;;81         /* Set new window position using Move and Resize as required */
;;;82         dx = rNew.x0 - rOld.x0;
000100  f9bd0000          LDRSH    r0,[sp,#0]
000104  f9bd1008          LDRSH    r1,[sp,#8]
000108  eba00901          SUB      r9,r0,r1
;;;83         dy = rNew.y0 - rOld.y0;
00010c  f9bd0002          LDRSH    r0,[sp,#2]
000110  f9bd100a          LDRSH    r1,[sp,#0xa]
000114  eba00a01          SUB      r10,r0,r1
;;;84         if (dx || dy) {
000118  f1b90f00          CMP      r9,#0
00011c  d102              BNE      |L1.292|
00011e  f1ba0f00          CMP      r10,#0
000122  d004              BEQ      |L1.302|
                  |L1.292|
;;;85           WM_MoveWindow(hChild, dx, dy);
000124  4652              MOV      r2,r10
000126  4649              MOV      r1,r9
000128  9806              LDR      r0,[sp,#0x18]
00012a  f7fffffe          BL       WM_MoveWindow
                  |L1.302|
;;;86         }
;;;87         dw = (rNew.x1 - rNew.x0) - (rOld.x1 - rOld.x0);
00012e  f9bd0004          LDRSH    r0,[sp,#4]
000132  f9bd1000          LDRSH    r1,[sp,#0]
000136  eba00001          SUB      r0,r0,r1
00013a  f9bd100c          LDRSH    r1,[sp,#0xc]
00013e  f9bd2008          LDRSH    r2,[sp,#8]
000142  eba10102          SUB      r1,r1,r2
000146  eba00b01          SUB      r11,r0,r1
;;;88         dh = (rNew.y1 - rNew.y0) - (rOld.y1 - rOld.y0);
00014a  f9bd0006          LDRSH    r0,[sp,#6]
00014e  f9bd1002          LDRSH    r1,[sp,#2]
000152  eba00001          SUB      r0,r0,r1
000156  f9bd100e          LDRSH    r1,[sp,#0xe]
00015a  f9bd200a          LDRSH    r2,[sp,#0xa]
00015e  eba10102          SUB      r1,r1,r2
000162  eba00001          SUB      r0,r0,r1
000166  9005              STR      r0,[sp,#0x14]
;;;89         if (dw || dh) {
000168  f1bb0f00          CMP      r11,#0
00016c  d101              BNE      |L1.370|
00016e  9805              LDR      r0,[sp,#0x14]
000170  b120              CBZ      r0,|L1.380|
                  |L1.370|
;;;90           WM_ResizeWindow(hChild, dw, dh);
000172  4659              MOV      r1,r11
000174  e9dd2005          LDRD     r2,r0,[sp,#0x14]
000178  f7fffffe          BL       WM_ResizeWindow
                  |L1.380|
00017c  f9b4001a          LDRSH    r0,[r4,#0x1a]         ;46
000180  9006              STR      r0,[sp,#0x18]         ;46
                  |L1.386|
000182  9806              LDR      r0,[sp,#0x18]         ;46
000184  2800              CMP      r0,#0                 ;46
000186  f47faf48          BNE      |L1.26|
;;;91         }
;;;92       }
;;;93     }
00018a  b00b              ADD      sp,sp,#0x2c
00018c  e8bd8ff0          POP      {r4-r11,pc}
;;;94     
                          ENDP


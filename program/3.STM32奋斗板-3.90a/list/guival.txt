; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\guival.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\guival.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\guival.crf GUI\Core\GUIVal.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  GUI_DispDecShift PROC
;;;33     */
;;;34     void GUI_DispDecShift(I32 v, U8 Len, U8 Shift) {
000000  b57f              PUSH     {r0-r6,lr}
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
000006  4616              MOV      r6,r2
;;;35     	char ac[12];
;;;36     	char* s = ac;
000008  a801              ADD      r0,sp,#4
00000a  9000              STR      r0,[sp,#0]
;;;37       GUI_AddDecShift(v, Len, Shift, &s);
00000c  466b              MOV      r3,sp
00000e  4632              MOV      r2,r6
000010  4629              MOV      r1,r5
000012  4620              MOV      r0,r4
000014  f7fffffe          BL       GUI_AddDecShift
;;;38       GUI_DispString(ac);
000018  a801              ADD      r0,sp,#4
00001a  f7fffffe          BL       GUI_DispString
;;;39     }
00001e  bd7f              POP      {r0-r6,pc}
;;;40     
                          ENDP

                  GUI_DispSDecShift PROC
;;;44     */
;;;45     void GUI_DispSDecShift(I32 v, U8 Len, U8 Shift) {
000020  b57f              PUSH     {r0-r6,lr}
000022  4605              MOV      r5,r0
000024  460c              MOV      r4,r1
000026  4616              MOV      r6,r2
;;;46     	char ac[12];
;;;47     	char* s = ac;
000028  a801              ADD      r0,sp,#4
00002a  9000              STR      r0,[sp,#0]
;;;48       v = GUI_AddSign(v, &s);
00002c  4669              MOV      r1,sp
00002e  4628              MOV      r0,r5
000030  f7fffffe          BL       GUI_AddSign
000034  4605              MOV      r5,r0
;;;49       GUI_AddDecShift(v, --Len, Shift, &s);
000036  f1a40001          SUB      r0,r4,#1
00003a  b2c0              UXTB     r0,r0
00003c  4604              MOV      r4,r0
00003e  4601              MOV      r1,r0
000040  466b              MOV      r3,sp
000042  4632              MOV      r2,r6
000044  4628              MOV      r0,r5
000046  f7fffffe          BL       GUI_AddDecShift
;;;50       GUI_DispString(ac);
00004a  a801              ADD      r0,sp,#4
00004c  f7fffffe          BL       GUI_DispString
;;;51     }
000050  bd7f              POP      {r0-r6,pc}
;;;52     
                          ENDP

                  GUI_DispDecMin PROC
;;;56     */
;;;57     void GUI_DispDecMin(I32 v) {
000052  b51f              PUSH     {r0-r4,lr}
000054  4604              MOV      r4,r0
;;;58     	char ac[12];
;;;59     	char* s = ac;
000056  a801              ADD      r0,sp,#4
000058  9000              STR      r0,[sp,#0]
;;;60       GUI_AddDecMin(v, &s);
00005a  4669              MOV      r1,sp
00005c  4620              MOV      r0,r4
00005e  f7fffffe          BL       GUI_AddDecMin
;;;61       GUI_DispString(ac);
000062  a801              ADD      r0,sp,#4
000064  f7fffffe          BL       GUI_DispString
;;;62     }
000068  bd1f              POP      {r0-r4,pc}
;;;63     
                          ENDP

                  GUI_DispDecSpace PROC
;;;67     */
;;;68     void GUI_DispDecSpace(I32 v, U8 MaxDigits) {
00006a  b57f              PUSH     {r0-r6,lr}
00006c  4605              MOV      r5,r0
00006e  460c              MOV      r4,r1
;;;69     	char ac[12];
;;;70     	char* s = ac;
000070  a801              ADD      r0,sp,#4
000072  9000              STR      r0,[sp,#0]
;;;71       U8 Len;
;;;72       if (v < 0) {
000074  2d00              CMP      r5,#0
000076  da07              BGE      |L1.136|
;;;73         v = GUI_AddSign(v, &s);
000078  4669              MOV      r1,sp
00007a  4628              MOV      r0,r5
00007c  f7fffffe          BL       GUI_AddSign
000080  4605              MOV      r5,r0
;;;74         MaxDigits--;
000082  f1a40001          SUB      r0,r4,#1
000086  b2c4              UXTB     r4,r0
                  |L1.136|
;;;75       }
;;;76       Len = GUI_Long2Len(v);
000088  4628              MOV      r0,r5
00008a  f7fffffe          BL       GUI_Long2Len
00008e  b2c6              UXTB     r6,r0
;;;77       while (Len++ < MaxDigits) {
000090  e007              B        |L1.162|
                  |L1.146|
;;;78         *s++ = ' ';
000092  f04f0020          MOV      r0,#0x20
000096  9900              LDR      r1,[sp,#0]
000098  7008              STRB     r0,[r1,#0]
00009a  9800              LDR      r0,[sp,#0]
00009c  f1000001          ADD      r0,r0,#1
0000a0  9000              STR      r0,[sp,#0]
                  |L1.162|
0000a2  4630              MOV      r0,r6                 ;77
0000a4  1c71              ADDS     r1,r6,#1              ;77
0000a6  b2ce              UXTB     r6,r1                 ;77
0000a8  42a0              CMP      r0,r4                 ;77
0000aa  dbf2              BLT      |L1.146|
;;;79       }
;;;80       GUI_AddDecMin(v, &s);
0000ac  4669              MOV      r1,sp
0000ae  4628              MOV      r0,r5
0000b0  f7fffffe          BL       GUI_AddDecMin
;;;81       GUI_DispString(ac);
0000b4  a801              ADD      r0,sp,#4
0000b6  f7fffffe          BL       GUI_DispString
;;;82     }
0000ba  bd7f              POP      {r0-r6,pc}
;;;83     
                          ENDP

                  GUI_DispSDec PROC
;;;87     */
;;;88     void GUI_DispSDec(I32 v, U8 Len) {
0000bc  b570              PUSH     {r4-r6,lr}
0000be  4604              MOV      r4,r0
0000c0  460d              MOV      r5,r1
;;;89       GUI_DispSDecShift(v,Len,0);
0000c2  f04f0200          MOV      r2,#0
0000c6  4629              MOV      r1,r5
0000c8  4620              MOV      r0,r4
0000ca  f7fffffe          BL       GUI_DispSDecShift
;;;90     }
0000ce  bd70              POP      {r4-r6,pc}
;;;91     
                          ENDP

                  GUI_DispDec PROC
;;;95     */
;;;96     void GUI_DispDec(I32 v, U8 Len) {
0000d0  b570              PUSH     {r4-r6,lr}
0000d2  4604              MOV      r4,r0
0000d4  460d              MOV      r5,r1
;;;97       GUI_DispDecShift(v, Len,0);
0000d6  f04f0200          MOV      r2,#0
0000da  4629              MOV      r1,r5
0000dc  4620              MOV      r0,r4
0000de  f7fffffe          BL       GUI_DispDecShift
;;;98     }
0000e2  bd70              POP      {r4-r6,pc}
;;;99     
                          ENDP

                  GUI_DispDecAt PROC
;;;103    */
;;;104    void GUI_DispDecAt(I32 v, I16P x, I16P y, U8 Len) {
0000e4  e92d41ff          PUSH     {r0-r8,lr}
0000e8  4605              MOV      r5,r0
0000ea  460e              MOV      r6,r1
0000ec  4617              MOV      r7,r2
0000ee  461c              MOV      r4,r3
;;;105    	char ac[12];
;;;106    	char* s = ac;
0000f0  a801              ADD      r0,sp,#4
0000f2  9000              STR      r0,[sp,#0]
;;;107      GUI_AddDecShift(v, Len, 0, &s);
0000f4  466b              MOV      r3,sp
0000f6  f04f0200          MOV      r2,#0
0000fa  4621              MOV      r1,r4
0000fc  4628              MOV      r0,r5
0000fe  f7fffffe          BL       GUI_AddDecShift
;;;108      GUI_DispStringAt(ac, x, y);
000102  463a              MOV      r2,r7
000104  4631              MOV      r1,r6
000106  a801              ADD      r0,sp,#4
000108  f7fffffe          BL       GUI_DispStringAt
;;;109    }
00010c  e8bd81ff          POP      {r0-r8,pc}
;;;110    
                          ENDP


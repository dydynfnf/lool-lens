; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\scrollbar.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\scrollbar.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\scrollbar.crf GUI\Widget\SCROLLBAR.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _GetArrowSize PROC
;;;83     */
;;;84     static int _GetArrowSize(SCROLLBAR_Obj* pObj) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4606              MOV      r6,r0
;;;85       unsigned int r;
;;;86       unsigned int xSize = WIDGET__GetXSize(&pObj->Widget);
000006  4630              MOV      r0,r6
000008  f7fffffe          BL       WIDGET__GetXSize
00000c  4605              MOV      r5,r0
;;;87       unsigned int ySize = WIDGET__GetYSize(&pObj->Widget);
00000e  4630              MOV      r0,r6
000010  f7fffffe          BL       WIDGET__GetYSize
000014  4607              MOV      r7,r0
;;;88       r = ySize/2 + 5;
000016  f04f0005          MOV      r0,#5
00001a  eb000457          ADD      r4,r0,r7,LSR #1
;;;89       if (r > xSize-5)
00001e  f1a50005          SUB      r0,r5,#5
000022  42a0              CMP      r0,r4
000024  d200              BCS      |L1.40|
;;;90         r = xSize-5;
000026  4604              MOV      r4,r0
                  |L1.40|
;;;91       return r;
000028  4620              MOV      r0,r4
;;;92     }
00002a  e8bd81f0          POP      {r4-r8,pc}
;;;93     
                          ENDP

                  _WIDGET__RECT2VRECT PROC
;;;104    */
;;;105    static void _WIDGET__RECT2VRECT(const WIDGET* pWidget, GUI_RECT* pRect) {
00002e  b570              PUSH     {r4-r6,lr}
;;;106      if (pWidget->State & WIDGET_STATE_VERTICAL) {
000030  8cc2              LDRH     r2,[r0,#0x26]
000032  f0120f08          TST      r2,#8
000036  d01c              BEQ      |L1.114|
;;;107        int xSize = pWidget->Win.Rect.x1 - pWidget->Win.Rect.x0 + 1;
000038  f9b05004          LDRSH    r5,[r0,#4]
00003c  f9b06000          LDRSH    r6,[r0,#0]
000040  eba50506          SUB      r5,r5,r6
000044  f1050201          ADD      r2,r5,#1
;;;108        int x0, x1;
;;;109        x0 = pRect->x0;
000048  f9b13000          LDRSH    r3,[r1,#0]
;;;110        x1 = pRect->x1;
00004c  f9b14004          LDRSH    r4,[r1,#4]
;;;111        pRect->x0 = pRect->y0;
000050  884d              LDRH     r5,[r1,#2]
000052  800d              STRH     r5,[r1,#0]
;;;112        pRect->x1 = pRect->y1;
000054  88cd              LDRH     r5,[r1,#6]
000056  808d              STRH     r5,[r1,#4]
;;;113        pRect->y1 = xSize - 1 - x0;
000058  f1a20501          SUB      r5,r2,#1
00005c  eba50503          SUB      r5,r5,r3
000060  b22d              SXTH     r5,r5
000062  80cd              STRH     r5,[r1,#6]
;;;114        pRect->y0 = xSize - 1 - x1;
000064  f1a20501          SUB      r5,r2,#1
000068  eba50504          SUB      r5,r5,r4
00006c  b22d              SXTH     r5,r5
00006e  804d              STRH     r5,[r1,#2]
;;;115      }
000070  bf00              NOP      
                  |L1.114|
;;;116    }
000072  bd70              POP      {r4-r6,pc}
;;;117    
                          ENDP

                  _CalcPositions PROC
;;;124    */
;;;125    static void _CalcPositions(SCROLLBAR_Obj* pObj, SCROLLBAR_POSITIONS* pPos) {
000074  e92d4ff0          PUSH     {r4-r11,lr}
000078  b087              SUB      sp,sp,#0x1c
00007a  4605              MOV      r5,r0
00007c  460c              MOV      r4,r1
;;;126      int xSizeArrow, xSize, xSizeMoveable, ThumbSize, NumItems, xSizeThumbArea;
;;;127      WM_HWIN hWin;
;;;128      GUI_RECT r, rSub;
;;;129      int x0, y0;
;;;130      r = pObj->Widget.Win.Rect;
00007e  e9d50100          LDRD     r0,r1,[r5,#0]
000082  e9cd0104          STRD     r0,r1,[sp,#0x10]
;;;131      x0 = r.x0;
000086  f9bd0010          LDRSH    r0,[sp,#0x10]
00008a  9001              STR      r0,[sp,#4]
;;;132      y0 = r.y0;
00008c  f9bd0012          LDRSH    r0,[sp,#0x12]
000090  9000              STR      r0,[sp,#0]
;;;133      pPos->x1  = (pObj->Widget.State & WIDGET_STATE_VERTICAL) ? r.y1 : r.x1;
000092  8ce8              LDRH     r0,[r5,#0x26]
000094  f0100f08          TST      r0,#8
000098  d002              BEQ      |L1.160|
00009a  f9bd0016          LDRSH    r0,[sp,#0x16]
00009e  e001              B        |L1.164|
                  |L1.160|
0000a0  f9bd0014          LDRSH    r0,[sp,#0x14]
                  |L1.164|
0000a4  61a0              STR      r0,[r4,#0x18]
;;;134      /* Subtract the rectangle of the other scrollbar (if existing and visible) */
;;;135      if (pObj->Widget.Id == GUI_ID_HSCROLL) {
0000a6  8ca8              LDRH     r0,[r5,#0x24]
0000a8  28ff              CMP      r0,#0xff
0000aa  d118              BNE      |L1.222|
;;;136        hWin = WM_GetScrollbarV(pObj->Widget.Win.hParent);
0000ac  f9b50016          LDRSH    r0,[r5,#0x16]
0000b0  f7fffffe          BL       WM_GetScrollbarV
0000b4  4682              MOV      r10,r0
;;;137        if (hWin) {
0000b6  f1ba0f00          CMP      r10,#0
0000ba  d010              BEQ      |L1.222|
;;;138          WM_GetWindowRectEx(hWin, &rSub);
0000bc  a902              ADD      r1,sp,#8
0000be  4650              MOV      r0,r10
0000c0  f7fffffe          BL       WM_GetWindowRectEx
;;;139          if (r.x1 == rSub.x1) {
0000c4  f9bd0014          LDRSH    r0,[sp,#0x14]
0000c8  f9bd100c          LDRSH    r1,[sp,#0xc]
0000cc  4288              CMP      r0,r1
0000ce  d106              BNE      |L1.222|
;;;140            r.x1 = rSub.x0 -1;
0000d0  f8bd0008          LDRH     r0,[sp,#8]
0000d4  f1a00001          SUB      r0,r0,#1
0000d8  b200              SXTH     r0,r0
0000da  f8ad0014          STRH     r0,[sp,#0x14]
                  |L1.222|
;;;141          }
;;;142        }
;;;143      }
;;;144      if (pObj->Widget.Id == GUI_ID_VSCROLL) {
0000de  8ca8              LDRH     r0,[r5,#0x24]
0000e0  28fe              CMP      r0,#0xfe
0000e2  d118              BNE      |L1.278|
;;;145        hWin = WM_GetScrollbarH(pObj->Widget.Win.hParent);
0000e4  f9b50016          LDRSH    r0,[r5,#0x16]
0000e8  f7fffffe          BL       WM_GetScrollbarH
0000ec  4682              MOV      r10,r0
;;;146        if (hWin) {
0000ee  f1ba0f00          CMP      r10,#0
0000f2  d010              BEQ      |L1.278|
;;;147          WM_GetWindowRectEx(hWin, &rSub);
0000f4  a902              ADD      r1,sp,#8
0000f6  4650              MOV      r0,r10
0000f8  f7fffffe          BL       WM_GetWindowRectEx
;;;148          if (r.y1 == rSub.y1) {
0000fc  f9bd0016          LDRSH    r0,[sp,#0x16]
000100  f9bd100e          LDRSH    r1,[sp,#0xe]
000104  4288              CMP      r0,r1
000106  d106              BNE      |L1.278|
;;;149            r.y1 = rSub.y0 -1;
000108  f8bd000a          LDRH     r0,[sp,#0xa]
00010c  f1a00001          SUB      r0,r0,#1
000110  b200              SXTH     r0,r0
000112  f8ad0016          STRH     r0,[sp,#0x16]
                  |L1.278|
;;;150          }
;;;151        }
;;;152      }
;;;153      /* Convert coordinates of this window */
;;;154      GUI_MoveRect(&r, -x0, -y0);
000116  9800              LDR      r0,[sp,#0]
000118  4242              RSBS     r2,r0,#0
00011a  9801              LDR      r0,[sp,#4]
00011c  4241              RSBS     r1,r0,#0
00011e  a804              ADD      r0,sp,#0x10
000120  f7fffffe          BL       GUI_MoveRect
;;;155      /* Convert real into virtual coordinates */
;;;156      _WIDGET__RECT2VRECT(&pObj->Widget, &r);
000124  a904              ADD      r1,sp,#0x10
000126  4628              MOV      r0,r5
000128  f7fffffe          BL       _WIDGET__RECT2VRECT
;;;157      NumItems      = pObj->NumItems;
00012c  6ba8              LDR      r0,[r5,#0x38]
00012e  9006              STR      r0,[sp,#0x18]
;;;158      xSize         = r.x1 - r.x0 + 1;
000130  f9bd0014          LDRSH    r0,[sp,#0x14]
000134  f9bd1010          LDRSH    r1,[sp,#0x10]
000138  eba00001          SUB      r0,r0,r1
00013c  f1000901          ADD      r9,r0,#1
;;;159      xSizeArrow    = _GetArrowSize(pObj);
000140  4628              MOV      r0,r5
000142  f7fffffe          BL       _GetArrowSize
000146  4680              MOV      r8,r0
;;;160      xSizeThumbArea= xSize - 2 * xSizeArrow;     /* Number of pixels available for thumb and movement */
000148  f04f0002          MOV      r0,#2
00014c  fb009718          MLS      r7,r0,r8,r9
;;;161      ThumbSize     = GUI__DivideRound(xSizeThumbArea * pObj->PageSize, NumItems);
000150  6c29              LDR      r1,[r5,#0x40]
000152  fb01f007          MUL      r0,r1,r7
000156  9906              LDR      r1,[sp,#0x18]
000158  f7fffffe          BL       GUI__DivideRound
00015c  4606              MOV      r6,r0
;;;162      if (ThumbSize < 4) {
00015e  2e04              CMP      r6,#4
000160  da01              BGE      |L1.358|
;;;163        ThumbSize = 4;
000162  f04f0604          MOV      r6,#4
                  |L1.358|
;;;164      }
;;;165      if (ThumbSize > xSizeThumbArea) {
000166  42be              CMP      r6,r7
000168  dd00              BLE      |L1.364|
;;;166        ThumbSize = xSizeThumbArea;
00016a  463e              MOV      r6,r7
                  |L1.364|
;;;167      }
;;;168      xSizeMoveable = xSizeThumbArea - ThumbSize;
00016c  eba70b06          SUB      r11,r7,r6
;;;169      pPos->x0_LeftArrow  = r.x0;
000170  f9bd0010          LDRSH    r0,[sp,#0x10]
000174  6020              STR      r0,[r4,#0]
;;;170      pPos->x1_LeftArrow  = xSizeArrow - 1;
000176  f1a80001          SUB      r0,r8,#1
00017a  6060              STR      r0,[r4,#4]
;;;171      pPos->x1_RightArrow = xSize - 1;
00017c  f1a90001          SUB      r0,r9,#1
000180  6160              STR      r0,[r4,#0x14]
;;;172      pPos->x0_RightArrow = xSize - xSizeArrow;
000182  eba90008          SUB      r0,r9,r8
000186  6120              STR      r0,[r4,#0x10]
;;;173      pPos->x0_Thumb      = pPos->x1_LeftArrow + 1+ GUI__DivideRound(xSizeMoveable * pObj->v, NumItems - pObj->PageSize);
000188  6c2b              LDR      r3,[r5,#0x40]
00018a  9a06              LDR      r2,[sp,#0x18]
00018c  eba20103          SUB      r1,r2,r3
000190  6bea              LDR      r2,[r5,#0x3c]
000192  fb02f00b          MUL      r0,r2,r11
000196  f7fffffe          BL       GUI__DivideRound
00019a  6861              LDR      r1,[r4,#4]
00019c  f1010101          ADD      r1,r1,#1
0001a0  4408              ADD      r0,r0,r1
0001a2  60a0              STR      r0,[r4,#8]
;;;174      pPos->x1_Thumb      = pPos->x0_Thumb + ThumbSize - 1;
0001a4  68a0              LDR      r0,[r4,#8]
0001a6  4430              ADD      r0,r0,r6
0001a8  f1a00001          SUB      r0,r0,#1
0001ac  60e0              STR      r0,[r4,#0xc]
;;;175      pPos->xSizeMoveable = xSizeMoveable;
0001ae  f8c4b01c          STR      r11,[r4,#0x1c]
;;;176      pPos->ThumbSize     = ThumbSize;
0001b2  6226              STR      r6,[r4,#0x20]
;;;177    }
0001b4  b007              ADD      sp,sp,#0x1c
0001b6  e8bd8ff0          POP      {r4-r11,pc}
;;;178    
                          ENDP

                  _DrawTriangle PROC
;;;182    */
;;;183    static void _DrawTriangle(WIDGET* pWidget, int x, int y, int Size, int Inc) {
0001ba  e92d41f0          PUSH     {r4-r8,lr}
0001be  4607              MOV      r7,r0
0001c0  460e              MOV      r6,r1
0001c2  4615              MOV      r5,r2
0001c4  461c              MOV      r4,r3
0001c6  f8dd8018          LDR      r8,[sp,#0x18]
;;;184      if (pWidget->State & WIDGET_STATE_VERTICAL) {
0001ca  8cf8              LDRH     r0,[r7,#0x26]
0001cc  f0100f08          TST      r0,#8
0001d0  d00b              BEQ      |L1.490|
;;;185        for (; Size >= 0; Size--, x += Inc) {
0001d2  e007              B        |L1.484|
                  |L1.468|
;;;186          GUI_DrawHLine(x, y - Size, y + Size);
0001d4  192a              ADDS     r2,r5,r4
0001d6  1b29              SUBS     r1,r5,r4
0001d8  4630              MOV      r0,r6
0001da  f7fffffe          BL       GUI_DrawHLine
0001de  f1a40401          SUB      r4,r4,#1              ;185
0001e2  4446              ADD      r6,r6,r8              ;185
                  |L1.484|
0001e4  2c00              CMP      r4,#0                 ;185
0001e6  daf5              BGE      |L1.468|
0001e8  e00a              B        |L1.512|
                  |L1.490|
;;;187        }
;;;188      } else {
;;;189        for (; Size >= 0; Size--, x += Inc) {
0001ea  e007              B        |L1.508|
                  |L1.492|
;;;190          GUI_DrawVLine(x, y - Size, y + Size);
0001ec  192a              ADDS     r2,r5,r4
0001ee  1b29              SUBS     r1,r5,r4
0001f0  4630              MOV      r0,r6
0001f2  f7fffffe          BL       GUI_DrawVLine
0001f6  f1a40401          SUB      r4,r4,#1              ;189
0001fa  4446              ADD      r6,r6,r8              ;189
                  |L1.508|
0001fc  2c00              CMP      r4,#0                 ;189
0001fe  daf5              BGE      |L1.492|
                  |L1.512|
;;;191        }
;;;192      }
;;;193    }
000200  e8bd81f0          POP      {r4-r8,pc}
;;;194    
                          ENDP

                  _Paint PROC
;;;198    */
;;;199    static void _Paint(SCROLLBAR_Obj* pObj) {
000204  b570              PUSH     {r4-r6,lr}
000206  b08e              SUB      sp,sp,#0x38
000208  4604              MOV      r4,r0
;;;200      int ArrowSize, ArrowOff;
;;;201      SCROLLBAR_POSITIONS Pos;
;;;202      GUI_RECT r, rClient;
;;;203      /*
;;;204        Get / calc position info
;;;205      */
;;;206      _CalcPositions(pObj, &Pos);
00020a  a905              ADD      r1,sp,#0x14
00020c  4620              MOV      r0,r4
00020e  f7fffffe          BL       _CalcPositions
;;;207      WIDGET__GetClientRect(&pObj->Widget, &rClient);
000212  a901              ADD      r1,sp,#4
000214  4620              MOV      r0,r4
000216  f7fffffe          BL       WIDGET__GetClientRect
;;;208      r = rClient;
00021a  e9dd0101          LDRD     r0,r1,[sp,#4]
00021e  e9cd0103          STRD     r0,r1,[sp,#0xc]
;;;209      ArrowSize = ((r.y1 - r.y0) /3) - 1;
000222  f9bd0012          LDRSH    r0,[sp,#0x12]
000226  f9bd100e          LDRSH    r1,[sp,#0xe]
00022a  eba00001          SUB      r0,r0,r1
00022e  f04f0103          MOV      r1,#3
000232  fb90f0f1          SDIV     r0,r0,r1
000236  f1a00501          SUB      r5,r0,#1
;;;210      ArrowOff = 3 + ArrowSize+ ArrowSize/3;
00023a  4608              MOV      r0,r1
00023c  fb95f1f0          SDIV     r1,r5,r0
000240  f1050003          ADD      r0,r5,#3
000244  eb010600          ADD      r6,r1,r0
;;;211      /*
;;;212        Draw left Arrow
;;;213      */
;;;214      LCD_SetColor(pObj->aColor[0]);
000248  6b20              LDR      r0,[r4,#0x30]
00024a  f7fffffe          BL       LCD_SetColor
;;;215      r = rClient;
00024e  e9dd0101          LDRD     r0,r1,[sp,#4]
000252  e9cd0103          STRD     r0,r1,[sp,#0xc]
;;;216      r.x0 = Pos.x0_LeftArrow;
000256  9805              LDR      r0,[sp,#0x14]
000258  b200              SXTH     r0,r0
00025a  f8ad000c          STRH     r0,[sp,#0xc]
;;;217      r.x1 = Pos.x1_LeftArrow;
00025e  9806              LDR      r0,[sp,#0x18]
000260  b200              SXTH     r0,r0
000262  f8ad0010          STRH     r0,[sp,#0x10]
;;;218      WIDGET__FillRectEx(&pObj->Widget, &r);
000266  a903              ADD      r1,sp,#0xc
000268  4620              MOV      r0,r4
00026a  f7fffffe          BL       WIDGET__FillRectEx
;;;219      LCD_SetColor(pObj->aBkColor[1]);
00026e  6ae0              LDR      r0,[r4,#0x2c]
000270  f7fffffe          BL       LCD_SetColor
;;;220      _DrawTriangle(&pObj->Widget, r.x0 + ArrowOff, (r.y1 - r.y0) >> 1, ArrowSize, -1);
000274  f04f30ff          MOV      r0,#0xffffffff
000278  9000              STR      r0,[sp,#0]
00027a  f9bd0012          LDRSH    r0,[sp,#0x12]
00027e  f9bd300e          LDRSH    r3,[sp,#0xe]
000282  1ac0              SUBS     r0,r0,r3
000284  1042              ASRS     r2,r0,#1
000286  f9bd000c          LDRSH    r0,[sp,#0xc]
00028a  1981              ADDS     r1,r0,r6
00028c  462b              MOV      r3,r5
00028e  4620              MOV      r0,r4
000290  f7fffffe          BL       _DrawTriangle
;;;221      WIDGET__EFFECT_DrawUpRect(&pObj->Widget, &r);
000294  a903              ADD      r1,sp,#0xc
000296  4620              MOV      r0,r4
000298  f7fffffe          BL       WIDGET__EFFECT_DrawUpRect
;;;222      /*
;;;223        Draw the thumb area which is not covered by the thumb
;;;224      */
;;;225      LCD_SetColor(pObj->aBkColor[0]);
00029c  6aa0              LDR      r0,[r4,#0x28]
00029e  f7fffffe          BL       LCD_SetColor
;;;226      r.x0 = Pos.x1_LeftArrow + 1;
0002a2  9806              LDR      r0,[sp,#0x18]
0002a4  f1000001          ADD      r0,r0,#1
0002a8  b200              SXTH     r0,r0
0002aa  f8ad000c          STRH     r0,[sp,#0xc]
;;;227      r.x1 = Pos.x0_Thumb - 1;
0002ae  9807              LDR      r0,[sp,#0x1c]
0002b0  f1a00001          SUB      r0,r0,#1
0002b4  b200              SXTH     r0,r0
0002b6  f8ad0010          STRH     r0,[sp,#0x10]
;;;228      WIDGET__FillRectEx(&pObj->Widget, &r);
0002ba  a903              ADD      r1,sp,#0xc
0002bc  4620              MOV      r0,r4
0002be  f7fffffe          BL       WIDGET__FillRectEx
;;;229      r = rClient;
0002c2  e9dd0101          LDRD     r0,r1,[sp,#4]
0002c6  e9cd0103          STRD     r0,r1,[sp,#0xc]
;;;230      r.x0 = Pos.x1_Thumb + 1;
0002ca  9808              LDR      r0,[sp,#0x20]
0002cc  f1000001          ADD      r0,r0,#1
0002d0  b200              SXTH     r0,r0
0002d2  f8ad000c          STRH     r0,[sp,#0xc]
;;;231      r.x1 = Pos.x0_RightArrow - 1;
0002d6  9809              LDR      r0,[sp,#0x24]
0002d8  f1a00001          SUB      r0,r0,#1
0002dc  b200              SXTH     r0,r0
0002de  f8ad0010          STRH     r0,[sp,#0x10]
;;;232      WIDGET__FillRectEx(&pObj->Widget, &r);
0002e2  a903              ADD      r1,sp,#0xc
0002e4  4620              MOV      r0,r4
0002e6  f7fffffe          BL       WIDGET__FillRectEx
;;;233      /*
;;;234        Draw Thumb
;;;235      */
;;;236      r = rClient;
0002ea  e9dd0101          LDRD     r0,r1,[sp,#4]
0002ee  e9cd0103          STRD     r0,r1,[sp,#0xc]
;;;237      r.x0 = Pos.x0_Thumb;
0002f2  9807              LDR      r0,[sp,#0x1c]
0002f4  b200              SXTH     r0,r0
0002f6  f8ad000c          STRH     r0,[sp,#0xc]
;;;238      r.x1 = Pos.x1_Thumb;
0002fa  9808              LDR      r0,[sp,#0x20]
0002fc  b200              SXTH     r0,r0
0002fe  f8ad0010          STRH     r0,[sp,#0x10]
;;;239      LCD_SetColor(pObj->aColor[0]);
000302  6b20              LDR      r0,[r4,#0x30]
000304  f7fffffe          BL       LCD_SetColor
;;;240      WIDGET__FillRectEx(&pObj->Widget, &r);
000308  a903              ADD      r1,sp,#0xc
00030a  4620              MOV      r0,r4
00030c  f7fffffe          BL       WIDGET__FillRectEx
;;;241      WIDGET__EFFECT_DrawUpRect(&pObj->Widget, &r);
000310  a903              ADD      r1,sp,#0xc
000312  4620              MOV      r0,r4
000314  f7fffffe          BL       WIDGET__EFFECT_DrawUpRect
;;;242      /*
;;;243        Draw right Arrow
;;;244      */
;;;245      LCD_SetColor(pObj->aColor[0]);
000318  6b20              LDR      r0,[r4,#0x30]
00031a  f7fffffe          BL       LCD_SetColor
;;;246      r.x0 = Pos.x0_RightArrow;
00031e  9809              LDR      r0,[sp,#0x24]
000320  b200              SXTH     r0,r0
000322  f8ad000c          STRH     r0,[sp,#0xc]
;;;247      r.x1 = Pos.x1_RightArrow;
000326  980a              LDR      r0,[sp,#0x28]
000328  b200              SXTH     r0,r0
00032a  f8ad0010          STRH     r0,[sp,#0x10]
;;;248      WIDGET__FillRectEx(&pObj->Widget, &r);
00032e  a903              ADD      r1,sp,#0xc
000330  4620              MOV      r0,r4
000332  f7fffffe          BL       WIDGET__FillRectEx
;;;249      LCD_SetColor(pObj->aBkColor[1]);
000336  6ae0              LDR      r0,[r4,#0x2c]
000338  f7fffffe          BL       LCD_SetColor
;;;250      _DrawTriangle(&pObj->Widget, r.x1 - ArrowOff, (r.y1 - r.y0) >> 1, ArrowSize, 1);
00033c  2001              MOVS     r0,#1
00033e  9000              STR      r0,[sp,#0]
000340  f9bd0012          LDRSH    r0,[sp,#0x12]
000344  f9bd300e          LDRSH    r3,[sp,#0xe]
000348  1ac0              SUBS     r0,r0,r3
00034a  1042              ASRS     r2,r0,#1
00034c  f9bd0010          LDRSH    r0,[sp,#0x10]
000350  1b81              SUBS     r1,r0,r6
000352  462b              MOV      r3,r5
000354  4620              MOV      r0,r4
000356  f7fffffe          BL       _DrawTriangle
;;;251      WIDGET__EFFECT_DrawUpRect(&pObj->Widget, &r);
00035a  a903              ADD      r1,sp,#0xc
00035c  4620              MOV      r0,r4
00035e  f7fffffe          BL       WIDGET__EFFECT_DrawUpRect
;;;252      /*
;;;253        Draw overlap area (if any ...)
;;;254      */
;;;255      if (Pos.x1_RightArrow != Pos.x1) {
000362  e9dd010a          LDRD     r0,r1,[sp,#0x28]
000366  4288              CMP      r0,r1
000368  d010              BEQ      |L1.908|
;;;256        r.x0 = Pos.x1_RightArrow + 1;
00036a  980a              LDR      r0,[sp,#0x28]
00036c  f1000001          ADD      r0,r0,#1
000370  b200              SXTH     r0,r0
000372  f8ad000c          STRH     r0,[sp,#0xc]
;;;257        r.x1 = Pos.x1;
000376  980b              LDR      r0,[sp,#0x2c]
000378  b200              SXTH     r0,r0
00037a  f8ad0010          STRH     r0,[sp,#0x10]
;;;258        LCD_SetColor(pObj->aColor[0]);
00037e  6b20              LDR      r0,[r4,#0x30]
000380  f7fffffe          BL       LCD_SetColor
;;;259        WIDGET__FillRectEx(&pObj->Widget, &r);
000384  a903              ADD      r1,sp,#0xc
000386  4620              MOV      r0,r4
000388  f7fffffe          BL       WIDGET__FillRectEx
                  |L1.908|
;;;260      }
;;;261    }
00038c  b00e              ADD      sp,sp,#0x38
00038e  bd70              POP      {r4-r6,pc}
;;;262    
                          ENDP

                  _ScrollbarPressed PROC
;;;266    */
;;;267    static void _ScrollbarPressed(SCROLLBAR_Handle hObj, SCROLLBAR_Obj* pObj) {
000390  b570              PUSH     {r4-r6,lr}
000392  4605              MOV      r5,r0
000394  460c              MOV      r4,r1
;;;268      WIDGET_OrState(hObj, SCROLLBAR_STATE_PRESSED);
000396  f44f7180          MOV      r1,#0x100
00039a  4628              MOV      r0,r5
00039c  f7fffffe          BL       WIDGET_OrState
;;;269      if (pObj->Widget.Win.Status & WM_SF_ISVIS) {
0003a0  8ba0              LDRH     r0,[r4,#0x1c]
0003a2  f0100f02          TST      r0,#2
0003a6  d003              BEQ      |L1.944|
;;;270        WM_NotifyParent(hObj, WM_NOTIFICATION_CLICKED);
0003a8  2101              MOVS     r1,#1
0003aa  4628              MOV      r0,r5
0003ac  f7fffffe          BL       WM_NotifyParent
                  |L1.944|
;;;271      }
;;;272    }
0003b0  bd70              POP      {r4-r6,pc}
;;;273    
                          ENDP

                  _ScrollbarReleased PROC
;;;277    */
;;;278    static void _ScrollbarReleased(SCROLLBAR_Handle hObj, SCROLLBAR_Obj* pObj) {
0003b2  b570              PUSH     {r4-r6,lr}
0003b4  4605              MOV      r5,r0
0003b6  460c              MOV      r4,r1
;;;279      WIDGET_AndState(hObj, SCROLLBAR_STATE_PRESSED);
0003b8  f44f7180          MOV      r1,#0x100
0003bc  4628              MOV      r0,r5
0003be  f7fffffe          BL       WIDGET_AndState
;;;280      if (pObj->Widget.Win.Status & WM_SF_ISVIS) {
0003c2  8ba0              LDRH     r0,[r4,#0x1c]
0003c4  f0100f02          TST      r0,#2
0003c8  d003              BEQ      |L1.978|
;;;281        WM_NotifyParent(hObj, WM_NOTIFICATION_RELEASED);
0003ca  2102              MOVS     r1,#2
0003cc  4628              MOV      r0,r5
0003ce  f7fffffe          BL       WM_NotifyParent
                  |L1.978|
;;;282      }
;;;283    }
0003d2  bd70              POP      {r4-r6,pc}
;;;284    
                          ENDP

                  SCROLLBAR_SetValue PROC
;;;535    */
;;;536    void SCROLLBAR_SetValue(SCROLLBAR_Handle hObj, int v) {
0003d4  e92d41f0          PUSH     {r4-r8,lr}
0003d8  4607              MOV      r7,r0
0003da  460d              MOV      r5,r1
;;;537      SCROLLBAR_Obj* pObj;
;;;538      int Max;
;;;539      if (hObj) {
0003dc  b1ef              CBZ      r7,|L1.1050|
;;;540        WM_LOCK();
;;;541        pObj = SCROLLBAR_H2P(hObj);
0003de  4638              MOV      r0,r7
0003e0  f7fffffe          BL       GUI_ALLOC_h2p
0003e4  4604              MOV      r4,r0
;;;542        Max = pObj->NumItems - pObj->PageSize;
0003e6  6c21              LDR      r1,[r4,#0x40]
0003e8  6ba0              LDR      r0,[r4,#0x38]
0003ea  eba00601          SUB      r6,r0,r1
;;;543        if (Max < 0)
0003ee  2e00              CMP      r6,#0
0003f0  da01              BGE      |L1.1014|
;;;544          Max =0;
0003f2  f04f0600          MOV      r6,#0
                  |L1.1014|
;;;545        /* Put in min/max range */
;;;546        if (v < 0) {
0003f6  2d00              CMP      r5,#0
0003f8  da01              BGE      |L1.1022|
;;;547          v = 0;
0003fa  f04f0500          MOV      r5,#0
                  |L1.1022|
;;;548        }
;;;549        if (v > Max) {
0003fe  42b5              CMP      r5,r6
000400  dd00              BLE      |L1.1028|
;;;550          v = Max;
000402  4635              MOV      r5,r6
                  |L1.1028|
;;;551        }
;;;552        if (pObj->v != v) {
000404  6be0              LDR      r0,[r4,#0x3c]
000406  42a8              CMP      r0,r5
000408  d007              BEQ      |L1.1050|
;;;553          pObj->v = v;
00040a  63e5              STR      r5,[r4,#0x3c]
;;;554          WM_InvalidateWindow(hObj);
00040c  4638              MOV      r0,r7
00040e  f7fffffe          BL       WM_InvalidateWindow
;;;555          WM_NotifyParent(hObj, WM_NOTIFICATION_VALUE_CHANGED);
000412  2105              MOVS     r1,#5
000414  4638              MOV      r0,r7
000416  f7fffffe          BL       WM_NotifyParent
                  |L1.1050|
;;;556        }
;;;557        WM_UNLOCK();
;;;558      }
;;;559    }
00041a  e8bd81f0          POP      {r4-r8,pc}
;;;560    
                          ENDP

                  _OnTouch PROC
;;;288    */
;;;289    static void _OnTouch(SCROLLBAR_Handle hObj, SCROLLBAR_Obj* pObj, WM_MESSAGE*pMsg) {
00041e  e92d47f0          PUSH     {r4-r10,lr}
000422  b08a              SUB      sp,sp,#0x28
000424  4681              MOV      r9,r0
000426  460c              MOV      r4,r1
000428  4690              MOV      r8,r2
;;;290      SCROLLBAR_POSITIONS Pos;
;;;291      GUI_PID_STATE* pState = (GUI_PID_STATE*)pMsg->Data.p;
00042a  f8d86008          LDR      r6,[r8,#8]
;;;292      if (pMsg->Data.p) {  /* Something happened in our area (pressed or released) */
00042e  f8d80008          LDR      r0,[r8,#8]
000432  2800              CMP      r0,#0
000434  d05d              BEQ      |L1.1266|
;;;293        if (pState->Pressed) {
000436  7a30              LDRB     r0,[r6,#8]
000438  2800              CMP      r0,#0
00043a  d052              BEQ      |L1.1250|
;;;294          int Sel;
;;;295          int Range;
;;;296          int x;
;;;297          Sel = pObj->v;
00043c  6be7              LDR      r7,[r4,#0x3c]
;;;298          _CalcPositions(pObj, &Pos);
00043e  a901              ADD      r1,sp,#4
000440  4620              MOV      r0,r4
000442  f7fffffe          BL       _CalcPositions
;;;299          Range = pObj->NumItems - pObj->PageSize;
000446  6c21              LDR      r1,[r4,#0x40]
000448  6ba0              LDR      r0,[r4,#0x38]
00044a  eba00a01          SUB      r10,r0,r1
;;;300          /* Swap mouse coordinates if necessary */
;;;301          if (pObj->Widget.State & WIDGET_STATE_VERTICAL) {
00044e  8ce0              LDRH     r0,[r4,#0x26]
000450  f0100f08          TST      r0,#8
000454  d004              BEQ      |L1.1120|
;;;302            int t = pState->x;
000456  6830              LDR      r0,[r6,#0]
;;;303            pState->x = pState->y;
000458  6871              LDR      r1,[r6,#4]
00045a  6031              STR      r1,[r6,#0]
;;;304            pState->y = t;
00045c  6070              STR      r0,[r6,#4]
;;;305          }
00045e  bf00              NOP      
                  |L1.1120|
;;;306          x = pState->x;
000460  6835              LDR      r5,[r6,#0]
;;;307          if (x <= Pos.x1_LeftArrow) {         /* left arrow (line left) */
000462  9802              LDR      r0,[sp,#8]
000464  42a8              CMP      r0,r5
000466  db02              BLT      |L1.1134|
;;;308            Sel--;
000468  f1a70701          SUB      r7,r7,#1
00046c  e028              B        |L1.1216|
                  |L1.1134|
;;;309          } else if (x < Pos.x0_Thumb) {       /* left area  (page left) */
00046e  9803              LDR      r0,[sp,#0xc]
000470  42a8              CMP      r0,r5
000472  dd03              BLE      |L1.1148|
;;;310            Sel -= pObj->PageSize;
000474  6c20              LDR      r0,[r4,#0x40]
000476  eba70700          SUB      r7,r7,r0
00047a  e021              B        |L1.1216|
                  |L1.1148|
;;;311          } else if (x <= Pos.x1_Thumb) {      /* Thumb area */
00047c  9804              LDR      r0,[sp,#0x10]
00047e  42a8              CMP      r0,r5
000480  db13              BLT      |L1.1194|
;;;312            if (Pos.xSizeMoveable > 0) {
000482  9808              LDR      r0,[sp,#0x20]
000484  2800              CMP      r0,#0
000486  dd1b              BLE      |L1.1216|
;;;313              x = x - Pos.ThumbSize/2 - Pos.x1_LeftArrow-1;
000488  9809              LDR      r0,[sp,#0x24]
00048a  eb0071d0          ADD      r1,r0,r0,LSR #31
00048e  eba50161          SUB      r1,r5,r1,ASR #1
000492  9a02              LDR      r2,[sp,#8]
000494  eba10102          SUB      r1,r1,r2
000498  f1a10501          SUB      r5,r1,#1
;;;314              Sel = GUI__DivideRound(Range * x, Pos.xSizeMoveable);
00049c  fb0af005          MUL      r0,r10,r5
0004a0  9908              LDR      r1,[sp,#0x20]
0004a2  f7fffffe          BL       GUI__DivideRound
0004a6  4607              MOV      r7,r0
0004a8  e00a              B        |L1.1216|
                  |L1.1194|
;;;315            }
;;;316          } else if (x < Pos.x0_RightArrow) {  /* right area (page right) */
0004aa  9805              LDR      r0,[sp,#0x14]
0004ac  42a8              CMP      r0,r5
0004ae  dd02              BLE      |L1.1206|
;;;317            Sel += pObj->PageSize;
0004b0  6c20              LDR      r0,[r4,#0x40]
0004b2  4407              ADD      r7,r7,r0
0004b4  e004              B        |L1.1216|
                  |L1.1206|
;;;318          } else  if (x <= Pos.x1_RightArrow) {
0004b6  9806              LDR      r0,[sp,#0x18]
0004b8  42a8              CMP      r0,r5
0004ba  db01              BLT      |L1.1216|
;;;319            Sel++;
0004bc  f1070701          ADD      r7,r7,#1
                  |L1.1216|
;;;320          }
;;;321          /* WM_SetFocus(hObj); */
;;;322          WM_SetCapture(hObj, 1);
0004c0  2101              MOVS     r1,#1
0004c2  4648              MOV      r0,r9
0004c4  f7fffffe          BL       WM_SetCapture
;;;323          SCROLLBAR_SetValue(hObj, Sel);
0004c8  4639              MOV      r1,r7
0004ca  4648              MOV      r0,r9
0004cc  f7fffffe          BL       SCROLLBAR_SetValue
;;;324          if ((pObj->Widget.State & SCROLLBAR_STATE_PRESSED) == 0){   
0004d0  8ce0              LDRH     r0,[r4,#0x26]
0004d2  f4107f80          TST      r0,#0x100
0004d6  d103              BNE      |L1.1248|
;;;325            _ScrollbarPressed(hObj, pObj);
0004d8  4621              MOV      r1,r4
0004da  4648              MOV      r0,r9
0004dc  f7fffffe          BL       _ScrollbarPressed
                  |L1.1248|
;;;326          }
;;;327        } else {
0004e0  e007              B        |L1.1266|
                  |L1.1250|
;;;328          /* React only if button was pressed before ... avoid problems with moving / hiding windows above (such as dropdown) */
;;;329          if (pObj->Widget.State & SCROLLBAR_STATE_PRESSED) {   
0004e2  8ce0              LDRH     r0,[r4,#0x26]
0004e4  f4107f80          TST      r0,#0x100
0004e8  d003              BEQ      |L1.1266|
;;;330            _ScrollbarReleased(hObj, pObj);
0004ea  4621              MOV      r1,r4
0004ec  4648              MOV      r0,r9
0004ee  f7fffffe          BL       _ScrollbarReleased
                  |L1.1266|
;;;331          }
;;;332        }
;;;333      }
;;;334    }
0004f2  b00a              ADD      sp,sp,#0x28
0004f4  e8bd87f0          POP      {r4-r10,pc}
;;;335    
                          ENDP

                  SCROLLBAR_AddValue PROC
;;;521    */
;;;522    void SCROLLBAR_AddValue(SCROLLBAR_Handle hObj, int Add) {
0004f8  b570              PUSH     {r4-r6,lr}
0004fa  4604              MOV      r4,r0
0004fc  460d              MOV      r5,r1
;;;523      SCROLLBAR_Obj* pObj;
;;;524      if (hObj) {
0004fe  b14c              CBZ      r4,|L1.1300|
;;;525        WM_LOCK();
;;;526        pObj = SCROLLBAR_H2P(hObj);
000500  4620              MOV      r0,r4
000502  f7fffffe          BL       GUI_ALLOC_h2p
000506  4606              MOV      r6,r0
;;;527        SCROLLBAR_SetValue(hObj, pObj->v + Add);
000508  6bf0              LDR      r0,[r6,#0x3c]
00050a  eb000105          ADD      r1,r0,r5
00050e  4620              MOV      r0,r4
000510  f7fffffe          BL       SCROLLBAR_SetValue
                  |L1.1300|
;;;528        WM_UNLOCK();
;;;529      }
;;;530    }
000514  bd70              POP      {r4-r6,pc}
;;;531    
                          ENDP

                  SCROLLBAR_Dec PROC
;;;505    */
;;;506    void SCROLLBAR_Dec(SCROLLBAR_Handle hObj) {
000516  b510              PUSH     {r4,lr}
000518  4604              MOV      r4,r0
;;;507      SCROLLBAR_AddValue(hObj, -1);
00051a  f04f31ff          MOV      r1,#0xffffffff
00051e  4620              MOV      r0,r4
000520  f7fffffe          BL       SCROLLBAR_AddValue
;;;508    }
000524  bd10              POP      {r4,pc}
;;;509    
                          ENDP

                  SCROLLBAR_Inc PROC
;;;513    */
;;;514    void SCROLLBAR_Inc(SCROLLBAR_Handle hObj) {
000526  b510              PUSH     {r4,lr}
000528  4604              MOV      r4,r0
;;;515      SCROLLBAR_AddValue(hObj,  1);
00052a  f04f0101          MOV      r1,#1
00052e  4620              MOV      r0,r4
000530  f7fffffe          BL       SCROLLBAR_AddValue
;;;516    }
000534  bd10              POP      {r4,pc}
;;;517    
                          ENDP

                  _OnKey PROC
;;;339    */
;;;340    static void  _OnKey(SCROLLBAR_Handle hObj, WM_MESSAGE*pMsg) {
000536  e92d41f0          PUSH     {r4-r8,lr}
00053a  4606              MOV      r6,r0
00053c  460c              MOV      r4,r1
;;;341      const WM_KEY_INFO* pKeyInfo;
;;;342      int Key;
;;;343      pKeyInfo = (const WM_KEY_INFO*)(pMsg->Data.p);
00053e  68a5              LDR      r5,[r4,#8]
;;;344      Key = pKeyInfo->Key;
000540  682f              LDR      r7,[r5,#0]
;;;345      if (pKeyInfo->PressedCnt > 0) {
000542  6868              LDR      r0,[r5,#4]
000544  2800              CMP      r0,#0
000546  dd15              BLE      |L1.1396|
;;;346        switch (Key) {
000548  2f10              CMP      r7,#0x10
00054a  d00b              BEQ      |L1.1380|
00054c  2f11              CMP      r7,#0x11
00054e  d00a              BEQ      |L1.1382|
000550  2f12              CMP      r7,#0x12
000552  d002              BEQ      |L1.1370|
000554  2f13              CMP      r7,#0x13
000556  d10a              BNE      |L1.1390|
000558  e000              B        |L1.1372|
                  |L1.1370|
;;;347          case GUI_KEY_RIGHT:
;;;348          case GUI_KEY_DOWN:
00055a  bf00              NOP      
                  |L1.1372|
;;;349            SCROLLBAR_Inc(hObj);
00055c  4630              MOV      r0,r6
00055e  f7fffffe          BL       SCROLLBAR_Inc
;;;350            break;                    /* Send to parent by not doing anything */
000562  e006              B        |L1.1394|
                  |L1.1380|
;;;351          case GUI_KEY_LEFT:
;;;352          case GUI_KEY_UP:
000564  bf00              NOP      
                  |L1.1382|
;;;353            SCROLLBAR_Dec(hObj);
000566  4630              MOV      r0,r6
000568  f7fffffe          BL       SCROLLBAR_Dec
;;;354            break;                    /* Send to parent by not doing anything */
00056c  e001              B        |L1.1394|
                  |L1.1390|
;;;355          default:
;;;356            return;
;;;357        }
;;;358      }
;;;359    }
00056e  e8bd81f0          POP      {r4-r8,pc}
                  |L1.1394|
000572  bf00              NOP                            ;350
                  |L1.1396|
000574  bf00              NOP      
000576  e7fa              B        |L1.1390|
;;;360    
                          ENDP

                  _OnSetScrollState PROC
;;;364    */
;;;365    static void _OnSetScrollState(SCROLLBAR_Handle hObj, SCROLLBAR_Obj* pObj, const WM_SCROLL_STATE* pState) {
000578  b570              PUSH     {r4-r6,lr}
00057a  4606              MOV      r6,r0
00057c  460c              MOV      r4,r1
00057e  4615              MOV      r5,r2
;;;366      if (  (pState->NumItems != pObj->NumItems)
000580  6828              LDR      r0,[r5,#0]
000582  6ba1              LDR      r1,[r4,#0x38]
000584  4288              CMP      r0,r1
000586  d107              BNE      |L1.1432|
;;;367          || (pObj->PageSize   != pState->PageSize)
000588  6c20              LDR      r0,[r4,#0x40]
00058a  68a9              LDR      r1,[r5,#8]
00058c  4288              CMP      r0,r1
00058e  d103              BNE      |L1.1432|
;;;368          || (pObj->v          != pState->v))
000590  6be0              LDR      r0,[r4,#0x3c]
000592  6869              LDR      r1,[r5,#4]
000594  4288              CMP      r0,r1
000596  d008              BEQ      |L1.1450|
                  |L1.1432|
;;;369      {
;;;370        pObj->NumItems = pState->NumItems;
000598  6828              LDR      r0,[r5,#0]
00059a  63a0              STR      r0,[r4,#0x38]
;;;371        pObj->PageSize = pState->PageSize;
00059c  68a8              LDR      r0,[r5,#8]
00059e  6420              STR      r0,[r4,#0x40]
;;;372        pObj->v        = pState->v;
0005a0  6868              LDR      r0,[r5,#4]
0005a2  63e0              STR      r0,[r4,#0x3c]
;;;373        WM_InvalidateWindow(hObj);
0005a4  4630              MOV      r0,r6
0005a6  f7fffffe          BL       WM_InvalidateWindow
                  |L1.1450|
;;;374      }
;;;375    }
0005aa  bd70              POP      {r4-r6,pc}
;;;376    
                          ENDP

                  SCROLLBAR__InvalidatePartner PROC
;;;380    */
;;;381    void SCROLLBAR__InvalidatePartner(SCROLLBAR_Handle hObj) {     /* Invalidate the partner, since it is also affected */
0005ac  b570              PUSH     {r4-r6,lr}
0005ae  4604              MOV      r4,r0
;;;382      WM_InvalidateWindow(WM_GetScrollPartner(hObj));
0005b0  4620              MOV      r0,r4
0005b2  f7fffffe          BL       WM_GetScrollPartner
0005b6  4605              MOV      r5,r0
0005b8  f7fffffe          BL       WM_InvalidateWindow
;;;383      WM_SendMessageNoPara(WM_GetParent(hObj), WM_NOTIFY_CLIENTCHANGE);   /* Client area may have changed */
0005bc  4620              MOV      r0,r4
0005be  f7fffffe          BL       WM_GetParent
0005c2  4605              MOV      r5,r0
0005c4  2125              MOVS     r1,#0x25
0005c6  f7fffffe          BL       WM_SendMessageNoPara
;;;384    }
0005ca  bd70              POP      {r4-r6,pc}
;;;385    
                          ENDP

                  _SCROLLBAR_Callback PROC
;;;389    */
;;;390    static void _SCROLLBAR_Callback (WM_MESSAGE *pMsg) {
0005cc  b570              PUSH     {r4-r6,lr}
0005ce  4604              MOV      r4,r0
;;;391      SCROLLBAR_Handle hObj;
;;;392      SCROLLBAR_Obj* pObj;
;;;393      hObj = pMsg->hWin;
0005d0  f9b46004          LDRSH    r6,[r4,#4]
;;;394      pObj = SCROLLBAR_H2P(hObj);
0005d4  4630              MOV      r0,r6
0005d6  f7fffffe          BL       GUI_ALLOC_h2p
0005da  4605              MOV      r5,r0
;;;395      /* Let widget handle the standard messages */
;;;396      if (WIDGET_HandleActive(hObj, pMsg) == 0) {
0005dc  4621              MOV      r1,r4
0005de  4630              MOV      r0,r6
0005e0  f7fffffe          BL       WIDGET_HandleActive
0005e4  b900              CBNZ     r0,|L1.1512|
                  |L1.1510|
;;;397        return;
;;;398      }
;;;399      switch (pMsg->MsgId) {
;;;400      case WM_DELETE:
;;;401        SCROLLBAR__InvalidatePartner(hObj);
;;;402        break;
;;;403      case WM_PAINT:
;;;404        GUI_DEBUG_LOG("SCROLLBAR: _Callback(WM_PAINT)\n");
;;;405        _Paint(pObj);
;;;406        return;
;;;407      case WM_TOUCH:
;;;408        _OnTouch(hObj, pObj, pMsg);
;;;409        break;
;;;410      case WM_KEY:
;;;411        _OnKey(hObj, pMsg);
;;;412        break;
;;;413      case WM_SET_SCROLL_STATE:
;;;414        _OnSetScrollState(hObj, pObj, (const WM_SCROLL_STATE*)pMsg->Data.p);
;;;415        break;
;;;416      case WM_GET_SCROLL_STATE:
;;;417        ((WM_SCROLL_STATE*)pMsg->Data.p)->NumItems = pObj->NumItems;
;;;418        ((WM_SCROLL_STATE*)pMsg->Data.p)->PageSize = pObj->PageSize;
;;;419        ((WM_SCROLL_STATE*)pMsg->Data.p)->v        = pObj->v;
;;;420        break;
;;;421      }
;;;422      WM_DefaultProc(pMsg);
;;;423    }
0005e6  bd70              POP      {r4-r6,pc}
                  |L1.1512|
0005e8  6820              LDR      r0,[r4,#0]            ;399
0005ea  280f              CMP      r0,#0xf               ;399
0005ec  d010              BEQ      |L1.1552|
0005ee  dc06              BGT      |L1.1534|
0005f0  280b              CMP      r0,#0xb               ;399
0005f2  d009              BEQ      |L1.1544|
0005f4  280c              CMP      r0,#0xc               ;399
0005f6  d00f              BEQ      |L1.1560|
0005f8  280e              CMP      r0,#0xe               ;399
0005fa  d128              BNE      |L1.1614|
0005fc  e012              B        |L1.1572|
                  |L1.1534|
0005fe  2823              CMP      r0,#0x23              ;399
000600  d01b              BEQ      |L1.1594|
000602  2824              CMP      r0,#0x24              ;399
000604  d123              BNE      |L1.1614|
000606  e012              B        |L1.1582|
                  |L1.1544|
000608  4630              MOV      r0,r6                 ;401
00060a  f7fffffe          BL       SCROLLBAR__InvalidatePartner
00060e  e01e              B        |L1.1614|
                  |L1.1552|
000610  4628              MOV      r0,r5                 ;405
000612  f7fffffe          BL       _Paint
000616  e7e6              B        |L1.1510|
                  |L1.1560|
000618  4622              MOV      r2,r4                 ;408
00061a  4629              MOV      r1,r5                 ;408
00061c  4630              MOV      r0,r6                 ;408
00061e  f7fffffe          BL       _OnTouch
000622  e014              B        |L1.1614|
                  |L1.1572|
000624  4621              MOV      r1,r4                 ;411
000626  4630              MOV      r0,r6                 ;411
000628  f7fffffe          BL       _OnKey
00062c  e00f              B        |L1.1614|
                  |L1.1582|
00062e  4629              MOV      r1,r5                 ;414
000630  4630              MOV      r0,r6                 ;414
000632  68a2              LDR      r2,[r4,#8]            ;414
000634  f7fffffe          BL       _OnSetScrollState
000638  e009              B        |L1.1614|
                  |L1.1594|
00063a  6ba8              LDR      r0,[r5,#0x38]         ;417
00063c  68a1              LDR      r1,[r4,#8]            ;417
00063e  6008              STR      r0,[r1,#0]            ;417
000640  6c28              LDR      r0,[r5,#0x40]         ;418
000642  68a1              LDR      r1,[r4,#8]            ;418
000644  6088              STR      r0,[r1,#8]            ;418
000646  6be8              LDR      r0,[r5,#0x3c]         ;419
000648  68a1              LDR      r1,[r4,#8]            ;419
00064a  6048              STR      r0,[r1,#4]            ;419
00064c  bf00              NOP                            ;420
                  |L1.1614|
00064e  bf00              NOP                            ;402
000650  4620              MOV      r0,r4                 ;422
000652  f7fffffe          BL       WM_DefaultProc
000656  bf00              NOP      
000658  e7c5              B        |L1.1510|
;;;424    
                          ENDP

                  SCROLLBAR_CreateEx PROC
;;;438    */
;;;439    SCROLLBAR_Handle SCROLLBAR_CreateEx(int x0, int y0, int xsize, int ysize, WM_HWIN hParent,
00065a  e92d4fff          PUSH     {r0-r11,lr}
;;;440                                        int WinFlags, int ExFlags, int Id)
;;;441    {
00065e  b085              SUB      sp,sp,#0x14
000660  4616              MOV      r6,r2
000662  461f              MOV      r7,r3
000664  f8ddb048          LDR      r11,[sp,#0x48]
000668  e9dd8914          LDRD     r8,r9,[sp,#0x50]
;;;442      SCROLLBAR_Handle hObj;
;;;443      WM_LOCK();
;;;444      /* Set defaults if necessary */
;;;445      if ((xsize == 0) && (ysize == 0)) {
00066c  bb9e              CBNZ     r6,|L1.1750|
00066e  bb97              CBNZ     r7,|L1.1750|
;;;446        GUI_RECT Rect;
;;;447        WM_GetInsideRectEx(hParent, &Rect);
000670  a903              ADD      r1,sp,#0xc
000672  4658              MOV      r0,r11
000674  f7fffffe          BL       WM_GetInsideRectEx
;;;448        if (ExFlags & SCROLLBAR_CF_VERTICAL) {
000678  f0180f08          TST      r8,#8
00067c  d015              BEQ      |L1.1706|
;;;449          xsize = SCROLLBAR__DefaultWidth;
00067e  4854              LDR      r0,|L1.2000|
000680  f9b06000          LDRSH    r6,[r0,#0]  ; SCROLLBAR__DefaultWidth
;;;450          x0    = Rect.x1 + 1 - xsize;
000684  f9bd0010          LDRSH    r0,[sp,#0x10]
000688  f1000001          ADD      r0,r0,#1
00068c  eba00006          SUB      r0,r0,r6
000690  9005              STR      r0,[sp,#0x14]
;;;451          y0    = Rect.y0;
000692  f9bd000e          LDRSH    r0,[sp,#0xe]
000696  9006              STR      r0,[sp,#0x18]
;;;452          ysize = Rect.y1 - Rect.y0 + 1;
000698  f9bd0012          LDRSH    r0,[sp,#0x12]
00069c  f9bd100e          LDRSH    r1,[sp,#0xe]
0006a0  eba00001          SUB      r0,r0,r1
0006a4  f1000701          ADD      r7,r0,#1
0006a8  e014              B        |L1.1748|
                  |L1.1706|
;;;453        } else {
;;;454          ysize = SCROLLBAR__DefaultWidth;
0006aa  4849              LDR      r0,|L1.2000|
0006ac  f9b07000          LDRSH    r7,[r0,#0]  ; SCROLLBAR__DefaultWidth
;;;455          y0    = Rect.y1 + 1 - ysize;
0006b0  f9bd0012          LDRSH    r0,[sp,#0x12]
0006b4  f1000001          ADD      r0,r0,#1
0006b8  eba00007          SUB      r0,r0,r7
0006bc  9006              STR      r0,[sp,#0x18]
;;;456          x0    = Rect.x0;
0006be  f9bd000c          LDRSH    r0,[sp,#0xc]
0006c2  9005              STR      r0,[sp,#0x14]
;;;457          xsize = Rect.x1 - Rect.x0 + 1;
0006c4  f9bd0010          LDRSH    r0,[sp,#0x10]
0006c8  f9bd100c          LDRSH    r1,[sp,#0xc]
0006cc  eba00001          SUB      r0,r0,r1
0006d0  f1000601          ADD      r6,r0,#1
                  |L1.1748|
;;;458        }
;;;459      }
0006d4  bf00              NOP      
                  |L1.1750|
;;;460      /* Create the window */
;;;461      hObj = WM_CreateWindowAsChild(x0, y0, xsize, ysize, hParent, WinFlags, _SCROLLBAR_Callback,
0006d6  2124              MOVS     r1,#0x24
0006d8  4a3e              LDR      r2,|L1.2004|
0006da  9813              LDR      r0,[sp,#0x4c]
0006dc  b280              UXTH     r0,r0
0006de  463b              MOV      r3,r7
0006e0  e9cdb000          STRD     r11,r0,[sp,#0]
0006e4  e9cd2102          STRD     r2,r1,[sp,#8]
0006e8  4632              MOV      r2,r6
0006ea  e9dd0105          LDRD     r0,r1,[sp,#0x14]
0006ee  f7fffffe          BL       WM_CreateWindowAsChild
0006f2  4682              MOV      r10,r0
;;;462                                    sizeof(SCROLLBAR_Obj) - sizeof(WM_Obj));
;;;463      if (hObj) {
0006f4  f1ba0f00          CMP      r10,#0
0006f8  d035              BEQ      |L1.1894|
;;;464        SCROLLBAR_Obj* pObj = SCROLLBAR_H2P(hObj);
0006fa  4650              MOV      r0,r10
0006fc  f7fffffe          BL       GUI_ALLOC_h2p
000700  4604              MOV      r4,r0
;;;465        U16 InitState;
;;;466        /* Handle SpecialFlags */
;;;467        InitState = 0;
000702  f04f0500          MOV      r5,#0
;;;468        if (ExFlags & SCROLLBAR_CF_VERTICAL) {
000706  f0180f08          TST      r8,#8
00070a  d001              BEQ      |L1.1808|
;;;469          InitState |= WIDGET_CF_VERTICAL;
00070c  f0450508          ORR      r5,r5,#8
                  |L1.1808|
;;;470        }
;;;471        if (ExFlags & SCROLLBAR_CF_FOCUSSABLE) {
000710  f0180f10          TST      r8,#0x10
000714  d001              BEQ      |L1.1818|
;;;472          InitState |= WIDGET_STATE_FOCUSSABLE;
000716  f0450510          ORR      r5,r5,#0x10
                  |L1.1818|
;;;473        }
;;;474        if ((Id != GUI_ID_HSCROLL) && (Id != GUI_ID_VSCROLL)) {
00071a  f1b90fff          CMP      r9,#0xff
00071e  d004              BEQ      |L1.1834|
000720  f1b90ffe          CMP      r9,#0xfe
000724  d001              BEQ      |L1.1834|
;;;475          InitState |= WIDGET_STATE_FOCUSSABLE;
000726  f0450510          ORR      r5,r5,#0x10
                  |L1.1834|
;;;476        }
;;;477        /* init widget specific variables */
;;;478        WIDGET__Init(&pObj->Widget, Id, InitState);
00072a  462a              MOV      r2,r5
00072c  4649              MOV      r1,r9
00072e  4620              MOV      r0,r4
000730  f7fffffe          BL       WIDGET__Init
;;;479        /* init member variables */
;;;480        SCROLLBAR_INIT_ID(pObj);
;;;481        pObj->aBkColor[0]   = SCROLLBAR__aDefaultBkColor[0];
000734  4828              LDR      r0,|L1.2008|
000736  6800              LDR      r0,[r0,#0]  ; SCROLLBAR__aDefaultBkColor
000738  62a0              STR      r0,[r4,#0x28]
;;;482        pObj->aBkColor[1]   = SCROLLBAR__aDefaultBkColor[1];
00073a  4827              LDR      r0,|L1.2008|
00073c  6841              LDR      r1,[r0,#4]  ; SCROLLBAR__aDefaultBkColor
00073e  62e1              STR      r1,[r4,#0x2c]
;;;483        pObj->aColor[0]     = SCROLLBAR__aDefaultColor[0];
000740  4826              LDR      r0,|L1.2012|
000742  6800              LDR      r0,[r0,#0]  ; SCROLLBAR__aDefaultColor
000744  6320              STR      r0,[r4,#0x30]
;;;484        pObj->aColor[1]     = SCROLLBAR__aDefaultColor[1];
000746  4825              LDR      r0,|L1.2012|
000748  6841              LDR      r1,[r0,#4]  ; SCROLLBAR__aDefaultColor
00074a  6361              STR      r1,[r4,#0x34]
;;;485        pObj->NumItems      = 100;
00074c  f04f0064          MOV      r0,#0x64
000750  63a0              STR      r0,[r4,#0x38]
;;;486        pObj->PageSize      =  10;
000752  f04f000a          MOV      r0,#0xa
000756  6420              STR      r0,[r4,#0x40]
;;;487        pObj->v             =   0;
000758  f04f0000          MOV      r0,#0
00075c  63e0              STR      r0,[r4,#0x3c]
;;;488        SCROLLBAR__InvalidatePartner(hObj);
00075e  4650              MOV      r0,r10
000760  f7fffffe          BL       SCROLLBAR__InvalidatePartner
;;;489      } else {
000764  bf00              NOP      
                  |L1.1894|
;;;490        GUI_DEBUG_ERROROUT_IF(hObj==0, "SCROLLBAR_Create failed")
;;;491      }
;;;492      WM_UNLOCK();
;;;493      return hObj;
000766  4650              MOV      r0,r10
;;;494    }
000768  b009              ADD      sp,sp,#0x24
00076a  e8bd8ff0          POP      {r4-r11,pc}
;;;495    
                          ENDP

                  SCROLLBAR_SetNumItems PROC
;;;564    */
;;;565    void SCROLLBAR_SetNumItems(SCROLLBAR_Handle hObj, int NumItems) {
00076e  b570              PUSH     {r4-r6,lr}
000770  4606              MOV      r6,r0
000772  460d              MOV      r5,r1
;;;566      SCROLLBAR_Obj* pObj;
;;;567      if (hObj) {
000774  b156              CBZ      r6,|L1.1932|
;;;568        WM_LOCK();
;;;569        pObj = SCROLLBAR_H2P(hObj);
000776  4630              MOV      r0,r6
000778  f7fffffe          BL       GUI_ALLOC_h2p
00077c  4604              MOV      r4,r0
;;;570        if (pObj->NumItems != NumItems) {
00077e  6ba0              LDR      r0,[r4,#0x38]
000780  42a8              CMP      r0,r5
000782  d003              BEQ      |L1.1932|
;;;571          pObj->NumItems = NumItems;
000784  63a5              STR      r5,[r4,#0x38]
;;;572          WM_InvalidateWindow(hObj);
000786  4630              MOV      r0,r6
000788  f7fffffe          BL       WM_InvalidateWindow
                  |L1.1932|
;;;573        }
;;;574        WM_UNLOCK();
;;;575      }
;;;576    }
00078c  bd70              POP      {r4-r6,pc}
;;;577    
                          ENDP

                  SCROLLBAR_SetPageSize PROC
;;;581    */
;;;582    void SCROLLBAR_SetPageSize(SCROLLBAR_Handle hObj, int PageSize) {
00078e  b570              PUSH     {r4-r6,lr}
000790  4606              MOV      r6,r0
000792  460d              MOV      r5,r1
;;;583      SCROLLBAR_Obj* pObj;
;;;584      if (hObj) {
000794  b156              CBZ      r6,|L1.1964|
;;;585        WM_LOCK();
;;;586        pObj = SCROLLBAR_H2P(hObj);
000796  4630              MOV      r0,r6
000798  f7fffffe          BL       GUI_ALLOC_h2p
00079c  4604              MOV      r4,r0
;;;587        if (pObj->PageSize != PageSize) {
00079e  6c20              LDR      r0,[r4,#0x40]
0007a0  42a8              CMP      r0,r5
0007a2  d003              BEQ      |L1.1964|
;;;588          pObj->PageSize = PageSize;
0007a4  6425              STR      r5,[r4,#0x40]
;;;589          WM_InvalidateWindow(hObj);
0007a6  4630              MOV      r0,r6
0007a8  f7fffffe          BL       WM_InvalidateWindow
                  |L1.1964|
;;;590        }
;;;591        WM_UNLOCK();
;;;592      }
;;;593    }
0007ac  bd70              POP      {r4-r6,pc}
;;;594    
                          ENDP

                  SCROLLBAR_SetState PROC
;;;598    */
;;;599    void  SCROLLBAR_SetState   (SCROLLBAR_Handle hObj, const WM_SCROLL_STATE* pState) {
0007ae  b570              PUSH     {r4-r6,lr}
0007b0  4605              MOV      r5,r0
0007b2  460c              MOV      r4,r1
;;;600      if (hObj) {
0007b4  b15d              CBZ      r5,|L1.1998|
;;;601        SCROLLBAR_SetPageSize(hObj, pState->PageSize);
0007b6  4628              MOV      r0,r5
0007b8  68a1              LDR      r1,[r4,#8]
0007ba  f7fffffe          BL       SCROLLBAR_SetPageSize
;;;602        SCROLLBAR_SetNumItems(hObj, pState->NumItems);
0007be  4628              MOV      r0,r5
0007c0  6821              LDR      r1,[r4,#0]
0007c2  f7fffffe          BL       SCROLLBAR_SetNumItems
;;;603        SCROLLBAR_SetValue   (hObj, pState->v);
0007c6  4628              MOV      r0,r5
0007c8  6861              LDR      r1,[r4,#4]
0007ca  f7fffffe          BL       SCROLLBAR_SetValue
                  |L1.1998|
;;;604      }
;;;605    }
0007ce  bd70              POP      {r4-r6,pc}
;;;606    
                          ENDP

                  |L1.2000|
                          DCD      SCROLLBAR__DefaultWidth
                  |L1.2004|
                          DCD      _SCROLLBAR_Callback
                  |L1.2008|
                          DCD      SCROLLBAR__aDefaultBkColor
                  |L1.2012|
                          DCD      SCROLLBAR__aDefaultColor

                          AREA ||.data||, DATA, ALIGN=2

                  SCROLLBAR__aDefaultBkColor
                          DCD      0x00808080
                          DCD      0x00000000
                  SCROLLBAR__aDefaultColor
                          DCD      0x00c0c0c0
                          DCD      0x00000000
                  SCROLLBAR__DefaultWidth
000010  000b              DCW      0x000b

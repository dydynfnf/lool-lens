; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\fsmc_sram.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\fsmc_sram.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\FWlib\inc -I.\user -I.\CM3 -I.\MALLOC -I.\TFT -I.\EMWIN\EMWIN_INC -I.\EMWIN\DEMO -I"E:\material\GUI\STM32奋斗板-emwin lcos\RTE" -Id:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.1.0\Device\Include -Id:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=515 -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\fsmc_sram.crf TFT\fsmc_sram.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  FSMC_LCD_Init PROC
;;;29     ****************************************************************************/
;;;30     void FSMC_LCD_Init(void)
000000  b500              PUSH     {lr}
;;;31     {
000002  b097              SUB      sp,sp,#0x5c
;;;32       FSMC_NORSRAMInitTypeDef  FSMC_NORSRAMInitStructure;
;;;33       FSMC_NORSRAMTimingInitTypeDef  p;
;;;34       GPIO_InitTypeDef  GPIO_InitStructure; 
;;;35     
;;;36       RCC_AHBPeriphClockCmd(RCC_AHBPeriph_FSMC, ENABLE);	   //使能FSMC接口时钟
000004  2101              MOVS     r1,#1
000006  0208              LSLS     r0,r1,#8
000008  f7fffffe          BL       RCC_AHBPeriphClockCmd
;;;37       
;;;38       GPIO_InitStructure.GPIO_Pin = GPIO_Pin_13;			   //背光控制	       
00000c  f44f5000          MOV      r0,#0x2000
000010  f8ad0000          STRH     r0,[sp,#0]
;;;39       GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;		   //通用推挽输出模式
000014  2010              MOVS     r0,#0x10
000016  f88d0003          STRB     r0,[sp,#3]
;;;40       GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;		   //输出模式最大速度50MHz
00001a  2003              MOVS     r0,#3
00001c  f88d0002          STRB     r0,[sp,#2]
;;;41       GPIO_Init(GPIOD, &GPIO_InitStructure);    
000020  4669              MOV      r1,sp
000022  4840              LDR      r0,|L1.292|
000024  f7fffffe          BL       GPIO_Init
;;;42       GPIO_SetBits(GPIOD, GPIO_Pin_13);			               //打开背光
000028  f44f5100          MOV      r1,#0x2000
00002c  483d              LDR      r0,|L1.292|
00002e  f7fffffe          BL       GPIO_SetBits
;;;43     	
;;;44     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_6 | GPIO_Pin_7;	   //lcos控制	       
000032  20c0              MOVS     r0,#0xc0
000034  f8ad0000          STRH     r0,[sp,#0]
;;;45     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;		   //通用推挽输出模式
000038  2010              MOVS     r0,#0x10
00003a  f88d0003          STRB     r0,[sp,#3]
;;;46     	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;		   //输出模式最大速度50MHz
00003e  2003              MOVS     r0,#3
000040  f88d0002          STRB     r0,[sp,#2]
;;;47     	GPIO_Init(GPIOB, &GPIO_InitStructure); 
000044  4669              MOV      r1,sp
000046  4838              LDR      r0,|L1.296|
000048  f7fffffe          BL       GPIO_Init
;;;48     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_5 | GPIO_Pin_6 | GPIO_Pin_7;
00004c  20e0              MOVS     r0,#0xe0
00004e  f8ad0000          STRH     r0,[sp,#0]
;;;49     	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
000052  2003              MOVS     r0,#3
000054  f88d0002          STRB     r0,[sp,#2]
;;;50     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
000058  2018              MOVS     r0,#0x18
00005a  f88d0003          STRB     r0,[sp,#3]
;;;51     	GPIO_Init(GPIOA, &GPIO_InitStructure);	
00005e  4669              MOV      r1,sp
000060  4832              LDR      r0,|L1.300|
000062  f7fffffe          BL       GPIO_Init
;;;52     
;;;53       GPIO_InitStructure.GPIO_Pin = GPIO_Pin_1;                //TFT 复位脚
000066  2002              MOVS     r0,#2
000068  f8ad0000          STRH     r0,[sp,#0]
;;;54       GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;		   //通用推挽输出模式
00006c  2010              MOVS     r0,#0x10
00006e  f88d0003          STRB     r0,[sp,#3]
;;;55       GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;		   //输出模式最大速度50MHz
000072  2003              MOVS     r0,#3
000074  f88d0002          STRB     r0,[sp,#2]
;;;56       GPIO_Init(GPIOE, &GPIO_InitStructure);  
000078  4669              MOV      r1,sp
00007a  482d              LDR      r0,|L1.304|
00007c  f7fffffe          BL       GPIO_Init
;;;57       
;;;58       	
;;;59       /*  启用FSMC复用功能， 定义FSMC D0---D15及nWE, nOE对应的引脚  */
;;;60       /* 设置 PD.00(D2), PD.01(D3), PD.04(nOE), PD.05(nWE), PD.08(D13), PD.09(D14), PD.10(D15),
;;;61          PD.14(D0), PD.15(D1) 为复用上拉 */
;;;62       GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0 | GPIO_Pin_1 | GPIO_Pin_4 | GPIO_Pin_5 |
000080  f24c7033          MOV      r0,#0xc733
000084  f8ad0000          STRH     r0,[sp,#0]
;;;63                                     GPIO_Pin_8 | GPIO_Pin_9 | GPIO_Pin_10 | GPIO_Pin_14 | 
;;;64                                     GPIO_Pin_15;
;;;65       GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;		   //最大速度50MHz
000088  2003              MOVS     r0,#3
00008a  f88d0002          STRB     r0,[sp,#2]
;;;66       GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;		   //复用模式
00008e  2018              MOVS     r0,#0x18
000090  f88d0003          STRB     r0,[sp,#3]
;;;67       GPIO_Init(GPIOD, &GPIO_InitStructure);
000094  4669              MOV      r1,sp
000096  4823              LDR      r0,|L1.292|
000098  f7fffffe          BL       GPIO_Init
;;;68     
;;;69       /* 设置 PE.07(D4), PE.08(D5), PE.09(D6), PE.10(D7), PE.11(D8), PE.12(D9), PE.13(D10),
;;;70          PE.14(D11), PE.15(D12) 为复用上拉 */
;;;71       GPIO_InitStructure.GPIO_Pin = GPIO_Pin_7 | GPIO_Pin_8 | GPIO_Pin_9 | GPIO_Pin_10 | 
00009c  f64f7080          MOV      r0,#0xff80
0000a0  f8ad0000          STRH     r0,[sp,#0]
;;;72                                     GPIO_Pin_11 | GPIO_Pin_12 | GPIO_Pin_13 | GPIO_Pin_14 | 
;;;73                                     GPIO_Pin_15;
;;;74       GPIO_Init(GPIOE, &GPIO_InitStructure); 
0000a4  4669              MOV      r1,sp
0000a6  4822              LDR      r0,|L1.304|
0000a8  f7fffffe          BL       GPIO_Init
;;;75     
;;;76     
;;;77       
;;;78       /* FSMC  NE1 配置 PD7 */
;;;79       GPIO_InitStructure.GPIO_Pin = GPIO_Pin_7; 
0000ac  2080              MOVS     r0,#0x80
0000ae  f8ad0000          STRH     r0,[sp,#0]
;;;80       GPIO_Init(GPIOD, &GPIO_InitStructure);
0000b2  4669              MOV      r1,sp
0000b4  481b              LDR      r0,|L1.292|
0000b6  f7fffffe          BL       GPIO_Init
;;;81       
;;;82       /* FSMC RS配置 PD11-A16 */
;;;83       GPIO_InitStructure.GPIO_Pin = GPIO_Pin_11 ; 
0000ba  f44f6000          MOV      r0,#0x800
0000be  f8ad0000          STRH     r0,[sp,#0]
;;;84       GPIO_Init(GPIOD, &GPIO_InitStructure); 
0000c2  4669              MOV      r1,sp
0000c4  4817              LDR      r0,|L1.292|
0000c6  f7fffffe          BL       GPIO_Init
;;;85     
;;;86       p.FSMC_AddressSetupTime = 0x02;
0000ca  2002              MOVS     r0,#2
0000cc  9001              STR      r0,[sp,#4]
;;;87       p.FSMC_AddressHoldTime = 0x00;
0000ce  2000              MOVS     r0,#0
0000d0  9002              STR      r0,[sp,#8]
;;;88       p.FSMC_DataSetupTime = 0x05;
0000d2  2005              MOVS     r0,#5
0000d4  9003              STR      r0,[sp,#0xc]
;;;89       p.FSMC_BusTurnAroundDuration = 0x00;
0000d6  2000              MOVS     r0,#0
0000d8  9004              STR      r0,[sp,#0x10]
;;;90       p.FSMC_CLKDivision = 0x00;
0000da  9005              STR      r0,[sp,#0x14]
;;;91       p.FSMC_DataLatency = 0x00;
0000dc  9006              STR      r0,[sp,#0x18]
;;;92       p.FSMC_AccessMode = FSMC_AccessMode_B;
0000de  f04f5080          MOV      r0,#0x10000000
0000e2  9007              STR      r0,[sp,#0x1c]
;;;93     
;;;94       FSMC_NORSRAMInitStructure.FSMC_Bank = FSMC_Bank1_NORSRAM1;
0000e4  2000              MOVS     r0,#0
0000e6  9008              STR      r0,[sp,#0x20]
;;;95       FSMC_NORSRAMInitStructure.FSMC_DataAddressMux = FSMC_DataAddressMux_Disable;
0000e8  9009              STR      r0,[sp,#0x24]
;;;96       FSMC_NORSRAMInitStructure.FSMC_MemoryType = FSMC_MemoryType_NOR;
0000ea  2008              MOVS     r0,#8
0000ec  900a              STR      r0,[sp,#0x28]
;;;97       FSMC_NORSRAMInitStructure.FSMC_MemoryDataWidth = FSMC_MemoryDataWidth_16b;
0000ee  2010              MOVS     r0,#0x10
0000f0  900b              STR      r0,[sp,#0x2c]
;;;98       FSMC_NORSRAMInitStructure.FSMC_BurstAccessMode = FSMC_BurstAccessMode_Disable;
0000f2  2000              MOVS     r0,#0
0000f4  900c              STR      r0,[sp,#0x30]
;;;99       FSMC_NORSRAMInitStructure.FSMC_WaitSignalPolarity = FSMC_WaitSignalPolarity_Low;
0000f6  900e              STR      r0,[sp,#0x38]
;;;100      FSMC_NORSRAMInitStructure.FSMC_WrapMode = FSMC_WrapMode_Disable;
0000f8  900f              STR      r0,[sp,#0x3c]
;;;101      FSMC_NORSRAMInitStructure.FSMC_WaitSignalActive = FSMC_WaitSignalActive_BeforeWaitState;
0000fa  9010              STR      r0,[sp,#0x40]
;;;102      FSMC_NORSRAMInitStructure.FSMC_WriteOperation = FSMC_WriteOperation_Enable;
0000fc  f44f5080          MOV      r0,#0x1000
000100  9011              STR      r0,[sp,#0x44]
;;;103      FSMC_NORSRAMInitStructure.FSMC_WaitSignal = FSMC_WaitSignal_Disable;
000102  2000              MOVS     r0,#0
000104  9012              STR      r0,[sp,#0x48]
;;;104      FSMC_NORSRAMInitStructure.FSMC_ExtendedMode = FSMC_ExtendedMode_Disable;
000106  9013              STR      r0,[sp,#0x4c]
;;;105      FSMC_NORSRAMInitStructure.FSMC_WriteBurst = FSMC_WriteBurst_Disable;
000108  9014              STR      r0,[sp,#0x50]
;;;106      FSMC_NORSRAMInitStructure.FSMC_ReadWriteTimingStruct = &p;
00010a  a801              ADD      r0,sp,#4
00010c  9015              STR      r0,[sp,#0x54]
;;;107      FSMC_NORSRAMInitStructure.FSMC_WriteTimingStruct = &p;
00010e  9016              STR      r0,[sp,#0x58]
;;;108      
;;;109      FSMC_NORSRAMInit(&FSMC_NORSRAMInitStructure); 
000110  a808              ADD      r0,sp,#0x20
000112  f7fffffe          BL       FSMC_NORSRAMInit
;;;110    
;;;111      /* 使能FSMC BANK1_SRAM 模式 */
;;;112      FSMC_NORSRAMCmd(FSMC_Bank1_NORSRAM1, ENABLE);  
000116  2101              MOVS     r1,#1
000118  2000              MOVS     r0,#0
00011a  f7fffffe          BL       FSMC_NORSRAMCmd
;;;113    }
00011e  b017              ADD      sp,sp,#0x5c
000120  bd00              POP      {pc}
;;;114    
                          ENDP

000122  0000              DCW      0x0000
                  |L1.292|
                          DCD      0x40011400
                  |L1.296|
                          DCD      0x40010c00
                  |L1.300|
                          DCD      0x40010800
                  |L1.304|
                          DCD      0x40011800

; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\graph.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\graph.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\graph.crf GUI\Widget\GRAPH.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _DrawGrid PROC
;;;91     */
;;;92     static void _DrawGrid(GRAPH_OBJ * pObj, GRAPH_Handle hObj, unsigned BorderL, unsigned BorderT, unsigned BorderR, unsigned BorderB) {
000000  e92d4fff          PUSH     {r0-r11,lr}
000004  b089              SUB      sp,sp,#0x24
000006  4604              MOV      r4,r0
000008  4690              MOV      r8,r2
00000a  469a              MOV      r10,r3
;;;93       GUI_RECT Rect;
;;;94       U8 LineStyleOld;
;;;95       int i, xSize, ySize, xSpace, ySpace, EffectSize;
;;;96       WM_GetInsideRectExScrollbar(hObj, &Rect);
00000c  a907              ADD      r1,sp,#0x1c
00000e  980a              LDR      r0,[sp,#0x28]
000010  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;97       EffectSize = pObj->Widget.pEffect->EffectSize;
000014  6a20              LDR      r0,[r4,#0x20]
000016  6940              LDR      r0,[r0,#0x14]
000018  9003              STR      r0,[sp,#0xc]
;;;98       xSpace = pObj->Props.GridSpacingX;
00001a  6ba6              LDR      r6,[r4,#0x38]
;;;99       ySpace = pObj->Props.GridSpacingY;
00001c  6be7              LDR      r7,[r4,#0x3c]
;;;100      xSize = Rect.x1 - Rect.x0 + 1 - BorderL - BorderR;
00001e  f9bd0020          LDRSH    r0,[sp,#0x20]
000022  f9bd101c          LDRSH    r1,[sp,#0x1c]
000026  eba00001          SUB      r0,r0,r1
00002a  f1000001          ADD      r0,r0,#1
00002e  eba00108          SUB      r1,r0,r8
000032  9816              LDR      r0,[sp,#0x58]
000034  eba10000          SUB      r0,r1,r0
000038  9005              STR      r0,[sp,#0x14]
;;;101      ySize = Rect.y1 - Rect.y0 + 1 - BorderT - BorderB;
00003a  f9bd0022          LDRSH    r0,[sp,#0x22]
00003e  f9bd101e          LDRSH    r1,[sp,#0x1e]
000042  eba00001          SUB      r0,r0,r1
000046  f1000001          ADD      r0,r0,#1
00004a  eba0010a          SUB      r1,r0,r10
00004e  9817              LDR      r0,[sp,#0x5c]
000050  eba10000          SUB      r0,r1,r0
000054  9004              STR      r0,[sp,#0x10]
;;;102      GUI_SetColor(pObj->Props.aColor[GRAPH_CI_GRID]);
000056  6b60              LDR      r0,[r4,#0x34]
000058  f7fffffe          BL       GUI_SetColor
;;;103      LineStyleOld = GUI_GetLineStyle();
00005c  f7fffffe          BL       GUI_GetLineStyle
000060  9006              STR      r0,[sp,#0x18]
;;;104      if (xSpace) {
000062  2e00              CMP      r6,#0
000064  d03d              BEQ      |L1.226|
;;;105        int FirstPosX;
;;;106        FirstPosX = xSpace + pObj->Props.GridOffX + ((pObj->Flags & GRAPH_CF_GRID_FIXED_X) ? 0 : pObj->ScrollStateH.v);
000066  6c20              LDR      r0,[r4,#0x40]
000068  eb000106          ADD      r1,r0,r6
00006c  f8b4006c          LDRH     r0,[r4,#0x6c]
000070  f0100f01          TST      r0,#1
000074  d002              BEQ      |L1.124|
000076  f04f0000          MOV      r0,#0
00007a  e002              B        |L1.130|
                  |L1.124|
00007c  f04f0080          MOV      r0,#0x80
000080  5900              LDR      r0,[r0,r4]
                  |L1.130|
000082  eb010900          ADD      r9,r1,r0
;;;107        while (FirstPosX >= xSpace) FirstPosX -= xSpace;
000086  e001              B        |L1.140|
                  |L1.136|
000088  eba90906          SUB      r9,r9,r6
                  |L1.140|
00008c  45b1              CMP      r9,r6
00008e  dafb              BGE      |L1.136|
;;;108        GUI_SetLineStyle(pObj->LineStyleV);
000090  f894006e          LDRB     r0,[r4,#0x6e]
000094  f7fffffe          BL       GUI_SetLineStyle
;;;109        for (i = FirstPosX; i < xSize; i += xSpace) {
000098  464d              MOV      r5,r9
00009a  e01e              B        |L1.218|
                  |L1.156|
;;;110          int x, y0, y1;
;;;111          x  = i + BorderL + EffectSize;
00009c  eb050108          ADD      r1,r5,r8
0000a0  9803              LDR      r0,[sp,#0xc]
0000a2  eb010b00          ADD      r11,r1,r0
;;;112          y0 = Rect.y0 + BorderT;
0000a6  f9bd001e          LDRSH    r0,[sp,#0x1e]
0000aa  4450              ADD      r0,r0,r10
0000ac  9002              STR      r0,[sp,#8]
;;;113          y1 = Rect.y1 - BorderB;
0000ae  f9bd1022          LDRSH    r1,[sp,#0x22]
0000b2  9817              LDR      r0,[sp,#0x5c]
0000b4  eba10000          SUB      r0,r1,r0
0000b8  9001              STR      r0,[sp,#4]
;;;114          if (pObj->LineStyleV != GUI_LS_SOLID) {
0000ba  f894006e          LDRB     r0,[r4,#0x6e]
0000be  b130              CBZ      r0,|L1.206|
;;;115            GUI_DrawLine(x, y0, x, y1);
0000c0  465a              MOV      r2,r11
0000c2  4658              MOV      r0,r11
0000c4  e9dd3101          LDRD     r3,r1,[sp,#4]
0000c8  f7fffffe          BL       GUI_DrawLine
0000cc  e004              B        |L1.216|
                  |L1.206|
;;;116          } else {
;;;117            GUI_DrawVLine(x, y0, y1);
0000ce  4658              MOV      r0,r11
0000d0  e9dd2101          LDRD     r2,r1,[sp,#4]
0000d4  f7fffffe          BL       GUI_DrawVLine
                  |L1.216|
0000d8  4435              ADD      r5,r5,r6              ;109
                  |L1.218|
0000da  9805              LDR      r0,[sp,#0x14]         ;109
0000dc  4285              CMP      r5,r0                 ;109
0000de  dbdd              BLT      |L1.156|
;;;118          }
;;;119        }
;;;120      }
0000e0  bf00              NOP      
                  |L1.226|
;;;121      if (ySpace) {
0000e2  b3af              CBZ      r7,|L1.336|
;;;122        int FirstPosY;
;;;123        FirstPosY = ySpace + pObj->Props.GridOffY - pObj->ScrollStateV.v;
0000e4  6c60              LDR      r0,[r4,#0x44]
0000e6  eb000107          ADD      r1,r0,r7
0000ea  6f60              LDR      r0,[r4,#0x74]
0000ec  eba10900          SUB      r9,r1,r0
;;;124        while (FirstPosY >= ySpace) FirstPosY -= ySpace;
0000f0  e001              B        |L1.246|
                  |L1.242|
0000f2  eba90907          SUB      r9,r9,r7
                  |L1.246|
0000f6  45b9              CMP      r9,r7
0000f8  dafb              BGE      |L1.242|
;;;125        GUI_SetLineStyle(pObj->LineStyleH);
0000fa  f894006f          LDRB     r0,[r4,#0x6f]
0000fe  f7fffffe          BL       GUI_SetLineStyle
;;;126        for (i = FirstPosY; i < ySize; i += ySpace) {
000102  464d              MOV      r5,r9
000104  e020              B        |L1.328|
                  |L1.262|
;;;127          int y, x0, x1;
;;;128          y  = Rect.y1 - BorderB - i;
000106  f9bd1022          LDRSH    r1,[sp,#0x22]
00010a  9817              LDR      r0,[sp,#0x5c]
00010c  eba10000          SUB      r0,r1,r0
000110  eba00b05          SUB      r11,r0,r5
;;;129          x0 = Rect.x0 + BorderL;
000114  f9bd001c          LDRSH    r0,[sp,#0x1c]
000118  4440              ADD      r0,r0,r8
00011a  9002              STR      r0,[sp,#8]
;;;130          x1 = Rect.x1 - BorderR;
00011c  f9bd1020          LDRSH    r1,[sp,#0x20]
000120  9816              LDR      r0,[sp,#0x58]
000122  eba10000          SUB      r0,r1,r0
000126  9001              STR      r0,[sp,#4]
;;;131          if (pObj->LineStyleH != GUI_LS_SOLID) {
000128  f894006f          LDRB     r0,[r4,#0x6f]
00012c  b130              CBZ      r0,|L1.316|
;;;132            GUI_DrawLine(x0, y, x1, y);
00012e  465b              MOV      r3,r11
000130  4659              MOV      r1,r11
000132  e9dd2001          LDRD     r2,r0,[sp,#4]
000136  f7fffffe          BL       GUI_DrawLine
00013a  e004              B        |L1.326|
                  |L1.316|
;;;133          } else {
;;;134            GUI_DrawHLine(y, x0, x1);
00013c  4658              MOV      r0,r11
00013e  e9dd2101          LDRD     r2,r1,[sp,#4]
000142  f7fffffe          BL       GUI_DrawHLine
                  |L1.326|
000146  443d              ADD      r5,r5,r7              ;126
                  |L1.328|
000148  9804              LDR      r0,[sp,#0x10]         ;126
00014a  4285              CMP      r5,r0                 ;126
00014c  dbdb              BLT      |L1.262|
;;;135          }
;;;136        }
;;;137      }
00014e  bf00              NOP      
                  |L1.336|
;;;138      GUI_SetLineStyle(LineStyleOld);
000150  9806              LDR      r0,[sp,#0x18]
000152  f7fffffe          BL       GUI_SetLineStyle
;;;139    }
000156  b00d              ADD      sp,sp,#0x34
000158  e8bd8ff0          POP      {r4-r11,pc}
;;;140    
                          ENDP

                  _DrawBorder PROC
;;;144    */
;;;145    static void _DrawBorder(GRAPH_OBJ * pObj, GRAPH_Handle hObj, unsigned BorderL, unsigned BorderT, unsigned BorderR, unsigned BorderB, GUI_RECT * pRectInvalid) {
00015c  e92d4fff          PUSH     {r0-r11,lr}
000160  b08b              SUB      sp,sp,#0x2c
000162  4607              MOV      r7,r0
000164  4616              MOV      r6,r2
000166  461c              MOV      r4,r3
000168  e9dd5919          LDRD     r5,r9,[sp,#0x64]
00016c  f8dd8060          LDR      r8,[sp,#0x60]
;;;146      if (BorderL || BorderT || BorderR || BorderB) {
000170  b92e              CBNZ     r6,|L1.382|
000172  b924              CBNZ     r4,|L1.382|
000174  f1b80f00          CMP      r8,#0
000178  d101              BNE      |L1.382|
00017a  2d00              CMP      r5,#0
00017c  d07e              BEQ      |L1.636|
                  |L1.382|
;;;147        int OrgX, OrgY, x0, y0, x1, y1, x0_Clear, y0_Clear, x1_Clear, y1_Clear;
;;;148        GUI_RECT Rect;
;;;149        int EffectSize;
;;;150        EffectSize = pObj->Widget.pEffect->EffectSize;
00017e  6a38              LDR      r0,[r7,#0x20]
000180  f8d0a014          LDR      r10,[r0,#0x14]
;;;151        WM_GetInsideRectExScrollbar(hObj, &Rect);
000184  4669              MOV      r1,sp
000186  980c              LDR      r0,[sp,#0x30]
000188  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;152        OrgX = WM_GetOrgX();
00018c  f7fffffe          BL       WM_GetOrgX
000190  900a              STR      r0,[sp,#0x28]
;;;153        OrgY = WM_GetOrgY();
000192  f7fffffe          BL       WM_GetOrgY
000196  9009              STR      r0,[sp,#0x24]
;;;154        x0 = Rect.x0 + BorderL;
000198  f9bd0000          LDRSH    r0,[sp,#0]
00019c  4430              ADD      r0,r0,r6
00019e  9008              STR      r0,[sp,#0x20]
;;;155        y0 = Rect.y0 + BorderT;
0001a0  f9bd0002          LDRSH    r0,[sp,#2]
0001a4  eb000b04          ADD      r11,r0,r4
;;;156        x1 = Rect.x1 - BorderR;
0001a8  f9bd0004          LDRSH    r0,[sp,#4]
0001ac  eba00008          SUB      r0,r0,r8
0001b0  9007              STR      r0,[sp,#0x1c]
;;;157        y1 = Rect.y1 - BorderB;
0001b2  f9bd0006          LDRSH    r0,[sp,#6]
0001b6  eba00005          SUB      r0,r0,r5
0001ba  9006              STR      r0,[sp,#0x18]
;;;158        GUI_SetBkColor(pObj->Props.aColor[GRAPH_CI_BORDER]);
0001bc  6af8              LDR      r0,[r7,#0x2c]
0001be  f7fffffe          BL       GUI_SetBkColor
;;;159        GUI_SetColor(pObj->Props.aColor[GRAPH_CI_FRAME]);
0001c2  6b38              LDR      r0,[r7,#0x30]
0001c4  f7fffffe          BL       GUI_SetColor
;;;160        if (BorderL) {
0001c8  b336              CBZ      r6,|L1.536|
;;;161          x1_Clear = BorderL - 1 + EffectSize;
0001ca  f1a60001          SUB      r0,r6,#1
0001ce  4450              ADD      r0,r0,r10
0001d0  9003              STR      r0,[sp,#0xc]
;;;162          if ((pRectInvalid->x0 - OrgX) <= x1_Clear) {
0001d2  f9b91000          LDRSH    r1,[r9,#0]
0001d6  980a              LDR      r0,[sp,#0x28]
0001d8  eba10100          SUB      r1,r1,r0
0001dc  9803              LDR      r0,[sp,#0xc]
0001de  4281              CMP      r1,r0
0001e0  dc1a              BGT      |L1.536|
;;;163            x0_Clear = Rect.x0;
0001e2  f9bd0000          LDRSH    r0,[sp,#0]
0001e6  9005              STR      r0,[sp,#0x14]
;;;164            y0_Clear = BorderT + EffectSize;
0001e8  eb04000a          ADD      r0,r4,r10
0001ec  9004              STR      r0,[sp,#0x10]
;;;165            y1_Clear = Rect.y1 - BorderB + 1;
0001ee  f9bd0006          LDRSH    r0,[sp,#6]
0001f2  eba00005          SUB      r0,r0,r5
0001f6  f1000001          ADD      r0,r0,#1
0001fa  9002              STR      r0,[sp,#8]
;;;166            GUI_ClearRect(x0_Clear, y0_Clear, x1_Clear, y1_Clear);
0001fc  e9dd3202          LDRD     r3,r2,[sp,#8]
000200  e9dd1004          LDRD     r1,r0,[sp,#0x10]
000204  f7fffffe          BL       GUI_ClearRect
;;;167            GUI_DrawVLine(x0 - 1, y0 - 1, y1 + 1);
000208  f1ab0101          SUB      r1,r11,#1
00020c  9a08              LDR      r2,[sp,#0x20]
00020e  1e50              SUBS     r0,r2,#1
000210  9a06              LDR      r2,[sp,#0x18]
000212  1c52              ADDS     r2,r2,#1
000214  f7fffffe          BL       GUI_DrawVLine
                  |L1.536|
;;;168          }
;;;169        }
;;;170        if (BorderT) {
000218  b314              CBZ      r4,|L1.608|
;;;171          y1_Clear = BorderT - 1 + EffectSize;
00021a  f1a40001          SUB      r0,r4,#1
00021e  4450              ADD      r0,r0,r10
000220  9002              STR      r0,[sp,#8]
;;;172          if ((pRectInvalid->y0 - OrgY) <= y1_Clear) {
000222  f9b91002          LDRSH    r1,[r9,#2]
000226  9809              LDR      r0,[sp,#0x24]
000228  eba10100          SUB      r1,r1,r0
00022c  9802              LDR      r0,[sp,#8]
00022e  4281              CMP      r1,r0
000230  dc16              BGT      |L1.608|
;;;173            x0_Clear = Rect.x0;
000232  f9bd0000          LDRSH    r0,[sp,#0]
000236  9005              STR      r0,[sp,#0x14]
;;;174            y0_Clear = Rect.y0;
000238  f9bd0002          LDRSH    r0,[sp,#2]
00023c  9004              STR      r0,[sp,#0x10]
;;;175            x1_Clear = Rect.x1;
00023e  f9bd0004          LDRSH    r0,[sp,#4]
000242  9003              STR      r0,[sp,#0xc]
;;;176            GUI_ClearRect(x0_Clear, y0_Clear, x1_Clear, y1_Clear);
000244  e9dd3202          LDRD     r3,r2,[sp,#8]
000248  e9dd1004          LDRD     r1,r0,[sp,#0x10]
00024c  f7fffffe          BL       GUI_ClearRect
;;;177            GUI_DrawHLine(y0 - 1, x0 - 1, x1 + 1);
000250  9a08              LDR      r2,[sp,#0x20]
000252  1e51              SUBS     r1,r2,#1
000254  f1ab0001          SUB      r0,r11,#1
000258  9a07              LDR      r2,[sp,#0x1c]
00025a  1c52              ADDS     r2,r2,#1
00025c  f7fffffe          BL       GUI_DrawHLine
                  |L1.608|
;;;178          }
;;;179        }
;;;180        if (BorderR) {
000260  f1b80f00          CMP      r8,#0
000264  d02b              BEQ      |L1.702|
;;;181          x0_Clear = Rect.x1 - BorderR + 1;
000266  f9bd0004          LDRSH    r0,[sp,#4]
00026a  eba00008          SUB      r0,r0,r8
00026e  f1000001          ADD      r0,r0,#1
000272  9005              STR      r0,[sp,#0x14]
;;;182          if ((pRectInvalid->x1 - OrgX) >= x0_Clear) {
000274  f9b91004          LDRSH    r1,[r9,#4]
000278  980a              LDR      r0,[sp,#0x28]
00027a  e000              B        |L1.638|
                  |L1.636|
00027c  e047              B        |L1.782|
                  |L1.638|
00027e  eba10100          SUB      r1,r1,r0
000282  9805              LDR      r0,[sp,#0x14]
000284  4281              CMP      r1,r0
000286  db1a              BLT      |L1.702|
;;;183            y0_Clear = BorderT + EffectSize;
000288  eb04000a          ADD      r0,r4,r10
00028c  9004              STR      r0,[sp,#0x10]
;;;184            x1_Clear = Rect.x1;
00028e  f9bd0004          LDRSH    r0,[sp,#4]
000292  9003              STR      r0,[sp,#0xc]
;;;185            y1_Clear = Rect.y1 - BorderB + 1;
000294  f9bd0006          LDRSH    r0,[sp,#6]
000298  eba00005          SUB      r0,r0,r5
00029c  f1000001          ADD      r0,r0,#1
0002a0  9002              STR      r0,[sp,#8]
;;;186            GUI_ClearRect(x0_Clear, y0_Clear, x1_Clear, y1_Clear);
0002a2  e9dd3202          LDRD     r3,r2,[sp,#8]
0002a6  e9dd1004          LDRD     r1,r0,[sp,#0x10]
0002aa  f7fffffe          BL       GUI_ClearRect
;;;187            GUI_DrawVLine(x1 + 1, y0 - 1, y1 + 1);
0002ae  f1ab0101          SUB      r1,r11,#1
0002b2  9a06              LDR      r2,[sp,#0x18]
0002b4  1c52              ADDS     r2,r2,#1
0002b6  9807              LDR      r0,[sp,#0x1c]
0002b8  1c40              ADDS     r0,r0,#1
0002ba  f7fffffe          BL       GUI_DrawVLine
                  |L1.702|
;;;188          }
;;;189        }
;;;190        if (BorderB) {
0002be  b32d              CBZ      r5,|L1.780|
;;;191          y0_Clear = Rect.y1 - BorderB + 1;
0002c0  f9bd0006          LDRSH    r0,[sp,#6]
0002c4  eba00005          SUB      r0,r0,r5
0002c8  f1000001          ADD      r0,r0,#1
0002cc  9004              STR      r0,[sp,#0x10]
;;;192          if ((pRectInvalid->y1 - OrgY) >= y0_Clear) {
0002ce  f9b91006          LDRSH    r1,[r9,#6]
0002d2  9809              LDR      r0,[sp,#0x24]
0002d4  eba10100          SUB      r1,r1,r0
0002d8  9804              LDR      r0,[sp,#0x10]
0002da  4281              CMP      r1,r0
0002dc  db16              BLT      |L1.780|
;;;193            x0_Clear = Rect.x0;
0002de  f9bd0000          LDRSH    r0,[sp,#0]
0002e2  9005              STR      r0,[sp,#0x14]
;;;194            x1_Clear = Rect.x1;
0002e4  f9bd0004          LDRSH    r0,[sp,#4]
0002e8  9003              STR      r0,[sp,#0xc]
;;;195            y1_Clear = Rect.y1;
0002ea  f9bd0006          LDRSH    r0,[sp,#6]
0002ee  9002              STR      r0,[sp,#8]
;;;196            GUI_ClearRect(x0_Clear, y0_Clear, x1_Clear, y1_Clear);
0002f0  e9dd3202          LDRD     r3,r2,[sp,#8]
0002f4  e9dd1004          LDRD     r1,r0,[sp,#0x10]
0002f8  f7fffffe          BL       GUI_ClearRect
;;;197            GUI_DrawHLine(y1 + 1, x0 - 1, x1 + 1);
0002fc  9808              LDR      r0,[sp,#0x20]
0002fe  1e41              SUBS     r1,r0,#1
000300  9a07              LDR      r2,[sp,#0x1c]
000302  1c52              ADDS     r2,r2,#1
000304  9806              LDR      r0,[sp,#0x18]
000306  1c40              ADDS     r0,r0,#1
000308  f7fffffe          BL       GUI_DrawHLine
                  |L1.780|
;;;198          }
;;;199        }
;;;200      }
00030c  bf00              NOP      
                  |L1.782|
;;;201    }
00030e  b00f              ADD      sp,sp,#0x3c
000310  e8bd8ff0          POP      {r4-r11,pc}
;;;202    
                          ENDP

                  _GetParams PROC
;;;206    */
;;;207    static void _GetParams(GRAPH_OBJ * pObj, unsigned * pBorderL, unsigned * pBorderT, unsigned * pBorderR, unsigned * pBorderB, unsigned * pEffectSize) {
000314  b570              PUSH     {r4-r6,lr}
000316  e9dd4504          LDRD     r4,r5,[sp,#0x10]
;;;208      *pBorderL    = pObj->Props.BorderL;
00031a  6c86              LDR      r6,[r0,#0x48]
00031c  600e              STR      r6,[r1,#0]
;;;209      *pBorderT    = pObj->Props.BorderT;
00031e  6cc6              LDR      r6,[r0,#0x4c]
000320  6016              STR      r6,[r2,#0]
;;;210      *pBorderR    = pObj->Props.BorderR;
000322  6d06              LDR      r6,[r0,#0x50]
000324  601e              STR      r6,[r3,#0]
;;;211      *pBorderB    = pObj->Props.BorderB;
000326  6d46              LDR      r6,[r0,#0x54]
000328  6026              STR      r6,[r4,#0]
;;;212      *pEffectSize = pObj->Widget.pEffect->EffectSize;
00032a  6a06              LDR      r6,[r0,#0x20]
00032c  6976              LDR      r6,[r6,#0x14]
00032e  602e              STR      r6,[r5,#0]
;;;213    }
000330  bd70              POP      {r4-r6,pc}
;;;214    
                          ENDP

                  _OnPaint PROC
;;;218    */
;;;219    static void _OnPaint(GRAPH_OBJ * pObj, GRAPH_Handle hObj, GUI_RECT * pRectInvalid) {
000332  e92d4ff0          PUSH     {r4-r11,lr}
000336  b08d              SUB      sp,sp,#0x34
000338  4604              MOV      r4,r0
00033a  4688              MOV      r8,r1
00033c  4616              MOV      r6,r2
;;;220      unsigned BorderL, BorderT, BorderR, BorderB, EffectSize, i, NumItems;
;;;221      GUI_RECT RectClient, Rect;
;;;222      _GetParams(pObj, &BorderL, &BorderT, &BorderR, &BorderB, &EffectSize);
00033e  a808              ADD      r0,sp,#0x20
000340  a909              ADD      r1,sp,#0x24
000342  ab0a              ADD      r3,sp,#0x28
000344  aa0b              ADD      r2,sp,#0x2c
000346  e9cd1000          STRD     r1,r0,[sp,#0]
00034a  a90c              ADD      r1,sp,#0x30
00034c  4620              MOV      r0,r4
00034e  f7fffffe          BL       _GetParams
;;;223      WM_GetClientRect(&RectClient);
000352  a806              ADD      r0,sp,#0x18
000354  f7fffffe          BL       WM_GetClientRect
;;;224      WIDGET__EFFECT_DrawDownRect(&pObj->Widget, &RectClient);
000358  a906              ADD      r1,sp,#0x18
00035a  4620              MOV      r0,r4
00035c  f7fffffe          BL       WIDGET__EFFECT_DrawDownRect
;;;225      Rect = RectClient;
000360  e9dd0106          LDRD     r0,r1,[sp,#0x18]
000364  e9cd0104          STRD     r0,r1,[sp,#0x10]
;;;226      Rect.y0 += BorderT + EffectSize;
000368  f8bd0012          LDRH     r0,[sp,#0x12]
00036c  9a08              LDR      r2,[sp,#0x20]
00036e  990b              LDR      r1,[sp,#0x2c]
000370  4411              ADD      r1,r1,r2
000372  4408              ADD      r0,r0,r1
000374  b200              SXTH     r0,r0
000376  f8ad0012          STRH     r0,[sp,#0x12]
;;;227      Rect.y1 -= BorderB + EffectSize;
00037a  f8bd0016          LDRH     r0,[sp,#0x16]
00037e  e9dd2108          LDRD     r2,r1,[sp,#0x20]
000382  4411              ADD      r1,r1,r2
000384  eba00001          SUB      r0,r0,r1
000388  b200              SXTH     r0,r0
00038a  f8ad0016          STRH     r0,[sp,#0x16]
;;;228      Rect.x0 += BorderL + EffectSize;
00038e  f8bd0010          LDRH     r0,[sp,#0x10]
000392  9a08              LDR      r2,[sp,#0x20]
000394  990c              LDR      r1,[sp,#0x30]
000396  4411              ADD      r1,r1,r2
000398  4408              ADD      r0,r0,r1
00039a  b200              SXTH     r0,r0
00039c  f8ad0010          STRH     r0,[sp,#0x10]
;;;229      Rect.x1 -= BorderR + EffectSize;
0003a0  f8bd0014          LDRH     r0,[sp,#0x14]
0003a4  9a08              LDR      r2,[sp,#0x20]
0003a6  990a              LDR      r1,[sp,#0x28]
0003a8  4411              ADD      r1,r1,r2
0003aa  eba00001          SUB      r0,r0,r1
0003ae  b200              SXTH     r0,r0
0003b0  f8ad0014          STRH     r0,[sp,#0x14]
;;;230      WM_SetUserClipRect(&Rect);
0003b4  a804              ADD      r0,sp,#0x10
0003b6  f7fffffe          BL       WM_SetUserClipRect
;;;231      GUI_SetBkColor(pObj->Props.aColor[GRAPH_CI_BK]);
0003ba  6aa0              LDR      r0,[r4,#0x28]
0003bc  f7fffffe          BL       GUI_SetBkColor
;;;232      GUI_Clear();
0003c0  f7fffffe          BL       GUI_Clear
;;;233      if (pObj->pUserDraw) {
0003c4  f8d40088          LDR      r0,[r4,#0x88]
0003c8  b120              CBZ      r0,|L1.980|
;;;234        pObj->pUserDraw(hObj, GRAPH_DRAW_FIRST);
0003ca  2100              MOVS     r1,#0
0003cc  4640              MOV      r0,r8
0003ce  f8d42088          LDR      r2,[r4,#0x88]
0003d2  4790              BLX      r2
                  |L1.980|
;;;235      }
;;;236      if (pObj->ShowGrid) {
0003d4  f8940060          LDRB     r0,[r4,#0x60]
0003d8  b148              CBZ      r0,|L1.1006|
;;;237        _DrawGrid(pObj, hObj, BorderL, BorderT, BorderR, BorderB);
0003da  e9dd1009          LDRD     r1,r0,[sp,#0x24]
0003de  e9cd0100          STRD     r0,r1,[sp,#0]
0003e2  4641              MOV      r1,r8
0003e4  4620              MOV      r0,r4
0003e6  e9dd320b          LDRD     r3,r2,[sp,#0x2c]
0003ea  f7fffffe          BL       _DrawGrid
                  |L1.1006|
;;;238      }
;;;239      NumItems = pObj->GraphArray.NumItems;
0003ee  f8b47058          LDRH     r7,[r4,#0x58]
;;;240      for (i = 0; i < NumItems; i++) {
0003f2  f04f0500          MOV      r5,#0
0003f6  e01d              B        |L1.1076|
                  |L1.1016|
;;;241        WM_HMEM hMem;
;;;242        WM_HMEM * phMem;
;;;243        hMem  = GUI_ARRAY_GethItem(&pObj->GraphArray, i); /* Handle of array item */
0003f8  4629              MOV      r1,r5
0003fa  f1040058          ADD      r0,r4,#0x58
0003fe  f7fffffe          BL       GUI_ARRAY_GethItem
000402  9003              STR      r0,[sp,#0xc]
;;;244        phMem = (WM_HMEM *)GUI_ALLOC_h2p(hMem);                      /* Pointer to handle */
000404  9803              LDR      r0,[sp,#0xc]
000406  f7fffffe          BL       GUI_ALLOC_h2p
00040a  4681              MOV      r9,r0
;;;245        if (phMem) {
00040c  f1b90f00          CMP      r9,#0
000410  d00e              BEQ      |L1.1072|
;;;246          GRAPH_DATA_Handle hDataObj;
;;;247          GRAPH_DATA_OBJ *  pDataObj;
;;;248          hDataObj = *(WM_HMEM *)phMem;
000412  f9b9b000          LDRSH    r11,[r9,#0]
;;;249          pDataObj = (GRAPH_DATA_OBJ *)GUI_ALLOC_h2p(hDataObj);
000416  4658              MOV      r0,r11
000418  f7fffffe          BL       GUI_ALLOC_h2p
00041c  4682              MOV      r10,r0
;;;250          if (pDataObj) {
00041e  f1ba0f00          CMP      r10,#0
000422  d004              BEQ      |L1.1070|
;;;251            pDataObj->PaintObj.pfOnPaint(hDataObj, pRectInvalid);
000424  4631              MOV      r1,r6
000426  4658              MOV      r0,r11
000428  f8da2000          LDR      r2,[r10,#0]
00042c  4790              BLX      r2
                  |L1.1070|
;;;252          }
;;;253        }
00042e  bf00              NOP      
                  |L1.1072|
000430  f1050501          ADD      r5,r5,#1              ;240
                  |L1.1076|
000434  42bd              CMP      r5,r7                 ;240
000436  d3df              BCC      |L1.1016|
;;;254      }
;;;255      GUI__ReduceRect(&Rect, &RectClient, EffectSize);
000438  a906              ADD      r1,sp,#0x18
00043a  a804              ADD      r0,sp,#0x10
00043c  9a08              LDR      r2,[sp,#0x20]
00043e  f7fffffe          BL       GUI__ReduceRect
;;;256      WM_SetUserClipRect(&Rect);
000442  a804              ADD      r0,sp,#0x10
000444  f7fffffe          BL       WM_SetUserClipRect
;;;257      _DrawBorder(pObj, hObj, BorderL, BorderT, BorderR, BorderB, pRectInvalid);
000448  e9dd1009          LDRD     r1,r0,[sp,#0x24]
00044c  e88d0043          STM      sp,{r0,r1,r6}
000450  4641              MOV      r1,r8
000452  4620              MOV      r0,r4
000454  e9dd320b          LDRD     r3,r2,[sp,#0x2c]
000458  f7fffffe          BL       _DrawBorder
;;;258      NumItems = pObj->ScaleArray.NumItems;
00045c  f8b4705c          LDRH     r7,[r4,#0x5c]
;;;259      for (i = 0; i < NumItems; i++) {
000460  f04f0500          MOV      r5,#0
000464  e01d              B        |L1.1186|
                  |L1.1126|
;;;260        WM_HMEM hMem;
;;;261        WM_HMEM * phMem;
;;;262        hMem  = GUI_ARRAY_GethItem(&pObj->ScaleArray, i); /* Handle of array item */
000466  4629              MOV      r1,r5
000468  f104005c          ADD      r0,r4,#0x5c
00046c  f7fffffe          BL       GUI_ARRAY_GethItem
000470  9003              STR      r0,[sp,#0xc]
;;;263        phMem = (WM_HMEM *)GUI_ALLOC_h2p(hMem);                      /* Pointer to handle */
000472  9803              LDR      r0,[sp,#0xc]
000474  f7fffffe          BL       GUI_ALLOC_h2p
000478  4681              MOV      r9,r0
;;;264        if (phMem) {
00047a  f1b90f00          CMP      r9,#0
00047e  d00e              BEQ      |L1.1182|
;;;265          GRAPH_SCALE_Handle hScaleObj;
;;;266          GRAPH_SCALE_OBJ *  pScaleObj;
;;;267          hScaleObj = *(WM_HMEM *)phMem;
000480  f9b9b000          LDRSH    r11,[r9,#0]
;;;268          pScaleObj = (GRAPH_SCALE_OBJ *)GUI_ALLOC_h2p(hScaleObj);
000484  4658              MOV      r0,r11
000486  f7fffffe          BL       GUI_ALLOC_h2p
00048a  4682              MOV      r10,r0
;;;269          if (pScaleObj) {
00048c  f1ba0f00          CMP      r10,#0
000490  d004              BEQ      |L1.1180|
;;;270            pScaleObj->PaintObj.pfOnPaint(hScaleObj, pRectInvalid);
000492  4631              MOV      r1,r6
000494  4658              MOV      r0,r11
000496  f8da2000          LDR      r2,[r10,#0]
00049a  4790              BLX      r2
                  |L1.1180|
;;;271          }
;;;272        }
00049c  bf00              NOP      
                  |L1.1182|
00049e  f1050501          ADD      r5,r5,#1              ;259
                  |L1.1186|
0004a2  42bd              CMP      r5,r7                 ;259
0004a4  d3df              BCC      |L1.1126|
;;;273      }
;;;274      WM_SetUserClipRect(0);
0004a6  2000              MOVS     r0,#0
0004a8  f7fffffe          BL       WM_SetUserClipRect
;;;275      if (pObj->pUserDraw) {
0004ac  f8d40088          LDR      r0,[r4,#0x88]
0004b0  b120              CBZ      r0,|L1.1212|
;;;276        pObj->pUserDraw(hObj, GRAPH_DRAW_LAST);
0004b2  2101              MOVS     r1,#1
0004b4  4640              MOV      r0,r8
0004b6  f8d42088          LDR      r2,[r4,#0x88]
0004ba  4790              BLX      r2
                  |L1.1212|
;;;277      }
;;;278    }
0004bc  b00d              ADD      sp,sp,#0x34
0004be  e8bd8ff0          POP      {r4-r11,pc}
;;;279    
                          ENDP

                  _OnDelete PROC
;;;283    */
;;;284    static void _OnDelete(GRAPH_OBJ * pObj) {
0004c2  e92d47f0          PUSH     {r4-r10,lr}
0004c6  4604              MOV      r4,r0
;;;285      int i, NumItems;
;;;286      NumItems = pObj->GraphArray.NumItems;
0004c8  f8b46058          LDRH     r6,[r4,#0x58]
;;;287      for (i = 0; i < NumItems; i++) {
0004cc  f04f0500          MOV      r5,#0
0004d0  e01d              B        |L1.1294|
                  |L1.1234|
;;;288        WM_HMEM hMem;
;;;289        WM_HMEM * phMem;
;;;290        hMem  = GUI_ARRAY_GethItem(&pObj->GraphArray, i); /* Handle of array item */
0004d2  4629              MOV      r1,r5
0004d4  f1040058          ADD      r0,r4,#0x58
0004d8  f7fffffe          BL       GUI_ARRAY_GethItem
0004dc  4682              MOV      r10,r0
;;;291        phMem = (WM_HMEM *)GUI_ALLOC_h2p(hMem);                      /* Pointer to handle */
0004de  4650              MOV      r0,r10
0004e0  f7fffffe          BL       GUI_ALLOC_h2p
0004e4  4607              MOV      r7,r0
;;;292        if (phMem) {
0004e6  b187              CBZ      r7,|L1.1290|
;;;293          GRAPH_DATA_Handle hDataObj;
;;;294          GRAPH_DATA_OBJ *  pDataObj;
;;;295          hDataObj = *(WM_HMEM *)phMem;
0004e8  f9b79000          LDRSH    r9,[r7,#0]
;;;296          pDataObj = (GRAPH_DATA_OBJ *)GUI_ALLOC_h2p(hDataObj);
0004ec  4648              MOV      r0,r9
0004ee  f7fffffe          BL       GUI_ALLOC_h2p
0004f2  4680              MOV      r8,r0
;;;297          if (pDataObj) {
0004f4  f1b80f00          CMP      r8,#0
0004f8  d003              BEQ      |L1.1282|
;;;298            pDataObj->PaintObj.pfOnDelete(hDataObj);
0004fa  4648              MOV      r0,r9
0004fc  f8d81004          LDR      r1,[r8,#4]
000500  4788              BLX      r1
                  |L1.1282|
;;;299          }
;;;300          GUI_ALLOC_Free(hDataObj);
000502  4648              MOV      r0,r9
000504  f7fffffe          BL       GUI_ALLOC_Free
;;;301        }
000508  bf00              NOP      
                  |L1.1290|
00050a  f1050501          ADD      r5,r5,#1              ;287
                  |L1.1294|
00050e  42b5              CMP      r5,r6                 ;287
000510  dbdf              BLT      |L1.1234|
;;;302      }
;;;303      NumItems = pObj->ScaleArray.NumItems;
000512  f8b4605c          LDRH     r6,[r4,#0x5c]
;;;304      for (i = 0; i < NumItems; i++) {
000516  f04f0500          MOV      r5,#0
00051a  e012              B        |L1.1346|
                  |L1.1308|
;;;305        WM_HMEM hMem;
;;;306        WM_HMEM * phMem;
;;;307        hMem  = GUI_ARRAY_GethItem(&pObj->ScaleArray, i); /* Handle of array item */
00051c  4629              MOV      r1,r5
00051e  f104005c          ADD      r0,r4,#0x5c
000522  f7fffffe          BL       GUI_ARRAY_GethItem
000526  4681              MOV      r9,r0
;;;308        phMem = (WM_HMEM *)GUI_ALLOC_h2p(hMem);                      /* Pointer to handle */
000528  4648              MOV      r0,r9
00052a  f7fffffe          BL       GUI_ALLOC_h2p
00052e  4607              MOV      r7,r0
;;;309        if (phMem) {
000530  b12f              CBZ      r7,|L1.1342|
;;;310          GRAPH_SCALE_Handle hScaleObj;
;;;311          hScaleObj = *(WM_HMEM *)phMem;
000532  f9b78000          LDRSH    r8,[r7,#0]
;;;312          GUI_ALLOC_Free(hScaleObj);
000536  4640              MOV      r0,r8
000538  f7fffffe          BL       GUI_ALLOC_Free
;;;313        }
00053c  bf00              NOP      
                  |L1.1342|
00053e  f1050501          ADD      r5,r5,#1              ;304
                  |L1.1346|
000542  42b5              CMP      r5,r6                 ;304
000544  dbea              BLT      |L1.1308|
;;;314      }
;;;315      GUI_ARRAY_Delete(&pObj->GraphArray);
000546  f1040058          ADD      r0,r4,#0x58
00054a  f7fffffe          BL       GUI_ARRAY_Delete
;;;316      GUI_ARRAY_Delete(&pObj->ScaleArray);
00054e  f104005c          ADD      r0,r4,#0x5c
000552  f7fffffe          BL       GUI_ARRAY_Delete
;;;317    }
000556  e8bd87f0          POP      {r4-r10,pc}
;;;318    
                          ENDP

                  _InvalidateGraph PROC
;;;322    */
;;;323    static void _InvalidateGraph(GRAPH_Handle hObj) {
00055a  b530              PUSH     {r4,r5,lr}
00055c  b089              SUB      sp,sp,#0x24
00055e  4604              MOV      r4,r0
;;;324      unsigned BorderL, BorderT, BorderR, BorderB, EffectSize;
;;;325      GUI_RECT Rect;
;;;326      GRAPH_OBJ * pObj;
;;;327      pObj = GRAPH_H2P(hObj);
000560  4620              MOV      r0,r4
000562  f7fffffe          BL       GUI_ALLOC_h2p
000566  4605              MOV      r5,r0
;;;328      _GetParams(pObj, &BorderL, &BorderT, &BorderR, &BorderB, &EffectSize);
000568  a804              ADD      r0,sp,#0x10
00056a  a905              ADD      r1,sp,#0x14
00056c  ab06              ADD      r3,sp,#0x18
00056e  aa07              ADD      r2,sp,#0x1c
000570  e9cd1000          STRD     r1,r0,[sp,#0]
000574  a908              ADD      r1,sp,#0x20
000576  4628              MOV      r0,r5
000578  f7fffffe          BL       _GetParams
;;;329      WM_GetInsideRectExScrollbar(hObj, &Rect);
00057c  a902              ADD      r1,sp,#8
00057e  4620              MOV      r0,r4
000580  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;330      Rect.x0 += BorderL;
000584  f8bd0008          LDRH     r0,[sp,#8]
000588  9908              LDR      r1,[sp,#0x20]
00058a  4408              ADD      r0,r0,r1
00058c  b200              SXTH     r0,r0
00058e  f8ad0008          STRH     r0,[sp,#8]
;;;331      Rect.y0 += BorderT;
000592  f8bd000a          LDRH     r0,[sp,#0xa]
000596  9907              LDR      r1,[sp,#0x1c]
000598  4408              ADD      r0,r0,r1
00059a  b200              SXTH     r0,r0
00059c  f8ad000a          STRH     r0,[sp,#0xa]
;;;332      Rect.x1 -= BorderR;
0005a0  f8bd000c          LDRH     r0,[sp,#0xc]
0005a4  9906              LDR      r1,[sp,#0x18]
0005a6  eba00001          SUB      r0,r0,r1
0005aa  b200              SXTH     r0,r0
0005ac  f8ad000c          STRH     r0,[sp,#0xc]
;;;333      Rect.y1 -= BorderB;
0005b0  f8bd000e          LDRH     r0,[sp,#0xe]
0005b4  9905              LDR      r1,[sp,#0x14]
0005b6  eba00001          SUB      r0,r0,r1
0005ba  b200              SXTH     r0,r0
0005bc  f8ad000e          STRH     r0,[sp,#0xe]
;;;334      WM_InvalidateRect(hObj, &Rect);
0005c0  a902              ADD      r1,sp,#8
0005c2  4620              MOV      r0,r4
0005c4  f7fffffe          BL       WM_InvalidateRect
;;;335    }
0005c8  b009              ADD      sp,sp,#0x24
0005ca  bd30              POP      {r4,r5,pc}
;;;336    
                          ENDP

                  _ManageScrollBars PROC
;;;340    */
;;;341    static void _ManageScrollBars(GRAPH_OBJ * pObj, GRAPH_Handle hObj) {
0005cc  b5f0              PUSH     {r4-r7,lr}
0005ce  b089              SUB      sp,sp,#0x24
0005d0  4604              MOV      r4,r0
0005d2  460e              MOV      r6,r1
;;;342      int IsRequired, PageSize;
;;;343      GUI_RECT Rect;
;;;344      unsigned BorderL, BorderT, BorderR, BorderB, EffectSize;
;;;345      WM_GetInsideRectExScrollbar(hObj, &Rect);
0005d4  a907              ADD      r1,sp,#0x1c
0005d6  4630              MOV      r0,r6
0005d8  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;346      _GetParams(pObj, &BorderL, &BorderT, &BorderR, &BorderB, &EffectSize);
0005dc  a802              ADD      r0,sp,#8
0005de  a903              ADD      r1,sp,#0xc
0005e0  ab04              ADD      r3,sp,#0x10
0005e2  aa05              ADD      r2,sp,#0x14
0005e4  e9cd1000          STRD     r1,r0,[sp,#0]
0005e8  a906              ADD      r1,sp,#0x18
0005ea  4620              MOV      r0,r4
0005ec  f7fffffe          BL       _GetParams
;;;347      PageSize   = Rect.y1 - Rect.y0 - BorderT - BorderB;
0005f0  f9bd0022          LDRSH    r0,[sp,#0x22]
0005f4  f9bd101e          LDRSH    r1,[sp,#0x1e]
0005f8  eba00001          SUB      r0,r0,r1
0005fc  9905              LDR      r1,[sp,#0x14]
0005fe  eba00001          SUB      r0,r0,r1
000602  9903              LDR      r1,[sp,#0xc]
000604  eba00501          SUB      r5,r0,r1
;;;348      IsRequired = ((int)pObj->RangeY > PageSize) ? 1 : 0;
000608  6ea0              LDR      r0,[r4,#0x68]
00060a  42a8              CMP      r0,r5
00060c  dd02              BLE      |L1.1556|
00060e  f04f0001          MOV      r0,#1
000612  e001              B        |L1.1560|
                  |L1.1556|
000614  f04f0000          MOV      r0,#0
                  |L1.1560|
000618  4607              MOV      r7,r0
;;;349      WM_SetScrollbarV(hObj, IsRequired);
00061a  4639              MOV      r1,r7
00061c  4630              MOV      r0,r6
00061e  f7fffffe          BL       WM_SetScrollbarV
;;;350      pObj->ScrollStateV.NumItems = pObj->RangeY;
000622  6ea0              LDR      r0,[r4,#0x68]
000624  6720              STR      r0,[r4,#0x70]
;;;351      pObj->ScrollStateV.PageSize = PageSize;
000626  67a5              STR      r5,[r4,#0x78]
;;;352      PageSize   = Rect.x1 - Rect.x0 - BorderL - BorderR;
000628  f9bd0020          LDRSH    r0,[sp,#0x20]
00062c  f9bd101c          LDRSH    r1,[sp,#0x1c]
000630  eba00001          SUB      r0,r0,r1
000634  9906              LDR      r1,[sp,#0x18]
000636  eba00001          SUB      r0,r0,r1
00063a  9904              LDR      r1,[sp,#0x10]
00063c  eba00501          SUB      r5,r0,r1
;;;353      IsRequired = ((int)pObj->RangeX > PageSize) ? 1 : 0;
000640  6e60              LDR      r0,[r4,#0x64]
000642  42a8              CMP      r0,r5
000644  dd02              BLE      |L1.1612|
000646  f04f0001          MOV      r0,#1
00064a  e001              B        |L1.1616|
                  |L1.1612|
00064c  f04f0000          MOV      r0,#0
                  |L1.1616|
000650  4607              MOV      r7,r0
;;;354      WM_SetScrollbarH(hObj, IsRequired);
000652  4639              MOV      r1,r7
000654  4630              MOV      r0,r6
000656  f7fffffe          BL       WM_SetScrollbarH
;;;355      pObj->ScrollStateH.NumItems = pObj->RangeX;
00065a  6e60              LDR      r0,[r4,#0x64]
00065c  67e0              STR      r0,[r4,#0x7c]
;;;356      pObj->ScrollStateH.PageSize = PageSize;
00065e  f04f0084          MOV      r0,#0x84
000662  5105              STR      r5,[r0,r4]
;;;357      WM_CheckScrollBounds(&pObj->ScrollStateV);
000664  f1040070          ADD      r0,r4,#0x70
000668  f7fffffe          BL       WM_CheckScrollBounds
;;;358      WM_CheckScrollBounds(&pObj->ScrollStateH);
00066c  f104007c          ADD      r0,r4,#0x7c
000670  f7fffffe          BL       WM_CheckScrollBounds
;;;359      WIDGET__SetScrollState(hObj, &pObj->ScrollStateV, &pObj->ScrollStateH);
000674  f104027c          ADD      r2,r4,#0x7c
000678  f1040170          ADD      r1,r4,#0x70
00067c  4630              MOV      r0,r6
00067e  f7fffffe          BL       WIDGET__SetScrollState
;;;360    }
000682  b009              ADD      sp,sp,#0x24
000684  bdf0              POP      {r4-r7,pc}
;;;361    
                          ENDP

                  _SetGridOffY PROC
;;;365    */
;;;366    static unsigned _SetGridOffY(GRAPH_OBJ * pObj, GRAPH_Handle hObj, unsigned Value) {
000686  e92d41f0          PUSH     {r4-r8,lr}
00068a  4604              MOV      r4,r0
00068c  460e              MOV      r6,r1
00068e  4615              MOV      r5,r2
;;;367      unsigned OldValue = 0;
000690  f04f0700          MOV      r7,#0
;;;368      if (pObj) {
000694  b13c              CBZ      r4,|L1.1702|
;;;369        OldValue = pObj->Props.GridOffY;
000696  6c67              LDR      r7,[r4,#0x44]
;;;370        if (pObj->Props.GridOffY != Value) {
000698  6c60              LDR      r0,[r4,#0x44]
00069a  42a8              CMP      r0,r5
00069c  d003              BEQ      |L1.1702|
;;;371          pObj->Props.GridOffY = Value;
00069e  6465              STR      r5,[r4,#0x44]
;;;372          _InvalidateGraph(hObj);
0006a0  4630              MOV      r0,r6
0006a2  f7fffffe          BL       _InvalidateGraph
                  |L1.1702|
;;;373        }
;;;374      }
;;;375      return OldValue;
0006a6  4638              MOV      r0,r7
;;;376    }
0006a8  e8bd81f0          POP      {r4-r8,pc}
;;;377    
                          ENDP

                  _OnScrollValueChanged PROC
;;;381    */
;;;382    static void _OnScrollValueChanged(GRAPH_OBJ * pObj, GRAPH_Handle hObj, WM_HWIN hScroll) {
0006ac  e92d41f0          PUSH     {r4-r8,lr}
0006b0  4604              MOV      r4,r0
0006b2  460d              MOV      r5,r1
0006b4  4616              MOV      r6,r2
;;;383      int Value, Id;
;;;384      Value = SCROLLBAR_GetValue(hScroll);
0006b6  4630              MOV      r0,r6
0006b8  f7fffffe          BL       SCROLLBAR_GetValue
0006bc  4607              MOV      r7,r0
;;;385      Id = WM_GetId(hScroll);
0006be  4630              MOV      r0,r6
0006c0  f7fffffe          BL       WM_GetId
0006c4  4680              MOV      r8,r0
;;;386      if (Id == GUI_ID_VSCROLL) {
0006c6  f1b80ffe          CMP      r8,#0xfe
0006ca  d101              BNE      |L1.1744|
;;;387        pObj->ScrollStateV.v = Value;
0006cc  6767              STR      r7,[r4,#0x74]
0006ce  e002              B        |L1.1750|
                  |L1.1744|
;;;388      } else {
;;;389        pObj->ScrollStateH.v = Value;
0006d0  f04f0080          MOV      r0,#0x80
0006d4  5107              STR      r7,[r0,r4]
                  |L1.1750|
;;;390      }
;;;391      WM_InvalidateWindow(hObj);
0006d6  4628              MOV      r0,r5
0006d8  f7fffffe          BL       WM_InvalidateWindow
;;;392    }
0006dc  e8bd81f0          POP      {r4-r8,pc}
;;;393    
                          ENDP

                  GRAPH__AddValue PROC
;;;426    */
;;;427    void GRAPH__AddValue(GRAPH_DATA_OBJ * pDataObj, void * pData, void * pValue, int Size) {
0006e0  e92d41f0          PUSH     {r4-r8,lr}
0006e4  4604              MOV      r4,r0
0006e6  460e              MOV      r6,r1
0006e8  4617              MOV      r7,r2
0006ea  461d              MOV      r5,r3
;;;428      if (pDataObj->PaintObj.hGraph) {
0006ec  8920              LDRH     r0,[r4,#8]
0006ee  b308              CBZ      r0,|L1.1844|
;;;429        if (pDataObj->NumItems == pDataObj->MaxNumItems) {
0006f0  e9d40103          LDRD     r0,r1,[r4,#0xc]
0006f4  4288              CMP      r0,r1
0006f6  d110              BNE      |L1.1818|
;;;430          memmove((U8 *)pData, (U8 *)pData + Size, Size * (pDataObj->MaxNumItems - 1));
0006f8  6920              LDR      r0,[r4,#0x10]
0006fa  1e40              SUBS     r0,r0,#1
0006fc  fb00f205          MUL      r2,r0,r5
000700  1971              ADDS     r1,r6,r5
000702  4630              MOV      r0,r6
000704  f7fffffe          BL       __aeabi_memmove
;;;431          memmove((U8 *)pData + Size * (pDataObj->NumItems - 1), pValue, Size);
000708  68e1              LDR      r1,[r4,#0xc]
00070a  1e49              SUBS     r1,r1,#1
00070c  fb056001          MLA      r0,r5,r1,r6
000710  462a              MOV      r2,r5
000712  4639              MOV      r1,r7
000714  f7fffffe          BL       __aeabi_memmove
000718  e008              B        |L1.1836|
                  |L1.1818|
;;;432        } else {
;;;433          memmove((U8 *)pData + Size * pDataObj->NumItems++, pValue, Size);
00071a  68e2              LDR      r2,[r4,#0xc]
00071c  1c51              ADDS     r1,r2,#1
00071e  fb056002          MLA      r0,r5,r2,r6
000722  462a              MOV      r2,r5
000724  60e1              STR      r1,[r4,#0xc]
000726  4639              MOV      r1,r7
000728  f7fffffe          BL       __aeabi_memmove
                  |L1.1836|
;;;434        }
;;;435        _InvalidateGraph(pDataObj->PaintObj.hGraph);
00072c  f9b40008          LDRSH    r0,[r4,#8]
000730  f7fffffe          BL       _InvalidateGraph
                  |L1.1844|
;;;436      }
;;;437    }
000734  e8bd81f0          POP      {r4-r8,pc}
;;;438    
                          ENDP

                  GRAPH_Callback PROC
;;;448    */
;;;449    void GRAPH_Callback (WM_MESSAGE * pMsg) {
000738  e92d41f0          PUSH     {r4-r8,lr}
00073c  4604              MOV      r4,r0
;;;450      int Result, ManageScrollBars = 0;
00073e  f04f0700          MOV      r7,#0
;;;451      GRAPH_Handle hObj;
;;;452      GRAPH_OBJ  * pObj;
;;;453      hObj = pMsg->hWin;
000742  f9b46004          LDRSH    r6,[r4,#4]
;;;454      pObj = (GRAPH_OBJ *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
000746  4630              MOV      r0,r6
000748  f7fffffe          BL       GUI_ALLOC_h2p
00074c  4680              MOV      r8,r0
;;;455      /* Let widget handle the standard messages */
;;;456      if (pMsg->MsgId == WM_WIDGET_SET_EFFECT) {
00074e  6820              LDR      r0,[r4,#0]
000750  f5b07f40          CMP      r0,#0x300
000754  d101              BNE      |L1.1882|
;;;457        ManageScrollBars = 1;
000756  f04f0701          MOV      r7,#1
                  |L1.1882|
;;;458      }
;;;459      Result = WIDGET_HandleActive(hObj, pMsg);
00075a  4621              MOV      r1,r4
00075c  4630              MOV      r0,r6
00075e  f7fffffe          BL       WIDGET_HandleActive
000762  4605              MOV      r5,r0
;;;460      if (ManageScrollBars) {
000764  b11f              CBZ      r7,|L1.1902|
;;;461        _ManageScrollBars(pObj, hObj);
000766  4631              MOV      r1,r6
000768  4640              MOV      r0,r8
00076a  f7fffffe          BL       _ManageScrollBars
                  |L1.1902|
;;;462      }
;;;463      if (!Result) {
00076e  b90d              CBNZ     r5,|L1.1908|
                  |L1.1904|
;;;464        return;
;;;465      }
;;;466      switch (pMsg->MsgId) {
;;;467      case WM_SIZE:
;;;468        _ManageScrollBars(pObj, hObj);
;;;469        break;
;;;470      case WM_PAINT:
;;;471        _OnPaint(pObj, hObj, (GUI_RECT *)pMsg->Data.p);
;;;472        return;
;;;473      case WM_DELETE:
;;;474        _OnDelete(pObj);
;;;475        return;
;;;476      case WM_NOTIFY_PARENT:
;;;477        switch (pMsg->Data.v) {
;;;478        case WM_NOTIFICATION_VALUE_CHANGED:
;;;479          if (pMsg->hWinSrc  == WM_GetScrollbarV(hObj)) {
;;;480            _OnScrollValueChanged(pObj, pMsg->hWin, pMsg->hWinSrc);
;;;481          } else if (pMsg->hWinSrc == WM_GetScrollbarH(hObj)) {
;;;482            _OnScrollValueChanged(pObj, pMsg->hWin, pMsg->hWinSrc);
;;;483          }
;;;484          break;
;;;485        case WM_NOTIFICATION_SCROLLBAR_ADDED:
;;;486          #if WIDGET_USE_PARENT_EFFECT
;;;487            WIDGET_SetEffect(pMsg->hWinSrc, pObj->Widget.pEffect);
;;;488          #endif
;;;489          break;
;;;490        }
;;;491      }
;;;492      WM_DefaultProc(pMsg);
;;;493    }
000770  e8bd81f0          POP      {r4-r8,pc}
                  |L1.1908|
000774  6820              LDR      r0,[r4,#0]            ;466
000776  2805              CMP      r0,#5                 ;466
000778  d006              BEQ      |L1.1928|
00077a  280b              CMP      r0,#0xb               ;466
00077c  d00f              BEQ      |L1.1950|
00077e  280f              CMP      r0,#0xf               ;466
000780  d007              BEQ      |L1.1938|
000782  2826              CMP      r0,#0x26              ;466
000784  d136              BNE      |L1.2036|
000786  e00e              B        |L1.1958|
                  |L1.1928|
000788  4631              MOV      r1,r6                 ;468
00078a  4640              MOV      r0,r8                 ;468
00078c  f7fffffe          BL       _ManageScrollBars
000790  e030              B        |L1.2036|
                  |L1.1938|
000792  4631              MOV      r1,r6                 ;471
000794  4640              MOV      r0,r8                 ;471
000796  68a2              LDR      r2,[r4,#8]            ;471
000798  f7fffffe          BL       _OnPaint
00079c  e7e8              B        |L1.1904|
                  |L1.1950|
00079e  4640              MOV      r0,r8                 ;474
0007a0  f7fffffe          BL       _OnDelete
0007a4  e7e4              B        |L1.1904|
                  |L1.1958|
0007a6  68a0              LDR      r0,[r4,#8]            ;477
0007a8  2805              CMP      r0,#5                 ;477
0007aa  d002              BEQ      |L1.1970|
0007ac  2806              CMP      r0,#6                 ;477
0007ae  d11f              BNE      |L1.2032|
0007b0  e01d              B        |L1.2030|
                  |L1.1970|
0007b2  4630              MOV      r0,r6                 ;479
0007b4  f7fffffe          BL       WM_GetScrollbarV
0007b8  f9b41006          LDRSH    r1,[r4,#6]            ;479
0007bc  4288              CMP      r0,r1                 ;479
0007be  d107              BNE      |L1.2000|
0007c0  f9b42006          LDRSH    r2,[r4,#6]            ;480
0007c4  f9b41004          LDRSH    r1,[r4,#4]            ;480
0007c8  4640              MOV      r0,r8                 ;480
0007ca  f7fffffe          BL       _OnScrollValueChanged
0007ce  e00d              B        |L1.2028|
                  |L1.2000|
0007d0  4630              MOV      r0,r6                 ;481
0007d2  f7fffffe          BL       WM_GetScrollbarH
0007d6  f9b41006          LDRSH    r1,[r4,#6]            ;481
0007da  4288              CMP      r0,r1                 ;481
0007dc  d106              BNE      |L1.2028|
0007de  f9b42006          LDRSH    r2,[r4,#6]            ;482
0007e2  f9b41004          LDRSH    r1,[r4,#4]            ;482
0007e6  4640              MOV      r0,r8                 ;482
0007e8  f7fffffe          BL       _OnScrollValueChanged
                  |L1.2028|
0007ec  e000              B        |L1.2032|
                  |L1.2030|
0007ee  bf00              NOP                            ;489
                  |L1.2032|
0007f0  bf00              NOP                            ;484
0007f2  bf00              NOP                            ;466
                  |L1.2036|
0007f4  bf00              NOP                            ;469
0007f6  4620              MOV      r0,r4                 ;492
0007f8  f7fffffe          BL       WM_DefaultProc
0007fc  bf00              NOP      
0007fe  e7b7              B        |L1.1904|
;;;494    
                          ENDP

                  GRAPH_CreateEx PROC
;;;504    */
;;;505    GRAPH_Handle GRAPH_CreateEx(int x0, int y0, int xsize, int ysize, WM_HWIN hParent,
000800  e92d4fff          PUSH     {r0-r11,lr}
;;;506                                int WinFlags, int ExFlags, int Id)
;;;507    {
000804  b085              SUB      sp,sp,#0x14
000806  4606              MOV      r6,r0
000808  460f              MOV      r7,r1
00080a  4690              MOV      r8,r2
00080c  e9ddab13          LDRD     r10,r11,[sp,#0x4c]
000810  f8dd9048          LDR      r9,[sp,#0x48]
;;;508      GRAPH_Handle hObj;
;;;509      WM_LOCK();
;;;510      hObj = WM_CreateWindowAsChild(x0, y0, xsize, ysize, hParent, WinFlags, GRAPH_Callback,
000814  f04f016c          MOV      r1,#0x6c
000818  f2af02e3          ADR      r2,GRAPH_Callback + 1
00081c  fa1ff08a          UXTH     r0,r10
000820  e9cd9000          STRD     r9,r0,[sp,#0]
000824  e9cd2102          STRD     r2,r1,[sp,#8]
000828  4642              MOV      r2,r8
00082a  4639              MOV      r1,r7
00082c  4630              MOV      r0,r6
00082e  9b08              LDR      r3,[sp,#0x20]
000830  f7fffffe          BL       WM_CreateWindowAsChild
000834  4605              MOV      r5,r0
;;;511                                    sizeof(GRAPH_OBJ) - sizeof(WM_Obj));
;;;512      if (hObj) {
000836  b195              CBZ      r5,|L1.2142|
;;;513        GRAPH_OBJ * pObj;
;;;514        pObj = (GRAPH_OBJ *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
000838  4628              MOV      r0,r5
00083a  f7fffffe          BL       GUI_ALLOC_h2p
00083e  4604              MOV      r4,r0
;;;515        /* Init sub-classes */
;;;516        GUI_ARRAY_CREATE(&pObj->GraphArray);
;;;517        GUI_ARRAY_CREATE(&pObj->ScaleArray);
;;;518        /* Init widget specific variables */
;;;519        WIDGET__Init(&pObj->Widget, Id, 0);
000840  f04f0200          MOV      r2,#0
000844  4620              MOV      r0,r4
000846  9915              LDR      r1,[sp,#0x54]
000848  f7fffffe          BL       WIDGET__Init
;;;520        /* Init member variables */
;;;521        GRAPH_INIT_ID(pObj);
;;;522        pObj->Props = GRAPH__DefaultProps;
00084c  2230              MOVS     r2,#0x30
00084e  49c8              LDR      r1,|L1.2928|
000850  f1040028          ADD      r0,r4,#0x28
000854  f7fffffe          BL       __aeabi_memcpy4
;;;523        pObj->Flags = ExFlags;
000858  f8a4b06c          STRH     r11,[r4,#0x6c]
;;;524      }
00085c  bf00              NOP      
                  |L1.2142|
;;;525      WM_UNLOCK();
;;;526      return hObj;
00085e  4628              MOV      r0,r5
;;;527    }
000860  b009              ADD      sp,sp,#0x24
000862  e8bd8ff0          POP      {r4-r11,pc}
;;;528    
                          ENDP

                  GRAPH_AttachData PROC
;;;532    */
;;;533    void GRAPH_AttachData(GRAPH_Handle hObj, GRAPH_DATA_Handle hData) {
000866  b573              PUSH     {r0,r1,r4-r6,lr}
000868  4604              MOV      r4,r0
;;;534      if (hObj) {
00086a  b1a4              CBZ      r4,|L1.2198|
;;;535        GRAPH_OBJ * pObj;
;;;536        GRAPH_DATA_OBJ * pDataObj;
;;;537        WM_LOCK();
;;;538        pObj = GRAPH_H2P(hObj);
00086c  4620              MOV      r0,r4
00086e  f7fffffe          BL       GUI_ALLOC_h2p
000872  4606              MOV      r6,r0
;;;539        pDataObj = (GRAPH_DATA_OBJ *)GUI_ALLOC_h2p(hData);
000874  f9bd0004          LDRSH    r0,[sp,#4]
000878  f7fffffe          BL       GUI_ALLOC_h2p
00087c  4605              MOV      r5,r0
;;;540        pDataObj->PaintObj.hGraph = hObj;
00087e  812c              STRH     r4,[r5,#8]
;;;541        GUI_ARRAY_AddItem(&pObj->GraphArray, &hData, sizeof(GRAPH_DATA_Handle));
000880  f04f0202          MOV      r2,#2
000884  a901              ADD      r1,sp,#4
000886  f1060058          ADD      r0,r6,#0x58
00088a  f7fffffe          BL       GUI_ARRAY_AddItem
;;;542        WM_InvalidateWindow(hObj);
00088e  4620              MOV      r0,r4
000890  f7fffffe          BL       WM_InvalidateWindow
;;;543        WM_UNLOCK();
;;;544      }
000894  bf00              NOP      
                  |L1.2198|
;;;545    }
000896  bd7c              POP      {r2-r6,pc}
;;;546    
                          ENDP

                  GRAPH_AttachScale PROC
;;;550    */
;;;551    void GRAPH_AttachScale(GRAPH_Handle hObj, GRAPH_SCALE_Handle hScale) {
000898  b573              PUSH     {r0,r1,r4-r6,lr}
00089a  4604              MOV      r4,r0
;;;552      if (hObj) {
00089c  b1a4              CBZ      r4,|L1.2248|
;;;553        GRAPH_OBJ * pObj;
;;;554        GRAPH_SCALE_OBJ * pScaleObj;
;;;555        WM_LOCK();
;;;556        pObj = GRAPH_H2P(hObj);
00089e  4620              MOV      r0,r4
0008a0  f7fffffe          BL       GUI_ALLOC_h2p
0008a4  4606              MOV      r6,r0
;;;557        pScaleObj = (GRAPH_SCALE_OBJ *)GUI_ALLOC_h2p(hScale);
0008a6  f9bd0004          LDRSH    r0,[sp,#4]
0008aa  f7fffffe          BL       GUI_ALLOC_h2p
0008ae  4605              MOV      r5,r0
;;;558        pScaleObj->PaintObj.hGraph = hObj;
0008b0  812c              STRH     r4,[r5,#8]
;;;559        GUI_ARRAY_AddItem(&pObj->ScaleArray, &hScale, sizeof(GRAPH_SCALE_Handle));
0008b2  f04f0202          MOV      r2,#2
0008b6  a901              ADD      r1,sp,#4
0008b8  f106005c          ADD      r0,r6,#0x5c
0008bc  f7fffffe          BL       GUI_ARRAY_AddItem
;;;560        WM_InvalidateWindow(hObj);
0008c0  4620              MOV      r0,r4
0008c2  f7fffffe          BL       WM_InvalidateWindow
;;;561        WM_UNLOCK();
;;;562      }
0008c6  bf00              NOP      
                  |L1.2248|
;;;563    }
0008c8  bd7c              POP      {r2-r6,pc}
;;;564    
                          ENDP

                  GRAPH_SetColor PROC
;;;568    */
;;;569    GUI_COLOR GRAPH_SetColor(GRAPH_Handle hObj, GUI_COLOR Color, unsigned Index) {
0008ca  e92d41f0          PUSH     {r4-r8,lr}
0008ce  4607              MOV      r7,r0
0008d0  460d              MOV      r5,r1
0008d2  4614              MOV      r4,r2
;;;570      GUI_COLOR OldColor = 0;
0008d4  f04f0800          MOV      r8,#0
;;;571      if (hObj) {
0008d8  b1af              CBZ      r7,|L1.2310|
;;;572        GRAPH_OBJ * pObj;
;;;573        WM_LOCK();
;;;574        pObj = GRAPH_H2P(hObj);
0008da  4638              MOV      r0,r7
0008dc  f7fffffe          BL       GUI_ALLOC_h2p
0008e0  4606              MOV      r6,r0
;;;575        if (Index < GUI_COUNTOF(pObj->Props.aColor)) {
0008e2  2c04              CMP      r4,#4
0008e4  d20e              BCS      |L1.2308|
;;;576          OldColor = pObj->Props.aColor[Index];
0008e6  f1060028          ADD      r0,r6,#0x28
0008ea  f8508024          LDR      r8,[r0,r4,LSL #2]
;;;577          if (pObj->Props.aColor[Index] != Color) {
0008ee  f8500024          LDR      r0,[r0,r4,LSL #2]
0008f2  42a8              CMP      r0,r5
0008f4  d006              BEQ      |L1.2308|
;;;578            pObj->Props.aColor[Index] = Color;
0008f6  f1060028          ADD      r0,r6,#0x28
0008fa  f8405024          STR      r5,[r0,r4,LSL #2]
;;;579            WM_InvalidateWindow(hObj);
0008fe  4638              MOV      r0,r7
000900  f7fffffe          BL       WM_InvalidateWindow
                  |L1.2308|
;;;580          }
;;;581        }
;;;582        WM_UNLOCK();
;;;583      }
000904  bf00              NOP      
                  |L1.2310|
;;;584      return OldColor;
000906  4640              MOV      r0,r8
;;;585    }
000908  e8bd81f0          POP      {r4-r8,pc}
;;;586    
                          ENDP

                  GRAPH_SetGridVis PROC
;;;590    */
;;;591    unsigned GRAPH_SetGridVis(GRAPH_Handle hObj, unsigned OnOff) {
00090c  e92d41f0          PUSH     {r4-r8,lr}
000910  4606              MOV      r6,r0
000912  460c              MOV      r4,r1
;;;592      unsigned OldValue = 0;
000914  f04f0700          MOV      r7,#0
;;;593      if (hObj) {
000918  b1ae              CBZ      r6,|L1.2374|
;;;594        GRAPH_OBJ * pObj;
;;;595        WM_LOCK();
;;;596        pObj = GRAPH_H2P(hObj);
00091a  4630              MOV      r0,r6
00091c  f7fffffe          BL       GUI_ALLOC_h2p
000920  4605              MOV      r5,r0
;;;597        OldValue = pObj->ShowGrid;
000922  f8957060          LDRB     r7,[r5,#0x60]
;;;598        if ((unsigned)pObj->ShowGrid != OnOff) {
000926  f8950060          LDRB     r0,[r5,#0x60]
00092a  42a0              CMP      r0,r4
00092c  d00a              BEQ      |L1.2372|
;;;599          pObj->ShowGrid = OnOff ? 1 : 0;
00092e  b114              CBZ      r4,|L1.2358|
000930  f04f0001          MOV      r0,#1
000934  e001              B        |L1.2362|
                  |L1.2358|
000936  f04f0000          MOV      r0,#0
                  |L1.2362|
00093a  f8850060          STRB     r0,[r5,#0x60]
;;;600          WM_InvalidateWindow(hObj);
00093e  4630              MOV      r0,r6
000940  f7fffffe          BL       WM_InvalidateWindow
                  |L1.2372|
;;;601        }
;;;602        WM_UNLOCK();
;;;603      }
000944  bf00              NOP      
                  |L1.2374|
;;;604      return OldValue;
000946  4638              MOV      r0,r7
;;;605    }
000948  e8bd81f0          POP      {r4-r8,pc}
;;;606    
                          ENDP

                  GRAPH_SetGridDistX PROC
;;;610    */
;;;611    unsigned GRAPH_SetGridDistX(GRAPH_Handle hObj, unsigned Value) {
00094c  e92d41f0          PUSH     {r4-r8,lr}
000950  4606              MOV      r6,r0
000952  460c              MOV      r4,r1
;;;612      unsigned OldValue = 0;
000954  f04f0700          MOV      r7,#0
;;;613      if (hObj) {
000958  b166              CBZ      r6,|L1.2420|
;;;614        GRAPH_OBJ * pObj;
;;;615        WM_LOCK();
;;;616        pObj = GRAPH_H2P(hObj);
00095a  4630              MOV      r0,r6
00095c  f7fffffe          BL       GUI_ALLOC_h2p
000960  4605              MOV      r5,r0
;;;617        OldValue = pObj->Props.GridSpacingX;
000962  6baf              LDR      r7,[r5,#0x38]
;;;618        if (pObj->Props.GridSpacingX != Value) {
000964  6ba8              LDR      r0,[r5,#0x38]
000966  42a0              CMP      r0,r4
000968  d003              BEQ      |L1.2418|
;;;619          pObj->Props.GridSpacingX = Value;
00096a  63ac              STR      r4,[r5,#0x38]
;;;620          WM_InvalidateWindow(hObj);
00096c  4630              MOV      r0,r6
00096e  f7fffffe          BL       WM_InvalidateWindow
                  |L1.2418|
;;;621        }
;;;622        WM_UNLOCK();
;;;623      }
000972  bf00              NOP      
                  |L1.2420|
;;;624      return OldValue;
000974  4638              MOV      r0,r7
;;;625    }
000976  e8bd81f0          POP      {r4-r8,pc}
;;;626    
                          ENDP

                  GRAPH_SetGridDistY PROC
;;;630    */
;;;631    unsigned GRAPH_SetGridDistY(GRAPH_Handle hObj, unsigned Value) {
00097a  e92d41f0          PUSH     {r4-r8,lr}
00097e  4606              MOV      r6,r0
000980  460c              MOV      r4,r1
;;;632      unsigned OldValue = 0;
000982  f04f0700          MOV      r7,#0
;;;633      if (hObj) {
000986  b166              CBZ      r6,|L1.2466|
;;;634        GRAPH_OBJ * pObj;
;;;635        WM_LOCK();
;;;636        pObj = GRAPH_H2P(hObj);
000988  4630              MOV      r0,r6
00098a  f7fffffe          BL       GUI_ALLOC_h2p
00098e  4605              MOV      r5,r0
;;;637        OldValue = pObj->Props.GridSpacingY;
000990  6bef              LDR      r7,[r5,#0x3c]
;;;638        if (pObj->Props.GridSpacingY != Value) {
000992  6be8              LDR      r0,[r5,#0x3c]
000994  42a0              CMP      r0,r4
000996  d003              BEQ      |L1.2464|
;;;639          pObj->Props.GridSpacingY = Value;
000998  63ec              STR      r4,[r5,#0x3c]
;;;640          WM_InvalidateWindow(hObj);
00099a  4630              MOV      r0,r6
00099c  f7fffffe          BL       WM_InvalidateWindow
                  |L1.2464|
;;;641        }
;;;642        WM_UNLOCK();
;;;643      }
0009a0  bf00              NOP      
                  |L1.2466|
;;;644      return OldValue;
0009a2  4638              MOV      r0,r7
;;;645    }
0009a4  e8bd81f0          POP      {r4-r8,pc}
;;;646    
                          ENDP

                  GRAPH_SetGridOffY PROC
;;;650    */
;;;651    unsigned GRAPH_SetGridOffY(GRAPH_Handle hObj, unsigned Value) {
0009a8  e92d41f0          PUSH     {r4-r8,lr}
0009ac  4604              MOV      r4,r0
0009ae  460d              MOV      r5,r1
;;;652      unsigned OldValue = 0;
0009b0  f04f0600          MOV      r6,#0
;;;653      if (hObj) {
0009b4  b144              CBZ      r4,|L1.2504|
;;;654        WM_LOCK();
;;;655        OldValue = _SetGridOffY(GRAPH_H2P(hObj), hObj, Value);
0009b6  4620              MOV      r0,r4
0009b8  f7fffffe          BL       GUI_ALLOC_h2p
0009bc  4607              MOV      r7,r0
0009be  462a              MOV      r2,r5
0009c0  4621              MOV      r1,r4
0009c2  f7fffffe          BL       _SetGridOffY
0009c6  4606              MOV      r6,r0
                  |L1.2504|
;;;656        WM_UNLOCK();
;;;657      }
;;;658      return OldValue;
0009c8  4630              MOV      r0,r6
;;;659    }
0009ca  e8bd81f0          POP      {r4-r8,pc}
;;;660    
                          ENDP

                  GRAPH_SetBorder PROC
;;;664    */
;;;665    void GRAPH_SetBorder(GRAPH_Handle hObj, unsigned BorderL, unsigned BorderT, unsigned BorderR, unsigned BorderB) {
0009ce  e92d47f0          PUSH     {r4-r10,lr}
0009d2  4605              MOV      r5,r0
0009d4  460e              MOV      r6,r1
0009d6  4617              MOV      r7,r2
0009d8  4698              MOV      r8,r3
0009da  f8dd9020          LDR      r9,[sp,#0x20]
;;;666      if (hObj) {
0009de  b18d              CBZ      r5,|L1.2564|
;;;667        GRAPH_OBJ * pObj;
;;;668        WM_LOCK();
;;;669        pObj = GRAPH_H2P(hObj);
0009e0  4628              MOV      r0,r5
0009e2  f7fffffe          BL       GUI_ALLOC_h2p
0009e6  4604              MOV      r4,r0
;;;670        pObj->Props.BorderL = BorderL;
0009e8  64a6              STR      r6,[r4,#0x48]
;;;671        pObj->Props.BorderT = BorderT;
0009ea  64e7              STR      r7,[r4,#0x4c]
;;;672        pObj->Props.BorderR = BorderR;
0009ec  f8c48050          STR      r8,[r4,#0x50]
;;;673        pObj->Props.BorderB = BorderB;
0009f0  f8c49054          STR      r9,[r4,#0x54]
;;;674        _ManageScrollBars(pObj, hObj);
0009f4  4629              MOV      r1,r5
0009f6  4620              MOV      r0,r4
0009f8  f7fffffe          BL       _ManageScrollBars
;;;675        WM_InvalidateWindow(hObj);
0009fc  4628              MOV      r0,r5
0009fe  f7fffffe          BL       WM_InvalidateWindow
;;;676        WM_UNLOCK();
;;;677      }
000a02  bf00              NOP      
                  |L1.2564|
;;;678    }
000a04  e8bd87f0          POP      {r4-r10,pc}
;;;679    
                          ENDP

                  GRAPH_SetUserDraw PROC
;;;683    */
;;;684    void GRAPH_SetUserDraw(GRAPH_Handle hObj, void (* pUserDraw)(WM_HWIN hObj, int Stage)) {
000a08  b570              PUSH     {r4-r6,lr}
000a0a  4604              MOV      r4,r0
000a0c  460d              MOV      r5,r1
;;;685      if (hObj) {
000a0e  b14c              CBZ      r4,|L1.2596|
;;;686        GRAPH_OBJ * pObj;
;;;687        WM_LOCK();
;;;688        pObj = GRAPH_H2P(hObj);
000a10  4620              MOV      r0,r4
000a12  f7fffffe          BL       GUI_ALLOC_h2p
000a16  4606              MOV      r6,r0
;;;689        pObj->pUserDraw = pUserDraw;
000a18  f8c65088          STR      r5,[r6,#0x88]
;;;690        WM_InvalidateWindow(hObj);
000a1c  4620              MOV      r0,r4
000a1e  f7fffffe          BL       WM_InvalidateWindow
;;;691        WM_UNLOCK();
;;;692      }
000a22  bf00              NOP      
                  |L1.2596|
;;;693    }
000a24  bd70              POP      {r4-r6,pc}
;;;694    
                          ENDP

                  GRAPH_SetVSizeX PROC
;;;698    */
;;;699    unsigned GRAPH_SetVSizeX(GRAPH_Handle hObj, unsigned Value) {
000a26  e92d41f0          PUSH     {r4-r8,lr}
000a2a  4605              MOV      r5,r0
000a2c  460e              MOV      r6,r1
;;;700      unsigned OldValue = 0;
000a2e  f04f0700          MOV      r7,#0
;;;701      if (hObj) {
000a32  b185              CBZ      r5,|L1.2646|
;;;702        GRAPH_OBJ * pObj;
;;;703        WM_LOCK();
;;;704        pObj = GRAPH_H2P(hObj);
000a34  4628              MOV      r0,r5
000a36  f7fffffe          BL       GUI_ALLOC_h2p
000a3a  4604              MOV      r4,r0
;;;705        OldValue = pObj->RangeX;
000a3c  6e67              LDR      r7,[r4,#0x64]
;;;706        if (pObj->RangeX != Value) {
000a3e  6e60              LDR      r0,[r4,#0x64]
000a40  42b0              CMP      r0,r6
000a42  d007              BEQ      |L1.2644|
;;;707          pObj->RangeX = Value;
000a44  6666              STR      r6,[r4,#0x64]
;;;708          _ManageScrollBars(pObj, hObj);
000a46  4629              MOV      r1,r5
000a48  4620              MOV      r0,r4
000a4a  f7fffffe          BL       _ManageScrollBars
;;;709          WM_InvalidateWindow(hObj);
000a4e  4628              MOV      r0,r5
000a50  f7fffffe          BL       WM_InvalidateWindow
                  |L1.2644|
;;;710        }
;;;711        WM_UNLOCK();
;;;712      }
000a54  bf00              NOP      
                  |L1.2646|
;;;713      return OldValue;
000a56  4638              MOV      r0,r7
;;;714    }
000a58  e8bd81f0          POP      {r4-r8,pc}
;;;715    
                          ENDP

                  GRAPH_SetVSizeY PROC
;;;719    */
;;;720    unsigned GRAPH_SetVSizeY(GRAPH_Handle hObj, unsigned Value) {
000a5c  e92d41f0          PUSH     {r4-r8,lr}
000a60  4605              MOV      r5,r0
000a62  460e              MOV      r6,r1
;;;721      unsigned OldValue = 0;
000a64  f04f0700          MOV      r7,#0
;;;722      if (hObj) {
000a68  b185              CBZ      r5,|L1.2700|
;;;723        GRAPH_OBJ * pObj;
;;;724        WM_LOCK();
;;;725        pObj = GRAPH_H2P(hObj);
000a6a  4628              MOV      r0,r5
000a6c  f7fffffe          BL       GUI_ALLOC_h2p
000a70  4604              MOV      r4,r0
;;;726        OldValue = pObj->RangeY;
000a72  6ea7              LDR      r7,[r4,#0x68]
;;;727        if (pObj->RangeY != Value) {
000a74  6ea0              LDR      r0,[r4,#0x68]
000a76  42b0              CMP      r0,r6
000a78  d007              BEQ      |L1.2698|
;;;728          pObj->RangeY = Value;
000a7a  66a6              STR      r6,[r4,#0x68]
;;;729          _ManageScrollBars(pObj, hObj);
000a7c  4629              MOV      r1,r5
000a7e  4620              MOV      r0,r4
000a80  f7fffffe          BL       _ManageScrollBars
;;;730          WM_InvalidateWindow(hObj);
000a84  4628              MOV      r0,r5
000a86  f7fffffe          BL       WM_InvalidateWindow
                  |L1.2698|
;;;731        }
;;;732        WM_UNLOCK();
;;;733      }
000a8a  bf00              NOP      
                  |L1.2700|
;;;734      return OldValue;
000a8c  4638              MOV      r0,r7
;;;735    }
000a8e  e8bd81f0          POP      {r4-r8,pc}
;;;736    
                          ENDP

                  GRAPH_SetGridFixedX PROC
;;;740    */
;;;741    unsigned GRAPH_SetGridFixedX(GRAPH_Handle hObj, unsigned OnOff) {
000a92  e92d41f0          PUSH     {r4-r8,lr}
000a96  4607              MOV      r7,r0
000a98  460d              MOV      r5,r1
;;;742      unsigned OldValue = 0;
000a9a  f04f0600          MOV      r6,#0
;;;743      if (hObj) {
000a9e  b33f              CBZ      r7,|L1.2800|
;;;744        GRAPH_OBJ * pObj;
;;;745        WM_LOCK();
;;;746        pObj = GRAPH_H2P(hObj);
000aa0  4638              MOV      r0,r7
000aa2  f7fffffe          BL       GUI_ALLOC_h2p
000aa6  4604              MOV      r4,r0
;;;747        OldValue = (pObj->Flags & GRAPH_CF_GRID_FIXED_X) ? 1 : 0;
000aa8  f8b4006c          LDRH     r0,[r4,#0x6c]
000aac  f0000601          AND      r6,r0,#1
;;;748        if (OldValue & !OnOff) {
000ab0  b90d              CBNZ     r5,|L1.2742|
000ab2  2001              MOVS     r0,#1
000ab4  e000              B        |L1.2744|
                  |L1.2742|
000ab6  2000              MOVS     r0,#0
                  |L1.2744|
000ab8  4230              TST      r0,r6
000aba  d009              BEQ      |L1.2768|
;;;749          pObj->Flags &= ~GRAPH_CF_GRID_FIXED_X;
000abc  f8b4006c          LDRH     r0,[r4,#0x6c]
000ac0  f0200001          BIC      r0,r0,#1
000ac4  f8a4006c          STRH     r0,[r4,#0x6c]
;;;750          WM_InvalidateWindow(hObj);
000ac8  4638              MOV      r0,r7
000aca  f7fffffe          BL       WM_InvalidateWindow
000ace  e00e              B        |L1.2798|
                  |L1.2768|
;;;751        } else if (!OldValue & OnOff) {
000ad0  b90e              CBNZ     r6,|L1.2774|
000ad2  2001              MOVS     r0,#1
000ad4  e000              B        |L1.2776|
                  |L1.2774|
000ad6  2000              MOVS     r0,#0
                  |L1.2776|
000ad8  4228              TST      r0,r5
000ada  d008              BEQ      |L1.2798|
;;;752          pObj->Flags |= GRAPH_CF_GRID_FIXED_X;
000adc  f8b4006c          LDRH     r0,[r4,#0x6c]
000ae0  f0400001          ORR      r0,r0,#1
000ae4  f8a4006c          STRH     r0,[r4,#0x6c]
;;;753          WM_InvalidateWindow(hObj);
000ae8  4638              MOV      r0,r7
000aea  f7fffffe          BL       WM_InvalidateWindow
                  |L1.2798|
;;;754        }
;;;755        WM_UNLOCK();
;;;756      }
000aee  bf00              NOP      
                  |L1.2800|
;;;757      return OldValue;
000af0  4630              MOV      r0,r6
;;;758    }
000af2  e8bd81f0          POP      {r4-r8,pc}
;;;759    
                          ENDP

                  GRAPH_SetLineStyleH PROC
;;;763    */
;;;764    U8 GRAPH_SetLineStyleH(GRAPH_Handle hObj, U8 Value) {
000af6  e92d41f0          PUSH     {r4-r8,lr}
000afa  4605              MOV      r5,r0
000afc  460c              MOV      r4,r1
;;;765      U8 OldValue = 0;
000afe  f04f0600          MOV      r6,#0
;;;766      if (hObj) {
000b02  b16d              CBZ      r5,|L1.2848|
;;;767        GRAPH_OBJ * pObj;
;;;768        WM_LOCK();
;;;769        pObj = GRAPH_H2P(hObj);
000b04  4628              MOV      r0,r5
000b06  f7fffffe          BL       GUI_ALLOC_h2p
000b0a  4607              MOV      r7,r0
;;;770        OldValue = pObj->LineStyleH;
000b0c  f897606f          LDRB     r6,[r7,#0x6f]
;;;771        if (OldValue != Value) {
000b10  42a6              CMP      r6,r4
000b12  d004              BEQ      |L1.2846|
;;;772          pObj->LineStyleH = Value;
000b14  f887406f          STRB     r4,[r7,#0x6f]
;;;773          WM_InvalidateWindow(hObj);
000b18  4628              MOV      r0,r5
000b1a  f7fffffe          BL       WM_InvalidateWindow
                  |L1.2846|
;;;774        }
;;;775        WM_UNLOCK();
;;;776      }
000b1e  bf00              NOP      
                  |L1.2848|
;;;777      return OldValue;
000b20  4630              MOV      r0,r6
;;;778    }
000b22  e8bd81f0          POP      {r4-r8,pc}
;;;779    
                          ENDP

                  GRAPH_SetLineStyleV PROC
;;;783    */
;;;784    U8 GRAPH_SetLineStyleV(GRAPH_Handle hObj, U8 Value) {
000b26  e92d41f0          PUSH     {r4-r8,lr}
000b2a  4605              MOV      r5,r0
000b2c  460c              MOV      r4,r1
;;;785      U8 OldValue = 0;
000b2e  f04f0600          MOV      r6,#0
;;;786      if (hObj) {
000b32  b16d              CBZ      r5,|L1.2896|
;;;787        GRAPH_OBJ * pObj;
;;;788        WM_LOCK();
;;;789        pObj = GRAPH_H2P(hObj);
000b34  4628              MOV      r0,r5
000b36  f7fffffe          BL       GUI_ALLOC_h2p
000b3a  4607              MOV      r7,r0
;;;790        OldValue = pObj->LineStyleV;
000b3c  f897606e          LDRB     r6,[r7,#0x6e]
;;;791        if (OldValue != Value) {
000b40  42a6              CMP      r6,r4
000b42  d004              BEQ      |L1.2894|
;;;792          pObj->LineStyleV = Value;
000b44  f887406e          STRB     r4,[r7,#0x6e]
;;;793          WM_InvalidateWindow(hObj);
000b48  4628              MOV      r0,r5
000b4a  f7fffffe          BL       WM_InvalidateWindow
                  |L1.2894|
;;;794        }
;;;795        WM_UNLOCK();
;;;796      }
000b4e  bf00              NOP      
                  |L1.2896|
;;;797      return OldValue;
000b50  4630              MOV      r0,r6
;;;798    }
000b52  e8bd81f0          POP      {r4-r8,pc}
;;;799    
                          ENDP

                  GRAPH_SetLineStyle PROC
;;;803    */
;;;804    void GRAPH_SetLineStyle(GRAPH_Handle hObj, U8 Value) {
000b56  b570              PUSH     {r4-r6,lr}
000b58  4604              MOV      r4,r0
000b5a  460d              MOV      r5,r1
;;;805      GRAPH_SetLineStyleV(hObj, Value);
000b5c  4629              MOV      r1,r5
000b5e  4620              MOV      r0,r4
000b60  f7fffffe          BL       GRAPH_SetLineStyleV
;;;806      GRAPH_SetLineStyleH(hObj, Value);
000b64  4629              MOV      r1,r5
000b66  4620              MOV      r0,r4
000b68  f7fffffe          BL       GRAPH_SetLineStyleH
;;;807    }
000b6c  bd70              POP      {r4-r6,pc}
;;;808    
                          ENDP

000b6e  0000              DCW      0x0000
                  |L1.2928|
                          DCD      GRAPH__DefaultProps

                          AREA ||.data||, DATA, ALIGN=2

                  GRAPH__DefaultProps
                          DCD      0x00000000
                          DCD      0x00c0c0c0
                          DCD      0x00ffffff
                          DCD      0x00404040
                          DCD      0x00000032
                          DCD      0x00000032
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000

; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\gui_dispstringinrectwrap.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\gui_dispstringinrectwrap.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\gui_dispstringinrectwrap.crf GUI\Core\GUI_DispStringInRectWrap.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  GUI_DispStringInRectWrap PROC
;;;31     */
;;;32     void GUI_DispStringInRectWrap(const char GUI_UNI_PTR * s, GUI_RECT * pRect, int TextAlign, GUI_WRAPMODE WrapMode) {
000000  e92d4ff0          PUSH     {r4-r11,lr}
000004  b087              SUB      sp,sp,#0x1c
000006  4606              MOV      r6,r0
000008  460c              MOV      r4,r1
00000a  4690              MOV      r8,r2
00000c  469a              MOV      r10,r3
;;;33       const GUI_RECT * pOldClipRect;
;;;34       GUI_RECT Rect;
;;;35       int xSize, ySizeFont, NumBytesToNextLine, NumCharsDisp;
;;;36       if (!s) {
00000e  b916              CBNZ     r6,|L1.22|
                  |L1.16|
;;;37         return;
;;;38       }
;;;39       GUI_LOCK();
;;;40       Rect      = *pRect;
;;;41       xSize     = Rect.x1 - Rect.x0 + 1;
;;;42       ySizeFont = GUI_GetFontDistY();
;;;43       /* Vertical alignment */
;;;44       if ((TextAlign & GUI_TA_VERTICAL) != GUI_TA_TOP) {
;;;45         int NumLines = 0;
;;;46         const char GUI_UNI_PTR * pText;
;;;47         pText = s;
;;;48         /* Count the number of lines */
;;;49         do {
;;;50           NumBytesToNextLine = GUI__WrapGetNumBytesToNextLine(pText, xSize, WrapMode);
;;;51           pText += NumBytesToNextLine;
;;;52           if (NumBytesToNextLine) {
;;;53             NumLines++;
;;;54           }
;;;55         } while (NumBytesToNextLine);
;;;56         /* Do the vertical alignment */
;;;57         switch (TextAlign & GUI_TA_VERTICAL) {
;;;58     	  case GUI_TA_BASELINE:
;;;59     	  case GUI_TA_BOTTOM:
;;;60           Rect.y0 = Rect.y1 - NumLines * ySizeFont + 1;
;;;61           break;
;;;62     	  case GUI_TA_VCENTER:
;;;63     		  Rect.y0 = Rect.y0 + (Rect.y1 - Rect.y0 + 1 - NumLines * ySizeFont) / 2;
;;;64           break;
;;;65     	  }
;;;66       }
;;;67       pOldClipRect = GUI_SetClipRect(pRect);
;;;68       do {
;;;69         int xLineSize;
;;;70         GUI_RECT RectText;
;;;71         NumCharsDisp = GUI__WrapGetNumCharsDisp(s, xSize, WrapMode);
;;;72         Rect.y1      = Rect.y0 + ySizeFont - 1;
;;;73         RectText     = Rect;
;;;74         /* Horizontal alignment */
;;;75         xLineSize = GUI__GetLineDistX(s, NumCharsDisp);
;;;76         switch (TextAlign & GUI_TA_HORIZONTAL) {
;;;77         case GUI_TA_HCENTER:
;;;78           RectText.x0 = pRect->x0 + (pRect->x1 - pRect->x0 - xLineSize) / 2;
;;;79           break;
;;;80         case GUI_TA_LEFT:
;;;81           RectText.x0 = pRect->x0;
;;;82           break;
;;;83         case GUI_TA_RIGHT:
;;;84           RectText.x0 = pRect->x1 - xLineSize + 1;
;;;85           break;
;;;86         }
;;;87         GUI__DispLine(s, NumCharsDisp, &RectText);
;;;88         s += GUI__WrapGetNumBytesToNextLine(s, xSize, WrapMode);
;;;89         Rect.y0 += ySizeFont;
;;;90       } while (*s);
;;;91       GUI_SetClipRect(pOldClipRect);
;;;92       GUI_UNLOCK();
;;;93     }
000010  b007              ADD      sp,sp,#0x1c
000012  e8bd8ff0          POP      {r4-r11,pc}
                  |L1.22|
000016  6820              LDR      r0,[r4,#0]            ;40
000018  9004              STR      r0,[sp,#0x10]         ;40
00001a  6860              LDR      r0,[r4,#4]            ;40
00001c  9005              STR      r0,[sp,#0x14]         ;40
00001e  f9bd0014          LDRSH    r0,[sp,#0x14]         ;41
000022  f9bd1010          LDRSH    r1,[sp,#0x10]         ;41
000026  eba00001          SUB      r0,r0,r1              ;41
00002a  f1000001          ADD      r0,r0,#1              ;41
00002e  9003              STR      r0,[sp,#0xc]          ;41
000030  f7fffffe          BL       GUI_GetFontDistY
000034  4605              MOV      r5,r0                 ;42
000036  f0180f0c          TST      r8,#0xc               ;44
00003a  d038              BEQ      |L1.174|
00003c  f04f0900          MOV      r9,#0                 ;45
000040  46b3              MOV      r11,r6                ;47
000042  bf00              NOP                            ;49
                  |L1.68|
000044  4652              MOV      r2,r10                ;50
000046  4658              MOV      r0,r11                ;50
000048  9903              LDR      r1,[sp,#0xc]          ;50
00004a  f7fffffe          BL       GUI__WrapGetNumBytesToNextLine
00004e  4607              MOV      r7,r0                 ;50
000050  44bb              ADD      r11,r11,r7            ;51
000052  b10f              CBZ      r7,|L1.88|
000054  f1090901          ADD      r9,r9,#1              ;53
                  |L1.88|
000058  2f00              CMP      r7,#0                 ;55
00005a  d1f3              BNE      |L1.68|
00005c  f008000c          AND      r0,r8,#0xc            ;57
000060  2804              CMP      r0,#4                 ;57
000062  d005              BEQ      |L1.112|
000064  2808              CMP      r0,#8                 ;57
000066  d002              BEQ      |L1.110|
000068  280c              CMP      r0,#0xc               ;57
00006a  d11e              BNE      |L1.170|
00006c  e00a              B        |L1.132|
                  |L1.110|
00006e  bf00              NOP                            ;59
                  |L1.112|
000070  f9bd0016          LDRSH    r0,[sp,#0x16]         ;60
000074  fb090015          MLS      r0,r9,r5,r0           ;60
000078  f1000001          ADD      r0,r0,#1              ;60
00007c  b200              SXTH     r0,r0                 ;60
00007e  f8ad0012          STRH     r0,[sp,#0x12]         ;60
000082  e012              B        |L1.170|
                  |L1.132|
000084  f9bd1016          LDRSH    r1,[sp,#0x16]         ;63
000088  f9bd2012          LDRSH    r2,[sp,#0x12]         ;63
00008c  eba10102          SUB      r1,r1,r2              ;63
000090  f1010101          ADD      r1,r1,#1              ;63
000094  fb091015          MLS      r0,r9,r5,r1           ;63
000098  eb0071d0          ADD      r1,r0,r0,LSR #31      ;63
00009c  b292              UXTH     r2,r2                 ;63
00009e  eb020161          ADD      r1,r2,r1,ASR #1       ;63
0000a2  b209              SXTH     r1,r1                 ;63
0000a4  f8ad1012          STRH     r1,[sp,#0x12]         ;63
0000a8  bf00              NOP                            ;64
                  |L1.170|
0000aa  bf00              NOP                            ;61
0000ac  bf00              NOP                            ;66
                  |L1.174|
0000ae  4620              MOV      r0,r4                 ;67
0000b0  f7fffffe          BL       GUI_SetClipRect
0000b4  9006              STR      r0,[sp,#0x18]         ;67
0000b6  bf00              NOP                            ;68
                  |L1.184|
0000b8  4652              MOV      r2,r10                ;71
0000ba  4630              MOV      r0,r6                 ;71
0000bc  9903              LDR      r1,[sp,#0xc]          ;71
0000be  f7fffffe          BL       GUI__WrapGetNumCharsDisp
0000c2  9002              STR      r0,[sp,#8]            ;71
0000c4  f8bd0012          LDRH     r0,[sp,#0x12]         ;72
0000c8  4428              ADD      r0,r0,r5              ;72
0000ca  f1a00001          SUB      r0,r0,#1              ;72
0000ce  b200              SXTH     r0,r0                 ;72
0000d0  f8ad0016          STRH     r0,[sp,#0x16]         ;72
0000d4  e9dd0104          LDRD     r0,r1,[sp,#0x10]      ;73
0000d8  e9cd0100          STRD     r0,r1,[sp,#0]         ;73
0000dc  4630              MOV      r0,r6                 ;75
0000de  9902              LDR      r1,[sp,#8]            ;75
0000e0  f7fffffe          BL       GUI__GetLineDistX
0000e4  4681              MOV      r9,r0                 ;75
0000e6  f0180003          ANDS     r0,r8,#3              ;76
0000ea  d014              BEQ      |L1.278|
0000ec  2801              CMP      r0,#1                 ;76
0000ee  d016              BEQ      |L1.286|
0000f0  2802              CMP      r0,#2                 ;76
0000f2  d11d              BNE      |L1.304|
0000f4  f9b41004          LDRSH    r1,[r4,#4]            ;78
0000f8  f9b42000          LDRSH    r2,[r4,#0]            ;78
0000fc  eba10102          SUB      r1,r1,r2              ;78
000100  eba10009          SUB      r0,r1,r9              ;78
000104  eb0071d0          ADD      r1,r0,r0,LSR #31      ;78
000108  b292              UXTH     r2,r2                 ;78
00010a  eb020161          ADD      r1,r2,r1,ASR #1       ;78
00010e  b209              SXTH     r1,r1                 ;78
000110  f8ad1000          STRH     r1,[sp,#0]            ;78
000114  e00c              B        |L1.304|
                  |L1.278|
000116  8820              LDRH     r0,[r4,#0]            ;81
000118  f8ad0000          STRH     r0,[sp,#0]            ;81
00011c  e008              B        |L1.304|
                  |L1.286|
00011e  88a0              LDRH     r0,[r4,#4]            ;84
000120  eba00009          SUB      r0,r0,r9              ;84
000124  f1000001          ADD      r0,r0,#1              ;84
000128  b200              SXTH     r0,r0                 ;84
00012a  f8ad0000          STRH     r0,[sp,#0]            ;84
00012e  bf00              NOP                            ;85
                  |L1.304|
000130  bf00              NOP                            ;79
000132  466a              MOV      r2,sp                 ;87
000134  4630              MOV      r0,r6                 ;87
000136  9902              LDR      r1,[sp,#8]            ;87
000138  f7fffffe          BL       GUI__DispLine
00013c  4652              MOV      r2,r10                ;88
00013e  4630              MOV      r0,r6                 ;88
000140  9903              LDR      r1,[sp,#0xc]          ;88
000142  f7fffffe          BL       GUI__WrapGetNumBytesToNextLine
000146  4406              ADD      r6,r6,r0              ;88
000148  f8bd0012          LDRH     r0,[sp,#0x12]         ;89
00014c  4428              ADD      r0,r0,r5              ;89
00014e  b200              SXTH     r0,r0                 ;89
000150  f8ad0012          STRH     r0,[sp,#0x12]         ;89
000154  7830              LDRB     r0,[r6,#0]            ;90
000156  2800              CMP      r0,#0                 ;90
000158  d1ae              BNE      |L1.184|
00015a  9806              LDR      r0,[sp,#0x18]         ;91
00015c  f7fffffe          BL       GUI_SetClipRect
000160  bf00              NOP      
000162  e755              B        |L1.16|
;;;94     
                          ENDP


; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\guidev_aa.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\guidev_aa.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\guidev_aa.crf GUI\MemDev\GUIDEV_AA.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  GUI_MEMDEV_CopyToLCDAA PROC
;;;58     */
;;;59     void GUI_MEMDEV_CopyToLCDAA(GUI_MEMDEV_Handle hMem) {
000000  e92d4ff0          PUSH     {r4-r11,lr}
000004  b089              SUB      sp,sp,#0x24
000006  4682              MOV      r10,r0
;;;60       GUI_LOCK();
;;;61       /* Make sure memory handle is valid */
;;;62       if (hMem) {
000008  f1ba0f00          CMP      r10,#0
00000c  d07d              BEQ      |L1.266|
;;;63         GUI_MEMDEV_Handle hMemPrev;
;;;64       #if GUI_NUM_LAYERS > 1
;;;65         int PrevLayer;
;;;66       #endif
;;;67         int x, y;
;;;68         GUI_MEMDEV* pDev = (GUI_MEMDEV*)GUI_ALLOC_h2p(hMem);  /* Convert to pointer */
00000e  4650              MOV      r0,r10
000010  f7fffffe          BL       GUI_ALLOC_h2p
000014  4605              MOV      r5,r0
;;;69         LCD_PIXELINDEX* pData0 = (LCD_PIXELINDEX*)(pDev+1);
000016  f1050b2c          ADD      r11,r5,#0x2c
;;;70         int LineOff = pDev->XSize;
00001a  f9b59004          LDRSH    r9,[r5,#4]
;;;71         int x0 = pDev->x0;
00001e  f9b50000          LDRSH    r0,[r5,#0]
000022  9007              STR      r0,[sp,#0x1c]
;;;72         int y0 = pDev->y0;
000024  f9b50002          LDRSH    r0,[r5,#2]
000028  9006              STR      r0,[sp,#0x18]
;;;73         int XMax = pDev->XSize / 2;
00002a  f9b50004          LDRSH    r0,[r5,#4]
00002e  eb0071d0          ADD      r1,r0,r0,LSR #31
000032  ea4f0161          ASR      r1,r1,#1
000036  9105              STR      r1,[sp,#0x14]
;;;74         int YMax = pDev->YSize / 2;
000038  f9b50006          LDRSH    r0,[r5,#6]
00003c  eb0071d0          ADD      r1,r0,r0,LSR #31
000040  ea4f0161          ASR      r1,r1,#1
000044  9104              STR      r1,[sp,#0x10]
;;;75         hMemPrev = GUI_Context.hDevData;
000046  487c              LDR      r0,|L1.568|
000048  f9b0004c          LDRSH    r0,[r0,#0x4c]  ; GUI_Context
00004c  9008              STR      r0,[sp,#0x20]
;;;76       #if GUI_NUM_LAYERS > 1
;;;77         PrevLayer = GUI_SelectLayer(pDev->LayerIndex);   /* Should not we switch back to the orig. layer when done ? */
;;;78       #else
;;;79         GUI_SelectLCD();  /* Activate LCD */
00004e  f7fffffe          BL       GUI_SelectLCD
;;;80       #endif
;;;81         for (y = 0; y < YMax; y++) {
000052  f04f0800          MOV      r8,#0
000056  e076              B        |L1.326|
                  |L1.88|
;;;82           LCD_PIXELINDEX* pData = pData0;
000058  465e              MOV      r6,r11
;;;83           for (x = 0; x < XMax; x++) {
00005a  f04f0700          MOV      r7,#0
00005e  e06b              B        |L1.312|
                  |L1.96|
;;;84             LCD_PIXELINDEX PixelIndex;
;;;85             int ColorSep[3];
;;;86             U32 Color = LCD_Index2Color(*pData);
000060  8830              LDRH     r0,[r6,#0]
000062  f7fffffe          BL       LCD_Index2Color
000066  4604              MOV      r4,r0
;;;87             ColorSep[0] = Color&255;
000068  b2e0              UXTB     r0,r4
00006a  9000              STR      r0,[sp,#0]
;;;88             ColorSep[1] = (Color>>8)  &255;
00006c  f3c42007          UBFX     r0,r4,#8,#8
000070  9001              STR      r0,[sp,#4]
;;;89             ColorSep[2] = (Color>>16) &255;
000072  f3c44007          UBFX     r0,r4,#16,#8
000076  9002              STR      r0,[sp,#8]
;;;90             Color = LCD_Index2Color(*(pData+1));
000078  8870              LDRH     r0,[r6,#2]
00007a  f7fffffe          BL       LCD_Index2Color
00007e  4604              MOV      r4,r0
;;;91             ColorSep[0] += Color&255;
000080  b2e1              UXTB     r1,r4
000082  9800              LDR      r0,[sp,#0]
000084  4408              ADD      r0,r0,r1
000086  9000              STR      r0,[sp,#0]
;;;92             ColorSep[1] += (Color>>8)  &255;
000088  f3c42107          UBFX     r1,r4,#8,#8
00008c  9801              LDR      r0,[sp,#4]
00008e  4408              ADD      r0,r0,r1
000090  9001              STR      r0,[sp,#4]
;;;93             ColorSep[2] += (Color>>16) &255;
000092  f3c44107          UBFX     r1,r4,#16,#8
000096  9802              LDR      r0,[sp,#8]
000098  4408              ADD      r0,r0,r1
00009a  9002              STR      r0,[sp,#8]
;;;94             Color = LCD_Index2Color(*(pData+LineOff));
00009c  f8360019          LDRH     r0,[r6,r9,LSL #1]
0000a0  f7fffffe          BL       LCD_Index2Color
0000a4  4604              MOV      r4,r0
;;;95             ColorSep[0] += Color&255;
0000a6  b2e1              UXTB     r1,r4
0000a8  9800              LDR      r0,[sp,#0]
0000aa  4408              ADD      r0,r0,r1
0000ac  9000              STR      r0,[sp,#0]
;;;96             ColorSep[1] += (Color>>8)  &255;
0000ae  f3c42107          UBFX     r1,r4,#8,#8
0000b2  9801              LDR      r0,[sp,#4]
0000b4  4408              ADD      r0,r0,r1
0000b6  9001              STR      r0,[sp,#4]
;;;97             ColorSep[2] += (Color>>16) &255;
0000b8  f3c44107          UBFX     r1,r4,#16,#8
0000bc  9802              LDR      r0,[sp,#8]
0000be  4408              ADD      r0,r0,r1
0000c0  9002              STR      r0,[sp,#8]
;;;98             Color = LCD_Index2Color(*(pData+LineOff+1));
0000c2  eb060149          ADD      r1,r6,r9,LSL #1
0000c6  8848              LDRH     r0,[r1,#2]
0000c8  f7fffffe          BL       LCD_Index2Color
0000cc  4604              MOV      r4,r0
;;;99             ColorSep[0] += Color&255;
0000ce  b2e1              UXTB     r1,r4
0000d0  9800              LDR      r0,[sp,#0]
0000d2  4408              ADD      r0,r0,r1
0000d4  9000              STR      r0,[sp,#0]
;;;100            ColorSep[1] += (Color>>8)  &255;
0000d6  f3c42107          UBFX     r1,r4,#8,#8
0000da  9801              LDR      r0,[sp,#4]
0000dc  4408              ADD      r0,r0,r1
0000de  9001              STR      r0,[sp,#4]
;;;101            ColorSep[2] += (Color>>16) &255;
0000e0  f3c44107          UBFX     r1,r4,#16,#8
0000e4  9802              LDR      r0,[sp,#8]
0000e6  4408              ADD      r0,r0,r1
0000e8  9002              STR      r0,[sp,#8]
;;;102            Color  = (ColorSep[0]+2)>>2;
0000ea  9800              LDR      r0,[sp,#0]
0000ec  f1000002          ADD      r0,r0,#2
0000f0  ea4f04a0          ASR      r4,r0,#2
;;;103            Color |= ((ColorSep[1]+2)>>2)<<8;
0000f4  9801              LDR      r0,[sp,#4]
0000f6  f1000002          ADD      r0,r0,#2
0000fa  ea4f00a0          ASR      r0,r0,#2
0000fe  ea442400          ORR      r4,r4,r0,LSL #8
;;;104            Color |= ((U32)((ColorSep[2]+2)>>2))<<16;
000102  9802              LDR      r0,[sp,#8]
000104  f1000002          ADD      r0,r0,#2
000108  e000              B        |L1.268|
                  |L1.266|
00010a  e023              B        |L1.340|
                  |L1.268|
00010c  ea4f00a0          ASR      r0,r0,#2
000110  ea444400          ORR      r4,r4,r0,LSL #16
;;;105            PixelIndex = LCD_Color2Index(Color);
000114  4620              MOV      r0,r4
000116  f7fffffe          BL       LCD_Color2Index
00011a  b280              UXTH     r0,r0
00011c  9003              STR      r0,[sp,#0xc]
;;;106            LCD_SetPixelIndex(x+x0, y+y0, PixelIndex);
00011e  9a06              LDR      r2,[sp,#0x18]
000120  eb080102          ADD      r1,r8,r2
000124  9a07              LDR      r2,[sp,#0x1c]
000126  eb070002          ADD      r0,r7,r2
00012a  9a03              LDR      r2,[sp,#0xc]
00012c  f7fffffe          BL       LCD_SetPixelIndex
;;;107            pData += 2;
000130  f1060604          ADD      r6,r6,#4
000134  f1070701          ADD      r7,r7,#1              ;83
                  |L1.312|
000138  9805              LDR      r0,[sp,#0x14]         ;83
00013a  4287              CMP      r7,r0                 ;83
00013c  db90              BLT      |L1.96|
;;;108          }
;;;109          pData0 += 2 * LineOff;
00013e  eb0b0b89          ADD      r11,r11,r9,LSL #2
000142  f1080801          ADD      r8,r8,#1              ;81
                  |L1.326|
000146  9804              LDR      r0,[sp,#0x10]         ;81
000148  4580              CMP      r8,r0                 ;81
00014a  db85              BLT      |L1.88|
;;;110        }
;;;111      #if GUI_NUM_LAYERS > 1
;;;112        GUI_SelectLayer(PrevLayer);
;;;113      #endif
;;;114        /* Reactivate previously used device */
;;;115        GUI_MEMDEV_Select(hMemPrev);
00014c  9808              LDR      r0,[sp,#0x20]
00014e  f7fffffe          BL       GUI_MEMDEV_Select
;;;116      }
000152  bf00              NOP      
                  |L1.340|
;;;117      GUI_UNLOCK();
;;;118    }
000154  b009              ADD      sp,sp,#0x24
000156  e8bd8ff0          POP      {r4-r11,pc}
;;;119    
                          ENDP

                  GUI_MEMDEV_CopyFromLCDAA PROC
;;;123    */
;;;124    void GUI_MEMDEV_CopyFromLCDAA(GUI_MEMDEV_Handle hMem) {
00015a  e92d4ffe          PUSH     {r1-r11,lr}
00015e  4680              MOV      r8,r0
;;;125      /* Make sure memory handle is valid */
;;;126      if (!hMem) {
000160  f1b80f00          CMP      r8,#0
000164  d102              BNE      |L1.364|
;;;127        hMem = GUI_Context.hDevData;
000166  4834              LDR      r0,|L1.568|
000168  f9b0804c          LDRSH    r8,[r0,#0x4c]  ; GUI_Context
                  |L1.364|
;;;128      }
;;;129      if (hMem) {
00016c  f1b80f00          CMP      r8,#0
000170  d05f              BEQ      |L1.562|
;;;130        int x, y;
;;;131        GUI_MEMDEV* pDevData = (GUI_MEMDEV*) GUI_ALLOC_h2p(hMem);  /* Convert to pointer */
000172  4640              MOV      r0,r8
000174  f7fffffe          BL       GUI_ALLOC_h2p
000178  4604              MOV      r4,r0
;;;132        GUI_USAGE* pUsage = 0;
00017a  f04f0700          MOV      r7,#0
;;;133        int x0 = pDevData->x0;
00017e  f9b4b000          LDRSH    r11,[r4,#0]
;;;134        int y0 = pDevData->y0;
000182  f9b40002          LDRSH    r0,[r4,#2]
000186  9002              STR      r0,[sp,#8]
;;;135        int XMax = pDevData->XSize/2;
000188  f9b40004          LDRSH    r0,[r4,#4]
00018c  eb0071d0          ADD      r1,r0,r0,LSR #31
000190  ea4f0161          ASR      r1,r1,#1
000194  9101              STR      r1,[sp,#4]
;;;136        int YMax = pDevData->YSize/2;
000196  f9b40006          LDRSH    r0,[r4,#6]
00019a  eb0071d0          ADD      r1,r0,r0,LSR #31
00019e  ea4f0161          ASR      r1,r1,#1
0001a2  9100              STR      r1,[sp,#0]
;;;137        LCD_PIXELINDEX* pData = (LCD_PIXELINDEX*)(pDevData+1);
0001a4  f104062c          ADD      r6,r4,#0x2c
;;;138        int LineOff = pDevData->BytesPerLine;
0001a8  f8d4a00c          LDR      r10,[r4,#0xc]
;;;139        if (pDevData->hUsage) 
0001ac  8b20              LDRH     r0,[r4,#0x18]
0001ae  b120              CBZ      r0,|L1.442|
;;;140          pUsage = GUI_USAGE_H2P(pDevData->hUsage);
0001b0  f9b40018          LDRSH    r0,[r4,#0x18]
0001b4  f7fffffe          BL       GUI_ALLOC_h2p
0001b8  4607              MOV      r7,r0
                  |L1.442|
;;;141        for (y=0; y< YMax; y++) {
0001ba  f04f0500          MOV      r5,#0
0001be  e034              B        |L1.554|
                  |L1.448|
;;;142          if (pUsage) {
0001c0  b19f              CBZ      r7,|L1.490|
;;;143            GUI_USAGE_AddHLine(pUsage, 0, y*2, pDevData->XSize);
0001c2  f9b43004          LDRSH    r3,[r4,#4]
0001c6  006a              LSLS     r2,r5,#1
0001c8  68b8              LDR      r0,[r7,#8]
0001ca  2100              MOVS     r1,#0
0001cc  f8d0c004          LDR      r12,[r0,#4]
0001d0  4638              MOV      r0,r7
0001d2  47e0              BLX      r12
;;;144            GUI_USAGE_AddHLine(pUsage, 0, y*2+1, pDevData->XSize);
0001d4  f9b43004          LDRSH    r3,[r4,#4]
0001d8  2001              MOVS     r0,#1
0001da  eb000245          ADD      r2,r0,r5,LSL #1
0001de  68b8              LDR      r0,[r7,#8]
0001e0  2100              MOVS     r1,#0
0001e2  f8d0c004          LDR      r12,[r0,#4]
0001e6  4638              MOV      r0,r7
0001e8  47e0              BLX      r12
                  |L1.490|
;;;145          }
;;;146          for (x=0; x< XMax; x++) {
0001ea  f04f0900          MOV      r9,#0
0001ee  e011              B        |L1.532|
                  |L1.496|
;;;147            *pData = *(pData+1) = *(pData+LineOff) = *(pData+LineOff+1) = LCD_GetPixelIndex(x+x0,y+y0);
0001f0  9a02              LDR      r2,[sp,#8]
0001f2  18a9              ADDS     r1,r5,r2
0001f4  eb09000b          ADD      r0,r9,r11
0001f8  f7fffffe          BL       LCD_GetPixelIndex
0001fc  b280              UXTH     r0,r0
0001fe  eb06014a          ADD      r1,r6,r10,LSL #1
000202  8048              STRH     r0,[r1,#2]
000204  f826001a          STRH     r0,[r6,r10,LSL #1]
000208  8070              STRH     r0,[r6,#2]
00020a  8030              STRH     r0,[r6,#0]
;;;148            pData+=2;
00020c  f1060604          ADD      r6,r6,#4
000210  f1090901          ADD      r9,r9,#1              ;146
                  |L1.532|
000214  9801              LDR      r0,[sp,#4]            ;146
000216  4581              CMP      r9,r0                 ;146
000218  dbea              BLT      |L1.496|
;;;149          }
;;;150          pData += LineOff + (pDevData->XSize&1);
00021a  88a0              LDRH     r0,[r4,#4]
00021c  f0000001          AND      r0,r0,#1
000220  4450              ADD      r0,r0,r10
000222  eb060640          ADD      r6,r6,r0,LSL #1
000226  f1050501          ADD      r5,r5,#1              ;141
                  |L1.554|
00022a  9800              LDR      r0,[sp,#0]            ;141
00022c  4285              CMP      r5,r0                 ;141
00022e  dbc7              BLT      |L1.448|
;;;151        }
;;;152      }
000230  bf00              NOP      
                  |L1.562|
;;;153    }
000232  e8bd8ffe          POP      {r1-r11,pc}
;;;154    
                          ENDP

000236  0000              DCW      0x0000
                  |L1.568|
                          DCD      GUI_Context

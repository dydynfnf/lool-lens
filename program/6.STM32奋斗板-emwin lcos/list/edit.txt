; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\edit.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\edit.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\edit.crf GUI\Widget\EDIT.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _Paint PROC
;;;100    */
;;;101    static void _Paint(EDIT_Obj* pObj, EDIT_Handle hObj) {
000000  e92d4ff0          PUSH     {r4-r11,lr}
000004  b089              SUB      sp,sp,#0x24
000006  4604              MOV      r4,r0
000008  4688              MOV      r8,r1
;;;102      GUI_RECT rFillRect, rInside, rText, rInvert;
;;;103      const char GUI_UNI_PTR * pText = NULL;
00000a  f04f0900          MOV      r9,#0
;;;104      int IsEnabled, CursorWidth;
;;;105      IsEnabled = WM__IsEnabled(hObj);
00000e  4640              MOV      r0,r8
000010  f7fffffe          BL       WM__IsEnabled
000014  4682              MOV      r10,r0
;;;106      /* Set colors and font */
;;;107      LCD_SetBkColor(pObj->Props.aBkColor[IsEnabled]);
000016  f1040168          ADD      r1,r4,#0x68
00001a  f851002a          LDR      r0,[r1,r10,LSL #2]
00001e  f7fffffe          BL       LCD_SetBkColor
;;;108      LCD_SetColor(pObj->Props.aTextColor[0]);
000022  6e20              LDR      r0,[r4,#0x60]
000024  f7fffffe          BL       LCD_SetColor
;;;109      GUI_SetFont(pObj->Props.pFont);
000028  6de0              LDR      r0,[r4,#0x5c]
00002a  f7fffffe          BL       GUI_SetFont
;;;110      /* Calculate size */
;;;111      WIDGET__GetInsideRect(&pObj->Widget, &rFillRect);
00002e  a907              ADD      r1,sp,#0x1c
000030  4620              MOV      r0,r4
000032  f7fffffe          BL       WIDGET__GetInsideRect
;;;112      if (pObj->hpText) {
000036  8d20              LDRH     r0,[r4,#0x28]
000038  b120              CBZ      r0,|L1.68|
;;;113        pText = (const char*) GUI_ALLOC_h2p(pObj->hpText);
00003a  f9b40028          LDRSH    r0,[r4,#0x28]
00003e  f7fffffe          BL       GUI_ALLOC_h2p
000042  4681              MOV      r9,r0
                  |L1.68|
;;;114      }
;;;115      rInside = rFillRect;
000044  e9dd0107          LDRD     r0,r1,[sp,#0x1c]
000048  e9cd0105          STRD     r0,r1,[sp,#0x14]
;;;116      rInside.x0 += pObj->Props.Border + EDIT_XOFF;
00004c  f8bd1014          LDRH     r1,[sp,#0x14]
000050  6da0              LDR      r0,[r4,#0x58]
000052  f1000001          ADD      r0,r0,#1
000056  4408              ADD      r0,r0,r1
000058  b200              SXTH     r0,r0
00005a  f8ad0014          STRH     r0,[sp,#0x14]
;;;117      rInside.x1 -= pObj->Props.Border + EDIT_XOFF;
00005e  f8bd1018          LDRH     r1,[sp,#0x18]
000062  6da0              LDR      r0,[r4,#0x58]
000064  f1000001          ADD      r0,r0,#1
000068  eba10000          SUB      r0,r1,r0
00006c  b200              SXTH     r0,r0
00006e  f8ad0018          STRH     r0,[sp,#0x18]
;;;118      GUI__CalcTextRect(pText, &rInside, &rText, pObj->Props.Align);
000072  aa03              ADD      r2,sp,#0xc
000074  a905              ADD      r1,sp,#0x14
000076  4648              MOV      r0,r9
000078  6d63              LDR      r3,[r4,#0x54]
00007a  f7fffffe          BL       GUI__CalcTextRect
;;;119      /* Calculate position and size of cursor */
;;;120      if (pObj->Widget.State & WIDGET_STATE_FOCUS) {
00007e  8ce0              LDRH     r0,[r4,#0x26]
000080  f0100f01          TST      r0,#1
000084  d05c              BEQ      |L1.320|
;;;121        int NumChars;
;;;122        CursorWidth = ((pObj->XSizeCursor > 0) ? (pObj->XSizeCursor) : (1));
000086  f8940049          LDRB     r0,[r4,#0x49]
00008a  2800              CMP      r0,#0
00008c  dd02              BLE      |L1.148|
00008e  f8940049          LDRB     r0,[r4,#0x49]
000092  e001              B        |L1.152|
                  |L1.148|
000094  f04f0001          MOV      r0,#1
                  |L1.152|
000098  4605              MOV      r5,r0
;;;123        NumChars    = GUI__GetNumChars(pText);
00009a  4648              MOV      r0,r9
00009c  f7fffffe          BL       GUI__GetNumChars
0000a0  4606              MOV      r6,r0
;;;124        if (pText) {
0000a2  f1b90f00          CMP      r9,#0
0000a6  d04a              BEQ      |L1.318|
;;;125          U16 Char;
;;;126          int i, IsRTL = 0;
0000a8  f04f0000          MOV      r0,#0
0000ac  9000              STR      r0,[sp,#0]
;;;127          if ((pObj->EditMode != GUI_EDIT_MODE_INSERT) || (pObj->SelSize)) {
0000ae  f8940048          LDRB     r0,[r4,#0x48]
0000b2  b908              CBNZ     r0,|L1.184|
0000b4  6c60              LDR      r0,[r4,#0x44]
0000b6  b348              CBZ      r0,|L1.268|
                  |L1.184|
;;;128            if (pObj->CursorPos < NumChars) {
0000b8  6c20              LDR      r0,[r4,#0x40]
0000ba  42b0              CMP      r0,r6
0000bc  da26              BGE      |L1.268|
;;;129              if (pObj->SelSize) {
0000be  6c60              LDR      r0,[r4,#0x44]
0000c0  b1c8              CBZ      r0,|L1.246|
;;;130                CursorWidth = 0;
0000c2  f04f0500          MOV      r5,#0
;;;131                for (i = pObj->CursorPos; i < (int)(pObj->CursorPos + pObj->SelSize); i++) {
0000c6  6c27              LDR      r7,[r4,#0x40]
0000c8  e00c              B        |L1.228|
                  |L1.202|
;;;132                  Char = GUI__GetCursorCharacter(pText, i, NumChars, 0);
0000ca  2300              MOVS     r3,#0
0000cc  4632              MOV      r2,r6
0000ce  4639              MOV      r1,r7
0000d0  4648              MOV      r0,r9
0000d2  f7fffffe          BL       GUI__GetCursorCharacter
0000d6  4683              MOV      r11,r0
;;;133                  CursorWidth += GUI_GetCharDistX(Char);
0000d8  4658              MOV      r0,r11
0000da  f7fffffe          BL       GUI_GetCharDistX
0000de  4405              ADD      r5,r5,r0
0000e0  f1070701          ADD      r7,r7,#1              ;131
                  |L1.228|
0000e4  e9d40110          LDRD     r0,r1,[r4,#0x40]      ;131
0000e8  4408              ADD      r0,r0,r1              ;131
0000ea  42b8              CMP      r0,r7                 ;131
0000ec  dced              BGT      |L1.202|
;;;134                }
;;;135                if (!CursorWidth) {
0000ee  b96d              CBNZ     r5,|L1.268|
;;;136                  CursorWidth = 1;
0000f0  f04f0501          MOV      r5,#1
0000f4  e00a              B        |L1.268|
                  |L1.246|
;;;137                }
;;;138              } else {
;;;139                Char = GUI__GetCursorCharacter(pText, pObj->CursorPos, NumChars, &IsRTL);
0000f6  466b              MOV      r3,sp
0000f8  4632              MOV      r2,r6
0000fa  4648              MOV      r0,r9
0000fc  6c21              LDR      r1,[r4,#0x40]
0000fe  f7fffffe          BL       GUI__GetCursorCharacter
000102  4683              MOV      r11,r0
;;;140                CursorWidth = GUI_GetCharDistX(Char);
000104  4658              MOV      r0,r11
000106  f7fffffe          BL       GUI_GetCharDistX
00010a  4605              MOV      r5,r0
                  |L1.268|
;;;141              }
;;;142            }
;;;143          }
;;;144          rInvert = rText;
00010c  e9dd0103          LDRD     r0,r1,[sp,#0xc]
000110  e9cd0101          STRD     r0,r1,[sp,#4]
;;;145          if (IsRTL) {
000114  9800              LDR      r0,[sp,#0]
000116  b130              CBZ      r0,|L1.294|
;;;146            rInvert.x0 -= CursorWidth;
000118  f8bd0004          LDRH     r0,[sp,#4]
00011c  eba00005          SUB      r0,r0,r5
000120  b200              SXTH     r0,r0
000122  f8ad0004          STRH     r0,[sp,#4]
                  |L1.294|
;;;147          }
;;;148          rInvert.x0 += GUI__GetCursorPosX(pText, pObj->CursorPos, NumChars);
000126  4632              MOV      r2,r6
000128  4648              MOV      r0,r9
00012a  6c21              LDR      r1,[r4,#0x40]
00012c  f7fffffe          BL       GUI__GetCursorPosX
000130  f8bd1004          LDRH     r1,[sp,#4]
000134  4408              ADD      r0,r0,r1
000136  b200              SXTH     r0,r0
000138  f8ad0004          STRH     r0,[sp,#4]
;;;149        }
00013c  bf00              NOP      
                  |L1.318|
;;;150      }
00013e  bf00              NOP      
                  |L1.320|
;;;151      /* WM loop */
;;;152      WM_ITERATE_START(NULL) {
000140  2000              MOVS     r0,#0
000142  f7fffffe          BL       WM__InitIVRSearch
000146  b318              CBZ      r0,|L1.400|
000148  bf00              NOP      
                  |L1.330|
;;;153        /* Set clipping rectangle */
;;;154        WM_SetUserClipRect(&rFillRect);
00014a  a807              ADD      r0,sp,#0x1c
00014c  f7fffffe          BL       WM_SetUserClipRect
;;;155        /* Display text */
;;;156        WIDGET__FillStringInRect(pText, &rFillRect, &rInside, &rText);
000150  ab03              ADD      r3,sp,#0xc
000152  aa05              ADD      r2,sp,#0x14
000154  a907              ADD      r1,sp,#0x1c
000156  4648              MOV      r0,r9
000158  f7fffffe          BL       WIDGET__FillStringInRect
;;;157        /* Display cursor if needed */
;;;158        if (pObj->Widget.State & WIDGET_STATE_FOCUS) {
00015c  8ce0              LDRH     r0,[r4,#0x26]
00015e  f0100f01          TST      r0,#1
000162  d00b              BEQ      |L1.380|
;;;159          GUI_InvertRect(rInvert.x0, rInvert.y0, rInvert.x0 + CursorWidth - 1, rInvert.y1);
000164  f9bd300a          LDRSH    r3,[sp,#0xa]
000168  f9bd6004          LDRSH    r6,[sp,#4]
00016c  442e              ADD      r6,r6,r5
00016e  1e72              SUBS     r2,r6,#1
000170  f9bd1006          LDRSH    r1,[sp,#6]
000174  f9bd0004          LDRSH    r0,[sp,#4]
000178  f7fffffe          BL       GUI_InvertRect
                  |L1.380|
;;;160        }
;;;161        WM_SetUserClipRect(NULL);
00017c  2000              MOVS     r0,#0
00017e  f7fffffe          BL       WM_SetUserClipRect
;;;162        /* Draw the 3D effect (if configured) */
;;;163        WIDGET__EFFECT_DrawDown(&pObj->Widget);
000182  4620              MOV      r0,r4
000184  f7fffffe          BL       WIDGET__EFFECT_DrawDown
;;;164      } WM_ITERATE_END();
000188  f7fffffe          BL       WM__GetNextIVR
00018c  2800              CMP      r0,#0
00018e  d1dc              BNE      |L1.330|
                  |L1.400|
;;;165    }
000190  b009              ADD      sp,sp,#0x24
000192  e8bd8ff0          POP      {r4-r11,pc}
;;;166    
                          ENDP

                  _Delete PROC
;;;170    */
;;;171    static void _Delete(EDIT_Obj* pObj) {
000196  b510              PUSH     {r4,lr}
000198  4604              MOV      r4,r0
;;;172      GUI_ALLOC_FreePtr(&pObj->hpText);
00019a  f1040028          ADD      r0,r4,#0x28
00019e  f7fffffe          BL       GUI_ALLOC_FreePtr
;;;173    }
0001a2  bd10              POP      {r4,pc}
;;;174    
                          ENDP

                  _IncrementBuffer PROC
;;;180    */
;;;181    static int _IncrementBuffer(EDIT_Obj* pObj, unsigned AddBytes) {
0001a4  e92d41f0          PUSH     {r4-r8,lr}
0001a8  4604              MOV      r4,r0
0001aa  460e              MOV      r6,r1
;;;182      WM_HMEM hNew;
;;;183      int NewSize;
;;;184      NewSize = pObj->BufferSize + AddBytes;
0001ac  8da0              LDRH     r0,[r4,#0x2c]
0001ae  eb000706          ADD      r7,r0,r6
;;;185      hNew    = GUI_ALLOC_Realloc(pObj->hpText, NewSize);
0001b2  f9b40028          LDRSH    r0,[r4,#0x28]
0001b6  4639              MOV      r1,r7
0001b8  f7fffffe          BL       GUI_ALLOC_Realloc
0001bc  4605              MOV      r5,r0
;;;186      if (hNew) {
0001be  b17d              CBZ      r5,|L1.480|
;;;187        if (!(pObj->hpText)) {
0001c0  8d20              LDRH     r0,[r4,#0x28]
0001c2  b940              CBNZ     r0,|L1.470|
;;;188          char* pText;
;;;189          pText  = (char*) GUI_ALLOC_h2p(hNew);
0001c4  4628              MOV      r0,r5
0001c6  f7fffffe          BL       GUI_ALLOC_h2p
0001ca  4680              MOV      r8,r0
;;;190          *pText = 0;
0001cc  f04f0000          MOV      r0,#0
0001d0  f8880000          STRB     r0,[r8,#0]
;;;191        }
0001d4  bf00              NOP      
                  |L1.470|
;;;192        pObj->BufferSize = NewSize;
0001d6  85a7              STRH     r7,[r4,#0x2c]
;;;193        pObj->hpText     = hNew;
0001d8  8525              STRH     r5,[r4,#0x28]
;;;194        return 1;
0001da  2001              MOVS     r0,#1
                  |L1.476|
;;;195      }
;;;196      return 0;
;;;197    }
0001dc  e8bd81f0          POP      {r4-r8,pc}
                  |L1.480|
0001e0  2000              MOVS     r0,#0                 ;196
0001e2  e7fb              B        |L1.476|
;;;198    
                          ENDP

                  _IsSpaceInBuffer PROC
;;;209    */
;;;210    static int _IsSpaceInBuffer(EDIT_Obj* pObj, int BytesNeeded) {
0001e4  e92d41f0          PUSH     {r4-r8,lr}
0001e8  4604              MOV      r4,r0
0001ea  460d              MOV      r5,r1
;;;211      int NumBytes = 0;
0001ec  f04f0600          MOV      r6,#0
;;;212      if (pObj->hpText) {
0001f0  8d20              LDRH     r0,[r4,#0x28]
0001f2  b138              CBZ      r0,|L1.516|
;;;213        NumBytes = strlen((char*)GUI_ALLOC_h2p(pObj->hpText));
0001f4  f9b40028          LDRSH    r0,[r4,#0x28]
0001f8  f7fffffe          BL       GUI_ALLOC_h2p
0001fc  4607              MOV      r7,r0
0001fe  f7fffffe          BL       strlen
000202  4606              MOV      r6,r0
                  |L1.516|
;;;214      }
;;;215      BytesNeeded = (BytesNeeded + NumBytes + 1) - pObj->BufferSize;
000204  eb050006          ADD      r0,r5,r6
000208  f1000001          ADD      r0,r0,#1
00020c  8da1              LDRH     r1,[r4,#0x2c]
00020e  eba00501          SUB      r5,r0,r1
;;;216      if (BytesNeeded > 0) {
000212  2d00              CMP      r5,#0
000214  dd08              BLE      |L1.552|
;;;217        if (!_IncrementBuffer(pObj, BytesNeeded + EDIT_REALLOC_SIZE)) {
000216  f1050110          ADD      r1,r5,#0x10
00021a  4620              MOV      r0,r4
00021c  f7fffffe          BL       _IncrementBuffer
000220  b910              CBNZ     r0,|L1.552|
;;;218          return 0;
000222  2000              MOVS     r0,#0
                  |L1.548|
;;;219        }
;;;220      }
;;;221      return 1;
;;;222    }
000224  e8bd81f0          POP      {r4-r8,pc}
                  |L1.552|
000228  2001              MOVS     r0,#1                 ;221
00022a  e7fb              B        |L1.548|
;;;223    
                          ENDP

                  _IsCharsAvailable PROC
;;;233    */
;;;234    static int _IsCharsAvailable(EDIT_Obj* pObj, int CharsNeeded) {
00022c  e92d41f0          PUSH     {r4-r8,lr}
000230  4604              MOV      r4,r0
000232  460d              MOV      r5,r1
;;;235      if ((CharsNeeded > 0) && (pObj->MaxLen > 0)) {
000234  2d00              CMP      r5,#0
000236  dd18              BLE      |L1.618|
000238  f9b4002a          LDRSH    r0,[r4,#0x2a]
00023c  2800              CMP      r0,#0
00023e  dd14              BLE      |L1.618|
;;;236        int NumChars = 0;
000240  f04f0600          MOV      r6,#0
;;;237        if (pObj->hpText) {
000244  8d20              LDRH     r0,[r4,#0x28]
000246  b138              CBZ      r0,|L1.600|
;;;238          NumChars = GUI__GetNumChars((char*)GUI_ALLOC_h2p(pObj->hpText));
000248  f9b40028          LDRSH    r0,[r4,#0x28]
00024c  f7fffffe          BL       GUI_ALLOC_h2p
000250  4607              MOV      r7,r0
000252  f7fffffe          BL       GUI__GetNumChars
000256  4606              MOV      r6,r0
                  |L1.600|
;;;239        }
;;;240        if ((CharsNeeded + NumChars) > pObj->MaxLen) {
000258  19a8              ADDS     r0,r5,r6
00025a  f9b4102a          LDRSH    r1,[r4,#0x2a]
00025e  4288              CMP      r0,r1
000260  dd02              BLE      |L1.616|
;;;241          return 0;
000262  2000              MOVS     r0,#0
                  |L1.612|
;;;242        }
;;;243      }
;;;244      return 1;
;;;245    }
000264  e8bd81f0          POP      {r4-r8,pc}
                  |L1.616|
000268  bf00              NOP                            ;243
                  |L1.618|
00026a  2001              MOVS     r0,#1                 ;244
00026c  e7fa              B        |L1.612|
;;;246    
                          ENDP

                  _DeleteChar PROC
;;;253    */
;;;254    static void _DeleteChar(EDIT_Handle hObj, EDIT_Obj* pObj) {
00026e  e92d41f0          PUSH     {r4-r8,lr}
000272  4607              MOV      r7,r0
000274  460c              MOV      r4,r1
;;;255      if (pObj->hpText) {
000276  8d20              LDRH     r0,[r4,#0x28]
000278  b1f0              CBZ      r0,|L1.696|
;;;256        unsigned CursorOffset;
;;;257        char* pText;
;;;258        pText = (char*) GUI_ALLOC_h2p(pObj->hpText);
00027a  f9b40028          LDRSH    r0,[r4,#0x28]
00027e  f7fffffe          BL       GUI_ALLOC_h2p
000282  4605              MOV      r5,r0
;;;259        CursorOffset = GUI_UC__NumChars2NumBytes(pText, pObj->CursorPos);
000284  4628              MOV      r0,r5
000286  6c21              LDR      r1,[r4,#0x40]
000288  f7fffffe          BL       GUI_UC__NumChars2NumBytes
00028c  4606              MOV      r6,r0
;;;260        if (CursorOffset < strlen(pText)) {
00028e  4628              MOV      r0,r5
000290  f7fffffe          BL       strlen
000294  42b0              CMP      r0,r6
000296  d90e              BLS      |L1.694|
;;;261          int NumBytes;
;;;262          pText += CursorOffset;
000298  4435              ADD      r5,r5,r6
;;;263          NumBytes = GUI_UC_GetCharSize(pText);
00029a  4628              MOV      r0,r5
00029c  f7fffffe          BL       GUI_UC_GetCharSize
0002a0  4680              MOV      r8,r0
;;;264          strcpy(pText, pText + NumBytes);
0002a2  eb050108          ADD      r1,r5,r8
0002a6  4628              MOV      r0,r5
0002a8  f7fffffe          BL       strcpy
;;;265          WM_NotifyParent(hObj, WM_NOTIFICATION_VALUE_CHANGED);
0002ac  2105              MOVS     r1,#5
0002ae  4638              MOV      r0,r7
0002b0  f7fffffe          BL       WM_NotifyParent
;;;266        }
0002b4  bf00              NOP      
                  |L1.694|
;;;267      }
0002b6  bf00              NOP      
                  |L1.696|
;;;268    }
0002b8  e8bd81f0          POP      {r4-r8,pc}
;;;269    
                          ENDP

                  _InsertChar PROC
;;;275    */
;;;276    static int _InsertChar(EDIT_Handle hObj, EDIT_Obj* pObj, U16 Char) {
0002bc  e92d47f0          PUSH     {r4-r10,lr}
0002c0  4680              MOV      r8,r0
0002c2  460c              MOV      r4,r1
0002c4  4616              MOV      r6,r2
;;;277      if (_IsCharsAvailable(pObj, 1)) {
0002c6  f04f0101          MOV      r1,#1
0002ca  4620              MOV      r0,r4
0002cc  f7fffffe          BL       _IsCharsAvailable
0002d0  b348              CBZ      r0,|L1.806|
;;;278        int BytesNeeded;
;;;279        BytesNeeded = GUI_UC__CalcSizeOfChar(Char);
0002d2  4630              MOV      r0,r6
0002d4  f7fffffe          BL       GUI_UC__CalcSizeOfChar
0002d8  4607              MOV      r7,r0
;;;280        if (_IsSpaceInBuffer(pObj, BytesNeeded)) {
0002da  4639              MOV      r1,r7
0002dc  4620              MOV      r0,r4
0002de  f7fffffe          BL       _IsSpaceInBuffer
0002e2  b1f8              CBZ      r0,|L1.804|
;;;281          int CursorOffset;
;;;282          char* pText;
;;;283          pText = (char*) GUI_ALLOC_h2p(pObj->hpText);
0002e4  f9b40028          LDRSH    r0,[r4,#0x28]
0002e8  f7fffffe          BL       GUI_ALLOC_h2p
0002ec  4605              MOV      r5,r0
;;;284          CursorOffset = GUI_UC__NumChars2NumBytes(pText, pObj->CursorPos);
0002ee  4628              MOV      r0,r5
0002f0  6c21              LDR      r1,[r4,#0x40]
0002f2  f7fffffe          BL       GUI_UC__NumChars2NumBytes
0002f6  4681              MOV      r9,r0
;;;285          pText += CursorOffset;
0002f8  444d              ADD      r5,r5,r9
;;;286          memmove(pText + BytesNeeded, pText, strlen(pText) + 1);
0002fa  4628              MOV      r0,r5
0002fc  f7fffffe          BL       strlen
000300  f1000a01          ADD      r10,r0,#1
000304  19e8              ADDS     r0,r5,r7
000306  4652              MOV      r2,r10
000308  4629              MOV      r1,r5
00030a  f7fffffe          BL       __aeabi_memmove
;;;287          GUI_UC_Encode(pText, Char);
00030e  4631              MOV      r1,r6
000310  4628              MOV      r0,r5
000312  f7fffffe          BL       GUI_UC_Encode
;;;288          WM_NotifyParent(hObj, WM_NOTIFICATION_VALUE_CHANGED);
000316  2105              MOVS     r1,#5
000318  4640              MOV      r0,r8
00031a  f7fffffe          BL       WM_NotifyParent
;;;289          return 1;
00031e  2001              MOVS     r0,#1
                  |L1.800|
;;;290        }
;;;291      }
;;;292      return 0;
;;;293    }
000320  e8bd87f0          POP      {r4-r10,pc}
                  |L1.804|
000324  bf00              NOP                            ;291
                  |L1.806|
000326  2000              MOVS     r0,#0                 ;292
000328  e7fa              B        |L1.800|
;;;294    
                          ENDP

                  EDIT__SetCursorPos PROC
;;;397    */
;;;398    void EDIT__SetCursorPos(EDIT_Obj* pObj, int CursorPos) {
00032a  e92d41f0          PUSH     {r4-r8,lr}
00032e  4604              MOV      r4,r0
000330  460d              MOV      r5,r1
;;;399      if (pObj->hpText) {
000332  8d20              LDRH     r0,[r4,#0x28]
000334  b348              CBZ      r0,|L1.906|
;;;400        char* pText;
;;;401        int NumChars, Offset;
;;;402        pText    = (char*) GUI_ALLOC_h2p(pObj->hpText);
000336  f9b40028          LDRSH    r0,[r4,#0x28]
00033a  f7fffffe          BL       GUI_ALLOC_h2p
00033e  4680              MOV      r8,r0
;;;403        NumChars = GUI__GetNumChars(pText);
000340  4640              MOV      r0,r8
000342  f7fffffe          BL       GUI__GetNumChars
000346  4606              MOV      r6,r0
;;;404        Offset   = (pObj->EditMode == GUI_EDIT_MODE_INSERT) ? 0 : 1;
000348  f8940048          LDRB     r0,[r4,#0x48]
00034c  b110              CBZ      r0,|L1.852|
00034e  f04f0001          MOV      r0,#1
000352  e001              B        |L1.856|
                  |L1.852|
000354  f04f0000          MOV      r0,#0
                  |L1.856|
000358  4607              MOV      r7,r0
;;;405        if (CursorPos < 0) {
00035a  2d00              CMP      r5,#0
00035c  da01              BGE      |L1.866|
;;;406          CursorPos = 0;
00035e  f04f0500          MOV      r5,#0
                  |L1.866|
;;;407        }
;;;408        if (CursorPos > NumChars) {
000362  42b5              CMP      r5,r6
000364  dd00              BLE      |L1.872|
;;;409          CursorPos = NumChars;
000366  4635              MOV      r5,r6
                  |L1.872|
;;;410        }
;;;411        if (CursorPos > (pObj->MaxLen - Offset)) {
000368  f9b4002a          LDRSH    r0,[r4,#0x2a]
00036c  1bc0              SUBS     r0,r0,r7
00036e  42a8              CMP      r0,r5
000370  da03              BGE      |L1.890|
;;;412          CursorPos = pObj->MaxLen - Offset;
000372  f9b4002a          LDRSH    r0,[r4,#0x2a]
000376  eba00507          SUB      r5,r0,r7
                  |L1.890|
;;;413        }
;;;414        if (pObj->CursorPos != CursorPos) {
00037a  6c20              LDR      r0,[r4,#0x40]
00037c  42a8              CMP      r0,r5
00037e  d000              BEQ      |L1.898|
;;;415          pObj->CursorPos = CursorPos;
000380  6425              STR      r5,[r4,#0x40]
                  |L1.898|
;;;416        }
;;;417        pObj->SelSize = 0;
000382  f04f0000          MOV      r0,#0
000386  6460              STR      r0,[r4,#0x44]
;;;418      }
000388  bf00              NOP      
                  |L1.906|
;;;419    }
00038a  e8bd81f0          POP      {r4-r8,pc}
;;;420    
                          ENDP

                  EDIT_SetCursorAtPixel PROC
;;;534    */
;;;535    void EDIT_SetCursorAtPixel(EDIT_Handle hObj, int xPos) {
00038e  e92d4ff8          PUSH     {r3-r11,lr}
000392  4607              MOV      r7,r0
000394  460d              MOV      r5,r1
;;;536      if (hObj) {
000396  2f00              CMP      r7,#0
000398  d05f              BEQ      |L1.1114|
;;;537        EDIT_Obj* pObj;
;;;538        WM_LOCK();
;;;539        pObj = EDIT_H2P(hObj);
00039a  4638              MOV      r0,r7
00039c  f7fffffe          BL       GUI_ALLOC_h2p
0003a0  4604              MOV      r4,r0
;;;540        if (pObj->hpText) {    
0003a2  8d20              LDRH     r0,[r4,#0x28]
0003a4  2800              CMP      r0,#0
0003a6  d057              BEQ      |L1.1112|
;;;541          const GUI_FONT GUI_UNI_PTR *pOldFont;
;;;542          int xSize, TextWidth, NumChars;
;;;543          const char GUI_UNI_PTR * pText;
;;;544          pText = (char*) GUI_ALLOC_h2p(pObj->hpText);
0003a8  f9b40028          LDRSH    r0,[r4,#0x28]
0003ac  f7fffffe          BL       GUI_ALLOC_h2p
0003b0  9000              STR      r0,[sp,#0]
;;;545          pOldFont = GUI_SetFont(pObj->Props.pFont);
0003b2  6de0              LDR      r0,[r4,#0x5c]
0003b4  f7fffffe          BL       GUI_SetFont
0003b8  4682              MOV      r10,r0
;;;546          xSize = WM_GetWindowSizeX(hObj);
0003ba  4638              MOV      r0,r7
0003bc  f7fffffe          BL       WM_GetWindowSizeX
0003c0  4680              MOV      r8,r0
;;;547          TextWidth = GUI_GetStringDistX(pText);
0003c2  9800              LDR      r0,[sp,#0]
0003c4  f7fffffe          BL       GUI_GetStringDistX
0003c8  4606              MOV      r6,r0
;;;548          switch (pObj->Props.Align & GUI_TA_HORIZONTAL) {
0003ca  6d60              LDR      r0,[r4,#0x54]
0003cc  f0000003          AND      r0,r0,#3
0003d0  2801              CMP      r0,#1
0003d2  d00a              BEQ      |L1.1002|
0003d4  2802              CMP      r0,#2
0003d6  d112              BNE      |L1.1022|
;;;549          case GUI_TA_HCENTER:
;;;550            xPos -= (xSize - TextWidth + 1) / 2;
0003d8  eba80106          SUB      r1,r8,r6
0003dc  f1010001          ADD      r0,r1,#1
0003e0  eb0071d0          ADD      r1,r0,r0,LSR #31
0003e4  eba50561          SUB      r5,r5,r1,ASR #1
;;;551            break;
0003e8  e012              B        |L1.1040|
                  |L1.1002|
;;;552          case GUI_TA_RIGHT:
;;;553            xPos -= xSize - TextWidth - (pObj->Props.Border + EDIT_XOFF);
0003ea  eba80106          SUB      r1,r8,r6
0003ee  6da0              LDR      r0,[r4,#0x58]
0003f0  f1000001          ADD      r0,r0,#1
0003f4  eba10000          SUB      r0,r1,r0
0003f8  eba50500          SUB      r5,r5,r0
;;;554            break;
0003fc  e008              B        |L1.1040|
                  |L1.1022|
;;;555          default:
;;;556            xPos -= (pObj->Props.Border + EDIT_XOFF) + pObj->Widget.pEffect->EffectSize;
0003fe  6da0              LDR      r0,[r4,#0x58]
000400  f1000001          ADD      r0,r0,#1
000404  6a21              LDR      r1,[r4,#0x20]
000406  6949              LDR      r1,[r1,#0x14]
000408  4408              ADD      r0,r0,r1
00040a  eba50500          SUB      r5,r5,r0
00040e  bf00              NOP                            ;548
                  |L1.1040|
000410  bf00              NOP                            ;551
;;;557          }
;;;558          NumChars = GUI__GetNumChars(pText);
000412  9800              LDR      r0,[sp,#0]
000414  f7fffffe          BL       GUI__GetNumChars
000418  4681              MOV      r9,r0
;;;559          if (xPos < 0) {
00041a  2d00              CMP      r5,#0
00041c  da04              BGE      |L1.1064|
;;;560            EDIT__SetCursorPos(pObj, 0);
00041e  2100              MOVS     r1,#0
000420  4620              MOV      r0,r4
000422  f7fffffe          BL       EDIT__SetCursorPos
000426  e010              B        |L1.1098|
                  |L1.1064|
;;;561          } else if (xPos > TextWidth) {
000428  42b5              CMP      r5,r6
00042a  dd04              BLE      |L1.1078|
;;;562            EDIT__SetCursorPos(pObj, NumChars);
00042c  4649              MOV      r1,r9
00042e  4620              MOV      r0,r4
000430  f7fffffe          BL       EDIT__SetCursorPos
000434  e009              B        |L1.1098|
                  |L1.1078|
;;;563          } else {
;;;564            EDIT__SetCursorPos(pObj, GUI__GetCursorPosChar(pText, xPos, NumChars));
000436  464a              MOV      r2,r9
000438  4629              MOV      r1,r5
00043a  9800              LDR      r0,[sp,#0]
00043c  f7fffffe          BL       GUI__GetCursorPosChar
000440  4683              MOV      r11,r0
000442  4659              MOV      r1,r11
000444  4620              MOV      r0,r4
000446  f7fffffe          BL       EDIT__SetCursorPos
                  |L1.1098|
;;;565          }
;;;566          GUI_SetFont(pOldFont);
00044a  4650              MOV      r0,r10
00044c  f7fffffe          BL       GUI_SetFont
;;;567          EDIT_Invalidate(hObj);
000450  4638              MOV      r0,r7
000452  f7fffffe          BL       WM_InvalidateWindow
;;;568        }
000456  bf00              NOP      
                  |L1.1112|
;;;569        WM_UNLOCK();
;;;570      }
000458  bf00              NOP      
                  |L1.1114|
;;;571    }
00045a  e8bd8ff8          POP      {r3-r11,pc}
;;;572    
                          ENDP

                  _OnTouch PROC
;;;298    */
;;;299    static void _OnTouch(EDIT_Handle hObj, EDIT_Obj* pObj, WM_MESSAGE*pMsg) {
00045e  e92d41f0          PUSH     {r4-r8,lr}
000462  4607              MOV      r7,r0
000464  460d              MOV      r5,r1
000466  4614              MOV      r4,r2
;;;300      const GUI_PID_STATE* pState = (const GUI_PID_STATE*)pMsg->Data.p;
000468  68a6              LDR      r6,[r4,#8]
;;;301      GUI_USE_PARA(pObj);
00046a  bf00              NOP      
;;;302      if (pMsg->Data.p) {  /* Something happened in our area (pressed or released) */
00046c  68a0              LDR      r0,[r4,#8]
00046e  b178              CBZ      r0,|L1.1168|
;;;303        if (pState->Pressed) {
000470  7a30              LDRB     r0,[r6,#8]
000472  b140              CBZ      r0,|L1.1158|
;;;304          GUI_DEBUG_LOG1("EDIT_Callback(WM_TOUCH, Pressed, Handle %d)\n",1);
;;;305          EDIT_SetCursorAtPixel(hObj, pState->x);
000474  4638              MOV      r0,r7
000476  6831              LDR      r1,[r6,#0]
000478  f7fffffe          BL       EDIT_SetCursorAtPixel
;;;306          WM_NotifyParent(hObj, WM_NOTIFICATION_CLICKED);
00047c  2101              MOVS     r1,#1
00047e  4638              MOV      r0,r7
000480  f7fffffe          BL       WM_NotifyParent
000484  e008              B        |L1.1176|
                  |L1.1158|
;;;307        } else {
;;;308          GUI_DEBUG_LOG1("EDIT_Callback(WM_TOUCH, Released, Handle %d)\n",1);
;;;309          WM_NotifyParent(hObj, WM_NOTIFICATION_RELEASED);
000486  2102              MOVS     r1,#2
000488  4638              MOV      r0,r7
00048a  f7fffffe          BL       WM_NotifyParent
00048e  e003              B        |L1.1176|
                  |L1.1168|
;;;310        }
;;;311      } else {
;;;312        GUI_DEBUG_LOG1("EDIT_Callback(WM_TOUCH, Moved out, Handle %d)\n",1);
;;;313        WM_NotifyParent(hObj, WM_NOTIFICATION_MOVED_OUT);
000490  2103              MOVS     r1,#3
000492  4638              MOV      r0,r7
000494  f7fffffe          BL       WM_NotifyParent
                  |L1.1176|
;;;314      }
;;;315    }
000498  e8bd81f0          POP      {r4-r8,pc}
;;;316    
                          ENDP

                  _SetValue PROC
;;;320    */
;;;321    static void _SetValue(EDIT_Handle hObj, I32 Value, int Unsigned) {
00049c  e92d41f0          PUSH     {r4-r8,lr}
0004a0  4606              MOV      r6,r0
0004a2  460d              MOV      r5,r1
0004a4  4617              MOV      r7,r2
;;;322      EDIT_Obj* pObj;
;;;323      if (hObj) {
0004a6  b32e              CBZ      r6,|L1.1268|
;;;324        WM_LOCK();
;;;325        pObj = EDIT_H2P(hObj);
0004a8  4630              MOV      r0,r6
0004aa  f7fffffe          BL       GUI_ALLOC_h2p
0004ae  4604              MOV      r4,r0
;;;326        /* Put in min/max range */
;;;327        if (Unsigned) {
0004b0  b147              CBZ      r7,|L1.1220|
;;;328          if ((unsigned)Value < (unsigned)pObj->Min) {
0004b2  6b20              LDR      r0,[r4,#0x30]
0004b4  42a8              CMP      r0,r5
0004b6  d900              BLS      |L1.1210|
;;;329            Value = pObj->Min;
0004b8  6b25              LDR      r5,[r4,#0x30]
                  |L1.1210|
;;;330          }
;;;331          if ((unsigned)Value > (unsigned)pObj->Max) {
0004ba  6b60              LDR      r0,[r4,#0x34]
0004bc  42a8              CMP      r0,r5
0004be  d209              BCS      |L1.1236|
;;;332            Value = pObj->Max;
0004c0  6b65              LDR      r5,[r4,#0x34]
0004c2  e007              B        |L1.1236|
                  |L1.1220|
;;;333          }
;;;334        } else {
;;;335          if (Value < pObj->Min) {
0004c4  6b20              LDR      r0,[r4,#0x30]
0004c6  42a8              CMP      r0,r5
0004c8  dd00              BLE      |L1.1228|
;;;336            Value = pObj->Min;
0004ca  6b25              LDR      r5,[r4,#0x30]
                  |L1.1228|
;;;337          }
;;;338          if (Value > pObj->Max) {
0004cc  6b60              LDR      r0,[r4,#0x34]
0004ce  42a8              CMP      r0,r5
0004d0  da00              BGE      |L1.1236|
;;;339            Value = pObj->Max;
0004d2  6b65              LDR      r5,[r4,#0x34]
                  |L1.1236|
;;;340          }
;;;341        }
;;;342        if (pObj->CurrentValue != (U32)Value) {
0004d4  6be0              LDR      r0,[r4,#0x3c]
0004d6  42a8              CMP      r0,r5
0004d8  d00c              BEQ      |L1.1268|
;;;343          pObj->CurrentValue = Value;
0004da  63e5              STR      r5,[r4,#0x3c]
;;;344          if (pObj->pfUpdateBuffer) {
0004dc  6d20              LDR      r0,[r4,#0x50]
0004de  b110              CBZ      r0,|L1.1254|
;;;345            pObj->pfUpdateBuffer(hObj);
0004e0  4630              MOV      r0,r6
0004e2  6d21              LDR      r1,[r4,#0x50]
0004e4  4788              BLX      r1
                  |L1.1254|
;;;346          }
;;;347          WM_InvalidateWindow(hObj);
0004e6  4630              MOV      r0,r6
0004e8  f7fffffe          BL       WM_InvalidateWindow
;;;348          WM_NotifyParent(hObj, WM_NOTIFICATION_VALUE_CHANGED);
0004ec  2105              MOVS     r1,#5
0004ee  4630              MOV      r0,r6
0004f0  f7fffffe          BL       WM_NotifyParent
                  |L1.1268|
;;;349        }
;;;350        WM_UNLOCK();
;;;351      }
;;;352    }
0004f4  e8bd81f0          POP      {r4-r8,pc}
;;;353    
                          ENDP

                  EDIT__GetCurrentChar PROC
;;;380    */
;;;381    U16 EDIT__GetCurrentChar(EDIT_Obj* pObj) {
0004f8  b570              PUSH     {r4-r6,lr}
0004fa  4604              MOV      r4,r0
;;;382      U16 Char = 0;
0004fc  f04f0600          MOV      r6,#0
;;;383      if (pObj->hpText) {
000500  8d20              LDRH     r0,[r4,#0x28]
000502  b170              CBZ      r0,|L1.1314|
;;;384        const char* pText;
;;;385        pText  = (const char*) GUI_ALLOC_h2p(pObj->hpText);
000504  f9b40028          LDRSH    r0,[r4,#0x28]
000508  f7fffffe          BL       GUI_ALLOC_h2p
00050c  4605              MOV      r5,r0
;;;386        pText += GUI_UC__NumChars2NumBytes(pText, pObj->CursorPos);
00050e  4628              MOV      r0,r5
000510  6c21              LDR      r1,[r4,#0x40]
000512  f7fffffe          BL       GUI_UC__NumChars2NumBytes
000516  4405              ADD      r5,r5,r0
;;;387        Char   = GUI_UC_GetCharCode(pText);
000518  4628              MOV      r0,r5
00051a  f7fffffe          BL       GUI_UC_GetCharCode
00051e  4606              MOV      r6,r0
;;;388      }
000520  bf00              NOP      
                  |L1.1314|
;;;389      return Char;
000522  4630              MOV      r0,r6
;;;390    }
000524  bd70              POP      {r4-r6,pc}
;;;391    
                          ENDP

                  EDIT__SetValueUnsigned PROC
;;;424    */
;;;425    void EDIT__SetValueUnsigned(EDIT_Handle hObj, I32 Value) {
000526  b570              PUSH     {r4-r6,lr}
000528  4604              MOV      r4,r0
00052a  460d              MOV      r5,r1
;;;426      _SetValue(hObj, Value, 1);
00052c  f04f0201          MOV      r2,#1
000530  4629              MOV      r1,r5
000532  4620              MOV      r0,r4
000534  f7fffffe          BL       _SetValue
;;;427    }
000538  bd70              POP      {r4-r6,pc}
;;;428    
                          ENDP

                  EDIT_AddKey PROC
;;;576    */
;;;577    void EDIT_AddKey(EDIT_Handle hObj, int Key) {
00053a  e92d41f0          PUSH     {r4-r8,lr}
00053e  4607              MOV      r7,r0
000540  460d              MOV      r5,r1
;;;578      if (hObj) {
000542  2f00              CMP      r7,#0
000544  d072              BEQ      |L1.1580|
;;;579        EDIT_Obj* pObj;
;;;580        WM_LOCK();
;;;581        pObj = EDIT_H2P(hObj);
000546  4638              MOV      r0,r7
000548  f7fffffe          BL       GUI_ALLOC_h2p
00054c  4604              MOV      r4,r0
;;;582        if (pObj) {
00054e  2c00              CMP      r4,#0
000550  d06d              BEQ      |L1.1582|
;;;583          if (pObj->pfAddKeyEx) {
000552  6ce0              LDR      r0,[r4,#0x4c]
000554  b120              CBZ      r0,|L1.1376|
;;;584            pObj->pfAddKeyEx(hObj, Key);
000556  4629              MOV      r1,r5
000558  4638              MOV      r0,r7
00055a  6ce2              LDR      r2,[r4,#0x4c]
00055c  4790              BLX      r2
00055e  e090              B        |L1.1666|
                  |L1.1376|
;;;585          } else {
;;;586            switch (Key) {
000560  2d12              CMP      r5,#0x12
000562  d048              BEQ      |L1.1526|
000564  dc06              BGT      |L1.1396|
000566  2d08              CMP      r5,#8
000568  d051              BEQ      |L1.1550|
00056a  2d10              CMP      r5,#0x10
00056c  d049              BEQ      |L1.1538|
00056e  2d11              CMP      r5,#0x11
000570  d171              BNE      |L1.1622|
000572  e006              B        |L1.1410|
                  |L1.1396|
000574  2d13              CMP      r5,#0x13
000576  d021              BEQ      |L1.1468|
000578  2d1d              CMP      r5,#0x1d
00057a  d059              BEQ      |L1.1584|
00057c  2d1e              CMP      r5,#0x1e
00057e  d16a              BNE      |L1.1622|
000580  e04f              B        |L1.1570|
                  |L1.1410|
;;;587            case GUI_KEY_UP:
;;;588              if (pObj->hpText) {
000582  8d20              LDRH     r0,[r4,#0x28]
000584  b1c8              CBZ      r0,|L1.1466|
;;;589                char* pText;
;;;590                U16 Char;
;;;591                pText  = (char*) GUI_ALLOC_h2p(pObj->hpText);
000586  f9b40028          LDRSH    r0,[r4,#0x28]
00058a  f7fffffe          BL       GUI_ALLOC_h2p
00058e  4606              MOV      r6,r0
;;;592                pText += GUI_UC__NumChars2NumBytes(pText, pObj->CursorPos);
000590  4630              MOV      r0,r6
000592  6c21              LDR      r1,[r4,#0x40]
000594  f7fffffe          BL       GUI_UC__NumChars2NumBytes
000598  4406              ADD      r6,r6,r0
;;;593                Char   = GUI_UC_GetCharCode(pText);
00059a  4630              MOV      r0,r6
00059c  f7fffffe          BL       GUI_UC_GetCharCode
0005a0  4680              MOV      r8,r0
;;;594                if (Char < 0x7f) {  
0005a2  f1b80f7f          CMP      r8,#0x7f
0005a6  da07              BGE      |L1.1464|
;;;595                  *pText = Char + 1;
0005a8  f1080001          ADD      r0,r8,#1
0005ac  7030              STRB     r0,[r6,#0]
;;;596                  WM_NotifyParent(hObj, WM_NOTIFICATION_VALUE_CHANGED);
0005ae  f04f0105          MOV      r1,#5
0005b2  4638              MOV      r0,r7
0005b4  f7fffffe          BL       WM_NotifyParent
                  |L1.1464|
;;;597                }
;;;598              }
0005b8  bf00              NOP      
                  |L1.1466|
;;;599              break;
0005ba  e061              B        |L1.1664|
                  |L1.1468|
;;;600            case GUI_KEY_DOWN:
;;;601              if (pObj->hpText) {
0005bc  8d20              LDRH     r0,[r4,#0x28]
0005be  b1c8              CBZ      r0,|L1.1524|
;;;602                char* pText;
;;;603                U16 Char;
;;;604                pText  = (char*) GUI_ALLOC_h2p(pObj->hpText);
0005c0  f9b40028          LDRSH    r0,[r4,#0x28]
0005c4  f7fffffe          BL       GUI_ALLOC_h2p
0005c8  4606              MOV      r6,r0
;;;605                pText += GUI_UC__NumChars2NumBytes(pText, pObj->CursorPos);
0005ca  4630              MOV      r0,r6
0005cc  6c21              LDR      r1,[r4,#0x40]
0005ce  f7fffffe          BL       GUI_UC__NumChars2NumBytes
0005d2  4406              ADD      r6,r6,r0
;;;606                Char   = GUI_UC_GetCharCode(pText);
0005d4  4630              MOV      r0,r6
0005d6  f7fffffe          BL       GUI_UC_GetCharCode
0005da  4680              MOV      r8,r0
;;;607                if (Char > 0x20) {  
0005dc  f1b80f20          CMP      r8,#0x20
0005e0  dd07              BLE      |L1.1522|
;;;608                  *pText = Char - 1;
0005e2  f1a80001          SUB      r0,r8,#1
0005e6  7030              STRB     r0,[r6,#0]
;;;609                  WM_NotifyParent(hObj, WM_NOTIFICATION_VALUE_CHANGED);
0005e8  f04f0105          MOV      r1,#5
0005ec  4638              MOV      r0,r7
0005ee  f7fffffe          BL       WM_NotifyParent
                  |L1.1522|
;;;610                }
;;;611              }
0005f2  bf00              NOP      
                  |L1.1524|
;;;612              break;
0005f4  e044              B        |L1.1664|
                  |L1.1526|
;;;613            case GUI_KEY_RIGHT:
;;;614              EDIT__SetCursorPos(pObj, pObj->CursorPos + 1);
0005f6  6c20              LDR      r0,[r4,#0x40]
0005f8  1c41              ADDS     r1,r0,#1
0005fa  4620              MOV      r0,r4
0005fc  f7fffffe          BL       EDIT__SetCursorPos
;;;615              break;
000600  e03e              B        |L1.1664|
                  |L1.1538|
;;;616            case GUI_KEY_LEFT:
;;;617              EDIT__SetCursorPos(pObj, pObj->CursorPos - 1);
000602  6c20              LDR      r0,[r4,#0x40]
000604  1e41              SUBS     r1,r0,#1
000606  4620              MOV      r0,r4
000608  f7fffffe          BL       EDIT__SetCursorPos
;;;618              break;
00060c  e038              B        |L1.1664|
                  |L1.1550|
;;;619            case GUI_KEY_BACKSPACE:
;;;620              EDIT__SetCursorPos(pObj, pObj->CursorPos - 1);
00060e  6c20              LDR      r0,[r4,#0x40]
000610  1e41              SUBS     r1,r0,#1
000612  4620              MOV      r0,r4
000614  f7fffffe          BL       EDIT__SetCursorPos
;;;621              _DeleteChar(hObj, pObj);
000618  4621              MOV      r1,r4
00061a  4638              MOV      r0,r7
00061c  f7fffffe          BL       _DeleteChar
;;;622              break;
000620  e02e              B        |L1.1664|
                  |L1.1570|
;;;623            case GUI_KEY_DELETE:
;;;624              _DeleteChar(hObj, pObj);
000622  4621              MOV      r1,r4
000624  4638              MOV      r0,r7
000626  f7fffffe          BL       _DeleteChar
;;;625              break;
00062a  e029              B        |L1.1664|
                  |L1.1580|
00062c  e02d              B        |L1.1674|
                  |L1.1582|
00062e  e02b              B        |L1.1672|
                  |L1.1584|
;;;626            case GUI_KEY_INSERT:
;;;627              if (pObj->EditMode == GUI_EDIT_MODE_OVERWRITE) {
000630  f8940048          LDRB     r0,[r4,#0x48]
000634  2801              CMP      r0,#1
000636  d104              BNE      |L1.1602|
;;;628                pObj->EditMode = GUI_EDIT_MODE_INSERT;
000638  f04f0000          MOV      r0,#0
00063c  f8840048          STRB     r0,[r4,#0x48]
000640  e007              B        |L1.1618|
                  |L1.1602|
;;;629              } else {
;;;630                pObj->EditMode = GUI_EDIT_MODE_OVERWRITE;
000642  f04f0001          MOV      r0,#1
000646  f8840048          STRB     r0,[r4,#0x48]
;;;631                EDIT__SetCursorPos(pObj, pObj->CursorPos);
00064a  4620              MOV      r0,r4
00064c  6c21              LDR      r1,[r4,#0x40]
00064e  f7fffffe          BL       EDIT__SetCursorPos
                  |L1.1618|
;;;632              }
;;;633              break;
000652  e015              B        |L1.1664|
000654  e7ff              B        |L1.1622|
                  |L1.1622|
;;;634            default:
;;;635              if (Key >= 0x20) {
000656  2d20              CMP      r5,#0x20
000658  db11              BLT      |L1.1662|
;;;636                if (pObj->EditMode != GUI_EDIT_MODE_INSERT) {
00065a  f8940048          LDRB     r0,[r4,#0x48]
00065e  b118              CBZ      r0,|L1.1640|
;;;637                  _DeleteChar(hObj, pObj);
000660  4621              MOV      r1,r4
000662  4638              MOV      r0,r7
000664  f7fffffe          BL       _DeleteChar
                  |L1.1640|
;;;638                }
;;;639                if (_InsertChar(hObj, pObj, Key)) {
000668  b2aa              UXTH     r2,r5
00066a  4621              MOV      r1,r4
00066c  4638              MOV      r0,r7
00066e  f7fffffe          BL       _InsertChar
000672  b120              CBZ      r0,|L1.1662|
;;;640                  EDIT__SetCursorPos(pObj, pObj->CursorPos + 1);
000674  6c20              LDR      r0,[r4,#0x40]
000676  1c41              ADDS     r1,r0,#1
000678  4620              MOV      r0,r4
00067a  f7fffffe          BL       EDIT__SetCursorPos
                  |L1.1662|
00067e  bf00              NOP                            ;586
                  |L1.1664|
000680  bf00              NOP                            ;599
                  |L1.1666|
;;;641                }
;;;642              }
;;;643            }
;;;644          }
;;;645          EDIT_Invalidate(hObj);
000682  4638              MOV      r0,r7
000684  f7fffffe          BL       WM_InvalidateWindow
                  |L1.1672|
;;;646        }
;;;647        WM_UNLOCK();
;;;648      }
000688  bf00              NOP      
                  |L1.1674|
;;;649    }
00068a  e8bd81f0          POP      {r4-r8,pc}
;;;650    
                          ENDP

                  EDIT_Callback PROC
;;;438    */
;;;439    void EDIT_Callback (WM_MESSAGE * pMsg) {
00068e  e92d41f0          PUSH     {r4-r8,lr}
000692  4604              MOV      r4,r0
;;;440      int IsEnabled;
;;;441      EDIT_Handle hObj;
;;;442      EDIT_Obj*   pObj;
;;;443      hObj = (EDIT_Handle) pMsg->hWin;       
000694  f9b45004          LDRSH    r5,[r4,#4]
;;;444      pObj = (EDIT_Obj *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
000698  4628              MOV      r0,r5
00069a  f7fffffe          BL       GUI_ALLOC_h2p
00069e  4680              MOV      r8,r0
;;;445      IsEnabled = WM__IsEnabled(hObj);
0006a0  4628              MOV      r0,r5
0006a2  f7fffffe          BL       WM__IsEnabled
0006a6  4607              MOV      r7,r0
;;;446      /* Let widget handle the standard messages */
;;;447      if (WIDGET_HandleActive(hObj, pMsg) == 0) {
0006a8  4621              MOV      r1,r4
0006aa  4628              MOV      r0,r5
0006ac  f7fffffe          BL       WIDGET_HandleActive
0006b0  b908              CBNZ     r0,|L1.1718|
                  |L1.1714|
;;;448        return;
;;;449      }
;;;450      switch (pMsg->MsgId) {
;;;451      case WM_TOUCH:
;;;452        _OnTouch(hObj, pObj, pMsg);
;;;453        break;
;;;454      case WM_PAINT:
;;;455        GUI_DEBUG_LOG("EDIT: _Callback(WM_PAINT)\n");
;;;456        _Paint(pObj, hObj);
;;;457        return;
;;;458      case WM_DELETE:
;;;459        GUI_DEBUG_LOG("EDIT: _Callback(WM_DELETE)\n");
;;;460        _Delete(pObj);
;;;461        break;       /* No return here ... WM_DefaultProc needs to be called */
;;;462      case WM_KEY:
;;;463        if (IsEnabled) {
;;;464          if ( ((const WM_KEY_INFO*)(pMsg->Data.p))->PressedCnt >0) {
;;;465            int Key = ((const WM_KEY_INFO*)(pMsg->Data.p))->Key;
;;;466            switch (Key) {
;;;467              case GUI_KEY_ENTER:
;;;468              case GUI_KEY_ESCAPE:
;;;469              case GUI_KEY_TAB:
;;;470              case GUI_KEY_BACKTAB:
;;;471                break;                    /* Send to parent by not doing anything */
;;;472              default:
;;;473                EDIT_AddKey(hObj, Key);
;;;474                return;
;;;475            }
;;;476          }
;;;477        }
;;;478        break;
;;;479      }
;;;480      WM_DefaultProc(pMsg);
;;;481    }
0006b2  e8bd81f0          POP      {r4-r8,pc}
                  |L1.1718|
0006b6  6820              LDR      r0,[r4,#0]            ;450
0006b8  280b              CMP      r0,#0xb               ;450
0006ba  d011              BEQ      |L1.1760|
0006bc  280c              CMP      r0,#0xc               ;450
0006be  d004              BEQ      |L1.1738|
0006c0  280e              CMP      r0,#0xe               ;450
0006c2  d011              BEQ      |L1.1768|
0006c4  280f              CMP      r0,#0xf               ;450
0006c6  d12b              BNE      |L1.1824|
0006c8  e005              B        |L1.1750|
                  |L1.1738|
0006ca  4622              MOV      r2,r4                 ;452
0006cc  4641              MOV      r1,r8                 ;452
0006ce  4628              MOV      r0,r5                 ;452
0006d0  f7fffffe          BL       _OnTouch
0006d4  e024              B        |L1.1824|
                  |L1.1750|
0006d6  4629              MOV      r1,r5                 ;456
0006d8  4640              MOV      r0,r8                 ;456
0006da  f7fffffe          BL       _Paint
0006de  e7e8              B        |L1.1714|
                  |L1.1760|
0006e0  4640              MOV      r0,r8                 ;460
0006e2  f7fffffe          BL       _Delete
0006e6  e01b              B        |L1.1824|
                  |L1.1768|
0006e8  b1cf              CBZ      r7,|L1.1822|
0006ea  68a0              LDR      r0,[r4,#8]            ;464
0006ec  6840              LDR      r0,[r0,#4]            ;464
0006ee  2800              CMP      r0,#0                 ;464
0006f0  dd15              BLE      |L1.1822|
0006f2  68a0              LDR      r0,[r4,#8]            ;465
0006f4  6806              LDR      r6,[r0,#0]            ;465
0006f6  2e09              CMP      r6,#9                 ;466
0006f8  d008              BEQ      |L1.1804|
0006fa  2e0a              CMP      r6,#0xa               ;466
0006fc  d007              BEQ      |L1.1806|
0006fe  2e0d              CMP      r6,#0xd               ;466
000700  d002              BEQ      |L1.1800|
000702  2e1b              CMP      r6,#0x1b              ;466
000704  d104              BNE      |L1.1808|
000706  e000              B        |L1.1802|
                  |L1.1800|
000708  bf00              NOP                            ;468
                  |L1.1802|
00070a  bf00              NOP                            ;469
                  |L1.1804|
00070c  bf00              NOP                            ;470
                  |L1.1806|
00070e  e004              B        |L1.1818|
                  |L1.1808|
000710  4631              MOV      r1,r6                 ;473
000712  4628              MOV      r0,r5                 ;473
000714  f7fffffe          BL       EDIT_AddKey
000718  e7cb              B        |L1.1714|
                  |L1.1818|
00071a  bf00              NOP                            ;471
00071c  bf00              NOP                            ;476
                  |L1.1822|
00071e  bf00              NOP                            ;478
                  |L1.1824|
000720  bf00              NOP                            ;453
000722  4620              MOV      r0,r4                 ;480
000724  f7fffffe          BL       WM_DefaultProc
000728  bf00              NOP      
00072a  e7c2              B        |L1.1714|
;;;482    
                          ENDP

                  EDIT_CreateEx PROC
;;;492    */
;;;493    EDIT_Handle EDIT_CreateEx(int x0, int y0, int xsize, int ysize, WM_HWIN hParent, int WinFlags, int ExFlags,
00072c  e92d4fff          PUSH     {r0-r11,lr}
;;;494                              int Id, int MaxLen)
;;;495    {
000730  b085              SUB      sp,sp,#0x14
000732  4607              MOV      r7,r0
000734  4688              MOV      r8,r1
000736  4691              MOV      r9,r2
000738  f8ddb058          LDR      r11,[sp,#0x58]
00073c  e9dd5a13          LDRD     r5,r10,[sp,#0x4c]
;;;496      EDIT_Handle hObj;
;;;497      GUI_USE_PARA(ExFlags);
000740  bf00              NOP      
;;;498      WM_LOCK();
;;;499      /* Alloc memory for obj */
;;;500      WinFlags |= WM_CF_LATE_CLIP;    /* Always use late clipping since widget is optimized for it. */
000742  f4455580          ORR      r5,r5,#0x1000
;;;501      hObj = WM_CreateWindowAsChild(x0, y0, xsize, ysize, hParent, WM_CF_SHOW | WinFlags, EDIT_Callback,
000746  f04f0250          MOV      r2,#0x50
00074a  f2af03bd          ADR      r3,EDIT_Callback + 1
00074e  b2a8              UXTH     r0,r5
000750  f0400002          ORR      r0,r0,#2
000754  9912              LDR      r1,[sp,#0x48]
000756  e9cd3202          STRD     r3,r2,[sp,#8]
00075a  e9cd1000          STRD     r1,r0,[sp,#0]
00075e  464a              MOV      r2,r9
000760  4641              MOV      r1,r8
000762  4638              MOV      r0,r7
000764  9b08              LDR      r3,[sp,#0x20]
000766  f7fffffe          BL       WM_CreateWindowAsChild
00076a  4606              MOV      r6,r0
;;;502                                    sizeof(EDIT_Obj) - sizeof(WM_Obj));
;;;503      if (hObj) {
00076c  b376              CBZ      r6,|L1.1996|
;;;504        EDIT_Obj* pObj;
;;;505        pObj = (EDIT_Obj *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
00076e  4630              MOV      r0,r6
000770  f7fffffe          BL       GUI_ALLOC_h2p
000774  4604              MOV      r4,r0
;;;506        /* init widget specific variables */
;;;507        WIDGET__Init(&pObj->Widget, Id, WIDGET_STATE_FOCUSSABLE);
000776  f04f0210          MOV      r2,#0x10
00077a  4620              MOV      r0,r4
00077c  9915              LDR      r1,[sp,#0x54]
00077e  f7fffffe          BL       WIDGET__Init
;;;508        /* init member variables */
;;;509        EDIT_INIT_ID(pObj);
;;;510        pObj->Props         = EDIT__DefaultProps;
000782  221c              MOVS     r2,#0x1c
000784  49a6              LDR      r1,|L1.2592|
000786  f1040054          ADD      r0,r4,#0x54
00078a  f7fffffe          BL       __aeabi_memcpy4
;;;511        pObj->XSizeCursor   = 1;
00078e  f04f0001          MOV      r0,#1
000792  f8840049          STRB     r0,[r4,#0x49]
;;;512        pObj->MaxLen        = (MaxLen == 0) ? 8 : MaxLen;
000796  f1bb0f00          CMP      r11,#0
00079a  d102              BNE      |L1.1954|
00079c  f04f0008          MOV      r0,#8
0007a0  e000              B        |L1.1956|
                  |L1.1954|
0007a2  4658              MOV      r0,r11
                  |L1.1956|
0007a4  b200              SXTH     r0,r0
0007a6  8560              STRH     r0,[r4,#0x2a]
;;;513        pObj->BufferSize    = 0;
0007a8  f04f0000          MOV      r0,#0
0007ac  85a0              STRH     r0,[r4,#0x2c]
;;;514        pObj->hpText        = 0;
0007ae  8520              STRH     r0,[r4,#0x28]
;;;515        if (_IncrementBuffer(pObj, pObj->MaxLen + 1) == 0) {
0007b0  f9b4002a          LDRSH    r0,[r4,#0x2a]
0007b4  f1000101          ADD      r1,r0,#1
0007b8  4620              MOV      r0,r4
0007ba  f7fffffe          BL       _IncrementBuffer
0007be  b920              CBNZ     r0,|L1.1994|
;;;516          GUI_DEBUG_ERROROUT("EDIT_Create failed to alloc buffer");
;;;517          EDIT_Delete(hObj);
0007c0  4630              MOV      r0,r6
0007c2  f7fffffe          BL       WM_DeleteWindow
;;;518          hObj = 0;
0007c6  f04f0600          MOV      r6,#0
                  |L1.1994|
;;;519        }
;;;520      }
0007ca  bf00              NOP      
                  |L1.1996|
;;;521      WM_UNLOCK();
;;;522      return hObj;
0007cc  4630              MOV      r0,r6
;;;523    }
0007ce  b009              ADD      sp,sp,#0x24
0007d0  e8bd8ff0          POP      {r4-r11,pc}
;;;524    
                          ENDP

                  EDIT_SetFont PROC
;;;654    */
;;;655    void EDIT_SetFont(EDIT_Handle hObj, const GUI_FONT GUI_UNI_PTR * pfont) {
0007d4  b570              PUSH     {r4-r6,lr}
0007d6  4605              MOV      r5,r0
0007d8  460e              MOV      r6,r1
;;;656      EDIT_Obj* pObj;
;;;657      if (hObj == 0)
0007da  b905              CBNZ     r5,|L1.2014|
                  |L1.2012|
;;;658        return;
;;;659      WM_LOCK();
;;;660      pObj = EDIT_H2P(hObj);
;;;661      if (pObj) {
;;;662        pObj->Props.pFont = pfont;
;;;663        EDIT_Invalidate(hObj);
;;;664      }
;;;665      WM_UNLOCK();
;;;666    }
0007dc  bd70              POP      {r4-r6,pc}
                  |L1.2014|
0007de  4628              MOV      r0,r5                 ;660
0007e0  f7fffffe          BL       GUI_ALLOC_h2p
0007e4  4604              MOV      r4,r0                 ;660
0007e6  b11c              CBZ      r4,|L1.2032|
0007e8  65e6              STR      r6,[r4,#0x5c]         ;662
0007ea  4628              MOV      r0,r5                 ;663
0007ec  f7fffffe          BL       WM_InvalidateWindow
                  |L1.2032|
0007f0  bf00              NOP      
0007f2  e7f3              B        |L1.2012|
;;;667    
                          ENDP

                  EDIT_SetBkColor PROC
;;;671    */
;;;672    void EDIT_SetBkColor(EDIT_Handle hObj, unsigned int Index, GUI_COLOR color) {
0007f4  e92d41f0          PUSH     {r4-r8,lr}
0007f8  4606              MOV      r6,r0
0007fa  460d              MOV      r5,r1
0007fc  4617              MOV      r7,r2
;;;673      EDIT_Obj* pObj;
;;;674      if (hObj == 0)
0007fe  b90e              CBNZ     r6,|L1.2052|
                  |L1.2048|
;;;675        return;
;;;676      WM_LOCK();
;;;677      pObj = EDIT_H2P(hObj);
;;;678      if (pObj) {
;;;679        if (Index < GUI_COUNTOF(pObj->Props.aBkColor)) {
;;;680          pObj->Props.aBkColor[Index] = color;
;;;681          EDIT_Invalidate(hObj);
;;;682        }
;;;683      }
;;;684      WM_UNLOCK();
;;;685    }
000800  e8bd81f0          POP      {r4-r8,pc}
                  |L1.2052|
000804  4630              MOV      r0,r6                 ;677
000806  f7fffffe          BL       GUI_ALLOC_h2p
00080a  4604              MOV      r4,r0                 ;677
00080c  b144              CBZ      r4,|L1.2080|
00080e  2d02              CMP      r5,#2                 ;679
000810  d206              BCS      |L1.2080|
000812  f1040068          ADD      r0,r4,#0x68           ;680
000816  f8407025          STR      r7,[r0,r5,LSL #2]     ;680
00081a  4630              MOV      r0,r6                 ;681
00081c  f7fffffe          BL       WM_InvalidateWindow
                  |L1.2080|
000820  bf00              NOP      
000822  e7ed              B        |L1.2048|
;;;686    
                          ENDP

                  EDIT_SetTextColor PROC
;;;690    */
;;;691    void EDIT_SetTextColor(EDIT_Handle hObj, unsigned int Index, GUI_COLOR color) {
000824  e92d41f0          PUSH     {r4-r8,lr}
000828  4606              MOV      r6,r0
00082a  460d              MOV      r5,r1
00082c  4617              MOV      r7,r2
;;;692      EDIT_Obj* pObj;
;;;693      if (hObj == 0)
00082e  b90e              CBNZ     r6,|L1.2100|
                  |L1.2096|
;;;694        return;
;;;695      WM_LOCK();
;;;696      pObj = EDIT_H2P(hObj);
;;;697      if (pObj) {
;;;698        if (Index < GUI_COUNTOF(pObj->Props.aTextColor)) {
;;;699          pObj->Props.aTextColor[Index] = color;
;;;700          EDIT_Invalidate(hObj);
;;;701        }
;;;702      }
;;;703      WM_UNLOCK();
;;;704    }
000830  e8bd81f0          POP      {r4-r8,pc}
                  |L1.2100|
000834  4630              MOV      r0,r6                 ;696
000836  f7fffffe          BL       GUI_ALLOC_h2p
00083a  4604              MOV      r4,r0                 ;696
00083c  b144              CBZ      r4,|L1.2128|
00083e  2d02              CMP      r5,#2                 ;698
000840  d206              BCS      |L1.2128|
000842  f1040060          ADD      r0,r4,#0x60           ;699
000846  f8407025          STR      r7,[r0,r5,LSL #2]     ;699
00084a  4630              MOV      r0,r6                 ;700
00084c  f7fffffe          BL       WM_InvalidateWindow
                  |L1.2128|
000850  bf00              NOP      
000852  e7ed              B        |L1.2096|
;;;705    
                          ENDP

                  EDIT_SetText PROC
;;;709    */
;;;710    void EDIT_SetText(EDIT_Handle hObj, const char* s) {
000854  e92d47f0          PUSH     {r4-r10,lr}
000858  4680              MOV      r8,r0
00085a  460e              MOV      r6,r1
;;;711      if (hObj) {
00085c  f1b80f00          CMP      r8,#0
000860  d050              BEQ      |L1.2308|
;;;712        EDIT_Obj* pObj;
;;;713        WM_LOCK();
;;;714        pObj = EDIT_H2P(hObj);
000862  4640              MOV      r0,r8
000864  f7fffffe          BL       GUI_ALLOC_h2p
000868  4604              MOV      r4,r0
;;;715        if (s) {
00086a  2e00              CMP      r6,#0
00086c  d03e              BEQ      |L1.2284|
;;;716          int NumBytesNew, NumBytesOld = 0;
00086e  f04f0900          MOV      r9,#0
;;;717          int NumCharsNew;
;;;718          if (pObj->hpText) {
000872  8d20              LDRH     r0,[r4,#0x28]
000874  b150              CBZ      r0,|L1.2188|
;;;719            char* pText;
;;;720            pText       = (char*) GUI_ALLOC_h2p(pObj->hpText);
000876  f9b40028          LDRSH    r0,[r4,#0x28]
00087a  f7fffffe          BL       GUI_ALLOC_h2p
00087e  4682              MOV      r10,r0
;;;721            NumBytesOld = strlen(pText) + 1;
000880  4650              MOV      r0,r10
000882  f7fffffe          BL       strlen
000886  f1000901          ADD      r9,r0,#1
;;;722          }
00088a  bf00              NOP      
                  |L1.2188|
;;;723          NumCharsNew = GUI__GetNumChars(s);
00088c  4630              MOV      r0,r6
00088e  f7fffffe          BL       GUI__GetNumChars
000892  4605              MOV      r5,r0
;;;724          if (NumCharsNew > pObj->MaxLen) {
000894  f9b4102a          LDRSH    r1,[r4,#0x2a]
000898  42a9              CMP      r1,r5
00089a  da01              BGE      |L1.2208|
;;;725            NumCharsNew = pObj->MaxLen;
00089c  f9b4502a          LDRSH    r5,[r4,#0x2a]
                  |L1.2208|
;;;726          }
;;;727          NumBytesNew = GUI_UC__NumChars2NumBytes(s, NumCharsNew) + 1;
0008a0  4629              MOV      r1,r5
0008a2  4630              MOV      r0,r6
0008a4  f7fffffe          BL       GUI_UC__NumChars2NumBytes
0008a8  f1000701          ADD      r7,r0,#1
;;;728          if (_IsSpaceInBuffer(pObj, NumBytesNew - NumBytesOld)) {
0008ac  eba70109          SUB      r1,r7,r9
0008b0  4620              MOV      r0,r4
0008b2  f7fffffe          BL       _IsSpaceInBuffer
0008b6  b1c0              CBZ      r0,|L1.2282|
;;;729            char* pText;
;;;730            pText = (char*) GUI_ALLOC_h2p(pObj->hpText);
0008b8  f9b40028          LDRSH    r0,[r4,#0x28]
0008bc  f7fffffe          BL       GUI_ALLOC_h2p
0008c0  4682              MOV      r10,r0
;;;731            memcpy(pText, s, NumBytesNew);
0008c2  463a              MOV      r2,r7
0008c4  4631              MOV      r1,r6
0008c6  4650              MOV      r0,r10
0008c8  f7fffffe          BL       __aeabi_memcpy
;;;732            pObj->CursorPos = NumCharsNew;
0008cc  6425              STR      r5,[r4,#0x40]
;;;733            if (pObj->CursorPos == pObj->MaxLen) {
0008ce  f9b4102a          LDRSH    r1,[r4,#0x2a]
0008d2  6c20              LDR      r0,[r4,#0x40]
0008d4  4288              CMP      r0,r1
0008d6  d107              BNE      |L1.2280|
;;;734              if (pObj->EditMode == GUI_EDIT_MODE_OVERWRITE) {
0008d8  f8940048          LDRB     r0,[r4,#0x48]
0008dc  2801              CMP      r0,#1
0008de  d103              BNE      |L1.2280|
;;;735                pObj->CursorPos--;
0008e0  6c20              LDR      r0,[r4,#0x40]
0008e2  f1a00001          SUB      r0,r0,#1
0008e6  6420              STR      r0,[r4,#0x40]
                  |L1.2280|
;;;736              }
;;;737            }
;;;738          }
0008e8  bf00              NOP      
                  |L1.2282|
;;;739        } else {
0008ea  e007              B        |L1.2300|
                  |L1.2284|
;;;740          GUI_ALLOC_FreePtr(&pObj->hpText);
0008ec  f1040028          ADD      r0,r4,#0x28
0008f0  f7fffffe          BL       GUI_ALLOC_FreePtr
;;;741          pObj->BufferSize = 0;
0008f4  f04f0000          MOV      r0,#0
0008f8  85a0              STRH     r0,[r4,#0x2c]
;;;742          pObj->CursorPos  = 0;
0008fa  6420              STR      r0,[r4,#0x40]
                  |L1.2300|
;;;743        }
;;;744        EDIT_Invalidate(hObj);
0008fc  4640              MOV      r0,r8
0008fe  f7fffffe          BL       WM_InvalidateWindow
;;;745        WM_UNLOCK();
;;;746      }
000902  bf00              NOP      
                  |L1.2308|
;;;747    }
000904  e8bd87f0          POP      {r4-r10,pc}
;;;748    
                          ENDP

                  EDIT_GetText PROC
;;;752    */
;;;753    void EDIT_GetText(EDIT_Handle hObj, char* sDest, int MaxLen) {
000908  e92d47f0          PUSH     {r4-r10,lr}
00090c  4607              MOV      r7,r0
00090e  460c              MOV      r4,r1
000910  4615              MOV      r5,r2
;;;754      if (sDest) {
000912  b32c              CBZ      r4,|L1.2400|
;;;755        *sDest = 0;
000914  f04f0000          MOV      r0,#0
000918  7020              STRB     r0,[r4,#0]
;;;756        if (hObj) {
00091a  b30f              CBZ      r7,|L1.2400|
;;;757          EDIT_Obj* pObj;
;;;758          WM_LOCK();
;;;759          pObj = EDIT_H2P(hObj);
00091c  4638              MOV      r0,r7
00091e  f7fffffe          BL       GUI_ALLOC_h2p
000922  4680              MOV      r8,r0
;;;760          if (pObj->hpText) {
000924  f8b80028          LDRH     r0,[r8,#0x28]
000928  b1c8              CBZ      r0,|L1.2398|
;;;761            char* pText;
;;;762            int NumChars, NumBytes;
;;;763            pText = (char*) GUI_ALLOC_h2p(pObj->hpText);
00092a  f9b80028          LDRSH    r0,[r8,#0x28]
00092e  f7fffffe          BL       GUI_ALLOC_h2p
000932  4682              MOV      r10,r0
;;;764            NumChars = GUI__GetNumChars(pText);
000934  4650              MOV      r0,r10
000936  f7fffffe          BL       GUI__GetNumChars
00093a  4681              MOV      r9,r0
;;;765            if (NumChars > MaxLen) {
00093c  45a9              CMP      r9,r5
00093e  dd00              BLE      |L1.2370|
;;;766              NumChars = MaxLen;
000940  46a9              MOV      r9,r5
                  |L1.2370|
;;;767            }
;;;768            NumBytes = GUI_UC__NumChars2NumBytes(pText, NumChars);
000942  4649              MOV      r1,r9
000944  4650              MOV      r0,r10
000946  f7fffffe          BL       GUI_UC__NumChars2NumBytes
00094a  4606              MOV      r6,r0
;;;769            memcpy(sDest, pText, NumBytes);
00094c  4632              MOV      r2,r6
00094e  4651              MOV      r1,r10
000950  4620              MOV      r0,r4
000952  f7fffffe          BL       __aeabi_memcpy
;;;770            *(sDest + NumBytes) = 0;
000956  f04f0000          MOV      r0,#0
00095a  55a0              STRB     r0,[r4,r6]
;;;771          }
00095c  bf00              NOP      
                  |L1.2398|
;;;772          WM_UNLOCK();
;;;773        }
00095e  bf00              NOP      
                  |L1.2400|
;;;774      }
;;;775    }
000960  e8bd87f0          POP      {r4-r10,pc}
;;;776    
                          ENDP

                  EDIT_GetValue PROC
;;;780    */
;;;781    I32  EDIT_GetValue(EDIT_Handle hObj) {
000964  b570              PUSH     {r4-r6,lr}
000966  4605              MOV      r5,r0
;;;782      EDIT_Obj* pObj;
;;;783      I32 r = 0;
000968  f04f0600          MOV      r6,#0
;;;784      if (hObj) {
00096c  b125              CBZ      r5,|L1.2424|
;;;785        WM_LOCK();
;;;786        pObj = EDIT_H2P(hObj);
00096e  4628              MOV      r0,r5
000970  f7fffffe          BL       GUI_ALLOC_h2p
000974  4604              MOV      r4,r0
;;;787        r = pObj->CurrentValue;
000976  6be6              LDR      r6,[r4,#0x3c]
                  |L1.2424|
;;;788        WM_UNLOCK();
;;;789      }
;;;790      return r;
000978  4630              MOV      r0,r6
;;;791    }
00097a  bd70              POP      {r4-r6,pc}
;;;792    
                          ENDP

                  EDIT_SetValue PROC
;;;796    */
;;;797    void EDIT_SetValue(EDIT_Handle hObj, I32 Value) {
00097c  b570              PUSH     {r4-r6,lr}
00097e  4604              MOV      r4,r0
000980  460d              MOV      r5,r1
;;;798      _SetValue(hObj, Value, 0);
000982  f04f0200          MOV      r2,#0
000986  4629              MOV      r1,r5
000988  4620              MOV      r0,r4
00098a  f7fffffe          BL       _SetValue
;;;799    }
00098e  bd70              POP      {r4-r6,pc}
;;;800    
                          ENDP

                  EDIT_SetMaxLen PROC
;;;804    */
;;;805    void EDIT_SetMaxLen(EDIT_Handle  hObj, int MaxLen) {
000990  e92d47f0          PUSH     {r4-r10,lr}
000994  4606              MOV      r6,r0
000996  460d              MOV      r5,r1
;;;806      if (hObj) {
000998  b37e              CBZ      r6,|L1.2554|
;;;807        EDIT_Obj* pObj;
;;;808        WM_LOCK();
;;;809        pObj = EDIT_H2P(hObj);
00099a  4630              MOV      r0,r6
00099c  f7fffffe          BL       GUI_ALLOC_h2p
0009a0  4604              MOV      r4,r0
;;;810        if (MaxLen != pObj->MaxLen) {
0009a2  f9b4002a          LDRSH    r0,[r4,#0x2a]
0009a6  42a8              CMP      r0,r5
0009a8  d026              BEQ      |L1.2552|
;;;811          if (MaxLen < pObj->MaxLen) {
0009aa  f9b4002a          LDRSH    r0,[r4,#0x2a]
0009ae  42a8              CMP      r0,r5
0009b0  dd17              BLE      |L1.2530|
;;;812            if (pObj->hpText) {
0009b2  8d20              LDRH     r0,[r4,#0x28]
0009b4  b1a8              CBZ      r0,|L1.2530|
;;;813              char* pText;
;;;814              int   NumChars;
;;;815              pText    = (char*) GUI_ALLOC_h2p(pObj->hpText);
0009b6  f9b40028          LDRSH    r0,[r4,#0x28]
0009ba  f7fffffe          BL       GUI_ALLOC_h2p
0009be  4607              MOV      r7,r0
;;;816              NumChars = GUI__GetNumChars(pText);
0009c0  4638              MOV      r0,r7
0009c2  f7fffffe          BL       GUI__GetNumChars
0009c6  4680              MOV      r8,r0
;;;817              if (NumChars > MaxLen) {
0009c8  45a8              CMP      r8,r5
0009ca  dd09              BLE      |L1.2528|
;;;818                int NumBytes;
;;;819                NumBytes = GUI_UC__NumChars2NumBytes(pText, MaxLen);
0009cc  4629              MOV      r1,r5
0009ce  4638              MOV      r0,r7
0009d0  f7fffffe          BL       GUI_UC__NumChars2NumBytes
0009d4  4681              MOV      r9,r0
;;;820                *(pText + NumBytes) = 0;
0009d6  f04f0000          MOV      r0,#0
0009da  f8070009          STRB     r0,[r7,r9]
;;;821              }
0009de  bf00              NOP      
                  |L1.2528|
;;;822            }
0009e0  bf00              NOP      
                  |L1.2530|
;;;823          }
;;;824          _IncrementBuffer(pObj, MaxLen - pObj->BufferSize + 1);
0009e2  8da0              LDRH     r0,[r4,#0x2c]
0009e4  1a28              SUBS     r0,r5,r0
0009e6  1c41              ADDS     r1,r0,#1
0009e8  4620              MOV      r0,r4
0009ea  f7fffffe          BL       _IncrementBuffer
;;;825          pObj->MaxLen = MaxLen;
0009ee  b228              SXTH     r0,r5
0009f0  8560              STRH     r0,[r4,#0x2a]
;;;826          EDIT_Invalidate(hObj);
0009f2  4630              MOV      r0,r6
0009f4  f7fffffe          BL       WM_InvalidateWindow
                  |L1.2552|
;;;827        }
;;;828        WM_UNLOCK();
;;;829      }
0009f8  bf00              NOP      
                  |L1.2554|
;;;830    }
0009fa  e8bd87f0          POP      {r4-r10,pc}
;;;831    
                          ENDP

                  EDIT_SetTextAlign PROC
;;;835    */
;;;836    void EDIT_SetTextAlign(EDIT_Handle hObj, int Align) {
0009fe  b570              PUSH     {r4-r6,lr}
000a00  4605              MOV      r5,r0
000a02  460e              MOV      r6,r1
;;;837      EDIT_Obj* pObj;
;;;838      if (hObj == 0)
000a04  b905              CBNZ     r5,|L1.2568|
                  |L1.2566|
;;;839        return;
;;;840      WM_LOCK();
;;;841      pObj = EDIT_H2P(hObj);
;;;842      if (pObj) {
;;;843        pObj->Props.Align = Align;
;;;844        EDIT_Invalidate(hObj);
;;;845      }
;;;846      WM_UNLOCK();
;;;847    }
000a06  bd70              POP      {r4-r6,pc}
                  |L1.2568|
000a08  4628              MOV      r0,r5                 ;841
000a0a  f7fffffe          BL       GUI_ALLOC_h2p
000a0e  4604              MOV      r4,r0                 ;841
000a10  b11c              CBZ      r4,|L1.2586|
000a12  6566              STR      r6,[r4,#0x54]         ;843
000a14  4628              MOV      r0,r5                 ;844
000a16  f7fffffe          BL       WM_InvalidateWindow
                  |L1.2586|
000a1a  bf00              NOP      
000a1c  e7f3              B        |L1.2566|
;;;848    
                          ENDP

000a1e  0000              DCW      0x0000
                  |L1.2592|
                          DCD      EDIT__DefaultProps

                          AREA ||.data||, DATA, ALIGN=2

                  EDIT__DefaultProps
                          DCD      0x0000000c
                          DCD      0x00000001
                          DCD      GUI_Font13_1
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00c0c0c0
                          DCD      0x00ffffff

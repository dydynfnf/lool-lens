; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\gui_warn.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\gui_warn.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\gui_warn.crf GUI\Core\GUI_Warn.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  _CopyString PROC
;;;43     */
;;;44     static void _CopyString(char*d, const char*s, int MaxLen) {
000000  e005              B        |L1.14|
                  |L1.2|
;;;45       while ((MaxLen > 0) && *s) {
;;;46         *d++ = *s++;
000002  f8113b01          LDRB     r3,[r1],#1
000006  f8003b01          STRB     r3,[r0],#1
;;;47         MaxLen--;
00000a  f1a20201          SUB      r2,r2,#1
                  |L1.14|
00000e  2a00              CMP      r2,#0                 ;45
000010  dd02              BLE      |L1.24|
000012  780b              LDRB     r3,[r1,#0]            ;45
000014  2b00              CMP      r3,#0                 ;45
000016  d1f4              BNE      |L1.2|
                  |L1.24|
;;;48       }
;;;49       *d = 0;
000018  f04f0300          MOV      r3,#0
00001c  7003              STRB     r3,[r0,#0]
;;;50     }
00001e  4770              BX       lr
;;;51     
                          ENDP

                  GUI_Warn PROC
;;;63     */
;;;64     void GUI_Warn(const char *s) {
000020  b510              PUSH     {r4,lr}
000022  4604              MOV      r4,r0
;;;65       GUI_X_Warn(s);
000024  4620              MOV      r0,r4
000026  f7fffffe          BL       GUI_X_Warn
;;;66     }
00002a  bd10              POP      {r4,pc}
;;;67     
                          ENDP

                  GUI_Warn1 PROC
;;;71     */
;;;72     void GUI_Warn1(const char *s, int p0) {
00002c  b530              PUSH     {r4,r5,lr}
00002e  b091              SUB      sp,sp,#0x44
000030  4604              MOV      r4,r0
000032  460d              MOV      r5,r1
;;;73       char ac[MAXLEN + 10];
;;;74       char* sOut = ac;
000034  a802              ADD      r0,sp,#8
000036  9001              STR      r0,[sp,#4]
;;;75       _CopyString(ac, s, MAXLEN);
000038  f04f0232          MOV      r2,#0x32
00003c  4621              MOV      r1,r4
00003e  f7fffffe          BL       _CopyString
;;;76       sOut += strlen(sOut);
000042  9801              LDR      r0,[sp,#4]
000044  f7fffffe          BL       strlen
000048  9901              LDR      r1,[sp,#4]
00004a  4408              ADD      r0,r0,r1
00004c  9001              STR      r0,[sp,#4]
;;;77       GUI__AddSpaceHex(p0, 8, &sOut);
00004e  aa01              ADD      r2,sp,#4
000050  f04f0108          MOV      r1,#8
000054  4628              MOV      r0,r5
000056  f7fffffe          BL       GUI__AddSpaceHex
;;;78       GUI_Warn(ac);
00005a  a802              ADD      r0,sp,#8
00005c  f7fffffe          BL       GUI_Warn
;;;79     }
000060  b011              ADD      sp,sp,#0x44
000062  bd30              POP      {r4,r5,pc}
;;;80     
                          ENDP

                  GUI_Warn2 PROC
;;;84     */
;;;85     void GUI_Warn2(const char *s, int p0, int p1) {
000064  b570              PUSH     {r4-r6,lr}
000066  b094              SUB      sp,sp,#0x50
000068  4604              MOV      r4,r0
00006a  460d              MOV      r5,r1
00006c  4616              MOV      r6,r2
;;;86       char ac[MAXLEN + 20];
;;;87       char* sOut = ac;
00006e  a802              ADD      r0,sp,#8
000070  9001              STR      r0,[sp,#4]
;;;88       _CopyString(ac, s, MAXLEN);
000072  f04f0232          MOV      r2,#0x32
000076  4621              MOV      r1,r4
000078  f7fffffe          BL       _CopyString
;;;89       sOut += strlen(sOut);
00007c  9801              LDR      r0,[sp,#4]
00007e  f7fffffe          BL       strlen
000082  9901              LDR      r1,[sp,#4]
000084  4408              ADD      r0,r0,r1
000086  9001              STR      r0,[sp,#4]
;;;90       GUI__AddSpaceHex(p0, 8, &sOut);
000088  aa01              ADD      r2,sp,#4
00008a  f04f0108          MOV      r1,#8
00008e  4628              MOV      r0,r5
000090  f7fffffe          BL       GUI__AddSpaceHex
;;;91       GUI__AddSpaceHex(p1, 8, &sOut);
000094  aa01              ADD      r2,sp,#4
000096  2108              MOVS     r1,#8
000098  4630              MOV      r0,r6
00009a  f7fffffe          BL       GUI__AddSpaceHex
;;;92       GUI_Warn(ac);
00009e  a802              ADD      r0,sp,#8
0000a0  f7fffffe          BL       GUI_Warn
;;;93     }
0000a4  b014              ADD      sp,sp,#0x50
0000a6  bd70              POP      {r4-r6,pc}
;;;94     
                          ENDP

                  GUI_Warn3 PROC
;;;98     */
;;;99     void GUI_Warn3(const char *s, int p0, int p1, int p2) {
0000a8  b5f0              PUSH     {r4-r7,lr}
0000aa  b095              SUB      sp,sp,#0x54
0000ac  4604              MOV      r4,r0
0000ae  460d              MOV      r5,r1
0000b0  4616              MOV      r6,r2
0000b2  461f              MOV      r7,r3
;;;100      char ac[MAXLEN + 30];
;;;101      char* sOut = ac;
0000b4  a801              ADD      r0,sp,#4
0000b6  9000              STR      r0,[sp,#0]
;;;102      _CopyString(ac, s, MAXLEN);
0000b8  f04f0232          MOV      r2,#0x32
0000bc  4621              MOV      r1,r4
0000be  f7fffffe          BL       _CopyString
;;;103      sOut += strlen(sOut);
0000c2  9800              LDR      r0,[sp,#0]
0000c4  f7fffffe          BL       strlen
0000c8  9900              LDR      r1,[sp,#0]
0000ca  4408              ADD      r0,r0,r1
0000cc  9000              STR      r0,[sp,#0]
;;;104      GUI__AddSpaceHex(p0, 8, &sOut);
0000ce  466a              MOV      r2,sp
0000d0  f04f0108          MOV      r1,#8
0000d4  4628              MOV      r0,r5
0000d6  f7fffffe          BL       GUI__AddSpaceHex
;;;105      GUI__AddSpaceHex(p1, 8, &sOut);
0000da  466a              MOV      r2,sp
0000dc  2108              MOVS     r1,#8
0000de  4630              MOV      r0,r6
0000e0  f7fffffe          BL       GUI__AddSpaceHex
;;;106      GUI__AddSpaceHex(p2, 8, &sOut);
0000e4  466a              MOV      r2,sp
0000e6  2108              MOVS     r1,#8
0000e8  4638              MOV      r0,r7
0000ea  f7fffffe          BL       GUI__AddSpaceHex
;;;107      GUI_Warn(ac);
0000ee  a801              ADD      r0,sp,#4
0000f0  f7fffffe          BL       GUI_Warn
;;;108    }
0000f4  b015              ADD      sp,sp,#0x54
0000f6  bdf0              POP      {r4-r7,pc}
;;;109    
                          ENDP

                  GUI_Warn4 PROC
;;;113    */
;;;114    void GUI_Warn4(const char *s, int p0, int p1, int p2, int p3) {
0000f8  e92d41f0          PUSH     {r4-r8,lr}
0000fc  b098              SUB      sp,sp,#0x60
0000fe  4604              MOV      r4,r0
000100  460d              MOV      r5,r1
000102  4616              MOV      r6,r2
000104  461f              MOV      r7,r3
000106  f8dd8078          LDR      r8,[sp,#0x78]
;;;115      char ac[MAXLEN + 40];
;;;116      char* sOut = ac;
00010a  a801              ADD      r0,sp,#4
00010c  9000              STR      r0,[sp,#0]
;;;117      _CopyString(ac, s, MAXLEN);
00010e  f04f0232          MOV      r2,#0x32
000112  4621              MOV      r1,r4
000114  f7fffffe          BL       _CopyString
;;;118      sOut += strlen(sOut);
000118  9800              LDR      r0,[sp,#0]
00011a  f7fffffe          BL       strlen
00011e  9900              LDR      r1,[sp,#0]
000120  4408              ADD      r0,r0,r1
000122  9000              STR      r0,[sp,#0]
;;;119      GUI__AddSpaceHex(p0, 8, &sOut);
000124  466a              MOV      r2,sp
000126  f04f0108          MOV      r1,#8
00012a  4628              MOV      r0,r5
00012c  f7fffffe          BL       GUI__AddSpaceHex
;;;120      GUI__AddSpaceHex(p1, 8, &sOut);
000130  466a              MOV      r2,sp
000132  2108              MOVS     r1,#8
000134  4630              MOV      r0,r6
000136  f7fffffe          BL       GUI__AddSpaceHex
;;;121      GUI__AddSpaceHex(p2, 8, &sOut);
00013a  466a              MOV      r2,sp
00013c  2108              MOVS     r1,#8
00013e  4638              MOV      r0,r7
000140  f7fffffe          BL       GUI__AddSpaceHex
;;;122      GUI__AddSpaceHex(p3, 8, &sOut);
000144  466a              MOV      r2,sp
000146  2108              MOVS     r1,#8
000148  4640              MOV      r0,r8
00014a  f7fffffe          BL       GUI__AddSpaceHex
;;;123      GUI_Warn(ac);
00014e  a801              ADD      r0,sp,#4
000150  f7fffffe          BL       GUI_Warn
;;;124    }
000154  b018              ADD      sp,sp,#0x60
000156  e8bd81f0          POP      {r4-r8,pc}
;;;125    
                          ENDP


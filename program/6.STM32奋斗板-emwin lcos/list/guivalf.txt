; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\guivalf.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\guivalf.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\guivalf.crf GUI\Core\GUIValf.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _DispFloatFix PROC
;;;32     */
;;;33     static void _DispFloatFix(float f, char Len, char Decs, int DrawPlusSign) {
000000  e92d5ff0          PUSH     {r4-r12,lr}
000004  4680              MOV      r8,r0
000006  468b              MOV      r11,r1
000008  4691              MOV      r9,r2
00000a  469a              MOV      r10,r3
;;;34       f *= GUI_Pow10[(unsigned)Decs];
00000c  4965              LDR      r1,|L1.420|
00000e  f8510029          LDR      r0,[r1,r9,LSL #2]
000012  f7fffffe          BL       __aeabi_ui2f
000016  4604              MOV      r4,r0
000018  4641              MOV      r1,r8
00001a  f7fffffe          BL       __aeabi_fmul
00001e  4680              MOV      r8,r0
;;;35       f += 0.5;
000020  4640              MOV      r0,r8
000022  f7fffffe          BL       __aeabi_f2d
000026  4606              MOV      r6,r0
000028  2200              MOVS     r2,#0
00002a  4b5f              LDR      r3,|L1.424|
00002c  f7fffffe          BL       __aeabi_dadd
000030  4604              MOV      r4,r0
000032  f7fffffe          BL       __aeabi_d2f
000036  4680              MOV      r8,r0
;;;36       f = (float) floor (f);
000038  4640              MOV      r0,r8
00003a  f7fffffe          BL       __aeabi_f2d
00003e  4604              MOV      r4,r0
000040  f7fffffe          BL       floor
000044  4606              MOV      r6,r0
000046  f7fffffe          BL       __aeabi_d2f
00004a  4680              MOV      r8,r0
;;;37       if (DrawPlusSign) {
00004c  f1ba0f00          CMP      r10,#0
000050  d008              BEQ      |L1.100|
;;;38         GUI_DispSDecShift((long)f, Len, Decs);
000052  4640              MOV      r0,r8
000054  f7fffffe          BL       __aeabi_f2iz
000058  4604              MOV      r4,r0
00005a  464a              MOV      r2,r9
00005c  4659              MOV      r1,r11
00005e  f7fffffe          BL       GUI_DispSDecShift
000062  e007              B        |L1.116|
                  |L1.100|
;;;39       } else {
;;;40         GUI_DispDecShift((long)f, Len, Decs);
000064  4640              MOV      r0,r8
000066  f7fffffe          BL       __aeabi_f2iz
00006a  4604              MOV      r4,r0
00006c  464a              MOV      r2,r9
00006e  4659              MOV      r1,r11
000070  f7fffffe          BL       GUI_DispDecShift
                  |L1.116|
;;;41       }
;;;42     }
000074  e8bd9ff0          POP      {r4-r12,pc}
;;;43     
                          ENDP

                  GUI_DispFloatFix PROC
;;;53     */
;;;54     void GUI_DispFloatFix(float f, char Len, char Decs) {
000078  b570              PUSH     {r4-r6,lr}
00007a  4604              MOV      r4,r0
00007c  460d              MOV      r5,r1
00007e  4616              MOV      r6,r2
;;;55       _DispFloatFix(f, Len, Decs, 0);
000080  f04f0300          MOV      r3,#0
000084  4632              MOV      r2,r6
000086  4629              MOV      r1,r5
000088  4620              MOV      r0,r4
00008a  f7fffffe          BL       _DispFloatFix
;;;56     }
00008e  bd70              POP      {r4-r6,pc}
;;;57     
                          ENDP

                  GUI_DispFloatMin PROC
;;;61     */
;;;62     void GUI_DispFloatMin(float f, char Fract) {
000090  e92d41f0          PUSH     {r4-r8,lr}
000094  4606              MOV      r6,r0
000096  460c              MOV      r4,r1
;;;63       char Len;
;;;64       Len = GUI_Long2Len((long)f);
000098  4630              MOV      r0,r6
00009a  f7fffffe          BL       __aeabi_f2iz
00009e  4607              MOV      r7,r0
0000a0  f7fffffe          BL       GUI_Long2Len
0000a4  b2c5              UXTB     r5,r0
;;;65       if ((f < 0) && (f > -1)) { /* If value < 0 and > -1 (e.g. -0.123) increment length by 1 */
0000a6  f04f0100          MOV      r1,#0
0000aa  4630              MOV      r0,r6
0000ac  f7fffffe          BL       __aeabi_cfcmple
0000b0  d207              BCS      |L1.194|
0000b2  493e              LDR      r1,|L1.428|
0000b4  4630              MOV      r0,r6
0000b6  f7fffffe          BL       __aeabi_cfrcmple
0000ba  d202              BCS      |L1.194|
;;;66         Len++;
0000bc  f1050001          ADD      r0,r5,#1
0000c0  b2c5              UXTB     r5,r0
                  |L1.194|
;;;67       }
;;;68       _DispFloatFix(f, (char)(Len + Fract + (Fract ? 1 : 0)), (char)Fract, 0);
0000c2  1928              ADDS     r0,r5,r4
0000c4  b10c              CBZ      r4,|L1.202|
0000c6  2201              MOVS     r2,#1
0000c8  e000              B        |L1.204|
                  |L1.202|
0000ca  2200              MOVS     r2,#0
                  |L1.204|
0000cc  4410              ADD      r0,r0,r2
0000ce  b2c1              UXTB     r1,r0
0000d0  2300              MOVS     r3,#0
0000d2  4622              MOV      r2,r4
0000d4  4630              MOV      r0,r6
0000d6  f7fffffe          BL       _DispFloatFix
;;;69     }
0000da  e8bd81f0          POP      {r4-r8,pc}
;;;70     
                          ENDP

                  GUI_DispFloat PROC
;;;74     */
;;;75     void GUI_DispFloat(float f, char Len) {
0000de  e92d41f0          PUSH     {r4-r8,lr}
0000e2  4606              MOV      r6,r0
0000e4  460d              MOV      r5,r1
;;;76       int Decs;
;;;77       Decs =  Len - GUI_Long2Len((long)f)-1;
0000e6  4630              MOV      r0,r6
0000e8  f7fffffe          BL       __aeabi_f2iz
0000ec  4607              MOV      r7,r0
0000ee  f7fffffe          BL       GUI_Long2Len
0000f2  eba50000          SUB      r0,r5,r0
0000f6  f1a00401          SUB      r4,r0,#1
;;;78       if ((f < 0) && (f > -1)) { /* If value < 0 and > -1 (e.g. -0.123) decrement Decs */
0000fa  f04f0100          MOV      r1,#0
0000fe  4630              MOV      r0,r6
000100  f7fffffe          BL       __aeabi_cfcmple
000104  d206              BCS      |L1.276|
000106  4929              LDR      r1,|L1.428|
000108  4630              MOV      r0,r6
00010a  f7fffffe          BL       __aeabi_cfrcmple
00010e  d201              BCS      |L1.276|
;;;79         Decs--;
000110  f1a40401          SUB      r4,r4,#1
                  |L1.276|
;;;80       }
;;;81       if (Decs<0)
000114  2c00              CMP      r4,#0
000116  da01              BGE      |L1.284|
;;;82         Decs =0;
000118  f04f0400          MOV      r4,#0
                  |L1.284|
;;;83       _DispFloatFix(f, Len, (char)Decs, 0);
00011c  2300              MOVS     r3,#0
00011e  b2e2              UXTB     r2,r4
000120  4629              MOV      r1,r5
000122  4630              MOV      r0,r6
000124  f7fffffe          BL       _DispFloatFix
;;;84     }
000128  e8bd81f0          POP      {r4-r8,pc}
;;;85     
                          ENDP

                  GUI_DispSFloatFix PROC
;;;89     */
;;;90     void GUI_DispSFloatFix(float f, char Len, char Fract) {
00012c  b570              PUSH     {r4-r6,lr}
00012e  4604              MOV      r4,r0
000130  460d              MOV      r5,r1
000132  4616              MOV      r6,r2
;;;91       _DispFloatFix (f, Len, Fract, 1);
000134  f04f0301          MOV      r3,#1
000138  4632              MOV      r2,r6
00013a  4629              MOV      r1,r5
00013c  4620              MOV      r0,r4
00013e  f7fffffe          BL       _DispFloatFix
;;;92     }
000142  bd70              POP      {r4-r6,pc}
;;;93     
                          ENDP

                  GUI_DispSFloatMin PROC
;;;97     */
;;;98     void GUI_DispSFloatMin(float f, char Fract) {
000144  e92d41f0          PUSH     {r4-r8,lr}
000148  4606              MOV      r6,r0
00014a  460c              MOV      r4,r1
;;;99       char Len;
;;;100      Len = GUI_Long2Len((long)f);
00014c  4630              MOV      r0,r6
00014e  f7fffffe          BL       __aeabi_f2iz
000152  4607              MOV      r7,r0
000154  f7fffffe          BL       GUI_Long2Len
000158  b2c5              UXTB     r5,r0
;;;101      if ((f < 0) && (f > -1)) { /* If value < 0 and > -1 (e.g. -0.123) increment length by 1 */
00015a  f04f0100          MOV      r1,#0
00015e  4630              MOV      r0,r6
000160  f7fffffe          BL       __aeabi_cfcmple
000164  d207              BCS      |L1.374|
000166  4911              LDR      r1,|L1.428|
000168  4630              MOV      r0,r6
00016a  f7fffffe          BL       __aeabi_cfrcmple
00016e  d202              BCS      |L1.374|
;;;102        Len++;
000170  f1050001          ADD      r0,r5,#1
000174  b2c5              UXTB     r5,r0
                  |L1.374|
;;;103      }
;;;104      if (f>0) {
000176  2100              MOVS     r1,#0
000178  4630              MOV      r0,r6
00017a  f7fffffe          BL       __aeabi_cfrcmple
00017e  d202              BCS      |L1.390|
;;;105        Len++;
000180  f1050001          ADD      r0,r5,#1
000184  b2c5              UXTB     r5,r0
                  |L1.390|
;;;106      }
;;;107      _DispFloatFix(f, (char)(Len + Fract + (Fract ? 1 : 0)), (char)Fract, 1);
000186  1928              ADDS     r0,r5,r4
000188  b10c              CBZ      r4,|L1.398|
00018a  2201              MOVS     r2,#1
00018c  e000              B        |L1.400|
                  |L1.398|
00018e  2200              MOVS     r2,#0
                  |L1.400|
000190  4410              ADD      r0,r0,r2
000192  b2c1              UXTB     r1,r0
000194  2301              MOVS     r3,#1
000196  4622              MOV      r2,r4
000198  4630              MOV      r0,r6
00019a  f7fffffe          BL       _DispFloatFix
;;;108    }
00019e  e8bd81f0          POP      {r4-r8,pc}
;;;109    
                          ENDP

0001a2  0000              DCW      0x0000
                  |L1.420|
                          DCD      GUI_Pow10
                  |L1.424|
                          DCD      0x3fe00000
                  |L1.428|
                          DCD      0xbf800000

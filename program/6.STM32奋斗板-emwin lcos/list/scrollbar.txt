; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\scrollbar.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\scrollbar.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\scrollbar.crf GUI\Widget\SCROLLBAR.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _GetArrowSize PROC
;;;87     */
;;;88     static int _GetArrowSize(SCROLLBAR_Obj* pObj) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4606              MOV      r6,r0
;;;89       unsigned int r;
;;;90       unsigned int xSize = WIDGET__GetXSize(&pObj->Widget);
000006  4630              MOV      r0,r6
000008  f7fffffe          BL       WIDGET__GetXSize
00000c  4605              MOV      r5,r0
;;;91       unsigned int ySize = WIDGET__GetYSize(&pObj->Widget);
00000e  4630              MOV      r0,r6
000010  f7fffffe          BL       WIDGET__GetYSize
000014  4607              MOV      r7,r0
;;;92       r = ySize/2 + 5;
000016  f04f0005          MOV      r0,#5
00001a  eb000457          ADD      r4,r0,r7,LSR #1
;;;93       if (r > xSize-5)
00001e  f1a50005          SUB      r0,r5,#5
000022  42a0              CMP      r0,r4
000024  d200              BCS      |L1.40|
;;;94         r = xSize-5;
000026  4604              MOV      r4,r0
                  |L1.40|
;;;95       return r;
000028  4620              MOV      r0,r4
;;;96     }
00002a  e8bd81f0          POP      {r4-r8,pc}
;;;97     
                          ENDP

                  _WIDGET__RECT2VRECT PROC
;;;108    */
;;;109    static void _WIDGET__RECT2VRECT(const WIDGET* pWidget, GUI_RECT* pRect) {
00002e  b570              PUSH     {r4-r6,lr}
;;;110      if (pWidget->State & WIDGET_STATE_VERTICAL) {
000030  8cc2              LDRH     r2,[r0,#0x26]
000032  f0120f08          TST      r2,#8
000036  d01c              BEQ      |L1.114|
;;;111        int xSize = pWidget->Win.Rect.x1 - pWidget->Win.Rect.x0 + 1;
000038  f9b05004          LDRSH    r5,[r0,#4]
00003c  f9b06000          LDRSH    r6,[r0,#0]
000040  eba50506          SUB      r5,r5,r6
000044  f1050201          ADD      r2,r5,#1
;;;112        int x0, x1;
;;;113        x0 = pRect->x0;
000048  f9b13000          LDRSH    r3,[r1,#0]
;;;114        x1 = pRect->x1;
00004c  f9b14004          LDRSH    r4,[r1,#4]
;;;115        pRect->x0 = pRect->y0;
000050  884d              LDRH     r5,[r1,#2]
000052  800d              STRH     r5,[r1,#0]
;;;116        pRect->x1 = pRect->y1;
000054  88cd              LDRH     r5,[r1,#6]
000056  808d              STRH     r5,[r1,#4]
;;;117        pRect->y1 = xSize - 1 - x0;
000058  f1a20501          SUB      r5,r2,#1
00005c  eba50503          SUB      r5,r5,r3
000060  b22d              SXTH     r5,r5
000062  80cd              STRH     r5,[r1,#6]
;;;118        pRect->y0 = xSize - 1 - x1;
000064  f1a20501          SUB      r5,r2,#1
000068  eba50504          SUB      r5,r5,r4
00006c  b22d              SXTH     r5,r5
00006e  804d              STRH     r5,[r1,#2]
;;;119      }
000070  bf00              NOP      
                  |L1.114|
;;;120    }
000072  bd70              POP      {r4-r6,pc}
;;;121    
                          ENDP

                  _CalcPositions PROC
;;;128    */
;;;129    static void _CalcPositions(SCROLLBAR_Obj* pObj, SCROLLBAR_POSITIONS* pPos) {
000074  e92d4ff0          PUSH     {r4-r11,lr}
000078  b087              SUB      sp,sp,#0x1c
00007a  4605              MOV      r5,r0
00007c  460c              MOV      r4,r1
;;;130      int xSizeArrow, xSize, xSizeMoveable, ThumbSize, NumItems, xSizeThumbArea;
;;;131      WM_HWIN hWin;
;;;132      GUI_RECT r, rSub;
;;;133      int x0, y0;
;;;134      r = pObj->Widget.Win.Rect;
00007e  e9d50100          LDRD     r0,r1,[r5,#0]
000082  e9cd0104          STRD     r0,r1,[sp,#0x10]
;;;135      x0 = r.x0;
000086  f9bd0010          LDRSH    r0,[sp,#0x10]
00008a  9001              STR      r0,[sp,#4]
;;;136      y0 = r.y0;
00008c  f9bd0012          LDRSH    r0,[sp,#0x12]
000090  9000              STR      r0,[sp,#0]
;;;137      pPos->x1  = (pObj->Widget.State & WIDGET_STATE_VERTICAL) ? r.y1 : r.x1;
000092  8ce8              LDRH     r0,[r5,#0x26]
000094  f0100f08          TST      r0,#8
000098  d002              BEQ      |L1.160|
00009a  f9bd0016          LDRSH    r0,[sp,#0x16]
00009e  e001              B        |L1.164|
                  |L1.160|
0000a0  f9bd0014          LDRSH    r0,[sp,#0x14]
                  |L1.164|
0000a4  61a0              STR      r0,[r4,#0x18]
;;;138      /* Subtract the rectangle of the other scrollbar (if existing and visible) */
;;;139      if (pObj->Widget.Id == GUI_ID_HSCROLL) {
0000a6  8ca8              LDRH     r0,[r5,#0x24]
0000a8  28ff              CMP      r0,#0xff
0000aa  d118              BNE      |L1.222|
;;;140        hWin = WM_GetScrollbarV(pObj->Widget.Win.hParent);
0000ac  f9b50016          LDRSH    r0,[r5,#0x16]
0000b0  f7fffffe          BL       WM_GetScrollbarV
0000b4  4682              MOV      r10,r0
;;;141        if (hWin) {
0000b6  f1ba0f00          CMP      r10,#0
0000ba  d010              BEQ      |L1.222|
;;;142          WM_GetWindowRectEx(hWin, &rSub);
0000bc  a902              ADD      r1,sp,#8
0000be  4650              MOV      r0,r10
0000c0  f7fffffe          BL       WM_GetWindowRectEx
;;;143          if (r.x1 == rSub.x1) {
0000c4  f9bd0014          LDRSH    r0,[sp,#0x14]
0000c8  f9bd100c          LDRSH    r1,[sp,#0xc]
0000cc  4288              CMP      r0,r1
0000ce  d106              BNE      |L1.222|
;;;144            r.x1 = rSub.x0 -1;
0000d0  f8bd0008          LDRH     r0,[sp,#8]
0000d4  f1a00001          SUB      r0,r0,#1
0000d8  b200              SXTH     r0,r0
0000da  f8ad0014          STRH     r0,[sp,#0x14]
                  |L1.222|
;;;145          }
;;;146        }
;;;147      }
;;;148      if (pObj->Widget.Id == GUI_ID_VSCROLL) {
0000de  8ca8              LDRH     r0,[r5,#0x24]
0000e0  28fe              CMP      r0,#0xfe
0000e2  d118              BNE      |L1.278|
;;;149        hWin = WM_GetScrollbarH(pObj->Widget.Win.hParent);
0000e4  f9b50016          LDRSH    r0,[r5,#0x16]
0000e8  f7fffffe          BL       WM_GetScrollbarH
0000ec  4682              MOV      r10,r0
;;;150        if (hWin) {
0000ee  f1ba0f00          CMP      r10,#0
0000f2  d010              BEQ      |L1.278|
;;;151          WM_GetWindowRectEx(hWin, &rSub);
0000f4  a902              ADD      r1,sp,#8
0000f6  4650              MOV      r0,r10
0000f8  f7fffffe          BL       WM_GetWindowRectEx
;;;152          if (r.y1 == rSub.y1) {
0000fc  f9bd0016          LDRSH    r0,[sp,#0x16]
000100  f9bd100e          LDRSH    r1,[sp,#0xe]
000104  4288              CMP      r0,r1
000106  d106              BNE      |L1.278|
;;;153            r.y1 = rSub.y0 -1;
000108  f8bd000a          LDRH     r0,[sp,#0xa]
00010c  f1a00001          SUB      r0,r0,#1
000110  b200              SXTH     r0,r0
000112  f8ad0016          STRH     r0,[sp,#0x16]
                  |L1.278|
;;;154          }
;;;155        }
;;;156      }
;;;157      /* Convert coordinates of this window */
;;;158      GUI_MoveRect(&r, -x0, -y0);
000116  9800              LDR      r0,[sp,#0]
000118  4242              RSBS     r2,r0,#0
00011a  9801              LDR      r0,[sp,#4]
00011c  4241              RSBS     r1,r0,#0
00011e  a804              ADD      r0,sp,#0x10
000120  f7fffffe          BL       GUI_MoveRect
;;;159      /* Convert real into virtual coordinates */
;;;160      _WIDGET__RECT2VRECT(&pObj->Widget, &r);
000124  a904              ADD      r1,sp,#0x10
000126  4628              MOV      r0,r5
000128  f7fffffe          BL       _WIDGET__RECT2VRECT
;;;161      NumItems      = pObj->NumItems;
00012c  6b68              LDR      r0,[r5,#0x34]
00012e  9006              STR      r0,[sp,#0x18]
;;;162      xSize         = r.x1 - r.x0 + 1;
000130  f9bd0014          LDRSH    r0,[sp,#0x14]
000134  f9bd1010          LDRSH    r1,[sp,#0x10]
000138  eba00001          SUB      r0,r0,r1
00013c  f1000901          ADD      r9,r0,#1
;;;163      xSizeArrow    = _GetArrowSize(pObj);
000140  4628              MOV      r0,r5
000142  f7fffffe          BL       _GetArrowSize
000146  4680              MOV      r8,r0
;;;164      xSizeThumbArea= xSize - 2 * xSizeArrow;     /* Number of pixels available for thumb and movement */
000148  f04f0002          MOV      r0,#2
00014c  fb009718          MLS      r7,r0,r8,r9
;;;165      ThumbSize     = GUI__DivideRound(xSizeThumbArea * pObj->PageSize, NumItems);
000150  6be9              LDR      r1,[r5,#0x3c]
000152  fb01f007          MUL      r0,r1,r7
000156  9906              LDR      r1,[sp,#0x18]
000158  f7fffffe          BL       GUI__DivideRound
00015c  4606              MOV      r6,r0
;;;166      if (ThumbSize < SCROLLBAR_THUMB_SIZE_MIN_DEFAULT) {
00015e  2e04              CMP      r6,#4
000160  da01              BGE      |L1.358|
;;;167        ThumbSize = SCROLLBAR_THUMB_SIZE_MIN_DEFAULT;
000162  f04f0604          MOV      r6,#4
                  |L1.358|
;;;168      }
;;;169      if (ThumbSize > xSizeThumbArea) {
000166  42be              CMP      r6,r7
000168  dd00              BLE      |L1.364|
;;;170        ThumbSize = xSizeThumbArea;
00016a  463e              MOV      r6,r7
                  |L1.364|
;;;171      }
;;;172      xSizeMoveable = xSizeThumbArea - ThumbSize;
00016c  eba70b06          SUB      r11,r7,r6
;;;173      pPos->x0_LeftArrow  = r.x0;
000170  f9bd0010          LDRSH    r0,[sp,#0x10]
000174  6020              STR      r0,[r4,#0]
;;;174      pPos->x1_LeftArrow  = xSizeArrow - 1;
000176  f1a80001          SUB      r0,r8,#1
00017a  6060              STR      r0,[r4,#4]
;;;175      pPos->x1_RightArrow = xSize - 1;
00017c  f1a90001          SUB      r0,r9,#1
000180  6160              STR      r0,[r4,#0x14]
;;;176      pPos->x0_RightArrow = xSize - xSizeArrow;
000182  eba90008          SUB      r0,r9,r8
000186  6120              STR      r0,[r4,#0x10]
;;;177      pPos->x0_Thumb      = pPos->x1_LeftArrow + 1+ GUI__DivideRound(xSizeMoveable * pObj->v, NumItems - pObj->PageSize);
000188  6beb              LDR      r3,[r5,#0x3c]
00018a  9a06              LDR      r2,[sp,#0x18]
00018c  eba20103          SUB      r1,r2,r3
000190  6baa              LDR      r2,[r5,#0x38]
000192  fb02f00b          MUL      r0,r2,r11
000196  f7fffffe          BL       GUI__DivideRound
00019a  6861              LDR      r1,[r4,#4]
00019c  f1010101          ADD      r1,r1,#1
0001a0  4408              ADD      r0,r0,r1
0001a2  60a0              STR      r0,[r4,#8]
;;;178      pPos->x1_Thumb      = pPos->x0_Thumb + ThumbSize - 1;
0001a4  68a0              LDR      r0,[r4,#8]
0001a6  4430              ADD      r0,r0,r6
0001a8  f1a00001          SUB      r0,r0,#1
0001ac  60e0              STR      r0,[r4,#0xc]
;;;179      pPos->xSizeMoveable = xSizeMoveable;
0001ae  f8c4b01c          STR      r11,[r4,#0x1c]
;;;180      pPos->ThumbSize     = ThumbSize;
0001b2  6226              STR      r6,[r4,#0x20]
;;;181    }
0001b4  b007              ADD      sp,sp,#0x1c
0001b6  e8bd8ff0          POP      {r4-r11,pc}
;;;182    
                          ENDP

                  _DrawTriangle PROC
;;;186    */
;;;187    static void _DrawTriangle(WIDGET* pWidget, int x, int y, int Size, int Inc) {
0001ba  e92d41f0          PUSH     {r4-r8,lr}
0001be  4607              MOV      r7,r0
0001c0  460e              MOV      r6,r1
0001c2  4615              MOV      r5,r2
0001c4  461c              MOV      r4,r3
0001c6  f8dd8018          LDR      r8,[sp,#0x18]
;;;188      if (pWidget->State & WIDGET_STATE_VERTICAL) {
0001ca  8cf8              LDRH     r0,[r7,#0x26]
0001cc  f0100f08          TST      r0,#8
0001d0  d00b              BEQ      |L1.490|
;;;189        for (; Size >= 0; Size--, x += Inc) {
0001d2  e007              B        |L1.484|
                  |L1.468|
;;;190          GUI_DrawHLine(x, y - Size, y + Size);
0001d4  192a              ADDS     r2,r5,r4
0001d6  1b29              SUBS     r1,r5,r4
0001d8  4630              MOV      r0,r6
0001da  f7fffffe          BL       GUI_DrawHLine
0001de  f1a40401          SUB      r4,r4,#1              ;189
0001e2  4446              ADD      r6,r6,r8              ;189
                  |L1.484|
0001e4  2c00              CMP      r4,#0                 ;189
0001e6  daf5              BGE      |L1.468|
0001e8  e00a              B        |L1.512|
                  |L1.490|
;;;191        }
;;;192      } else {
;;;193        for (; Size >= 0; Size--, x += Inc) {
0001ea  e007              B        |L1.508|
                  |L1.492|
;;;194          GUI_DrawVLine(x, y - Size, y + Size);
0001ec  192a              ADDS     r2,r5,r4
0001ee  1b29              SUBS     r1,r5,r4
0001f0  4630              MOV      r0,r6
0001f2  f7fffffe          BL       GUI_DrawVLine
0001f6  f1a40401          SUB      r4,r4,#1              ;193
0001fa  4446              ADD      r6,r6,r8              ;193
                  |L1.508|
0001fc  2c00              CMP      r4,#0                 ;193
0001fe  daf5              BGE      |L1.492|
                  |L1.512|
;;;195        }
;;;196      }
;;;197    }
000200  e8bd81f0          POP      {r4-r8,pc}
;;;198    
                          ENDP

                  _Paint PROC
;;;202    */
;;;203    static void _Paint(SCROLLBAR_Obj* pObj) {
000204  b570              PUSH     {r4-r6,lr}
000206  b08e              SUB      sp,sp,#0x38
000208  4604              MOV      r4,r0
;;;204      int ArrowSize, ArrowOff;
;;;205      SCROLLBAR_POSITIONS Pos;
;;;206      GUI_RECT r, rClient;
;;;207      /*
;;;208        Get / calc position info
;;;209      */
;;;210      _CalcPositions(pObj, &Pos);
00020a  a905              ADD      r1,sp,#0x14
00020c  4620              MOV      r0,r4
00020e  f7fffffe          BL       _CalcPositions
;;;211      WIDGET__GetClientRect(&pObj->Widget, &rClient);
000212  a901              ADD      r1,sp,#4
000214  4620              MOV      r0,r4
000216  f7fffffe          BL       WIDGET__GetClientRect
;;;212      r = rClient;
00021a  e9dd0101          LDRD     r0,r1,[sp,#4]
00021e  e9cd0103          STRD     r0,r1,[sp,#0xc]
;;;213      ArrowSize = ((r.y1 - r.y0) /3) - 1;
000222  f9bd0012          LDRSH    r0,[sp,#0x12]
000226  f9bd100e          LDRSH    r1,[sp,#0xe]
00022a  eba00001          SUB      r0,r0,r1
00022e  f04f0103          MOV      r1,#3
000232  fb90f0f1          SDIV     r0,r0,r1
000236  f1a00501          SUB      r5,r0,#1
;;;214      ArrowOff = 3 + ArrowSize+ ArrowSize/3;
00023a  4608              MOV      r0,r1
00023c  fb95f1f0          SDIV     r1,r5,r0
000240  f1050003          ADD      r0,r5,#3
000244  eb010600          ADD      r6,r1,r0
;;;215      /*
;;;216        Draw left Arrow
;;;217      */
;;;218      LCD_SetColor(pObj->Props.aColor[SCROLLBAR_CI_THUMB]);
000248  6aa0              LDR      r0,[r4,#0x28]
00024a  f7fffffe          BL       LCD_SetColor
;;;219      r = rClient;
00024e  e9dd0101          LDRD     r0,r1,[sp,#4]
000252  e9cd0103          STRD     r0,r1,[sp,#0xc]
;;;220      r.x0 = Pos.x0_LeftArrow;
000256  9805              LDR      r0,[sp,#0x14]
000258  b200              SXTH     r0,r0
00025a  f8ad000c          STRH     r0,[sp,#0xc]
;;;221      r.x1 = Pos.x1_LeftArrow;
00025e  9806              LDR      r0,[sp,#0x18]
000260  b200              SXTH     r0,r0
000262  f8ad0010          STRH     r0,[sp,#0x10]
;;;222      WIDGET__FillRectEx(&pObj->Widget, &r);
000266  a903              ADD      r1,sp,#0xc
000268  4620              MOV      r0,r4
00026a  f7fffffe          BL       WIDGET__FillRectEx
;;;223      LCD_SetColor(pObj->Props.aColor[SCROLLBAR_CI_ARROW]);
00026e  6b20              LDR      r0,[r4,#0x30]
000270  f7fffffe          BL       LCD_SetColor
;;;224      _DrawTriangle(&pObj->Widget, r.x0 + ArrowOff, (r.y1 - r.y0) >> 1, ArrowSize, -1);
000274  f04f30ff          MOV      r0,#0xffffffff
000278  9000              STR      r0,[sp,#0]
00027a  f9bd0012          LDRSH    r0,[sp,#0x12]
00027e  f9bd300e          LDRSH    r3,[sp,#0xe]
000282  1ac0              SUBS     r0,r0,r3
000284  1042              ASRS     r2,r0,#1
000286  f9bd000c          LDRSH    r0,[sp,#0xc]
00028a  1981              ADDS     r1,r0,r6
00028c  462b              MOV      r3,r5
00028e  4620              MOV      r0,r4
000290  f7fffffe          BL       _DrawTriangle
;;;225      WIDGET__EFFECT_DrawUpRect(&pObj->Widget, &r);
000294  a903              ADD      r1,sp,#0xc
000296  4620              MOV      r0,r4
000298  f7fffffe          BL       WIDGET__EFFECT_DrawUpRect
;;;226      /*
;;;227        Draw the thumb area which is not covered by the thumb
;;;228      */
;;;229      LCD_SetColor(pObj->Props.aColor[SCROLLBAR_CI_SHAFT]);
00029c  6ae0              LDR      r0,[r4,#0x2c]
00029e  f7fffffe          BL       LCD_SetColor
;;;230      r.x0 = Pos.x1_LeftArrow + 1;
0002a2  9806              LDR      r0,[sp,#0x18]
0002a4  f1000001          ADD      r0,r0,#1
0002a8  b200              SXTH     r0,r0
0002aa  f8ad000c          STRH     r0,[sp,#0xc]
;;;231      r.x1 = Pos.x0_Thumb - 1;
0002ae  9807              LDR      r0,[sp,#0x1c]
0002b0  f1a00001          SUB      r0,r0,#1
0002b4  b200              SXTH     r0,r0
0002b6  f8ad0010          STRH     r0,[sp,#0x10]
;;;232      WIDGET__FillRectEx(&pObj->Widget, &r);
0002ba  a903              ADD      r1,sp,#0xc
0002bc  4620              MOV      r0,r4
0002be  f7fffffe          BL       WIDGET__FillRectEx
;;;233      r = rClient;
0002c2  e9dd0101          LDRD     r0,r1,[sp,#4]
0002c6  e9cd0103          STRD     r0,r1,[sp,#0xc]
;;;234      r.x0 = Pos.x1_Thumb + 1;
0002ca  9808              LDR      r0,[sp,#0x20]
0002cc  f1000001          ADD      r0,r0,#1
0002d0  b200              SXTH     r0,r0
0002d2  f8ad000c          STRH     r0,[sp,#0xc]
;;;235      r.x1 = Pos.x0_RightArrow - 1;
0002d6  9809              LDR      r0,[sp,#0x24]
0002d8  f1a00001          SUB      r0,r0,#1
0002dc  b200              SXTH     r0,r0
0002de  f8ad0010          STRH     r0,[sp,#0x10]
;;;236      WIDGET__FillRectEx(&pObj->Widget, &r);
0002e2  a903              ADD      r1,sp,#0xc
0002e4  4620              MOV      r0,r4
0002e6  f7fffffe          BL       WIDGET__FillRectEx
;;;237      /*
;;;238        Draw Thumb
;;;239      */
;;;240      r = rClient;
0002ea  e9dd0101          LDRD     r0,r1,[sp,#4]
0002ee  e9cd0103          STRD     r0,r1,[sp,#0xc]
;;;241      r.x0 = Pos.x0_Thumb;
0002f2  9807              LDR      r0,[sp,#0x1c]
0002f4  b200              SXTH     r0,r0
0002f6  f8ad000c          STRH     r0,[sp,#0xc]
;;;242      r.x1 = Pos.x1_Thumb;
0002fa  9808              LDR      r0,[sp,#0x20]
0002fc  b200              SXTH     r0,r0
0002fe  f8ad0010          STRH     r0,[sp,#0x10]
;;;243      LCD_SetColor(pObj->Props.aColor[SCROLLBAR_CI_THUMB]);
000302  6aa0              LDR      r0,[r4,#0x28]
000304  f7fffffe          BL       LCD_SetColor
;;;244      WIDGET__FillRectEx(&pObj->Widget, &r);
000308  a903              ADD      r1,sp,#0xc
00030a  4620              MOV      r0,r4
00030c  f7fffffe          BL       WIDGET__FillRectEx
;;;245      WIDGET__EFFECT_DrawUpRect(&pObj->Widget, &r);
000310  a903              ADD      r1,sp,#0xc
000312  4620              MOV      r0,r4
000314  f7fffffe          BL       WIDGET__EFFECT_DrawUpRect
;;;246      /*
;;;247        Draw right Arrow
;;;248      */
;;;249      LCD_SetColor(pObj->Props.aColor[SCROLLBAR_CI_THUMB]);
000318  6aa0              LDR      r0,[r4,#0x28]
00031a  f7fffffe          BL       LCD_SetColor
;;;250      r.x0 = Pos.x0_RightArrow;
00031e  9809              LDR      r0,[sp,#0x24]
000320  b200              SXTH     r0,r0
000322  f8ad000c          STRH     r0,[sp,#0xc]
;;;251      r.x1 = Pos.x1_RightArrow;
000326  980a              LDR      r0,[sp,#0x28]
000328  b200              SXTH     r0,r0
00032a  f8ad0010          STRH     r0,[sp,#0x10]
;;;252      WIDGET__FillRectEx(&pObj->Widget, &r);
00032e  a903              ADD      r1,sp,#0xc
000330  4620              MOV      r0,r4
000332  f7fffffe          BL       WIDGET__FillRectEx
;;;253      LCD_SetColor(pObj->Props.aColor[SCROLLBAR_CI_ARROW]);
000336  6b20              LDR      r0,[r4,#0x30]
000338  f7fffffe          BL       LCD_SetColor
;;;254      _DrawTriangle(&pObj->Widget, r.x1 - ArrowOff, (r.y1 - r.y0) >> 1, ArrowSize, 1);
00033c  2001              MOVS     r0,#1
00033e  9000              STR      r0,[sp,#0]
000340  f9bd0012          LDRSH    r0,[sp,#0x12]
000344  f9bd300e          LDRSH    r3,[sp,#0xe]
000348  1ac0              SUBS     r0,r0,r3
00034a  1042              ASRS     r2,r0,#1
00034c  f9bd0010          LDRSH    r0,[sp,#0x10]
000350  1b81              SUBS     r1,r0,r6
000352  462b              MOV      r3,r5
000354  4620              MOV      r0,r4
000356  f7fffffe          BL       _DrawTriangle
;;;255      WIDGET__EFFECT_DrawUpRect(&pObj->Widget, &r);
00035a  a903              ADD      r1,sp,#0xc
00035c  4620              MOV      r0,r4
00035e  f7fffffe          BL       WIDGET__EFFECT_DrawUpRect
;;;256      /*
;;;257        Draw overlap area (if any ...)
;;;258      */
;;;259      if (Pos.x1_RightArrow != Pos.x1) {
000362  e9dd010a          LDRD     r0,r1,[sp,#0x28]
000366  4288              CMP      r0,r1
000368  d010              BEQ      |L1.908|
;;;260        r.x0 = Pos.x1_RightArrow + 1;
00036a  980a              LDR      r0,[sp,#0x28]
00036c  f1000001          ADD      r0,r0,#1
000370  b200              SXTH     r0,r0
000372  f8ad000c          STRH     r0,[sp,#0xc]
;;;261        r.x1 = Pos.x1;
000376  980b              LDR      r0,[sp,#0x2c]
000378  b200              SXTH     r0,r0
00037a  f8ad0010          STRH     r0,[sp,#0x10]
;;;262        LCD_SetColor(pObj->Props.aColor[SCROLLBAR_CI_THUMB]);
00037e  6aa0              LDR      r0,[r4,#0x28]
000380  f7fffffe          BL       LCD_SetColor
;;;263        WIDGET__FillRectEx(&pObj->Widget, &r);
000384  a903              ADD      r1,sp,#0xc
000386  4620              MOV      r0,r4
000388  f7fffffe          BL       WIDGET__FillRectEx
                  |L1.908|
;;;264      }
;;;265    }
00038c  b00e              ADD      sp,sp,#0x38
00038e  bd70              POP      {r4-r6,pc}
;;;266    
                          ENDP

                  _ScrollbarPressed PROC
;;;270    */
;;;271    static void _ScrollbarPressed(SCROLLBAR_Handle hObj, SCROLLBAR_Obj* pObj) {
000390  b570              PUSH     {r4-r6,lr}
000392  4605              MOV      r5,r0
000394  460c              MOV      r4,r1
;;;272      WIDGET_OrState(hObj, SCROLLBAR_STATE_PRESSED);
000396  f44f7180          MOV      r1,#0x100
00039a  4628              MOV      r0,r5
00039c  f7fffffe          BL       WIDGET_OrState
;;;273      if (pObj->Widget.Win.Status & WM_SF_ISVIS) {
0003a0  8ba0              LDRH     r0,[r4,#0x1c]
0003a2  f0100f02          TST      r0,#2
0003a6  d003              BEQ      |L1.944|
;;;274        WM_NotifyParent(hObj, WM_NOTIFICATION_CLICKED);
0003a8  2101              MOVS     r1,#1
0003aa  4628              MOV      r0,r5
0003ac  f7fffffe          BL       WM_NotifyParent
                  |L1.944|
;;;275      }
;;;276    }
0003b0  bd70              POP      {r4-r6,pc}
;;;277    
                          ENDP

                  _ScrollbarReleased PROC
;;;281    */
;;;282    static void _ScrollbarReleased(SCROLLBAR_Handle hObj, SCROLLBAR_Obj* pObj) {
0003b2  b570              PUSH     {r4-r6,lr}
0003b4  4605              MOV      r5,r0
0003b6  460c              MOV      r4,r1
;;;283      WIDGET_AndState(hObj, SCROLLBAR_STATE_PRESSED);
0003b8  f44f7180          MOV      r1,#0x100
0003bc  4628              MOV      r0,r5
0003be  f7fffffe          BL       WIDGET_AndState
;;;284      if (pObj->Widget.Win.Status & WM_SF_ISVIS) {
0003c2  8ba0              LDRH     r0,[r4,#0x1c]
0003c4  f0100f02          TST      r0,#2
0003c8  d003              BEQ      |L1.978|
;;;285        WM_NotifyParent(hObj, WM_NOTIFICATION_RELEASED);
0003ca  2102              MOVS     r1,#2
0003cc  4628              MOV      r0,r5
0003ce  f7fffffe          BL       WM_NotifyParent
                  |L1.978|
;;;286      }
;;;287    }
0003d2  bd70              POP      {r4-r6,pc}
;;;288    
                          ENDP

                  SCROLLBAR_SetValue PROC
;;;567    */
;;;568    void SCROLLBAR_SetValue(SCROLLBAR_Handle hObj, int v) {
0003d4  e92d41f0          PUSH     {r4-r8,lr}
0003d8  4607              MOV      r7,r0
0003da  460d              MOV      r5,r1
;;;569      SCROLLBAR_Obj* pObj;
;;;570      int Max;
;;;571      if (hObj) {
0003dc  b1ef              CBZ      r7,|L1.1050|
;;;572        WM_LOCK();
;;;573        pObj = SCROLLBAR_H2P(hObj);
0003de  4638              MOV      r0,r7
0003e0  f7fffffe          BL       GUI_ALLOC_h2p
0003e4  4604              MOV      r4,r0
;;;574        Max = pObj->NumItems - pObj->PageSize;
0003e6  6be1              LDR      r1,[r4,#0x3c]
0003e8  6b60              LDR      r0,[r4,#0x34]
0003ea  eba00601          SUB      r6,r0,r1
;;;575        if (Max < 0)
0003ee  2e00              CMP      r6,#0
0003f0  da01              BGE      |L1.1014|
;;;576          Max =0;
0003f2  f04f0600          MOV      r6,#0
                  |L1.1014|
;;;577        /* Put in min/max range */
;;;578        if (v < 0) {
0003f6  2d00              CMP      r5,#0
0003f8  da01              BGE      |L1.1022|
;;;579          v = 0;
0003fa  f04f0500          MOV      r5,#0
                  |L1.1022|
;;;580        }
;;;581        if (v > Max) {
0003fe  42b5              CMP      r5,r6
000400  dd00              BLE      |L1.1028|
;;;582          v = Max;
000402  4635              MOV      r5,r6
                  |L1.1028|
;;;583        }
;;;584        if (pObj->v != v) {
000404  6ba0              LDR      r0,[r4,#0x38]
000406  42a8              CMP      r0,r5
000408  d007              BEQ      |L1.1050|
;;;585          pObj->v = v;
00040a  63a5              STR      r5,[r4,#0x38]
;;;586          WM_InvalidateWindow(hObj);
00040c  4638              MOV      r0,r7
00040e  f7fffffe          BL       WM_InvalidateWindow
;;;587          WM_NotifyParent(hObj, WM_NOTIFICATION_VALUE_CHANGED);
000412  2105              MOVS     r1,#5
000414  4638              MOV      r0,r7
000416  f7fffffe          BL       WM_NotifyParent
                  |L1.1050|
;;;588        }
;;;589        WM_UNLOCK();
;;;590      }
;;;591    }
00041a  e8bd81f0          POP      {r4-r8,pc}
;;;592    
                          ENDP

                  _OnTouch PROC
;;;292    */
;;;293    static void _OnTouch(SCROLLBAR_Handle hObj, SCROLLBAR_Obj* pObj, WM_MESSAGE*pMsg) {
00041e  e92d47f0          PUSH     {r4-r10,lr}
000422  b08a              SUB      sp,sp,#0x28
000424  4681              MOV      r9,r0
000426  460c              MOV      r4,r1
000428  4690              MOV      r8,r2
;;;294      SCROLLBAR_POSITIONS Pos;
;;;295      GUI_PID_STATE* pState = (GUI_PID_STATE*)pMsg->Data.p;
00042a  f8d86008          LDR      r6,[r8,#8]
;;;296      if (pMsg->Data.p) {  /* Something happened in our area (pressed or released) */
00042e  f8d80008          LDR      r0,[r8,#8]
000432  2800              CMP      r0,#0
000434  d05d              BEQ      |L1.1266|
;;;297        if (pState->Pressed) {
000436  7a30              LDRB     r0,[r6,#8]
000438  2800              CMP      r0,#0
00043a  d052              BEQ      |L1.1250|
;;;298          int Sel;
;;;299          int Range;
;;;300          int x;
;;;301          Sel = pObj->v;
00043c  6ba7              LDR      r7,[r4,#0x38]
;;;302          _CalcPositions(pObj, &Pos);
00043e  a901              ADD      r1,sp,#4
000440  4620              MOV      r0,r4
000442  f7fffffe          BL       _CalcPositions
;;;303          Range = pObj->NumItems - pObj->PageSize;
000446  6be1              LDR      r1,[r4,#0x3c]
000448  6b60              LDR      r0,[r4,#0x34]
00044a  eba00a01          SUB      r10,r0,r1
;;;304          /* Swap mouse coordinates if necessary */
;;;305          if (pObj->Widget.State & WIDGET_STATE_VERTICAL) {
00044e  8ce0              LDRH     r0,[r4,#0x26]
000450  f0100f08          TST      r0,#8
000454  d004              BEQ      |L1.1120|
;;;306            int t = pState->x;
000456  6830              LDR      r0,[r6,#0]
;;;307            pState->x = pState->y;
000458  6871              LDR      r1,[r6,#4]
00045a  6031              STR      r1,[r6,#0]
;;;308            pState->y = t;
00045c  6070              STR      r0,[r6,#4]
;;;309          }
00045e  bf00              NOP      
                  |L1.1120|
;;;310          x = pState->x;
000460  6835              LDR      r5,[r6,#0]
;;;311          if (x <= Pos.x1_LeftArrow) {         /* left arrow (line left) */
000462  9802              LDR      r0,[sp,#8]
000464  42a8              CMP      r0,r5
000466  db02              BLT      |L1.1134|
;;;312            Sel--;
000468  f1a70701          SUB      r7,r7,#1
00046c  e028              B        |L1.1216|
                  |L1.1134|
;;;313          } else if (x < Pos.x0_Thumb) {       /* left area  (page left) */
00046e  9803              LDR      r0,[sp,#0xc]
000470  42a8              CMP      r0,r5
000472  dd03              BLE      |L1.1148|
;;;314            Sel -= pObj->PageSize;
000474  6be0              LDR      r0,[r4,#0x3c]
000476  eba70700          SUB      r7,r7,r0
00047a  e021              B        |L1.1216|
                  |L1.1148|
;;;315          } else if (x <= Pos.x1_Thumb) {      /* Thumb area */
00047c  9804              LDR      r0,[sp,#0x10]
00047e  42a8              CMP      r0,r5
000480  db13              BLT      |L1.1194|
;;;316            if (Pos.xSizeMoveable > 0) {
000482  9808              LDR      r0,[sp,#0x20]
000484  2800              CMP      r0,#0
000486  dd1b              BLE      |L1.1216|
;;;317              x = x - Pos.ThumbSize/2 - Pos.x1_LeftArrow-1;
000488  9809              LDR      r0,[sp,#0x24]
00048a  eb0071d0          ADD      r1,r0,r0,LSR #31
00048e  eba50161          SUB      r1,r5,r1,ASR #1
000492  9a02              LDR      r2,[sp,#8]
000494  eba10102          SUB      r1,r1,r2
000498  f1a10501          SUB      r5,r1,#1
;;;318              Sel = GUI__DivideRound(Range * x, Pos.xSizeMoveable);
00049c  fb0af005          MUL      r0,r10,r5
0004a0  9908              LDR      r1,[sp,#0x20]
0004a2  f7fffffe          BL       GUI__DivideRound
0004a6  4607              MOV      r7,r0
0004a8  e00a              B        |L1.1216|
                  |L1.1194|
;;;319            }
;;;320          } else if (x < Pos.x0_RightArrow) {  /* right area (page right) */
0004aa  9805              LDR      r0,[sp,#0x14]
0004ac  42a8              CMP      r0,r5
0004ae  dd02              BLE      |L1.1206|
;;;321            Sel += pObj->PageSize;
0004b0  6be0              LDR      r0,[r4,#0x3c]
0004b2  4407              ADD      r7,r7,r0
0004b4  e004              B        |L1.1216|
                  |L1.1206|
;;;322          } else  if (x <= Pos.x1_RightArrow) {
0004b6  9806              LDR      r0,[sp,#0x18]
0004b8  42a8              CMP      r0,r5
0004ba  db01              BLT      |L1.1216|
;;;323            Sel++;
0004bc  f1070701          ADD      r7,r7,#1
                  |L1.1216|
;;;324          }
;;;325          /* WM_SetFocus(hObj); */
;;;326          WM_SetCapture(hObj, 1);
0004c0  2101              MOVS     r1,#1
0004c2  4648              MOV      r0,r9
0004c4  f7fffffe          BL       WM_SetCapture
;;;327          SCROLLBAR_SetValue(hObj, Sel);
0004c8  4639              MOV      r1,r7
0004ca  4648              MOV      r0,r9
0004cc  f7fffffe          BL       SCROLLBAR_SetValue
;;;328          if ((pObj->Widget.State & SCROLLBAR_STATE_PRESSED) == 0){   
0004d0  8ce0              LDRH     r0,[r4,#0x26]
0004d2  f4107f80          TST      r0,#0x100
0004d6  d103              BNE      |L1.1248|
;;;329            _ScrollbarPressed(hObj, pObj);
0004d8  4621              MOV      r1,r4
0004da  4648              MOV      r0,r9
0004dc  f7fffffe          BL       _ScrollbarPressed
                  |L1.1248|
;;;330          }
;;;331        } else {
0004e0  e007              B        |L1.1266|
                  |L1.1250|
;;;332          /* React only if button was pressed before ... avoid problems with moving / hiding windows above (such as dropdown) */
;;;333          if (pObj->Widget.State & SCROLLBAR_STATE_PRESSED) {   
0004e2  8ce0              LDRH     r0,[r4,#0x26]
0004e4  f4107f80          TST      r0,#0x100
0004e8  d003              BEQ      |L1.1266|
;;;334            _ScrollbarReleased(hObj, pObj);
0004ea  4621              MOV      r1,r4
0004ec  4648              MOV      r0,r9
0004ee  f7fffffe          BL       _ScrollbarReleased
                  |L1.1266|
;;;335          }
;;;336        }
;;;337      }
;;;338    }
0004f2  b00a              ADD      sp,sp,#0x28
0004f4  e8bd87f0          POP      {r4-r10,pc}
;;;339    
                          ENDP

                  SCROLLBAR_AddValue PROC
;;;553    */
;;;554    void SCROLLBAR_AddValue(SCROLLBAR_Handle hObj, int Add) {
0004f8  b570              PUSH     {r4-r6,lr}
0004fa  4604              MOV      r4,r0
0004fc  460d              MOV      r5,r1
;;;555      SCROLLBAR_Obj* pObj;
;;;556      if (hObj) {
0004fe  b14c              CBZ      r4,|L1.1300|
;;;557        WM_LOCK();
;;;558        pObj = SCROLLBAR_H2P(hObj);
000500  4620              MOV      r0,r4
000502  f7fffffe          BL       GUI_ALLOC_h2p
000506  4606              MOV      r6,r0
;;;559        SCROLLBAR_SetValue(hObj, pObj->v + Add);
000508  6bb0              LDR      r0,[r6,#0x38]
00050a  eb000105          ADD      r1,r0,r5
00050e  4620              MOV      r0,r4
000510  f7fffffe          BL       SCROLLBAR_SetValue
                  |L1.1300|
;;;560        WM_UNLOCK();
;;;561      }
;;;562    }
000514  bd70              POP      {r4-r6,pc}
;;;563    
                          ENDP

                  SCROLLBAR_Dec PROC
;;;537    */
;;;538    void SCROLLBAR_Dec(SCROLLBAR_Handle hObj) {
000516  b510              PUSH     {r4,lr}
000518  4604              MOV      r4,r0
;;;539      SCROLLBAR_AddValue(hObj, -1);
00051a  f04f31ff          MOV      r1,#0xffffffff
00051e  4620              MOV      r0,r4
000520  f7fffffe          BL       SCROLLBAR_AddValue
;;;540    }
000524  bd10              POP      {r4,pc}
;;;541    
                          ENDP

                  SCROLLBAR_Inc PROC
;;;545    */
;;;546    void SCROLLBAR_Inc(SCROLLBAR_Handle hObj) {
000526  b510              PUSH     {r4,lr}
000528  4604              MOV      r4,r0
;;;547      SCROLLBAR_AddValue(hObj,  1);
00052a  f04f0101          MOV      r1,#1
00052e  4620              MOV      r0,r4
000530  f7fffffe          BL       SCROLLBAR_AddValue
;;;548    }
000534  bd10              POP      {r4,pc}
;;;549    
                          ENDP

                  _OnKey PROC
;;;343    */
;;;344    static void  _OnKey(SCROLLBAR_Handle hObj, WM_MESSAGE*pMsg) {
000536  e92d41f0          PUSH     {r4-r8,lr}
00053a  4606              MOV      r6,r0
00053c  460c              MOV      r4,r1
;;;345      const WM_KEY_INFO* pKeyInfo;
;;;346      int Key;
;;;347      pKeyInfo = (const WM_KEY_INFO*)(pMsg->Data.p);
00053e  68a5              LDR      r5,[r4,#8]
;;;348      Key = pKeyInfo->Key;
000540  682f              LDR      r7,[r5,#0]
;;;349      if (pKeyInfo->PressedCnt > 0) {
000542  6868              LDR      r0,[r5,#4]
000544  2800              CMP      r0,#0
000546  dd15              BLE      |L1.1396|
;;;350        switch (Key) {
000548  2f10              CMP      r7,#0x10
00054a  d00b              BEQ      |L1.1380|
00054c  2f11              CMP      r7,#0x11
00054e  d00a              BEQ      |L1.1382|
000550  2f12              CMP      r7,#0x12
000552  d002              BEQ      |L1.1370|
000554  2f13              CMP      r7,#0x13
000556  d10a              BNE      |L1.1390|
000558  e000              B        |L1.1372|
                  |L1.1370|
;;;351          case GUI_KEY_RIGHT:
;;;352          case GUI_KEY_DOWN:
00055a  bf00              NOP      
                  |L1.1372|
;;;353            SCROLLBAR_Inc(hObj);
00055c  4630              MOV      r0,r6
00055e  f7fffffe          BL       SCROLLBAR_Inc
;;;354            break;                    /* Send to parent by not doing anything */
000562  e006              B        |L1.1394|
                  |L1.1380|
;;;355          case GUI_KEY_LEFT:
;;;356          case GUI_KEY_UP:
000564  bf00              NOP      
                  |L1.1382|
;;;357            SCROLLBAR_Dec(hObj);
000566  4630              MOV      r0,r6
000568  f7fffffe          BL       SCROLLBAR_Dec
;;;358            break;                    /* Send to parent by not doing anything */
00056c  e001              B        |L1.1394|
                  |L1.1390|
;;;359          default:
;;;360            return;
;;;361        }
;;;362      }
;;;363    }
00056e  e8bd81f0          POP      {r4-r8,pc}
                  |L1.1394|
000572  bf00              NOP                            ;354
                  |L1.1396|
000574  bf00              NOP      
000576  e7fa              B        |L1.1390|
;;;364    
                          ENDP

                  _OnSetScrollState PROC
;;;368    */
;;;369    static void _OnSetScrollState(SCROLLBAR_Handle hObj, SCROLLBAR_Obj* pObj, const WM_SCROLL_STATE* pState) {
000578  b570              PUSH     {r4-r6,lr}
00057a  4606              MOV      r6,r0
00057c  460c              MOV      r4,r1
00057e  4615              MOV      r5,r2
;;;370      if (  (pState->NumItems != pObj->NumItems)
000580  6828              LDR      r0,[r5,#0]
000582  6b61              LDR      r1,[r4,#0x34]
000584  4288              CMP      r0,r1
000586  d107              BNE      |L1.1432|
;;;371          || (pObj->PageSize   != pState->PageSize)
000588  6be0              LDR      r0,[r4,#0x3c]
00058a  68a9              LDR      r1,[r5,#8]
00058c  4288              CMP      r0,r1
00058e  d103              BNE      |L1.1432|
;;;372          || (pObj->v          != pState->v))
000590  6ba0              LDR      r0,[r4,#0x38]
000592  6869              LDR      r1,[r5,#4]
000594  4288              CMP      r0,r1
000596  d00c              BEQ      |L1.1458|
                  |L1.1432|
;;;373      {
;;;374        pObj->NumItems = pState->NumItems;
000598  6828              LDR      r0,[r5,#0]
00059a  6360              STR      r0,[r4,#0x34]
;;;375        pObj->PageSize = pState->PageSize;
00059c  68a8              LDR      r0,[r5,#8]
00059e  63e0              STR      r0,[r4,#0x3c]
;;;376        pObj->v        = pState->v;
0005a0  6868              LDR      r0,[r5,#4]
0005a2  63a0              STR      r0,[r4,#0x38]
;;;377        WM_InvalidateWindow(hObj);
0005a4  4630              MOV      r0,r6
0005a6  f7fffffe          BL       WM_InvalidateWindow
;;;378        WM_NotifyParent(hObj, WM_NOTIFICATION_VALUE_CHANGED);
0005aa  2105              MOVS     r1,#5
0005ac  4630              MOV      r0,r6
0005ae  f7fffffe          BL       WM_NotifyParent
                  |L1.1458|
;;;379      }
;;;380    }
0005b2  bd70              POP      {r4-r6,pc}
;;;381    
                          ENDP

                  SCROLLBAR__InvalidatePartner PROC
;;;408    */
;;;409    void SCROLLBAR__InvalidatePartner(SCROLLBAR_Handle hObj) {     /* Invalidate the partner, since it is also affected */
0005b4  b570              PUSH     {r4-r6,lr}
0005b6  4604              MOV      r4,r0
;;;410      WM_InvalidateWindow(WM_GetScrollPartner(hObj));
0005b8  4620              MOV      r0,r4
0005ba  f7fffffe          BL       WM_GetScrollPartner
0005be  4605              MOV      r5,r0
0005c0  f7fffffe          BL       WM_InvalidateWindow
;;;411      WM_SendMessageNoPara(WM_GetParent(hObj), WM_NOTIFY_CLIENTCHANGE);   /* Client area may have changed */
0005c4  4620              MOV      r0,r4
0005c6  f7fffffe          BL       WM_GetParent
0005ca  4605              MOV      r5,r0
0005cc  2125              MOVS     r1,#0x25
0005ce  f7fffffe          BL       WM_SendMessageNoPara
;;;412    }
0005d2  bd70              POP      {r4-r6,pc}
;;;413    
                          ENDP

                  SCROLLBAR_Callback PROC
;;;423    */
;;;424    void SCROLLBAR_Callback (WM_MESSAGE *pMsg) {
0005d4  b570              PUSH     {r4-r6,lr}
0005d6  4604              MOV      r4,r0
;;;425      SCROLLBAR_Handle hObj;
;;;426      SCROLLBAR_Obj* pObj;
;;;427      hObj = pMsg->hWin;
0005d8  f9b46004          LDRSH    r6,[r4,#4]
;;;428      pObj = (SCROLLBAR_Obj *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
0005dc  4630              MOV      r0,r6
0005de  f7fffffe          BL       GUI_ALLOC_h2p
0005e2  4605              MOV      r5,r0
;;;429      /* Let widget handle the standard messages */
;;;430      if (WIDGET_HandleActive(hObj, pMsg) == 0) {
0005e4  4621              MOV      r1,r4
0005e6  4630              MOV      r0,r6
0005e8  f7fffffe          BL       WIDGET_HandleActive
0005ec  b900              CBNZ     r0,|L1.1520|
                  |L1.1518|
;;;431        return;
;;;432      }
;;;433      switch (pMsg->MsgId) {
;;;434      case WM_DELETE:
;;;435        SCROLLBAR__InvalidatePartner(hObj);
;;;436        break;
;;;437      case WM_PAINT:
;;;438        GUI_DEBUG_LOG("SCROLLBAR: _Callback(WM_PAINT)\n");
;;;439        _Paint(pObj);
;;;440        return;
;;;441      case WM_TOUCH:
;;;442        _OnTouch(hObj, pObj, pMsg);
;;;443        break;
;;;444      case WM_KEY:
;;;445        _OnKey(hObj, pMsg);
;;;446        break;
;;;447      case WM_SET_SCROLL_STATE:
;;;448        _OnSetScrollState(hObj, pObj, (const WM_SCROLL_STATE*)pMsg->Data.p);
;;;449        break;
;;;450      case WM_GET_SCROLL_STATE:
;;;451        ((WM_SCROLL_STATE*)pMsg->Data.p)->NumItems = pObj->NumItems;
;;;452        ((WM_SCROLL_STATE*)pMsg->Data.p)->PageSize = pObj->PageSize;
;;;453        ((WM_SCROLL_STATE*)pMsg->Data.p)->v        = pObj->v;
;;;454        break;
;;;455      }
;;;456      WM_DefaultProc(pMsg);
;;;457    }
0005ee  bd70              POP      {r4-r6,pc}
                  |L1.1520|
0005f0  6820              LDR      r0,[r4,#0]            ;433
0005f2  280f              CMP      r0,#0xf               ;433
0005f4  d010              BEQ      |L1.1560|
0005f6  dc06              BGT      |L1.1542|
0005f8  280b              CMP      r0,#0xb               ;433
0005fa  d009              BEQ      |L1.1552|
0005fc  280c              CMP      r0,#0xc               ;433
0005fe  d00f              BEQ      |L1.1568|
000600  280e              CMP      r0,#0xe               ;433
000602  d128              BNE      |L1.1622|
000604  e012              B        |L1.1580|
                  |L1.1542|
000606  2823              CMP      r0,#0x23              ;433
000608  d01b              BEQ      |L1.1602|
00060a  2824              CMP      r0,#0x24              ;433
00060c  d123              BNE      |L1.1622|
00060e  e012              B        |L1.1590|
                  |L1.1552|
000610  4630              MOV      r0,r6                 ;435
000612  f7fffffe          BL       SCROLLBAR__InvalidatePartner
000616  e01e              B        |L1.1622|
                  |L1.1560|
000618  4628              MOV      r0,r5                 ;439
00061a  f7fffffe          BL       _Paint
00061e  e7e6              B        |L1.1518|
                  |L1.1568|
000620  4622              MOV      r2,r4                 ;442
000622  4629              MOV      r1,r5                 ;442
000624  4630              MOV      r0,r6                 ;442
000626  f7fffffe          BL       _OnTouch
00062a  e014              B        |L1.1622|
                  |L1.1580|
00062c  4621              MOV      r1,r4                 ;445
00062e  4630              MOV      r0,r6                 ;445
000630  f7fffffe          BL       _OnKey
000634  e00f              B        |L1.1622|
                  |L1.1590|
000636  4629              MOV      r1,r5                 ;448
000638  4630              MOV      r0,r6                 ;448
00063a  68a2              LDR      r2,[r4,#8]            ;448
00063c  f7fffffe          BL       _OnSetScrollState
000640  e009              B        |L1.1622|
                  |L1.1602|
000642  6b68              LDR      r0,[r5,#0x34]         ;451
000644  68a1              LDR      r1,[r4,#8]            ;451
000646  6008              STR      r0,[r1,#0]            ;451
000648  6be8              LDR      r0,[r5,#0x3c]         ;452
00064a  68a1              LDR      r1,[r4,#8]            ;452
00064c  6088              STR      r0,[r1,#8]            ;452
00064e  6ba8              LDR      r0,[r5,#0x38]         ;453
000650  68a1              LDR      r1,[r4,#8]            ;453
000652  6048              STR      r0,[r1,#4]            ;453
000654  bf00              NOP                            ;454
                  |L1.1622|
000656  bf00              NOP                            ;436
000658  4620              MOV      r0,r4                 ;456
00065a  f7fffffe          BL       WM_DefaultProc
00065e  bf00              NOP      
000660  e7c5              B        |L1.1518|
;;;458    
                          ENDP

                  SCROLLBAR_CreateEx PROC
;;;472    */
;;;473    SCROLLBAR_Handle SCROLLBAR_CreateEx(int x0, int y0, int xsize, int ysize, WM_HWIN hParent,
000662  e92d4fff          PUSH     {r0-r11,lr}
;;;474                                        int WinFlags, int ExFlags, int Id)
;;;475    {
000666  b085              SUB      sp,sp,#0x14
000668  4616              MOV      r6,r2
00066a  461f              MOV      r7,r3
00066c  f8ddb048          LDR      r11,[sp,#0x48]
000670  e9dd8914          LDRD     r8,r9,[sp,#0x50]
;;;476      SCROLLBAR_Handle hObj;
;;;477      WM_LOCK();
;;;478      /* Set defaults if necessary */
;;;479      if ((xsize == 0) && (ysize == 0)) {
000674  bb9e              CBNZ     r6,|L1.1758|
000676  bb97              CBNZ     r7,|L1.1758|
;;;480        GUI_RECT Rect;
;;;481        WM_GetInsideRectEx(hParent, &Rect);
000678  a903              ADD      r1,sp,#0xc
00067a  4658              MOV      r0,r11
00067c  f7fffffe          BL       WM_GetInsideRectEx
;;;482        if (ExFlags & SCROLLBAR_CF_VERTICAL) {
000680  f0180f08          TST      r8,#8
000684  d015              BEQ      |L1.1714|
;;;483          xsize = SCROLLBAR__DefaultWidth;
000686  4852              LDR      r0,|L1.2000|
000688  f9b06000          LDRSH    r6,[r0,#0]  ; SCROLLBAR__DefaultWidth
;;;484          x0    = Rect.x1 + 1 - xsize;
00068c  f9bd0010          LDRSH    r0,[sp,#0x10]
000690  f1000001          ADD      r0,r0,#1
000694  eba00006          SUB      r0,r0,r6
000698  9005              STR      r0,[sp,#0x14]
;;;485          y0    = Rect.y0;
00069a  f9bd000e          LDRSH    r0,[sp,#0xe]
00069e  9006              STR      r0,[sp,#0x18]
;;;486          ysize = Rect.y1 - Rect.y0 + 1;
0006a0  f9bd0012          LDRSH    r0,[sp,#0x12]
0006a4  f9bd100e          LDRSH    r1,[sp,#0xe]
0006a8  eba00001          SUB      r0,r0,r1
0006ac  f1000701          ADD      r7,r0,#1
0006b0  e014              B        |L1.1756|
                  |L1.1714|
;;;487        } else {
;;;488          ysize = SCROLLBAR__DefaultWidth;
0006b2  4847              LDR      r0,|L1.2000|
0006b4  f9b07000          LDRSH    r7,[r0,#0]  ; SCROLLBAR__DefaultWidth
;;;489          y0    = Rect.y1 + 1 - ysize;
0006b8  f9bd0012          LDRSH    r0,[sp,#0x12]
0006bc  f1000001          ADD      r0,r0,#1
0006c0  eba00007          SUB      r0,r0,r7
0006c4  9006              STR      r0,[sp,#0x18]
;;;490          x0    = Rect.x0;
0006c6  f9bd000c          LDRSH    r0,[sp,#0xc]
0006ca  9005              STR      r0,[sp,#0x14]
;;;491          xsize = Rect.x1 - Rect.x0 + 1;
0006cc  f9bd0010          LDRSH    r0,[sp,#0x10]
0006d0  f9bd100c          LDRSH    r1,[sp,#0xc]
0006d4  eba00001          SUB      r0,r0,r1
0006d8  f1000601          ADD      r6,r0,#1
                  |L1.1756|
;;;492        }
;;;493      }
0006dc  bf00              NOP      
                  |L1.1758|
;;;494      /* Create the window */
;;;495      hObj = WM_CreateWindowAsChild(x0, y0, xsize, ysize, hParent, WinFlags, SCROLLBAR_Callback,
0006de  2120              MOVS     r1,#0x20
0006e0  f2af120f          ADR      r2,SCROLLBAR_Callback + 1
0006e4  9813              LDR      r0,[sp,#0x4c]
0006e6  b280              UXTH     r0,r0
0006e8  463b              MOV      r3,r7
0006ea  e9cdb000          STRD     r11,r0,[sp,#0]
0006ee  e9cd2102          STRD     r2,r1,[sp,#8]
0006f2  4632              MOV      r2,r6
0006f4  e9dd0105          LDRD     r0,r1,[sp,#0x14]
0006f8  f7fffffe          BL       WM_CreateWindowAsChild
0006fc  4682              MOV      r10,r0
;;;496                                    sizeof(SCROLLBAR_Obj) - sizeof(WM_Obj));
;;;497      if (hObj) {
0006fe  f1ba0f00          CMP      r10,#0
000702  d030              BEQ      |L1.1894|
;;;498        SCROLLBAR_Obj * pObj;
;;;499        U16 InitState;
;;;500        pObj = (SCROLLBAR_Obj *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
000704  4650              MOV      r0,r10
000706  f7fffffe          BL       GUI_ALLOC_h2p
00070a  4604              MOV      r4,r0
;;;501        /* Handle SpecialFlags */
;;;502        InitState = 0;
00070c  f04f0500          MOV      r5,#0
;;;503        if (ExFlags & SCROLLBAR_CF_VERTICAL) {
000710  f0180f08          TST      r8,#8
000714  d001              BEQ      |L1.1818|
;;;504          InitState |= WIDGET_CF_VERTICAL;
000716  f0450508          ORR      r5,r5,#8
                  |L1.1818|
;;;505        }
;;;506        if (ExFlags & SCROLLBAR_CF_FOCUSSABLE) {
00071a  f0180f10          TST      r8,#0x10
00071e  d001              BEQ      |L1.1828|
;;;507          InitState |= WIDGET_STATE_FOCUSSABLE;
000720  f0450510          ORR      r5,r5,#0x10
                  |L1.1828|
;;;508        }
;;;509        if ((Id != GUI_ID_HSCROLL) && (Id != GUI_ID_VSCROLL)) {
000724  f1b90fff          CMP      r9,#0xff
000728  d004              BEQ      |L1.1844|
00072a  f1b90ffe          CMP      r9,#0xfe
00072e  d001              BEQ      |L1.1844|
;;;510          InitState |= WIDGET_STATE_FOCUSSABLE;
000730  f0450510          ORR      r5,r5,#0x10
                  |L1.1844|
;;;511        }
;;;512        /* init widget specific variables */
;;;513        WIDGET__Init(&pObj->Widget, Id, InitState);
000734  462a              MOV      r2,r5
000736  4649              MOV      r1,r9
000738  4620              MOV      r0,r4
00073a  f7fffffe          BL       WIDGET__Init
;;;514        /* init member variables */
;;;515        SCROLLBAR_INIT_ID(pObj);
;;;516        pObj->Props         = SCROLLBAR__DefaultProps;
00073e  4a25              LDR      r2,|L1.2004|
000740  e9d21000          LDRD     r1,r0,[r2,#0]
000744  6892              LDR      r2,[r2,#8]  ; SCROLLBAR__DefaultProps
000746  e9c4020b          STRD     r0,r2,[r4,#0x2c]
00074a  62a1              STR      r1,[r4,#0x28]
;;;517        pObj->NumItems      = 100;
00074c  f04f0064          MOV      r0,#0x64
000750  6360              STR      r0,[r4,#0x34]
;;;518        pObj->PageSize      =  10;
000752  f04f000a          MOV      r0,#0xa
000756  63e0              STR      r0,[r4,#0x3c]
;;;519        pObj->v             =   0;
000758  f04f0000          MOV      r0,#0
00075c  63a0              STR      r0,[r4,#0x38]
;;;520        SCROLLBAR__InvalidatePartner(hObj);
00075e  4650              MOV      r0,r10
000760  f7fffffe          BL       SCROLLBAR__InvalidatePartner
;;;521      } else {
000764  bf00              NOP      
                  |L1.1894|
;;;522        GUI_DEBUG_ERROROUT_IF(hObj==0, "SCROLLBAR_Create failed")
;;;523      }
;;;524      WM_UNLOCK();
;;;525      return hObj;
000766  4650              MOV      r0,r10
;;;526    }
000768  b009              ADD      sp,sp,#0x24
00076a  e8bd8ff0          POP      {r4-r11,pc}
;;;527    
                          ENDP

                  SCROLLBAR_SetNumItems PROC
;;;596    */
;;;597    void SCROLLBAR_SetNumItems(SCROLLBAR_Handle hObj, int NumItems) {
00076e  b570              PUSH     {r4-r6,lr}
000770  4606              MOV      r6,r0
000772  460d              MOV      r5,r1
;;;598      SCROLLBAR_Obj* pObj;
;;;599      if (hObj) {
000774  b156              CBZ      r6,|L1.1932|
;;;600        WM_LOCK();
;;;601        pObj = SCROLLBAR_H2P(hObj);
000776  4630              MOV      r0,r6
000778  f7fffffe          BL       GUI_ALLOC_h2p
00077c  4604              MOV      r4,r0
;;;602        if (pObj->NumItems != NumItems) {
00077e  6b60              LDR      r0,[r4,#0x34]
000780  42a8              CMP      r0,r5
000782  d003              BEQ      |L1.1932|
;;;603          pObj->NumItems = NumItems;
000784  6365              STR      r5,[r4,#0x34]
;;;604          WM_InvalidateWindow(hObj);
000786  4630              MOV      r0,r6
000788  f7fffffe          BL       WM_InvalidateWindow
                  |L1.1932|
;;;605        }
;;;606        WM_UNLOCK();
;;;607      }
;;;608    }
00078c  bd70              POP      {r4-r6,pc}
;;;609    
                          ENDP

                  SCROLLBAR_SetPageSize PROC
;;;613    */
;;;614    void SCROLLBAR_SetPageSize(SCROLLBAR_Handle hObj, int PageSize) {
00078e  b570              PUSH     {r4-r6,lr}
000790  4606              MOV      r6,r0
000792  460d              MOV      r5,r1
;;;615      SCROLLBAR_Obj* pObj;
;;;616      if (hObj) {
000794  b156              CBZ      r6,|L1.1964|
;;;617        WM_LOCK();
;;;618        pObj = SCROLLBAR_H2P(hObj);
000796  4630              MOV      r0,r6
000798  f7fffffe          BL       GUI_ALLOC_h2p
00079c  4604              MOV      r4,r0
;;;619        if (pObj->PageSize != PageSize) {
00079e  6be0              LDR      r0,[r4,#0x3c]
0007a0  42a8              CMP      r0,r5
0007a2  d003              BEQ      |L1.1964|
;;;620          pObj->PageSize = PageSize;
0007a4  63e5              STR      r5,[r4,#0x3c]
;;;621          WM_InvalidateWindow(hObj);
0007a6  4630              MOV      r0,r6
0007a8  f7fffffe          BL       WM_InvalidateWindow
                  |L1.1964|
;;;622        }
;;;623        WM_UNLOCK();
;;;624      }
;;;625    }
0007ac  bd70              POP      {r4-r6,pc}
;;;626    
                          ENDP

                  SCROLLBAR_SetState PROC
;;;630    */
;;;631    void  SCROLLBAR_SetState   (SCROLLBAR_Handle hObj, const WM_SCROLL_STATE* pState) {
0007ae  b570              PUSH     {r4-r6,lr}
0007b0  4605              MOV      r5,r0
0007b2  460c              MOV      r4,r1
;;;632      if (hObj) {
0007b4  b15d              CBZ      r5,|L1.1998|
;;;633        SCROLLBAR_SetPageSize(hObj, pState->PageSize);
0007b6  4628              MOV      r0,r5
0007b8  68a1              LDR      r1,[r4,#8]
0007ba  f7fffffe          BL       SCROLLBAR_SetPageSize
;;;634        SCROLLBAR_SetNumItems(hObj, pState->NumItems);
0007be  4628              MOV      r0,r5
0007c0  6821              LDR      r1,[r4,#0]
0007c2  f7fffffe          BL       SCROLLBAR_SetNumItems
;;;635        SCROLLBAR_SetValue   (hObj, pState->v);
0007c6  4628              MOV      r0,r5
0007c8  6861              LDR      r1,[r4,#4]
0007ca  f7fffffe          BL       SCROLLBAR_SetValue
                  |L1.1998|
;;;636      }
;;;637    }
0007ce  bd70              POP      {r4-r6,pc}
;;;638    
                          ENDP

                  |L1.2000|
                          DCD      SCROLLBAR__DefaultWidth
                  |L1.2004|
                          DCD      SCROLLBAR__DefaultProps

                          AREA ||.data||, DATA, ALIGN=2

                  SCROLLBAR__DefaultProps
                          DCD      0x00c0c0c0
                          DCD      0x00808080
                          DCD      0x00000000
                  SCROLLBAR__DefaultWidth
00000c  000b              DCW      0x000b

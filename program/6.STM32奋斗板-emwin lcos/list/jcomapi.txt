; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\jcomapi.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\jcomapi.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\jcomapi.crf GUI\JPEG\jcomapi.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  jpeg_abort PROC
;;;28     GLOBAL(void)
;;;29     jpeg_abort (j_common_ptr cinfo)
000000  b570              PUSH     {r4-r6,lr}
;;;30     {
000002  4604              MOV      r4,r0
;;;31       int pool;
;;;32     
;;;33       /* Do nothing if called on a not-initialized or destroyed JPEG object. */
;;;34       if (cinfo->mem == NULL)
000004  6860              LDR      r0,[r4,#4]
000006  b900              CBNZ     r0,|L1.10|
                  |L1.8|
;;;35         return;
;;;36     
;;;37       /* Releasing pools in reverse order might help avoid fragmentation
;;;38        * with some (brain-damaged) malloc libraries.
;;;39        */
;;;40       for (pool = JPOOL_NUMPOOLS-1; pool > JPOOL_PERMANENT; pool--) {
;;;41         (*cinfo->mem->free_pool) (cinfo, pool);
;;;42       }
;;;43     
;;;44       /* Reset overall state for possible reuse of object */
;;;45       if (cinfo->is_decompressor) {
;;;46         cinfo->global_state = DSTATE_START;
;;;47         /* Try to keep application from accessing now-deleted marker list.
;;;48          * A bit kludgy to do it here, but this is the most central place.
;;;49          */
;;;50         ((j_decompress_ptr) cinfo)->marker_list = NULL;
;;;51       } else {
;;;52         cinfo->global_state = CSTATE_START;
;;;53       }
;;;54     }
000008  bd70              POP      {r4-r6,pc}
                  |L1.10|
00000a  f04f0501          MOV      r5,#1                 ;40
00000e  e006              B        |L1.30|
                  |L1.16|
000010  6860              LDR      r0,[r4,#4]            ;41
000012  4629              MOV      r1,r5                 ;41
000014  6a42              LDR      r2,[r0,#0x24]         ;41
000016  4620              MOV      r0,r4                 ;41
000018  4790              BLX      r2                    ;41
00001a  f1a50501          SUB      r5,r5,#1              ;40
                  |L1.30|
00001e  2d00              CMP      r5,#0                 ;40
000020  dcf6              BGT      |L1.16|
000022  6920              LDR      r0,[r4,#0x10]         ;45
000024  b138              CBZ      r0,|L1.54|
000026  f04f00c8          MOV      r0,#0xc8              ;46
00002a  6160              STR      r0,[r4,#0x14]         ;46
00002c  f04f0000          MOV      r0,#0                 ;50
000030  f8c40130          STR      r0,[r4,#0x130]        ;50
000034  e002              B        |L1.60|
                  |L1.54|
000036  f04f0064          MOV      r0,#0x64              ;52
00003a  6160              STR      r0,[r4,#0x14]         ;52
                  |L1.60|
00003c  bf00              NOP      
00003e  e7e3              B        |L1.8|
;;;55     
                          ENDP

                  jpeg_destroy PROC
;;;67     
;;;68     GLOBAL(void) jpeg_destroy (j_common_ptr cinfo) {
000040  b510              PUSH     {r4,lr}
000042  4604              MOV      r4,r0
;;;69       /* We need only tell the memory manager to release everything. */
;;;70       /* NB: mem pointer is NULL if memory mgr failed to initialize. */
;;;71       if (cinfo->mem != NULL) {
000044  6860              LDR      r0,[r4,#4]
000046  b118              CBZ      r0,|L1.80|
;;;72         (*cinfo->mem->self_destruct) (cinfo);
000048  6860              LDR      r0,[r4,#4]
00004a  6a81              LDR      r1,[r0,#0x28]
00004c  4620              MOV      r0,r4
00004e  4788              BLX      r1
                  |L1.80|
;;;73       }
;;;74       cinfo->mem = NULL;		/* be safe if jpeg_destroy is called twice */
000050  f04f0000          MOV      r0,#0
000054  6060              STR      r0,[r4,#4]
;;;75       cinfo->global_state = 0;	/* mark it destroyed */
000056  6160              STR      r0,[r4,#0x14]
;;;76     }
000058  bd10              POP      {r4,pc}
;;;77     
                          ENDP

                  jpeg_alloc_quant_table PROC
;;;83     
;;;84     GLOBAL(JQUANT_TBL *) jpeg_alloc_quant_table (j_common_ptr cinfo) {
00005a  b570              PUSH     {r4-r6,lr}
00005c  4604              MOV      r4,r0
;;;85       JQUANT_TBL *tbl;
;;;86       tbl = (JQUANT_TBL *) (*cinfo->mem->alloc_small) (cinfo, JPOOL_PERMANENT, SIZEOF(JQUANT_TBL));
00005e  6860              LDR      r0,[r4,#4]
000060  f04f0284          MOV      r2,#0x84
000064  f04f0100          MOV      r1,#0
000068  6803              LDR      r3,[r0,#0]
00006a  4620              MOV      r0,r4
00006c  4798              BLX      r3
00006e  4605              MOV      r5,r0
;;;87       tbl->sent_table = FALSE;	/* make sure this is false in any new table */
000070  f04f0000          MOV      r0,#0
000074  f8c50080          STR      r0,[r5,#0x80]
;;;88       return tbl;
000078  4628              MOV      r0,r5
;;;89     }
00007a  bd70              POP      {r4-r6,pc}
;;;90     
                          ENDP

                  jpeg_alloc_huff_table PROC
;;;91     
;;;92     GLOBAL(JHUFF_TBL *) jpeg_alloc_huff_table (j_common_ptr cinfo) {
00007c  b570              PUSH     {r4-r6,lr}
00007e  4604              MOV      r4,r0
;;;93       JHUFF_TBL *tbl;
;;;94       tbl = (JHUFF_TBL *) (*cinfo->mem->alloc_small) (cinfo, JPOOL_PERMANENT, SIZEOF(JHUFF_TBL));
000080  6860              LDR      r0,[r4,#4]
000082  f44f728c          MOV      r2,#0x118
000086  f04f0100          MOV      r1,#0
00008a  6803              LDR      r3,[r0,#0]
00008c  4620              MOV      r0,r4
00008e  4798              BLX      r3
000090  4605              MOV      r5,r0
;;;95       tbl->sent_table = FALSE;	/* make sure this is false in any new table */
000092  f04f0000          MOV      r0,#0
000096  f8c50114          STR      r0,[r5,#0x114]
;;;96       return tbl;
00009a  4628              MOV      r0,r5
;;;97     }
00009c  bd70              POP      {r4-r6,pc}
                          ENDP


; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\gui_disphex.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\gui_disphex.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\gui_disphex.crf GUI\Core\GUI_DispHex.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  GUI_DispHex PROC
;;;32     */
;;;33     void GUI_DispHex(U32 v, U8 Len) {
000000  b57f              PUSH     {r0-r6,lr}
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;34       char ac[9];
;;;35     	char* s = ac;
000006  a801              ADD      r0,sp,#4
000008  9000              STR      r0,[sp,#0]
;;;36       GUI_AddHex(v, Len, &s);
00000a  466a              MOV      r2,sp
00000c  4629              MOV      r1,r5
00000e  4620              MOV      r0,r4
000010  f7fffffe          BL       GUI_AddHex
;;;37       GUI_DispString(ac);
000014  a801              ADD      r0,sp,#4
000016  f7fffffe          BL       GUI_DispString
;;;38     }
00001a  bd7f              POP      {r0-r6,pc}
;;;39     
                          ENDP

                  GUI_DispHexAt PROC
;;;43     */
;;;44     void GUI_DispHexAt(U32 v, I16P x, I16P y, U8 Len) {
00001c  e92d41ff          PUSH     {r0-r8,lr}
000020  4605              MOV      r5,r0
000022  460e              MOV      r6,r1
000024  4617              MOV      r7,r2
000026  461c              MOV      r4,r3
;;;45       char ac[9];
;;;46     	char* s = ac;
000028  a801              ADD      r0,sp,#4
00002a  9000              STR      r0,[sp,#0]
;;;47       GUI_AddHex(v, Len, &s);
00002c  466a              MOV      r2,sp
00002e  4621              MOV      r1,r4
000030  4628              MOV      r0,r5
000032  f7fffffe          BL       GUI_AddHex
;;;48       GUI_DispStringAt(ac, x, y);
000036  463a              MOV      r2,r7
000038  4631              MOV      r1,r6
00003a  a801              ADD      r0,sp,#4
00003c  f7fffffe          BL       GUI_DispStringAt
;;;49     }
000040  e8bd81ff          POP      {r0-r8,pc}
;;;50     
                          ENDP


; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\gui_array_insertitem.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\gui_array_insertitem.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\gui_array_insertitem.crf GUI\Widget\GUI_ARRAY_InsertItem.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  GUI_ARRAY_InsertBlankItem PROC
;;;51     */
;;;52     char GUI_ARRAY_InsertBlankItem(GUI_ARRAY* pThis, unsigned int Index) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
;;;53       GUI_ARRAY_CHECK(pThis);    /* Sanity checks at higher debug levels only */
;;;54     
;;;55       if (Index >= (unsigned)pThis->NumItems) {
000008  8820              LDRH     r0,[r4,#0]
00000a  42a8              CMP      r0,r5
00000c  d92e              BLS      |L1.108|
;;;56         GUI_DEBUG_ERROROUT("GUI_ARRAY_InsertBlankItem: Illegal index");
;;;57       } else {
;;;58         WM_HMEM hNewBuffer;
;;;59         hNewBuffer = GUI_ALLOC_AllocZero(sizeof(WM_HMEM) * (pThis->NumItems + 1));
00000e  8821              LDRH     r1,[r4,#0]
000010  1c49              ADDS     r1,r1,#1
000012  0049              LSLS     r1,r1,#1
000014  b208              SXTH     r0,r1
000016  f7fffffe          BL       GUI_ALLOC_AllocZero
00001a  4606              MOV      r6,r0
;;;60         if (hNewBuffer == 0) {
00001c  b32e              CBZ      r6,|L1.106|
;;;61           GUI_DEBUG_ERROROUT("GUI_ARRAY_InsertBlankItem: Failed to alloc buffer");
;;;62         } else {
;;;63           WM_HMEM *pOldBuffer;
;;;64           WM_HMEM *pNewBuffer;
;;;65           pNewBuffer = (WM_HMEM*) GUI_ALLOC_h2p(hNewBuffer);
00001e  4630              MOV      r0,r6
000020  f7fffffe          BL       GUI_ALLOC_h2p
000024  4680              MOV      r8,r0
;;;66           pOldBuffer = (WM_HMEM*) GUI_ALLOC_h2p(pThis->haHandle);
000026  f9b40002          LDRSH    r0,[r4,#2]
00002a  f7fffffe          BL       GUI_ALLOC_h2p
00002e  4607              MOV      r7,r0
;;;67           memcpy(pNewBuffer, pOldBuffer, Index * sizeof(WM_HMEM));
000030  ea4f0245          LSL      r2,r5,#1
000034  4639              MOV      r1,r7
000036  4640              MOV      r0,r8
000038  f7fffffe          BL       __aeabi_memcpy
;;;68           memcpy(pNewBuffer + (Index + 1), pOldBuffer + Index, (pThis->NumItems - Index) * sizeof(WM_HMEM));
00003c  8823              LDRH     r3,[r4,#0]
00003e  1b5b              SUBS     r3,r3,r5
000040  005a              LSLS     r2,r3,#1
000042  eb070145          ADD      r1,r7,r5,LSL #1
000046  1c6b              ADDS     r3,r5,#1
000048  eb080043          ADD      r0,r8,r3,LSL #1
00004c  f7fffffe          BL       __aeabi_memcpy
;;;69           GUI_ALLOC_Free(pThis->haHandle);
000050  f9b40002          LDRSH    r0,[r4,#2]
000054  f7fffffe          BL       GUI_ALLOC_Free
;;;70           pThis->haHandle = hNewBuffer;
000058  8066              STRH     r6,[r4,#2]
;;;71           pThis->NumItems++;
00005a  8820              LDRH     r0,[r4,#0]
00005c  f1000001          ADD      r0,r0,#1
000060  8020              STRH     r0,[r4,#0]
;;;72           return 1;               /* Successfull */
000062  f04f0001          MOV      r0,#1
                  |L1.102|
;;;73         }
;;;74       }
;;;75       return 0;                   /* Failed */
;;;76     }
000066  e8bd81f0          POP      {r4-r8,pc}
                  |L1.106|
00006a  bf00              NOP                            ;74
                  |L1.108|
00006c  2000              MOVS     r0,#0                 ;75
00006e  e7fa              B        |L1.102|
;;;77     
                          ENDP

                  GUI_ARRAY_InsertItem PROC
;;;99     */
;;;100    WM_HMEM GUI_ARRAY_InsertItem(GUI_ARRAY* pThis, unsigned int Index, int Len) {
000070  e92d41f0          PUSH     {r4-r8,lr}
000074  4605              MOV      r5,r0
000076  460e              MOV      r6,r1
000078  4614              MOV      r4,r2
;;;101      WM_HMEM hNewBuffer = 0;
00007a  f04f0700          MOV      r7,#0
;;;102      if (GUI_ARRAY_InsertBlankItem(pThis, Index)) {
00007e  4631              MOV      r1,r6
000080  4628              MOV      r0,r5
000082  f7fffffe          BL       GUI_ARRAY_InsertBlankItem
000086  b130              CBZ      r0,|L1.150|
;;;103        hNewBuffer = GUI_ARRAY_SetItem(pThis, Index, 0, Len);
000088  4623              MOV      r3,r4
00008a  2200              MOVS     r2,#0
00008c  4631              MOV      r1,r6
00008e  4628              MOV      r0,r5
000090  f7fffffe          BL       GUI_ARRAY_SetItem
000094  4607              MOV      r7,r0
                  |L1.150|
;;;104      }
;;;105      return hNewBuffer;
000096  4638              MOV      r0,r7
;;;106    }
000098  e8bd81f0          POP      {r4-r8,pc}
;;;107    
                          ENDP


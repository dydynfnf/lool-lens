; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\framewin.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\framewin.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\framewin.crf GUI\Widget\FRAMEWIN.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _SetActive PROC
;;;135    */
;;;136    static void _SetActive(FRAMEWIN_Handle hObj, int State) {
000000  b570              PUSH     {r4-r6,lr}
000002  4606              MOV      r6,r0
000004  460d              MOV      r5,r1
;;;137      FRAMEWIN_Obj* pObj;
;;;138      pObj = FRAMEWIN_H2P(hObj);
000006  4630              MOV      r0,r6
000008  f7fffffe          BL       GUI_ALLOC_h2p
00000c  4604              MOV      r4,r0
;;;139      if        (State && !(pObj->Flags & FRAMEWIN_SF_ACTIVE)) {
00000e  b175              CBZ      r5,|L1.46|
000010  f8b4005a          LDRH     r0,[r4,#0x5a]
000014  f0100f08          TST      r0,#8
000018  d109              BNE      |L1.46|
;;;140        pObj->Flags |= FRAMEWIN_CF_ACTIVE;
00001a  f8b4005a          LDRH     r0,[r4,#0x5a]
00001e  f0400008          ORR      r0,r0,#8
000022  f8a4005a          STRH     r0,[r4,#0x5a]
;;;141        FRAMEWIN_Invalidate(hObj);
000026  4630              MOV      r0,r6
000028  f7fffffe          BL       WM_InvalidateWindow
00002c  e00e              B        |L1.76|
                  |L1.46|
;;;142      } else if (!State && (pObj->Flags & FRAMEWIN_SF_ACTIVE)) {
00002e  b96d              CBNZ     r5,|L1.76|
000030  f8b4005a          LDRH     r0,[r4,#0x5a]
000034  f0100f08          TST      r0,#8
000038  d008              BEQ      |L1.76|
;;;143        pObj->Flags &= ~FRAMEWIN_CF_ACTIVE;
00003a  f8b4005a          LDRH     r0,[r4,#0x5a]
00003e  f0200008          BIC      r0,r0,#8
000042  f8a4005a          STRH     r0,[r4,#0x5a]
;;;144        FRAMEWIN_Invalidate(hObj);
000046  4630              MOV      r0,r6
000048  f7fffffe          BL       WM_InvalidateWindow
                  |L1.76|
;;;145      }
;;;146    }
00004c  bd70              POP      {r4-r6,pc}
;;;147    
                          ENDP

                  _OnTouch PROC
;;;151    */
;;;152    static void _OnTouch(FRAMEWIN_Handle hWin, FRAMEWIN_Obj* pObj, WM_MESSAGE* pMsg) {
00004e  e92d41f0          PUSH     {r4-r8,lr}
000052  4607              MOV      r7,r0
000054  460c              MOV      r4,r1
000056  4615              MOV      r5,r2
;;;153      const GUI_PID_STATE* pState;
;;;154      pState = (const GUI_PID_STATE*)pMsg->Data.p;
000058  68ae              LDR      r6,[r5,#8]
;;;155      if (pMsg->Data.p) {  /* Something happened in our area (pressed or released) */
00005a  68a8              LDR      r0,[r5,#8]
00005c  b308              CBZ      r0,|L1.162|
;;;156        if (pState->Pressed) {
00005e  7a30              LDRB     r0,[r6,#8]
000060  b1f8              CBZ      r0,|L1.162|
;;;157          if (!(pObj->Flags & FRAMEWIN_SF_ACTIVE)) {
000062  f8b4005a          LDRH     r0,[r4,#0x5a]
000066  f0100f08          TST      r0,#8
00006a  d102              BNE      |L1.114|
;;;158            WM_SetFocus(hWin);
00006c  4638              MOV      r0,r7
00006e  f7fffffe          BL       WM_SetFocus
                  |L1.114|
;;;159          }
;;;160          WM_BringToTop(hWin);
000072  4638              MOV      r0,r7
000074  f7fffffe          BL       WM_BringToTop
;;;161          if (pObj->Flags & FRAMEWIN_SF_MOVEABLE) {
000078  f8b4005a          LDRH     r0,[r4,#0x5a]
00007c  f0100f10          TST      r0,#0x10
000080  d00f              BEQ      |L1.162|
;;;162            int LimitTop;
;;;163            #if (FRAMEWIN_ALLOW_DRAG_ON_FRAME)
;;;164            LimitTop = 0;
000082  f04f0800          MOV      r8,#0
;;;165            #else
;;;166            POSITIONS Pos;
;;;167            FRAMEWIN__CalcPositions(pObj, &Pos);
;;;168            LimitTop = pObj->Props.BorderSize + Pos.TitleHeight - 1 + pObj->Props.IBorderSize;
;;;169            if ((pState->y <= LimitTop) || WM_HasCaptured(hWin))
;;;170            #endif
;;;171            {
;;;172              if ((pObj->Flags & FRAMEWIN_SF_MAXIMIZED) == 0) {
000086  f8b4005a          LDRH     r0,[r4,#0x5a]
00008a  f0100f80          TST      r0,#0x80
00008e  d107              BNE      |L1.160|
;;;173                WM_SetCaptureMove(hWin, pState, FRAMEWIN__MinVisibility, LimitTop);
000090  4643              MOV      r3,r8
000092  48f8              LDR      r0,|L1.1140|
000094  f9b02000          LDRSH    r2,[r0,#0]  ; FRAMEWIN__MinVisibility
000098  4631              MOV      r1,r6
00009a  4638              MOV      r0,r7
00009c  f7fffffe          BL       WM_SetCaptureMove
                  |L1.160|
;;;174              }
;;;175            }
;;;176          }
0000a0  bf00              NOP      
                  |L1.162|
;;;177        }
;;;178      }
;;;179    }
0000a2  e8bd81f0          POP      {r4-r8,pc}
;;;180    
                          ENDP

                  FRAMEWIN__CalcTitleHeight PROC
;;;366    */
;;;367    int FRAMEWIN__CalcTitleHeight(FRAMEWIN_Obj* pObj) {
0000a6  b570              PUSH     {r4-r6,lr}
0000a8  4604              MOV      r4,r0
;;;368      int r = 0;
0000aa  f04f0500          MOV      r5,#0
;;;369      if (pObj->Widget.State & FRAMEWIN_SF_TITLEVIS) {
0000ae  8ce0              LDRH     r0,[r4,#0x26]
0000b0  f0100f20          TST      r0,#0x20
0000b4  d007              BEQ      |L1.198|
;;;370        r = pObj->Props.TitleHeight;
0000b6  f9b45040          LDRSH    r5,[r4,#0x40]
;;;371        if (r == 0) {
0000ba  b925              CBNZ     r5,|L1.198|
;;;372          r = 2 + GUI_GetYSizeOfFont(pObj->Props.pFont);
0000bc  6aa0              LDR      r0,[r4,#0x28]
0000be  f7fffffe          BL       GUI_GetYSizeOfFont
0000c2  f1000502          ADD      r5,r0,#2
                  |L1.198|
;;;373        }
;;;374      }
;;;375      return r;
0000c6  4628              MOV      r0,r5
;;;376    }
0000c8  bd70              POP      {r4-r6,pc}
;;;377    
                          ENDP

                  FRAMEWIN__CalcPositions PROC
;;;381    */
;;;382    void FRAMEWIN__CalcPositions(FRAMEWIN_Obj* pObj, POSITIONS* pPos) {
0000ca  e92d4ff0          PUSH     {r4-r11,lr}
0000ce  b085              SUB      sp,sp,#0x14
0000d0  4605              MOV      r5,r0
0000d2  460c              MOV      r4,r1
;;;383      WM_HWIN hChild;
;;;384      WM_Obj* pChild;
;;;385      int TitleHeight;
;;;386      int MenuHeight = 0;
0000d4  f04f0000          MOV      r0,#0
0000d8  9004              STR      r0,[sp,#0x10]
;;;387      int IBorderSize = 0;
0000da  9003              STR      r0,[sp,#0xc]
;;;388      int BorderSize;
;;;389      int xsize, ysize;
;;;390      int x0, x1, y0;
;;;391      BorderSize = pObj->Props.BorderSize;
0000dc  f9b56042          LDRSH    r6,[r5,#0x42]
;;;392      xsize = WM__GetWindowSizeX(&pObj->Widget.Win);
0000e0  4628              MOV      r0,r5
0000e2  f7fffffe          BL       WM__GetWindowSizeX
0000e6  9002              STR      r0,[sp,#8]
;;;393      ysize = WM__GetWindowSizeY(&pObj->Widget.Win);
0000e8  4628              MOV      r0,r5
0000ea  f7fffffe          BL       WM__GetWindowSizeY
0000ee  9001              STR      r0,[sp,#4]
;;;394      if (pObj->Widget.State & FRAMEWIN_SF_TITLEVIS) {
0000f0  8ce8              LDRH     r0,[r5,#0x26]
0000f2  f0100f20          TST      r0,#0x20
0000f6  d002              BEQ      |L1.254|
;;;395        IBorderSize = pObj->Props.IBorderSize;
0000f8  f9b50044          LDRSH    r0,[r5,#0x44]
0000fc  9003              STR      r0,[sp,#0xc]
                  |L1.254|
;;;396      }
;;;397      TitleHeight = FRAMEWIN__CalcTitleHeight(pObj);
0000fe  4628              MOV      r0,r5
000100  f7fffffe          BL       FRAMEWIN__CalcTitleHeight
000104  4680              MOV      r8,r0
;;;398      if (pObj->hMenu) {
000106  f8b5004e          LDRH     r0,[r5,#0x4e]
00010a  b120              CBZ      r0,|L1.278|
;;;399        MenuHeight = WM_GetWindowSizeY(pObj->hMenu);
00010c  f9b5004e          LDRSH    r0,[r5,#0x4e]
000110  f7fffffe          BL       WM_GetWindowSizeY
000114  9004              STR      r0,[sp,#0x10]
                  |L1.278|
;;;400      }
;;;401      pPos->TitleHeight = TitleHeight;
000116  fa0ff088          SXTH     r0,r8
00011a  8020              STRH     r0,[r4,#0]
;;;402      pPos->MenuHeight  = MenuHeight;
00011c  9804              LDR      r0,[sp,#0x10]
00011e  b200              SXTH     r0,r0
000120  8060              STRH     r0,[r4,#2]
;;;403      /* Set object properties accordingly */
;;;404      pPos->rClient.x0  =         BorderSize;
000122  b230              SXTH     r0,r6
000124  80a0              STRH     r0,[r4,#4]
;;;405      pPos->rClient.x1  = xsize - BorderSize - 1;
000126  9802              LDR      r0,[sp,#8]
000128  eba00006          SUB      r0,r0,r6
00012c  f1a00001          SUB      r0,r0,#1
000130  b201              SXTH     r1,r0
000132  8121              STRH     r1,[r4,#8]
;;;406      pPos->rClient.y0  =         BorderSize + IBorderSize + TitleHeight + MenuHeight;
000134  9803              LDR      r0,[sp,#0xc]
000136  4430              ADD      r0,r0,r6
000138  eb000108          ADD      r1,r0,r8
00013c  9804              LDR      r0,[sp,#0x10]
00013e  4408              ADD      r0,r0,r1
000140  b201              SXTH     r1,r0
000142  80e1              STRH     r1,[r4,#6]
;;;407      pPos->rClient.y1  = ysize - BorderSize - 1;
000144  9801              LDR      r0,[sp,#4]
000146  eba00006          SUB      r0,r0,r6
00014a  f1a00001          SUB      r0,r0,#1
00014e  b201              SXTH     r1,r0
000150  8161              STRH     r1,[r4,#0xa]
;;;408      /* Calculate title rect */
;;;409      pPos->rTitleText.x0 =         BorderSize;
000152  b230              SXTH     r0,r6
000154  81a0              STRH     r0,[r4,#0xc]
;;;410      pPos->rTitleText.x1 = xsize - BorderSize - 1;
000156  9802              LDR      r0,[sp,#8]
000158  eba00006          SUB      r0,r0,r6
00015c  f1a00001          SUB      r0,r0,#1
000160  b201              SXTH     r1,r0
000162  8221              STRH     r1,[r4,#0x10]
;;;411      pPos->rTitleText.y0 =         BorderSize;
000164  b231              SXTH     r1,r6
000166  81e1              STRH     r1,[r4,#0xe]
;;;412      pPos->rTitleText.y1 =         BorderSize + TitleHeight - 1;
000168  eb060008          ADD      r0,r6,r8
00016c  f1a00001          SUB      r0,r0,#1
000170  b201              SXTH     r1,r0
000172  8261              STRH     r1,[r4,#0x12]
;;;413      /* Iterate over all children */
;;;414      for (hChild = pObj->Widget.Win.hFirstChild; hChild; hChild = pChild->hNext) {
000174  f9b59018          LDRSH    r9,[r5,#0x18]
000178  e030              B        |L1.476|
                  |L1.378|
;;;415        pChild = WM_H2P(hChild);
00017a  4648              MOV      r0,r9
00017c  f7fffffe          BL       GUI_ALLOC_h2p
000180  4607              MOV      r7,r0
;;;416        x0 = pChild->Rect.x0 - pObj->Widget.Win.Rect.x0;
000182  f9b70000          LDRSH    r0,[r7,#0]
000186  f9b51000          LDRSH    r1,[r5,#0]
00018a  eba00a01          SUB      r10,r0,r1
;;;417        x1 = pChild->Rect.x1 - pObj->Widget.Win.Rect.x0;
00018e  f9b70004          LDRSH    r0,[r7,#4]
000192  f9b51000          LDRSH    r1,[r5,#0]
000196  eba00b01          SUB      r11,r0,r1
;;;418        y0 = pChild->Rect.y0 - pObj->Widget.Win.Rect.y0;
00019a  f9b70002          LDRSH    r0,[r7,#2]
00019e  f9b51002          LDRSH    r1,[r5,#2]
0001a2  eba00001          SUB      r0,r0,r1
0001a6  9000              STR      r0,[sp,#0]
;;;419        if (y0 == BorderSize) {
0001a8  9800              LDR      r0,[sp,#0]
0001aa  42b0              CMP      r0,r6
0001ac  d114              BNE      |L1.472|
;;;420          if (pChild->Status & WM_SF_ANCHOR_RIGHT) {
0001ae  8bb8              LDRH     r0,[r7,#0x1c]
0001b0  f0100f80          TST      r0,#0x80
0001b4  d008              BEQ      |L1.456|
;;;421            if (x0 <= pPos->rTitleText.x1) {
0001b6  f9b40010          LDRSH    r0,[r4,#0x10]
0001ba  4550              CMP      r0,r10
0001bc  db0c              BLT      |L1.472|
;;;422              pPos->rTitleText.x1 = x0 - 1;
0001be  f1aa0001          SUB      r0,r10,#1
0001c2  b201              SXTH     r1,r0
0001c4  8221              STRH     r1,[r4,#0x10]
0001c6  e007              B        |L1.472|
                  |L1.456|
;;;423            }
;;;424          } else {
;;;425            if (x1 >= pPos->rTitleText.x0) {
0001c8  f9b4000c          LDRSH    r0,[r4,#0xc]
0001cc  4558              CMP      r0,r11
0001ce  dc03              BGT      |L1.472|
;;;426              pPos->rTitleText.x0 = x1 + 1;
0001d0  f10b0001          ADD      r0,r11,#1
0001d4  b200              SXTH     r0,r0
0001d6  81a0              STRH     r0,[r4,#0xc]
                  |L1.472|
0001d8  f9b7901a          LDRSH    r9,[r7,#0x1a]         ;414
                  |L1.476|
0001dc  f1b90f00          CMP      r9,#0                 ;414
0001e0  d1cb              BNE      |L1.378|
;;;427            }
;;;428          }
;;;429        }
;;;430      }
;;;431    }
0001e2  b005              ADD      sp,sp,#0x14
0001e4  e8bd8ff0          POP      {r4-r11,pc}
;;;432    
                          ENDP

                  _Paint PROC
;;;185    */
;;;186    static void _Paint(FRAMEWIN_Obj* pObj) {
0001e8  e92d4ff0          PUSH     {r4-r11,lr}
0001ec  b089              SUB      sp,sp,#0x24
0001ee  4604              MOV      r4,r0
;;;187      WM_HWIN hWin = WM_GetActiveWindow();
0001f0  f7fffffe          BL       WM_GetActiveWindow
0001f4  4683              MOV      r11,r0
;;;188      const char* pText = NULL;
0001f6  f04f0a00          MOV      r10,#0
;;;189      int xsize = WM_GetWindowSizeX(hWin);
0001fa  4658              MOV      r0,r11
0001fc  f7fffffe          BL       WM_GetWindowSizeX
000200  4605              MOV      r5,r0
;;;190      int ysize = WM_GetWindowSizeY(hWin);
000202  4658              MOV      r0,r11
000204  f7fffffe          BL       WM_GetWindowSizeY
000208  4606              MOV      r6,r0
;;;191      int BorderSize = pObj->Props.BorderSize;
00020a  f9b48042          LDRSH    r8,[r4,#0x42]
;;;192      int y0, Index;
;;;193      POSITIONS Pos;
;;;194      GUI_RECT r, rText;
;;;195    
;;;196      /* Perform computations */
;;;197      FRAMEWIN__CalcPositions(pObj, &Pos);
00020e  a904              ADD      r1,sp,#0x10
000210  4620              MOV      r0,r4
000212  f7fffffe          BL       FRAMEWIN__CalcPositions
;;;198      Index = (pObj->Flags & FRAMEWIN_SF_ACTIVE) ? 1 : 0;
000216  f8b4005a          LDRH     r0,[r4,#0x5a]
00021a  f3c009c0          UBFX     r9,r0,#3,#1
;;;199    
;;;200      if (pObj->hText) {
00021e  f8b40050          LDRH     r0,[r4,#0x50]
000222  b120              CBZ      r0,|L1.558|
;;;201        pText = (const char*) GUI_ALLOC_h2p(pObj->hText);
000224  f9b40050          LDRSH    r0,[r4,#0x50]
000228  f7fffffe          BL       GUI_ALLOC_h2p
00022c  4682              MOV      r10,r0
                  |L1.558|
;;;202      }
;;;203      r.x0 = Pos.rClient.x0;
00022e  f8bd0014          LDRH     r0,[sp,#0x14]
000232  f8ad0008          STRH     r0,[sp,#8]
;;;204      r.x1 = Pos.rClient.x1;
000236  f8bd0018          LDRH     r0,[sp,#0x18]
00023a  f8ad000c          STRH     r0,[sp,#0xc]
;;;205      r.y0 = Pos.rTitleText.y0;
00023e  f8bd001e          LDRH     r0,[sp,#0x1e]
000242  f8ad000a          STRH     r0,[sp,#0xa]
;;;206      r.y1 = Pos.rTitleText.y1;
000246  f8bd0022          LDRH     r0,[sp,#0x22]
00024a  f8ad000e          STRH     r0,[sp,#0xe]
;;;207      Pos.rTitleText.y0++;
00024e  f8bd001e          LDRH     r0,[sp,#0x1e]
000252  f1000001          ADD      r0,r0,#1
000256  b201              SXTH     r1,r0
000258  f8ad101e          STRH     r1,[sp,#0x1e]
;;;208      Pos.rTitleText.x0++;
00025c  f8bd001c          LDRH     r0,[sp,#0x1c]
000260  f1000001          ADD      r0,r0,#1
000264  b200              SXTH     r0,r0
000266  f8ad001c          STRH     r0,[sp,#0x1c]
;;;209      Pos.rTitleText.x1--;
00026a  f8bd0020          LDRH     r0,[sp,#0x20]
00026e  f1a00001          SUB      r0,r0,#1
000272  b201              SXTH     r1,r0
000274  f8ad1020          STRH     r1,[sp,#0x20]
;;;210      GUI_SetFont(pObj->Props.pFont);
000278  6aa0              LDR      r0,[r4,#0x28]
00027a  f7fffffe          BL       GUI_SetFont
;;;211      GUI__CalcTextRect(pText, &Pos.rTitleText, &rText, pObj->Props.TextAlign);
00027e  f9b43046          LDRSH    r3,[r4,#0x46]
000282  466a              MOV      r2,sp
000284  a907              ADD      r1,sp,#0x1c
000286  4650              MOV      r0,r10
000288  f7fffffe          BL       GUI__CalcTextRect
;;;212      y0 = Pos.TitleHeight + BorderSize;
00028c  f9bd0010          LDRSH    r0,[sp,#0x10]
000290  eb000708          ADD      r7,r0,r8
;;;213    
;;;214      /* Perform drawing operations */
;;;215      WM_ITERATE_START(NULL) {
000294  f04f0000          MOV      r0,#0
000298  f7fffffe          BL       WM__InitIVRSearch
00029c  2800              CMP      r0,#0
00029e  d047              BEQ      |L1.816|
0002a0  bf00              NOP      
                  |L1.674|
;;;216        /* Draw Title */
;;;217        LCD_SetBkColor(pObj->Props.aBarColor[Index]);
0002a2  f104012c          ADD      r1,r4,#0x2c
0002a6  f8510029          LDR      r0,[r1,r9,LSL #2]
0002aa  f7fffffe          BL       LCD_SetBkColor
;;;218        LCD_SetColor(pObj->Props.aTextColor[Index]);
0002ae  f1040134          ADD      r1,r4,#0x34
0002b2  f8510029          LDR      r0,[r1,r9,LSL #2]
0002b6  f7fffffe          BL       LCD_SetColor
;;;219        WIDGET__FillStringInRect(pText, &r, &Pos.rTitleText, &rText);
0002ba  466b              MOV      r3,sp
0002bc  aa07              ADD      r2,sp,#0x1c
0002be  a902              ADD      r1,sp,#8
0002c0  4650              MOV      r0,r10
0002c2  f7fffffe          BL       WIDGET__FillStringInRect
;;;220        /* Draw Frame */
;;;221        LCD_SetColor(FRAMEWIN_FRAMECOLOR_DEFAULT);
0002c6  486c              LDR      r0,|L1.1144|
0002c8  f7fffffe          BL       LCD_SetColor
;;;222        GUI_FillRect(0, 0, xsize-1, BorderSize-1);
0002cc  f1a80301          SUB      r3,r8,#1
0002d0  1e6a              SUBS     r2,r5,#1
0002d2  2100              MOVS     r1,#0
0002d4  4608              MOV      r0,r1
0002d6  f7fffffe          BL       GUI_FillRect
;;;223    	  GUI_FillRect(0, 0, Pos.rClient.x0-1, ysize-1);
0002da  1e73              SUBS     r3,r6,#1
0002dc  f9bd0014          LDRSH    r0,[sp,#0x14]
0002e0  1e42              SUBS     r2,r0,#1
0002e2  2100              MOVS     r1,#0
0002e4  4608              MOV      r0,r1
0002e6  f7fffffe          BL       GUI_FillRect
;;;224    	  GUI_FillRect(Pos.rClient.x1+1, 0, xsize-1, ysize-1);
0002ea  1e73              SUBS     r3,r6,#1
0002ec  1e6a              SUBS     r2,r5,#1
0002ee  f9bd1018          LDRSH    r1,[sp,#0x18]
0002f2  1c48              ADDS     r0,r1,#1
0002f4  2100              MOVS     r1,#0
0002f6  f7fffffe          BL       GUI_FillRect
;;;225        GUI_FillRect(0, Pos.rClient.y1+1, xsize-1, ysize-1);
0002fa  1e73              SUBS     r3,r6,#1
0002fc  1e6a              SUBS     r2,r5,#1
0002fe  f9bd001a          LDRSH    r0,[sp,#0x1a]
000302  1c41              ADDS     r1,r0,#1
000304  2000              MOVS     r0,#0
000306  f7fffffe          BL       GUI_FillRect
;;;226        GUI_FillRect(0, y0, xsize - 1, y0 + pObj->Props.IBorderSize - 1);
00030a  f9b40044          LDRSH    r0,[r4,#0x44]
00030e  4438              ADD      r0,r0,r7
000310  1e43              SUBS     r3,r0,#1
000312  1e6a              SUBS     r2,r5,#1
000314  4639              MOV      r1,r7
000316  2000              MOVS     r0,#0
000318  f7fffffe          BL       GUI_FillRect
;;;227        /* Draw the 3D effect (if configured) */
;;;228        if (pObj->Props.BorderSize >= 2) {
00031c  f9b40042          LDRSH    r0,[r4,#0x42]
000320  2802              CMP      r0,#2
000322  db01              BLT      |L1.808|
;;;229          WIDGET_EFFECT_3D_DrawUp();  /* pObj->Widget.pEffect->pfDrawUp(); */
000324  f7fffffe          BL       WIDGET_EFFECT_3D_DrawUp
                  |L1.808|
;;;230        }
;;;231    
;;;232      } WM_ITERATE_END();
000328  f7fffffe          BL       WM__GetNextIVR
00032c  2800              CMP      r0,#0
00032e  d1b8              BNE      |L1.674|
                  |L1.816|
;;;233    
;;;234    
;;;235    }
000330  b009              ADD      sp,sp,#0x24
000332  e8bd8ff0          POP      {r4-r11,pc}
;;;236    
                          ENDP

                  _OnChildHasFocus PROC
;;;250    */
;;;251    static void _OnChildHasFocus(FRAMEWIN_Handle hWin, FRAMEWIN_Obj* pObj, WM_MESSAGE *pMsg) {
000336  e92d41f0          PUSH     {r4-r8,lr}
00033a  4606              MOV      r6,r0
00033c  460f              MOV      r7,r1
00033e  4614              MOV      r4,r2
;;;252      if (pMsg->Data.p) {
000340  68a0              LDR      r0,[r4,#8]
000342  b1e0              CBZ      r0,|L1.894|
;;;253        const WM_NOTIFY_CHILD_HAS_FOCUS_INFO * pInfo = (const WM_NOTIFY_CHILD_HAS_FOCUS_INFO *)pMsg->Data.p;
000344  68a5              LDR      r5,[r4,#8]
;;;254        int IsDesc = WM__IsAncestorOrSelf(pInfo->hNew, hWin);
000346  f9b50002          LDRSH    r0,[r5,#2]
00034a  4631              MOV      r1,r6
00034c  f7fffffe          BL       WM__IsAncestorOrSelf
000350  4680              MOV      r8,r0
;;;255        if (IsDesc) {                         /* A child has received the focus, Framewindow needs to be activated */
000352  f1b80f00          CMP      r8,#0
000356  d004              BEQ      |L1.866|
;;;256          _SetActive(hWin, 1);
000358  2101              MOVS     r1,#1
00035a  4630              MOV      r0,r6
00035c  f7fffffe          BL       _SetActive
000360  e00c              B        |L1.892|
                  |L1.866|
;;;257        } else {                  /* A child has lost the focus, we need to deactivate */
;;;258          _SetActive(hWin, 0);
000362  2100              MOVS     r1,#0
000364  4630              MOV      r0,r6
000366  f7fffffe          BL       _SetActive
;;;259          /* Remember the child which had the focus so we can reactive this child */
;;;260          if (WM__IsAncestor(pInfo->hOld, hWin)) {
00036a  f9b50000          LDRSH    r0,[r5,#0]
00036e  4631              MOV      r1,r6
000370  f7fffffe          BL       WM__IsAncestor
000374  b110              CBZ      r0,|L1.892|
;;;261            pObj->hFocussedChild = pInfo->hOld;
000376  8828              LDRH     r0,[r5,#0]
000378  f8a7005c          STRH     r0,[r7,#0x5c]
                  |L1.892|
;;;262          }
;;;263        }
;;;264      }
00037c  bf00              NOP      
                  |L1.894|
;;;265    }
00037e  e8bd81f0          POP      {r4-r8,pc}
;;;266    
                          ENDP

                  FRAMEWIN__cbClient PROC
;;;270    */
;;;271    static void FRAMEWIN__cbClient(WM_MESSAGE* pMsg) {
000382  e92d43fe          PUSH     {r1-r9,lr}
000386  4604              MOV      r4,r0
;;;272      WM_HWIN hWin, hParent;
;;;273      FRAMEWIN_Obj * pObj;
;;;274      WM_CALLBACK * cb;
;;;275    
;;;276      hWin    = pMsg->hWin;
000388  f9b47004          LDRSH    r7,[r4,#4]
;;;277      hParent = WM_GetParent(pMsg->hWin);
00038c  f9b40004          LDRSH    r0,[r4,#4]
000390  f7fffffe          BL       WM_GetParent
000394  4680              MOV      r8,r0
;;;278      pObj = (FRAMEWIN_Obj *)GUI_ALLOC_h2p(hParent); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
000396  4640              MOV      r0,r8
000398  f7fffffe          BL       GUI_ALLOC_h2p
00039c  4605              MOV      r5,r0
;;;279      cb = pObj->cb;
00039e  6cae              LDR      r6,[r5,#0x48]
;;;280      switch (pMsg->MsgId) {
0003a0  6820              LDR      r0,[r4,#0]
0003a2  2817              CMP      r0,#0x17
0003a4  d062              BEQ      |L1.1132|
0003a6  dc08              BGT      |L1.954|
0003a8  280e              CMP      r0,#0xe
0003aa  d03f              BEQ      |L1.1068|
0003ac  280f              CMP      r0,#0xf
0003ae  d00b              BEQ      |L1.968|
0003b0  2814              CMP      r0,#0x14
0003b2  d059              BEQ      |L1.1128|
0003b4  2815              CMP      r0,#0x15
0003b6  d161              BNE      |L1.1148|
0003b8  e057              B        |L1.1130|
                  |L1.954|
0003ba  281e              CMP      r0,#0x1e
0003bc  d01a              BEQ      |L1.1012|
0003be  281f              CMP      r0,#0x1f
0003c0  d02f              BEQ      |L1.1058|
0003c2  2822              CMP      r0,#0x22
0003c4  d15a              BNE      |L1.1148|
0003c6  e04c              B        |L1.1122|
                  |L1.968|
;;;281      case WM_PAINT:
;;;282        if (pObj->Props.ClientColor != GUI_INVALID_COLOR) {
0003c8  f06f4170          MVN      r1,#0xf0000000
0003cc  6be8              LDR      r0,[r5,#0x3c]
0003ce  4288              CMP      r0,r1
0003d0  d004              BEQ      |L1.988|
;;;283          LCD_SetBkColor(pObj->Props.ClientColor);
0003d2  6be8              LDR      r0,[r5,#0x3c]
0003d4  f7fffffe          BL       LCD_SetBkColor
;;;284          GUI_Clear();
0003d8  f7fffffe          BL       GUI_Clear
                  |L1.988|
;;;285        }
;;;286        /* Give the user callback  a chance to draw.
;;;287         * Note that we can not run into the bottom part, as this passes the parents handle
;;;288         */
;;;289        if (cb) {
0003dc  b146              CBZ      r6,|L1.1008|
;;;290    	    WM_MESSAGE Msg;
;;;291          Msg      = *pMsg;
0003de  e8940007          LDM      r4,{r0-r2}
0003e2  e88d0007          STM      sp,{r0-r2}
;;;292          Msg.hWin = hWin;
0003e6  f8ad7004          STRH     r7,[sp,#4]
;;;293          (*cb)(&Msg);
0003ea  4668              MOV      r0,sp
0003ec  47b0              BLX      r6
;;;294        }
0003ee  bf00              NOP      
                  |L1.1008|
;;;295        return;
;;;296      case WM_SET_FOCUS:
;;;297        if (pMsg->Data.v) {     /* Focus received */
;;;298          if (pObj->hFocussedChild && (pObj->hFocussedChild != hWin)) {
;;;299            WM_SetFocus(pObj->hFocussedChild);
;;;300          } else {
;;;301            pObj->hFocussedChild = WM_SetFocusOnNextChild(hWin);
;;;302          }
;;;303          pMsg->Data.v = 0;     /* Focus change accepted */
;;;304        }
;;;305        return;
;;;306      case WM_GET_ACCEPT_FOCUS:
;;;307        WIDGET_HandleActive(hParent, pMsg);
;;;308        return;
;;;309      case WM_KEY:
;;;310        if (((const WM_KEY_INFO*)(pMsg->Data.p))->PressedCnt > 0) {
;;;311          int Key = ((const WM_KEY_INFO*)(pMsg->Data.p))->Key;
;;;312          switch (Key) {
;;;313          case GUI_KEY_BACKTAB:
;;;314            pObj->hFocussedChild = WM_SetFocusOnPrevChild(hWin);
;;;315            return;
;;;316          case GUI_KEY_TAB:
;;;317            pObj->hFocussedChild = WM_SetFocusOnNextChild(hWin);
;;;318            return;
;;;319          }
;;;320        }
;;;321        break;	                       /* Send to parent by not doing anything */
;;;322      case WM_GET_BKCOLOR:
;;;323        pMsg->Data.Color = pObj->Props.ClientColor;
;;;324        return;                       /* Message handled */
;;;325      case WM_GET_INSIDE_RECT:        /* This should not be passed to parent ... (We do not want parents coordinates)*/
;;;326      case WM_GET_ID:                 /* This should not be passed to parent ... (Possible recursion problem)*/
;;;327      case WM_GET_CLIENT_WINDOW:      /* return handle to client window. For most windows, there is no seperate client window, so it is the same handle */
;;;328        WM_DefaultProc(pMsg);
;;;329        return;                       /* We are done ! */
;;;330      }
;;;331      /* Call user callback. Note that the user callback gets the handle of the Framewindow itself, NOT the Client. */
;;;332      if (cb) {
;;;333        pMsg->hWin = hParent;
;;;334        (*cb)(pMsg);
;;;335      } else {
;;;336        WM_DefaultProc(pMsg);
;;;337      }
;;;338    }
0003f0  e8bd83fe          POP      {r1-r9,pc}
                  |L1.1012|
0003f4  68a0              LDR      r0,[r4,#8]            ;297
0003f6  b198              CBZ      r0,|L1.1056|
0003f8  f8b5005c          LDRH     r0,[r5,#0x5c]         ;298
0003fc  b140              CBZ      r0,|L1.1040|
0003fe  f9b5005c          LDRSH    r0,[r5,#0x5c]         ;298
000402  42b8              CMP      r0,r7                 ;298
000404  d004              BEQ      |L1.1040|
000406  f9b5005c          LDRSH    r0,[r5,#0x5c]         ;299
00040a  f7fffffe          BL       WM_SetFocus
00040e  e004              B        |L1.1050|
                  |L1.1040|
000410  4638              MOV      r0,r7                 ;301
000412  f7fffffe          BL       WM_SetFocusOnNextChild
000416  f8a5005c          STRH     r0,[r5,#0x5c]         ;301
                  |L1.1050|
00041a  f04f0000          MOV      r0,#0                 ;303
00041e  60a0              STR      r0,[r4,#8]            ;303
                  |L1.1056|
000420  e7e6              B        |L1.1008|
                  |L1.1058|
000422  4621              MOV      r1,r4                 ;307
000424  4640              MOV      r0,r8                 ;307
000426  f7fffffe          BL       WIDGET_HandleActive
00042a  e7e1              B        |L1.1008|
                  |L1.1068|
00042c  68a0              LDR      r0,[r4,#8]            ;310
00042e  6840              LDR      r0,[r0,#4]            ;310
000430  2800              CMP      r0,#0                 ;310
000432  dd15              BLE      |L1.1120|
000434  68a0              LDR      r0,[r4,#8]            ;311
000436  f8d09000          LDR      r9,[r0,#0]            ;311
00043a  f1b90f09          CMP      r9,#9                 ;312
00043e  d008              BEQ      |L1.1106|
000440  f1b90f0a          CMP      r9,#0xa               ;312
000444  d10b              BNE      |L1.1118|
000446  4638              MOV      r0,r7                 ;314
000448  f7fffffe          BL       WM_SetFocusOnPrevChild
00044c  f8a5005c          STRH     r0,[r5,#0x5c]         ;314
000450  e7ce              B        |L1.1008|
                  |L1.1106|
000452  4638              MOV      r0,r7                 ;317
000454  f7fffffe          BL       WM_SetFocusOnNextChild
000458  f8a5005c          STRH     r0,[r5,#0x5c]         ;317
00045c  e7c8              B        |L1.1008|
                  |L1.1118|
00045e  bf00              NOP                            ;320
                  |L1.1120|
000460  e00c              B        |L1.1148|
                  |L1.1122|
000462  6be8              LDR      r0,[r5,#0x3c]         ;323
000464  60a0              STR      r0,[r4,#8]            ;323
000466  e7c3              B        |L1.1008|
                  |L1.1128|
000468  bf00              NOP                            ;326
                  |L1.1130|
00046a  bf00              NOP                            ;327
                  |L1.1132|
00046c  4620              MOV      r0,r4                 ;328
00046e  f7fffffe          BL       WM_DefaultProc
000472  e7bd              B        |L1.1008|
                  |L1.1140|
                          DCD      FRAMEWIN__MinVisibility
                  |L1.1144|
                          DCD      0x00aaaaaa
                  |L1.1148|
00047c  bf00              NOP                            ;321
00047e  b126              CBZ      r6,|L1.1162|
000480  f8a48004          STRH     r8,[r4,#4]            ;333
000484  4620              MOV      r0,r4                 ;334
000486  47b0              BLX      r6                    ;334
000488  e002              B        |L1.1168|
                  |L1.1162|
00048a  4620              MOV      r0,r4                 ;336
00048c  f7fffffe          BL       WM_DefaultProc
                  |L1.1168|
000490  bf00              NOP      
000492  e7ad              B        |L1.1008|
;;;339    
                          ENDP

                  FRAMEWIN__UpdatePositions PROC
;;;436    */
;;;437    void FRAMEWIN__UpdatePositions(FRAMEWIN_Obj* pObj) {
000494  b530              PUSH     {r4,r5,lr}
000496  b085              SUB      sp,sp,#0x14
000498  4604              MOV      r4,r0
;;;438      /* Move client window accordingly */
;;;439      if (pObj->hClient || pObj->hMenu) {
00049a  f8b4004c          LDRH     r0,[r4,#0x4c]
00049e  b910              CBNZ     r0,|L1.1190|
0004a0  f8b4004e          LDRH     r0,[r4,#0x4e]
0004a4  b368              CBZ      r0,|L1.1282|
                  |L1.1190|
;;;440        POSITIONS Pos;
;;;441        FRAMEWIN__CalcPositions(pObj, &Pos);
0004a6  4669              MOV      r1,sp
0004a8  4620              MOV      r0,r4
0004aa  f7fffffe          BL       FRAMEWIN__CalcPositions
;;;442        if (pObj->hClient) {
0004ae  f8b4004c          LDRH     r0,[r4,#0x4c]
0004b2  b1b8              CBZ      r0,|L1.1252|
;;;443          WM_MoveChildTo(pObj->hClient, Pos.rClient.x0, Pos.rClient.y0);
0004b4  f9bd2006          LDRSH    r2,[sp,#6]
0004b8  f9bd1004          LDRSH    r1,[sp,#4]
0004bc  f9b4004c          LDRSH    r0,[r4,#0x4c]
0004c0  f7fffffe          BL       WM_MoveChildTo
;;;444          WM_SetSize(pObj->hClient, 
0004c4  f9bd500a          LDRSH    r5,[sp,#0xa]
0004c8  f9bd3006          LDRSH    r3,[sp,#6]
0004cc  1aeb              SUBS     r3,r5,r3
0004ce  1c5a              ADDS     r2,r3,#1
0004d0  f9bd3008          LDRSH    r3,[sp,#8]
0004d4  f9bd5004          LDRSH    r5,[sp,#4]
0004d8  1b5b              SUBS     r3,r3,r5
0004da  1c59              ADDS     r1,r3,#1
0004dc  f9b4004c          LDRSH    r0,[r4,#0x4c]
0004e0  f7fffffe          BL       WM_SetSize
                  |L1.1252|
;;;445                     Pos.rClient.x1 - Pos.rClient.x0 + 1, 
;;;446                     Pos.rClient.y1 - Pos.rClient.y0 + 1);
;;;447        }
;;;448        if (pObj->hMenu) {
0004e4  f8b4004e          LDRH     r0,[r4,#0x4e]
0004e8  b150              CBZ      r0,|L1.1280|
;;;449          WM_MoveChildTo(pObj->hMenu, Pos.rClient.x0, Pos.rClient.y0 - Pos.MenuHeight);
0004ea  f9bd3006          LDRSH    r3,[sp,#6]
0004ee  f9bd5002          LDRSH    r5,[sp,#2]
0004f2  1b5a              SUBS     r2,r3,r5
0004f4  f9bd1004          LDRSH    r1,[sp,#4]
0004f8  f9b4004e          LDRSH    r0,[r4,#0x4e]
0004fc  f7fffffe          BL       WM_MoveChildTo
                  |L1.1280|
;;;450        }
;;;451      }
000500  bf00              NOP      
                  |L1.1282|
;;;452    }
000502  b005              ADD      sp,sp,#0x14
000504  bd30              POP      {r4,r5,pc}
;;;453    
                          ENDP

                  FRAMEWIN_SetActive PROC
;;;668    */
;;;669    void FRAMEWIN_SetActive(FRAMEWIN_Handle hObj, int State) {
000506  b570              PUSH     {r4-r6,lr}
000508  4604              MOV      r4,r0
00050a  460d              MOV      r5,r1
;;;670      if (hObj) {
00050c  b11c              CBZ      r4,|L1.1302|
;;;671        WM_LOCK();
;;;672        _SetActive(hObj, State);
00050e  4629              MOV      r1,r5
000510  4620              MOV      r0,r4
000512  f7fffffe          BL       _SetActive
                  |L1.1302|
;;;673        WM_UNLOCK();
;;;674      }
;;;675    }
000516  bd70              POP      {r4-r6,pc}
;;;676    
                          ENDP

                  FRAMEWIN_Callback PROC
;;;463    */
;;;464    void FRAMEWIN_Callback (WM_MESSAGE *pMsg) {
000518  e92d47f0          PUSH     {r4-r10,lr}
00051c  b088              SUB      sp,sp,#0x20
00051e  4604              MOV      r4,r0
;;;465      FRAMEWIN_Handle hWin;
;;;466      FRAMEWIN_Obj * pObj;
;;;467      GUI_RECT * pRect;
;;;468      POSITIONS Pos;
;;;469      GUI_HOOK * pHook;
;;;470      hWin = (FRAMEWIN_Handle)(pMsg->hWin);
000520  f9b47004          LDRSH    r7,[r4,#4]
;;;471      pObj = (FRAMEWIN_Obj *)GUI_ALLOC_h2p(hWin); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
000524  4638              MOV      r0,r7
000526  f7fffffe          BL       GUI_ALLOC_h2p
00052a  4605              MOV      r5,r0
;;;472      pRect = (GUI_RECT*)(pMsg->Data.p);
00052c  f8d49008          LDR      r9,[r4,#8]
;;;473      /* Call hook functions */
;;;474      for (pHook = pObj->pFirstHook; pHook; pHook = pHook->pNext) {
000530  6e6e              LDR      r6,[r5,#0x64]
000532  e00a              B        |L1.1354|
                  |L1.1332|
;;;475        int r;
;;;476        r = (*pHook->pHookFunc)(pMsg);
000534  4620              MOV      r0,r4
000536  6871              LDR      r1,[r6,#4]
000538  4788              BLX      r1
00053a  4680              MOV      r8,r0
;;;477        if (r) {
00053c  f1b80f00          CMP      r8,#0
000540  d002              BEQ      |L1.1352|
                  |L1.1346|
;;;478          return;   /* Message handled */
;;;479        }
;;;480      }
;;;481      switch (pMsg->MsgId) {
;;;482      case WM_HANDLE_DIALOG_STATUS:
;;;483        if (pMsg->Data.p) {                           /* set pointer to Dialog status */
;;;484          pObj->pDialogStatus = (WM_DIALOG_STATUS*)pMsg->Data.p;
;;;485        } else {                                      /* return pointer to Dialog status */
;;;486          pMsg->Data.p = pObj->pDialogStatus;      
;;;487        }
;;;488        return;
;;;489      case WM_PAINT:
;;;490        _Paint(pObj);
;;;491        break;
;;;492      case WM_TOUCH:
;;;493        _OnTouch(hWin, pObj, pMsg);
;;;494        return;                       /* Return here ... Message handled */
;;;495      case WM_GET_INSIDE_RECT:
;;;496        FRAMEWIN__CalcPositions(pObj, &Pos);
;;;497    		*pRect = Pos.rClient;
;;;498        return;                       /* Return here ... Message handled */
;;;499      case WM_GET_CLIENT_WINDOW:      /* return handle to client window. For most windows, there is no seperate client window, so it is the same handle */
;;;500        pMsg->Data.v = (int)pObj->hClient;
;;;501        return;                       /* Return here ... Message handled */
;;;502      case WM_NOTIFY_PARENT:
;;;503        if (pMsg->Data.v == WM_NOTIFICATION_RELEASED) {
;;;504          WM_MESSAGE Msg;
;;;505          Msg.hWinSrc = hWin;
;;;506          Msg.Data    = pMsg->Data;
;;;507          Msg.MsgId   = WM_NOTIFY_PARENT_REFLECTION;
;;;508          WM__SendMessage(pMsg->hWinSrc, &Msg);
;;;509        }
;;;510        return;
;;;511      case WM_SET_FOCUS:                 /* We have received or lost focus */
;;;512        if (pMsg->Data.v == 1) {
;;;513          if (WM_IsWindow(pObj->hFocussedChild)) {
;;;514            WM_SetFocus(pObj->hFocussedChild);
;;;515          } else {
;;;516            pObj->hFocussedChild = WM_SetFocusOnNextChild(pObj->hClient);
;;;517          }
;;;518          FRAMEWIN_SetActive(hWin, 1);
;;;519          pMsg->Data.v = 0;              /* Focus could be accepted */
;;;520        } else {
;;;521          FRAMEWIN_SetActive(hWin, 0);
;;;522        }
;;;523        return;
;;;524      case WM_TOUCH_CHILD:
;;;525        /* If a child of this framewindow has been touched and the frame window was not active,
;;;526           the framewindow will receive the focus.
;;;527         */
;;;528        if (!(pObj->Flags & FRAMEWIN_SF_ACTIVE)) {
;;;529          const WM_MESSAGE * pMsgOrg;
;;;530          const GUI_PID_STATE * pState;
;;;531          pMsgOrg = (const WM_MESSAGE*)pMsg->Data.p;      /* The original touch message */
;;;532          pState = (const GUI_PID_STATE*)pMsgOrg->Data.p;
;;;533          if (pState) {          /* Message may not have a valid pointer (moved out) ! */
;;;534            if (pState->Pressed) {
;;;535              WM_SetFocus(hWin);
;;;536            }
;;;537          }
;;;538        }
;;;539        break;
;;;540      case WM_NOTIFY_CHILD_HAS_FOCUS:
;;;541        _OnChildHasFocus(hWin, pObj, pMsg);
;;;542        break;
;;;543      case WM_DELETE:
;;;544        GUI_DEBUG_LOG("FRAMEWIN: FRAMEWIN_Callback(WM_DELETE)\n");
;;;545        GUI_ALLOC_FreePtr(&pObj->hText);
;;;546        break;
;;;547      }
;;;548      /* Let widget handle the standard messages */
;;;549      if (WIDGET_HandleActive(hWin, pMsg) == 0) {
;;;550        return;
;;;551      }
;;;552      WM_DefaultProc(pMsg);
;;;553    }
000542  b008              ADD      sp,sp,#0x20
000544  e8bd87f0          POP      {r4-r10,pc}
                  |L1.1352|
000548  6836              LDR      r6,[r6,#0]            ;474
                  |L1.1354|
00054a  2e00              CMP      r6,#0                 ;474
00054c  d1f2              BNE      |L1.1332|
00054e  6820              LDR      r0,[r4,#0]            ;481
000550  2817              CMP      r0,#0x17              ;481
000552  d032              BEQ      |L1.1466|
000554  dc0c              BGT      |L1.1392|
000556  280d              CMP      r0,#0xd               ;481
000558  d064              BEQ      |L1.1572|
00055a  dc04              BGT      |L1.1382|
00055c  280b              CMP      r0,#0xb               ;481
00055e  d07d              BEQ      |L1.1628|
000560  280c              CMP      r0,#0xc               ;481
000562  d118              BNE      |L1.1430|
000564  e018              B        |L1.1432|
                  |L1.1382|
000566  280f              CMP      r0,#0xf               ;481
000568  d012              BEQ      |L1.1424|
00056a  2814              CMP      r0,#0x14              ;481
00056c  d17b              BNE      |L1.1638|
00056e  e019              B        |L1.1444|
                  |L1.1392|
000570  281e              CMP      r0,#0x1e              ;481
000572  d037              BEQ      |L1.1508|
000574  2820              CMP      r0,#0x20              ;481
000576  d06b              BEQ      |L1.1616|
000578  2826              CMP      r0,#0x26              ;481
00057a  d022              BEQ      |L1.1474|
00057c  282a              CMP      r0,#0x2a              ;481
00057e  d172              BNE      |L1.1638|
000580  68a0              LDR      r0,[r4,#8]            ;483
000582  b110              CBZ      r0,|L1.1418|
000584  68a0              LDR      r0,[r4,#8]            ;484
000586  6628              STR      r0,[r5,#0x60]         ;484
000588  e001              B        |L1.1422|
                  |L1.1418|
00058a  6e28              LDR      r0,[r5,#0x60]         ;486
00058c  60a0              STR      r0,[r4,#8]            ;486
                  |L1.1422|
00058e  e7d8              B        |L1.1346|
                  |L1.1424|
000590  4628              MOV      r0,r5                 ;490
000592  f7fffffe          BL       _Paint
                  |L1.1430|
000596  e066              B        |L1.1638|
                  |L1.1432|
000598  4622              MOV      r2,r4                 ;493
00059a  4629              MOV      r1,r5                 ;493
00059c  4638              MOV      r0,r7                 ;493
00059e  f7fffffe          BL       _OnTouch
0005a2  e7ce              B        |L1.1346|
                  |L1.1444|
0005a4  a903              ADD      r1,sp,#0xc            ;496
0005a6  4628              MOV      r0,r5                 ;496
0005a8  f7fffffe          BL       FRAMEWIN__CalcPositions
0005ac  9804              LDR      r0,[sp,#0x10]         ;497
0005ae  f8c90000          STR      r0,[r9,#0]            ;497
0005b2  9805              LDR      r0,[sp,#0x14]         ;497
0005b4  f8c90004          STR      r0,[r9,#4]            ;497
0005b8  e7c3              B        |L1.1346|
                  |L1.1466|
0005ba  f9b5004c          LDRSH    r0,[r5,#0x4c]         ;500
0005be  60a0              STR      r0,[r4,#8]            ;500
0005c0  e7bf              B        |L1.1346|
                  |L1.1474|
0005c2  68a0              LDR      r0,[r4,#8]            ;503
0005c4  2802              CMP      r0,#2                 ;503
0005c6  d10c              BNE      |L1.1506|
0005c8  f8ad7006          STRH     r7,[sp,#6]            ;505
0005cc  68a0              LDR      r0,[r4,#8]            ;506
0005ce  9002              STR      r0,[sp,#8]            ;506
0005d0  f04f0027          MOV      r0,#0x27              ;507
0005d4  9000              STR      r0,[sp,#0]            ;507
0005d6  f9b40006          LDRSH    r0,[r4,#6]            ;508
0005da  4669              MOV      r1,sp                 ;508
0005dc  f7fffffe          BL       WM__SendMessage
0005e0  bf00              NOP                            ;509
                  |L1.1506|
0005e2  e7ae              B        |L1.1346|
                  |L1.1508|
0005e4  68a0              LDR      r0,[r4,#8]            ;512
0005e6  2801              CMP      r0,#1                 ;512
0005e8  d117              BNE      |L1.1562|
0005ea  f9b5005c          LDRSH    r0,[r5,#0x5c]         ;513
0005ee  f7fffffe          BL       WM_IsWindow
0005f2  b120              CBZ      r0,|L1.1534|
0005f4  f9b5005c          LDRSH    r0,[r5,#0x5c]         ;514
0005f8  f7fffffe          BL       WM_SetFocus
0005fc  e005              B        |L1.1546|
                  |L1.1534|
0005fe  f9b5004c          LDRSH    r0,[r5,#0x4c]         ;516
000602  f7fffffe          BL       WM_SetFocusOnNextChild
000606  f8a5005c          STRH     r0,[r5,#0x5c]         ;516
                  |L1.1546|
00060a  2101              MOVS     r1,#1                 ;518
00060c  4638              MOV      r0,r7                 ;518
00060e  f7fffffe          BL       FRAMEWIN_SetActive
000612  f04f0000          MOV      r0,#0                 ;519
000616  60a0              STR      r0,[r4,#8]            ;519
000618  e003              B        |L1.1570|
                  |L1.1562|
00061a  2100              MOVS     r1,#0                 ;521
00061c  4638              MOV      r0,r7                 ;521
00061e  f7fffffe          BL       FRAMEWIN_SetActive
                  |L1.1570|
000622  e78e              B        |L1.1346|
                  |L1.1572|
000624  f8b5005a          LDRH     r0,[r5,#0x5a]         ;528
000628  f0100f08          TST      r0,#8                 ;528
00062c  d10d              BNE      |L1.1610|
00062e  f8d4a008          LDR      r10,[r4,#8]           ;531
000632  f8da8008          LDR      r8,[r10,#8]           ;532
000636  f1b80f00          CMP      r8,#0                 ;533
00063a  d005              BEQ      |L1.1608|
00063c  f8980008          LDRB     r0,[r8,#8]            ;534
000640  b110              CBZ      r0,|L1.1608|
000642  4638              MOV      r0,r7                 ;535
000644  f7fffffe          BL       WM_SetFocus
                  |L1.1608|
000648  bf00              NOP                            ;538
                  |L1.1610|
00064a  e00c              B        |L1.1638|
00064c  e006              B        |L1.1628|
00064e  e7ff              B        |L1.1616|
                  |L1.1616|
000650  4622              MOV      r2,r4                 ;541
000652  4629              MOV      r1,r5                 ;541
000654  4638              MOV      r0,r7                 ;541
000656  f7fffffe          BL       _OnChildHasFocus
00065a  e004              B        |L1.1638|
                  |L1.1628|
00065c  f1050050          ADD      r0,r5,#0x50           ;545
000660  f7fffffe          BL       GUI_ALLOC_FreePtr
000664  bf00              NOP                            ;546
                  |L1.1638|
000666  bf00              NOP                            ;491
000668  4621              MOV      r1,r4                 ;549
00066a  4638              MOV      r0,r7                 ;549
00066c  f7fffffe          BL       WIDGET_HandleActive
000670  b900              CBNZ     r0,|L1.1652|
000672  e766              B        |L1.1346|
                  |L1.1652|
000674  4620              MOV      r0,r4                 ;552
000676  f7fffffe          BL       WM_DefaultProc
00067a  bf00              NOP      
00067c  e761              B        |L1.1346|
;;;554    
                          ENDP

                  FRAMEWIN_SetText PROC
;;;617    */
;;;618    void FRAMEWIN_SetText(FRAMEWIN_Handle hObj, const char* s) {
00067e  b570              PUSH     {r4-r6,lr}
000680  4604              MOV      r4,r0
000682  460d              MOV      r5,r1
;;;619      if (hObj) {
000684  b16c              CBZ      r4,|L1.1698|
;;;620        FRAMEWIN_Obj* pObj;
;;;621        GUI_LOCK();
;;;622        pObj = FRAMEWIN_H2P(hObj);
000686  4620              MOV      r0,r4
000688  f7fffffe          BL       GUI_ALLOC_h2p
00068c  4606              MOV      r6,r0
;;;623        if (GUI__SetText(&pObj->hText, s)) {
00068e  4629              MOV      r1,r5
000690  f1060050          ADD      r0,r6,#0x50
000694  f7fffffe          BL       GUI__SetText
000698  b110              CBZ      r0,|L1.1696|
;;;624          FRAMEWIN_Invalidate(hObj);
00069a  4620              MOV      r0,r4
00069c  f7fffffe          BL       WM_InvalidateWindow
                  |L1.1696|
;;;625        }
;;;626        GUI_UNLOCK();
;;;627      }
0006a0  bf00              NOP      
                  |L1.1698|
;;;628    }
0006a2  bd70              POP      {r4-r6,pc}
;;;629    
                          ENDP

                  FRAMEWIN_CreateEx PROC
;;;564    */
;;;565    FRAMEWIN_Handle FRAMEWIN_CreateEx(int x0, int y0, int xsize, int ysize, WM_HWIN hParent,
0006a4  e92d4ff0          PUSH     {r4-r11,lr}
;;;566                                      int WinFlags, int ExFlags, int Id, const char* pTitle, WM_CALLBACK* cb)
;;;567    {
0006a8  b089              SUB      sp,sp,#0x24
0006aa  4607              MOV      r7,r0
0006ac  4688              MOV      r8,r1
0006ae  4691              MOV      r9,r2
0006b0  469b              MOV      r11,r3
0006b2  e9dd5a13          LDRD     r5,r10,[sp,#0x4c]
;;;568      FRAMEWIN_Handle hObj;
;;;569      /* Create the window */
;;;570      GUI_LOCK();
;;;571      WinFlags |= WM_CF_LATE_CLIP;    /* Always use late clipping since widget is optimized for it. */
0006b6  f4455580          ORR      r5,r5,#0x1000
;;;572      hObj = WM_CreateWindowAsChild(x0, y0, xsize, ysize, hParent, WinFlags, FRAMEWIN_Callback,
0006ba  f04f0248          MOV      r2,#0x48
0006be  f2af13a7          ADR      r3,FRAMEWIN_Callback + 1
0006c2  b2a8              UXTH     r0,r5
0006c4  9912              LDR      r1,[sp,#0x48]
0006c6  e9cd3202          STRD     r3,r2,[sp,#8]
0006ca  e9cd1000          STRD     r1,r0,[sp,#0]
0006ce  465b              MOV      r3,r11
0006d0  464a              MOV      r2,r9
0006d2  4641              MOV      r1,r8
0006d4  4638              MOV      r0,r7
0006d6  f7fffffe          BL       WM_CreateWindowAsChild
0006da  4606              MOV      r6,r0
;;;573                                    sizeof(FRAMEWIN_Obj) - sizeof(WM_Obj));
;;;574      if (hObj) {
0006dc  2e00              CMP      r6,#0
0006de  d04a              BEQ      |L1.1910|
;;;575        FRAMEWIN_Obj* pObj;
;;;576        POSITIONS Pos;
;;;577        pObj = (FRAMEWIN_Obj *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
0006e0  4630              MOV      r0,r6
0006e2  f7fffffe          BL       GUI_ALLOC_h2p
0006e6  4604              MOV      r4,r0
;;;578        /* init widget specific variables */
;;;579        WIDGET__Init(&pObj->Widget, Id, WIDGET_STATE_FOCUSSABLE | FRAMEWIN_SF_TITLEVIS);
0006e8  f04f0230          MOV      r2,#0x30
0006ec  4620              MOV      r0,r4
0006ee  9915              LDR      r1,[sp,#0x54]
0006f0  f7fffffe          BL       WIDGET__Init
;;;580        /* init member variables */
;;;581        FRAMEWIN_INIT_ID(pObj);
;;;582        pObj->Props = FRAMEWIN__DefaultProps;
0006f4  2220              MOVS     r2,#0x20
0006f6  4938              LDR      r1,|L1.2008|
0006f8  f1040028          ADD      r0,r4,#0x28
0006fc  f7fffffe          BL       __aeabi_memcpy4
;;;583        pObj->cb             = cb;
000700  9817              LDR      r0,[sp,#0x5c]
000702  f8440f48          STR      r0,[r4,#0x48]!
;;;584        pObj->Flags          = ExFlags;
000706  f8a4a012          STRH     r10,[r4,#0x12]
;;;585        pObj->hFocussedChild = 0;
00070a  f04f0000          MOV      r0,#0
00070e  82a0              STRH     r0,[r4,#0x14]
;;;586        pObj->hMenu          = 0;
000710  80e0              STRH     r0,[r4,#6]
;;;587        pObj->pFirstHook     = NULL;
000712  61e0              STR      r0,[r4,#0x1c]
000714  f1a40448          SUB      r4,r4,#0x48
;;;588        FRAMEWIN__CalcPositions(pObj, &Pos);
000718  a904              ADD      r1,sp,#0x10
00071a  4620              MOV      r0,r4
00071c  f7fffffe          BL       FRAMEWIN__CalcPositions
;;;589        pObj->hClient = WM_CreateWindowAsChild(Pos.rClient.x0,Pos.rClient.y0,
000720  2000              MOVS     r0,#0
000722  492e              LDR      r1,|L1.2012|
000724  f2417282          MOV      r2,#0x1782
000728  e9cd6200          STRD     r6,r2,[sp,#0]
00072c  e9cd1002          STRD     r1,r0,[sp,#8]
000730  f9bde01a          LDRSH    lr,[sp,#0x1a]
000734  f9bdc016          LDRSH    r12,[sp,#0x16]
000738  ebae0c0c          SUB      r12,lr,r12
00073c  f10c0301          ADD      r3,r12,#1
000740  f9bdc018          LDRSH    r12,[sp,#0x18]
000744  f9bde014          LDRSH    lr,[sp,#0x14]
000748  ebac0c0e          SUB      r12,r12,lr
00074c  f10c0201          ADD      r2,r12,#1
000750  f9bd1016          LDRSH    r1,[sp,#0x16]
000754  4670              MOV      r0,lr
000756  f7fffffe          BL       WM_CreateWindowAsChild
00075a  f8a4004c          STRH     r0,[r4,#0x4c]
;;;590                                               Pos.rClient.x1 - Pos.rClient.x0 +1,
;;;591                                               Pos.rClient.y1 - Pos.rClient.y0 +1,
;;;592                                               hObj, 
;;;593                                               WM_CF_ANCHOR_RIGHT | WM_CF_ANCHOR_LEFT | WM_CF_ANCHOR_TOP | WM_CF_ANCHOR_BOTTOM | WM_CF_SHOW | WM_CF_LATE_CLIP, 
;;;594                                               FRAMEWIN__cbClient, 0);
;;;595        /* Normally we disable memory devices for the frame window:
;;;596         * The frame window does not flicker, and not using memory devices is usually faster.
;;;597         * You can still use memory by explicitly specifying the flag
;;;598         */
;;;599        if ((WinFlags & (WM_CF_MEMDEV | (WM_CF_MEMDEV_ON_REDRAW))) == 0) {
00075e  f2420004          MOV      r0,#0x2004
000762  4205              TST      r5,r0
000764  d102              BNE      |L1.1900|
;;;600          WM_DisableMemdev(hObj);
000766  4630              MOV      r0,r6
000768  f7fffffe          BL       WM_DisableMemdev
                  |L1.1900|
;;;601        }
;;;602        FRAMEWIN_SetText(hObj, pTitle);
00076c  4630              MOV      r0,r6
00076e  9916              LDR      r1,[sp,#0x58]
000770  f7fffffe          BL       FRAMEWIN_SetText
;;;603      }
000774  bf00              NOP      
                  |L1.1910|
;;;604      GUI_UNLOCK();
;;;605      return hObj;
000776  4630              MOV      r0,r6
;;;606    }
000778  b009              ADD      sp,sp,#0x24
00077a  e8bd8ff0          POP      {r4-r11,pc}
;;;607    
                          ENDP

                  FRAMEWIN_SetTextAlign PROC
;;;633    */
;;;634    void FRAMEWIN_SetTextAlign(FRAMEWIN_Handle hObj, int Align) {
00077e  b570              PUSH     {r4-r6,lr}
000780  4605              MOV      r5,r0
000782  460c              MOV      r4,r1
;;;635      if (hObj) {
000784  b17d              CBZ      r5,|L1.1958|
;;;636        FRAMEWIN_Obj* pObj;
;;;637        GUI_LOCK();
;;;638        pObj = FRAMEWIN_H2P(hObj);
000786  4628              MOV      r0,r5
000788  f7fffffe          BL       GUI_ALLOC_h2p
00078c  4606              MOV      r6,r0
;;;639        if (pObj->Props.TextAlign != Align) {
00078e  f9b60046          LDRSH    r0,[r6,#0x46]
000792  42a0              CMP      r0,r4
000794  d006              BEQ      |L1.1956|
;;;640          pObj->Props.TextAlign = Align;
000796  b221              SXTH     r1,r4
000798  f04f0046          MOV      r0,#0x46
00079c  5381              STRH     r1,[r0,r6]
;;;641          FRAMEWIN_Invalidate(hObj);
00079e  4628              MOV      r0,r5
0007a0  f7fffffe          BL       WM_InvalidateWindow
                  |L1.1956|
;;;642        }
;;;643        GUI_UNLOCK();
;;;644      }
0007a4  bf00              NOP      
                  |L1.1958|
;;;645    }
0007a6  bd70              POP      {r4-r6,pc}
;;;646    
                          ENDP

                  FRAMEWIN_SetMoveable PROC
;;;650    */
;;;651    void FRAMEWIN_SetMoveable(FRAMEWIN_Handle hObj, int State) {
0007a8  b570              PUSH     {r4-r6,lr}
0007aa  4605              MOV      r5,r0
0007ac  460e              MOV      r6,r1
;;;652      if (hObj) {
0007ae  b195              CBZ      r5,|L1.2006|
;;;653        FRAMEWIN_Obj* pObj;
;;;654        GUI_LOCK();
;;;655        pObj = FRAMEWIN_H2P(hObj);
0007b0  4628              MOV      r0,r5
0007b2  f7fffffe          BL       GUI_ALLOC_h2p
0007b6  4604              MOV      r4,r0
;;;656        if (State) {
0007b8  b136              CBZ      r6,|L1.1992|
;;;657          pObj->Flags |= FRAMEWIN_CF_MOVEABLE;
0007ba  f8b4005a          LDRH     r0,[r4,#0x5a]
0007be  f0400010          ORR      r0,r0,#0x10
0007c2  f8a4005a          STRH     r0,[r4,#0x5a]
0007c6  e005              B        |L1.2004|
                  |L1.1992|
;;;658        } else {
;;;659          pObj->Flags &= ~FRAMEWIN_CF_MOVEABLE;
0007c8  f8b4005a          LDRH     r0,[r4,#0x5a]
0007cc  f0200010          BIC      r0,r0,#0x10
0007d0  f8a4005a          STRH     r0,[r4,#0x5a]
                  |L1.2004|
;;;660        }
;;;661        GUI_UNLOCK();
;;;662      }
0007d4  bf00              NOP      
                  |L1.2006|
;;;663    }
0007d6  bd70              POP      {r4-r6,pc}
;;;664    
                          ENDP

                  |L1.2008|
                          DCD      FRAMEWIN__DefaultProps
                  |L1.2012|
                          DCD      FRAMEWIN__cbClient

                          AREA ||.data||, DATA, ALIGN=2

                  FRAMEWIN__DefaultProps
                          DCD      GUI_Font8_1
                          DCD      0x00404040
                          DCD      0x00ff0000
                          DCD      0x00ffffff
                          DCD      0x00ffffff
                          DCD      0x00c0c0c0
000018  00000003          DCW      0x0000,0x0003
00001c  00010000          DCW      0x0001,0x0000
                  FRAMEWIN__MinVisibility
000020  0005              DCW      0x0005

; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\gui_getbitmappixelindex.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\gui_getbitmappixelindex.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\gui_getbitmappixelindex.crf GUI\Core\GUI_GetBitmapPixelIndex.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  GUI_GetBitmapPixelIndex PROC
;;;31     */
;;;32     int GUI_GetBitmapPixelIndex(const GUI_BITMAP GUI_UNI_PTR * pBMP, unsigned x, unsigned y) {
000000  b570              PUSH     {r4-r6,lr}
000002  4603              MOV      r3,r0
000004  460c              MOV      r4,r1
;;;33       unsigned Off, Value;
;;;34       switch (pBMP->BitsPerPixel) {
000006  88dd              LDRH     r5,[r3,#6]
000008  2d04              CMP      r5,#4
00000a  d02a              BEQ      |L1.98|
00000c  dc04              BGT      |L1.24|
00000e  2d01              CMP      r5,#1
000010  d007              BEQ      |L1.34|
000012  2d02              CMP      r5,#2
000014  d147              BNE      |L1.166|
000016  e013              B        |L1.64|
                  |L1.24|
000018  2d08              CMP      r5,#8
00001a  d032              BEQ      |L1.130|
00001c  2d10              CMP      r5,#0x10
00001e  d142              BNE      |L1.166|
000020  e035              B        |L1.142|
                  |L1.34|
;;;35       case 1:
;;;36         Off = (x >> 3) + (y * pBMP->BytesPerLine);
000022  889d              LDRH     r5,[r3,#4]
000024  4355              MULS     r5,r2,r5
000026  eb0501d4          ADD      r1,r5,r4,LSR #3
;;;37         Value = *(pBMP->pData + Off);
00002a  689d              LDR      r5,[r3,#8]
00002c  5c68              LDRB     r0,[r5,r1]
;;;38         Value = Value >> (7 - (x & 0x7)) & 0x1;
00002e  f0040507          AND      r5,r4,#7
000032  f1c50507          RSB      r5,r5,#7
000036  fa20f505          LSR      r5,r0,r5
00003a  f0050001          AND      r0,r5,#1
;;;39         break;
00003e  e035              B        |L1.172|
                  |L1.64|
;;;40       case 2:
;;;41         Off = (x >> 2) + (y * pBMP->BytesPerLine);
000040  889d              LDRH     r5,[r3,#4]
000042  4355              MULS     r5,r2,r5
000044  eb050194          ADD      r1,r5,r4,LSR #2
;;;42         Value = *(pBMP->pData + Off);
000048  689d              LDR      r5,[r3,#8]
00004a  5c68              LDRB     r0,[r5,r1]
;;;43         Value = Value >> (6 - ((x << 1) & 0x6)) & 0x3;
00004c  f04f0506          MOV      r5,#6
000050  ea050544          AND      r5,r5,r4,LSL #1
000054  f1c50506          RSB      r5,r5,#6
000058  fa20f505          LSR      r5,r0,r5
00005c  f0050003          AND      r0,r5,#3
;;;44         break;
000060  e024              B        |L1.172|
                  |L1.98|
;;;45       case 4:
;;;46         Off = (x >> 1) + (y * pBMP->BytesPerLine);
000062  889d              LDRH     r5,[r3,#4]
000064  4355              MULS     r5,r2,r5
000066  eb050154          ADD      r1,r5,r4,LSR #1
;;;47         Value = *(pBMP->pData + Off);
00006a  689d              LDR      r5,[r3,#8]
00006c  5c68              LDRB     r0,[r5,r1]
;;;48         Value = (x & 1) ? (Value & 0xF) : (Value >> 4);
00006e  f0140f01          TST      r4,#1
000072  d002              BEQ      |L1.122|
000074  f000050f          AND      r5,r0,#0xf
000078  e001              B        |L1.126|
                  |L1.122|
00007a  ea4f1510          LSR      r5,r0,#4
                  |L1.126|
00007e  4628              MOV      r0,r5
;;;49         break;
000080  e014              B        |L1.172|
                  |L1.130|
;;;50       case 8:
;;;51         Off = x + y * pBMP->BytesPerLine;
000082  889d              LDRH     r5,[r3,#4]
000084  fb024105          MLA      r1,r2,r5,r4
;;;52         Value = *(pBMP->pData + Off);
000088  689d              LDR      r5,[r3,#8]
00008a  5c68              LDRB     r0,[r5,r1]
;;;53         break;
00008c  e00e              B        |L1.172|
                  |L1.142|
;;;54       case 16:
;;;55         Off = (x << 1) + y * pBMP->BytesPerLine;
00008e  889d              LDRH     r5,[r3,#4]
000090  4355              MULS     r5,r2,r5
000092  eb050144          ADD      r1,r5,r4,LSL #1
;;;56         Value = *(pBMP->pData + Off) | (*(pBMP->pData + Off + 1) << 8);
000096  689d              LDR      r5,[r3,#8]
000098  5c6d              LDRB     r5,[r5,r1]
00009a  689e              LDR      r6,[r3,#8]
00009c  440e              ADD      r6,r6,r1
00009e  7876              LDRB     r6,[r6,#1]
0000a0  ea452006          ORR      r0,r5,r6,LSL #8
;;;57         break;
0000a4  e002              B        |L1.172|
                  |L1.166|
;;;58       default:
;;;59         Value = 0;
0000a6  f04f0000          MOV      r0,#0
0000aa  bf00              NOP                            ;34
                  |L1.172|
0000ac  bf00              NOP                            ;39
;;;60       }
;;;61       return Value;
;;;62     }
0000ae  bd70              POP      {r4-r6,pc}
;;;63     
                          ENDP


; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\gui_bmp_serialize.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\gui_bmp_serialize.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\gui_bmp_serialize.crf GUI\Core\GUI_BMP_Serialize.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  _SendU16 PROC
;;;43     */
;;;44     static void _SendU16(GUI_CALLBACK_VOID_U8_P * pfSerialize, U16 Data, void * p) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
000006  4616              MOV      r6,r2
;;;45       (*pfSerialize)((U8)Data, p);
000008  4631              MOV      r1,r6
00000a  b2e8              UXTB     r0,r5
00000c  47a0              BLX      r4
;;;46       (*pfSerialize)(Data >> 8, p);
00000e  1228              ASRS     r0,r5,#8
000010  4631              MOV      r1,r6
000012  47a0              BLX      r4
;;;47     }
000014  bd70              POP      {r4-r6,pc}
;;;48     
                          ENDP

                  _SendU32 PROC
;;;52     */
;;;53     static void _SendU32(GUI_CALLBACK_VOID_U8_P * pfSerialize, U32 Data, void * p) {
000016  b570              PUSH     {r4-r6,lr}
000018  4605              MOV      r5,r0
00001a  460c              MOV      r4,r1
00001c  4616              MOV      r6,r2
;;;54       _SendU16(pfSerialize, (U16)Data, p);
00001e  4632              MOV      r2,r6
000020  b2a1              UXTH     r1,r4
000022  4628              MOV      r0,r5
000024  f7fffffe          BL       _SendU16
;;;55       _SendU16(pfSerialize, Data >> 16, p);
000028  0c21              LSRS     r1,r4,#16
00002a  4632              MOV      r2,r6
00002c  4628              MOV      r0,r5
00002e  f7fffffe          BL       _SendU16
;;;56     }
000032  bd70              POP      {r4-r6,pc}
;;;57     
                          ENDP

                  GUI_BMP_SerializeEx PROC
;;;67     */
;;;68     void GUI_BMP_SerializeEx(GUI_CALLBACK_VOID_U8_P * pfSerialize, int x0, int y0, int xSize, int ySize, void * p) {
000034  e92d4fff          PUSH     {r0-r11,lr}
000038  b089              SUB      sp,sp,#0x24
00003a  4683              MOV      r11,r0
00003c  461c              MOV      r4,r3
;;;69       int x, y, i, BPP, BytesPerLine, NumColors, Padding;
;;;70       U32 BitmapOffset, FileSize;
;;;71       GUI_LOCK();
;;;72       BPP          = LCD_GetBitsPerPixel();
00003e  f7fffffe          BL       LCD_GetBitsPerPixel
000042  4606              MOV      r6,r0
;;;73       BytesPerLine = ((BPP > 8) ? (2 * xSize + 2) : (xSize + 3)) & ~3;
000044  2e08              CMP      r6,#8
000046  dd04              BLE      |L1.82|
000048  ea4f0044          LSL      r0,r4,#1
00004c  f1000002          ADD      r0,r0,#2
000050  e001              B        |L1.86|
                  |L1.82|
000052  f1040003          ADD      r0,r4,#3
                  |L1.86|
000056  f0200003          BIC      r0,r0,#3
00005a  9008              STR      r0,[sp,#0x20]
;;;74       NumColors    = (BPP > 8) ? 0 : (1 << BPP);
00005c  2e08              CMP      r6,#8
00005e  dd02              BLE      |L1.102|
000060  f04f0000          MOV      r0,#0
000064  e003              B        |L1.110|
                  |L1.102|
000066  f04f0001          MOV      r0,#1
00006a  fa00f006          LSL      r0,r0,r6
                  |L1.110|
00006e  4681              MOV      r9,r0
;;;75       Padding      = BytesPerLine - ((BPP > 8) ? (2 * xSize) : xSize);
000070  2e08              CMP      r6,#8
000072  dd02              BLE      |L1.122|
000074  ea4f0044          LSL      r0,r4,#1
000078  e000              B        |L1.124|
                  |L1.122|
00007a  4620              MOV      r0,r4
                  |L1.124|
00007c  9908              LDR      r1,[sp,#0x20]
00007e  eba10000          SUB      r0,r1,r0
000082  9007              STR      r0,[sp,#0x1c]
;;;76       /* Write BITMAPFILEHEADER */
;;;77       BitmapOffset   = SIZEOF_BITMAPFILEHEADER
000084  f04f0036          MOV      r0,#0x36
000088  eb000089          ADD      r0,r0,r9,LSL #2
00008c  9006              STR      r0,[sp,#0x18]
;;;78                      + SIZEOF_BITMAPINFOHEADER
;;;79                      + NumColors * 4;
;;;80       FileSize       = BitmapOffset
00008e  9a08              LDR      r2,[sp,#0x20]
000090  9916              LDR      r1,[sp,#0x58]
000092  9806              LDR      r0,[sp,#0x18]
000094  fb010002          MLA      r0,r1,r2,r0
000098  9005              STR      r0,[sp,#0x14]
;;;81                      + ySize * BytesPerLine;
;;;82       _SendU16(pfSerialize, DIB_HEADER_MARKER, p);       /* bfType */
00009a  f6445142          MOV      r1,#0x4d42
00009e  4658              MOV      r0,r11
0000a0  9a17              LDR      r2,[sp,#0x5c]
0000a2  f7fffffe          BL       _SendU16
;;;83       _SendU32(pfSerialize, FileSize, p);                /* bfSize */
0000a6  4658              MOV      r0,r11
0000a8  9a17              LDR      r2,[sp,#0x5c]
0000aa  9905              LDR      r1,[sp,#0x14]
0000ac  f7fffffe          BL       _SendU32
;;;84       _SendU32(pfSerialize, 0, p);                       /* bfReserved1, bfReserved2 */
0000b0  2100              MOVS     r1,#0
0000b2  4658              MOV      r0,r11
0000b4  9a17              LDR      r2,[sp,#0x5c]
0000b6  f7fffffe          BL       _SendU32
;;;85       _SendU32(pfSerialize, BitmapOffset, p);            /* bfOffBits */
0000ba  4658              MOV      r0,r11
0000bc  9a17              LDR      r2,[sp,#0x5c]
0000be  9906              LDR      r1,[sp,#0x18]
0000c0  f7fffffe          BL       _SendU32
;;;86       /* Write BITMAPINFOHEADER */
;;;87       _SendU32(pfSerialize, SIZEOF_BITMAPINFOHEADER, p); /* biSize */
0000c4  2128              MOVS     r1,#0x28
0000c6  4658              MOV      r0,r11
0000c8  9a17              LDR      r2,[sp,#0x5c]
0000ca  f7fffffe          BL       _SendU32
;;;88       _SendU32(pfSerialize, xSize, p);                   /* biWidth */
0000ce  4621              MOV      r1,r4
0000d0  4658              MOV      r0,r11
0000d2  9a17              LDR      r2,[sp,#0x5c]
0000d4  f7fffffe          BL       _SendU32
;;;89       _SendU32(pfSerialize, ySize, p);                   /* biHeighth */
0000d8  4658              MOV      r0,r11
0000da  e9dd1216          LDRD     r1,r2,[sp,#0x58]
0000de  f7fffffe          BL       _SendU32
;;;90       _SendU16(pfSerialize, 1, p);                       /* biPlanes */
0000e2  2101              MOVS     r1,#1
0000e4  4658              MOV      r0,r11
0000e6  9a17              LDR      r2,[sp,#0x5c]
0000e8  f7fffffe          BL       _SendU16
;;;91       _SendU16(pfSerialize, (BPP  <= 8) ? 8 : 16, p);    /* biBitCount */
0000ec  2e08              CMP      r6,#8
0000ee  dc01              BGT      |L1.244|
0000f0  2008              MOVS     r0,#8
0000f2  e000              B        |L1.246|
                  |L1.244|
0000f4  2010              MOVS     r0,#0x10
                  |L1.246|
0000f6  4601              MOV      r1,r0
0000f8  4658              MOV      r0,r11
0000fa  9a17              LDR      r2,[sp,#0x5c]
0000fc  f7fffffe          BL       _SendU16
;;;92       _SendU32(pfSerialize, 0, p);                       /* biCompression */
000100  2100              MOVS     r1,#0
000102  4658              MOV      r0,r11
000104  9a17              LDR      r2,[sp,#0x5c]
000106  f7fffffe          BL       _SendU32
;;;93       _SendU32(pfSerialize, 0, p);                       /* biSizeImage */
00010a  2100              MOVS     r1,#0
00010c  4658              MOV      r0,r11
00010e  9a17              LDR      r2,[sp,#0x5c]
000110  f7fffffe          BL       _SendU32
;;;94       _SendU32(pfSerialize, 0, p);                       /* biXPelsPerMeter */
000114  2100              MOVS     r1,#0
000116  4658              MOV      r0,r11
000118  9a17              LDR      r2,[sp,#0x5c]
00011a  f7fffffe          BL       _SendU32
;;;95       _SendU32(pfSerialize, 0, p);                       /* biYPelsPerMeter */
00011e  2100              MOVS     r1,#0
000120  4658              MOV      r0,r11
000122  9a17              LDR      r2,[sp,#0x5c]
000124  f7fffffe          BL       _SendU32
;;;96       _SendU32(pfSerialize, NumColors, p);               /* biClrUsed */
000128  4649              MOV      r1,r9
00012a  4658              MOV      r0,r11
00012c  9a17              LDR      r2,[sp,#0x5c]
00012e  f7fffffe          BL       _SendU32
;;;97       _SendU32(pfSerialize, 0, p);                       /* biClrImportant */
000132  2100              MOVS     r1,#0
000134  4658              MOV      r0,r11
000136  9a17              LDR      r2,[sp,#0x5c]
000138  f7fffffe          BL       _SendU32
;;;98       /* Write palette */
;;;99       for (i = 0; i < NumColors; i++) {
00013c  f04f0500          MOV      r5,#0
000140  e014              B        |L1.364|
                  |L1.322|
;;;100        U32 Color;
;;;101        Color = GUI_Index2Color(i);
000142  4628              MOV      r0,r5
000144  f7fffffe          BL       GUI_Index2Color
000148  4682              MOV      r10,r0
;;;102        Color = ((Color >> 16) & 255) | (Color & 0xff00) | ((Color & 0xff) << 16);
00014a  f40a407f          AND      r0,r10,#0xff00
00014e  f3ca4107          UBFX     r1,r10,#16,#8
000152  ea400001          ORR      r0,r0,r1
000156  f00a01ff          AND      r1,r10,#0xff
00015a  ea404a01          ORR      r10,r0,r1,LSL #16
;;;103        _SendU32(pfSerialize, Color, p);
00015e  4651              MOV      r1,r10
000160  4658              MOV      r0,r11
000162  9a17              LDR      r2,[sp,#0x5c]
000164  f7fffffe          BL       _SendU32
000168  f1050501          ADD      r5,r5,#1              ;99
                  |L1.364|
00016c  454d              CMP      r5,r9                 ;99
00016e  dbe8              BLT      |L1.322|
;;;104      }
;;;105      /* Write pixels */
;;;106      for (y = ySize - 1; y >= 0; y--) {
000170  9816              LDR      r0,[sp,#0x58]
000172  f1a00701          SUB      r7,r0,#1
000176  e058              B        |L1.554|
                  |L1.376|
;;;107        for (x = 0; x < xSize; x++) {
000178  f04f0800          MOV      r8,#0
00017c  e046              B        |L1.524|
                  |L1.382|
;;;108          if (BPP <= 8) {
00017e  2e08              CMP      r6,#8
000180  dc0c              BGT      |L1.412|
;;;109            pfSerialize(LCD_GetPixelIndex(x0 + x, y0 + y), p);
000182  9a0b              LDR      r2,[sp,#0x2c]
000184  19d1              ADDS     r1,r2,r7
000186  9a0a              LDR      r2,[sp,#0x28]
000188  eb020008          ADD      r0,r2,r8
00018c  f7fffffe          BL       LCD_GetPixelIndex
000190  f0000aff          AND      r10,r0,#0xff
000194  4650              MOV      r0,r10
000196  9917              LDR      r1,[sp,#0x5c]
000198  47d8              BLX      r11
00019a  e035              B        |L1.520|
                  |L1.412|
;;;110          } else {
;;;111            U16 Color16;
;;;112            U32 Color = LCD_GetPixelColor(x0 + x, y0 + y);
00019c  9a0b              LDR      r2,[sp,#0x2c]
00019e  19d1              ADDS     r1,r2,r7
0001a0  9a0a              LDR      r2,[sp,#0x28]
0001a2  eb020008          ADD      r0,r2,r8
0001a6  f7fffffe          BL       LCD_GetPixelColor
0001aa  4682              MOV      r10,r0
;;;113            int b = ((Color >> 16) * 31 + 127) / 255;
0001ac  ea4f401a          LSR      r0,r10,#16
0001b0  ebc01040          RSB      r0,r0,r0,LSL #5
0001b4  f100007f          ADD      r0,r0,#0x7f
0001b8  f04f01ff          MOV      r1,#0xff
0001bc  fbb0f0f1          UDIV     r0,r0,r1
0001c0  9003              STR      r0,[sp,#0xc]
;;;114            int g = (((Color >> 8) & 255) * 31 + 127) / 255;
0001c2  f3ca2007          UBFX     r0,r10,#8,#8
0001c6  ebc01040          RSB      r0,r0,r0,LSL #5
0001ca  f100007f          ADD      r0,r0,#0x7f
0001ce  fbb0f0f1          UDIV     r0,r0,r1
0001d2  9002              STR      r0,[sp,#8]
;;;115            int r = ((Color & 255) * 31 + 127) / 255;
0001d4  f00a00ff          AND      r0,r10,#0xff
0001d8  ebc01040          RSB      r0,r0,r0,LSL #5
0001dc  f100007f          ADD      r0,r0,#0x7f
0001e0  fbb0f0f1          UDIV     r0,r0,r1
0001e4  9001              STR      r0,[sp,#4]
;;;116            Color16 = (r << 10) | (g << 5) | b;       /* 16 bpp Bitmaps in windows are 555: rrrrrgggggbbbbb */
0001e6  9801              LDR      r0,[sp,#4]
0001e8  ea4f2180          LSL      r1,r0,#10
0001ec  9802              LDR      r0,[sp,#8]
0001ee  ea411040          ORR      r0,r1,r0,LSL #5
0001f2  9903              LDR      r1,[sp,#0xc]
0001f4  ea400001          ORR      r0,r0,r1
0001f8  b280              UXTH     r0,r0
0001fa  9004              STR      r0,[sp,#0x10]
;;;117            _SendU16(pfSerialize, Color16, p);
0001fc  4658              MOV      r0,r11
0001fe  9a17              LDR      r2,[sp,#0x5c]
000200  9904              LDR      r1,[sp,#0x10]
000202  f7fffffe          BL       _SendU16
;;;118          }
000206  bf00              NOP      
                  |L1.520|
000208  f1080801          ADD      r8,r8,#1              ;107
                  |L1.524|
00020c  45a0              CMP      r8,r4                 ;107
00020e  dbb6              BLT      |L1.382|
;;;119        }
;;;120        /* Align pointer to next U32 */
;;;121        for (i = 0; i < Padding; i++) {
000210  f04f0500          MOV      r5,#0
000214  e004              B        |L1.544|
                  |L1.534|
;;;122          pfSerialize(0, p);
000216  2000              MOVS     r0,#0
000218  9917              LDR      r1,[sp,#0x5c]
00021a  47d8              BLX      r11
00021c  f1050501          ADD      r5,r5,#1              ;121
                  |L1.544|
000220  9807              LDR      r0,[sp,#0x1c]         ;121
000222  4285              CMP      r5,r0                 ;121
000224  dbf7              BLT      |L1.534|
000226  f1a70701          SUB      r7,r7,#1              ;106
                  |L1.554|
00022a  2f00              CMP      r7,#0                 ;106
00022c  daa4              BGE      |L1.376|
;;;123        }
;;;124      }
;;;125      GUI_UNLOCK();
;;;126    }
00022e  b00d              ADD      sp,sp,#0x34
000230  e8bd8ff0          POP      {r4-r11,pc}
;;;127    
                          ENDP

                  GUI_BMP_Serialize PROC
;;;131    */
;;;132    void GUI_BMP_Serialize(GUI_CALLBACK_VOID_U8_P * pfSerialize, void * p) {
000234  e92d41fc          PUSH     {r2-r8,lr}
000238  4605              MOV      r5,r0
00023a  460c              MOV      r4,r1
;;;133      GUI_BMP_SerializeEx(pfSerialize, 0, 0, LCD_GetXSize(), LCD_GetYSize(), p);
00023c  f7fffffe          BL       LCD_GetYSize
000240  4606              MOV      r6,r0
000242  f7fffffe          BL       LCD_GetXSize
000246  4607              MOV      r7,r0
000248  463b              MOV      r3,r7
00024a  2200              MOVS     r2,#0
00024c  4611              MOV      r1,r2
00024e  4628              MOV      r0,r5
000250  e9cd6400          STRD     r6,r4,[sp,#0]
000254  f7fffffe          BL       GUI_BMP_SerializeEx
;;;134    }
000258  e8bd81fc          POP      {r2-r8,pc}
;;;135    
                          ENDP


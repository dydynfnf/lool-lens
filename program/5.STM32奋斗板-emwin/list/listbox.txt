; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\listbox.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\listbox.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\listbox.crf GUI\Widget\LISTBOX.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  LISTBOX__GetpString PROC
;;;811    */
;;;812    const char* LISTBOX__GetpString(const LISTBOX_Obj* pObj, int Index) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4604              MOV      r4,r0
000006  460e              MOV      r6,r1
;;;813      const char* s = NULL;
000008  f04f0700          MOV      r7,#0
;;;814      LISTBOX_ITEM* pItem = (LISTBOX_ITEM*)GUI_ARRAY_GetpItem(&pObj->ItemArray, Index);
00000c  4631              MOV      r1,r6
00000e  f1040028          ADD      r0,r4,#0x28
000012  f7fffffe          BL       GUI_ARRAY_GetpItem
000016  4605              MOV      r5,r0
;;;815      if (pItem) {
000018  b10d              CBZ      r5,|L1.30|
;;;816        s = pItem->acText;
00001a  f1050705          ADD      r7,r5,#5
                  |L1.30|
;;;817      }
;;;818      return s;
00001e  4638              MOV      r0,r7
;;;819    }
000020  e8bd81f0          POP      {r4-r8,pc}
;;;820    
                          ENDP

                  LISTBOX_OwnerDraw PROC
;;;320    */
;;;321    int LISTBOX_OwnerDraw(const WIDGET_ITEM_DRAW_INFO* pDrawItemInfo) {
000024  e92d4ff0          PUSH     {r4-r11,lr}
000028  b089              SUB      sp,sp,#0x24
00002a  4604              MOV      r4,r0
;;;322      switch (pDrawItemInfo->Cmd) {
00002c  6860              LDR      r0,[r4,#4]
00002e  b348              CBZ      r0,|L1.132|
000030  2801              CMP      r0,#1
000032  d002              BEQ      |L1.58|
000034  2802              CMP      r0,#2
000036  d17d              BNE      |L1.308|
000038  e018              B        |L1.108|
                  |L1.58|
;;;323        case WIDGET_ITEM_GET_XSIZE: {
;;;324          LISTBOX_Obj* pObj;
;;;325          const GUI_FONT GUI_UNI_PTR* pOldFont;
;;;326          const char* s;
;;;327          int DistX;
;;;328          pObj = LISTBOX_H2P(pDrawItemInfo->hWin);
00003a  f9b40000          LDRSH    r0,[r4,#0]
00003e  f7fffffe          BL       GUI_ALLOC_h2p
000042  4605              MOV      r5,r0
;;;329          pOldFont = GUI_SetFont(pObj->Props.pFont);
000044  6ca8              LDR      r0,[r5,#0x48]
000046  f7fffffe          BL       GUI_SetFont
00004a  4607              MOV      r7,r0
;;;330          s = LISTBOX__GetpString(pObj, pDrawItemInfo->ItemIndex);
00004c  4628              MOV      r0,r5
00004e  68a1              LDR      r1,[r4,#8]
000050  f7fffffe          BL       LISTBOX__GetpString
000054  4680              MOV      r8,r0
;;;331          DistX = GUI_GetStringDistX(s);
000056  4640              MOV      r0,r8
000058  f7fffffe          BL       GUI_GetStringDistX
00005c  4606              MOV      r6,r0
;;;332          GUI_SetFont(pOldFont);
00005e  4638              MOV      r0,r7
000060  f7fffffe          BL       GUI_SetFont
;;;333          return DistX;
000064  4630              MOV      r0,r6
                  |L1.102|
;;;334        }
;;;335        case WIDGET_ITEM_GET_YSIZE: {
;;;336          LISTBOX_Obj* pObj;
;;;337          pObj = LISTBOX_H2P(pDrawItemInfo->hWin);
;;;338          return GUI_GetYDistOfFont(pObj->Props.pFont) + pObj->ItemSpacing;
;;;339        }
;;;340        case WIDGET_ITEM_DRAW: {
;;;341          LISTBOX_Obj* pObj;
;;;342          LISTBOX_ITEM* pItem;
;;;343          WM_HMEM hItem;
;;;344          GUI_RECT r, rText;
;;;345          int FontDistY;
;;;346          int ItemIndex = pDrawItemInfo->ItemIndex;
;;;347          const char* s;
;;;348          int ColorIndex;
;;;349          char IsDisabled;
;;;350          char IsSelected;
;;;351          pObj = LISTBOX_H2P(pDrawItemInfo->hWin);
;;;352          hItem = GUI_ARRAY_GethItem(&pObj->ItemArray, ItemIndex);
;;;353          pItem = (LISTBOX_ITEM *)GUI_ALLOC_h2p(hItem);
;;;354          WM_GetInsideRect(&r);
;;;355          FontDistY = GUI_GetFontDistY();
;;;356          /* Calculate color index */
;;;357          IsDisabled = (pItem->Status & LISTBOX_ITEM_DISABLED) ? 1 : 0;
;;;358          IsSelected = (pItem->Status & LISTBOX_ITEM_SELECTED) ? 1 : 0;
;;;359          if (pObj->Flags & LISTBOX_SF_MULTISEL) {
;;;360            if (IsDisabled) {
;;;361              ColorIndex = LISTBOX_CI_DISABLED;
;;;362            } else {
;;;363              ColorIndex = (IsSelected) ? LISTBOX_CI_SELFOCUS : LISTBOX_CI_UNSEL;
;;;364            }
;;;365          } else {
;;;366            if (IsDisabled) {
;;;367              ColorIndex = LISTBOX_CI_DISABLED;
;;;368            } else {
;;;369              if (ItemIndex == pObj->Sel) {
;;;370                ColorIndex = (pObj->Widget.State & WIDGET_STATE_FOCUS) ? LISTBOX_CI_SELFOCUS : LISTBOX_CI_SEL;
;;;371              } else {
;;;372                ColorIndex = LISTBOX_CI_UNSEL;
;;;373              }
;;;374            }
;;;375          }
;;;376          /* Display item */
;;;377          LCD_SetBkColor(pObj->Props.aBackColor[ColorIndex]);
;;;378          LCD_SetColor  (pObj->Props.aTextColor[ColorIndex]);
;;;379          s = LISTBOX__GetpString(pObj, ItemIndex);
;;;380          GUI_SetTextMode(GUI_TM_TRANS);
;;;381          GUI_Clear();
;;;382          rText.y0 = pDrawItemInfo->y0;
;;;383          rText.x0 = pDrawItemInfo->x0 + 1;
;;;384          rText.y1 = rText.y0 + pItem->ySize - 1;
;;;385          if (pObj->Props.Align & (GUI_TA_RIGHT | GUI_TA_CENTER)) {
;;;386            GUI_RECT Rect;
;;;387            WM_GetInsideRectExScrollbar(pDrawItemInfo->hWin, &Rect);
;;;388            rText.x1 = rText.x0 + Rect.x1 - Rect.x0 - pObj->Widget.pEffect->EffectSize;
;;;389          } else {
;;;390            rText.x1 = rText.x0 + pItem->xSize - 1;
;;;391          }
;;;392          GUI_DispStringInRect(s, &rText, pObj->Props.Align);
;;;393          /* Display focus rectangle */
;;;394          if ((pObj->Flags & LISTBOX_SF_MULTISEL) && (ItemIndex == pObj->Sel)) {
;;;395            GUI_RECT rFocus;
;;;396            rFocus.x0 = pDrawItemInfo->x0;
;;;397            rFocus.x1 = r.x1;
;;;398            switch (pObj->Props.Align & GUI_TA_VERTICAL) {
;;;399            case GUI_TA_TOP:
;;;400              rFocus.y0 = pDrawItemInfo->y0;
;;;401              rFocus.y1 = pDrawItemInfo->y0 + FontDistY - 1;
;;;402              break;
;;;403            case GUI_TA_VCENTER:
;;;404              rFocus.y0 = pDrawItemInfo->y0 + (GUI_Context.WM__pUserClipRect->y1 - GUI_Context.WM__pUserClipRect->y0 - FontDistY) / 2;
;;;405              rFocus.y1 = rFocus.y0 + FontDistY - 1;
;;;406              break;
;;;407            case GUI_TA_BOTTOM:
;;;408              rFocus.y1 = pDrawItemInfo->y0 + (GUI_Context.WM__pUserClipRect->y1 - GUI_Context.WM__pUserClipRect->y0);
;;;409              rFocus.y0 = rFocus.y1 - FontDistY + 1;
;;;410              break;
;;;411            }
;;;412            LCD_SetColor(GUI_WHITE - pObj->Props.aBackColor[ColorIndex]);
;;;413            GUI_DrawFocusRect(&rFocus, 0);
;;;414          }
;;;415          return 0;
;;;416        }
;;;417      }
;;;418      return 0;
;;;419    }
000066  b009              ADD      sp,sp,#0x24
000068  e8bd8ff0          POP      {r4-r11,pc}
                  |L1.108|
00006c  f9b40000          LDRSH    r0,[r4,#0]            ;337
000070  f7fffffe          BL       GUI_ALLOC_h2p
000074  4605              MOV      r5,r0                 ;337
000076  6ca8              LDR      r0,[r5,#0x48]         ;338
000078  f7fffffe          BL       GUI_GetYDistOfFont
00007c  f8b51086          LDRH     r1,[r5,#0x86]         ;338
000080  4408              ADD      r0,r0,r1              ;338
000082  e7f0              B        |L1.102|
                  |L1.132|
000084  f8d49008          LDR      r9,[r4,#8]            ;346
000088  f9b40000          LDRSH    r0,[r4,#0]            ;351
00008c  f7fffffe          BL       GUI_ALLOC_h2p
000090  4605              MOV      r5,r0                 ;351
000092  4649              MOV      r1,r9                 ;352
000094  f1050028          ADD      r0,r5,#0x28           ;352
000098  f7fffffe          BL       GUI_ARRAY_GethItem
00009c  9008              STR      r0,[sp,#0x20]         ;352
00009e  9808              LDR      r0,[sp,#0x20]         ;353
0000a0  f7fffffe          BL       GUI_ALLOC_h2p
0000a4  4607              MOV      r7,r0                 ;353
0000a6  a806              ADD      r0,sp,#0x18           ;354
0000a8  f7fffffe          BL       WM_GetInsideRect
0000ac  f7fffffe          BL       GUI_GetFontDistY
0000b0  4680              MOV      r8,r0                 ;355
0000b2  7938              LDRB     r0,[r7,#4]            ;357
0000b4  f3c00a40          UBFX     r10,r0,#1,#1          ;357
0000b8  7938              LDRB     r0,[r7,#4]            ;358
0000ba  f0000b01          AND      r11,r0,#1             ;358
0000be  f8950084          LDRB     r0,[r5,#0x84]         ;359
0000c2  f0100f04          TST      r0,#4                 ;359
0000c6  d00f              BEQ      |L1.232|
0000c8  f1ba0f00          CMP      r10,#0                ;360
0000cc  d002              BEQ      |L1.212|
0000ce  f04f0603          MOV      r6,#3                 ;361
0000d2  e020              B        |L1.278|
                  |L1.212|
0000d4  f1bb0f00          CMP      r11,#0                ;363
0000d8  d002              BEQ      |L1.224|
0000da  f04f0002          MOV      r0,#2                 ;363
0000de  e001              B        |L1.228|
                  |L1.224|
0000e0  f04f0000          MOV      r0,#0                 ;363
                  |L1.228|
0000e4  4606              MOV      r6,r0                 ;363
0000e6  e016              B        |L1.278|
                  |L1.232|
0000e8  f1ba0f00          CMP      r10,#0                ;366
0000ec  d002              BEQ      |L1.244|
0000ee  f04f0603          MOV      r6,#3                 ;367
0000f2  e010              B        |L1.278|
                  |L1.244|
0000f4  f9b50082          LDRSH    r0,[r5,#0x82]         ;369
0000f8  4548              CMP      r0,r9                 ;369
0000fa  d10a              BNE      |L1.274|
0000fc  8ce8              LDRH     r0,[r5,#0x26]         ;370
0000fe  f0100f01          TST      r0,#1                 ;370
000102  d002              BEQ      |L1.266|
000104  f04f0002          MOV      r0,#2                 ;370
000108  e001              B        |L1.270|
                  |L1.266|
00010a  f04f0001          MOV      r0,#1                 ;370
                  |L1.270|
00010e  4606              MOV      r6,r0                 ;370
000110  e001              B        |L1.278|
                  |L1.274|
000112  f04f0600          MOV      r6,#0                 ;372
                  |L1.278|
000116  f1050150          ADD      r1,r5,#0x50           ;377
00011a  f8510026          LDR      r0,[r1,r6,LSL #2]     ;377
00011e  f7fffffe          BL       LCD_SetBkColor
000122  f1050160          ADD      r1,r5,#0x60           ;378
000126  f8510026          LDR      r0,[r1,r6,LSL #2]     ;378
00012a  f7fffffe          BL       LCD_SetColor
00012e  4649              MOV      r1,r9                 ;379
000130  4628              MOV      r0,r5                 ;379
000132  e000              B        |L1.310|
                  |L1.308|
000134  e0b1              B        |L1.666|
                  |L1.310|
000136  f7fffffe          BL       LISTBOX__GetpString
00013a  9003              STR      r0,[sp,#0xc]          ;379
00013c  2002              MOVS     r0,#2                 ;380
00013e  f7fffffe          BL       GUI_SetTextMode
000142  f7fffffe          BL       GUI_Clear
000146  6920              LDR      r0,[r4,#0x10]         ;382
000148  b200              SXTH     r0,r0                 ;382
00014a  f8ad0012          STRH     r0,[sp,#0x12]         ;382
00014e  68e0              LDR      r0,[r4,#0xc]          ;383
000150  f1000001          ADD      r0,r0,#1              ;383
000154  b200              SXTH     r0,r0                 ;383
000156  f8ad0010          STRH     r0,[sp,#0x10]         ;383
00015a  f8bd0012          LDRH     r0,[sp,#0x12]         ;384
00015e  8879              LDRH     r1,[r7,#2]            ;384
000160  4408              ADD      r0,r0,r1              ;384
000162  f1a00001          SUB      r0,r0,#1              ;384
000166  b200              SXTH     r0,r0                 ;384
000168  f8ad0016          STRH     r0,[sp,#0x16]         ;384
00016c  f04f007c          MOV      r0,#0x7c              ;385
000170  5b40              LDRH     r0,[r0,r5]            ;385
000172  f0100f03          TST      r0,#3                 ;385
000176  d015              BEQ      |L1.420|
000178  f9b40000          LDRSH    r0,[r4,#0]            ;387
00017c  a901              ADD      r1,sp,#4              ;387
00017e  f7fffffe          BL       WM_GetInsideRectExScrollbar
000182  f8bd0010          LDRH     r0,[sp,#0x10]         ;388
000186  f8bd1008          LDRH     r1,[sp,#8]            ;388
00018a  4408              ADD      r0,r0,r1              ;388
00018c  f8bd1004          LDRH     r1,[sp,#4]            ;388
000190  eba00001          SUB      r0,r0,r1              ;388
000194  6a29              LDR      r1,[r5,#0x20]         ;388
000196  6949              LDR      r1,[r1,#0x14]         ;388
000198  eba00001          SUB      r0,r0,r1              ;388
00019c  b200              SXTH     r0,r0                 ;388
00019e  f8ad0014          STRH     r0,[sp,#0x14]         ;388
0001a2  e008              B        |L1.438|
                  |L1.420|
0001a4  f8bd0010          LDRH     r0,[sp,#0x10]         ;390
0001a8  8839              LDRH     r1,[r7,#0]            ;390
0001aa  4408              ADD      r0,r0,r1              ;390
0001ac  f1a00001          SUB      r0,r0,#1              ;390
0001b0  b200              SXTH     r0,r0                 ;390
0001b2  f8ad0014          STRH     r0,[sp,#0x14]         ;390
                  |L1.438|
0001b6  f9b5207c          LDRSH    r2,[r5,#0x7c]         ;392
0001ba  a904              ADD      r1,sp,#0x10           ;392
0001bc  9803              LDR      r0,[sp,#0xc]          ;392
0001be  f7fffffe          BL       GUI_DispStringInRect
0001c2  f8950084          LDRB     r0,[r5,#0x84]         ;394
0001c6  f0100f04          TST      r0,#4                 ;394
0001ca  d064              BEQ      |L1.662|
0001cc  f9b50082          LDRSH    r0,[r5,#0x82]         ;394
0001d0  4548              CMP      r0,r9                 ;394
0001d2  d160              BNE      |L1.662|
0001d4  68e0              LDR      r0,[r4,#0xc]          ;396
0001d6  b200              SXTH     r0,r0                 ;396
0001d8  f8ad0004          STRH     r0,[sp,#4]            ;396
0001dc  f8bd001c          LDRH     r0,[sp,#0x1c]         ;397
0001e0  f8ad0008          STRH     r0,[sp,#8]            ;397
0001e4  207c              MOVS     r0,#0x7c              ;398
0001e6  5b40              LDRH     r0,[r0,r5]            ;398
0001e8  f010000c          ANDS     r0,r0,#0xc            ;398
0001ec  d004              BEQ      |L1.504|
0001ee  2804              CMP      r0,#4                 ;398
0001f0  d02b              BEQ      |L1.586|
0001f2  280c              CMP      r0,#0xc               ;398
0001f4  d140              BNE      |L1.632|
0001f6  e00b              B        |L1.528|
                  |L1.504|
0001f8  6920              LDR      r0,[r4,#0x10]         ;400
0001fa  b200              SXTH     r0,r0                 ;400
0001fc  f8ad0006          STRH     r0,[sp,#6]            ;400
000200  6920              LDR      r0,[r4,#0x10]         ;401
000202  4440              ADD      r0,r0,r8              ;401
000204  f1a00001          SUB      r0,r0,#1              ;401
000208  b200              SXTH     r0,r0                 ;401
00020a  f8ad000a          STRH     r0,[sp,#0xa]          ;401
00020e  e033              B        |L1.632|
                  |L1.528|
000210  49fc              LDR      r1,|L1.1540|
000212  6b89              LDR      r1,[r1,#0x38]         ;404  ; GUI_Context
000214  f9b11006          LDRSH    r1,[r1,#6]            ;404
000218  4afa              LDR      r2,|L1.1540|
00021a  6b92              LDR      r2,[r2,#0x38]         ;404  ; GUI_Context
00021c  f9b22002          LDRSH    r2,[r2,#2]            ;404
000220  eba10102          SUB      r1,r1,r2              ;404
000224  eba10008          SUB      r0,r1,r8              ;404
000228  eb0071d0          ADD      r1,r0,r0,LSR #31      ;404
00022c  6922              LDR      r2,[r4,#0x10]         ;404
00022e  eb020161          ADD      r1,r2,r1,ASR #1       ;404
000232  b209              SXTH     r1,r1                 ;404
000234  f8ad1006          STRH     r1,[sp,#6]            ;404
000238  f8bd0006          LDRH     r0,[sp,#6]            ;405
00023c  4440              ADD      r0,r0,r8              ;405
00023e  f1a00001          SUB      r0,r0,#1              ;405
000242  b200              SXTH     r0,r0                 ;405
000244  f8ad000a          STRH     r0,[sp,#0xa]          ;405
000248  e016              B        |L1.632|
                  |L1.586|
00024a  48ee              LDR      r0,|L1.1540|
00024c  6b80              LDR      r0,[r0,#0x38]         ;408  ; GUI_Context
00024e  88c0              LDRH     r0,[r0,#6]            ;408
000250  49ec              LDR      r1,|L1.1540|
000252  6b89              LDR      r1,[r1,#0x38]         ;408  ; GUI_Context
000254  8849              LDRH     r1,[r1,#2]            ;408
000256  eba00001          SUB      r0,r0,r1              ;408
00025a  6921              LDR      r1,[r4,#0x10]         ;408
00025c  4408              ADD      r0,r0,r1              ;408
00025e  b200              SXTH     r0,r0                 ;408
000260  f8ad000a          STRH     r0,[sp,#0xa]          ;408
000264  f8bd000a          LDRH     r0,[sp,#0xa]          ;409
000268  eba00008          SUB      r0,r0,r8              ;409
00026c  f1000001          ADD      r0,r0,#1              ;409
000270  b200              SXTH     r0,r0                 ;409
000272  f8ad0006          STRH     r0,[sp,#6]            ;409
000276  bf00              NOP                            ;410
                  |L1.632|
000278  bf00              NOP                            ;402
00027a  f1050150          ADD      r1,r5,#0x50           ;412
00027e  f8511026          LDR      r1,[r1,r6,LSL #2]     ;412
000282  f06f427f          MVN      r2,#0xff000000        ;412
000286  1a50              SUBS     r0,r2,r1              ;412
000288  f7fffffe          BL       LCD_SetColor
00028c  2100              MOVS     r1,#0                 ;413
00028e  a801              ADD      r0,sp,#4              ;413
000290  f7fffffe          BL       GUI_DrawFocusRect
000294  bf00              NOP                            ;414
                  |L1.662|
000296  2000              MOVS     r0,#0                 ;415
000298  e6e5              B        |L1.102|
                  |L1.666|
00029a  2000              MOVS     r0,#0                 ;418
00029c  e6e3              B        |L1.102|
;;;420    
                          ENDP

                  _CallOwnerDraw PROC
;;;127    */
;;;128    static int _CallOwnerDraw(LISTBOX_Handle hObj, const LISTBOX_Obj* pObj, int Cmd, int ItemIndex) {
00029e  e92d41f0          PUSH     {r4-r8,lr}
0002a2  b086              SUB      sp,sp,#0x18
0002a4  4606              MOV      r6,r0
0002a6  460c              MOV      r4,r1
0002a8  4617              MOV      r7,r2
0002aa  4698              MOV      r8,r3
;;;129      WIDGET_ITEM_DRAW_INFO ItemInfo;
;;;130      int r;
;;;131      ItemInfo.Cmd       = Cmd;
0002ac  9702              STR      r7,[sp,#8]
;;;132      ItemInfo.hWin      = hObj;
0002ae  f8ad6004          STRH     r6,[sp,#4]
;;;133      ItemInfo.ItemIndex = ItemIndex;
0002b2  f8cd800c          STR      r8,[sp,#0xc]
;;;134      if (pObj->pfDrawItem) {
0002b6  6ae0              LDR      r0,[r4,#0x2c]
0002b8  b120              CBZ      r0,|L1.708|
;;;135        r = pObj->pfDrawItem(&ItemInfo);
0002ba  a801              ADD      r0,sp,#4
0002bc  6ae1              LDR      r1,[r4,#0x2c]
0002be  4788              BLX      r1
0002c0  4605              MOV      r5,r0
0002c2  e003              B        |L1.716|
                  |L1.708|
;;;136      } else {
;;;137        r = LISTBOX_OwnerDraw(&ItemInfo);
0002c4  a801              ADD      r0,sp,#4
0002c6  f7fffffe          BL       LISTBOX_OwnerDraw
0002ca  4605              MOV      r5,r0
                  |L1.716|
;;;138      }
;;;139      return r;
0002cc  4628              MOV      r0,r5
;;;140    }
0002ce  b006              ADD      sp,sp,#0x18
0002d0  e8bd81f0          POP      {r4-r8,pc}
;;;141    
                          ENDP

                  _GetYSize PROC
;;;145    */
;;;146    static int _GetYSize(LISTBOX_Handle hObj) {
0002d4  b51c              PUSH     {r2-r4,lr}
0002d6  4604              MOV      r4,r0
;;;147      GUI_RECT Rect;
;;;148      WM_GetInsideRectExScrollbar(hObj, &Rect);
0002d8  4669              MOV      r1,sp
0002da  4620              MOV      r0,r4
0002dc  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;149      return (Rect.y1 - Rect.y0 + 1);
0002e0  f9bd0006          LDRSH    r0,[sp,#6]
0002e4  f9bd1002          LDRSH    r1,[sp,#2]
0002e8  1a40              SUBS     r0,r0,r1
0002ea  1c40              ADDS     r0,r0,#1
;;;150    }
0002ec  bd1c              POP      {r2-r4,pc}
;;;151    
                          ENDP

                  _GetItemSizeX PROC
;;;155    */
;;;156    static int _GetItemSizeX(LISTBOX_Handle hObj, const LISTBOX_Obj* pObj, unsigned Index) {
0002ee  e92d47f0          PUSH     {r4-r10,lr}
0002f2  4680              MOV      r8,r0
0002f4  460d              MOV      r5,r1
0002f6  4616              MOV      r6,r2
;;;157      LISTBOX_ITEM* pItem;
;;;158      int xSize = 0;
0002f8  f04f0700          MOV      r7,#0
;;;159      pItem = (LISTBOX_ITEM*)GUI_ARRAY_GetpItem(&pObj->ItemArray, Index);
0002fc  4631              MOV      r1,r6
0002fe  f1050028          ADD      r0,r5,#0x28
000302  f7fffffe          BL       GUI_ARRAY_GetpItem
000306  4604              MOV      r4,r0
;;;160      if (pItem) {
000308  b104              CBZ      r4,|L1.780|
;;;161        xSize = pItem->xSize;
00030a  8827              LDRH     r7,[r4,#0]
                  |L1.780|
;;;162      }
;;;163      if (xSize == 0) {
00030c  b97f              CBNZ     r7,|L1.814|
;;;164        const GUI_FONT GUI_UNI_PTR* pOldFont;
;;;165        pOldFont = GUI_SetFont(pObj->Props.pFont);
00030e  6ca8              LDR      r0,[r5,#0x48]
000310  f7fffffe          BL       GUI_SetFont
000314  4681              MOV      r9,r0
;;;166        xSize    = _CallOwnerDraw(hObj, pObj, WIDGET_ITEM_GET_XSIZE, Index);
000316  4633              MOV      r3,r6
000318  f04f0201          MOV      r2,#1
00031c  4629              MOV      r1,r5
00031e  4640              MOV      r0,r8
000320  f7fffffe          BL       _CallOwnerDraw
000324  4607              MOV      r7,r0
;;;167        GUI_SetFont(pOldFont);
000326  4648              MOV      r0,r9
000328  f7fffffe          BL       GUI_SetFont
;;;168      }
00032c  bf00              NOP      
                  |L1.814|
;;;169      if (pItem) {
00032e  b104              CBZ      r4,|L1.818|
;;;170        pItem->xSize = xSize;
000330  8027              STRH     r7,[r4,#0]
                  |L1.818|
;;;171      }
;;;172      return xSize;
000332  4638              MOV      r0,r7
;;;173    }
000334  e8bd87f0          POP      {r4-r10,pc}
;;;174    
                          ENDP

                  _GetItemSizeY PROC
;;;178    */
;;;179    static int _GetItemSizeY(LISTBOX_Handle hObj, const LISTBOX_Obj* pObj, unsigned Index) {
000338  e92d47f0          PUSH     {r4-r10,lr}
00033c  4680              MOV      r8,r0
00033e  460d              MOV      r5,r1
000340  4616              MOV      r6,r2
;;;180      LISTBOX_ITEM* pItem;
;;;181      int ySize = 0;
000342  f04f0700          MOV      r7,#0
;;;182      pItem = (LISTBOX_ITEM*)GUI_ARRAY_GetpItem(&pObj->ItemArray, Index);
000346  4631              MOV      r1,r6
000348  f1050028          ADD      r0,r5,#0x28
00034c  f7fffffe          BL       GUI_ARRAY_GetpItem
000350  4604              MOV      r4,r0
;;;183      if (pItem) {
000352  b104              CBZ      r4,|L1.854|
;;;184        ySize = pItem->ySize;
000354  8867              LDRH     r7,[r4,#2]
                  |L1.854|
;;;185      }
;;;186      if (ySize == 0) {
000356  b97f              CBNZ     r7,|L1.888|
;;;187        const GUI_FONT GUI_UNI_PTR* pOldFont;
;;;188        pOldFont = GUI_SetFont(pObj->Props.pFont);
000358  6ca8              LDR      r0,[r5,#0x48]
00035a  f7fffffe          BL       GUI_SetFont
00035e  4681              MOV      r9,r0
;;;189        ySize    = _CallOwnerDraw(hObj, pObj, WIDGET_ITEM_GET_YSIZE, Index);
000360  4633              MOV      r3,r6
000362  f04f0202          MOV      r2,#2
000366  4629              MOV      r1,r5
000368  4640              MOV      r0,r8
00036a  f7fffffe          BL       _CallOwnerDraw
00036e  4607              MOV      r7,r0
;;;190        GUI_SetFont(pOldFont);
000370  4648              MOV      r0,r9
000372  f7fffffe          BL       GUI_SetFont
;;;191      }
000376  bf00              NOP      
                  |L1.888|
;;;192      if (pItem) {
000378  b104              CBZ      r4,|L1.892|
;;;193        pItem->ySize = ySize;
00037a  8067              STRH     r7,[r4,#2]
                  |L1.892|
;;;194      }
;;;195      return ySize;
00037c  4638              MOV      r0,r7
;;;196    }
00037e  e8bd87f0          POP      {r4-r10,pc}
;;;197    
                          ENDP

                  LISTBOX__GetNumItems PROC
;;;800    */
;;;801    unsigned LISTBOX__GetNumItems(const LISTBOX_Obj* pObj) {
000382  b510              PUSH     {r4,lr}
000384  4604              MOV      r4,r0
;;;802      return GUI_ARRAY_GetNumItems(&pObj->ItemArray);
000386  f1040028          ADD      r0,r4,#0x28
00038a  f7fffffe          BL       GUI_ARRAY_GetNumItems
;;;803    }
00038e  bd10              POP      {r4,pc}
;;;804    
                          ENDP

                  _GetContentsSizeX PROC
;;;201    */
;;;202    static int _GetContentsSizeX(LISTBOX_Handle hObj) {
000390  e92d47f0          PUSH     {r4-r10,lr}
000394  4607              MOV      r7,r0
;;;203      LISTBOX_Obj* pObj;
;;;204      int i, NumItems, SizeX;
;;;205      int Result = 0;
000396  f04f0600          MOV      r6,#0
;;;206      pObj = LISTBOX_H2P(hObj);
00039a  4638              MOV      r0,r7
00039c  f7fffffe          BL       GUI_ALLOC_h2p
0003a0  4681              MOV      r9,r0
;;;207      NumItems = LISTBOX__GetNumItems(pObj);
0003a2  4648              MOV      r0,r9
0003a4  f7fffffe          BL       LISTBOX__GetNumItems
0003a8  4680              MOV      r8,r0
;;;208      for (i = 0; i < NumItems; i++) {
0003aa  4635              MOV      r5,r6
0003ac  e00a              B        |L1.964|
                  |L1.942|
;;;209        SizeX = _GetItemSizeX(hObj, pObj, i);
0003ae  462a              MOV      r2,r5
0003b0  4649              MOV      r1,r9
0003b2  4638              MOV      r0,r7
0003b4  f7fffffe          BL       _GetItemSizeX
0003b8  4604              MOV      r4,r0
;;;210        if (Result < SizeX) {
0003ba  42a6              CMP      r6,r4
0003bc  da00              BGE      |L1.960|
;;;211          Result = SizeX;
0003be  4626              MOV      r6,r4
                  |L1.960|
0003c0  f1050501          ADD      r5,r5,#1              ;208
                  |L1.964|
0003c4  4545              CMP      r5,r8                 ;208
0003c6  dbf2              BLT      |L1.942|
;;;212        }
;;;213      }
;;;214      return Result;
0003c8  4630              MOV      r0,r6
;;;215    }
0003ca  e8bd87f0          POP      {r4-r10,pc}
;;;216    
                          ENDP

                  _GetItemPosY PROC
;;;220    */
;;;221    static int _GetItemPosY(LISTBOX_Handle hObj, const LISTBOX_Obj* pObj, unsigned Index) {
0003ce  e92d41f0          PUSH     {r4-r8,lr}
0003d2  4680              MOV      r8,r0
0003d4  460c              MOV      r4,r1
0003d6  4615              MOV      r5,r2
;;;222      if (Index < LISTBOX__GetNumItems(pObj)) {
0003d8  4620              MOV      r0,r4
0003da  f7fffffe          BL       LISTBOX__GetNumItems
0003de  42a8              CMP      r0,r5
0003e0  d914              BLS      |L1.1036|
;;;223        if ((int)Index >= pObj->ScrollStateV.v) {
0003e2  6b60              LDR      r0,[r4,#0x34]
0003e4  42a8              CMP      r0,r5
0003e6  dc10              BGT      |L1.1034|
;;;224          unsigned i;
;;;225          int PosY = 0;
0003e8  f04f0700          MOV      r7,#0
;;;226          for (i = pObj->ScrollStateV.v; i < Index; i++) {
0003ec  6b66              LDR      r6,[r4,#0x34]
0003ee  e007              B        |L1.1024|
                  |L1.1008|
;;;227            PosY += _GetItemSizeY(hObj, pObj, i);
0003f0  4632              MOV      r2,r6
0003f2  4621              MOV      r1,r4
0003f4  4640              MOV      r0,r8
0003f6  f7fffffe          BL       _GetItemSizeY
0003fa  4407              ADD      r7,r7,r0
0003fc  f1060601          ADD      r6,r6,#1              ;226
                  |L1.1024|
000400  42ae              CMP      r6,r5                 ;226
000402  d3f5              BCC      |L1.1008|
;;;228          }
;;;229          return PosY;
000404  4638              MOV      r0,r7
                  |L1.1030|
;;;230        }
;;;231      }
;;;232      return -1;
;;;233    }
000406  e8bd81f0          POP      {r4-r8,pc}
                  |L1.1034|
00040a  bf00              NOP                            ;230
                  |L1.1036|
00040c  f04f30ff          MOV      r0,#0xffffffff        ;232
000410  e7f9              B        |L1.1030|
;;;234    
                          ENDP

                  _IsPartiallyVis PROC
;;;238    */
;;;239    static int _IsPartiallyVis(LISTBOX_Handle hObj, const LISTBOX_Obj* pObj) {
000412  e92d41f0          PUSH     {r4-r8,lr}
000416  4607              MOV      r7,r0
000418  460c              MOV      r4,r1
;;;240      int Index;
;;;241      Index = pObj->Sel;
00041a  f9b45082          LDRSH    r5,[r4,#0x82]
;;;242      if (Index < (int)LISTBOX__GetNumItems(pObj)) {
00041e  4620              MOV      r0,r4
000420  f7fffffe          BL       LISTBOX__GetNumItems
000424  42a8              CMP      r0,r5
000426  dd17              BLE      |L1.1112|
;;;243        if (Index >= pObj->ScrollStateV.v) {
000428  6b60              LDR      r0,[r4,#0x34]
00042a  42a8              CMP      r0,r5
00042c  dc14              BGT      |L1.1112|
;;;244          int y;
;;;245          y  = _GetItemPosY (hObj, pObj, Index);
00042e  462a              MOV      r2,r5
000430  4621              MOV      r1,r4
000432  4638              MOV      r0,r7
000434  f7fffffe          BL       _GetItemPosY
000438  4606              MOV      r6,r0
;;;246          y += _GetItemSizeY(hObj, pObj, Index);
00043a  462a              MOV      r2,r5
00043c  4621              MOV      r1,r4
00043e  4638              MOV      r0,r7
000440  f7fffffe          BL       _GetItemSizeY
000444  4406              ADD      r6,r6,r0
;;;247          if (y > _GetYSize(hObj)) {
000446  4638              MOV      r0,r7
000448  f7fffffe          BL       _GetYSize
00044c  42b0              CMP      r0,r6
00044e  da02              BGE      |L1.1110|
;;;248            return 1;
000450  2001              MOVS     r0,#1
                  |L1.1106|
;;;249          }
;;;250        }
;;;251      }
;;;252      return 0;
;;;253    }
000452  e8bd81f0          POP      {r4-r8,pc}
                  |L1.1110|
000456  bf00              NOP                            ;250
                  |L1.1112|
000458  2000              MOVS     r0,#0                 ;252
00045a  e7fa              B        |L1.1106|
;;;254    
                          ENDP

                  _GetNumVisItems PROC
;;;261    */
;;;262    static unsigned _GetNumVisItems(const LISTBOX_Obj* pObj, LISTBOX_Handle hObj) {
00045c  e92d47f0          PUSH     {r4-r10,lr}
000460  4606              MOV      r6,r0
000462  460f              MOV      r7,r1
;;;263      int NumItems, r = 1;
000464  f04f0801          MOV      r8,#1
;;;264      NumItems = LISTBOX__GetNumItems(pObj);
000468  4630              MOV      r0,r6
00046a  f7fffffe          BL       LISTBOX__GetNumItems
00046e  4605              MOV      r5,r0
;;;265      if (NumItems > 1) {
000470  2d01              CMP      r5,#1
000472  dd21              BLE      |L1.1208|
;;;266        int i, ySize, DistY = 0;
000474  f04f0900          MOV      r9,#0
;;;267        ySize = _GetYSize(hObj);
000478  4638              MOV      r0,r7
00047a  f7fffffe          BL       _GetYSize
00047e  4682              MOV      r10,r0
;;;268        for (i = NumItems - 1; i >= 0; i--) {
000480  f1a50401          SUB      r4,r5,#1
000484  e00a              B        |L1.1180|
                  |L1.1158|
;;;269          DistY += _GetItemSizeY(hObj, pObj, i);
000486  4622              MOV      r2,r4
000488  4631              MOV      r1,r6
00048a  4638              MOV      r0,r7
00048c  f7fffffe          BL       _GetItemSizeY
000490  4481              ADD      r9,r9,r0
;;;270          if (DistY > ySize) {
000492  45d1              CMP      r9,r10
000494  dd00              BLE      |L1.1176|
;;;271            break;
000496  e003              B        |L1.1184|
                  |L1.1176|
000498  f1a40401          SUB      r4,r4,#1              ;268
                  |L1.1180|
00049c  2c00              CMP      r4,#0                 ;268
00049e  daf2              BGE      |L1.1158|
                  |L1.1184|
0004a0  bf00              NOP      
;;;272          }
;;;273        }
;;;274        r = NumItems - i - 1;
0004a2  eba50004          SUB      r0,r5,r4
0004a6  f1a00801          SUB      r8,r0,#1
;;;275        if (r < 1) {
0004aa  f1b80f01          CMP      r8,#1
0004ae  da02              BGE      |L1.1206|
;;;276          return 1;
0004b0  2001              MOVS     r0,#1
                  |L1.1202|
;;;277        }
;;;278      }
;;;279      return r;
;;;280    }
0004b2  e8bd87f0          POP      {r4-r10,pc}
                  |L1.1206|
0004b6  bf00              NOP                            ;278
                  |L1.1208|
0004b8  4640              MOV      r0,r8                 ;279
0004ba  e7fa              B        |L1.1202|
;;;281    
                          ENDP

                  _NotifyOwner PROC
;;;289    */
;;;290    static void _NotifyOwner(WM_HWIN hObj, int Notification) {
0004bc  b5fe              PUSH     {r1-r7,lr}
0004be  4604              MOV      r4,r0
0004c0  460d              MOV      r5,r1
;;;291      WM_MESSAGE Msg = {0};
0004c2  f04f0000          MOV      r0,#0
0004c6  9000              STR      r0,[sp,#0]
0004c8  9001              STR      r0,[sp,#4]
0004ca  9002              STR      r0,[sp,#8]
;;;292      WM_HWIN hOwner;
;;;293      LISTBOX_Obj* pObj    = LISTBOX_H2P(hObj);
0004cc  4620              MOV      r0,r4
0004ce  f7fffffe          BL       GUI_ALLOC_h2p
0004d2  4606              MOV      r6,r0
;;;294      hOwner = pObj->hOwner ? pObj->hOwner : WM_GetParent(hObj);
0004d4  f8b60080          LDRH     r0,[r6,#0x80]
0004d8  b110              CBZ      r0,|L1.1248|
0004da  f9b60080          LDRSH    r0,[r6,#0x80]
0004de  e002              B        |L1.1254|
                  |L1.1248|
0004e0  4620              MOV      r0,r4
0004e2  f7fffffe          BL       WM_GetParent
                  |L1.1254|
0004e6  4607              MOV      r7,r0
;;;295      Msg.MsgId  = WM_NOTIFY_PARENT;
0004e8  f04f0026          MOV      r0,#0x26
0004ec  9000              STR      r0,[sp,#0]
;;;296      Msg.Data.v = Notification;
0004ee  9502              STR      r5,[sp,#8]
;;;297      Msg.hWinSrc= hObj;
0004f0  f8ad4006          STRH     r4,[sp,#6]
;;;298      WM__SendMessage(hOwner, &Msg);
0004f4  4669              MOV      r1,sp
0004f6  4638              MOV      r0,r7
0004f8  f7fffffe          BL       WM__SendMessage
;;;299    }
0004fc  bdfe              POP      {r1-r7,pc}
;;;300    
                          ENDP

                  _SendToOwner PROC
;;;308    */
;;;309    static void _SendToOwner(WM_HWIN hObj, WM_MESSAGE * pMsg) {
0004fe  e92d41f0          PUSH     {r4-r8,lr}
000502  4604              MOV      r4,r0
000504  460d              MOV      r5,r1
;;;310      WM_HWIN hOwner;
;;;311      LISTBOX_Obj * pObj = LISTBOX_H2P(hObj);
000506  4620              MOV      r0,r4
000508  f7fffffe          BL       GUI_ALLOC_h2p
00050c  4606              MOV      r6,r0
;;;312      hOwner = pObj->hOwner ? pObj->hOwner : WM_GetParent(hObj);
00050e  f8b60080          LDRH     r0,[r6,#0x80]
000512  b110              CBZ      r0,|L1.1306|
000514  f9b60080          LDRSH    r0,[r6,#0x80]
000518  e002              B        |L1.1312|
                  |L1.1306|
00051a  4620              MOV      r0,r4
00051c  f7fffffe          BL       WM_GetParent
                  |L1.1312|
000520  4607              MOV      r7,r0
;;;313      pMsg->hWinSrc= hObj;
000522  80ec              STRH     r4,[r5,#6]
;;;314      WM__SendMessage(hOwner, pMsg);
000524  4629              MOV      r1,r5
000526  4638              MOV      r0,r7
000528  f7fffffe          BL       WM__SendMessage
;;;315    }
00052c  e8bd81f0          POP      {r4-r8,pc}
;;;316    
                          ENDP

                  _UpdateScrollPos PROC
;;;432    */
;;;433    static int _UpdateScrollPos(LISTBOX_Handle hObj, LISTBOX_Obj* pObj) {
000530  b570              PUSH     {r4-r6,lr}
000532  4605              MOV      r5,r0
000534  460c              MOV      r4,r1
;;;434      int PrevScrollStateV;
;;;435      PrevScrollStateV = pObj->ScrollStateV.v;
000536  6b66              LDR      r6,[r4,#0x34]
;;;436      if (pObj->Sel >= 0) {
000538  f9b40082          LDRSH    r0,[r4,#0x82]
00053c  2800              CMP      r0,#0
00053e  db14              BLT      |L1.1386|
;;;437        /* Check upper limit */
;;;438        if (_IsPartiallyVis(hObj, pObj)) {
000540  4621              MOV      r1,r4
000542  4628              MOV      r0,r5
000544  f7fffffe          BL       _IsPartiallyVis
000548  b138              CBZ      r0,|L1.1370|
;;;439          pObj->ScrollStateV.v = pObj->Sel - (pObj->ScrollStateV.PageSize - 1);
00054a  f9b41082          LDRSH    r1,[r4,#0x82]
00054e  6ba0              LDR      r0,[r4,#0x38]
000550  f1a00001          SUB      r0,r0,#1
000554  eba10100          SUB      r1,r1,r0
000558  6361              STR      r1,[r4,#0x34]
                  |L1.1370|
;;;440        }
;;;441        /* Check lower limit */
;;;442        if (pObj->Sel < pObj->ScrollStateV.v) {
00055a  f9b41082          LDRSH    r1,[r4,#0x82]
00055e  6b60              LDR      r0,[r4,#0x34]
000560  4281              CMP      r1,r0
000562  da02              BGE      |L1.1386|
;;;443          pObj->ScrollStateV.v = pObj->Sel;
000564  f9b41082          LDRSH    r1,[r4,#0x82]
000568  6361              STR      r1,[r4,#0x34]
                  |L1.1386|
;;;444        }
;;;445      }
;;;446      WM_CheckScrollBounds(&pObj->ScrollStateV);
00056a  f1040030          ADD      r0,r4,#0x30
00056e  f7fffffe          BL       WM_CheckScrollBounds
;;;447      WM_CheckScrollBounds(&pObj->ScrollStateH);
000572  f104003c          ADD      r0,r4,#0x3c
000576  f7fffffe          BL       WM_CheckScrollBounds
;;;448      WIDGET__SetScrollState(hObj, &pObj->ScrollStateV, &pObj->ScrollStateH);
00057a  f104023c          ADD      r2,r4,#0x3c
00057e  f1040130          ADD      r1,r4,#0x30
000582  4628              MOV      r0,r5
000584  f7fffffe          BL       WIDGET__SetScrollState
;;;449      return pObj->ScrollStateV.v - PrevScrollStateV;
000588  6b60              LDR      r0,[r4,#0x34]
00058a  1b80              SUBS     r0,r0,r6
;;;450    }
00058c  bd70              POP      {r4-r6,pc}
;;;451    
                          ENDP

                  _CalcScrollParas PROC
;;;455    */
;;;456    static int _CalcScrollParas(LISTBOX_Handle hObj) {
00058e  b57c              PUSH     {r2-r6,lr}
000590  4605              MOV      r5,r0
;;;457      GUI_RECT Rect;
;;;458      LISTBOX_Obj* pObj = LISTBOX_H2P(hObj);
000592  4628              MOV      r0,r5
000594  f7fffffe          BL       GUI_ALLOC_h2p
000598  4604              MOV      r4,r0
;;;459      /* Calc vertical scroll parameters */
;;;460      pObj->ScrollStateV.NumItems = LISTBOX__GetNumItems(pObj);
00059a  4620              MOV      r0,r4
00059c  f7fffffe          BL       LISTBOX__GetNumItems
0005a0  6320              STR      r0,[r4,#0x30]
;;;461      pObj->ScrollStateV.PageSize = _GetNumVisItems(pObj, hObj);
0005a2  4629              MOV      r1,r5
0005a4  4620              MOV      r0,r4
0005a6  f7fffffe          BL       _GetNumVisItems
0005aa  63a0              STR      r0,[r4,#0x38]
;;;462      /* Calc horizontal scroll parameters */
;;;463      WM_GetInsideRectExScrollbar(hObj, &Rect);
0005ac  4669              MOV      r1,sp
0005ae  4628              MOV      r0,r5
0005b0  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;464      pObj->ScrollStateH.NumItems = _GetContentsSizeX(hObj);
0005b4  4628              MOV      r0,r5
0005b6  f7fffffe          BL       _GetContentsSizeX
0005ba  63e0              STR      r0,[r4,#0x3c]
;;;465      pObj->ScrollStateH.PageSize = Rect.x1 - Rect.x0 + 1;
0005bc  f9bd0004          LDRSH    r0,[sp,#4]
0005c0  f9bd1000          LDRSH    r1,[sp,#0]
0005c4  eba00001          SUB      r0,r0,r1
0005c8  f1000001          ADD      r0,r0,#1
0005cc  6460              STR      r0,[r4,#0x44]
;;;466      return _UpdateScrollPos(hObj, pObj);
0005ce  4621              MOV      r1,r4
0005d0  4628              MOV      r0,r5
0005d2  f7fffffe          BL       _UpdateScrollPos
;;;467    }
0005d6  bd7c              POP      {r2-r6,pc}
;;;468    
                          ENDP

                  LISTBOX__SetScrollbarColor PROC
;;;901    */
;;;902    void LISTBOX__SetScrollbarColor(LISTBOX_Handle hObj, const LISTBOX_Obj* pObj) {
0005d8  e92d41f0          PUSH     {r4-r8,lr}
0005dc  4680              MOV      r8,r0
0005de  460d              MOV      r5,r1
;;;903      WM_HWIN hBarH, hBarV;
;;;904      int i;
;;;905      hBarH = WM_GetDialogItem(hObj, GUI_ID_HSCROLL);
0005e0  f04f01ff          MOV      r1,#0xff
0005e4  4640              MOV      r0,r8
0005e6  f7fffffe          BL       WM_GetDialogItem
0005ea  4606              MOV      r6,r0
;;;906      hBarV = WM_GetDialogItem(hObj, GUI_ID_VSCROLL);
0005ec  f04f01fe          MOV      r1,#0xfe
0005f0  4640              MOV      r0,r8
0005f2  f7fffffe          BL       WM_GetDialogItem
0005f6  4607              MOV      r7,r0
;;;907      if (hBarH || hBarV) {
0005f8  b906              CBNZ     r6,|L1.1532|
0005fa  b30f              CBZ      r7,|L1.1600|
                  |L1.1532|
;;;908        for (i = 0; i < GUI_COUNTOF(pObj->Props.aScrollbarColor); i++) {
0005fc  f04f0400          MOV      r4,#0
000600  e01c              B        |L1.1596|
000602  0000              DCW      0x0000
                  |L1.1540|
                          DCD      GUI_Context
                  |L1.1544|
;;;909          if (pObj->Props.aScrollbarColor[i] != GUI_INVALID_COLOR) {
000608  f1050070          ADD      r0,r5,#0x70
00060c  f8500024          LDR      r0,[r0,r4,LSL #2]
000610  f06f4170          MVN      r1,#0xf0000000
000614  4288              CMP      r0,r1
000616  d00f              BEQ      |L1.1592|
;;;910            SCROLLBAR_SetColor(hBarH, i, pObj->Props.aScrollbarColor[i]);
000618  f1050070          ADD      r0,r5,#0x70
00061c  f8502024          LDR      r2,[r0,r4,LSL #2]
000620  4621              MOV      r1,r4
000622  4630              MOV      r0,r6
000624  f7fffffe          BL       SCROLLBAR_SetColor
;;;911            SCROLLBAR_SetColor(hBarV, i, pObj->Props.aScrollbarColor[i]);
000628  f1050070          ADD      r0,r5,#0x70
00062c  f8502024          LDR      r2,[r0,r4,LSL #2]
000630  4621              MOV      r1,r4
000632  4638              MOV      r0,r7
000634  f7fffffe          BL       SCROLLBAR_SetColor
                  |L1.1592|
000638  f1040401          ADD      r4,r4,#1              ;908
                  |L1.1596|
00063c  2c03              CMP      r4,#3                 ;908
00063e  d3e3              BCC      |L1.1544|
                  |L1.1600|
;;;912          }
;;;913        }
;;;914      }
;;;915    }
000640  e8bd81f0          POP      {r4-r8,pc}
;;;916    
                          ENDP

                  LISTBOX__SetScrollbarWidth PROC
;;;884    */
;;;885    void LISTBOX__SetScrollbarWidth(LISTBOX_Handle hObj, const LISTBOX_Obj* pObj) {
000644  e92d41f0          PUSH     {r4-r8,lr}
000648  4606              MOV      r6,r0
00064a  460c              MOV      r4,r1
;;;886      WM_HWIN hBarH, hBarV;
;;;887      int Width;
;;;888      Width = pObj->ScrollbarWidth;
00064c  f8945085          LDRB     r5,[r4,#0x85]
;;;889      if (Width == 0) {
000650  b915              CBNZ     r5,|L1.1624|
;;;890        Width = SCROLLBAR_GetDefaultWidth();
000652  f7fffffe          BL       SCROLLBAR_GetDefaultWidth
000656  4605              MOV      r5,r0
                  |L1.1624|
;;;891      }
;;;892      hBarH = WM_GetDialogItem(hObj, GUI_ID_HSCROLL);
000658  21ff              MOVS     r1,#0xff
00065a  4630              MOV      r0,r6
00065c  f7fffffe          BL       WM_GetDialogItem
000660  4680              MOV      r8,r0
;;;893      hBarV = WM_GetDialogItem(hObj, GUI_ID_VSCROLL);
000662  f04f01fe          MOV      r1,#0xfe
000666  4630              MOV      r0,r6
000668  f7fffffe          BL       WM_GetDialogItem
00066c  4607              MOV      r7,r0
;;;894      SCROLLBAR_SetWidth(hBarH, Width);
00066e  4629              MOV      r1,r5
000670  4640              MOV      r0,r8
000672  f7fffffe          BL       SCROLLBAR_SetWidth
;;;895      SCROLLBAR_SetWidth(hBarV, Width);
000676  4629              MOV      r1,r5
000678  4638              MOV      r0,r7
00067a  f7fffffe          BL       SCROLLBAR_SetWidth
;;;896    }
00067e  e8bd81f0          POP      {r4-r8,pc}
;;;897    
                          ENDP

                  _ManageAutoScroll PROC
;;;472    */
;;;473    static void _ManageAutoScroll(LISTBOX_Handle hObj) {
000682  e92d41fc          PUSH     {r2-r8,lr}
000686  4605              MOV      r5,r0
;;;474      char IsRequired;
;;;475      LISTBOX_Obj* pObj = LISTBOX_H2P(hObj);
000688  4628              MOV      r0,r5
00068a  f7fffffe          BL       GUI_ALLOC_h2p
00068e  4604              MOV      r4,r0
;;;476      if (pObj->Flags & LISTBOX_SF_AUTOSCROLLBAR_V) {
000690  f8940084          LDRB     r0,[r4,#0x84]
000694  f0100f02          TST      r0,#2
000698  d013              BEQ      |L1.1730|
;;;477        IsRequired = (_GetNumVisItems(pObj, hObj) < LISTBOX__GetNumItems(pObj));
00069a  4629              MOV      r1,r5
00069c  4620              MOV      r0,r4
00069e  f7fffffe          BL       _GetNumVisItems
0006a2  4607              MOV      r7,r0
0006a4  4620              MOV      r0,r4
0006a6  f7fffffe          BL       LISTBOX__GetNumItems
0006aa  4287              CMP      r7,r0
0006ac  d202              BCS      |L1.1716|
0006ae  f04f0001          MOV      r0,#1
0006b2  e001              B        |L1.1720|
                  |L1.1716|
0006b4  f04f0000          MOV      r0,#0
                  |L1.1720|
0006b8  4606              MOV      r6,r0
;;;478        WM_SetScrollbarV(hObj, IsRequired);
0006ba  4631              MOV      r1,r6
0006bc  4628              MOV      r0,r5
0006be  f7fffffe          BL       WM_SetScrollbarV
                  |L1.1730|
;;;479      }
;;;480      if (pObj->Flags & LISTBOX_SF_AUTOSCROLLBAR_H) {
0006c2  f8940084          LDRB     r0,[r4,#0x84]
0006c6  f0100f01          TST      r0,#1
0006ca  d01c              BEQ      |L1.1798|
;;;481        GUI_RECT Rect;
;;;482        int xSize, xSizeContents;
;;;483        xSizeContents = _GetContentsSizeX(hObj);
0006cc  4628              MOV      r0,r5
0006ce  f7fffffe          BL       _GetContentsSizeX
0006d2  4680              MOV      r8,r0
;;;484        WM_GetInsideRectExScrollbar(hObj, &Rect);
0006d4  4669              MOV      r1,sp
0006d6  4628              MOV      r0,r5
0006d8  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;485        xSize = Rect.x1 - Rect.x0 + 1;
0006dc  f9bd0004          LDRSH    r0,[sp,#4]
0006e0  f9bd1000          LDRSH    r1,[sp,#0]
0006e4  eba00001          SUB      r0,r0,r1
0006e8  f1000701          ADD      r7,r0,#1
;;;486        IsRequired = (xSizeContents > xSize);
0006ec  45b8              CMP      r8,r7
0006ee  dd02              BLE      |L1.1782|
0006f0  f04f0001          MOV      r0,#1
0006f4  e001              B        |L1.1786|
                  |L1.1782|
0006f6  f04f0000          MOV      r0,#0
                  |L1.1786|
0006fa  4606              MOV      r6,r0
;;;487        WM_SetScrollbarH(hObj, IsRequired);
0006fc  4631              MOV      r1,r6
0006fe  4628              MOV      r0,r5
000700  f7fffffe          BL       WM_SetScrollbarH
;;;488      }
000704  bf00              NOP      
                  |L1.1798|
;;;489      if (pObj->ScrollbarWidth) {
000706  f8940085          LDRB     r0,[r4,#0x85]
00070a  b118              CBZ      r0,|L1.1812|
;;;490        LISTBOX__SetScrollbarWidth(hObj, pObj);
00070c  4621              MOV      r1,r4
00070e  4628              MOV      r0,r5
000710  f7fffffe          BL       LISTBOX__SetScrollbarWidth
                  |L1.1812|
;;;491      }
;;;492      LISTBOX__SetScrollbarColor(hObj, pObj);
000714  4621              MOV      r1,r4
000716  4628              MOV      r0,r5
000718  f7fffffe          BL       LISTBOX__SetScrollbarColor
;;;493    }
00071c  e8bd81fc          POP      {r2-r8,pc}
;;;494    
                          ENDP

                  LISTBOX_UpdateScrollers PROC
;;;498    */
;;;499    int LISTBOX_UpdateScrollers(LISTBOX_Handle hObj) {
000720  b510              PUSH     {r4,lr}
000722  4604              MOV      r4,r0
;;;500      _ManageAutoScroll(hObj);
000724  4620              MOV      r0,r4
000726  f7fffffe          BL       _ManageAutoScroll
;;;501      return _CalcScrollParas(hObj);
00072a  4620              MOV      r0,r4
00072c  f7fffffe          BL       _CalcScrollParas
;;;502    }
000730  bd10              POP      {r4,pc}
;;;503    
                          ENDP

                  _Tolower PROC
;;;507    */
;;;508    static int _Tolower(int Key) {
000732  2841              CMP      r0,#0x41
;;;509      if ((Key >= 0x41) && (Key <= 0x5a)) {
000734  db03              BLT      |L1.1854|
000736  285a              CMP      r0,#0x5a
000738  dc01              BGT      |L1.1854|
;;;510        Key += 0x20;
00073a  f1000020          ADD      r0,r0,#0x20
                  |L1.1854|
;;;511      }
;;;512      return Key;
;;;513    }
00073e  4770              BX       lr
;;;514    
                          ENDP

                  _IsAlphaNum PROC
;;;518    */
;;;519    static int _IsAlphaNum(int Key) {
000740  b510              PUSH     {r4,lr}
000742  4604              MOV      r4,r0
;;;520      Key = _Tolower(Key);
000744  4620              MOV      r0,r4
000746  f7fffffe          BL       _Tolower
00074a  4604              MOV      r4,r0
;;;521      if (Key >= 'a' && Key <= 'z') {
00074c  2c61              CMP      r4,#0x61
00074e  db03              BLT      |L1.1880|
000750  2c7a              CMP      r4,#0x7a
000752  dc01              BGT      |L1.1880|
;;;522        return 1;
000754  2001              MOVS     r0,#1
                  |L1.1878|
;;;523      }
;;;524      if (Key >= '0' && Key <= '9') {
;;;525        return 1;
;;;526      }
;;;527      return 0;
;;;528    }
000756  bd10              POP      {r4,pc}
                  |L1.1880|
000758  2c30              CMP      r4,#0x30              ;524
00075a  db03              BLT      |L1.1892|
00075c  2c39              CMP      r4,#0x39              ;524
00075e  dc01              BGT      |L1.1892|
000760  2001              MOVS     r0,#1                 ;525
000762  e7f8              B        |L1.1878|
                  |L1.1892|
000764  2000              MOVS     r0,#0                 ;527
000766  e7f6              B        |L1.1878|
;;;529    
                          ENDP

                  LISTBOX__InvalidateItem PROC
;;;847    */
;;;848    void LISTBOX__InvalidateItem(LISTBOX_Handle hObj, const LISTBOX_Obj* pObj, int Sel) {
000768  e92d41fc          PUSH     {r2-r8,lr}
00076c  4606              MOV      r6,r0
00076e  460f              MOV      r7,r1
000770  4614              MOV      r4,r2
;;;849      if (Sel >= 0) {
000772  2c00              CMP      r4,#0
000774  db25              BLT      |L1.1986|
;;;850        int ItemPosY;
;;;851        ItemPosY = _GetItemPosY(hObj, pObj, Sel);
000776  4622              MOV      r2,r4
000778  4639              MOV      r1,r7
00077a  4630              MOV      r0,r6
00077c  f7fffffe          BL       _GetItemPosY
000780  4605              MOV      r5,r0
;;;852        if (ItemPosY >= 0) {
000782  2d00              CMP      r5,#0
000784  db1c              BLT      |L1.1984|
;;;853          GUI_RECT Rect;
;;;854          int ItemDistY;
;;;855          ItemDistY = _GetItemSizeY(hObj, pObj, Sel);
000786  4622              MOV      r2,r4
000788  4639              MOV      r1,r7
00078a  4630              MOV      r0,r6
00078c  f7fffffe          BL       _GetItemSizeY
000790  4680              MOV      r8,r0
;;;856          WM_GetInsideRectExScrollbar(hObj, &Rect);
000792  4669              MOV      r1,sp
000794  4630              MOV      r0,r6
000796  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;857          Rect.y0 += ItemPosY;
00079a  f8bd0002          LDRH     r0,[sp,#2]
00079e  4428              ADD      r0,r0,r5
0007a0  b200              SXTH     r0,r0
0007a2  f8ad0002          STRH     r0,[sp,#2]
;;;858          Rect.y1  = Rect.y0 + ItemDistY - 1;
0007a6  f8bd0002          LDRH     r0,[sp,#2]
0007aa  4440              ADD      r0,r0,r8
0007ac  f1a00001          SUB      r0,r0,#1
0007b0  b200              SXTH     r0,r0
0007b2  f8ad0006          STRH     r0,[sp,#6]
;;;859          WM_InvalidateRect(hObj, &Rect);
0007b6  4669              MOV      r1,sp
0007b8  4630              MOV      r0,r6
0007ba  f7fffffe          BL       WM_InvalidateRect
;;;860        }
0007be  bf00              NOP      
                  |L1.1984|
;;;861      }
0007c0  bf00              NOP      
                  |L1.1986|
;;;862    }
0007c2  e8bd81fc          POP      {r2-r8,pc}
;;;863    
                          ENDP

                  LISTBOX__InvalidateInsideArea PROC
;;;837    */
;;;838    void LISTBOX__InvalidateInsideArea(LISTBOX_Handle hObj) {
0007c6  b51c              PUSH     {r2-r4,lr}
0007c8  4604              MOV      r4,r0
;;;839      GUI_RECT Rect;
;;;840      WM_GetInsideRectExScrollbar(hObj, &Rect);
0007ca  4669              MOV      r1,sp
0007cc  4620              MOV      r0,r4
0007ce  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;841      WM_InvalidateRect(hObj, &Rect);
0007d2  4669              MOV      r1,sp
0007d4  4620              MOV      r0,r4
0007d6  f7fffffe          BL       WM_InvalidateRect
;;;842    }
0007da  bd1c              POP      {r2-r4,pc}
;;;843    
                          ENDP

                  LISTBOX_SetSel PROC
;;;1156   */
;;;1157   void LISTBOX_SetSel (LISTBOX_Handle hObj, int NewSel) {
0007dc  e92d47f0          PUSH     {r4-r10,lr}
0007e0  4607              MOV      r7,r0
0007e2  460c              MOV      r4,r1
;;;1158     if (hObj) {
0007e4  2f00              CMP      r7,#0
0007e6  d04e              BEQ      |L1.2182|
;;;1159       LISTBOX_Obj* pObj;
;;;1160       int MaxSel;
;;;1161       WM_LOCK();
;;;1162       pObj = LISTBOX_H2P(hObj);
0007e8  4638              MOV      r0,r7
0007ea  f7fffffe          BL       GUI_ALLOC_h2p
0007ee  4605              MOV      r5,r0
;;;1163       MaxSel = LISTBOX__GetNumItems(pObj);
0007f0  4628              MOV      r0,r5
0007f2  f7fffffe          BL       LISTBOX__GetNumItems
0007f6  4606              MOV      r6,r0
;;;1164       MaxSel = MaxSel ? MaxSel - 1 : 0;
0007f8  b116              CBZ      r6,|L1.2048|
0007fa  f1a60001          SUB      r0,r6,#1
0007fe  e001              B        |L1.2052|
                  |L1.2048|
000800  f04f0000          MOV      r0,#0
                  |L1.2052|
000804  4606              MOV      r6,r0
;;;1165       if (NewSel > MaxSel) {
000806  42b4              CMP      r4,r6
000808  dd00              BLE      |L1.2060|
;;;1166         NewSel = MaxSel;
00080a  4634              MOV      r4,r6
                  |L1.2060|
;;;1167       }
;;;1168       if (NewSel < 0) {
00080c  2c00              CMP      r4,#0
00080e  da02              BGE      |L1.2070|
;;;1169         NewSel = -1;
000810  f04f34ff          MOV      r4,#0xffffffff
000814  e015              B        |L1.2114|
                  |L1.2070|
;;;1170       } else {
;;;1171         WM_HMEM hItem = GUI_ARRAY_GethItem(&pObj->ItemArray, NewSel);
000816  4621              MOV      r1,r4
000818  f1050028          ADD      r0,r5,#0x28
00081c  f7fffffe          BL       GUI_ARRAY_GethItem
000820  4680              MOV      r8,r0
;;;1172         if (hItem) {
000822  f1b80f00          CMP      r8,#0
000826  d00b              BEQ      |L1.2112|
;;;1173           LISTBOX_ITEM* pItem = (LISTBOX_ITEM*)GUI_ALLOC_h2p(hItem);
000828  4640              MOV      r0,r8
00082a  f7fffffe          BL       GUI_ALLOC_h2p
00082e  4681              MOV      r9,r0
;;;1174           if (pItem->Status & LISTBOX_ITEM_DISABLED) {
000830  f8990004          LDRB     r0,[r9,#4]
000834  f0100f02          TST      r0,#2
000838  d001              BEQ      |L1.2110|
;;;1175             NewSel = -1;
00083a  f04f34ff          MOV      r4,#0xffffffff
                  |L1.2110|
;;;1176           }
;;;1177         }
00083e  bf00              NOP      
                  |L1.2112|
;;;1178       }
000840  bf00              NOP      
                  |L1.2114|
;;;1179       if (NewSel != pObj->Sel) {
000842  f9b50082          LDRSH    r0,[r5,#0x82]
000846  42a0              CMP      r0,r4
000848  d01c              BEQ      |L1.2180|
;;;1180         int OldSel;
;;;1181         OldSel    = pObj->Sel;
00084a  f9b58082          LDRSH    r8,[r5,#0x82]
;;;1182         pObj->Sel = NewSel;
00084e  b220              SXTH     r0,r4
000850  f8a50082          STRH     r0,[r5,#0x82]
;;;1183         if (_UpdateScrollPos(hObj, pObj)) {
000854  4629              MOV      r1,r5
000856  4638              MOV      r0,r7
000858  f7fffffe          BL       _UpdateScrollPos
00085c  b118              CBZ      r0,|L1.2150|
;;;1184           LISTBOX__InvalidateInsideArea(hObj);
00085e  4638              MOV      r0,r7
000860  f7fffffe          BL       LISTBOX__InvalidateInsideArea
000864  e009              B        |L1.2170|
                  |L1.2150|
;;;1185         } else {
;;;1186           LISTBOX__InvalidateItem(hObj, pObj, OldSel);
000866  4642              MOV      r2,r8
000868  4629              MOV      r1,r5
00086a  4638              MOV      r0,r7
00086c  f7fffffe          BL       LISTBOX__InvalidateItem
;;;1187           LISTBOX__InvalidateItem(hObj, pObj, NewSel);
000870  4622              MOV      r2,r4
000872  4629              MOV      r1,r5
000874  4638              MOV      r0,r7
000876  f7fffffe          BL       LISTBOX__InvalidateItem
                  |L1.2170|
;;;1188         }
;;;1189         _NotifyOwner(hObj, WM_NOTIFICATION_SEL_CHANGED);
00087a  2104              MOVS     r1,#4
00087c  4638              MOV      r0,r7
00087e  f7fffffe          BL       _NotifyOwner
;;;1190       }
000882  bf00              NOP      
                  |L1.2180|
;;;1191       WM_UNLOCK();
;;;1192     }
000884  bf00              NOP      
                  |L1.2182|
;;;1193   }
000886  e8bd87f0          POP      {r4-r10,pc}
;;;1194   
                          ENDP

                  _SelectByKey PROC
;;;533    */
;;;534    static void _SelectByKey(LISTBOX_Handle hObj, int Key) {
00088a  e92d41f0          PUSH     {r4-r8,lr}
00088e  4606              MOV      r6,r0
000890  460c              MOV      r4,r1
;;;535      unsigned i;
;;;536      LISTBOX_Obj* pObj;
;;;537      pObj = LISTBOX_H2P(hObj);
000892  4630              MOV      r0,r6
000894  f7fffffe          BL       GUI_ALLOC_h2p
000898  4680              MOV      r8,r0
;;;538      Key = _Tolower(Key);
00089a  4620              MOV      r0,r4
00089c  f7fffffe          BL       _Tolower
0008a0  4604              MOV      r4,r0
;;;539      for (i = 0; i < LISTBOX__GetNumItems(pObj); i++) {
0008a2  f04f0500          MOV      r5,#0
0008a6  e010              B        |L1.2250|
                  |L1.2216|
;;;540        const char* s = LISTBOX__GetpString(pObj, i);
0008a8  4629              MOV      r1,r5
0008aa  4640              MOV      r0,r8
0008ac  f7fffffe          BL       LISTBOX__GetpString
0008b0  4607              MOV      r7,r0
;;;541        if (_Tolower(*s) == Key) {
0008b2  7838              LDRB     r0,[r7,#0]
0008b4  f7fffffe          BL       _Tolower
0008b8  42a0              CMP      r0,r4
0008ba  d104              BNE      |L1.2246|
;;;542          LISTBOX_SetSel(hObj, i);
0008bc  4629              MOV      r1,r5
0008be  4630              MOV      r0,r6
0008c0  f7fffffe          BL       LISTBOX_SetSel
;;;543          break;
0008c4  e006              B        |L1.2260|
                  |L1.2246|
0008c6  f1050501          ADD      r5,r5,#1              ;539
                  |L1.2250|
0008ca  4640              MOV      r0,r8                 ;539
0008cc  f7fffffe          BL       LISTBOX__GetNumItems
0008d0  42a8              CMP      r0,r5                 ;539
0008d2  d8e9              BHI      |L1.2216|
                  |L1.2260|
0008d4  bf00              NOP      
;;;544        }
;;;545      }
;;;546    }
0008d6  e8bd81f0          POP      {r4-r8,pc}
;;;547    
                          ENDP

                  _FreeAttached PROC
;;;551    */
;;;552    static void _FreeAttached(LISTBOX_Obj* pObj) {
0008da  b510              PUSH     {r4,lr}
0008dc  4604              MOV      r4,r0
;;;553      GUI_ARRAY_Delete(&pObj->ItemArray);
0008de  f1040028          ADD      r0,r4,#0x28
0008e2  f7fffffe          BL       GUI_ARRAY_Delete
;;;554    }
0008e6  bd10              POP      {r4,pc}
;;;555    
                          ENDP

                  _OnPaint PROC
;;;559    */
;;;560    static void _OnPaint(LISTBOX_Handle hObj, LISTBOX_Obj* pObj, WM_MESSAGE* pMsg) {
0008e8  e92d43f0          PUSH     {r4-r9,lr}
0008ec  b08b              SUB      sp,sp,#0x2c
0008ee  4607              MOV      r7,r0
0008f0  460c              MOV      r4,r1
0008f2  4690              MOV      r8,r2
;;;561      WIDGET_ITEM_DRAW_INFO ItemInfo;
;;;562      GUI_RECT RectInside, RectItem, ClipRect;
;;;563      int ItemDistY, NumItems, i;
;;;564      NumItems = LISTBOX__GetNumItems(pObj);
0008f4  4620              MOV      r0,r4
0008f6  f7fffffe          BL       LISTBOX__GetNumItems
0008fa  4681              MOV      r9,r0
;;;565      GUI_SetFont(pObj->Props.pFont);
0008fc  6ca0              LDR      r0,[r4,#0x48]
0008fe  f7fffffe          BL       GUI_SetFont
;;;566      /* Calculate clipping rectangle */
;;;567      ClipRect = *(const GUI_RECT*)pMsg->Data.p;
000902  f8d80008          LDR      r0,[r8,#8]
000906  6801              LDR      r1,[r0,#0]
000908  9100              STR      r1,[sp,#0]
00090a  6840              LDR      r0,[r0,#4]
00090c  9001              STR      r0,[sp,#4]
;;;568      GUI_MoveRect(&ClipRect, -pObj->Widget.Win.Rect.x0, -pObj->Widget.Win.Rect.y0);
00090e  f9b40002          LDRSH    r0,[r4,#2]
000912  4242              RSBS     r2,r0,#0
000914  f9b40000          LDRSH    r0,[r4,#0]
000918  4241              RSBS     r1,r0,#0
00091a  4668              MOV      r0,sp
00091c  f7fffffe          BL       GUI_MoveRect
;;;569      WM_GetInsideRectExScrollbar(hObj, &RectInside);
000920  a904              ADD      r1,sp,#0x10
000922  4638              MOV      r0,r7
000924  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;570      GUI__IntersectRect(&ClipRect, &RectInside);
000928  a904              ADD      r1,sp,#0x10
00092a  4668              MOV      r0,sp
00092c  f7fffffe          BL       GUI__IntersectRect
;;;571      RectItem.x0 = ClipRect.x0;
000930  f8bd0000          LDRH     r0,[sp,#0]
000934  f8ad0008          STRH     r0,[sp,#8]
;;;572      RectItem.x1 = ClipRect.x1;
000938  f8bd0004          LDRH     r0,[sp,#4]
00093c  f8ad000c          STRH     r0,[sp,#0xc]
;;;573      /* Fill item info structure */
;;;574      ItemInfo.Cmd  = WIDGET_ITEM_DRAW;
000940  f04f0000          MOV      r0,#0
000944  9007              STR      r0,[sp,#0x1c]
;;;575      ItemInfo.hWin = hObj;
000946  f8ad7018          STRH     r7,[sp,#0x18]
;;;576      ItemInfo.x0   = RectInside.x0 - pObj->ScrollStateH.v;
00094a  f9bd1010          LDRSH    r1,[sp,#0x10]
00094e  6c20              LDR      r0,[r4,#0x40]
000950  eba10000          SUB      r0,r1,r0
000954  9009              STR      r0,[sp,#0x24]
;;;577      ItemInfo.y0   = RectInside.y0;
000956  f9bd0012          LDRSH    r0,[sp,#0x12]
00095a  900a              STR      r0,[sp,#0x28]
;;;578      /* Do the drawing */
;;;579      for (i = pObj->ScrollStateV.v; i < NumItems; i++) {
00095c  6b66              LDR      r6,[r4,#0x34]
00095e  e031              B        |L1.2500|
                  |L1.2400|
;;;580        RectItem.y0 = ItemInfo.y0;
000960  980a              LDR      r0,[sp,#0x28]
000962  b200              SXTH     r0,r0
000964  f8ad000a          STRH     r0,[sp,#0xa]
;;;581        /* Break when all other rows are outside the drawing area */
;;;582        if (RectItem.y0 > ClipRect.y1) {
000968  f9bd000a          LDRSH    r0,[sp,#0xa]
00096c  f9bd1006          LDRSH    r1,[sp,#6]
000970  4288              CMP      r0,r1
000972  dd00              BLE      |L1.2422|
;;;583          break;
000974  e028              B        |L1.2504|
                  |L1.2422|
;;;584        }
;;;585        ItemDistY = _GetItemSizeY(hObj, pObj, i);
000976  4632              MOV      r2,r6
000978  4621              MOV      r1,r4
00097a  4638              MOV      r0,r7
00097c  f7fffffe          BL       _GetItemSizeY
000980  4605              MOV      r5,r0
;;;586        RectItem.y1 = RectItem.y0 + ItemDistY - 1;
000982  f8bd100a          LDRH     r1,[sp,#0xa]
000986  eb010005          ADD      r0,r1,r5
00098a  f1a00001          SUB      r0,r0,#1
00098e  b200              SXTH     r0,r0
000990  f8ad000e          STRH     r0,[sp,#0xe]
;;;587        /* Make sure that we draw only when row is in drawing area */
;;;588        if (RectItem.y1 >= ClipRect.y0) {
000994  f9bd000e          LDRSH    r0,[sp,#0xe]
000998  f9bd1002          LDRSH    r1,[sp,#2]
00099c  4288              CMP      r0,r1
00099e  db0c              BLT      |L1.2490|
;;;589          /* Set user clip rect */
;;;590          WM_SetUserClipArea(&RectItem);
0009a0  a802              ADD      r0,sp,#8
0009a2  f7fffffe          BL       WM_SetUserClipRect
;;;591          /* Fill item info structure */
;;;592          ItemInfo.ItemIndex = i;
0009a6  9608              STR      r6,[sp,#0x20]
;;;593          /* Draw item */
;;;594          if (pObj->pfDrawItem) {
0009a8  6ae0              LDR      r0,[r4,#0x2c]
0009aa  b118              CBZ      r0,|L1.2484|
;;;595            pObj->pfDrawItem(&ItemInfo);
0009ac  a806              ADD      r0,sp,#0x18
0009ae  6ae1              LDR      r1,[r4,#0x2c]
0009b0  4788              BLX      r1
0009b2  e002              B        |L1.2490|
                  |L1.2484|
;;;596          } else {
;;;597            LISTBOX_OwnerDraw(&ItemInfo);
0009b4  a806              ADD      r0,sp,#0x18
0009b6  f7fffffe          BL       LISTBOX_OwnerDraw
                  |L1.2490|
;;;598          }
;;;599        }
;;;600        ItemInfo.y0 += ItemDistY;
0009ba  980a              LDR      r0,[sp,#0x28]
0009bc  4428              ADD      r0,r0,r5
0009be  900a              STR      r0,[sp,#0x28]
0009c0  f1060601          ADD      r6,r6,#1              ;579
                  |L1.2500|
0009c4  454e              CMP      r6,r9                 ;579
0009c6  dbcb              BLT      |L1.2400|
                  |L1.2504|
0009c8  bf00              NOP                            ;583
;;;601      }
;;;602      WM_SetUserClipArea(NULL);
0009ca  2000              MOVS     r0,#0
0009cc  f7fffffe          BL       WM_SetUserClipRect
;;;603      /* Calculate & clear 'data free' area */
;;;604      RectItem.y0 = ItemInfo.y0;
0009d0  980a              LDR      r0,[sp,#0x28]
0009d2  b200              SXTH     r0,r0
0009d4  f8ad000a          STRH     r0,[sp,#0xa]
;;;605      RectItem.y1 = RectInside.y1;
0009d8  f8bd0016          LDRH     r0,[sp,#0x16]
0009dc  f8ad000e          STRH     r0,[sp,#0xe]
;;;606      LCD_SetBkColor(pObj->Props.aBackColor[0]);
0009e0  6d20              LDR      r0,[r4,#0x50]
0009e2  f7fffffe          BL       LCD_SetBkColor
;;;607      GUI_ClearRectEx(&RectItem);
0009e6  a802              ADD      r0,sp,#8
0009e8  f7fffffe          BL       GUI_ClearRectEx
;;;608      /* Draw the 3D effect (if configured) */
;;;609      WIDGET__EFFECT_DrawDown(&pObj->Widget);
0009ec  4620              MOV      r0,r4
0009ee  f7fffffe          BL       WIDGET__EFFECT_DrawDown
;;;610    }
0009f2  b00b              ADD      sp,sp,#0x2c
0009f4  e8bd83f0          POP      {r4-r9,pc}
;;;611    
                          ENDP

                  _ToggleMultiSel PROC
;;;615    */
;;;616    static void _ToggleMultiSel(LISTBOX_Handle hObj, LISTBOX_Obj* pObj, int Sel) {
0009f8  e92d41f0          PUSH     {r4-r8,lr}
0009fc  4680              MOV      r8,r0
0009fe  460c              MOV      r4,r1
000a00  4616              MOV      r6,r2
;;;617      if (pObj->Flags & LISTBOX_SF_MULTISEL) {
000a02  f8940084          LDRB     r0,[r4,#0x84]
000a06  f0100f04          TST      r0,#4
000a0a  d01e              BEQ      |L1.2634|
;;;618        WM_HMEM hItem = GUI_ARRAY_GethItem(&pObj->ItemArray, Sel);
000a0c  4631              MOV      r1,r6
000a0e  f1040028          ADD      r0,r4,#0x28
000a12  f7fffffe          BL       GUI_ARRAY_GethItem
000a16  4607              MOV      r7,r0
;;;619        if (hItem) {
000a18  b1b7              CBZ      r7,|L1.2632|
;;;620          LISTBOX_ITEM * pItem = (LISTBOX_ITEM *)GUI_ALLOC_h2p(hItem);
000a1a  4638              MOV      r0,r7
000a1c  f7fffffe          BL       GUI_ALLOC_h2p
000a20  4605              MOV      r5,r0
;;;621          if (!(pItem->Status & LISTBOX_ITEM_DISABLED)) {
000a22  7928              LDRB     r0,[r5,#4]
000a24  f0100f02          TST      r0,#2
000a28  d10d              BNE      |L1.2630|
;;;622            pItem->Status ^= LISTBOX_ITEM_SELECTED;
000a2a  7928              LDRB     r0,[r5,#4]
000a2c  f0800001          EOR      r0,r0,#1
000a30  7128              STRB     r0,[r5,#4]
;;;623            _NotifyOwner(hObj, WM_NOTIFICATION_SEL_CHANGED);
000a32  f04f0104          MOV      r1,#4
000a36  4640              MOV      r0,r8
000a38  f7fffffe          BL       _NotifyOwner
;;;624            LISTBOX__InvalidateItem(hObj, pObj, Sel);
000a3c  4632              MOV      r2,r6
000a3e  4621              MOV      r1,r4
000a40  4640              MOV      r0,r8
000a42  f7fffffe          BL       LISTBOX__InvalidateItem
                  |L1.2630|
;;;625          }
;;;626        }
000a46  bf00              NOP      
                  |L1.2632|
;;;627      }
000a48  bf00              NOP      
                  |L1.2634|
;;;628    }
000a4a  e8bd81f0          POP      {r4-r8,pc}
;;;629    
                          ENDP

                  _GetItemFromPos PROC
;;;633    */
;;;634    static int _GetItemFromPos(LISTBOX_Handle hObj, LISTBOX_Obj* pObj, int x, int y) {
000a4e  e92d5ffc          PUSH     {r2-r12,lr}
000a52  4681              MOV      r9,r0
000a54  460e              MOV      r6,r1
000a56  4617              MOV      r7,r2
000a58  461c              MOV      r4,r3
;;;635      int Sel = -1;
000a5a  f04f3aff          MOV      r10,#0xffffffff
;;;636      GUI_RECT Rect;
;;;637      WM_GetInsideRectExScrollbar(hObj, &Rect);
000a5e  4669              MOV      r1,sp
000a60  4648              MOV      r0,r9
000a62  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;638      if ((x >= Rect.x0) && (y >= Rect.y0)) {
000a66  f9bd0000          LDRSH    r0,[sp,#0]
000a6a  42b8              CMP      r0,r7
000a6c  dc21              BGT      |L1.2738|
000a6e  f9bd0002          LDRSH    r0,[sp,#2]
000a72  42a0              CMP      r0,r4
000a74  dc1d              BGT      |L1.2738|
;;;639        if ((x <= Rect.x1) && (y <= Rect.y1)) {
000a76  f9bd0004          LDRSH    r0,[sp,#4]
000a7a  42b8              CMP      r0,r7
000a7c  db19              BLT      |L1.2738|
000a7e  f9bd0006          LDRSH    r0,[sp,#6]
000a82  42a0              CMP      r0,r4
000a84  db15              BLT      |L1.2738|
;;;640          int NumItems = LISTBOX__GetNumItems(pObj);
000a86  4630              MOV      r0,r6
000a88  f7fffffe          BL       LISTBOX__GetNumItems
000a8c  4683              MOV      r11,r0
;;;641          int i, y0 = Rect.y0;
000a8e  f9bd8002          LDRSH    r8,[sp,#2]
;;;642          for (i = pObj->ScrollStateV.v; i < NumItems; i++) {
000a92  6b75              LDR      r5,[r6,#0x34]
000a94  e00a              B        |L1.2732|
                  |L1.2710|
;;;643            if (y >= y0) {
000a96  4544              CMP      r4,r8
000a98  db00              BLT      |L1.2716|
;;;644              Sel = i;
000a9a  46aa              MOV      r10,r5
                  |L1.2716|
;;;645            }
;;;646            y0 += _GetItemSizeY(hObj, pObj, i);
000a9c  462a              MOV      r2,r5
000a9e  4631              MOV      r1,r6
000aa0  4648              MOV      r0,r9
000aa2  f7fffffe          BL       _GetItemSizeY
000aa6  4480              ADD      r8,r8,r0
000aa8  f1050501          ADD      r5,r5,#1              ;642
                  |L1.2732|
000aac  455d              CMP      r5,r11                ;642
000aae  dbf2              BLT      |L1.2710|
;;;647          }
;;;648        }
000ab0  bf00              NOP      
                  |L1.2738|
;;;649      }
;;;650      return Sel;
000ab2  4650              MOV      r0,r10
;;;651    }
000ab4  e8bd9ffc          POP      {r2-r12,pc}
;;;652    
                          ENDP

                  _OnTouch PROC
;;;656    */
;;;657    static void _OnTouch(LISTBOX_Handle hObj, WM_MESSAGE* pMsg) {
000ab8  b570              PUSH     {r4-r6,lr}
000aba  4605              MOV      r5,r0
000abc  460c              MOV      r4,r1
;;;658      const GUI_PID_STATE* pState = (const GUI_PID_STATE*)pMsg->Data.p;
000abe  68a6              LDR      r6,[r4,#8]
;;;659      if (pMsg->Data.p) {  /* Something happened in our area (pressed or released) */
000ac0  68a0              LDR      r0,[r4,#8]
000ac2  b130              CBZ      r0,|L1.2770|
;;;660        if (pState->Pressed == 0) {
000ac4  7a30              LDRB     r0,[r6,#8]
000ac6  b940              CBNZ     r0,|L1.2778|
;;;661          _NotifyOwner(hObj, WM_NOTIFICATION_RELEASED);
000ac8  2102              MOVS     r1,#2
000aca  4628              MOV      r0,r5
000acc  f7fffffe          BL       _NotifyOwner
000ad0  e003              B        |L1.2778|
                  |L1.2770|
;;;662        }
;;;663      } else {     /* Mouse moved out */
;;;664        _NotifyOwner(hObj, WM_NOTIFICATION_MOVED_OUT);
000ad2  2103              MOVS     r1,#3
000ad4  4628              MOV      r0,r5
000ad6  f7fffffe          BL       _NotifyOwner
                  |L1.2778|
;;;665      }
;;;666    }
000ada  bd70              POP      {r4-r6,pc}
;;;667    
                          ENDP

                  LISTBOX_GetSel PROC
;;;1198   */
;;;1199   int  LISTBOX_GetSel (LISTBOX_Handle hObj) {
000adc  b570              PUSH     {r4-r6,lr}
000ade  4605              MOV      r5,r0
;;;1200     int r = -1;
000ae0  f04f36ff          MOV      r6,#0xffffffff
;;;1201     LISTBOX_Obj* pObj;
;;;1202     if (hObj) {
000ae4  b12d              CBZ      r5,|L1.2802|
;;;1203       WM_LOCK();
;;;1204       pObj = LISTBOX_H2P(hObj);
000ae6  4628              MOV      r0,r5
000ae8  f7fffffe          BL       GUI_ALLOC_h2p
000aec  4604              MOV      r4,r0
;;;1205       r = pObj->Sel;
000aee  f9b46082          LDRSH    r6,[r4,#0x82]
                  |L1.2802|
;;;1206       WM_UNLOCK();
;;;1207     }
;;;1208     return r;
000af2  4630              MOV      r0,r6
;;;1209   }
000af4  bd70              POP      {r4-r6,pc}
;;;1210   
                          ENDP

                  _MoveSel PROC
;;;695    */
;;;696    static void _MoveSel(LISTBOX_Handle hObj, int Dir) {
000af6  e92d5ff0          PUSH     {r4-r12,lr}
000afa  4681              MOV      r9,r0
000afc  460e              MOV      r6,r1
;;;697      int Index, NewSel = -1, NumItems;
000afe  f04f37ff          MOV      r7,#0xffffffff
;;;698      LISTBOX_Obj * pObj;
;;;699      pObj = LISTBOX_H2P(hObj);
000b02  4648              MOV      r0,r9
000b04  f7fffffe          BL       GUI_ALLOC_h2p
000b08  4604              MOV      r4,r0
;;;700      Index = LISTBOX_GetSel(hObj);
000b0a  4648              MOV      r0,r9
000b0c  f7fffffe          BL       LISTBOX_GetSel
000b10  4605              MOV      r5,r0
;;;701      NumItems = LISTBOX__GetNumItems(pObj);
000b12  4620              MOV      r0,r4
000b14  f7fffffe          BL       LISTBOX__GetNumItems
000b18  4682              MOV      r10,r0
;;;702      do {
000b1a  bf00              NOP      
                  |L1.2844|
;;;703        WM_HMEM hItem;
;;;704        Index += Dir;
000b1c  4435              ADD      r5,r5,r6
;;;705        if ((Index < 0) || (Index >= NumItems)) {
000b1e  2d00              CMP      r5,#0
000b20  db01              BLT      |L1.2854|
000b22  4555              CMP      r5,r10
000b24  db00              BLT      |L1.2856|
                  |L1.2854|
;;;706          break;
000b26  e015              B        |L1.2900|
                  |L1.2856|
;;;707        }
;;;708        hItem = GUI_ARRAY_GethItem(&pObj->ItemArray, Index);
000b28  4629              MOV      r1,r5
000b2a  f1040028          ADD      r0,r4,#0x28
000b2e  f7fffffe          BL       GUI_ARRAY_GethItem
000b32  4680              MOV      r8,r0
;;;709        if (hItem) {
000b34  f1b80f00          CMP      r8,#0
000b38  d00a              BEQ      |L1.2896|
;;;710          LISTBOX_ITEM * pItem = (LISTBOX_ITEM *)GUI_ALLOC_h2p(hItem);
000b3a  4640              MOV      r0,r8
000b3c  f7fffffe          BL       GUI_ALLOC_h2p
000b40  4683              MOV      r11,r0
;;;711          if (!(pItem->Status & LISTBOX_ITEM_DISABLED)) {
000b42  f89b0004          LDRB     r0,[r11,#4]
000b46  f0100f02          TST      r0,#2
000b4a  d100              BNE      |L1.2894|
;;;712            NewSel = Index;
000b4c  462f              MOV      r7,r5
                  |L1.2894|
;;;713          }
;;;714        }
000b4e  bf00              NOP      
                  |L1.2896|
;;;715      } while(NewSel < 0);
000b50  2f00              CMP      r7,#0
000b52  dbe3              BLT      |L1.2844|
                  |L1.2900|
000b54  bf00              NOP                            ;706
;;;716      if (NewSel >= 0) {
000b56  2f00              CMP      r7,#0
000b58  db04              BLT      |L1.2916|
;;;717        LISTBOX_SetSel(hObj, NewSel);
000b5a  4639              MOV      r1,r7
000b5c  4648              MOV      r0,r9
000b5e  f7fffffe          BL       LISTBOX_SetSel
000b62  e013              B        |L1.2956|
                  |L1.2916|
;;;718      } else {
;;;719        int PrevScrollStateV;
;;;720        PrevScrollStateV = pObj->ScrollStateV.v;
000b64  f8d48034          LDR      r8,[r4,#0x34]
;;;721        pObj->ScrollStateV.v += Dir;
000b68  6b60              LDR      r0,[r4,#0x34]
000b6a  eb000106          ADD      r1,r0,r6
000b6e  6361              STR      r1,[r4,#0x34]
;;;722        WM_CheckScrollBounds(&pObj->ScrollStateV);
000b70  f1040030          ADD      r0,r4,#0x30
000b74  f7fffffe          BL       WM_CheckScrollBounds
;;;723        if (PrevScrollStateV != pObj->ScrollStateV.v) {
000b78  6b60              LDR      r0,[r4,#0x34]
000b7a  4540              CMP      r0,r8
000b7c  d002              BEQ      |L1.2948|
;;;724          LISTBOX__InvalidateInsideArea(hObj);
000b7e  4648              MOV      r0,r9
000b80  f7fffffe          BL       LISTBOX__InvalidateInsideArea
                  |L1.2948|
;;;725        }
;;;726        LISTBOX_UpdateScrollers(hObj);
000b84  4648              MOV      r0,r9
000b86  f7fffffe          BL       LISTBOX_UpdateScrollers
;;;727      }
000b8a  bf00              NOP      
                  |L1.2956|
;;;728    }
000b8c  e8bd9ff0          POP      {r4-r12,pc}
;;;729    
                          ENDP

                  LISTBOX_DecSel PROC
;;;1226   */
;;;1227   void LISTBOX_DecSel      (LISTBOX_Handle hObj) {
000b90  b510              PUSH     {r4,lr}
000b92  4604              MOV      r4,r0
;;;1228     if (hObj) {
000b94  b124              CBZ      r4,|L1.2976|
;;;1229       WM_LOCK();
;;;1230       _MoveSel(hObj, -1);
000b96  f04f31ff          MOV      r1,#0xffffffff
000b9a  4620              MOV      r0,r4
000b9c  f7fffffe          BL       _MoveSel
                  |L1.2976|
;;;1231       WM_UNLOCK();
;;;1232     }
;;;1233   }
000ba0  bd10              POP      {r4,pc}
;;;1234   
                          ENDP

                  LISTBOX_IncSel PROC
;;;1214   */
;;;1215   void LISTBOX_IncSel      (LISTBOX_Handle hObj) {
000ba2  b510              PUSH     {r4,lr}
000ba4  4604              MOV      r4,r0
;;;1216     if (hObj) {
000ba6  b11c              CBZ      r4,|L1.2992|
;;;1217       WM_LOCK();
;;;1218       _MoveSel(hObj, 1);
000ba8  2101              MOVS     r1,#1
000baa  4620              MOV      r0,r4
000bac  f7fffffe          BL       _MoveSel
                  |L1.2992|
;;;1219       WM_UNLOCK();
;;;1220     }
;;;1221   }
000bb0  bd10              POP      {r4,pc}
;;;1222   
                          ENDP

                  _AddKey PROC
;;;736    */
;;;737    static int _AddKey(LISTBOX_Handle hObj, int Key) {
000bb2  b570              PUSH     {r4-r6,lr}
000bb4  4606              MOV      r6,r0
000bb6  460d              MOV      r5,r1
;;;738      LISTBOX_Obj* pObj;
;;;739      pObj = LISTBOX_H2P(hObj);
000bb8  4630              MOV      r0,r6
000bba  f7fffffe          BL       GUI_ALLOC_h2p
000bbe  4604              MOV      r4,r0
;;;740      switch (Key) {
000bc0  2d12              CMP      r5,#0x12
000bc2  d011              BEQ      |L1.3048|
000bc4  dc04              BGT      |L1.3024|
000bc6  2d10              CMP      r5,#0x10
000bc8  d01f              BEQ      |L1.3082|
000bca  2d11              CMP      r5,#0x11
000bcc  d138              BNE      |L1.3136|
000bce  e032              B        |L1.3126|
                  |L1.3024|
000bd0  2d13              CMP      r5,#0x13
000bd2  d02b              BEQ      |L1.3116|
000bd4  2d20              CMP      r5,#0x20
000bd6  d133              BNE      |L1.3136|
;;;741      case GUI_KEY_SPACE:
;;;742        _ToggleMultiSel(hObj, pObj, pObj->Sel);
000bd8  f9b42082          LDRSH    r2,[r4,#0x82]
000bdc  4621              MOV      r1,r4
000bde  4630              MOV      r0,r6
000be0  f7fffffe          BL       _ToggleMultiSel
;;;743        return 1;               /* Key has been consumed */
000be4  2001              MOVS     r0,#1
                  |L1.3046|
;;;744      case GUI_KEY_RIGHT:
;;;745        if (WM_SetScrollValue(&pObj->ScrollStateH, pObj->ScrollStateH.v + pObj->Props.ScrollStepH)) {
;;;746          LISTBOX_UpdateScrollers(hObj);
;;;747          LISTBOX__InvalidateInsideArea(hObj);
;;;748        }
;;;749        return 1;               /* Key has been consumed */
;;;750      case GUI_KEY_LEFT:
;;;751        if (WM_SetScrollValue(&pObj->ScrollStateH, pObj->ScrollStateH.v - pObj->Props.ScrollStepH)) {
;;;752          LISTBOX_UpdateScrollers(hObj);
;;;753          LISTBOX__InvalidateInsideArea(hObj);
;;;754        }
;;;755        return 1;               /* Key has been consumed */
;;;756      case GUI_KEY_DOWN:
;;;757        LISTBOX_IncSel(hObj);
;;;758        return 1;               /* Key has been consumed */
;;;759      case GUI_KEY_UP:
;;;760        LISTBOX_DecSel(hObj);
;;;761        return 1;               /* Key has been consumed */
;;;762      default:
;;;763        if(_IsAlphaNum(Key)) {
;;;764          _SelectByKey(hObj, Key);
;;;765          return 1;               /* Key has been consumed */
;;;766        }
;;;767      }
;;;768      return 0;
;;;769    }
000be6  bd70              POP      {r4-r6,pc}
                  |L1.3048|
000be8  204c              MOVS     r0,#0x4c              ;745
000bea  5b00              LDRH     r0,[r0,r4]            ;745
000bec  6c22              LDR      r2,[r4,#0x40]         ;745
000bee  1811              ADDS     r1,r2,r0              ;745
000bf0  f104003c          ADD      r0,r4,#0x3c           ;745
000bf4  f7fffffe          BL       WM_SetScrollValue
000bf8  b128              CBZ      r0,|L1.3078|
000bfa  4630              MOV      r0,r6                 ;746
000bfc  f7fffffe          BL       LISTBOX_UpdateScrollers
000c00  4630              MOV      r0,r6                 ;747
000c02  f7fffffe          BL       LISTBOX__InvalidateInsideArea
                  |L1.3078|
000c06  2001              MOVS     r0,#1                 ;749
000c08  e7ed              B        |L1.3046|
                  |L1.3082|
000c0a  204c              MOVS     r0,#0x4c              ;751
000c0c  5b00              LDRH     r0,[r0,r4]            ;751
000c0e  6c22              LDR      r2,[r4,#0x40]         ;751
000c10  1a11              SUBS     r1,r2,r0              ;751
000c12  f104003c          ADD      r0,r4,#0x3c           ;751
000c16  f7fffffe          BL       WM_SetScrollValue
000c1a  b128              CBZ      r0,|L1.3112|
000c1c  4630              MOV      r0,r6                 ;752
000c1e  f7fffffe          BL       LISTBOX_UpdateScrollers
000c22  4630              MOV      r0,r6                 ;753
000c24  f7fffffe          BL       LISTBOX__InvalidateInsideArea
                  |L1.3112|
000c28  2001              MOVS     r0,#1                 ;755
000c2a  e7dc              B        |L1.3046|
                  |L1.3116|
000c2c  4630              MOV      r0,r6                 ;757
000c2e  f7fffffe          BL       LISTBOX_IncSel
000c32  2001              MOVS     r0,#1                 ;758
000c34  e7d7              B        |L1.3046|
                  |L1.3126|
000c36  4630              MOV      r0,r6                 ;760
000c38  f7fffffe          BL       LISTBOX_DecSel
000c3c  2001              MOVS     r0,#1                 ;761
000c3e  e7d2              B        |L1.3046|
                  |L1.3136|
000c40  4628              MOV      r0,r5                 ;763
000c42  f7fffffe          BL       _IsAlphaNum
000c46  b128              CBZ      r0,|L1.3156|
000c48  4629              MOV      r1,r5                 ;764
000c4a  4630              MOV      r0,r6                 ;764
000c4c  f7fffffe          BL       _SelectByKey
000c50  2001              MOVS     r0,#1                 ;765
000c52  e7c8              B        |L1.3046|
                  |L1.3156|
000c54  bf00              NOP                            ;740
000c56  bf00              NOP                            ;740
000c58  2000              MOVS     r0,#0                 ;768
000c5a  e7c4              B        |L1.3046|
;;;770    
                          ENDP

                  LISTBOX__InvalidateItemSize PROC
;;;824    */
;;;825    void LISTBOX__InvalidateItemSize(const LISTBOX_Obj* pObj, unsigned Index) {
000c5c  b570              PUSH     {r4-r6,lr}
000c5e  4605              MOV      r5,r0
000c60  460e              MOV      r6,r1
;;;826      LISTBOX_ITEM* pItem;
;;;827      pItem = (LISTBOX_ITEM*)GUI_ARRAY_GetpItem(&pObj->ItemArray, Index);
000c62  4631              MOV      r1,r6
000c64  f1050028          ADD      r0,r5,#0x28
000c68  f7fffffe          BL       GUI_ARRAY_GetpItem
000c6c  4604              MOV      r4,r0
;;;828      if (pItem) {
000c6e  b11c              CBZ      r4,|L1.3192|
;;;829        pItem->xSize = 0;
000c70  f04f0000          MOV      r0,#0
000c74  8020              STRH     r0,[r4,#0]
;;;830        pItem->ySize = 0;
000c76  8060              STRH     r0,[r4,#2]
                  |L1.3192|
;;;831      }
;;;832    }
000c78  bd70              POP      {r4-r6,pc}
;;;833    
                          ENDP

                  LISTBOX__InvalidateItemAndBelow PROC
;;;867    */
;;;868    void LISTBOX__InvalidateItemAndBelow(LISTBOX_Handle hObj, const LISTBOX_Obj* pObj, int Sel) {
000c7a  e92d41fc          PUSH     {r2-r8,lr}
000c7e  4606              MOV      r6,r0
000c80  460f              MOV      r7,r1
000c82  4614              MOV      r4,r2
;;;869      if (Sel >= 0) {
000c84  2c00              CMP      r4,#0
000c86  db17              BLT      |L1.3256|
;;;870        int ItemPosY;
;;;871        ItemPosY = _GetItemPosY(hObj, pObj, Sel);
000c88  4622              MOV      r2,r4
000c8a  4639              MOV      r1,r7
000c8c  4630              MOV      r0,r6
000c8e  f7fffffe          BL       _GetItemPosY
000c92  4605              MOV      r5,r0
;;;872        if (ItemPosY >= 0) {
000c94  2d00              CMP      r5,#0
000c96  db0e              BLT      |L1.3254|
;;;873          GUI_RECT Rect;
;;;874          WM_GetInsideRectExScrollbar(hObj, &Rect);
000c98  4669              MOV      r1,sp
000c9a  4630              MOV      r0,r6
000c9c  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;875          Rect.y0 += ItemPosY;
000ca0  f8bd0002          LDRH     r0,[sp,#2]
000ca4  4428              ADD      r0,r0,r5
000ca6  b200              SXTH     r0,r0
000ca8  f8ad0002          STRH     r0,[sp,#2]
;;;876          WM_InvalidateRect(hObj, &Rect);
000cac  4669              MOV      r1,sp
000cae  4630              MOV      r0,r6
000cb0  f7fffffe          BL       WM_InvalidateRect
;;;877        }
000cb4  bf00              NOP      
                  |L1.3254|
;;;878      }
000cb6  bf00              NOP      
                  |L1.3256|
;;;879    }
000cb8  e8bd81fc          POP      {r2-r8,pc}
;;;880    
                          ENDP

                  LISTBOX_AddKey PROC
;;;1101   */
;;;1102   int LISTBOX_AddKey(LISTBOX_Handle hObj, int Key) {
000cbc  b570              PUSH     {r4-r6,lr}
000cbe  4604              MOV      r4,r0
000cc0  460d              MOV      r5,r1
;;;1103     int r = 0;
000cc2  f04f0600          MOV      r6,#0
;;;1104     if (hObj) {
000cc6  b124              CBZ      r4,|L1.3282|
;;;1105       WM_LOCK();
;;;1106       r = _AddKey(hObj, Key);
000cc8  4629              MOV      r1,r5
000cca  4620              MOV      r0,r4
000ccc  f7fffffe          BL       _AddKey
000cd0  4606              MOV      r6,r0
                  |L1.3282|
;;;1107       WM_UNLOCK();
;;;1108     }
;;;1109     return r;
000cd2  4630              MOV      r0,r6
;;;1110   }
000cd4  bd70              POP      {r4-r6,pc}
;;;1111   
                          ENDP

                  LISTBOX_Callback PROC
;;;926    */
;;;927    void LISTBOX_Callback(WM_MESSAGE * pMsg) {
000cd6  e92d41f0          PUSH     {r4-r8,lr}
000cda  b086              SUB      sp,sp,#0x18
000cdc  4604              MOV      r4,r0
;;;928      LISTBOX_Handle hObj;
;;;929      LISTBOX_Obj * pObj;
;;;930      WM_SCROLL_STATE ScrollState;
;;;931      WM_MESSAGE Msg;
;;;932      hObj = pMsg->hWin;
000cde  f9b48004          LDRSH    r8,[r4,#4]
;;;933      pObj = (LISTBOX_Obj *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
000ce2  4640              MOV      r0,r8
000ce4  f7fffffe          BL       GUI_ALLOC_h2p
000ce8  4605              MOV      r5,r0
;;;934      /* Let widget handle the standard messages */
;;;935      if (WIDGET_HandleActive(hObj, pMsg) == 0) {
000cea  4621              MOV      r1,r4
000cec  4640              MOV      r0,r8
000cee  f7fffffe          BL       WIDGET_HandleActive
000cf2  b958              CBNZ     r0,|L1.3340|
;;;936        /* Owner needs to be informed about focus change */
;;;937        if (pMsg->MsgId == WM_SET_FOCUS) {
000cf4  6820              LDR      r0,[r4,#0]
000cf6  281e              CMP      r0,#0x1e
000cf8  d105              BNE      |L1.3334|
;;;938          if (pMsg->Data.v == 0) {            /* Lost focus ? */
000cfa  68a0              LDR      r0,[r4,#8]
000cfc  b918              CBNZ     r0,|L1.3334|
;;;939            _NotifyOwner(hObj, LISTBOX_NOTIFICATION_LOST_FOCUS);
000cfe  210b              MOVS     r1,#0xb
000d00  4640              MOV      r0,r8
000d02  f7fffffe          BL       _NotifyOwner
                  |L1.3334|
;;;940          }
;;;941        }
;;;942        return;
;;;943      }
;;;944      switch (pMsg->MsgId) {
;;;945      case WM_NOTIFY_PARENT:
;;;946        switch (pMsg->Data.v) {
;;;947        case WM_NOTIFICATION_VALUE_CHANGED:
;;;948          if (pMsg->hWinSrc  == WM_GetScrollbarV(hObj)) {
;;;949            WM_GetScrollState(pMsg->hWinSrc, &ScrollState);
;;;950            pObj->ScrollStateV.v = ScrollState.v;
;;;951            LISTBOX__InvalidateInsideArea(hObj);
;;;952            _NotifyOwner(hObj, WM_NOTIFICATION_SCROLL_CHANGED);
;;;953          } else if (pMsg->hWinSrc == WM_GetScrollbarH(hObj)) {
;;;954            WM_GetScrollState(pMsg->hWinSrc, &ScrollState);
;;;955            pObj->ScrollStateH.v = ScrollState.v;
;;;956            LISTBOX__InvalidateInsideArea(hObj);
;;;957            _NotifyOwner(hObj, WM_NOTIFICATION_SCROLL_CHANGED);
;;;958          }
;;;959          break;
;;;960        case WM_NOTIFICATION_SCROLLBAR_ADDED:
;;;961          #if WIDGET_USE_PARENT_EFFECT
;;;962            WIDGET_SetEffect(pMsg->hWinSrc, pObj->Widget.pEffect);
;;;963          #endif
;;;964          LISTBOX_UpdateScrollers(hObj);
;;;965          break;
;;;966        }
;;;967        break;
;;;968      case WM_PAINT:
;;;969        _OnPaint(hObj, pObj, pMsg);
;;;970        break;
;;;971      case WM_PID_STATE_CHANGED:
;;;972        {
;;;973          const WM_PID_STATE_CHANGED_INFO* pInfo = (const WM_PID_STATE_CHANGED_INFO*)pMsg->Data.p;
;;;974          if (pInfo->State) {
;;;975            int Sel;
;;;976            Sel = _GetItemFromPos(hObj, pObj, pInfo->x, pInfo->y);
;;;977            if (Sel >= 0) {
;;;978              _ToggleMultiSel(hObj, pObj, Sel);
;;;979              LISTBOX_SetSel(hObj, Sel);
;;;980            }
;;;981            _NotifyOwner(hObj, WM_NOTIFICATION_CLICKED);
;;;982            return;
;;;983          }
;;;984        }
;;;985        break;
;;;986      case WM_TOUCH:
;;;987        _OnTouch(hObj, pMsg);
;;;988        return;
;;;989    #if GUI_SUPPORT_MOUSE
;;;990      case WM_MOUSEOVER:
;;;991        if (_OnMouseOver(hObj, pObj, pMsg) == 0)
;;;992          return;
;;;993        break;
;;;994    #endif
;;;995      case WM_DELETE:
;;;996        _FreeAttached(pObj);
;;;997        break;       /* No return here ... WM_DefaultProc needs to be called */
;;;998      case WM_KEY:
;;;999        if (((const WM_KEY_INFO*)(pMsg->Data.p))->PressedCnt > 0) {
;;;1000         int Key;
;;;1001         Key = ((const WM_KEY_INFO*)(pMsg->Data.p))->Key;
;;;1002         if (LISTBOX_AddKey(hObj, Key)) {
;;;1003           return;
;;;1004         }
;;;1005       }
;;;1006       /* Send a WM_NOTIFY_OWNER_KEY message with the key information to the owner window */
;;;1007       Msg = *pMsg;
;;;1008       Msg.MsgId = WM_NOTIFY_OWNER_KEY;
;;;1009       _SendToOwner(hObj, &Msg);
;;;1010       if (!WM_IsWindow(hObj)) {
;;;1011         return;
;;;1012       }
;;;1013       break;
;;;1014     case WM_SIZE:
;;;1015       LISTBOX_UpdateScrollers(hObj);
;;;1016       WM_InvalidateWindow(hObj);
;;;1017       break;
;;;1018     }
;;;1019     WM_DefaultProc(pMsg);
;;;1020   }
000d06  b006              ADD      sp,sp,#0x18
000d08  e8bd81f0          POP      {r4-r8,pc}
                  |L1.3340|
000d0c  6820              LDR      r0,[r4,#0]            ;944
000d0e  280e              CMP      r0,#0xe               ;944
000d10  d071              BEQ      |L1.3574|
000d12  dc06              BGT      |L1.3362|
000d14  2805              CMP      r0,#5                 ;944
000d16  d06d              BEQ      |L1.3572|
000d18  280b              CMP      r0,#0xb               ;944
000d1a  d066              BEQ      |L1.3562|
000d1c  280c              CMP      r0,#0xc               ;944
                  |L1.3358|
000d1e  d13d              BNE      |L1.3484|
000d20  e05e              B        |L1.3552|
                  |L1.3362|
000d22  280f              CMP      r0,#0xf               ;944
000d24  d03b              BEQ      |L1.3486|
000d26  2811              CMP      r0,#0x11              ;944
000d28  d03f              BEQ      |L1.3498|
000d2a  2826              CMP      r0,#0x26              ;944
000d2c  d1f7              BNE      |L1.3358|
000d2e  68a0              LDR      r0,[r4,#8]            ;946
000d30  2805              CMP      r0,#5                 ;946
000d32  d002              BEQ      |L1.3386|
000d34  2806              CMP      r0,#6                 ;946
000d36  d130              BNE      |L1.3482|
000d38  e02b              B        |L1.3474|
                  |L1.3386|
000d3a  4640              MOV      r0,r8                 ;948
000d3c  f7fffffe          BL       WM_GetScrollbarV
000d40  f9b41006          LDRSH    r1,[r4,#6]            ;948
000d44  4288              CMP      r0,r1                 ;948
000d46  d10e              BNE      |L1.3430|
000d48  f9b40006          LDRSH    r0,[r4,#6]            ;949
000d4c  a903              ADD      r1,sp,#0xc            ;949
000d4e  f7fffffe          BL       WM_GetScrollState
000d52  9904              LDR      r1,[sp,#0x10]         ;950
000d54  6369              STR      r1,[r5,#0x34]         ;950
000d56  4640              MOV      r0,r8                 ;951
000d58  f7fffffe          BL       LISTBOX__InvalidateInsideArea
000d5c  210a              MOVS     r1,#0xa               ;952
000d5e  4640              MOV      r0,r8                 ;952
000d60  f7fffffe          BL       _NotifyOwner
000d64  e014              B        |L1.3472|
                  |L1.3430|
000d66  4640              MOV      r0,r8                 ;953
000d68  f7fffffe          BL       WM_GetScrollbarH
000d6c  f9b41006          LDRSH    r1,[r4,#6]            ;953
000d70  4288              CMP      r0,r1                 ;953
000d72  d10d              BNE      |L1.3472|
000d74  f9b40006          LDRSH    r0,[r4,#6]            ;954
000d78  a903              ADD      r1,sp,#0xc            ;954
000d7a  f7fffffe          BL       WM_GetScrollState
000d7e  9904              LDR      r1,[sp,#0x10]         ;955
000d80  6429              STR      r1,[r5,#0x40]         ;955
000d82  4640              MOV      r0,r8                 ;956
000d84  f7fffffe          BL       LISTBOX__InvalidateInsideArea
000d88  210a              MOVS     r1,#0xa               ;957
000d8a  4640              MOV      r0,r8                 ;957
000d8c  f7fffffe          BL       _NotifyOwner
                  |L1.3472|
000d90  e003              B        |L1.3482|
                  |L1.3474|
000d92  4640              MOV      r0,r8                 ;964
000d94  f7fffffe          BL       LISTBOX_UpdateScrollers
000d98  bf00              NOP                            ;965
                  |L1.3482|
000d9a  bf00              NOP                            ;959
                  |L1.3484|
000d9c  e050              B        |L1.3648|
                  |L1.3486|
000d9e  4622              MOV      r2,r4                 ;969
000da0  4629              MOV      r1,r5                 ;969
000da2  4640              MOV      r0,r8                 ;969
000da4  f7fffffe          BL       _OnPaint
000da8  e04a              B        |L1.3648|
                  |L1.3498|
000daa  68a6              LDR      r6,[r4,#8]            ;973
000dac  7a30              LDRB     r0,[r6,#8]            ;974
000dae  b1b0              CBZ      r0,|L1.3550|
000db0  4629              MOV      r1,r5                 ;976
000db2  4640              MOV      r0,r8                 ;976
000db4  e9d62300          LDRD     r2,r3,[r6,#0]         ;976
000db8  f7fffffe          BL       _GetItemFromPos
000dbc  4607              MOV      r7,r0                 ;976
000dbe  2f00              CMP      r7,#0                 ;977
000dc0  db08              BLT      |L1.3540|
000dc2  463a              MOV      r2,r7                 ;978
000dc4  4629              MOV      r1,r5                 ;978
000dc6  4640              MOV      r0,r8                 ;978
000dc8  f7fffffe          BL       _ToggleMultiSel
000dcc  4639              MOV      r1,r7                 ;979
000dce  4640              MOV      r0,r8                 ;979
000dd0  f7fffffe          BL       LISTBOX_SetSel
                  |L1.3540|
000dd4  2101              MOVS     r1,#1                 ;981
000dd6  4640              MOV      r0,r8                 ;981
000dd8  f7fffffe          BL       _NotifyOwner
000ddc  e793              B        |L1.3334|
                  |L1.3550|
000dde  e02f              B        |L1.3648|
                  |L1.3552|
000de0  4621              MOV      r1,r4                 ;987
000de2  4640              MOV      r0,r8                 ;987
000de4  f7fffffe          BL       _OnTouch
000de8  e78d              B        |L1.3334|
                  |L1.3562|
000dea  4628              MOV      r0,r5                 ;996
000dec  f7fffffe          BL       _FreeAttached
000df0  e026              B        |L1.3648|
000df2  e000              B        |L1.3574|
                  |L1.3572|
000df4  e01d              B        |L1.3634|
                  |L1.3574|
000df6  68a0              LDR      r0,[r4,#8]            ;999
000df8  6840              LDR      r0,[r0,#4]            ;999
000dfa  2800              CMP      r0,#0                 ;999
000dfc  dd08              BLE      |L1.3600|
000dfe  68a0              LDR      r0,[r4,#8]            ;1001
000e00  6806              LDR      r6,[r0,#0]            ;1001
000e02  4631              MOV      r1,r6                 ;1002
000e04  4640              MOV      r0,r8                 ;1002
000e06  f7fffffe          BL       LISTBOX_AddKey
000e0a  b100              CBZ      r0,|L1.3598|
000e0c  e77b              B        |L1.3334|
                  |L1.3598|
000e0e  bf00              NOP                            ;1005
                  |L1.3600|
000e10  e8940007          LDM      r4,{r0-r2}            ;1007
000e14  e88d0007          STM      sp,{r0-r2}            ;1007
000e18  f04f0021          MOV      r0,#0x21              ;1008
000e1c  9000              STR      r0,[sp,#0]            ;1008
000e1e  4669              MOV      r1,sp                 ;1009
000e20  4640              MOV      r0,r8                 ;1009
000e22  f7fffffe          BL       _SendToOwner
000e26  4640              MOV      r0,r8                 ;1010
000e28  f7fffffe          BL       WM_IsWindow
000e2c  b900              CBNZ     r0,|L1.3632|
000e2e  e76a              B        |L1.3334|
                  |L1.3632|
000e30  e006              B        |L1.3648|
                  |L1.3634|
000e32  4640              MOV      r0,r8                 ;1015
000e34  f7fffffe          BL       LISTBOX_UpdateScrollers
000e38  4640              MOV      r0,r8                 ;1016
000e3a  f7fffffe          BL       WM_InvalidateWindow
000e3e  bf00              NOP                            ;1017
                  |L1.3648|
000e40  bf00              NOP                            ;967
000e42  4620              MOV      r0,r4                 ;1019
000e44  f7fffffe          BL       WM_DefaultProc
000e48  bf00              NOP      
000e4a  e75c              B        |L1.3334|
;;;1021   
                          ENDP

                  LISTBOX_InvalidateItem PROC
;;;1069   */
;;;1070   void LISTBOX_InvalidateItem(LISTBOX_Handle hObj, int Index) {
000e4c  e92d41f0          PUSH     {r4-r8,lr}
000e50  4606              MOV      r6,r0
000e52  460c              MOV      r4,r1
;;;1071     if (hObj) {
000e54  b356              CBZ      r6,|L1.3756|
;;;1072       LISTBOX_Obj* pObj;
;;;1073       int NumItems;
;;;1074       WM_LOCK();
;;;1075       pObj = LISTBOX_H2P(hObj);
000e56  4630              MOV      r0,r6
000e58  f7fffffe          BL       GUI_ALLOC_h2p
000e5c  4680              MOV      r8,r0
;;;1076       NumItems = LISTBOX__GetNumItems(pObj);
000e5e  4640              MOV      r0,r8
000e60  f7fffffe          BL       LISTBOX__GetNumItems
000e64  4607              MOV      r7,r0
;;;1077       if (Index < NumItems) {
000e66  42bc              CMP      r4,r7
000e68  da1f              BGE      |L1.3754|
;;;1078         if (Index < 0) {
000e6a  2c00              CMP      r4,#0
000e6c  da11              BGE      |L1.3730|
;;;1079           int i;
;;;1080           for (i = 0; i < NumItems; i++) {
000e6e  f04f0500          MOV      r5,#0
000e72  e005              B        |L1.3712|
                  |L1.3700|
;;;1081             LISTBOX__InvalidateItemSize(pObj, i);
000e74  4629              MOV      r1,r5
000e76  4640              MOV      r0,r8
000e78  f7fffffe          BL       LISTBOX__InvalidateItemSize
000e7c  f1050501          ADD      r5,r5,#1              ;1080
                  |L1.3712|
000e80  42bd              CMP      r5,r7                 ;1080
000e82  dbf7              BLT      |L1.3700|
;;;1082           }
;;;1083           LISTBOX_UpdateScrollers(hObj);
000e84  4630              MOV      r0,r6
000e86  f7fffffe          BL       LISTBOX_UpdateScrollers
;;;1084           LISTBOX__InvalidateInsideArea(hObj);
000e8a  4630              MOV      r0,r6
000e8c  f7fffffe          BL       LISTBOX__InvalidateInsideArea
;;;1085         } else {
000e90  e00b              B        |L1.3754|
                  |L1.3730|
;;;1086           LISTBOX__InvalidateItemSize(pObj, Index);
000e92  4621              MOV      r1,r4
000e94  4640              MOV      r0,r8
000e96  f7fffffe          BL       LISTBOX__InvalidateItemSize
;;;1087           LISTBOX_UpdateScrollers(hObj);
000e9a  4630              MOV      r0,r6
000e9c  f7fffffe          BL       LISTBOX_UpdateScrollers
;;;1088           LISTBOX__InvalidateItemAndBelow(hObj, pObj, Index);
000ea0  4622              MOV      r2,r4
000ea2  4641              MOV      r1,r8
000ea4  4630              MOV      r0,r6
000ea6  f7fffffe          BL       LISTBOX__InvalidateItemAndBelow
                  |L1.3754|
;;;1089         }
;;;1090       }
;;;1091       WM_UNLOCK();
;;;1092     }
000eaa  bf00              NOP      
                  |L1.3756|
;;;1093   }
000eac  e8bd81f0          POP      {r4-r8,pc}
;;;1094   
                          ENDP

                  LISTBOX_AddString PROC
;;;1115   */
;;;1116   void LISTBOX_AddString(LISTBOX_Handle hObj, const char* s) {
000eb0  e92d41fc          PUSH     {r2-r8,lr}
000eb4  4606              MOV      r6,r0
000eb6  460d              MOV      r5,r1
;;;1117     if (hObj && s) {
000eb8  b396              CBZ      r6,|L1.3872|
000eba  b38d              CBZ      r5,|L1.3872|
;;;1118       LISTBOX_Obj* pObj;
;;;1119       LISTBOX_ITEM Item = {0, 0};
000ebc  f04f0000          MOV      r0,#0
000ec0  9000              STR      r0,[sp,#0]
000ec2  9001              STR      r0,[sp,#4]
;;;1120       WM_LOCK();
;;;1121       pObj = LISTBOX_H2P(hObj);
000ec4  4630              MOV      r0,r6
000ec6  f7fffffe          BL       GUI_ALLOC_h2p
000eca  4604              MOV      r4,r0
;;;1122       if (GUI_ARRAY_AddItem(&pObj->ItemArray, &Item, sizeof(LISTBOX_ITEM) + strlen(s)) == 0) {
000ecc  4628              MOV      r0,r5
000ece  f7fffffe          BL       strlen
000ed2  1d87              ADDS     r7,r0,#6
000ed4  463a              MOV      r2,r7
000ed6  4669              MOV      r1,sp
000ed8  f1040028          ADD      r0,r4,#0x28
000edc  f7fffffe          BL       GUI_ARRAY_AddItem
000ee0  b9e8              CBNZ     r0,|L1.3870|
;;;1123         unsigned ItemIndex = GUI_ARRAY_GetNumItems(&pObj->ItemArray) - 1;
000ee2  f1040028          ADD      r0,r4,#0x28
000ee6  f7fffffe          BL       GUI_ARRAY_GetNumItems
000eea  f1a00701          SUB      r7,r0,#1
;;;1124         LISTBOX_ITEM* pItem= (LISTBOX_ITEM*)GUI_ARRAY_GetpItem(&pObj->ItemArray, ItemIndex);
000eee  4639              MOV      r1,r7
000ef0  f1040028          ADD      r0,r4,#0x28
000ef4  f7fffffe          BL       GUI_ARRAY_GetpItem
000ef8  4680              MOV      r8,r0
;;;1125         strcpy(pItem->acText, s);
000efa  4629              MOV      r1,r5
000efc  f1080005          ADD      r0,r8,#5
000f00  f7fffffe          BL       strcpy
;;;1126         LISTBOX__InvalidateItemSize(pObj, ItemIndex);
000f04  4639              MOV      r1,r7
000f06  4620              MOV      r0,r4
000f08  f7fffffe          BL       LISTBOX__InvalidateItemSize
;;;1127         LISTBOX_UpdateScrollers(hObj);
000f0c  4630              MOV      r0,r6
000f0e  f7fffffe          BL       LISTBOX_UpdateScrollers
;;;1128         LISTBOX__InvalidateItem(hObj, pObj, ItemIndex);
000f12  463a              MOV      r2,r7
000f14  4621              MOV      r1,r4
000f16  4630              MOV      r0,r6
000f18  f7fffffe          BL       LISTBOX__InvalidateItem
;;;1129       }
000f1c  bf00              NOP      
                  |L1.3870|
;;;1130       WM_UNLOCK();
;;;1131     }
000f1e  bf00              NOP      
                  |L1.3872|
;;;1132   }
000f20  e8bd81fc          POP      {r2-r8,pc}
;;;1133   
                          ENDP

                  LISTBOX_SetText PROC
;;;1137   */
;;;1138   void LISTBOX_SetText(LISTBOX_Handle hObj, const GUI_ConstString* ppText) {
000f24  e92d41f0          PUSH     {r4-r8,lr}
000f28  4606              MOV      r6,r0
000f2a  460c              MOV      r4,r1
;;;1139     if (hObj) {
000f2c  b19e              CBZ      r6,|L1.3926|
;;;1140       int i;
;;;1141       const char* s;
;;;1142       WM_LOCK();
;;;1143       if (ppText) {
000f2e  b164              CBZ      r4,|L1.3914|
;;;1144         for (i = 0; (s = *(ppText+i)) != 0; i++) {
000f30  f04f0500          MOV      r5,#0
000f34  e005              B        |L1.3906|
                  |L1.3894|
;;;1145           LISTBOX_AddString(hObj, s);
000f36  4639              MOV      r1,r7
000f38  4630              MOV      r0,r6
000f3a  f7fffffe          BL       LISTBOX_AddString
000f3e  f1050501          ADD      r5,r5,#1              ;1144
                  |L1.3906|
000f42  f8547025          LDR      r7,[r4,r5,LSL #2]     ;1144
000f46  2f00              CMP      r7,#0                 ;1144
000f48  d1f5              BNE      |L1.3894|
                  |L1.3914|
;;;1146         }
;;;1147       }
;;;1148       LISTBOX_InvalidateItem(hObj, LISTBOX_ALL_ITEMS);
000f4a  f04f31ff          MOV      r1,#0xffffffff
000f4e  4630              MOV      r0,r6
000f50  f7fffffe          BL       LISTBOX_InvalidateItem
;;;1149       WM_UNLOCK();
;;;1150     }
000f54  bf00              NOP      
                  |L1.3926|
;;;1151   }
000f56  e8bd81f0          POP      {r4-r8,pc}
;;;1152   
                          ENDP

                  LISTBOX_CreateEx PROC
;;;1031   */
;;;1032   LISTBOX_Handle LISTBOX_CreateEx(int x0, int y0, int xsize, int ysize, WM_HWIN hParent,
000f5a  e92d4fff          PUSH     {r0-r11,lr}
;;;1033                                   int WinFlags, int ExFlags, int Id, const GUI_ConstString* ppText)
;;;1034   {
000f5e  b085              SUB      sp,sp,#0x14
000f60  4607              MOV      r7,r0
000f62  4688              MOV      r8,r1
000f64  4691              MOV      r9,r2
000f66  e9ddab13          LDRD     r10,r11,[sp,#0x4c]
000f6a  9c16              LDR      r4,[sp,#0x58]
;;;1035     LISTBOX_Handle hObj;
;;;1036     GUI_USE_PARA(ExFlags);
000f6c  bf00              NOP      
;;;1037     WM_LOCK();
;;;1038     hObj = WM_CreateWindowAsChild(x0, y0, xsize, ysize, hParent, WinFlags, LISTBOX_Callback,
000f6e  f04f0268          MOV      r2,#0x68
000f72  f2af239d          ADR      r3,LISTBOX_Callback + 1
000f76  fa1ff08a          UXTH     r0,r10
000f7a  9912              LDR      r1,[sp,#0x48]
000f7c  e9cd3202          STRD     r3,r2,[sp,#8]
000f80  e9cd1000          STRD     r1,r0,[sp,#0]
000f84  464a              MOV      r2,r9
000f86  4641              MOV      r1,r8
000f88  4638              MOV      r0,r7
000f8a  9b08              LDR      r3,[sp,#0x20]
000f8c  f7fffffe          BL       WM_CreateWindowAsChild
000f90  4605              MOV      r5,r0
;;;1039                                   sizeof(LISTBOX_Obj) - sizeof(WM_Obj));
;;;1040     if (hObj) {
000f92  b1c5              CBZ      r5,|L1.4038|
;;;1041       LISTBOX_Obj* pObj;
;;;1042       pObj = (LISTBOX_Obj *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
000f94  4628              MOV      r0,r5
000f96  f7fffffe          BL       GUI_ALLOC_h2p
000f9a  4606              MOV      r6,r0
;;;1043        /* Init sub-classes */
;;;1044       GUI_ARRAY_CREATE(&pObj->ItemArray);
;;;1045      /* init widget specific variables */
;;;1046       WIDGET__Init(&pObj->Widget, Id, WIDGET_STATE_FOCUSSABLE);
000f9c  f04f0210          MOV      r2,#0x10
000fa0  4630              MOV      r0,r6
000fa2  9915              LDR      r1,[sp,#0x54]
000fa4  f7fffffe          BL       WIDGET__Init
;;;1047       LISTBOX_INIT_ID(pObj);
;;;1048       pObj->Props = LISTBOX_DefaultProps;
000fa8  2238              MOVS     r2,#0x38
000faa  4909              LDR      r1,|L1.4048|
000fac  f1060048          ADD      r0,r6,#0x48
000fb0  f7fffffe          BL       __aeabi_memcpy4
;;;1049       if (ppText) {
000fb4  b11c              CBZ      r4,|L1.4030|
;;;1050         /* init member variables */
;;;1051         /* Set non-zero attributes */
;;;1052         LISTBOX_SetText(hObj, ppText);
000fb6  4621              MOV      r1,r4
000fb8  4628              MOV      r0,r5
000fba  f7fffffe          BL       LISTBOX_SetText
                  |L1.4030|
;;;1053       }
;;;1054       LISTBOX_UpdateScrollers(hObj);
000fbe  4628              MOV      r0,r5
000fc0  f7fffffe          BL       LISTBOX_UpdateScrollers
;;;1055     }
000fc4  bf00              NOP      
                  |L1.4038|
;;;1056     WM_UNLOCK();
;;;1057     return hObj;
000fc6  4628              MOV      r0,r5
;;;1058   }
000fc8  b009              ADD      sp,sp,#0x24
000fca  e8bd8ff0          POP      {r4-r11,pc}
;;;1059   
                          ENDP

000fce  0000              DCW      0x0000
                  |L1.4048|
                          DCD      LISTBOX_DefaultProps

                          AREA ||.data||, DATA, ALIGN=2

                  LISTBOX_DefaultProps
                          DCD      GUI_Font13_1
000004  000a              DCW      0x000a
000006  0000              DCB      0x00,0x00
                          DCD      0x00ffffff
                          DCD      0x00808080
                          DCD      0x00ff0000
                          DCD      0x00c0c0c0
                          DCD      0x00000000
                          DCD      0x00ffffff
                          DCD      0x00ffffff
                          DCD      0x00808080
                          DCD      0x0fffffff
                          DCD      0x0fffffff
                          DCD      0x0fffffff
000034  0000              DCW      0x0000
000036  0000              DCB      0x00,0x00

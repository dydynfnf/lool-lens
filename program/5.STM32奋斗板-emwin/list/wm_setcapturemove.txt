; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\wm_setcapturemove.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\wm_setcapturemove.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\wm_setcapturemove.crf GUI\WM\WM_SetCaptureMove.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  WM_SetCaptureMove PROC
;;;41     */
;;;42     void WM_SetCaptureMove(WM_HWIN hWin, const GUI_PID_STATE* pState, int MinVisibility, int LimitTop) {
000000  e92d47ff          PUSH     {r0-r10,lr}
000004  4607              MOV      r7,r0
000006  460c              MOV      r4,r1
000008  4616              MOV      r6,r2
00000a  461d              MOV      r5,r3
;;;43       if (!WM_HasCaptured(hWin)) {
00000c  4638              MOV      r0,r7
00000e  f7fffffe          BL       WM_HasCaptured
000012  b958              CBNZ     r0,|L1.44|
;;;44         WM_SetCapture(hWin, 1);        /* Set capture with auto release */
000014  2101              MOVS     r1,#1
000016  4638              MOV      r0,r7
000018  f7fffffe          BL       WM_SetCapture
;;;45         WM__CapturePoint.x = pState->x;
00001c  6820              LDR      r0,[r4,#0]
00001e  b200              SXTH     r0,r0
000020  4922              LDR      r1,|L1.172|
000022  8008              STRH     r0,[r1,#0]
;;;46         WM__CapturePoint.y = pState->y;
000024  6860              LDR      r0,[r4,#4]
000026  b200              SXTH     r0,r0
000028  8048              STRH     r0,[r1,#2]
00002a  e03d              B        |L1.168|
                  |L1.44|
;;;47       } else {                         /* Moving ... let the window move ! */
;;;48         int dx, dy;
;;;49         dx = pState->x - WM__CapturePoint.x;
00002c  491f              LDR      r1,|L1.172|
00002e  f9b11000          LDRSH    r1,[r1,#0]  ; WM__CapturePoint
000032  6820              LDR      r0,[r4,#0]
000034  eba00801          SUB      r8,r0,r1
;;;50         dy = pState->y - WM__CapturePoint.y;
000038  491c              LDR      r1,|L1.172|
00003a  f9b11002          LDRSH    r1,[r1,#2]  ; WM__CapturePoint
00003e  6860              LDR      r0,[r4,#4]
000040  eba00901          SUB      r9,r0,r1
;;;51         /* Make sure at least a part of the windows stays inside of its parent */
;;;52         if ((MinVisibility == 0) && (LimitTop == 0)) {
000044  b936              CBNZ     r6,|L1.84|
000046  b92d              CBNZ     r5,|L1.84|
;;;53           WM_MoveWindow(hWin, dx, dy);
000048  464a              MOV      r2,r9
00004a  4641              MOV      r1,r8
00004c  4638              MOV      r0,r7
00004e  f7fffffe          BL       WM_MoveWindow
000052  e028              B        |L1.166|
                  |L1.84|
;;;54         } else {
;;;55           GUI_RECT Rect, RectParent;
;;;56           WM_GetWindowRectEx(hWin, &Rect);
000054  a902              ADD      r1,sp,#8
000056  4638              MOV      r0,r7
000058  f7fffffe          BL       WM_GetWindowRectEx
;;;57           /* Check if the top region of the window should be limited */
;;;58           if (LimitTop) {
00005c  b13d              CBZ      r5,|L1.110|
;;;59             Rect.y1 = Rect.y0 + LimitTop - 1;
00005e  f8bd000a          LDRH     r0,[sp,#0xa]
000062  4428              ADD      r0,r0,r5
000064  f1a00001          SUB      r0,r0,#1
000068  b200              SXTH     r0,r0
00006a  f8ad000e          STRH     r0,[sp,#0xe]
                  |L1.110|
;;;60           }
;;;61           WM_GetWindowRectEx(WM_GetParent(hWin), &RectParent);
00006e  4638              MOV      r0,r7
000070  f7fffffe          BL       WM_GetParent
000074  4682              MOV      r10,r0
000076  4669              MOV      r1,sp
000078  f7fffffe          BL       WM_GetWindowRectEx
;;;62           GUI_MoveRect(&Rect, dx, dy);
00007c  464a              MOV      r2,r9
00007e  4641              MOV      r1,r8
000080  a802              ADD      r0,sp,#8
000082  f7fffffe          BL       GUI_MoveRect
;;;63           GUI__ReduceRect(&RectParent, &RectParent, MinVisibility);
000086  4632              MOV      r2,r6
000088  4669              MOV      r1,sp
00008a  4668              MOV      r0,sp
00008c  f7fffffe          BL       GUI__ReduceRect
;;;64           if (GUI_RectsIntersect(&Rect, &RectParent)) {
000090  4669              MOV      r1,sp
000092  a802              ADD      r0,sp,#8
000094  f7fffffe          BL       GUI_RectsIntersect
000098  b120              CBZ      r0,|L1.164|
;;;65             WM_MoveWindow(hWin, dx, dy);
00009a  464a              MOV      r2,r9
00009c  4641              MOV      r1,r8
00009e  4638              MOV      r0,r7
0000a0  f7fffffe          BL       WM_MoveWindow
                  |L1.164|
;;;66           }
;;;67         }
0000a4  bf00              NOP      
                  |L1.166|
;;;68       }
0000a6  bf00              NOP      
                  |L1.168|
;;;69     }
0000a8  e8bd87ff          POP      {r0-r10,pc}
;;;70     
                          ENDP

                  |L1.172|
                          DCD      WM__CapturePoint

                          AREA ||.data||, DATA, ALIGN=1

                  WM__CapturePoint
                          DCDU     0x00000000

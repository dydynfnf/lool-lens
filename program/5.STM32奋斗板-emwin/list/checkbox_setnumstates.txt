; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\checkbox_setnumstates.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\checkbox_setnumstates.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\checkbox_setnumstates.crf GUI\Widget\CHECKBOX_SetNumStates.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  CHECKBOX_SetNumStates PROC
;;;77     */
;;;78     void CHECKBOX_SetNumStates(CHECKBOX_Handle hObj, unsigned NumStates) {
000000  b570              PUSH     {r4-r6,lr}
000002  4606              MOV      r6,r0
000004  460d              MOV      r5,r1
;;;79       CHECKBOX_Obj * pObj;
;;;80       if (!CHECKBOX__DefaultProps.apBm[CHECKBOX_BI_INACTIV_3STATE]) {
000006  4810              LDR      r0,|L1.72|
000008  6ac0              LDR      r0,[r0,#0x2c]
00000a  b918              CBNZ     r0,|L1.20|
;;;81         CHECKBOX_SetDefaultImage(&_abmCheck[0], CHECKBOX_BI_INACTIV_3STATE);
00000c  2104              MOVS     r1,#4
00000e  480f              LDR      r0,|L1.76|
000010  f7fffffe          BL       CHECKBOX_SetDefaultImage
                  |L1.20|
;;;82       }
;;;83       if (!CHECKBOX__DefaultProps.apBm[CHECKBOX_BI_ACTIV_3STATE]) {
000014  480c              LDR      r0,|L1.72|
000016  6b00              LDR      r0,[r0,#0x30]
000018  b920              CBNZ     r0,|L1.36|
;;;84         CHECKBOX_SetDefaultImage(&_abmCheck[1], CHECKBOX_BI_ACTIV_3STATE);
00001a  2105              MOVS     r1,#5
00001c  480b              LDR      r0,|L1.76|
00001e  3014              ADDS     r0,r0,#0x14
000020  f7fffffe          BL       CHECKBOX_SetDefaultImage
                  |L1.36|
;;;85       }
;;;86       if (hObj && ((NumStates == 2) || (NumStates == 3))) {
000024  b176              CBZ      r6,|L1.68|
000026  2d02              CMP      r5,#2
000028  d001              BEQ      |L1.46|
00002a  2d03              CMP      r5,#3
00002c  d10a              BNE      |L1.68|
                  |L1.46|
;;;87         WM_LOCK();
;;;88         pObj = CHECKBOX_H2P(hObj);
00002e  4630              MOV      r0,r6
000030  f7fffffe          BL       GUI_ALLOC_h2p
000034  4604              MOV      r4,r0
;;;89         pObj->Props.apBm[CHECKBOX_BI_INACTIV_3STATE] = CHECKBOX__DefaultProps.apBm[CHECKBOX_BI_INACTIV_3STATE];
000036  4804              LDR      r0,|L1.72|
000038  6ac1              LDR      r1,[r0,#0x2c]
00003a  6561              STR      r1,[r4,#0x54]
;;;90         pObj->Props.apBm[CHECKBOX_BI_ACTIV_3STATE]   = CHECKBOX__DefaultProps.apBm[CHECKBOX_BI_ACTIV_3STATE];
00003c  6b01              LDR      r1,[r0,#0x30]
00003e  65a1              STR      r1,[r4,#0x58]
;;;91         pObj->NumStates = NumStates;
000040  f884505c          STRB     r5,[r4,#0x5c]
                  |L1.68|
;;;92         WM_UNLOCK();
;;;93       }
;;;94     }
000044  bd70              POP      {r4-r6,pc}
;;;95     
                          ENDP

000046  0000              DCW      0x0000
                  |L1.72|
                          DCD      CHECKBOX__DefaultProps
                  |L1.76|
                          DCD      _abmCheck

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  _aColorDisabled
                          DCD      0x00808080
                          DCD      0x00101010
                  _aColorEnabled
                          DCD      0x00ffffff
                          DCD      0x00000000
                  _PalCheckDisabled
                          DCD      0x00000002
000014  01000000          DCB      0x01,0x00,0x00,0x00
                          DCD      _aColorDisabled
                  _PalCheckEnabled
                          DCD      0x00000002
000020  01000000          DCB      0x01,0x00,0x00,0x00
                          DCD      _aColorEnabled
                  _acCheck
000028  00000000          DCB      0x00,0x00,0x00,0x00
00002c  00800100          DCB      0x00,0x80,0x01,0x00
000030  22801500          DCB      0x22,0x80,0x15,0x00
000034  2a001400          DCB      0x2a,0x00,0x14,0x00
000038  08000000          DCB      0x08,0x00,0x00,0x00
00003c  00000000          DCB      0x00,0x00,0x00,0x00
                  _abmCheck
000040  000b000b          DCW      0x000b,0x000b
000044  00020001          DCW      0x0002,0x0001
                          DCD      _acCheck
                          DCD      _PalCheckDisabled
                          DCD      0x00000000
000054  000b000b          DCW      0x000b,0x000b
000058  00020001          DCW      0x0002,0x0001
                          DCD      _acCheck
                          DCD      _PalCheckEnabled
                          DCD      0x00000000

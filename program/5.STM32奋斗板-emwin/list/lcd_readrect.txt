; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\lcd_readrect.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\lcd_readrect.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\lcd_readrect.crf GUI\Core\LCD_ReadRect.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  LCD_ReadRect PROC
;;;34     */
;;;35     void LCD_ReadRect(int x0, int y0, int x1, int y1, LCD_PIXELINDEX * pBuffer, const tLCDDEV_APIList * pAPI) {
000000  e92d4ff8          PUSH     {r3-r11,lr}
000004  4607              MOV      r7,r0
000006  460c              MOV      r4,r1
000008  4690              MOV      r8,r2
00000a  4699              MOV      r9,r3
00000c  e9dd5a0a          LDRD     r5,r10,[sp,#0x28]
;;;36       void (* pfReadRect)(int x0, int y0, int x1, int y1, LCD_PIXELINDEX * pBuffer);
;;;37       pfReadRect = (void (*)(int, int, int, int, LCD_PIXELINDEX *))pAPI->pfGetDevFunc(LCD_DEVFUNC_READRECT);
000010  f04f0001          MOV      r0,#1
000014  f8da1030          LDR      r1,[r10,#0x30]
000018  4788              BLX      r1
00001a  4683              MOV      r11,r0
;;;38       if (!pfReadRect) {
00001c  f1bb0f00          CMP      r11,#0
000020  d113              BNE      |L1.74|
;;;39         while (y0 <= y1) {
000022  e00f              B        |L1.68|
                  |L1.36|
;;;40           int x;
;;;41           for (x = x0; x <= x1; x++) {
000024  463e              MOV      r6,r7
000026  e008              B        |L1.58|
                  |L1.40|
;;;42             *pBuffer++ = pAPI->pfGetPixelIndex(x, y0);
000028  4621              MOV      r1,r4
00002a  4630              MOV      r0,r6
00002c  f8da201c          LDR      r2,[r10,#0x1c]
000030  4790              BLX      r2
000032  f8250b02          STRH     r0,[r5],#2
000036  f1060601          ADD      r6,r6,#1              ;41
                  |L1.58|
00003a  4546              CMP      r6,r8                 ;41
00003c  ddf4              BLE      |L1.40|
;;;43           }
;;;44           y0++;
00003e  f1040401          ADD      r4,r4,#1
;;;45         }
000042  bf00              NOP      
                  |L1.68|
000044  454c              CMP      r4,r9                 ;39
000046  dded              BLE      |L1.36|
000048  e005              B        |L1.86|
                  |L1.74|
;;;46       } else {
;;;47         pfReadRect(x0, y0, x1, y1, pBuffer);
00004a  464b              MOV      r3,r9
00004c  4642              MOV      r2,r8
00004e  4621              MOV      r1,r4
000050  4638              MOV      r0,r7
000052  9500              STR      r5,[sp,#0]
000054  47d8              BLX      r11
                  |L1.86|
;;;48       }
;;;49     }
000056  e8bd8ff8          POP      {r3-r11,pc}
;;;50     
                          ENDP


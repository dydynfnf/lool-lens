; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\gui_errorout.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\gui_errorout.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\gui_errorout.crf GUI\Core\GUI_ErrorOut.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  _CopyString PROC
;;;43     */
;;;44     static void _CopyString(char*d, const char*s, int MaxLen) {
000000  e005              B        |L1.14|
                  |L1.2|
;;;45       while ((MaxLen > 0) && *s) {
;;;46         *d++ = *s++;
000002  f8113b01          LDRB     r3,[r1],#1
000006  f8003b01          STRB     r3,[r0],#1
;;;47         MaxLen--;
00000a  f1a20201          SUB      r2,r2,#1
                  |L1.14|
00000e  2a00              CMP      r2,#0                 ;45
000010  dd02              BLE      |L1.24|
000012  780b              LDRB     r3,[r1,#0]            ;45
000014  2b00              CMP      r3,#0                 ;45
000016  d1f4              BNE      |L1.2|
                  |L1.24|
;;;48       }
;;;49       *d = 0;
000018  f04f0300          MOV      r3,#0
00001c  7003              STRB     r3,[r0,#0]
;;;50     }
00001e  4770              BX       lr
;;;51     
                          ENDP

                  GUI_ErrorOut PROC
;;;61     */
;;;62     void GUI_ErrorOut(const char *s) { GUI_X_ErrorOut(s); }
000020  b510              PUSH     {r4,lr}
000022  4604              MOV      r4,r0
000024  4620              MOV      r0,r4
000026  f7fffffe          BL       GUI_X_ErrorOut
00002a  bd10              POP      {r4,pc}
;;;63     
                          ENDP

                  GUI_ErrorOut1 PROC
;;;67     */
;;;68     void GUI_ErrorOut1(const char *s, int p0) {
00002c  b530              PUSH     {r4,r5,lr}
00002e  b091              SUB      sp,sp,#0x44
000030  4604              MOV      r4,r0
000032  460d              MOV      r5,r1
;;;69       char ac[MAXLEN + 10];
;;;70       char* sOut = ac;
000034  a802              ADD      r0,sp,#8
000036  9001              STR      r0,[sp,#4]
;;;71       GUI_MEMSET((U8*)ac, 0, sizeof(ac));
000038  f04f023c          MOV      r2,#0x3c
00003c  f04f0100          MOV      r1,#0
000040  f7fffffe          BL       GUI__memset
;;;72       _CopyString(ac, s, MAXLEN);
000044  2232              MOVS     r2,#0x32
000046  4621              MOV      r1,r4
000048  a802              ADD      r0,sp,#8
00004a  f7fffffe          BL       _CopyString
;;;73       sOut += strlen(sOut);
00004e  9801              LDR      r0,[sp,#4]
000050  f7fffffe          BL       strlen
000054  9901              LDR      r1,[sp,#4]
000056  4408              ADD      r0,r0,r1
000058  9001              STR      r0,[sp,#4]
;;;74       GUI__AddSpaceHex(p0, 8, &sOut);
00005a  aa01              ADD      r2,sp,#4
00005c  f04f0108          MOV      r1,#8
000060  4628              MOV      r0,r5
000062  f7fffffe          BL       GUI__AddSpaceHex
;;;75       GUI_ErrorOut(ac);
000066  a802              ADD      r0,sp,#8
000068  f7fffffe          BL       GUI_ErrorOut
;;;76     }
00006c  b011              ADD      sp,sp,#0x44
00006e  bd30              POP      {r4,r5,pc}
;;;77     
                          ENDP

                  GUI_ErrorOut2 PROC
;;;81     */
;;;82     void GUI_ErrorOut2(const char *s, int p0, int p1) {
000070  b570              PUSH     {r4-r6,lr}
000072  b094              SUB      sp,sp,#0x50
000074  4604              MOV      r4,r0
000076  460d              MOV      r5,r1
000078  4616              MOV      r6,r2
;;;83       char ac[MAXLEN + 20];
;;;84       char* sOut = ac;
00007a  a802              ADD      r0,sp,#8
00007c  9001              STR      r0,[sp,#4]
;;;85       GUI_MEMSET((U8*)ac, 0, sizeof(ac));
00007e  f04f0246          MOV      r2,#0x46
000082  f04f0100          MOV      r1,#0
000086  f7fffffe          BL       GUI__memset
;;;86       _CopyString(ac, s, MAXLEN);
00008a  2232              MOVS     r2,#0x32
00008c  4621              MOV      r1,r4
00008e  a802              ADD      r0,sp,#8
000090  f7fffffe          BL       _CopyString
;;;87       sOut += strlen(sOut);
000094  9801              LDR      r0,[sp,#4]
000096  f7fffffe          BL       strlen
00009a  9901              LDR      r1,[sp,#4]
00009c  4408              ADD      r0,r0,r1
00009e  9001              STR      r0,[sp,#4]
;;;88       GUI__AddSpaceHex(p0, 8, &sOut);
0000a0  aa01              ADD      r2,sp,#4
0000a2  f04f0108          MOV      r1,#8
0000a6  4628              MOV      r0,r5
0000a8  f7fffffe          BL       GUI__AddSpaceHex
;;;89       GUI__AddSpaceHex(p1, 8, &sOut);
0000ac  aa01              ADD      r2,sp,#4
0000ae  2108              MOVS     r1,#8
0000b0  4630              MOV      r0,r6
0000b2  f7fffffe          BL       GUI__AddSpaceHex
;;;90       GUI_ErrorOut(ac);
0000b6  a802              ADD      r0,sp,#8
0000b8  f7fffffe          BL       GUI_ErrorOut
;;;91     }
0000bc  b014              ADD      sp,sp,#0x50
0000be  bd70              POP      {r4-r6,pc}
;;;92     
                          ENDP

                  GUI_ErrorOut3 PROC
;;;96     */
;;;97     void GUI_ErrorOut3(const char *s, int p0, int p1, int p2) {
0000c0  b5f0              PUSH     {r4-r7,lr}
0000c2  b095              SUB      sp,sp,#0x54
0000c4  4604              MOV      r4,r0
0000c6  460d              MOV      r5,r1
0000c8  4616              MOV      r6,r2
0000ca  461f              MOV      r7,r3
;;;98       char ac[MAXLEN + 30];
;;;99       char* sOut = ac;
0000cc  a801              ADD      r0,sp,#4
0000ce  9000              STR      r0,[sp,#0]
;;;100      GUI_MEMSET((U8*)ac, 0, sizeof(ac));
0000d0  f04f0250          MOV      r2,#0x50
0000d4  f04f0100          MOV      r1,#0
0000d8  f7fffffe          BL       GUI__memset
;;;101      _CopyString(ac, s, MAXLEN);
0000dc  2232              MOVS     r2,#0x32
0000de  4621              MOV      r1,r4
0000e0  a801              ADD      r0,sp,#4
0000e2  f7fffffe          BL       _CopyString
;;;102      sOut += strlen(sOut);
0000e6  9800              LDR      r0,[sp,#0]
0000e8  f7fffffe          BL       strlen
0000ec  9900              LDR      r1,[sp,#0]
0000ee  4408              ADD      r0,r0,r1
0000f0  9000              STR      r0,[sp,#0]
;;;103      GUI__AddSpaceHex(p0, 8, &sOut);
0000f2  466a              MOV      r2,sp
0000f4  f04f0108          MOV      r1,#8
0000f8  4628              MOV      r0,r5
0000fa  f7fffffe          BL       GUI__AddSpaceHex
;;;104      GUI__AddSpaceHex(p1, 8, &sOut);
0000fe  466a              MOV      r2,sp
000100  2108              MOVS     r1,#8
000102  4630              MOV      r0,r6
000104  f7fffffe          BL       GUI__AddSpaceHex
;;;105      GUI__AddSpaceHex(p2, 8, &sOut);
000108  466a              MOV      r2,sp
00010a  2108              MOVS     r1,#8
00010c  4638              MOV      r0,r7
00010e  f7fffffe          BL       GUI__AddSpaceHex
;;;106      GUI_ErrorOut(ac);
000112  a801              ADD      r0,sp,#4
000114  f7fffffe          BL       GUI_ErrorOut
;;;107    }
000118  b015              ADD      sp,sp,#0x54
00011a  bdf0              POP      {r4-r7,pc}
;;;108    
                          ENDP

                  GUI_ErrorOut4 PROC
;;;112    */
;;;113    void GUI_ErrorOut4(const char *s, int p0, int p1, int p2, int p3) {
00011c  e92d41f0          PUSH     {r4-r8,lr}
000120  b098              SUB      sp,sp,#0x60
000122  4604              MOV      r4,r0
000124  460d              MOV      r5,r1
000126  4616              MOV      r6,r2
000128  461f              MOV      r7,r3
00012a  f8dd8078          LDR      r8,[sp,#0x78]
;;;114      char ac[MAXLEN + 40] = {0};
00012e  f04f015c          MOV      r1,#0x5c
000132  a801              ADD      r0,sp,#4
000134  f7fffffe          BL       __aeabi_memclr4
;;;115      char* sOut = ac;
000138  a801              ADD      r0,sp,#4
00013a  9000              STR      r0,[sp,#0]
;;;116      GUI_MEMSET((U8*)ac, 0, sizeof(ac));
00013c  225a              MOVS     r2,#0x5a
00013e  2100              MOVS     r1,#0
000140  f7fffffe          BL       GUI__memset
;;;117      _CopyString(ac, s, MAXLEN);
000144  2232              MOVS     r2,#0x32
000146  4621              MOV      r1,r4
000148  a801              ADD      r0,sp,#4
00014a  f7fffffe          BL       _CopyString
;;;118      sOut += strlen(sOut);
00014e  9800              LDR      r0,[sp,#0]
000150  f7fffffe          BL       strlen
000154  9900              LDR      r1,[sp,#0]
000156  4408              ADD      r0,r0,r1
000158  9000              STR      r0,[sp,#0]
;;;119      GUI__AddSpaceHex(p0, 8, &sOut);
00015a  466a              MOV      r2,sp
00015c  f04f0108          MOV      r1,#8
000160  4628              MOV      r0,r5
000162  f7fffffe          BL       GUI__AddSpaceHex
;;;120      GUI__AddSpaceHex(p1, 8, &sOut);
000166  466a              MOV      r2,sp
000168  2108              MOVS     r1,#8
00016a  4630              MOV      r0,r6
00016c  f7fffffe          BL       GUI__AddSpaceHex
;;;121      GUI__AddSpaceHex(p2, 8, &sOut);
000170  466a              MOV      r2,sp
000172  2108              MOVS     r1,#8
000174  4638              MOV      r0,r7
000176  f7fffffe          BL       GUI__AddSpaceHex
;;;122      GUI__AddSpaceHex(p3, 8, &sOut);
00017a  466a              MOV      r2,sp
00017c  2108              MOVS     r1,#8
00017e  4640              MOV      r0,r8
000180  f7fffffe          BL       GUI__AddSpaceHex
;;;123      GUI_ErrorOut(ac);
000184  a801              ADD      r0,sp,#4
000186  f7fffffe          BL       GUI_ErrorOut
;;;124    }
00018a  b018              ADD      sp,sp,#0x60
00018c  e8bd81f0          POP      {r4-r8,pc}
;;;125    
                          ENDP


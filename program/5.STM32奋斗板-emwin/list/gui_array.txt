; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\gui_array.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\gui_array.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\gui_array.crf GUI\Widget\GUI_ARRAY.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  GUI_ARRAY_GetNumItems PROC
;;;34     */
;;;35     unsigned int GUI_ARRAY_GetNumItems(const GUI_ARRAY* pThis) {
000000  4601              MOV      r1,r0
;;;36       GUI_ARRAY_CHECK(pThis);    /* Sanity checks at higher debug levels only */
;;;37     
;;;38       return pThis->NumItems;
000002  8808              LDRH     r0,[r1,#0]
;;;39     }
000004  4770              BX       lr
;;;40     
                          ENDP

                  GUI_ARRAY_AddItem PROC
;;;55     */
;;;56     int GUI_ARRAY_AddItem(GUI_ARRAY* pThis, const void *pNew, int Len) {
000006  e92d5ff0          PUSH     {r4-r12,lr}
00000a  4604              MOV      r4,r0
00000c  4688              MOV      r8,r1
00000e  4616              MOV      r6,r2
;;;57       WM_HMEM hNewItem = 0;
000010  f04f0900          MOV      r9,#0
;;;58       WM_HMEM hNewBuffer;
;;;59       WM_HMEM *pNewBuffer;
;;;60       int r = 0;
000014  46ca              MOV      r10,r9
;;;61     
;;;62       GUI_ARRAY_CHECK(pThis);    /* Sanity checks at higher debug levels only */
;;;63     
;;;64       WM_LOCK();
;;;65       /* Alloc memory for new item */
;;;66       if (Len) {
000016  b146              CBZ      r6,|L1.42|
;;;67         if ((hNewItem = GUI_ALLOC_AllocInit(pNew, Len)) == 0) {
000018  b231              SXTH     r1,r6
00001a  4640              MOV      r0,r8
00001c  f7fffffe          BL       GUI_ALLOC_AllocInit
000020  ea5f0900          MOVS     r9,r0
000024  d101              BNE      |L1.42|
;;;68           GUI_DEBUG_ERROROUT("GUI_ARRAY_AddItem failed to alloc buffer");
;;;69           r = 1;            /* Error */
000026  f04f0a01          MOV      r10,#1
                  |L1.42|
;;;70         }
;;;71       }
;;;72       /* Put handle of new item into the array */
;;;73       if (r == 0) {
00002a  f1ba0f00          CMP      r10,#0
00002e  d11c              BNE      |L1.106|
;;;74         int NumItems;
;;;75         NumItems = pThis->NumItems;
000030  f8b4b000          LDRH     r11,[r4,#0]
;;;76         /* Add the handle to new item to the buffer */
;;;77         hNewBuffer = GUI_ALLOC_Realloc(pThis->haHandle, (NumItems + 1) * sizeof(WM_HMEM));
000034  f10b0201          ADD      r2,r11,#1
000038  0051              LSLS     r1,r2,#1
00003a  f9b40002          LDRSH    r0,[r4,#2]
00003e  f7fffffe          BL       GUI_ALLOC_Realloc
000042  4605              MOV      r5,r0
;;;78         if (hNewBuffer == 0) {
000044  b92d              CBNZ     r5,|L1.82|
;;;79           GUI_DEBUG_ERROROUT("GUI_ARRAY_AddItem failed to alloc buffer");
;;;80           GUI_ALLOC_Free(hNewItem);
000046  4648              MOV      r0,r9
000048  f7fffffe          BL       GUI_ALLOC_Free
;;;81           r = 1;            /* Error */
00004c  f04f0a01          MOV      r10,#1
000050  e00a              B        |L1.104|
                  |L1.82|
;;;82         } else {
;;;83           pNewBuffer = (WM_HMEM*) GUI_ALLOC_h2p(hNewBuffer);
000052  4628              MOV      r0,r5
000054  f7fffffe          BL       GUI_ALLOC_h2p
000058  4607              MOV      r7,r0
;;;84           *(pNewBuffer + NumItems) = hNewItem;
00005a  f827901b          STRH     r9,[r7,r11,LSL #1]
;;;85           pThis->haHandle = hNewBuffer;
00005e  8065              STRH     r5,[r4,#2]
;;;86           pThis->NumItems++;
000060  8820              LDRH     r0,[r4,#0]
000062  f1000001          ADD      r0,r0,#1
000066  8020              STRH     r0,[r4,#0]
                  |L1.104|
;;;87         }
;;;88       }
000068  bf00              NOP      
                  |L1.106|
;;;89       WM_UNLOCK();
;;;90       return r;
00006a  4650              MOV      r0,r10
;;;91     }
00006c  e8bd9ff0          POP      {r4-r12,pc}
;;;92     
                          ENDP

                  GUI_ARRAY_Delete PROC
;;;103    */
;;;104    void GUI_ARRAY_Delete(GUI_ARRAY* pThis) {
000070  e92d41f0          PUSH     {r4-r8,lr}
000074  4604              MOV      r4,r0
;;;105      int i;
;;;106      WM_HMEM ha;
;;;107      WM_HMEM* pa;
;;;108    
;;;109      GUI_ARRAY_CHECK(pThis);    /* Sanity checks at higher debug levels only */
;;;110    
;;;111      ha = pThis->haHandle;
000076  f9b47002          LDRSH    r7,[r4,#2]
;;;112      if (ha) {
00007a  b1af              CBZ      r7,|L1.168|
;;;113        pa = (WM_HMEM*) GUI_ALLOC_h2p(ha);
00007c  4638              MOV      r0,r7
00007e  f7fffffe          BL       GUI_ALLOC_h2p
000082  4606              MOV      r6,r0
;;;114        /* Free the attached items, one at a time */
;;;115        for (i = 0; i < pThis->NumItems; i++) {
000084  f04f0500          MOV      r5,#0
000088  e005              B        |L1.150|
                  |L1.138|
;;;116          GUI_ALLOC_FreePtr(pa+i);
00008a  eb060045          ADD      r0,r6,r5,LSL #1
00008e  f7fffffe          BL       GUI_ALLOC_FreePtr
000092  f1050501          ADD      r5,r5,#1              ;115
                  |L1.150|
000096  8820              LDRH     r0,[r4,#0]            ;115
000098  42a8              CMP      r0,r5                 ;115
00009a  dcf6              BGT      |L1.138|
;;;117        }
;;;118        /* Free the handle buffer */
;;;119        GUI_ALLOC_FreePtr(&pThis->haHandle);
00009c  1ca0              ADDS     r0,r4,#2
00009e  f7fffffe          BL       GUI_ALLOC_FreePtr
;;;120        pThis->NumItems = 0;                    /* For safety, in case the array is used after it has been deleted */
0000a2  f04f0000          MOV      r0,#0
0000a6  8020              STRH     r0,[r4,#0]
                  |L1.168|
;;;121      }
;;;122      #if GUI_DEBUG_LEVEL >= GUI_DEBUG_LEVEL_CHECK_ALL
;;;123        pThis->InitState = GUI_ARRAY_STATE_DELETED;
;;;124      #endif
;;;125    }
0000a8  e8bd81f0          POP      {r4-r8,pc}
;;;126    
                          ENDP

                  GUI_ARRAY_SethItem PROC
;;;145    */
;;;146    int GUI_ARRAY_SethItem(GUI_ARRAY* pThis, unsigned int Index, WM_HMEM hItem) {
0000ac  e92d47f0          PUSH     {r4-r10,lr}
0000b0  4604              MOV      r4,r0
0000b2  460d              MOV      r5,r1
0000b4  4690              MOV      r8,r2
;;;147      WM_HMEM ha;
;;;148      WM_HMEM* pa;
;;;149      int r = 1;
0000b6  f04f0901          MOV      r9,#1
;;;150    
;;;151      GUI_ARRAY_CHECK(pThis);    /* Sanity checks at higher debug levels only */
;;;152    
;;;153      if (Index < (unsigned)pThis->NumItems) {
0000ba  8820              LDRH     r0,[r4,#0]
0000bc  42a8              CMP      r0,r5
0000be  d90f              BLS      |L1.224|
;;;154        ha = pThis->haHandle;
0000c0  f9b46002          LDRSH    r6,[r4,#2]
;;;155        if (ha) {
0000c4  b166              CBZ      r6,|L1.224|
;;;156          pa = (WM_HMEM*) GUI_ALLOC_h2p(ha);
0000c6  4630              MOV      r0,r6
0000c8  f7fffffe          BL       GUI_ALLOC_h2p
0000cc  4607              MOV      r7,r0
;;;157          pa += Index;
0000ce  eb070745          ADD      r7,r7,r5,LSL #1
;;;158          GUI_ALLOC_FreePtr(pa);
0000d2  4638              MOV      r0,r7
0000d4  f7fffffe          BL       GUI_ALLOC_FreePtr
;;;159          *pa = hItem;
0000d8  f8a78000          STRH     r8,[r7,#0]
;;;160          r = 0;
0000dc  f04f0900          MOV      r9,#0
                  |L1.224|
;;;161        }
;;;162      }
;;;163      return r;
0000e0  4648              MOV      r0,r9
;;;164    }
0000e2  e8bd87f0          POP      {r4-r10,pc}
;;;165    
                          ENDP

                  GUI_ARRAY_SetItem PROC
;;;184    */
;;;185    WM_HMEM  GUI_ARRAY_SetItem(GUI_ARRAY* pThis, unsigned int Index, const void* pData, int Len) {
0000e6  e92d5ff0          PUSH     {r4-r12,lr}
0000ea  4607              MOV      r7,r0
0000ec  4688              MOV      r8,r1
0000ee  4691              MOV      r9,r2
0000f0  461d              MOV      r5,r3
;;;186      WM_HMEM hItem = 0;
0000f2  f04f0400          MOV      r4,#0
;;;187    
;;;188      GUI_ARRAY_CHECK(pThis);    /* Sanity checks at higher debug levels only */
;;;189    
;;;190      if (Index < (unsigned)pThis->NumItems) {
0000f6  8838              LDRH     r0,[r7,#0]
0000f8  4540              CMP      r0,r8
0000fa  d92e              BLS      |L1.346|
;;;191        WM_HMEM ha;
;;;192        ha = pThis->haHandle;
0000fc  f9b7a002          LDRSH    r10,[r7,#2]
;;;193        if (ha) {
000100  f1ba0f00          CMP      r10,#0
000104  d028              BEQ      |L1.344|
;;;194          WM_HMEM* pa;
;;;195          pa = (WM_HMEM*) GUI_ALLOC_h2p(ha);
000106  4650              MOV      r0,r10
000108  f7fffffe          BL       GUI_ALLOC_h2p
00010c  4606              MOV      r6,r0
;;;196          pa += Index;
00010e  eb060648          ADD      r6,r6,r8,LSL #1
;;;197          hItem = *pa;
000112  f9b64000          LDRSH    r4,[r6,#0]
;;;198          /*
;;;199           * If a buffer is already available, a new buffer is only needed when the
;;;200           * new item has a different size.
;;;201           */
;;;202          if (hItem) {
000116  b134              CBZ      r4,|L1.294|
;;;203            if (GUI_ALLOC_GetSize(hItem) != Len) {
000118  4620              MOV      r0,r4
00011a  f7fffffe          BL       GUI_ALLOC_GetSize
00011e  42a8              CMP      r0,r5
000120  d001              BEQ      |L1.294|
;;;204              hItem = 0;
000122  f04f0400          MOV      r4,#0
                  |L1.294|
;;;205            }
;;;206          }
;;;207          /*
;;;208           * Allocate a new buffer and free the old one (if needed). 
;;;209           */
;;;210          if (!hItem) {
000126  b944              CBNZ     r4,|L1.314|
;;;211            hItem = GUI_ALLOC_AllocZero(Len);
000128  b228              SXTH     r0,r5
00012a  f7fffffe          BL       GUI_ALLOC_AllocZero
00012e  4604              MOV      r4,r0
;;;212            if (hItem) {
000130  b11c              CBZ      r4,|L1.314|
;;;213              GUI_ALLOC_FreePtr(pa);
000132  4630              MOV      r0,r6
000134  f7fffffe          BL       GUI_ALLOC_FreePtr
;;;214              *pa = hItem;
000138  8034              STRH     r4,[r6,#0]
                  |L1.314|
;;;215            }
;;;216          }
;;;217          /*
;;;218           * Set the item (if needed)
;;;219           */
;;;220          if (pData && hItem) {
00013a  f1b90f00          CMP      r9,#0
00013e  d00a              BEQ      |L1.342|
000140  b14c              CBZ      r4,|L1.342|
;;;221            char* pItem = (char*) GUI_ALLOC_h2p(hItem);
000142  4620              MOV      r0,r4
000144  f7fffffe          BL       GUI_ALLOC_h2p
000148  4683              MOV      r11,r0
;;;222            memcpy(pItem, pData, Len);
00014a  462a              MOV      r2,r5
00014c  4649              MOV      r1,r9
00014e  4658              MOV      r0,r11
000150  f7fffffe          BL       __aeabi_memcpy
;;;223          }
000154  bf00              NOP      
                  |L1.342|
;;;224        }
000156  bf00              NOP      
                  |L1.344|
;;;225      }
000158  bf00              NOP      
                  |L1.346|
;;;226      return hItem;
00015a  4620              MOV      r0,r4
;;;227    }
00015c  e8bd9ff0          POP      {r4-r12,pc}
;;;228    
                          ENDP

                  GUI_ARRAY_GethItem PROC
;;;240    */
;;;241    WM_HMEM GUI_ARRAY_GethItem(const GUI_ARRAY* pThis, unsigned int Index) {
000160  e92d41f0          PUSH     {r4-r8,lr}
000164  4604              MOV      r4,r0
000166  460d              MOV      r5,r1
;;;242      WM_HMEM h = 0;
000168  f04f0800          MOV      r8,#0
;;;243    
;;;244      GUI_ARRAY_CHECK(pThis);    /* Sanity checks at higher debug levels only */
;;;245    
;;;246      if (Index < (unsigned)pThis->NumItems) {
00016c  8820              LDRH     r0,[r4,#0]
00016e  42a8              CMP      r0,r5
000170  d909              BLS      |L1.390|
;;;247        WM_HMEM  ha;
;;;248        WM_HMEM* pa;
;;;249        ha = pThis->haHandle;
000172  f9b47002          LDRSH    r7,[r4,#2]
;;;250        if (ha) {
000176  b12f              CBZ      r7,|L1.388|
;;;251          pa = (WM_HMEM*) GUI_ALLOC_h2p(ha);
000178  4638              MOV      r0,r7
00017a  f7fffffe          BL       GUI_ALLOC_h2p
00017e  4606              MOV      r6,r0
;;;252          h = *(pa + Index);
000180  f9368015          LDRSH    r8,[r6,r5,LSL #1]
                  |L1.388|
;;;253        }
;;;254      }
000184  bf00              NOP      
                  |L1.390|
;;;255      return h;
000186  4640              MOV      r0,r8
;;;256    }
000188  e8bd81f0          POP      {r4-r8,pc}
;;;257    
                          ENDP

                  GUI_ARRAY_GetpItem PROC
;;;272    */
;;;273    void* GUI_ARRAY_GetpItem(const GUI_ARRAY* pThis, unsigned int Index) {
00018c  e92d41f0          PUSH     {r4-r8,lr}
000190  4605              MOV      r5,r0
000192  460e              MOV      r6,r1
;;;274      void* p = NULL;
000194  f04f0700          MOV      r7,#0
;;;275      WM_HMEM h;
;;;276    
;;;277      GUI_ARRAY_CHECK(pThis);    /* Sanity checks at higher debug levels only */
;;;278    
;;;279      h = GUI_ARRAY_GethItem(pThis, Index);
000198  4631              MOV      r1,r6
00019a  4628              MOV      r0,r5
00019c  f7fffffe          BL       GUI_ARRAY_GethItem
0001a0  4604              MOV      r4,r0
;;;280      if (h) {
0001a2  b11c              CBZ      r4,|L1.428|
;;;281        p = WM_H2P(h);
0001a4  4620              MOV      r0,r4
0001a6  f7fffffe          BL       GUI_ALLOC_h2p
0001aa  4607              MOV      r7,r0
                  |L1.428|
;;;282      }
;;;283      return p;
0001ac  4638              MOV      r0,r7
;;;284    }
0001ae  e8bd81f0          POP      {r4-r8,pc}
;;;285    
                          ENDP


; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\gui_drawbitmapex.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\gui_drawbitmapex.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\gui_drawbitmapex.crf GUI\Core\GUI_DrawBitmapEx.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  GL_DrawBitmapEx PROC
;;;35     */
;;;36     static void GL_DrawBitmapEx(const GUI_BITMAP GUI_UNI_PTR * pBitmap, int x0, int y0,
000000  e92d4fff          PUSH     {r0-r11,lr}
;;;37                                 int xCenter, int yCenter, int xMag, int yMag) {
000004  b08f              SUB      sp,sp,#0x3c
000006  4604              MOV      r4,r0
000008  460d              MOV      r5,r1
;;;38       LCD_PIXELINDEX Index, IndexPrev = 0;
00000a  f04f0000          MOV      r0,#0
00000e  900e              STR      r0,[sp,#0x38]
;;;39       LCD_COLOR Color;
;;;40       int x, y, xi, yi, xSize, ySize, xAct, xStart, xMagAbs, xiMag, yMin, yMax, yEnd, yPrev, yStep;
;;;41       char Cached, HasTrans = 0;
000010  9001              STR      r0,[sp,#4]
;;;42       /* Use clipping rect to reduce calculation */
;;;43       yMin = GUI_Context.ClipRect.y0;
000012  48d8              LDR      r0,|L1.884|
000014  f9b0000a          LDRSH    r0,[r0,#0xa]
000018  9006              STR      r0,[sp,#0x18]
;;;44       yMax = GUI_Context.ClipRect.y1;
00001a  48d6              LDR      r0,|L1.884|
00001c  f9b0000e          LDRSH    r0,[r0,#0xe]
000020  9005              STR      r0,[sp,#0x14]
;;;45       /* Init some values */
;;;46       xSize    = pBitmap->XSize;
000022  8820              LDRH     r0,[r4,#0]
000024  900b              STR      r0,[sp,#0x2c]
;;;47       ySize    = pBitmap->YSize;
000026  8860              LDRH     r0,[r4,#2]
000028  900a              STR      r0,[sp,#0x28]
;;;48       xMagAbs  = ((xMag < 0) ? -xMag : xMag);
00002a  981d              LDR      r0,[sp,#0x74]
00002c  2800              CMP      r0,#0
00002e  da03              BGE      |L1.56|
000030  981d              LDR      r0,[sp,#0x74]
000032  f1c00000          RSB      r0,r0,#0
000036  e000              B        |L1.58|
                  |L1.56|
000038  981d              LDR      r0,[sp,#0x74]
                  |L1.58|
00003a  9008              STR      r0,[sp,#0x20]
;;;49       x0      -= (I32)((xMag < 0) ? xSize - xCenter - 1 : xCenter) * (I32)(xMagAbs) / (I32)(1000);
00003c  981d              LDR      r0,[sp,#0x74]
00003e  2800              CMP      r0,#0
000040  da06              BGE      |L1.80|
000042  9912              LDR      r1,[sp,#0x48]
000044  980b              LDR      r0,[sp,#0x2c]
000046  eba00001          SUB      r0,r0,r1
00004a  f1a00001          SUB      r0,r0,#1
00004e  e000              B        |L1.82|
                  |L1.80|
000050  9812              LDR      r0,[sp,#0x48]
                  |L1.82|
000052  9908              LDR      r1,[sp,#0x20]
000054  4348              MULS     r0,r1,r0
000056  f44f717a          MOV      r1,#0x3e8
00005a  fb90f0f1          SDIV     r0,r0,r1
00005e  eba50500          SUB      r5,r5,r0
;;;50       yEnd     = y0 + GUI__DivideRound32(((I32)(-yCenter) * (I32)(yMag)), 1000);
000062  991c              LDR      r1,[sp,#0x70]
000064  f1c10100          RSB      r1,r1,#0
000068  9a1e              LDR      r2,[sp,#0x78]
00006a  fb01f002          MUL      r0,r1,r2
00006e  f44f717a          MOV      r1,#0x3e8
000072  f7fffffe          BL       GUI__DivideRound32
000076  9911              LDR      r1,[sp,#0x44]
000078  eb000b01          ADD      r11,r0,r1
;;;51       yPrev    = yEnd + 1;
00007c  f10b0001          ADD      r0,r11,#1
000080  9004              STR      r0,[sp,#0x10]
;;;52       yStep = (yMag < 0) ? -1 : 1;
000082  981e              LDR      r0,[sp,#0x78]
000084  2800              CMP      r0,#0
000086  da02              BGE      |L1.142|
000088  f04f30ff          MOV      r0,#0xffffffff
00008c  e001              B        |L1.146|
                  |L1.142|
00008e  f04f0001          MOV      r0,#1
                  |L1.146|
000092  9003              STR      r0,[sp,#0xc]
;;;53       if (pBitmap->pPal) {
000094  68e0              LDR      r0,[r4,#0xc]
000096  b128              CBZ      r0,|L1.164|
;;;54         if (pBitmap->pPal->HasTrans) {
000098  68e0              LDR      r0,[r4,#0xc]
00009a  7900              LDRB     r0,[r0,#4]
00009c  b110              CBZ      r0,|L1.164|
;;;55           HasTrans = 1;
00009e  f04f0001          MOV      r0,#1
0000a2  9001              STR      r0,[sp,#4]
                  |L1.164|
;;;56         }
;;;57       }
;;;58       for (yi = 0; yi < ySize; yi++) {
0000a4  f04f0900          MOV      r9,#0
0000a8  e0bb              B        |L1.546|
                  |L1.170|
;;;59         y = yEnd;
0000aa  465e              MOV      r6,r11
;;;60         yEnd = y0 + GUI__DivideRound32(((I32)(yi + 1 - yCenter) * (I32)(yMag)), 1000);
0000ac  f1090101          ADD      r1,r9,#1
0000b0  9a1c              LDR      r2,[sp,#0x70]
0000b2  eba10102          SUB      r1,r1,r2
0000b6  9a1e              LDR      r2,[sp,#0x78]
0000b8  fb01f002          MUL      r0,r1,r2
0000bc  f44f717a          MOV      r1,#0x3e8
0000c0  f7fffffe          BL       GUI__DivideRound32
0000c4  9911              LDR      r1,[sp,#0x44]
0000c6  eb000b01          ADD      r11,r0,r1
;;;61         if (y != yPrev) {
0000ca  9804              LDR      r0,[sp,#0x10]
0000cc  4286              CMP      r6,r0
0000ce  d07d              BEQ      |L1.460|
;;;62           yPrev = y;
0000d0  9604              STR      r6,[sp,#0x10]
;;;63           do {
0000d2  bf00              NOP      
                  |L1.212|
;;;64             if ((y >= yMin) && (y <= yMax)) {
0000d4  9806              LDR      r0,[sp,#0x18]
0000d6  4286              CMP      r6,r0
0000d8  db79              BLT      |L1.462|
0000da  9805              LDR      r0,[sp,#0x14]
0000dc  4286              CMP      r6,r0
0000de  dc76              BGT      |L1.462|
;;;65               xStart = -1;
0000e0  f04f3aff          MOV      r10,#0xffffffff
;;;66               x      =  0;
0000e4  f04f0800          MOV      r8,#0
;;;67               xiMag  =  0;
0000e8  4640              MOV      r0,r8
0000ea  9007              STR      r0,[sp,#0x1c]
;;;68               Cached =  0;
0000ec  9002              STR      r0,[sp,#8]
;;;69               for (xi = 0; xi < xSize; xi++) {
0000ee  900c              STR      r0,[sp,#0x30]
0000f0  e074              B        |L1.476|
                  |L1.242|
;;;70                 xiMag += xMagAbs;
0000f2  e9dd0107          LDRD     r0,r1,[sp,#0x1c]
0000f6  4408              ADD      r0,r0,r1
0000f8  9007              STR      r0,[sp,#0x1c]
;;;71                 if (xiMag >= 1000) {
0000fa  9807              LDR      r0,[sp,#0x1c]
0000fc  f5b07f7a          CMP      r0,#0x3e8
000100  db68              BLT      |L1.468|
;;;72                   xAct  = (xMag > 0) ? xi : xSize - xi - 1;
000102  981d              LDR      r0,[sp,#0x74]
000104  2800              CMP      r0,#0
000106  dd01              BLE      |L1.268|
000108  980c              LDR      r0,[sp,#0x30]
00010a  e005              B        |L1.280|
                  |L1.268|
00010c  e9dd010b          LDRD     r0,r1,[sp,#0x2c]
000110  eba00001          SUB      r0,r0,r1
000114  f1a00001          SUB      r0,r0,#1
                  |L1.280|
000118  9009              STR      r0,[sp,#0x24]
;;;73                   Index = GUI_GetBitmapPixelIndex(pBitmap, xAct, yi);
00011a  464a              MOV      r2,r9
00011c  4620              MOV      r0,r4
00011e  9909              LDR      r1,[sp,#0x24]
000120  f7fffffe          BL       GUI_GetBitmapPixelIndex
000124  b287              UXTH     r7,r0
;;;74                   if (Index != IndexPrev || xStart == -1) {
000126  980e              LDR      r0,[sp,#0x38]
000128  4287              CMP      r7,r0
00012a  d102              BNE      |L1.306|
00012c  f11a0001          ADDS     r0,r10,#1
000130  d141              BNE      |L1.438|
                  |L1.306|
;;;75                     if ((Index == 0) && HasTrans) {
000132  b97f              CBNZ     r7,|L1.340|
000134  9801              LDR      r0,[sp,#4]
000136  b168              CBZ      r0,|L1.340|
;;;76                       /* Transparent color ... clear cache */
;;;77                       if (Cached) {
000138  9802              LDR      r0,[sp,#8]
00013a  b3d8              CBZ      r0,|L1.436|
;;;78                         LCD_DrawHLine(x0 + xStart, y, x0 + x - 1);
00013c  eb050108          ADD      r1,r5,r8
000140  1e4a              SUBS     r2,r1,#1
000142  eb05000a          ADD      r0,r5,r10
000146  4631              MOV      r1,r6
000148  f7fffffe          BL       LCD_DrawHLine
;;;79                         Cached = 0;
00014c  f04f0000          MOV      r0,#0
000150  9002              STR      r0,[sp,#8]
000152  e02f              B        |L1.436|
                  |L1.340|
;;;80                       }
;;;81                     } else {
;;;82                       /* Another color ... draw contents of cache */
;;;83                       if (Cached && xStart != -1) {
000154  9802              LDR      r0,[sp,#8]
000156  b150              CBZ      r0,|L1.366|
000158  f11a0001          ADDS     r0,r10,#1
00015c  d007              BEQ      |L1.366|
;;;84                         LCD_DrawHLine(x0 + xStart, y, x0 + x - 1);
00015e  eb050108          ADD      r1,r5,r8
000162  1e4a              SUBS     r2,r1,#1
000164  eb05000a          ADD      r0,r5,r10
000168  4631              MOV      r1,r6
00016a  f7fffffe          BL       LCD_DrawHLine
                  |L1.366|
;;;85                       }
;;;86                       xStart    = x;
00016e  46c2              MOV      r10,r8
;;;87                       Cached    = 1;
000170  f04f0001          MOV      r0,#1
000174  9002              STR      r0,[sp,#8]
;;;88                       if (pBitmap->pMethods) {
000176  6920              LDR      r0,[r4,#0x10]
000178  b128              CBZ      r0,|L1.390|
;;;89                         Color = pBitmap->pMethods->pfIndex2Color(Index);
00017a  6920              LDR      r0,[r4,#0x10]
00017c  6841              LDR      r1,[r0,#4]
00017e  4638              MOV      r0,r7
000180  4788              BLX      r1
000182  900d              STR      r0,[sp,#0x34]
000184  e00e              B        |L1.420|
                  |L1.390|
;;;90                       } else {
;;;91                         if (pBitmap->pPal->pPalEntries) {
000186  68e0              LDR      r0,[r4,#0xc]
000188  6880              LDR      r0,[r0,#8]
00018a  b128              CBZ      r0,|L1.408|
;;;92                           Color = pBitmap->pPal->pPalEntries[Index];
00018c  68e0              LDR      r0,[r4,#0xc]
00018e  6880              LDR      r0,[r0,#8]
000190  f8500027          LDR      r0,[r0,r7,LSL #2]
000194  900d              STR      r0,[sp,#0x34]
000196  e005              B        |L1.420|
                  |L1.408|
;;;93                         } else {
;;;94                           Color = LCDDEV_L0_Index2Color(Index);
000198  4876              LDR      r0,|L1.884|
00019a  6c80              LDR      r0,[r0,#0x48]  ; GUI_Context
00019c  6841              LDR      r1,[r0,#4]
00019e  4638              MOV      r0,r7
0001a0  4788              BLX      r1
0001a2  900d              STR      r0,[sp,#0x34]
                  |L1.420|
;;;95                         }
;;;96                       }
;;;97                       LCD_SetColorIndex(LCDDEV_L0_Color2Index(Color));
0001a4  4873              LDR      r0,|L1.884|
0001a6  6c80              LDR      r0,[r0,#0x48]  ; GUI_Context
0001a8  6801              LDR      r1,[r0,#0]
0001aa  980d              LDR      r0,[sp,#0x34]
0001ac  4788              BLX      r1
0001ae  9000              STR      r0,[sp,#0]
0001b0  f7fffffe          BL       LCD_SetColorIndex
                  |L1.436|
;;;98                     }
;;;99                     IndexPrev = Index;
0001b4  970e              STR      r7,[sp,#0x38]
                  |L1.438|
;;;100                  }
;;;101                  do {
0001b6  bf00              NOP      
                  |L1.440|
;;;102                    x++;
0001b8  f1080801          ADD      r8,r8,#1
;;;103                    xiMag -= 1000;
0001bc  9807              LDR      r0,[sp,#0x1c]
0001be  f5a0707a          SUB      r0,r0,#0x3e8
0001c2  9007              STR      r0,[sp,#0x1c]
;;;104                  } while (xiMag >= 1000);
0001c4  9807              LDR      r0,[sp,#0x1c]
0001c6  f5b07f7a          CMP      r0,#0x3e8
0001ca  e002              B        |L1.466|
                  |L1.460|
0001cc  e027              B        |L1.542|
                  |L1.462|
0001ce  e013              B        |L1.504|
0001d0  e000              B        |L1.468|
                  |L1.466|
0001d2  daf1              BGE      |L1.440|
                  |L1.468|
0001d4  980c              LDR      r0,[sp,#0x30]         ;69
0001d6  f1000001          ADD      r0,r0,#1              ;69
0001da  900c              STR      r0,[sp,#0x30]         ;69
                  |L1.476|
0001dc  e9dd100b          LDRD     r1,r0,[sp,#0x2c]      ;69
0001e0  4288              CMP      r0,r1                 ;69
0001e2  db86              BLT      |L1.242|
;;;105                }
;;;106              }
;;;107              /* Clear cache */
;;;108              if (Cached) {
0001e4  9802              LDR      r0,[sp,#8]
0001e6  b138              CBZ      r0,|L1.504|
;;;109                LCD_DrawHLine(x0 + xStart, y, x0 + x - 1);
0001e8  eb050108          ADD      r1,r5,r8
0001ec  1e4a              SUBS     r2,r1,#1
0001ee  eb05000a          ADD      r0,r5,r10
0001f2  4631              MOV      r1,r6
0001f4  f7fffffe          BL       LCD_DrawHLine
                  |L1.504|
;;;110              }
;;;111            }
;;;112            y += yStep;
0001f8  9803              LDR      r0,[sp,#0xc]
0001fa  4406              ADD      r6,r6,r0
;;;113          } while ((yMag < 0) ? (y > yEnd) : (y < yEnd));
0001fc  981e              LDR      r0,[sp,#0x78]
0001fe  2800              CMP      r0,#0
000200  da05              BGE      |L1.526|
000202  455e              CMP      r6,r11
000204  dd01              BLE      |L1.522|
000206  2001              MOVS     r0,#1
000208  e006              B        |L1.536|
                  |L1.522|
00020a  2000              MOVS     r0,#0
00020c  e004              B        |L1.536|
                  |L1.526|
00020e  455e              CMP      r6,r11
000210  da01              BGE      |L1.534|
000212  2001              MOVS     r0,#1
000214  e000              B        |L1.536|
                  |L1.534|
000216  2000              MOVS     r0,#0
                  |L1.536|
000218  2800              CMP      r0,#0
00021a  f47faf5b          BNE      |L1.212|
                  |L1.542|
00021e  f1090901          ADD      r9,r9,#1              ;58
                  |L1.546|
000222  980a              LDR      r0,[sp,#0x28]         ;58
000224  4581              CMP      r9,r0                 ;58
000226  f6ffaf40          BLT      |L1.170|
;;;114        }
;;;115      }
;;;116    }
00022a  b013              ADD      sp,sp,#0x4c
00022c  e8bd8ff0          POP      {r4-r11,pc}
;;;117    
                          ENDP

                  GUI_DrawBitmapEx PROC
;;;127    */
;;;128    void GUI_DrawBitmapEx(const GUI_BITMAP GUI_UNI_PTR * pBitmap, int x0, int y0,
000230  e92d4ff0          PUSH     {r4-r11,lr}
;;;129                          int xCenter, int yCenter, int xMag, int yMag) {
000234  b085              SUB      sp,sp,#0x14
000236  4680              MOV      r8,r0
000238  460c              MOV      r4,r1
00023a  4615              MOV      r5,r2
00023c  4699              MOV      r9,r3
00023e  e9dda60e          LDRD     r10,r6,[sp,#0x38]
000242  9f10              LDR      r7,[sp,#0x40]
;;;130      int OldIndex;
;;;131      #if (GUI_WINSUPPORT)
;;;132        GUI_RECT r;
;;;133      #endif
;;;134      GUI_LOCK();
;;;135      OldIndex = LCD_GetColorIndex();
000244  f7fffffe          BL       LCD_GetColorIndex
000248  4683              MOV      r11,r0
;;;136      #if (GUI_WINSUPPORT)
;;;137        WM_ADDORG(x0, y0);
00024a  484a              LDR      r0,|L1.884|
00024c  6c00              LDR      r0,[r0,#0x40]  ; GUI_Context
00024e  4404              ADD      r4,r4,r0
000250  4848              LDR      r0,|L1.884|
000252  6c40              LDR      r0,[r0,#0x44]  ; GUI_Context
000254  4405              ADD      r5,r5,r0
;;;138        if (xMag >= 0) {
000256  2e00              CMP      r6,#0
000258  db1c              BLT      |L1.660|
;;;139          r.x0 = x0 + GUI__DivideRound32(((I32)(-xCenter) * (I32)(xMag)), 1000);
00025a  f1c90100          RSB      r1,r9,#0
00025e  fb01f006          MUL      r0,r1,r6
000262  f44f717a          MOV      r1,#0x3e8
000266  f7fffffe          BL       GUI__DivideRound32
00026a  4420              ADD      r0,r0,r4
00026c  b200              SXTH     r0,r0
00026e  f8ad000c          STRH     r0,[sp,#0xc]
;;;140          r.x1 = x0 + GUI__DivideRound32(((I32)(pBitmap->XSize - xCenter - 1) * (I32)(xMag)), 1000);
000272  f8b81000          LDRH     r1,[r8,#0]
000276  eba10109          SUB      r1,r1,r9
00027a  f1a10101          SUB      r1,r1,#1
00027e  fb01f006          MUL      r0,r1,r6
000282  f44f717a          MOV      r1,#0x3e8
000286  f7fffffe          BL       GUI__DivideRound32
00028a  4420              ADD      r0,r0,r4
00028c  b200              SXTH     r0,r0
00028e  f8ad0010          STRH     r0,[sp,#0x10]
000292  e01b              B        |L1.716|
                  |L1.660|
;;;141        } else {
;;;142          r.x1 = x0 + GUI__DivideRound32(((I32)(-xCenter) * (I32)(xMag)), 1000);
000294  f1c90100          RSB      r1,r9,#0
000298  fb01f006          MUL      r0,r1,r6
00029c  f44f717a          MOV      r1,#0x3e8
0002a0  f7fffffe          BL       GUI__DivideRound32
0002a4  4420              ADD      r0,r0,r4
0002a6  b200              SXTH     r0,r0
0002a8  f8ad0010          STRH     r0,[sp,#0x10]
;;;143          r.x0 = x0 + GUI__DivideRound32(((I32)(pBitmap->XSize - xCenter - 1) * (I32)(xMag)), 1000);
0002ac  f8b81000          LDRH     r1,[r8,#0]
0002b0  eba10109          SUB      r1,r1,r9
0002b4  f1a10101          SUB      r1,r1,#1
0002b8  fb01f006          MUL      r0,r1,r6
0002bc  f44f717a          MOV      r1,#0x3e8
0002c0  f7fffffe          BL       GUI__DivideRound32
0002c4  4420              ADD      r0,r0,r4
0002c6  b200              SXTH     r0,r0
0002c8  f8ad000c          STRH     r0,[sp,#0xc]
                  |L1.716|
;;;144        }
;;;145        if (yMag >= 0) {
0002cc  2f00              CMP      r7,#0
0002ce  db1c              BLT      |L1.778|
;;;146          r.y0 = y0 + GUI__DivideRound32(((I32)(-yCenter) * (I32)(yMag)), 1000);
0002d0  f1ca0100          RSB      r1,r10,#0
0002d4  fb01f007          MUL      r0,r1,r7
0002d8  f44f717a          MOV      r1,#0x3e8
0002dc  f7fffffe          BL       GUI__DivideRound32
0002e0  4428              ADD      r0,r0,r5
0002e2  b200              SXTH     r0,r0
0002e4  f8ad000e          STRH     r0,[sp,#0xe]
;;;147          r.y1 = y0 + GUI__DivideRound32(((I32)(pBitmap->YSize - yCenter - 1) * (I32)(yMag)), 1000);
0002e8  f8b81002          LDRH     r1,[r8,#2]
0002ec  eba1010a          SUB      r1,r1,r10
0002f0  f1a10101          SUB      r1,r1,#1
0002f4  fb01f007          MUL      r0,r1,r7
0002f8  f44f717a          MOV      r1,#0x3e8
0002fc  f7fffffe          BL       GUI__DivideRound32
000300  4428              ADD      r0,r0,r5
000302  b200              SXTH     r0,r0
000304  f8ad0012          STRH     r0,[sp,#0x12]
000308  e01b              B        |L1.834|
                  |L1.778|
;;;148        } else {
;;;149          r.y1 = y0 + GUI__DivideRound32(((I32)(-yCenter) * (I32)(yMag)), 1000);
00030a  f1ca0100          RSB      r1,r10,#0
00030e  fb01f007          MUL      r0,r1,r7
000312  f44f717a          MOV      r1,#0x3e8
000316  f7fffffe          BL       GUI__DivideRound32
00031a  4428              ADD      r0,r0,r5
00031c  b200              SXTH     r0,r0
00031e  f8ad0012          STRH     r0,[sp,#0x12]
;;;150          r.y0 = y0 + GUI__DivideRound32(((I32)(pBitmap->YSize - yCenter - 1) * (I32)(yMag)), 1000);
000322  f8b81002          LDRH     r1,[r8,#2]
000326  eba1010a          SUB      r1,r1,r10
00032a  f1a10101          SUB      r1,r1,#1
00032e  fb01f007          MUL      r0,r1,r7
000332  f44f717a          MOV      r1,#0x3e8
000336  f7fffffe          BL       GUI__DivideRound32
00033a  4428              ADD      r0,r0,r5
00033c  b200              SXTH     r0,r0
00033e  f8ad000e          STRH     r0,[sp,#0xe]
                  |L1.834|
;;;151        }
;;;152        WM_ITERATE_START(&r) {
000342  a803              ADD      r0,sp,#0xc
000344  f7fffffe          BL       WM__InitIVRSearch
000348  b168              CBZ      r0,|L1.870|
00034a  bf00              NOP      
                  |L1.844|
;;;153      #endif
;;;154      GL_DrawBitmapEx(pBitmap, x0, y0, xCenter, yCenter, xMag, yMag);
00034c  464b              MOV      r3,r9
00034e  462a              MOV      r2,r5
000350  4621              MOV      r1,r4
000352  4640              MOV      r0,r8
000354  e9cda600          STRD     r10,r6,[sp,#0]
000358  9702              STR      r7,[sp,#8]
00035a  f7fffffe          BL       GL_DrawBitmapEx
;;;155      #if (GUI_WINSUPPORT)
;;;156        } WM_ITERATE_END();
00035e  f7fffffe          BL       WM__GetNextIVR
000362  2800              CMP      r0,#0
000364  d1f2              BNE      |L1.844|
                  |L1.870|
;;;157      #endif
;;;158      LCD_SetColorIndex(OldIndex);
000366  4658              MOV      r0,r11
000368  f7fffffe          BL       LCD_SetColorIndex
;;;159      GUI_UNLOCK();
;;;160    }
00036c  b005              ADD      sp,sp,#0x14
00036e  e8bd8ff0          POP      {r4-r11,pc}
;;;161    
                          ENDP

000372  0000              DCW      0x0000
                  |L1.884|
                          DCD      GUI_Context

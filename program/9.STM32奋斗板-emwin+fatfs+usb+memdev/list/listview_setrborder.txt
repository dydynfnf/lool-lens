; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\listview_setrborder.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\listview_setrborder.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\listview_setrborder.crf GUI\Widget\LISTVIEW_SetRBorder.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  LISTVIEW_SetRBorder PROC
;;;33     */
;;;34     void LISTVIEW_SetRBorder(LISTVIEW_Handle hObj, unsigned BorderSize) {
000000  b570              PUSH     {r4-r6,lr}
000002  4606              MOV      r6,r0
000004  460c              MOV      r4,r1
;;;35       if (hObj) {
000006  b166              CBZ      r6,|L1.34|
;;;36         LISTVIEW_Obj* pObj;
;;;37         WM_LOCK();
;;;38         pObj = LISTVIEW_H2P(hObj);
000008  4630              MOV      r0,r6
00000a  f7fffffe          BL       GUI_ALLOC_h2p
00000e  4605              MOV      r5,r0
;;;39         if (pObj->RBorder != BorderSize) {
000010  6f68              LDR      r0,[r5,#0x74]
000012  42a0              CMP      r0,r4
000014  d004              BEQ      |L1.32|
;;;40           pObj->RBorder = BorderSize;
000016  676c              STR      r4,[r5,#0x74]
;;;41           LISTVIEW__InvalidateInsideArea(hObj, pObj);
000018  4629              MOV      r1,r5
00001a  4630              MOV      r0,r6
00001c  f7fffffe          BL       LISTVIEW__InvalidateInsideArea
                  |L1.32|
;;;42         }
;;;43         WM_UNLOCK();
;;;44       }
000020  bf00              NOP      
                  |L1.34|
;;;45     }
000022  bd70              POP      {r4-r6,pc}
;;;46     
                          ENDP


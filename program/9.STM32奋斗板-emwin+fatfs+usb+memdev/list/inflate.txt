; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\inflate.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\inflate.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\FWlib\inc -I.\user -I.\CM3 -I.\MALLOC -I.\TFT -I.\EMWIN\EMWIN_INC -I.\EMWIN\DEMO -I.\PNG -I.\FATFS -I.\SDIO -I.\USB\inc -I.\USBCFG\inc -IE:\material\GUI\9.STM32·Ü¶·°å-emwin+fatfs+usb+memdev\RTE -Id:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.1.0\Device\Include -Id:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=515 -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\inflate.crf PNG\inflate.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  inflateReset PROC
;;;102    
;;;103    int ZEXPORT inflateReset(strm)
000000  4602              MOV      r2,r0
;;;104    z_streamp strm;
;;;105    {
;;;106        struct inflate_state FAR *state;
;;;107    
;;;108        if (strm == Z_NULL || strm->state == Z_NULL) return Z_STREAM_ERROR;
000002  b10a              CBZ      r2,|L1.8|
000004  69d0              LDR      r0,[r2,#0x1c]
000006  b910              CBNZ     r0,|L1.14|
                  |L1.8|
000008  f06f0001          MVN      r0,#1
                  |L1.12|
;;;109        state = (struct inflate_state FAR *)strm->state;
;;;110        strm->total_in = strm->total_out = state->total = 0;
;;;111        strm->msg = Z_NULL;
;;;112        strm->adler = 1;        /* to support ill-conceived Java test suite */
;;;113        state->mode = HEAD;
;;;114        state->last = 0;
;;;115        state->havedict = 0;
;;;116        state->dmax = 32768U;
;;;117        state->head = Z_NULL;
;;;118        state->wsize = 0;
;;;119        state->whave = 0;
;;;120        state->write = 0;
;;;121        state->hold = 0;
;;;122        state->bits = 0;
;;;123        state->lencode = state->distcode = state->next = state->codes;
;;;124        Tracev((stderr, "inflate: reset\n"));
;;;125        return Z_OK;
;;;126    }
00000c  4770              BX       lr
                  |L1.14|
00000e  69d1              LDR      r1,[r2,#0x1c]         ;109
000010  2000              MOVS     r0,#0                 ;110
000012  61c8              STR      r0,[r1,#0x1c]         ;110
000014  6150              STR      r0,[r2,#0x14]         ;110
000016  6090              STR      r0,[r2,#8]            ;110
000018  6190              STR      r0,[r2,#0x18]         ;111
00001a  2001              MOVS     r0,#1                 ;112
00001c  6310              STR      r0,[r2,#0x30]         ;112
00001e  2000              MOVS     r0,#0                 ;113
000020  7008              STRB     r0,[r1,#0]            ;113
000022  6048              STR      r0,[r1,#4]            ;114
000024  60c8              STR      r0,[r1,#0xc]          ;115
000026  f44f4000          MOV      r0,#0x8000            ;116
00002a  6148              STR      r0,[r1,#0x14]         ;116
00002c  2000              MOVS     r0,#0                 ;117
00002e  6208              STR      r0,[r1,#0x20]         ;117
000030  6288              STR      r0,[r1,#0x28]         ;118
000032  62c8              STR      r0,[r1,#0x2c]         ;119
000034  6308              STR      r0,[r1,#0x30]         ;120
000036  6388              STR      r0,[r1,#0x38]         ;121
000038  63c8              STR      r0,[r1,#0x3c]         ;122
00003a  f50160a6          ADD      r0,r1,#0x530          ;123
00003e  66c8              STR      r0,[r1,#0x6c]         ;123
000040  6508              STR      r0,[r1,#0x50]         ;123
000042  64c8              STR      r0,[r1,#0x4c]         ;123
000044  2000              MOVS     r0,#0                 ;125
000046  e7e1              B        |L1.12|
;;;127    
                          ENDP

                  inflatePrime PROC
;;;128    int ZEXPORT inflatePrime(strm, bits, value)
000048  b530              PUSH     {r4,r5,lr}
;;;129    z_streamp strm;
;;;130    int bits;
;;;131    int value;
;;;132    {
00004a  4604              MOV      r4,r0
00004c  460b              MOV      r3,r1
;;;133        struct inflate_state FAR *state;
;;;134    
;;;135        if (strm == Z_NULL || strm->state == Z_NULL) return Z_STREAM_ERROR;
00004e  b10c              CBZ      r4,|L1.84|
000050  69e0              LDR      r0,[r4,#0x1c]
000052  b910              CBNZ     r0,|L1.90|
                  |L1.84|
000054  f06f0001          MVN      r0,#1
                  |L1.88|
;;;136        state = (struct inflate_state FAR *)strm->state;
;;;137        if (bits > 16 || state->bits + bits > 32) return Z_STREAM_ERROR;
;;;138        value &= (1L << bits) - 1;
;;;139        state->hold += value << state->bits;
;;;140        state->bits += bits;
;;;141        return Z_OK;
;;;142    }
000058  bd30              POP      {r4,r5,pc}
                  |L1.90|
00005a  69e1              LDR      r1,[r4,#0x1c]         ;136
00005c  2b10              CMP      r3,#0x10              ;137
00005e  dc03              BGT      |L1.104|
000060  6bc8              LDR      r0,[r1,#0x3c]         ;137
000062  4418              ADD      r0,r0,r3              ;137
000064  2820              CMP      r0,#0x20              ;137
000066  d902              BLS      |L1.110|
                  |L1.104|
000068  f06f0001          MVN      r0,#1                 ;137
00006c  e7f4              B        |L1.88|
                  |L1.110|
00006e  2001              MOVS     r0,#1                 ;138
000070  4098              LSLS     r0,r0,r3              ;138
000072  1e40              SUBS     r0,r0,#1              ;138
000074  4002              ANDS     r2,r2,r0              ;138
000076  f891003c          LDRB     r0,[r1,#0x3c]         ;139
00007a  fa02f000          LSL      r0,r2,r0              ;139
00007e  6b8d              LDR      r5,[r1,#0x38]         ;139
000080  4428              ADD      r0,r0,r5              ;139
000082  6388              STR      r0,[r1,#0x38]         ;139
000084  6bc8              LDR      r0,[r1,#0x3c]         ;140
000086  4418              ADD      r0,r0,r3              ;140
000088  63c8              STR      r0,[r1,#0x3c]         ;140
00008a  2000              MOVS     r0,#0                 ;141
00008c  e7e4              B        |L1.88|
;;;143    
                          ENDP

                  inflateInit2_ PROC
;;;144    int ZEXPORT inflateInit2_(strm, windowBits, version, stream_size)
00008e  e92d41f0          PUSH     {r4-r8,lr}
;;;145    z_streamp strm;
;;;146    int windowBits;
;;;147    const char *version;
;;;148    int stream_size;
;;;149    {
000092  4604              MOV      r4,r0
000094  460d              MOV      r5,r1
000096  4617              MOV      r7,r2
000098  4698              MOV      r8,r3
;;;150        struct inflate_state FAR *state;
;;;151    
;;;152        if (version == Z_NULL || version[0] != ZLIB_VERSION[0] ||
00009a  b13f              CBZ      r7,|L1.172|
00009c  7838              LDRB     r0,[r7,#0]
00009e  a1fe              ADR      r1,|L1.1176|
0000a0  7809              LDRB     r1,[r1,#0]
0000a2  4288              CMP      r0,r1
0000a4  d102              BNE      |L1.172|
;;;153            stream_size != (int)(sizeof(z_stream)))
0000a6  f1b80f38          CMP      r8,#0x38
0000aa  d003              BEQ      |L1.180|
                  |L1.172|
;;;154            return Z_VERSION_ERROR;
0000ac  f06f0005          MVN      r0,#5
                  |L1.176|
;;;155        if (strm == Z_NULL) return Z_STREAM_ERROR;
;;;156        strm->msg = Z_NULL;                 /* in case we return an error */
;;;157        if (strm->zalloc == (alloc_func)0) {
;;;158            strm->zalloc = zcalloc;
;;;159            strm->opaque = (voidpf)0;
;;;160        }
;;;161        if (strm->zfree == (free_func)0) strm->zfree = zcfree;
;;;162        state = (struct inflate_state FAR *)
;;;163                ZALLOC(strm, 1, sizeof(struct inflate_state));
;;;164        if (state == Z_NULL) return Z_MEM_ERROR;
;;;165        Tracev((stderr, "inflate: allocated\n"));
;;;166        strm->state = (struct internal_state FAR *)state;
;;;167        if (windowBits < 0) {
;;;168            state->wrap = 0;
;;;169            windowBits = -windowBits;
;;;170        }
;;;171        else {
;;;172            state->wrap = (windowBits >> 4) + 1;
;;;173    #ifdef GUNZIP
;;;174            if (windowBits < 48) windowBits &= 15;
;;;175    #endif
;;;176        }
;;;177        if (windowBits < 8 || windowBits > 15) {
;;;178            ZFREE(strm, state);
;;;179            strm->state = Z_NULL;
;;;180            return Z_STREAM_ERROR;
;;;181        }
;;;182        state->wbits = (unsigned)windowBits;
;;;183        state->window = Z_NULL;
;;;184        return inflateReset(strm);
;;;185    }
0000b0  e8bd81f0          POP      {r4-r8,pc}
                  |L1.180|
0000b4  b914              CBNZ     r4,|L1.188|
0000b6  f06f0001          MVN      r0,#1                 ;155
0000ba  e7f9              B        |L1.176|
                  |L1.188|
0000bc  2000              MOVS     r0,#0                 ;156
0000be  61a0              STR      r0,[r4,#0x18]         ;156
0000c0  6a20              LDR      r0,[r4,#0x20]         ;157
0000c2  b918              CBNZ     r0,|L1.204|
0000c4  48f6              LDR      r0,|L1.1184|
0000c6  6220              STR      r0,[r4,#0x20]         ;158
0000c8  2000              MOVS     r0,#0                 ;159
0000ca  62a0              STR      r0,[r4,#0x28]         ;159
                  |L1.204|
0000cc  6a60              LDR      r0,[r4,#0x24]         ;161
0000ce  b908              CBNZ     r0,|L1.212|
0000d0  48f4              LDR      r0,|L1.1188|
0000d2  6260              STR      r0,[r4,#0x24]         ;161
                  |L1.212|
0000d4  f2425230          MOV      r2,#0x2530            ;162
0000d8  2101              MOVS     r1,#1                 ;162
0000da  6a23              LDR      r3,[r4,#0x20]         ;162
0000dc  6aa0              LDR      r0,[r4,#0x28]         ;162
0000de  4798              BLX      r3                    ;162
0000e0  4606              MOV      r6,r0                 ;162
0000e2  b916              CBNZ     r6,|L1.234|
0000e4  f06f0003          MVN      r0,#3                 ;164
0000e8  e7e2              B        |L1.176|
                  |L1.234|
0000ea  61e6              STR      r6,[r4,#0x1c]         ;166
0000ec  2d00              CMP      r5,#0                 ;167
0000ee  da03              BGE      |L1.248|
0000f0  2000              MOVS     r0,#0                 ;168
0000f2  60b0              STR      r0,[r6,#8]            ;168
0000f4  426d              RSBS     r5,r5,#0              ;169
0000f6  e007              B        |L1.264|
                  |L1.248|
0000f8  2001              MOVS     r0,#1                 ;172
0000fa  eb001025          ADD      r0,r0,r5,ASR #4       ;172
0000fe  60b0              STR      r0,[r6,#8]            ;172
000100  2d30              CMP      r5,#0x30              ;174
000102  da01              BGE      |L1.264|
000104  f005050f          AND      r5,r5,#0xf            ;174
                  |L1.264|
000108  2d08              CMP      r5,#8                 ;177
00010a  db01              BLT      |L1.272|
00010c  2d0f              CMP      r5,#0xf               ;177
00010e  dd07              BLE      |L1.288|
                  |L1.272|
000110  4631              MOV      r1,r6                 ;178
000112  e9d42009          LDRD     r2,r0,[r4,#0x24]      ;178
000116  4790              BLX      r2                    ;178
000118  2000              MOVS     r0,#0                 ;179
00011a  61e0              STR      r0,[r4,#0x1c]         ;179
00011c  1e80              SUBS     r0,r0,#2              ;180
00011e  e7c7              B        |L1.176|
                  |L1.288|
000120  6275              STR      r5,[r6,#0x24]         ;182
000122  2000              MOVS     r0,#0                 ;183
000124  6370              STR      r0,[r6,#0x34]         ;183
000126  4620              MOV      r0,r4                 ;184
000128  f7fffffe          BL       inflateReset
00012c  e7c0              B        |L1.176|
;;;186    
                          ENDP

                  inflateInit_ PROC
;;;187    int ZEXPORT inflateInit_(strm, version, stream_size)
00012e  b570              PUSH     {r4-r6,lr}
;;;188    z_streamp strm;
;;;189    const char *version;
;;;190    int stream_size;
;;;191    {
000130  4606              MOV      r6,r0
000132  460c              MOV      r4,r1
000134  4615              MOV      r5,r2
;;;192        return inflateInit2_(strm, DEF_WBITS, version, stream_size);
000136  462b              MOV      r3,r5
000138  4622              MOV      r2,r4
00013a  210f              MOVS     r1,#0xf
00013c  4630              MOV      r0,r6
00013e  f7fffffe          BL       inflateInit2_
;;;193    }
000142  bd70              POP      {r4-r6,pc}
;;;194    
                          ENDP

                  fixedtables PROC
;;;204     */
;;;205    local void fixedtables(state)
000144  49d8              LDR      r1,|L1.1192|
;;;206    struct inflate_state FAR *state;
;;;207    {
;;;208    #ifdef BUILDFIXED
;;;209        static int virgin = 1;
;;;210        static code *lenfix, *distfix;
;;;211        static code fixed[544];
;;;212    
;;;213        /* build fixed huffman tables if first call (may not be thread safe) */
;;;214        if (virgin) {
;;;215            unsigned sym, bits;
;;;216            static code *next;
;;;217    
;;;218            /* literal/length table */
;;;219            sym = 0;
;;;220            while (sym < 144) state->lens[sym++] = 8;
;;;221            while (sym < 256) state->lens[sym++] = 9;
;;;222            while (sym < 280) state->lens[sym++] = 7;
;;;223            while (sym < 288) state->lens[sym++] = 8;
;;;224            next = fixed;
;;;225            lenfix = next;
;;;226            bits = 9;
;;;227            inflate_table(LENS, state->lens, 288, &(next), &(bits), state->work);
;;;228    
;;;229            /* distance table */
;;;230            sym = 0;
;;;231            while (sym < 32) state->lens[sym++] = 5;
;;;232            distfix = next;
;;;233            bits = 5;
;;;234            inflate_table(DISTS, state->lens, 32, &(next), &(bits), state->work);
;;;235    
;;;236            /* do this just once */
;;;237            virgin = 0;
;;;238        }
;;;239    #else /* !BUILDFIXED */
;;;240    #   include "inffixed.h"
;;;1          /* inffixed.h -- table for decoding fixed codes
;;;2           * Generated automatically by makefixed().
;;;3           */
;;;4      
;;;5          /* WARNING: this file should *not* be used by applications. It
;;;6             is part of the implementation of the compression library and
;;;7             is subject to change. Applications should only use zlib.h.
;;;8           */
;;;9      
;;;10         static const code lenfix[512] = {
;;;11             {96,7,0},{0,8,80},{0,8,16},{20,8,115},{18,7,31},{0,8,112},{0,8,48},
;;;12             {0,9,192},{16,7,10},{0,8,96},{0,8,32},{0,9,160},{0,8,0},{0,8,128},
;;;13             {0,8,64},{0,9,224},{16,7,6},{0,8,88},{0,8,24},{0,9,144},{19,7,59},
;;;14             {0,8,120},{0,8,56},{0,9,208},{17,7,17},{0,8,104},{0,8,40},{0,9,176},
;;;15             {0,8,8},{0,8,136},{0,8,72},{0,9,240},{16,7,4},{0,8,84},{0,8,20},
;;;16             {21,8,227},{19,7,43},{0,8,116},{0,8,52},{0,9,200},{17,7,13},{0,8,100},
;;;17             {0,8,36},{0,9,168},{0,8,4},{0,8,132},{0,8,68},{0,9,232},{16,7,8},
;;;18             {0,8,92},{0,8,28},{0,9,152},{20,7,83},{0,8,124},{0,8,60},{0,9,216},
;;;19             {18,7,23},{0,8,108},{0,8,44},{0,9,184},{0,8,12},{0,8,140},{0,8,76},
;;;20             {0,9,248},{16,7,3},{0,8,82},{0,8,18},{21,8,163},{19,7,35},{0,8,114},
;;;21             {0,8,50},{0,9,196},{17,7,11},{0,8,98},{0,8,34},{0,9,164},{0,8,2},
;;;22             {0,8,130},{0,8,66},{0,9,228},{16,7,7},{0,8,90},{0,8,26},{0,9,148},
;;;23             {20,7,67},{0,8,122},{0,8,58},{0,9,212},{18,7,19},{0,8,106},{0,8,42},
;;;24             {0,9,180},{0,8,10},{0,8,138},{0,8,74},{0,9,244},{16,7,5},{0,8,86},
;;;25             {0,8,22},{64,8,0},{19,7,51},{0,8,118},{0,8,54},{0,9,204},{17,7,15},
;;;26             {0,8,102},{0,8,38},{0,9,172},{0,8,6},{0,8,134},{0,8,70},{0,9,236},
;;;27             {16,7,9},{0,8,94},{0,8,30},{0,9,156},{20,7,99},{0,8,126},{0,8,62},
;;;28             {0,9,220},{18,7,27},{0,8,110},{0,8,46},{0,9,188},{0,8,14},{0,8,142},
;;;29             {0,8,78},{0,9,252},{96,7,0},{0,8,81},{0,8,17},{21,8,131},{18,7,31},
;;;30             {0,8,113},{0,8,49},{0,9,194},{16,7,10},{0,8,97},{0,8,33},{0,9,162},
;;;31             {0,8,1},{0,8,129},{0,8,65},{0,9,226},{16,7,6},{0,8,89},{0,8,25},
;;;32             {0,9,146},{19,7,59},{0,8,121},{0,8,57},{0,9,210},{17,7,17},{0,8,105},
;;;33             {0,8,41},{0,9,178},{0,8,9},{0,8,137},{0,8,73},{0,9,242},{16,7,4},
;;;34             {0,8,85},{0,8,21},{16,8,258},{19,7,43},{0,8,117},{0,8,53},{0,9,202},
;;;35             {17,7,13},{0,8,101},{0,8,37},{0,9,170},{0,8,5},{0,8,133},{0,8,69},
;;;36             {0,9,234},{16,7,8},{0,8,93},{0,8,29},{0,9,154},{20,7,83},{0,8,125},
;;;37             {0,8,61},{0,9,218},{18,7,23},{0,8,109},{0,8,45},{0,9,186},{0,8,13},
;;;38             {0,8,141},{0,8,77},{0,9,250},{16,7,3},{0,8,83},{0,8,19},{21,8,195},
;;;39             {19,7,35},{0,8,115},{0,8,51},{0,9,198},{17,7,11},{0,8,99},{0,8,35},
;;;40             {0,9,166},{0,8,3},{0,8,131},{0,8,67},{0,9,230},{16,7,7},{0,8,91},
;;;41             {0,8,27},{0,9,150},{20,7,67},{0,8,123},{0,8,59},{0,9,214},{18,7,19},
;;;42             {0,8,107},{0,8,43},{0,9,182},{0,8,11},{0,8,139},{0,8,75},{0,9,246},
;;;43             {16,7,5},{0,8,87},{0,8,23},{64,8,0},{19,7,51},{0,8,119},{0,8,55},
;;;44             {0,9,206},{17,7,15},{0,8,103},{0,8,39},{0,9,174},{0,8,7},{0,8,135},
;;;45             {0,8,71},{0,9,238},{16,7,9},{0,8,95},{0,8,31},{0,9,158},{20,7,99},
;;;46             {0,8,127},{0,8,63},{0,9,222},{18,7,27},{0,8,111},{0,8,47},{0,9,190},
;;;47             {0,8,15},{0,8,143},{0,8,79},{0,9,254},{96,7,0},{0,8,80},{0,8,16},
;;;48             {20,8,115},{18,7,31},{0,8,112},{0,8,48},{0,9,193},{16,7,10},{0,8,96},
;;;49             {0,8,32},{0,9,161},{0,8,0},{0,8,128},{0,8,64},{0,9,225},{16,7,6},
;;;50             {0,8,88},{0,8,24},{0,9,145},{19,7,59},{0,8,120},{0,8,56},{0,9,209},
;;;51             {17,7,17},{0,8,104},{0,8,40},{0,9,177},{0,8,8},{0,8,136},{0,8,72},
;;;52             {0,9,241},{16,7,4},{0,8,84},{0,8,20},{21,8,227},{19,7,43},{0,8,116},
;;;53             {0,8,52},{0,9,201},{17,7,13},{0,8,100},{0,8,36},{0,9,169},{0,8,4},
;;;54             {0,8,132},{0,8,68},{0,9,233},{16,7,8},{0,8,92},{0,8,28},{0,9,153},
;;;55             {20,7,83},{0,8,124},{0,8,60},{0,9,217},{18,7,23},{0,8,108},{0,8,44},
;;;56             {0,9,185},{0,8,12},{0,8,140},{0,8,76},{0,9,249},{16,7,3},{0,8,82},
;;;57             {0,8,18},{21,8,163},{19,7,35},{0,8,114},{0,8,50},{0,9,197},{17,7,11},
;;;58             {0,8,98},{0,8,34},{0,9,165},{0,8,2},{0,8,130},{0,8,66},{0,9,229},
;;;59             {16,7,7},{0,8,90},{0,8,26},{0,9,149},{20,7,67},{0,8,122},{0,8,58},
;;;60             {0,9,213},{18,7,19},{0,8,106},{0,8,42},{0,9,181},{0,8,10},{0,8,138},
;;;61             {0,8,74},{0,9,245},{16,7,5},{0,8,86},{0,8,22},{64,8,0},{19,7,51},
;;;62             {0,8,118},{0,8,54},{0,9,205},{17,7,15},{0,8,102},{0,8,38},{0,9,173},
;;;63             {0,8,6},{0,8,134},{0,8,70},{0,9,237},{16,7,9},{0,8,94},{0,8,30},
;;;64             {0,9,157},{20,7,99},{0,8,126},{0,8,62},{0,9,221},{18,7,27},{0,8,110},
;;;65             {0,8,46},{0,9,189},{0,8,14},{0,8,142},{0,8,78},{0,9,253},{96,7,0},
;;;66             {0,8,81},{0,8,17},{21,8,131},{18,7,31},{0,8,113},{0,8,49},{0,9,195},
;;;67             {16,7,10},{0,8,97},{0,8,33},{0,9,163},{0,8,1},{0,8,129},{0,8,65},
;;;68             {0,9,227},{16,7,6},{0,8,89},{0,8,25},{0,9,147},{19,7,59},{0,8,121},
;;;69             {0,8,57},{0,9,211},{17,7,17},{0,8,105},{0,8,41},{0,9,179},{0,8,9},
;;;70             {0,8,137},{0,8,73},{0,9,243},{16,7,4},{0,8,85},{0,8,21},{16,8,258},
;;;71             {19,7,43},{0,8,117},{0,8,53},{0,9,203},{17,7,13},{0,8,101},{0,8,37},
;;;72             {0,9,171},{0,8,5},{0,8,133},{0,8,69},{0,9,235},{16,7,8},{0,8,93},
;;;73             {0,8,29},{0,9,155},{20,7,83},{0,8,125},{0,8,61},{0,9,219},{18,7,23},
;;;74             {0,8,109},{0,8,45},{0,9,187},{0,8,13},{0,8,141},{0,8,77},{0,9,251},
;;;75             {16,7,3},{0,8,83},{0,8,19},{21,8,195},{19,7,35},{0,8,115},{0,8,51},
;;;76             {0,9,199},{17,7,11},{0,8,99},{0,8,35},{0,9,167},{0,8,3},{0,8,131},
;;;77             {0,8,67},{0,9,231},{16,7,7},{0,8,91},{0,8,27},{0,9,151},{20,7,67},
;;;78             {0,8,123},{0,8,59},{0,9,215},{18,7,19},{0,8,107},{0,8,43},{0,9,183},
;;;79             {0,8,11},{0,8,139},{0,8,75},{0,9,247},{16,7,5},{0,8,87},{0,8,23},
;;;80             {64,8,0},{19,7,51},{0,8,119},{0,8,55},{0,9,207},{17,7,15},{0,8,103},
;;;81             {0,8,39},{0,9,175},{0,8,7},{0,8,135},{0,8,71},{0,9,239},{16,7,9},
;;;82             {0,8,95},{0,8,31},{0,9,159},{20,7,99},{0,8,127},{0,8,63},{0,9,223},
;;;83             {18,7,27},{0,8,111},{0,8,47},{0,9,191},{0,8,15},{0,8,143},{0,8,79},
;;;84             {0,9,255}
;;;85         };
;;;86     
;;;87         static const code distfix[32] = {
;;;88             {16,5,1},{23,5,257},{19,5,17},{27,5,4097},{17,5,5},{25,5,1025},
;;;89             {21,5,65},{29,5,16385},{16,5,3},{24,5,513},{20,5,33},{28,5,8193},
;;;90             {18,5,9},{26,5,2049},{22,5,129},{64,5,0},{16,5,2},{23,5,385},
;;;91             {19,5,25},{27,5,6145},{17,5,7},{25,5,1537},{21,5,97},{29,5,24577},
;;;92             {16,5,4},{24,5,769},{20,5,49},{28,5,12289},{18,5,13},{26,5,3073},
;;;93             {22,5,193},{64,5,0}
;;;94         };
;;;241    #endif /* BUILDFIXED */
;;;242        state->lencode = lenfix;
000146  64c1              STR      r1,[r0,#0x4c]
;;;243        state->lenbits = 9;
000148  2109              MOVS     r1,#9
00014a  6541              STR      r1,[r0,#0x54]
;;;244        state->distcode = distfix;
00014c  49d7              LDR      r1,|L1.1196|
00014e  6501              STR      r1,[r0,#0x50]
;;;245        state->distbits = 5;
000150  2105              MOVS     r1,#5
000152  6581              STR      r1,[r0,#0x58]
;;;246    }
000154  4770              BX       lr
;;;247    
                          ENDP

                  updatewindow PROC
;;;322     */
;;;323    local int updatewindow(strm, out)
000156  e92d41f0          PUSH     {r4-r8,lr}
;;;324    z_streamp strm;
;;;325    unsigned out;
;;;326    {
00015a  4606              MOV      r6,r0
00015c  4688              MOV      r8,r1
;;;327        struct inflate_state FAR *state;
;;;328        unsigned copy, dist;
;;;329    
;;;330        state = (struct inflate_state FAR *)strm->state;
00015e  69f4              LDR      r4,[r6,#0x1c]
;;;331    
;;;332        /* if it hasn't been done already, allocate space for the window */
;;;333        if (state->window == Z_NULL) {
000160  6b60              LDR      r0,[r4,#0x34]
000162  b968              CBNZ     r0,|L1.384|
;;;334            state->window = (unsigned char FAR *)
000164  f894c024          LDRB     r12,[r4,#0x24]
000168  2201              MOVS     r2,#1
00016a  fa02f10c          LSL      r1,r2,r12
00016e  6a33              LDR      r3,[r6,#0x20]
000170  6ab0              LDR      r0,[r6,#0x28]
000172  4798              BLX      r3
000174  6360              STR      r0,[r4,#0x34]
;;;335                            ZALLOC(strm, 1U << state->wbits,
;;;336                                   sizeof(unsigned char));
;;;337            if (state->window == Z_NULL) return 1;
000176  6b60              LDR      r0,[r4,#0x34]
000178  b910              CBNZ     r0,|L1.384|
00017a  2001              MOVS     r0,#1
                  |L1.380|
;;;338        }
;;;339    
;;;340        /* if window not in use yet, initialize */
;;;341        if (state->wsize == 0) {
;;;342            state->wsize = 1U << state->wbits;
;;;343            state->write = 0;
;;;344            state->whave = 0;
;;;345        }
;;;346    
;;;347        /* copy state->wsize or less output bytes into the circular window */
;;;348        copy = out - strm->avail_out;
;;;349        if (copy >= state->wsize) {
;;;350            zmemcpy(state->window, strm->next_out - state->wsize, state->wsize);
;;;351            state->write = 0;
;;;352            state->whave = state->wsize;
;;;353        }
;;;354        else {
;;;355            dist = state->wsize - state->write;
;;;356            if (dist > copy) dist = copy;
;;;357            zmemcpy(state->window + state->write, strm->next_out - copy, dist);
;;;358            copy -= dist;
;;;359            if (copy) {
;;;360                zmemcpy(state->window, strm->next_out - copy, copy);
;;;361                state->write = copy;
;;;362                state->whave = state->wsize;
;;;363            }
;;;364            else {
;;;365                state->write += dist;
;;;366                if (state->write == state->wsize) state->write = 0;
;;;367                if (state->whave < state->wsize) state->whave += dist;
;;;368            }
;;;369        }
;;;370        return 0;
;;;371    }
00017c  e8bd81f0          POP      {r4-r8,pc}
                  |L1.384|
000180  6aa0              LDR      r0,[r4,#0x28]         ;341
000182  b938              CBNZ     r0,|L1.404|
000184  f8941024          LDRB     r1,[r4,#0x24]         ;342
000188  2001              MOVS     r0,#1                 ;342
00018a  4088              LSLS     r0,r0,r1              ;342
00018c  62a0              STR      r0,[r4,#0x28]         ;342
00018e  2000              MOVS     r0,#0                 ;343
000190  6320              STR      r0,[r4,#0x30]         ;343
000192  62e0              STR      r0,[r4,#0x2c]         ;344
                  |L1.404|
000194  6930              LDR      r0,[r6,#0x10]         ;348
000196  eba80500          SUB      r5,r8,r0              ;348
00019a  6aa0              LDR      r0,[r4,#0x28]         ;349
00019c  42a8              CMP      r0,r5                 ;349
00019e  d80d              BHI      |L1.444|
0001a0  68f3              LDR      r3,[r6,#0xc]          ;350
0001a2  f8d4c028          LDR      r12,[r4,#0x28]        ;350
0001a6  eba3010c          SUB      r1,r3,r12             ;350
0001aa  4662              MOV      r2,r12                ;350
0001ac  6b60              LDR      r0,[r4,#0x34]         ;350
0001ae  f7fffffe          BL       __aeabi_memcpy
0001b2  2000              MOVS     r0,#0                 ;351
0001b4  6320              STR      r0,[r4,#0x30]         ;351
0001b6  6aa0              LDR      r0,[r4,#0x28]         ;352
0001b8  62e0              STR      r0,[r4,#0x2c]         ;352
0001ba  e029              B        |L1.528|
                  |L1.444|
0001bc  6b21              LDR      r1,[r4,#0x30]         ;355
0001be  6aa0              LDR      r0,[r4,#0x28]         ;355
0001c0  1a47              SUBS     r7,r0,r1              ;355
0001c2  42af              CMP      r7,r5                 ;356
0001c4  d900              BLS      |L1.456|
0001c6  462f              MOV      r7,r5                 ;356
                  |L1.456|
0001c8  e9d4320c          LDRD     r3,r2,[r4,#0x30]      ;357
0001cc  18d0              ADDS     r0,r2,r3              ;357
0001ce  68f2              LDR      r2,[r6,#0xc]          ;357
0001d0  1b51              SUBS     r1,r2,r5              ;357
0001d2  463a              MOV      r2,r7                 ;357
0001d4  f7fffffe          BL       __aeabi_memcpy
0001d8  1bed              SUBS     r5,r5,r7              ;358
0001da  b14d              CBZ      r5,|L1.496|
0001dc  68f2              LDR      r2,[r6,#0xc]          ;360
0001de  1b51              SUBS     r1,r2,r5              ;360
0001e0  462a              MOV      r2,r5                 ;360
0001e2  6b60              LDR      r0,[r4,#0x34]         ;360
0001e4  f7fffffe          BL       __aeabi_memcpy
0001e8  6325              STR      r5,[r4,#0x30]         ;361
0001ea  6aa0              LDR      r0,[r4,#0x28]         ;362
0001ec  62e0              STR      r0,[r4,#0x2c]         ;362
0001ee  e00f              B        |L1.528|
                  |L1.496|
0001f0  6b20              LDR      r0,[r4,#0x30]         ;365
0001f2  4438              ADD      r0,r0,r7              ;365
0001f4  6320              STR      r0,[r4,#0x30]         ;365
0001f6  6aa1              LDR      r1,[r4,#0x28]         ;366
0001f8  6b20              LDR      r0,[r4,#0x30]         ;366
0001fa  4288              CMP      r0,r1                 ;366
0001fc  d101              BNE      |L1.514|
0001fe  2000              MOVS     r0,#0                 ;366
000200  6320              STR      r0,[r4,#0x30]         ;366
                  |L1.514|
000202  e9d4100a          LDRD     r1,r0,[r4,#0x28]      ;367
000206  4288              CMP      r0,r1                 ;367
000208  d202              BCS      |L1.528|
00020a  6ae0              LDR      r0,[r4,#0x2c]         ;367
00020c  4438              ADD      r0,r0,r7              ;367
00020e  62e0              STR      r0,[r4,#0x2c]         ;367
                  |L1.528|
000210  2000              MOVS     r0,#0                 ;370
000212  e7b3              B        |L1.380|
;;;372    
                          ENDP

                  inflate PROC
;;;553    
;;;554    int ZEXPORT inflate(strm, flush)
000214  e92d4ff3          PUSH     {r0,r1,r4-r11,lr}
;;;555    z_streamp strm;
;;;556    int flush;
;;;557    {
000218  b08b              SUB      sp,sp,#0x2c
00021a  4680              MOV      r8,r0
;;;558        struct inflate_state FAR *state;
;;;559        unsigned char FAR *next;    /* next input */
;;;560        unsigned char FAR *put;     /* next output */
;;;561        unsigned have, left;        /* available input and output */
;;;562        unsigned long hold;         /* bit buffer */
;;;563        unsigned bits;              /* bits in bit buffer */
;;;564        unsigned in, out;           /* save starting available input and output */
;;;565        unsigned copy;              /* number of stored or match bytes to copy */
;;;566        unsigned char FAR *from;    /* where to copy match bytes from */
;;;567        code this;                  /* current decoding table entry */
;;;568        code last;                  /* parent table entry */
;;;569        unsigned len;               /* length to copy for repeats, bits to drop */
;;;570        int ret;                    /* return code */
;;;571    #ifdef GUNZIP
;;;572        unsigned char hbuf[4];      /* buffer for gzip header crc calculation */
;;;573    #endif
;;;574        static const unsigned short order[19] = /* permutation of code lengths */
;;;575            {16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15};
;;;576    
;;;577        if (strm == Z_NULL || strm->state == Z_NULL || strm->next_out == Z_NULL ||
00021c  f1b80f00          CMP      r8,#0
000220  d00b              BEQ      |L1.570|
000222  f8d8001c          LDR      r0,[r8,#0x1c]
000226  b140              CBZ      r0,|L1.570|
000228  f8d8000c          LDR      r0,[r8,#0xc]
00022c  b128              CBZ      r0,|L1.570|
;;;578            (strm->next_in == Z_NULL && strm->avail_in != 0))
00022e  f8d80000          LDR      r0,[r8,#0]
000232  b938              CBNZ     r0,|L1.580|
000234  f8d80004          LDR      r0,[r8,#4]
000238  b120              CBZ      r0,|L1.580|
                  |L1.570|
;;;579            return Z_STREAM_ERROR;
00023a  f06f0001          MVN      r0,#1
                  |L1.574|
;;;580    
;;;581        state = (struct inflate_state FAR *)strm->state;
;;;582        if (state->mode == TYPE) state->mode = TYPEDO;      /* skip check */
;;;583        LOAD();
;;;584        in = have;
;;;585        out = left;
;;;586        ret = Z_OK;
;;;587        for (;;)
;;;588            switch (state->mode) {
;;;589            case HEAD:
;;;590                if (state->wrap == 0) {
;;;591                    state->mode = TYPEDO;
;;;592                    break;
;;;593                }
;;;594                NEEDBITS(16);
;;;595    #ifdef GUNZIP
;;;596                if ((state->wrap & 2) && hold == 0x8b1f) {  /* gzip header */
;;;597                    state->check = crc32(0L, Z_NULL, 0);
;;;598                    CRC2(state->check, hold);
;;;599                    INITBITS();
;;;600                    state->mode = FLAGS;
;;;601                    break;
;;;602                }
;;;603                state->flags = 0;           /* expect zlib header */
;;;604                if (state->head != Z_NULL)
;;;605                    state->head->done = -1;
;;;606                if (!(state->wrap & 1) ||   /* check if zlib header allowed */
;;;607    #else
;;;608                if (
;;;609    #endif
;;;610                    ((BITS(8) << 8) + (hold >> 8)) % 31) {
;;;611                    strm->msg = (char *)"incorrect header check";
;;;612                    state->mode = BAD;
;;;613                    break;
;;;614                }
;;;615                if (BITS(4) != Z_DEFLATED) {
;;;616                    strm->msg = (char *)"unknown compression method";
;;;617                    state->mode = BAD;
;;;618                    break;
;;;619                }
;;;620                DROPBITS(4);
;;;621                len = BITS(4) + 8;
;;;622                if (len > state->wbits) {
;;;623                    strm->msg = (char *)"invalid window size";
;;;624                    state->mode = BAD;
;;;625                    break;
;;;626                }
;;;627                state->dmax = 1U << len;
;;;628                Tracev((stderr, "inflate:   zlib header ok\n"));
;;;629                strm->adler = state->check = adler32(0L, Z_NULL, 0);
;;;630                state->mode = hold & 0x200 ? DICTID : TYPE;
;;;631                INITBITS();
;;;632                break;
;;;633    #ifdef GUNZIP
;;;634            case FLAGS:
;;;635                NEEDBITS(16);
;;;636                state->flags = (int)(hold);
;;;637                if ((state->flags & 0xff) != Z_DEFLATED) {
;;;638                    strm->msg = (char *)"unknown compression method";
;;;639                    state->mode = BAD;
;;;640                    break;
;;;641                }
;;;642                if (state->flags & 0xe000) {
;;;643                    strm->msg = (char *)"unknown header flags set";
;;;644                    state->mode = BAD;
;;;645                    break;
;;;646                }
;;;647                if (state->head != Z_NULL)
;;;648                    state->head->text = (int)((hold >> 8) & 1);
;;;649                if (state->flags & 0x0200) CRC2(state->check, hold);
;;;650                INITBITS();
;;;651                state->mode = TIME;
;;;652            case TIME:
;;;653                NEEDBITS(32);
;;;654                if (state->head != Z_NULL)
;;;655                    state->head->time = hold;
;;;656                if (state->flags & 0x0200) CRC4(state->check, hold);
;;;657                INITBITS();
;;;658                state->mode = OS;
;;;659            case OS:
;;;660                NEEDBITS(16);
;;;661                if (state->head != Z_NULL) {
;;;662                    state->head->xflags = (int)(hold & 0xff);
;;;663                    state->head->os = (int)(hold >> 8);
;;;664                }
;;;665                if (state->flags & 0x0200) CRC2(state->check, hold);
;;;666                INITBITS();
;;;667                state->mode = EXLEN;
;;;668            case EXLEN:
;;;669                if (state->flags & 0x0400) {
;;;670                    NEEDBITS(16);
;;;671                    state->length = (unsigned)(hold);
;;;672                    if (state->head != Z_NULL)
;;;673                        state->head->extra_len = (unsigned)hold;
;;;674                    if (state->flags & 0x0200) CRC2(state->check, hold);
;;;675                    INITBITS();
;;;676                }
;;;677                else if (state->head != Z_NULL)
;;;678                    state->head->extra = Z_NULL;
;;;679                state->mode = EXTRA;
;;;680            case EXTRA:
;;;681                if (state->flags & 0x0400) {
;;;682                    copy = state->length;
;;;683                    if (copy > have) copy = have;
;;;684                    if (copy) {
;;;685                        if (state->head != Z_NULL &&
;;;686                            state->head->extra != Z_NULL) {
;;;687                            len = state->head->extra_len - state->length;
;;;688                            zmemcpy(state->head->extra + len, next,
;;;689                                    len + copy > state->head->extra_max ?
;;;690                                    state->head->extra_max - len : copy);
;;;691                        }
;;;692                        if (state->flags & 0x0200)
;;;693                            state->check = crc32(state->check, next, copy);
;;;694                        have -= copy;
;;;695                        next += copy;
;;;696                        state->length -= copy;
;;;697                    }
;;;698                    if (state->length) goto inf_leave;
;;;699                }
;;;700                state->length = 0;
;;;701                state->mode = NAME;
;;;702            case NAME:
;;;703                if (state->flags & 0x0800) {
;;;704                    if (have == 0) goto inf_leave;
;;;705                    copy = 0;
;;;706                    do {
;;;707                        len = (unsigned)(next[copy++]);
;;;708                        if (state->head != Z_NULL &&
;;;709                                state->head->name != Z_NULL &&
;;;710                                state->length < state->head->name_max)
;;;711                            state->head->name[state->length++] = len;
;;;712                    } while (len && copy < have);
;;;713                    if (state->flags & 0x0200)
;;;714                        state->check = crc32(state->check, next, copy);
;;;715                    have -= copy;
;;;716                    next += copy;
;;;717                    if (len) goto inf_leave;
;;;718                }
;;;719                else if (state->head != Z_NULL)
;;;720                    state->head->name = Z_NULL;
;;;721                state->length = 0;
;;;722                state->mode = COMMENT;
;;;723            case COMMENT:
;;;724                if (state->flags & 0x1000) {
;;;725                    if (have == 0) goto inf_leave;
;;;726                    copy = 0;
;;;727                    do {
;;;728                        len = (unsigned)(next[copy++]);
;;;729                        if (state->head != Z_NULL &&
;;;730                                state->head->comment != Z_NULL &&
;;;731                                state->length < state->head->comm_max)
;;;732                            state->head->comment[state->length++] = len;
;;;733                    } while (len && copy < have);
;;;734                    if (state->flags & 0x0200)
;;;735                        state->check = crc32(state->check, next, copy);
;;;736                    have -= copy;
;;;737                    next += copy;
;;;738                    if (len) goto inf_leave;
;;;739                }
;;;740                else if (state->head != Z_NULL)
;;;741                    state->head->comment = Z_NULL;
;;;742                state->mode = HCRC;
;;;743            case HCRC:
;;;744                if (state->flags & 0x0200) {
;;;745                    NEEDBITS(16);
;;;746                    if (hold != (state->check & 0xffff)) {
;;;747                        strm->msg = (char *)"header crc mismatch";
;;;748                        state->mode = BAD;
;;;749                        break;
;;;750                    }
;;;751                    INITBITS();
;;;752                }
;;;753                if (state->head != Z_NULL) {
;;;754                    state->head->hcrc = (int)((state->flags >> 9) & 1);
;;;755                    state->head->done = 1;
;;;756                }
;;;757                strm->adler = state->check = crc32(0L, Z_NULL, 0);
;;;758                state->mode = TYPE;
;;;759                break;
;;;760    #endif
;;;761            case DICTID:
;;;762                NEEDBITS(32);
;;;763                strm->adler = state->check = REVERSE(hold);
;;;764                INITBITS();
;;;765                state->mode = DICT;
;;;766            case DICT:
;;;767                if (state->havedict == 0) {
;;;768                    RESTORE();
;;;769                    return Z_NEED_DICT;
;;;770                }
;;;771                strm->adler = state->check = adler32(0L, Z_NULL, 0);
;;;772                state->mode = TYPE;
;;;773            case TYPE:
;;;774                if (flush == Z_BLOCK) goto inf_leave;
;;;775            case TYPEDO:
;;;776                if (state->last) {
;;;777                    BYTEBITS();
;;;778                    state->mode = CHECK;
;;;779                    break;
;;;780                }
;;;781                NEEDBITS(3);
;;;782                state->last = BITS(1);
;;;783                DROPBITS(1);
;;;784                switch (BITS(2)) {
;;;785                case 0:                             /* stored block */
;;;786                    Tracev((stderr, "inflate:     stored block%s\n",
;;;787                            state->last ? " (last)" : ""));
;;;788                    state->mode = STORED;
;;;789                    break;
;;;790                case 1:                             /* fixed block */
;;;791                    fixedtables(state);
;;;792                    Tracev((stderr, "inflate:     fixed codes block%s\n",
;;;793                            state->last ? " (last)" : ""));
;;;794                    state->mode = LEN;              /* decode codes */
;;;795                    break;
;;;796                case 2:                             /* dynamic block */
;;;797                    Tracev((stderr, "inflate:     dynamic codes block%s\n",
;;;798                            state->last ? " (last)" : ""));
;;;799                    state->mode = TABLE;
;;;800                    break;
;;;801                case 3:
;;;802                    strm->msg = (char *)"invalid block type";
;;;803                    state->mode = BAD;
;;;804                }
;;;805                DROPBITS(2);
;;;806                break;
;;;807            case STORED:
;;;808                BYTEBITS();                         /* go to byte boundary */
;;;809                NEEDBITS(32);
;;;810                if ((hold & 0xffff) != ((hold >> 16) ^ 0xffff)) {
;;;811                    strm->msg = (char *)"invalid stored block lengths";
;;;812                    state->mode = BAD;
;;;813                    break;
;;;814                }
;;;815                state->length = (unsigned)hold & 0xffff;
;;;816                Tracev((stderr, "inflate:       stored length %u\n",
;;;817                        state->length));
;;;818                INITBITS();
;;;819                state->mode = COPY;
;;;820            case COPY:
;;;821                copy = state->length;
;;;822                if (copy) {
;;;823                    if (copy > have) copy = have;
;;;824                    if (copy > left) copy = left;
;;;825                    if (copy == 0) goto inf_leave;
;;;826                    zmemcpy(put, next, copy);
;;;827                    have -= copy;
;;;828                    next += copy;
;;;829                    left -= copy;
;;;830                    put += copy;
;;;831                    state->length -= copy;
;;;832                    break;
;;;833                }
;;;834                Tracev((stderr, "inflate:       stored end\n"));
;;;835                state->mode = TYPE;
;;;836                break;
;;;837            case TABLE:
;;;838                NEEDBITS(14);
;;;839                state->nlen = BITS(5) + 257;
;;;840                DROPBITS(5);
;;;841                state->ndist = BITS(5) + 1;
;;;842                DROPBITS(5);
;;;843                state->ncode = BITS(4) + 4;
;;;844                DROPBITS(4);
;;;845    #ifndef PKZIP_BUG_WORKAROUND
;;;846                if (state->nlen > 286 || state->ndist > 30) {
;;;847                    strm->msg = (char *)"too many length or distance symbols";
;;;848                    state->mode = BAD;
;;;849                    break;
;;;850                }
;;;851    #endif
;;;852                Tracev((stderr, "inflate:       table sizes ok\n"));
;;;853                state->have = 0;
;;;854                state->mode = LENLENS;
;;;855            case LENLENS:
;;;856                while (state->have < state->ncode) {
;;;857                    NEEDBITS(3);
;;;858                    state->lens[order[state->have++]] = (unsigned short)BITS(3);
;;;859                    DROPBITS(3);
;;;860                }
;;;861                while (state->have < 19)
;;;862                    state->lens[order[state->have++]] = 0;
;;;863                state->next = state->codes;
;;;864                state->lencode = (code const FAR *)(state->next);
;;;865                state->lenbits = 7;
;;;866                ret = inflate_table(CODES, state->lens, 19, &(state->next),
;;;867                                    &(state->lenbits), state->work);
;;;868                if (ret) {
;;;869                    strm->msg = (char *)"invalid code lengths set";
;;;870                    state->mode = BAD;
;;;871                    break;
;;;872                }
;;;873                Tracev((stderr, "inflate:       code lengths ok\n"));
;;;874                state->have = 0;
;;;875                state->mode = CODELENS;
;;;876            case CODELENS:
;;;877                while (state->have < state->nlen + state->ndist) {
;;;878                    for (;;) {
;;;879                        this = state->lencode[BITS(state->lenbits)];
;;;880                        if ((unsigned)(this.bits) <= bits) break;
;;;881                        PULLBYTE();
;;;882                    }
;;;883                    if (this.val < 16) {
;;;884                        NEEDBITS(this.bits);
;;;885                        DROPBITS(this.bits);
;;;886                        state->lens[state->have++] = this.val;
;;;887                    }
;;;888                    else {
;;;889                        if (this.val == 16) {
;;;890                            NEEDBITS(this.bits + 2);
;;;891                            DROPBITS(this.bits);
;;;892                            if (state->have == 0) {
;;;893                                strm->msg = (char *)"invalid bit length repeat";
;;;894                                state->mode = BAD;
;;;895                                break;
;;;896                            }
;;;897                            len = state->lens[state->have - 1];
;;;898                            copy = 3 + BITS(2);
;;;899                            DROPBITS(2);
;;;900                        }
;;;901                        else if (this.val == 17) {
;;;902                            NEEDBITS(this.bits + 3);
;;;903                            DROPBITS(this.bits);
;;;904                            len = 0;
;;;905                            copy = 3 + BITS(3);
;;;906                            DROPBITS(3);
;;;907                        }
;;;908                        else {
;;;909                            NEEDBITS(this.bits + 7);
;;;910                            DROPBITS(this.bits);
;;;911                            len = 0;
;;;912                            copy = 11 + BITS(7);
;;;913                            DROPBITS(7);
;;;914                        }
;;;915                        if (state->have + copy > state->nlen + state->ndist) {
;;;916                            strm->msg = (char *)"invalid bit length repeat";
;;;917                            state->mode = BAD;
;;;918                            break;
;;;919                        }
;;;920                        while (copy--)
;;;921                            state->lens[state->have++] = (unsigned short)len;
;;;922                    }
;;;923                }
;;;924    
;;;925                /* handle error breaks in while */
;;;926                if (state->mode == BAD) break;
;;;927    
;;;928                /* build code tables */
;;;929                state->next = state->codes;
;;;930                state->lencode = (code const FAR *)(state->next);
;;;931                state->lenbits = 9;
;;;932                ret = inflate_table(LENS, state->lens, state->nlen, &(state->next),
;;;933                                    &(state->lenbits), state->work);
;;;934                if (ret) {
;;;935                    strm->msg = (char *)"invalid literal/lengths set";
;;;936                    state->mode = BAD;
;;;937                    break;
;;;938                }
;;;939                state->distcode = (code const FAR *)(state->next);
;;;940                state->distbits = 6;
;;;941                ret = inflate_table(DISTS, state->lens + state->nlen, state->ndist,
;;;942                                &(state->next), &(state->distbits), state->work);
;;;943                if (ret) {
;;;944                    strm->msg = (char *)"invalid distances set";
;;;945                    state->mode = BAD;
;;;946                    break;
;;;947                }
;;;948                Tracev((stderr, "inflate:       codes ok\n"));
;;;949                state->mode = LEN;
;;;950            case LEN:
;;;951                if (have >= 6 && left >= 258) {
;;;952                    RESTORE();
;;;953                    inflate_fast(strm, out);
;;;954                    LOAD();
;;;955                    break;
;;;956                }
;;;957                for (;;) {
;;;958                    this = state->lencode[BITS(state->lenbits)];
;;;959                    if ((unsigned)(this.bits) <= bits) break;
;;;960                    PULLBYTE();
;;;961                }
;;;962                if (this.op && (this.op & 0xf0) == 0) {
;;;963                    last = this;
;;;964                    for (;;) {
;;;965                        this = state->lencode[last.val +
;;;966                                (BITS(last.bits + last.op) >> last.bits)];
;;;967                        if ((unsigned)(last.bits + this.bits) <= bits) break;
;;;968                        PULLBYTE();
;;;969                    }
;;;970                    DROPBITS(last.bits);
;;;971                }
;;;972                DROPBITS(this.bits);
;;;973                state->length = (unsigned)this.val;
;;;974                if ((int)(this.op) == 0) {
;;;975                    Tracevv((stderr, this.val >= 0x20 && this.val < 0x7f ?
;;;976                            "inflate:         literal '%c'\n" :
;;;977                            "inflate:         literal 0x%02x\n", this.val));
;;;978                    state->mode = LIT;
;;;979                    break;
;;;980                }
;;;981                if (this.op & 32) {
;;;982                    Tracevv((stderr, "inflate:         end of block\n"));
;;;983                    state->mode = TYPE;
;;;984                    break;
;;;985                }
;;;986                if (this.op & 64) {
;;;987                    strm->msg = (char *)"invalid literal/length code";
;;;988                    state->mode = BAD;
;;;989                    break;
;;;990                }
;;;991                state->extra = (unsigned)(this.op) & 15;
;;;992                state->mode = LENEXT;
;;;993            case LENEXT:
;;;994                if (state->extra) {
;;;995                    NEEDBITS(state->extra);
;;;996                    state->length += BITS(state->extra);
;;;997                    DROPBITS(state->extra);
;;;998                }
;;;999                Tracevv((stderr, "inflate:         length %u\n", state->length));
;;;1000               state->mode = DIST;
;;;1001           case DIST:
;;;1002               for (;;) {
;;;1003                   this = state->distcode[BITS(state->distbits)];
;;;1004                   if ((unsigned)(this.bits) <= bits) break;
;;;1005                   PULLBYTE();
;;;1006               }
;;;1007               if ((this.op & 0xf0) == 0) {
;;;1008                   last = this;
;;;1009                   for (;;) {
;;;1010                       this = state->distcode[last.val +
;;;1011                               (BITS(last.bits + last.op) >> last.bits)];
;;;1012                       if ((unsigned)(last.bits + this.bits) <= bits) break;
;;;1013                       PULLBYTE();
;;;1014                   }
;;;1015                   DROPBITS(last.bits);
;;;1016               }
;;;1017               DROPBITS(this.bits);
;;;1018               if (this.op & 64) {
;;;1019                   strm->msg = (char *)"invalid distance code";
;;;1020                   state->mode = BAD;
;;;1021                   break;
;;;1022               }
;;;1023               state->offset = (unsigned)this.val;
;;;1024               state->extra = (unsigned)(this.op) & 15;
;;;1025               state->mode = DISTEXT;
;;;1026           case DISTEXT:
;;;1027               if (state->extra) {
;;;1028                   NEEDBITS(state->extra);
;;;1029                   state->offset += BITS(state->extra);
;;;1030                   DROPBITS(state->extra);
;;;1031               }
;;;1032   #ifdef INFLATE_STRICT
;;;1033               if (state->offset > state->dmax) {
;;;1034                   strm->msg = (char *)"invalid distance too far back";
;;;1035                   state->mode = BAD;
;;;1036                   break;
;;;1037               }
;;;1038   #endif
;;;1039               if (state->offset > state->whave + out - left) {
;;;1040                   strm->msg = (char *)"invalid distance too far back";
;;;1041                   state->mode = BAD;
;;;1042                   break;
;;;1043               }
;;;1044               Tracevv((stderr, "inflate:         distance %u\n", state->offset));
;;;1045               state->mode = MATCH;
;;;1046           case MATCH:
;;;1047               if (left == 0) goto inf_leave;
;;;1048               copy = out - left;
;;;1049               if (state->offset > copy) {         /* copy from window */
;;;1050                   copy = state->offset - copy;
;;;1051                   if (copy > state->write) {
;;;1052                       copy -= state->write;
;;;1053                       from = state->window + (state->wsize - copy);
;;;1054                   }
;;;1055                   else
;;;1056                       from = state->window + (state->write - copy);
;;;1057                   if (copy > state->length) copy = state->length;
;;;1058               }
;;;1059               else {                              /* copy from output */
;;;1060                   from = put - state->offset;
;;;1061                   copy = state->length;
;;;1062               }
;;;1063               if (copy > left) copy = left;
;;;1064               left -= copy;
;;;1065               state->length -= copy;
;;;1066               do {
;;;1067                   *put++ = *from++;
;;;1068               } while (--copy);
;;;1069               if (state->length == 0) state->mode = LEN;
;;;1070               break;
;;;1071           case LIT:
;;;1072               if (left == 0) goto inf_leave;
;;;1073               *put++ = (unsigned char)(state->length);
;;;1074               left--;
;;;1075               state->mode = LEN;
;;;1076               break;
;;;1077           case CHECK:
;;;1078               if (state->wrap) {
;;;1079                   NEEDBITS(32);
;;;1080                   out -= left;
;;;1081                   strm->total_out += out;
;;;1082                   state->total += out;
;;;1083                   if (out)
;;;1084                       strm->adler = state->check =
;;;1085                           UPDATE(state->check, put - out, out);
;;;1086                   out = left;
;;;1087                   if ((
;;;1088   #ifdef GUNZIP
;;;1089                        state->flags ? hold :
;;;1090   #endif
;;;1091                        REVERSE(hold)) != state->check) {
;;;1092                       strm->msg = (char *)"incorrect data check";
;;;1093                       state->mode = BAD;
;;;1094                       break;
;;;1095                   }
;;;1096                   INITBITS();
;;;1097                   Tracev((stderr, "inflate:   check matches trailer\n"));
;;;1098               }
;;;1099   #ifdef GUNZIP
;;;1100               state->mode = LENGTH;
;;;1101           case LENGTH:
;;;1102               if (state->wrap && state->flags) {
;;;1103                   NEEDBITS(32);
;;;1104                   if (hold != (state->total & 0xffffffffUL)) {
;;;1105                       strm->msg = (char *)"incorrect length check";
;;;1106                       state->mode = BAD;
;;;1107                       break;
;;;1108                   }
;;;1109                   INITBITS();
;;;1110                   Tracev((stderr, "inflate:   length matches trailer\n"));
;;;1111               }
;;;1112   #endif
;;;1113               state->mode = DONE;
;;;1114           case DONE:
;;;1115               ret = Z_STREAM_END;
;;;1116               goto inf_leave;
;;;1117           case BAD:
;;;1118               ret = Z_DATA_ERROR;
;;;1119               goto inf_leave;
;;;1120           case MEM:
;;;1121               return Z_MEM_ERROR;
;;;1122           case SYNC:
;;;1123           default:
;;;1124               return Z_STREAM_ERROR;
;;;1125           }
;;;1126   
;;;1127       /*
;;;1128          Return from inflate(), updating the total counts and the check value.
;;;1129          If there was no progress during the inflate() call, return a buffer
;;;1130          error.  Call updatewindow() to create and/or update the window state.
;;;1131          Note: a memory error from inflate() is non-recoverable.
;;;1132        */
;;;1133     inf_leave:
;;;1134       RESTORE();
;;;1135       if (state->wsize || (state->mode < CHECK && out != strm->avail_out))
;;;1136           if (updatewindow(strm, out)) {
;;;1137               state->mode = MEM;
;;;1138               return Z_MEM_ERROR;
;;;1139           }
;;;1140       in -= strm->avail_in;
;;;1141       out -= strm->avail_out;
;;;1142       strm->total_in += in;
;;;1143       strm->total_out += out;
;;;1144       state->total += out;
;;;1145       if (state->wrap && out)
;;;1146           strm->adler = state->check =
;;;1147               UPDATE(state->check, strm->next_out - out, out);
;;;1148       strm->data_type = state->bits + (state->last ? 64 : 0) +
;;;1149                         (state->mode == TYPE ? 128 : 0);
;;;1150       if (((in == 0 && out == 0) || flush == Z_FINISH) && ret == Z_OK)
;;;1151           ret = Z_BUF_ERROR;
;;;1152       return ret;
;;;1153   }
00023e  b00d              ADD      sp,sp,#0x34
000240  e8bd8ff0          POP      {r4-r11,pc}
                  |L1.580|
000244  f8d8401c          LDR      r4,[r8,#0x1c]         ;581
000248  7820              LDRB     r0,[r4,#0]            ;582
00024a  280b              CMP      r0,#0xb               ;582
00024c  d101              BNE      |L1.594|
00024e  200c              MOVS     r0,#0xc               ;582
000250  7020              STRB     r0,[r4,#0]            ;582
                  |L1.594|
000252  bf00              NOP                            ;583
000254  f8d8000c          LDR      r0,[r8,#0xc]          ;583
000258  900a              STR      r0,[sp,#0x28]         ;583
00025a  f8d8b010          LDR      r11,[r8,#0x10]        ;583
00025e  f8d89000          LDR      r9,[r8,#0]            ;583
000262  f8d87004          LDR      r7,[r8,#4]            ;583
000266  6ba5              LDR      r5,[r4,#0x38]         ;583
000268  6be6              LDR      r6,[r4,#0x3c]         ;583
00026a  bf00              NOP                            ;583
00026c  9709              STR      r7,[sp,#0x24]         ;584
00026e  f8cdb020          STR      r11,[sp,#0x20]        ;585
000272  2000              MOVS     r0,#0                 ;586
000274  9003              STR      r0,[sp,#0xc]          ;586
000276  bf00              NOP                            ;587
                  |L1.632|
000278  7820              LDRB     r0,[r4,#0]            ;588
00027a  281e              CMP      r0,#0x1e              ;588
00027c  f0818021          BCS.W    |L1.4802|
000280  e8dff010          TBH      [pc,r0,LSL #1]        ;588
000284  001e00a7          DCW      0x001e,0x00a7
000288  00e9015c          DCW      0x00e9,0x015c
00028c  018c01c2          DCW      0x018c,0x01c2
000290  02060246          DCW      0x0206,0x0246
000294  028402ba          DCW      0x0284,0x02ba
000298  02df02fb          DCW      0x02df,0x02fb
00029c  03000345          DCW      0x0300,0x0345
0002a0  03720396          DCW      0x0372,0x0396
0002a4  03d00425          DCW      0x03d0,0x0425
0002a8  0598063e          DCW      0x0598,0x063e
0002ac  0663070c          DCW      0x0663,0x070c
0002b0  073f0789          DCW      0x073f,0x0789
0002b4  079907f1          DCW      0x0799,0x07f1
0002b8  08140817          DCW      0x0814,0x0817
0002bc  081b0820          DCW      0x081b,0x0820
0002c0  68a0              LDR      r0,[r4,#8]            ;590
0002c2  b918              CBNZ     r0,|L1.716|
0002c4  200c              MOVS     r0,#0xc               ;591
0002c6  7020              STRB     r0,[r4,#0]            ;591
                  |L1.712|
0002c8  f000bfff          B.W      |L1.4810|
                  |L1.716|
0002cc  bf00              NOP                            ;594
0002ce  e00a              B        |L1.742|
                  |L1.720|
0002d0  bf00              NOP                            ;594
0002d2  b90f              CBNZ     r7,|L1.728|
                  |L1.724|
0002d4  f000bffb          B.W      |L1.4814|
                  |L1.728|
0002d8  1e7f              SUBS     r7,r7,#1              ;594
0002da  f8190b01          LDRB     r0,[r9],#1            ;594
0002de  40b0              LSLS     r0,r0,r6              ;594
0002e0  4405              ADD      r5,r5,r0              ;594
0002e2  3608              ADDS     r6,r6,#8              ;594
0002e4  bf00              NOP                            ;594
                  |L1.742|
0002e6  2e10              CMP      r6,#0x10              ;594
0002e8  d3f2              BCC      |L1.720|
0002ea  bf00              NOP                            ;594
0002ec  7a20              LDRB     r0,[r4,#8]            ;596
0002ee  f0000002          AND      r0,r0,#2              ;596
0002f2  b1f0              CBZ      r0,|L1.818|
0002f4  f648301f          MOV      r0,#0x8b1f            ;596
0002f8  4285              CMP      r5,r0                 ;596
0002fa  d11a              BNE      |L1.818|
0002fc  2200              MOVS     r2,#0                 ;597
0002fe  4611              MOV      r1,r2                 ;597
000300  4610              MOV      r0,r2                 ;597
000302  f7fffffe          BL       crc32
000306  61a0              STR      r0,[r4,#0x18]         ;597
000308  bf00              NOP                            ;598
00030a  b2e8              UXTB     r0,r5                 ;598
00030c  f88d0008          STRB     r0,[sp,#8]            ;598
000310  0a28              LSRS     r0,r5,#8              ;598
000312  f88d0009          STRB     r0,[sp,#9]            ;598
000316  2202              MOVS     r2,#2                 ;598
000318  a902              ADD      r1,sp,#8              ;598
00031a  69a0              LDR      r0,[r4,#0x18]         ;598
00031c  f7fffffe          BL       crc32
000320  61a0              STR      r0,[r4,#0x18]         ;598
000322  bf00              NOP                            ;598
000324  bf00              NOP                            ;599
000326  2500              MOVS     r5,#0                 ;599
000328  2600              MOVS     r6,#0                 ;599
00032a  bf00              NOP                            ;599
00032c  2001              MOVS     r0,#1                 ;600
00032e  7020              STRB     r0,[r4,#0]            ;600
                  |L1.816|
000330  e7ca              B        |L1.712|
                  |L1.818|
000332  2000              MOVS     r0,#0                 ;603
000334  6120              STR      r0,[r4,#0x10]         ;603
000336  6a20              LDR      r0,[r4,#0x20]         ;604
000338  b118              CBZ      r0,|L1.834|
00033a  f04f30ff          MOV      r0,#0xffffffff        ;605
00033e  6a21              LDR      r1,[r4,#0x20]         ;605
000340  6308              STR      r0,[r1,#0x30]         ;605
                  |L1.834|
000342  7a20              LDRB     r0,[r4,#8]            ;606
000344  f0000001          AND      r0,r0,#1              ;606
000348  b148              CBZ      r0,|L1.862|
00034a  0628              LSLS     r0,r5,#24             ;610
00034c  0c00              LSRS     r0,r0,#16             ;610
00034e  eb002015          ADD      r0,r0,r5,LSR #8       ;610
000352  211f              MOVS     r1,#0x1f              ;610
000354  fbb0f2f1          UDIV     r2,r0,r1              ;610
000358  fb010012          MLS      r0,r1,r2,r0           ;610
00035c  b128              CBZ      r0,|L1.874|
                  |L1.862|
00035e  a054              ADR      r0,|L1.1200|
000360  f8c80018          STR      r0,[r8,#0x18]         ;611
000364  201b              MOVS     r0,#0x1b              ;612
000366  7020              STRB     r0,[r4,#0]            ;612
000368  e7ae              B        |L1.712|
                  |L1.874|
00036a  f005000f          AND      r0,r5,#0xf            ;615
00036e  2808              CMP      r0,#8                 ;615
000370  d005              BEQ      |L1.894|
000372  a055              ADR      r0,|L1.1224|
000374  f8c80018          STR      r0,[r8,#0x18]         ;616
000378  201b              MOVS     r0,#0x1b              ;617
00037a  7020              STRB     r0,[r4,#0]            ;617
00037c  e7a4              B        |L1.712|
                  |L1.894|
00037e  bf00              NOP                            ;620
000380  092d              LSRS     r5,r5,#4              ;620
000382  1f36              SUBS     r6,r6,#4              ;620
000384  bf00              NOP                            ;620
000386  f005000f          AND      r0,r5,#0xf            ;621
00038a  3008              ADDS     r0,r0,#8              ;621
00038c  9004              STR      r0,[sp,#0x10]         ;621
00038e  6a61              LDR      r1,[r4,#0x24]         ;622
000390  9804              LDR      r0,[sp,#0x10]         ;622
000392  4281              CMP      r1,r0                 ;622
000394  d205              BCS      |L1.930|
000396  a053              ADR      r0,|L1.1252|
000398  f8c80018          STR      r0,[r8,#0x18]         ;623
00039c  201b              MOVS     r0,#0x1b              ;624
00039e  7020              STRB     r0,[r4,#0]            ;624
0003a0  e792              B        |L1.712|
                  |L1.930|
0003a2  2101              MOVS     r1,#1                 ;627
0003a4  9804              LDR      r0,[sp,#0x10]         ;627
0003a6  4081              LSLS     r1,r1,r0              ;627
0003a8  6161              STR      r1,[r4,#0x14]         ;627
0003aa  2200              MOVS     r2,#0                 ;629
0003ac  4611              MOV      r1,r2                 ;629
0003ae  4610              MOV      r0,r2                 ;629
0003b0  f7fffffe          BL       adler32
0003b4  61a0              STR      r0,[r4,#0x18]         ;629
0003b6  f8c80030          STR      r0,[r8,#0x30]         ;629
0003ba  f4057000          AND      r0,r5,#0x200          ;630
0003be  b108              CBZ      r0,|L1.964|
0003c0  2009              MOVS     r0,#9                 ;630
0003c2  e000              B        |L1.966|
                  |L1.964|
0003c4  200b              MOVS     r0,#0xb               ;630
                  |L1.966|
0003c6  7020              STRB     r0,[r4,#0]            ;630
0003c8  bf00              NOP                            ;631
0003ca  2500              MOVS     r5,#0                 ;631
0003cc  2600              MOVS     r6,#0                 ;631
0003ce  bf00              NOP                            ;631
0003d0  e77a              B        |L1.712|
0003d2  bf00              NOP                            ;635
0003d4  e009              B        |L1.1002|
                  |L1.982|
0003d6  bf00              NOP                            ;635
0003d8  b907              CBNZ     r7,|L1.988|
0003da  e77b              B        |L1.724|
                  |L1.988|
0003dc  1e7f              SUBS     r7,r7,#1              ;635
0003de  f8190b01          LDRB     r0,[r9],#1            ;635
0003e2  40b0              LSLS     r0,r0,r6              ;635
0003e4  4405              ADD      r5,r5,r0              ;635
0003e6  3608              ADDS     r6,r6,#8              ;635
0003e8  bf00              NOP                            ;635
                  |L1.1002|
0003ea  2e10              CMP      r6,#0x10              ;635
0003ec  d3f3              BCC      |L1.982|
0003ee  bf00              NOP                            ;635
0003f0  6125              STR      r5,[r4,#0x10]         ;636
0003f2  7c20              LDRB     r0,[r4,#0x10]         ;637
0003f4  2808              CMP      r0,#8                 ;637
0003f6  d005              BEQ      |L1.1028|
0003f8  a033              ADR      r0,|L1.1224|
0003fa  f8c80018          STR      r0,[r8,#0x18]         ;638
0003fe  201b              MOVS     r0,#0x1b              ;639
000400  7020              STRB     r0,[r4,#0]            ;639
000402  e761              B        |L1.712|
                  |L1.1028|
000404  8a20              LDRH     r0,[r4,#0x10]         ;642
000406  f4004060          AND      r0,r0,#0xe000         ;642
00040a  b128              CBZ      r0,|L1.1048|
00040c  a03a              ADR      r0,|L1.1272|
00040e  f8c80018          STR      r0,[r8,#0x18]         ;643
000412  201b              MOVS     r0,#0x1b              ;644
000414  7020              STRB     r0,[r4,#0]            ;644
000416  e757              B        |L1.712|
                  |L1.1048|
000418  6a20              LDR      r0,[r4,#0x20]         ;647
00041a  b118              CBZ      r0,|L1.1060|
00041c  f3c52000          UBFX     r0,r5,#8,#1           ;648
000420  6a21              LDR      r1,[r4,#0x20]         ;648
000422  6008              STR      r0,[r1,#0]            ;648
                  |L1.1060|
000424  8a20              LDRH     r0,[r4,#0x10]         ;649
000426  f4007000          AND      r0,r0,#0x200          ;649
00042a  b168              CBZ      r0,|L1.1096|
00042c  bf00              NOP                            ;649
00042e  b2e8              UXTB     r0,r5                 ;649
000430  f88d0008          STRB     r0,[sp,#8]            ;649
000434  0a28              LSRS     r0,r5,#8              ;649
000436  f88d0009          STRB     r0,[sp,#9]            ;649
00043a  2202              MOVS     r2,#2                 ;649
00043c  a902              ADD      r1,sp,#8              ;649
00043e  69a0              LDR      r0,[r4,#0x18]         ;649
000440  f7fffffe          BL       crc32
000444  61a0              STR      r0,[r4,#0x18]         ;649
000446  bf00              NOP                            ;649
                  |L1.1096|
000448  bf00              NOP                            ;650
00044a  2500              MOVS     r5,#0                 ;650
00044c  2600              MOVS     r6,#0                 ;650
00044e  bf00              NOP                            ;650
000450  2002              MOVS     r0,#2                 ;651
000452  7020              STRB     r0,[r4,#0]            ;651
000454  bf00              NOP                            ;652
000456  bf00              NOP                            ;653
000458  e009              B        |L1.1134|
                  |L1.1114|
00045a  bf00              NOP                            ;653
00045c  b907              CBNZ     r7,|L1.1120|
00045e  e739              B        |L1.724|
                  |L1.1120|
000460  1e7f              SUBS     r7,r7,#1              ;653
000462  f8190b01          LDRB     r0,[r9],#1            ;653
000466  40b0              LSLS     r0,r0,r6              ;653
000468  4405              ADD      r5,r5,r0              ;653
00046a  3608              ADDS     r6,r6,#8              ;653
00046c  bf00              NOP                            ;653
                  |L1.1134|
00046e  2e20              CMP      r6,#0x20              ;653
000470  d3f3              BCC      |L1.1114|
000472  bf00              NOP                            ;653
000474  6a20              LDR      r0,[r4,#0x20]         ;654
000476  b108              CBZ      r0,|L1.1148|
000478  6a20              LDR      r0,[r4,#0x20]         ;655
00047a  6045              STR      r5,[r0,#4]            ;655
                  |L1.1148|
00047c  8a20              LDRH     r0,[r4,#0x10]         ;656
00047e  f4007000          AND      r0,r0,#0x200          ;656
000482  b138              CBZ      r0,|L1.1172|
000484  bf00              NOP                            ;656
000486  b2e8              UXTB     r0,r5                 ;656
000488  f88d0008          STRB     r0,[sp,#8]            ;656
00048c  0a28              LSRS     r0,r5,#8              ;656
00048e  f88d0009          STRB     r0,[sp,#9]            ;656
000492  e03f              B        |L1.1300|
                  |L1.1172|
000494  e04b              B        |L1.1326|
000496  0000              DCW      0x0000
                  |L1.1176|
000498  312e322e          DCB      "1.2.3",0
00049c  3300    
00049e  00                DCB      0
00049f  00                DCB      0
                  |L1.1184|
                          DCD      zcalloc
                  |L1.1188|
                          DCD      zcfree
                  |L1.1192|
                          DCD      lenfix
                  |L1.1196|
                          DCD      distfix
                  |L1.1200|
0004b0  696e636f          DCB      "incorrect header check",0
0004b4  72726563
0004b8  74206865
0004bc  61646572
0004c0  20636865
0004c4  636b00  
0004c7  00                DCB      0
                  |L1.1224|
0004c8  756e6b6e          DCB      "unknown compression method",0
0004cc  6f776e20
0004d0  636f6d70
0004d4  72657373
0004d8  696f6e20
0004dc  6d657468
0004e0  6f6400  
0004e3  00                DCB      0
                  |L1.1252|
0004e4  696e7661          DCB      "invalid window size",0
0004e8  6c696420
0004ec  77696e64
0004f0  6f772073
0004f4  697a6500
                  |L1.1272|
0004f8  756e6b6e          DCB      "unknown header flags set",0
0004fc  6f776e20
000500  68656164
000504  65722066
000508  6c616773
00050c  20736574
000510  00      
000511  00                DCB      0
000512  00                DCB      0
000513  00                DCB      0
                  |L1.1300|
000514  0c28              LSRS     r0,r5,#16             ;656
000516  f88d000a          STRB     r0,[sp,#0xa]          ;656
00051a  0e28              LSRS     r0,r5,#24             ;656
00051c  f88d000b          STRB     r0,[sp,#0xb]          ;656
000520  2204              MOVS     r2,#4                 ;656
000522  a902              ADD      r1,sp,#8              ;656
000524  69a0              LDR      r0,[r4,#0x18]         ;656
000526  f7fffffe          BL       crc32
00052a  61a0              STR      r0,[r4,#0x18]         ;656
00052c  bf00              NOP                            ;656
                  |L1.1326|
00052e  bf00              NOP                            ;657
000530  2500              MOVS     r5,#0                 ;657
000532  2600              MOVS     r6,#0                 ;657
000534  bf00              NOP                            ;657
000536  2003              MOVS     r0,#3                 ;658
000538  7020              STRB     r0,[r4,#0]            ;658
00053a  bf00              NOP                            ;659
00053c  bf00              NOP                            ;660
00053e  e009              B        |L1.1364|
                  |L1.1344|
000540  bf00              NOP                            ;660
000542  b907              CBNZ     r7,|L1.1350|
000544  e6c6              B        |L1.724|
                  |L1.1350|
000546  1e7f              SUBS     r7,r7,#1              ;660
000548  f8190b01          LDRB     r0,[r9],#1            ;660
00054c  40b0              LSLS     r0,r0,r6              ;660
00054e  4405              ADD      r5,r5,r0              ;660
000550  3608              ADDS     r6,r6,#8              ;660
000552  bf00              NOP                            ;660
                  |L1.1364|
000554  2e10              CMP      r6,#0x10              ;660
000556  d3f3              BCC      |L1.1344|
000558  bf00              NOP                            ;660
00055a  6a20              LDR      r0,[r4,#0x20]         ;661
00055c  b128              CBZ      r0,|L1.1386|
00055e  b2e8              UXTB     r0,r5                 ;662
000560  6a21              LDR      r1,[r4,#0x20]         ;662
000562  6088              STR      r0,[r1,#8]            ;662
000564  0a28              LSRS     r0,r5,#8              ;663
000566  6a21              LDR      r1,[r4,#0x20]         ;663
000568  60c8              STR      r0,[r1,#0xc]          ;663
                  |L1.1386|
00056a  8a20              LDRH     r0,[r4,#0x10]         ;665
00056c  f4007000          AND      r0,r0,#0x200          ;665
000570  b168              CBZ      r0,|L1.1422|
000572  bf00              NOP                            ;665
000574  b2e8              UXTB     r0,r5                 ;665
000576  f88d0008          STRB     r0,[sp,#8]            ;665
00057a  0a28              LSRS     r0,r5,#8              ;665
00057c  f88d0009          STRB     r0,[sp,#9]            ;665
000580  2202              MOVS     r2,#2                 ;665
000582  a902              ADD      r1,sp,#8              ;665
000584  69a0              LDR      r0,[r4,#0x18]         ;665
000586  f7fffffe          BL       crc32
00058a  61a0              STR      r0,[r4,#0x18]         ;665
00058c  bf00              NOP                            ;665
                  |L1.1422|
00058e  bf00              NOP                            ;666
000590  2500              MOVS     r5,#0                 ;666
000592  2600              MOVS     r6,#0                 ;666
000594  bf00              NOP                            ;666
000596  2004              MOVS     r0,#4                 ;667
000598  7020              STRB     r0,[r4,#0]            ;667
00059a  bf00              NOP                            ;668
00059c  8a20              LDRH     r0,[r4,#0x10]         ;669
00059e  f4006080          AND      r0,r0,#0x400          ;669
0005a2  b348              CBZ      r0,|L1.1528|
0005a4  bf00              NOP                            ;670
0005a6  e009              B        |L1.1468|
                  |L1.1448|
0005a8  bf00              NOP                            ;670
0005aa  b907              CBNZ     r7,|L1.1454|
0005ac  e692              B        |L1.724|
                  |L1.1454|
0005ae  1e7f              SUBS     r7,r7,#1              ;670
0005b0  f8190b01          LDRB     r0,[r9],#1            ;670
0005b4  40b0              LSLS     r0,r0,r6              ;670
0005b6  4405              ADD      r5,r5,r0              ;670
0005b8  3608              ADDS     r6,r6,#8              ;670
0005ba  bf00              NOP                            ;670
                  |L1.1468|
0005bc  2e10              CMP      r6,#0x10              ;670
0005be  d3f3              BCC      |L1.1448|
0005c0  bf00              NOP                            ;670
0005c2  6425              STR      r5,[r4,#0x40]         ;671
0005c4  6a20              LDR      r0,[r4,#0x20]         ;672
0005c6  b108              CBZ      r0,|L1.1484|
0005c8  6a20              LDR      r0,[r4,#0x20]         ;673
0005ca  6145              STR      r5,[r0,#0x14]         ;673
                  |L1.1484|
0005cc  8a20              LDRH     r0,[r4,#0x10]         ;674
0005ce  f4007000          AND      r0,r0,#0x200          ;674
0005d2  b168              CBZ      r0,|L1.1520|
0005d4  bf00              NOP                            ;674
0005d6  b2e8              UXTB     r0,r5                 ;674
0005d8  f88d0008          STRB     r0,[sp,#8]            ;674
0005dc  0a28              LSRS     r0,r5,#8              ;674
0005de  f88d0009          STRB     r0,[sp,#9]            ;674
0005e2  2202              MOVS     r2,#2                 ;674
0005e4  a902              ADD      r1,sp,#8              ;674
0005e6  69a0              LDR      r0,[r4,#0x18]         ;674
0005e8  f7fffffe          BL       crc32
0005ec  61a0              STR      r0,[r4,#0x18]         ;674
0005ee  bf00              NOP                            ;674
                  |L1.1520|
0005f0  bf00              NOP                            ;675
0005f2  2500              MOVS     r5,#0                 ;675
0005f4  2600              MOVS     r6,#0                 ;675
0005f6  e004              B        |L1.1538|
                  |L1.1528|
0005f8  6a20              LDR      r0,[r4,#0x20]         ;677
0005fa  b110              CBZ      r0,|L1.1538|
0005fc  2000              MOVS     r0,#0                 ;678
0005fe  6a21              LDR      r1,[r4,#0x20]         ;678
000600  6108              STR      r0,[r1,#0x10]         ;678
                  |L1.1538|
000602  2005              MOVS     r0,#5                 ;679
000604  7020              STRB     r0,[r4,#0]            ;679
000606  bf00              NOP                            ;680
000608  8a20              LDRH     r0,[r4,#0x10]         ;681
00060a  f4006080          AND      r0,r0,#0x400          ;681
00060e  b3c8              CBZ      r0,|L1.1668|
000610  f8d4a040          LDR      r10,[r4,#0x40]        ;682
000614  45ba              CMP      r10,r7                ;683
000616  d900              BLS      |L1.1562|
000618  46ba              MOV      r10,r7                ;683
                  |L1.1562|
00061a  f1ba0f00          CMP      r10,#0                ;684
00061e  d02e              BEQ      |L1.1662|
000620  6a20              LDR      r0,[r4,#0x20]         ;685
000622  b1d8              CBZ      r0,|L1.1628|
000624  6a20              LDR      r0,[r4,#0x20]         ;686
000626  6900              LDR      r0,[r0,#0x10]         ;686
000628  b1c0              CBZ      r0,|L1.1628|
00062a  6a20              LDR      r0,[r4,#0x20]         ;687
00062c  6940              LDR      r0,[r0,#0x14]         ;687
00062e  6c21              LDR      r1,[r4,#0x40]         ;687
000630  1a40              SUBS     r0,r0,r1              ;687
000632  9004              STR      r0,[sp,#0x10]         ;687
000634  9904              LDR      r1,[sp,#0x10]         ;688
000636  4451              ADD      r1,r1,r10             ;688
000638  6a23              LDR      r3,[r4,#0x20]         ;688
00063a  699b              LDR      r3,[r3,#0x18]         ;688
00063c  4299              CMP      r1,r3                 ;688
00063e  d904              BLS      |L1.1610|
000640  6a21              LDR      r1,[r4,#0x20]         ;690
000642  698b              LDR      r3,[r1,#0x18]         ;690
000644  9904              LDR      r1,[sp,#0x10]         ;690
000646  1a59              SUBS     r1,r3,r1              ;690
000648  e000              B        |L1.1612|
                  |L1.1610|
00064a  4651              MOV      r1,r10                ;690
                  |L1.1612|
00064c  460a              MOV      r2,r1                 ;690
00064e  6a21              LDR      r1,[r4,#0x20]         ;690
000650  690b              LDR      r3,[r1,#0x10]         ;690
000652  9904              LDR      r1,[sp,#0x10]         ;690
000654  1858              ADDS     r0,r3,r1              ;690
000656  4649              MOV      r1,r9                 ;690
000658  f7fffffe          BL       __aeabi_memcpy
                  |L1.1628|
00065c  8a20              LDRH     r0,[r4,#0x10]         ;692
00065e  f4007000          AND      r0,r0,#0x200          ;692
000662  b128              CBZ      r0,|L1.1648|
000664  4652              MOV      r2,r10                ;693
000666  4649              MOV      r1,r9                 ;693
000668  69a0              LDR      r0,[r4,#0x18]         ;693
00066a  f7fffffe          BL       crc32
00066e  61a0              STR      r0,[r4,#0x18]         ;693
                  |L1.1648|
000670  eba7070a          SUB      r7,r7,r10             ;694
000674  44d1              ADD      r9,r9,r10             ;695
000676  6c20              LDR      r0,[r4,#0x40]         ;696
000678  eba0000a          SUB      r0,r0,r10             ;696
00067c  6420              STR      r0,[r4,#0x40]         ;696
                  |L1.1662|
00067e  6c20              LDR      r0,[r4,#0x40]         ;698
000680  b100              CBZ      r0,|L1.1668|
000682  e627              B        |L1.724|
                  |L1.1668|
000684  e7ff              B        |L1.1670|
                  |L1.1670|
000686  2000              MOVS     r0,#0                 ;700
000688  6420              STR      r0,[r4,#0x40]         ;700
00068a  2006              MOVS     r0,#6                 ;701
00068c  7020              STRB     r0,[r4,#0]            ;701
00068e  bf00              NOP                            ;702
000690  8a20              LDRH     r0,[r4,#0x10]         ;703
000692  f4006000          AND      r0,r0,#0x800          ;703
000696  b380              CBZ      r0,|L1.1786|
000698  b907              CBNZ     r7,|L1.1692|
00069a  e61b              B        |L1.724|
                  |L1.1692|
00069c  f04f0a00          MOV      r10,#0                ;705
0006a0  bf00              NOP                            ;706
                  |L1.1698|
0006a2  4650              MOV      r0,r10                ;707
0006a4  f10a0a01          ADD      r10,r10,#1            ;707
0006a8  f8190000          LDRB     r0,[r9,r0]            ;707
0006ac  9004              STR      r0,[sp,#0x10]         ;707
0006ae  6a20              LDR      r0,[r4,#0x20]         ;708
0006b0  b178              CBZ      r0,|L1.1746|
0006b2  6a20              LDR      r0,[r4,#0x20]         ;709
0006b4  69c0              LDR      r0,[r0,#0x1c]         ;709
0006b6  b160              CBZ      r0,|L1.1746|
0006b8  6a21              LDR      r1,[r4,#0x20]         ;710
0006ba  6c20              LDR      r0,[r4,#0x40]         ;710
0006bc  6a09              LDR      r1,[r1,#0x20]         ;710
0006be  4288              CMP      r0,r1                 ;710
0006c0  d207              BCS      |L1.1746|
0006c2  9804              LDR      r0,[sp,#0x10]         ;711
0006c4  b2c1              UXTB     r1,r0                 ;711
0006c6  6c22              LDR      r2,[r4,#0x40]         ;711
0006c8  1c50              ADDS     r0,r2,#1              ;711
0006ca  6420              STR      r0,[r4,#0x40]         ;711
0006cc  6a20              LDR      r0,[r4,#0x20]         ;711
0006ce  69c0              LDR      r0,[r0,#0x1c]         ;711
0006d0  5481              STRB     r1,[r0,r2]            ;711
                  |L1.1746|
0006d2  9804              LDR      r0,[sp,#0x10]         ;712
0006d4  b108              CBZ      r0,|L1.1754|
0006d6  45ba              CMP      r10,r7                ;712
0006d8  d3e3              BCC      |L1.1698|
                  |L1.1754|
0006da  8a20              LDRH     r0,[r4,#0x10]         ;713
0006dc  f4007000          AND      r0,r0,#0x200          ;713
0006e0  b128              CBZ      r0,|L1.1774|
0006e2  4652              MOV      r2,r10                ;714
0006e4  4649              MOV      r1,r9                 ;714
0006e6  69a0              LDR      r0,[r4,#0x18]         ;714
0006e8  f7fffffe          BL       crc32
0006ec  61a0              STR      r0,[r4,#0x18]         ;714
                  |L1.1774|
0006ee  eba7070a          SUB      r7,r7,r10             ;715
0006f2  44d1              ADD      r9,r9,r10             ;716
0006f4  9804              LDR      r0,[sp,#0x10]         ;717
0006f6  b130              CBZ      r0,|L1.1798|
0006f8  e5ec              B        |L1.724|
                  |L1.1786|
0006fa  e7ff              B        |L1.1788|
                  |L1.1788|
0006fc  6a20              LDR      r0,[r4,#0x20]         ;719
0006fe  b110              CBZ      r0,|L1.1798|
000700  2000              MOVS     r0,#0                 ;720
000702  6a21              LDR      r1,[r4,#0x20]         ;720
000704  61c8              STR      r0,[r1,#0x1c]         ;720
                  |L1.1798|
000706  2000              MOVS     r0,#0                 ;721
000708  6420              STR      r0,[r4,#0x40]         ;721
00070a  2007              MOVS     r0,#7                 ;722
00070c  7020              STRB     r0,[r4,#0]            ;722
00070e  bf00              NOP                            ;723
000710  8a20              LDRH     r0,[r4,#0x10]         ;724
000712  f4005080          AND      r0,r0,#0x1000         ;724
000716  b380              CBZ      r0,|L1.1914|
000718  b907              CBNZ     r7,|L1.1820|
00071a  e5db              B        |L1.724|
                  |L1.1820|
00071c  f04f0a00          MOV      r10,#0                ;726
000720  bf00              NOP                            ;727
                  |L1.1826|
000722  4650              MOV      r0,r10                ;728
000724  f10a0a01          ADD      r10,r10,#1            ;728
000728  f8190000          LDRB     r0,[r9,r0]            ;728
00072c  9004              STR      r0,[sp,#0x10]         ;728
00072e  6a20              LDR      r0,[r4,#0x20]         ;729
000730  b178              CBZ      r0,|L1.1874|
000732  6a20              LDR      r0,[r4,#0x20]         ;730
000734  6a40              LDR      r0,[r0,#0x24]         ;730
000736  b160              CBZ      r0,|L1.1874|
000738  6a21              LDR      r1,[r4,#0x20]         ;731
00073a  6c20              LDR      r0,[r4,#0x40]         ;731
00073c  6a89              LDR      r1,[r1,#0x28]         ;731
00073e  4288              CMP      r0,r1                 ;731
000740  d207              BCS      |L1.1874|
000742  9804              LDR      r0,[sp,#0x10]         ;732
000744  b2c1              UXTB     r1,r0                 ;732
000746  6c22              LDR      r2,[r4,#0x40]         ;732
000748  1c50              ADDS     r0,r2,#1              ;732
00074a  6420              STR      r0,[r4,#0x40]         ;732
00074c  6a20              LDR      r0,[r4,#0x20]         ;732
00074e  6a40              LDR      r0,[r0,#0x24]         ;732
000750  5481              STRB     r1,[r0,r2]            ;732
                  |L1.1874|
000752  9804              LDR      r0,[sp,#0x10]         ;733
000754  b108              CBZ      r0,|L1.1882|
000756  45ba              CMP      r10,r7                ;733
000758  d3e3              BCC      |L1.1826|
                  |L1.1882|
00075a  8a20              LDRH     r0,[r4,#0x10]         ;734
00075c  f4007000          AND      r0,r0,#0x200          ;734
000760  b128              CBZ      r0,|L1.1902|
000762  4652              MOV      r2,r10                ;735
000764  4649              MOV      r1,r9                 ;735
000766  69a0              LDR      r0,[r4,#0x18]         ;735
000768  f7fffffe          BL       crc32
00076c  61a0              STR      r0,[r4,#0x18]         ;735
                  |L1.1902|
00076e  eba7070a          SUB      r7,r7,r10             ;736
000772  44d1              ADD      r9,r9,r10             ;737
000774  9804              LDR      r0,[sp,#0x10]         ;738
000776  b130              CBZ      r0,|L1.1926|
000778  e5ac              B        |L1.724|
                  |L1.1914|
00077a  e7ff              B        |L1.1916|
                  |L1.1916|
00077c  6a20              LDR      r0,[r4,#0x20]         ;740
00077e  b110              CBZ      r0,|L1.1926|
000780  2000              MOVS     r0,#0                 ;741
000782  6a21              LDR      r1,[r4,#0x20]         ;741
000784  6248              STR      r0,[r1,#0x24]         ;741
                  |L1.1926|
000786  2008              MOVS     r0,#8                 ;742
000788  7020              STRB     r0,[r4,#0]            ;742
00078a  bf00              NOP                            ;743
00078c  8a20              LDRH     r0,[r4,#0x10]         ;744
00078e  f4007000          AND      r0,r0,#0x200          ;744
000792  b1e0              CBZ      r0,|L1.1998|
000794  bf00              NOP                            ;745
000796  e009              B        |L1.1964|
                  |L1.1944|
000798  bf00              NOP                            ;745
00079a  b907              CBNZ     r7,|L1.1950|
00079c  e59a              B        |L1.724|
                  |L1.1950|
00079e  1e7f              SUBS     r7,r7,#1              ;745
0007a0  f8190b01          LDRB     r0,[r9],#1            ;745
0007a4  40b0              LSLS     r0,r0,r6              ;745
0007a6  4405              ADD      r5,r5,r0              ;745
0007a8  3608              ADDS     r6,r6,#8              ;745
0007aa  bf00              NOP                            ;745
                  |L1.1964|
0007ac  2e10              CMP      r6,#0x10              ;745
0007ae  d3f3              BCC      |L1.1944|
0007b0  bf00              NOP                            ;745
0007b2  8b20              LDRH     r0,[r4,#0x18]         ;746
0007b4  b280              UXTH     r0,r0                 ;746
0007b6  42a8              CMP      r0,r5                 ;746
0007b8  d005              BEQ      |L1.1990|
0007ba  a0f8              ADR      r0,|L1.2972|
0007bc  f8c80018          STR      r0,[r8,#0x18]         ;747
0007c0  201b              MOVS     r0,#0x1b              ;748
0007c2  7020              STRB     r0,[r4,#0]            ;748
0007c4  e580              B        |L1.712|
                  |L1.1990|
0007c6  bf00              NOP                            ;751
0007c8  2500              MOVS     r5,#0                 ;751
0007ca  2600              MOVS     r6,#0                 ;751
0007cc  bf00              NOP                            ;751
                  |L1.1998|
0007ce  6a20              LDR      r0,[r4,#0x20]         ;753
0007d0  b138              CBZ      r0,|L1.2018|
0007d2  8a20              LDRH     r0,[r4,#0x10]         ;754
0007d4  f3c02040          UBFX     r0,r0,#9,#1           ;754
0007d8  6a21              LDR      r1,[r4,#0x20]         ;754
0007da  62c8              STR      r0,[r1,#0x2c]         ;754
0007dc  2001              MOVS     r0,#1                 ;755
0007de  6a21              LDR      r1,[r4,#0x20]         ;755
0007e0  6308              STR      r0,[r1,#0x30]         ;755
                  |L1.2018|
0007e2  2200              MOVS     r2,#0                 ;757
0007e4  4611              MOV      r1,r2                 ;757
0007e6  4610              MOV      r0,r2                 ;757
0007e8  f7fffffe          BL       crc32
0007ec  61a0              STR      r0,[r4,#0x18]         ;757
0007ee  f8c80030          STR      r0,[r8,#0x30]         ;757
0007f2  200b              MOVS     r0,#0xb               ;758
0007f4  7020              STRB     r0,[r4,#0]            ;758
0007f6  e567              B        |L1.712|
0007f8  bf00              NOP                            ;762
0007fa  e009              B        |L1.2064|
                  |L1.2044|
0007fc  bf00              NOP                            ;762
0007fe  b907              CBNZ     r7,|L1.2050|
000800  e568              B        |L1.724|
                  |L1.2050|
000802  1e7f              SUBS     r7,r7,#1              ;762
000804  f8190b01          LDRB     r0,[r9],#1            ;762
000808  40b0              LSLS     r0,r0,r6              ;762
00080a  4405              ADD      r5,r5,r0              ;762
00080c  3608              ADDS     r6,r6,#8              ;762
00080e  bf00              NOP                            ;762
                  |L1.2064|
000810  2e20              CMP      r6,#0x20              ;762
000812  d3f3              BCC      |L1.2044|
000814  bf00              NOP                            ;762
000816  f44f417f          MOV      r1,#0xff00            ;763
00081a  ea012115          AND      r1,r1,r5,LSR #8       ;763
00081e  eb016015          ADD      r0,r1,r5,LSR #24      ;763
000822  f405417f          AND      r1,r5,#0xff00         ;763
000826  eb002001          ADD      r0,r0,r1,LSL #8       ;763
00082a  eb006005          ADD      r0,r0,r5,LSL #24      ;763
00082e  61a0              STR      r0,[r4,#0x18]         ;763
000830  f8c80030          STR      r0,[r8,#0x30]         ;763
000834  bf00              NOP                            ;764
000836  2500              MOVS     r5,#0                 ;764
000838  2600              MOVS     r6,#0                 ;764
00083a  bf00              NOP                            ;764
00083c  200a              MOVS     r0,#0xa               ;765
00083e  7020              STRB     r0,[r4,#0]            ;765
000840  bf00              NOP                            ;766
000842  68e0              LDR      r0,[r4,#0xc]          ;767
000844  b970              CBNZ     r0,|L1.2148|
000846  bf00              NOP                            ;768
000848  980a              LDR      r0,[sp,#0x28]         ;768
00084a  f8c8000c          STR      r0,[r8,#0xc]          ;768
00084e  f8c8b010          STR      r11,[r8,#0x10]        ;768
000852  f8c89000          STR      r9,[r8,#0]            ;768
000856  f8c87004          STR      r7,[r8,#4]            ;768
00085a  63a5              STR      r5,[r4,#0x38]         ;768
00085c  63e6              STR      r6,[r4,#0x3c]         ;768
00085e  bf00              NOP                            ;768
000860  2002              MOVS     r0,#2                 ;769
000862  e4ec              B        |L1.574|
                  |L1.2148|
000864  2200              MOVS     r2,#0                 ;771
000866  4611              MOV      r1,r2                 ;771
000868  4610              MOV      r0,r2                 ;771
00086a  f7fffffe          BL       adler32
00086e  61a0              STR      r0,[r4,#0x18]         ;771
000870  f8c80030          STR      r0,[r8,#0x30]         ;771
000874  200b              MOVS     r0,#0xb               ;772
000876  7020              STRB     r0,[r4,#0]            ;772
000878  bf00              NOP                            ;773
00087a  980c              LDR      r0,[sp,#0x30]         ;774
00087c  2805              CMP      r0,#5                 ;774
00087e  d100              BNE      |L1.2178|
000880  e528              B        |L1.724|
                  |L1.2178|
000882  bf00              NOP                            ;775
000884  6860              LDR      r0,[r4,#4]            ;776
000886  b150              CBZ      r0,|L1.2206|
000888  bf00              NOP                            ;777
00088a  f0060007          AND      r0,r6,#7              ;777
00088e  40c5              LSRS     r5,r5,r0              ;777
000890  f0060007          AND      r0,r6,#7              ;777
000894  1a36              SUBS     r6,r6,r0              ;777
000896  bf00              NOP                            ;777
000898  2018              MOVS     r0,#0x18              ;778
00089a  7020              STRB     r0,[r4,#0]            ;778
00089c  e514              B        |L1.712|
                  |L1.2206|
00089e  bf00              NOP                            ;781
0008a0  e009              B        |L1.2230|
                  |L1.2210|
0008a2  bf00              NOP                            ;781
0008a4  b907              CBNZ     r7,|L1.2216|
0008a6  e515              B        |L1.724|
                  |L1.2216|
0008a8  1e7f              SUBS     r7,r7,#1              ;781
0008aa  f8190b01          LDRB     r0,[r9],#1            ;781
0008ae  40b0              LSLS     r0,r0,r6              ;781
0008b0  4405              ADD      r5,r5,r0              ;781
0008b2  3608              ADDS     r6,r6,#8              ;781
0008b4  bf00              NOP                            ;781
                  |L1.2230|
0008b6  2e03              CMP      r6,#3                 ;781
0008b8  d3f3              BCC      |L1.2210|
0008ba  bf00              NOP                            ;781
0008bc  f0050001          AND      r0,r5,#1              ;782
0008c0  6060              STR      r0,[r4,#4]            ;782
0008c2  bf00              NOP                            ;783
0008c4  086d              LSRS     r5,r5,#1              ;783
0008c6  1e76              SUBS     r6,r6,#1              ;783
0008c8  bf00              NOP                            ;783
0008ca  f0050003          AND      r0,r5,#3              ;784
0008ce  b130              CBZ      r0,|L1.2270|
0008d0  2801              CMP      r0,#1                 ;784
0008d2  d007              BEQ      |L1.2276|
0008d4  2802              CMP      r0,#2                 ;784
0008d6  d00b              BEQ      |L1.2288|
0008d8  2803              CMP      r0,#3                 ;784
0008da  d112              BNE      |L1.2306|
0008dc  e00b              B        |L1.2294|
                  |L1.2270|
0008de  200d              MOVS     r0,#0xd               ;788
0008e0  7020              STRB     r0,[r4,#0]            ;788
0008e2  e00e              B        |L1.2306|
                  |L1.2276|
0008e4  4620              MOV      r0,r4                 ;791
0008e6  f7fffffe          BL       fixedtables
0008ea  2012              MOVS     r0,#0x12              ;794
0008ec  7020              STRB     r0,[r4,#0]            ;794
0008ee  e008              B        |L1.2306|
                  |L1.2288|
0008f0  200f              MOVS     r0,#0xf               ;799
0008f2  7020              STRB     r0,[r4,#0]            ;799
0008f4  e005              B        |L1.2306|
                  |L1.2294|
0008f6  a0ae              ADR      r0,|L1.2992|
0008f8  f8c80018          STR      r0,[r8,#0x18]         ;802
0008fc  201b              MOVS     r0,#0x1b              ;803
0008fe  7020              STRB     r0,[r4,#0]            ;803
000900  bf00              NOP                            ;784
                  |L1.2306|
000902  bf00              NOP                            ;789
000904  bf00              NOP                            ;805
000906  08ad              LSRS     r5,r5,#2              ;805
000908  1eb6              SUBS     r6,r6,#2              ;805
00090a  bf00              NOP                            ;805
00090c  e4dc              B        |L1.712|
00090e  bf00              NOP                            ;808
000910  f0060007          AND      r0,r6,#7              ;808
000914  40c5              LSRS     r5,r5,r0              ;808
000916  f0060007          AND      r0,r6,#7              ;808
00091a  1a36              SUBS     r6,r6,r0              ;808
00091c  bf00              NOP                            ;808
00091e  bf00              NOP                            ;809
000920  e009              B        |L1.2358|
                  |L1.2338|
000922  bf00              NOP                            ;809
000924  b907              CBNZ     r7,|L1.2344|
000926  e4d5              B        |L1.724|
                  |L1.2344|
000928  1e7f              SUBS     r7,r7,#1              ;809
00092a  f8190b01          LDRB     r0,[r9],#1            ;809
00092e  40b0              LSLS     r0,r0,r6              ;809
000930  4405              ADD      r5,r5,r0              ;809
000932  3608              ADDS     r6,r6,#8              ;809
000934  bf00              NOP                            ;809
                  |L1.2358|
000936  2e20              CMP      r6,#0x20              ;809
000938  d3f3              BCC      |L1.2338|
00093a  bf00              NOP                            ;809
00093c  b2a8              UXTH     r0,r5                 ;810
00093e  f64f71ff          MOV      r1,#0xffff            ;810
000942  ea814115          EOR      r1,r1,r5,LSR #16      ;810
000946  4288              CMP      r0,r1                 ;810
000948  d005              BEQ      |L1.2390|
00094a  a09e              ADR      r0,|L1.3012|
00094c  f8c80018          STR      r0,[r8,#0x18]         ;811
000950  201b              MOVS     r0,#0x1b              ;812
000952  7020              STRB     r0,[r4,#0]            ;812
000954  e4b8              B        |L1.712|
                  |L1.2390|
000956  b2a8              UXTH     r0,r5                 ;815
000958  6420              STR      r0,[r4,#0x40]         ;815
00095a  bf00              NOP                            ;818
00095c  2500              MOVS     r5,#0                 ;818
00095e  2600              MOVS     r6,#0                 ;818
000960  bf00              NOP                            ;818
000962  200e              MOVS     r0,#0xe               ;819
000964  7020              STRB     r0,[r4,#0]            ;819
000966  bf00              NOP                            ;820
000968  f8d4a040          LDR      r10,[r4,#0x40]        ;821
00096c  f1ba0f00          CMP      r10,#0                ;822
000970  d01b              BEQ      |L1.2474|
000972  45ba              CMP      r10,r7                ;823
000974  d900              BLS      |L1.2424|
000976  46ba              MOV      r10,r7                ;823
                  |L1.2424|
000978  45da              CMP      r10,r11               ;824
00097a  d900              BLS      |L1.2430|
00097c  46da              MOV      r10,r11               ;824
                  |L1.2430|
00097e  f1ba0f00          CMP      r10,#0                ;825
000982  d100              BNE      |L1.2438|
000984  e4a6              B        |L1.724|
                  |L1.2438|
000986  4652              MOV      r2,r10                ;826
000988  4649              MOV      r1,r9                 ;826
00098a  980a              LDR      r0,[sp,#0x28]         ;826
00098c  f7fffffe          BL       __aeabi_memcpy
000990  eba7070a          SUB      r7,r7,r10             ;827
000994  44d1              ADD      r9,r9,r10             ;828
000996  ebab0b0a          SUB      r11,r11,r10           ;829
00099a  980a              LDR      r0,[sp,#0x28]         ;830
00099c  4450              ADD      r0,r0,r10             ;830
00099e  900a              STR      r0,[sp,#0x28]         ;830
0009a0  6c20              LDR      r0,[r4,#0x40]         ;831
0009a2  eba0000a          SUB      r0,r0,r10             ;831
0009a6  6420              STR      r0,[r4,#0x40]         ;831
0009a8  e48e              B        |L1.712|
                  |L1.2474|
0009aa  200b              MOVS     r0,#0xb               ;835
0009ac  7020              STRB     r0,[r4,#0]            ;835
0009ae  e48b              B        |L1.712|
0009b0  bf00              NOP                            ;838
0009b2  e009              B        |L1.2504|
                  |L1.2484|
0009b4  bf00              NOP                            ;838
0009b6  b907              CBNZ     r7,|L1.2490|
0009b8  e48c              B        |L1.724|
                  |L1.2490|
0009ba  1e7f              SUBS     r7,r7,#1              ;838
0009bc  f8190b01          LDRB     r0,[r9],#1            ;838
0009c0  40b0              LSLS     r0,r0,r6              ;838
0009c2  4405              ADD      r5,r5,r0              ;838
0009c4  3608              ADDS     r6,r6,#8              ;838
0009c6  bf00              NOP                            ;838
                  |L1.2504|
0009c8  2e0e              CMP      r6,#0xe               ;838
0009ca  d3f3              BCC      |L1.2484|
0009cc  bf00              NOP                            ;838
0009ce  f005001f          AND      r0,r5,#0x1f           ;839
0009d2  f2001001          ADD      r0,r0,#0x101          ;839
0009d6  6620              STR      r0,[r4,#0x60]         ;839
0009d8  bf00              NOP                            ;840
0009da  096d              LSRS     r5,r5,#5              ;840
0009dc  1f76              SUBS     r6,r6,#5              ;840
0009de  bf00              NOP                            ;840
0009e0  f005001f          AND      r0,r5,#0x1f           ;841
0009e4  1c40              ADDS     r0,r0,#1              ;841
0009e6  6660              STR      r0,[r4,#0x64]         ;841
0009e8  bf00              NOP                            ;842
0009ea  096d              LSRS     r5,r5,#5              ;842
0009ec  1f76              SUBS     r6,r6,#5              ;842
0009ee  bf00              NOP                            ;842
0009f0  f005000f          AND      r0,r5,#0xf            ;843
0009f4  1d00              ADDS     r0,r0,#4              ;843
0009f6  65e0              STR      r0,[r4,#0x5c]         ;843
0009f8  bf00              NOP                            ;844
0009fa  092d              LSRS     r5,r5,#4              ;844
0009fc  1f36              SUBS     r6,r6,#4              ;844
0009fe  bf00              NOP                            ;844
000a00  6e20              LDR      r0,[r4,#0x60]         ;846
000a02  f5b07f8f          CMP      r0,#0x11e             ;846
000a06  d802              BHI      |L1.2574|
000a08  6e60              LDR      r0,[r4,#0x64]         ;846
000a0a  281e              CMP      r0,#0x1e              ;846
000a0c  d905              BLS      |L1.2586|
                  |L1.2574|
000a0e  a075              ADR      r0,|L1.3044|
000a10  f8c80018          STR      r0,[r8,#0x18]         ;847
000a14  201b              MOVS     r0,#0x1b              ;848
000a16  7020              STRB     r0,[r4,#0]            ;848
000a18  e456              B        |L1.712|
                  |L1.2586|
000a1a  2000              MOVS     r0,#0                 ;853
000a1c  66a0              STR      r0,[r4,#0x68]         ;853
000a1e  2010              MOVS     r0,#0x10              ;854
000a20  7020              STRB     r0,[r4,#0]            ;854
000a22  bf00              NOP                            ;855
000a24  e01e              B        |L1.2660|
                  |L1.2598|
000a26  bf00              NOP                            ;857
000a28  e009              B        |L1.2622|
                  |L1.2602|
000a2a  bf00              NOP                            ;857
000a2c  b907              CBNZ     r7,|L1.2608|
000a2e  e451              B        |L1.724|
                  |L1.2608|
000a30  1e7f              SUBS     r7,r7,#1              ;857
000a32  f8190b01          LDRB     r0,[r9],#1            ;857
000a36  40b0              LSLS     r0,r0,r6              ;857
000a38  4405              ADD      r5,r5,r0              ;857
000a3a  3608              ADDS     r6,r6,#8              ;857
000a3c  bf00              NOP                            ;857
                  |L1.2622|
000a3e  2e03              CMP      r6,#3                 ;857
000a40  d3f3              BCC      |L1.2602|
000a42  bf00              NOP                            ;857
000a44  f0050107          AND      r1,r5,#7              ;858
000a48  6ea2              LDR      r2,[r4,#0x68]         ;858
000a4a  1c50              ADDS     r0,r2,#1              ;858
000a4c  66a0              STR      r0,[r4,#0x68]         ;858
000a4e  486e              LDR      r0,|L1.3080|
000a50  f8302012          LDRH     r2,[r0,r2,LSL #1]     ;858
000a54  f1040070          ADD      r0,r4,#0x70           ;858
000a58  f8201012          STRH     r1,[r0,r2,LSL #1]     ;858
000a5c  bf00              NOP                            ;859
000a5e  08ed              LSRS     r5,r5,#3              ;859
000a60  1ef6              SUBS     r6,r6,#3              ;859
000a62  bf00              NOP                            ;859
                  |L1.2660|
000a64  6de1              LDR      r1,[r4,#0x5c]         ;856
000a66  6ea0              LDR      r0,[r4,#0x68]         ;856
000a68  4288              CMP      r0,r1                 ;856
000a6a  d3dc              BCC      |L1.2598|
000a6c  e00a              B        |L1.2692|
                  |L1.2670|
000a6e  2100              MOVS     r1,#0                 ;862
000a70  6ea2              LDR      r2,[r4,#0x68]         ;862
000a72  1c50              ADDS     r0,r2,#1              ;862
000a74  66a0              STR      r0,[r4,#0x68]         ;862
000a76  4864              LDR      r0,|L1.3080|
000a78  f8302012          LDRH     r2,[r0,r2,LSL #1]     ;862
000a7c  f1040070          ADD      r0,r4,#0x70           ;862
000a80  f8201012          STRH     r1,[r0,r2,LSL #1]     ;862
                  |L1.2692|
000a84  6ea0              LDR      r0,[r4,#0x68]         ;861
000a86  2813              CMP      r0,#0x13              ;861
000a88  d3f1              BCC      |L1.2670|
000a8a  f50460a6          ADD      r0,r4,#0x530          ;863
000a8e  66e0              STR      r0,[r4,#0x6c]         ;863
000a90  6ee0              LDR      r0,[r4,#0x6c]         ;864
000a92  64e0              STR      r0,[r4,#0x4c]         ;864
000a94  2007              MOVS     r0,#7                 ;865
000a96  6560              STR      r0,[r4,#0x54]         ;865
000a98  f504703c          ADD      r0,r4,#0x2f0          ;866
000a9c  f1040154          ADD      r1,r4,#0x54           ;866
000aa0  f104036c          ADD      r3,r4,#0x6c           ;866
000aa4  2213              MOVS     r2,#0x13              ;866
000aa6  e9cd1000          STRD     r1,r0,[sp,#0]         ;866
000aaa  311c              ADDS     r1,r1,#0x1c           ;866
000aac  2000              MOVS     r0,#0                 ;866
000aae  f7fffffe          BL       inflate_table
000ab2  9003              STR      r0,[sp,#0xc]          ;866
000ab4  9803              LDR      r0,[sp,#0xc]          ;868
000ab6  b128              CBZ      r0,|L1.2756|
000ab8  a054              ADR      r0,|L1.3084|
000aba  f8c80018          STR      r0,[r8,#0x18]         ;869
000abe  201b              MOVS     r0,#0x1b              ;870
000ac0  7020              STRB     r0,[r4,#0]            ;870
000ac2  e435              B        |L1.816|
                  |L1.2756|
000ac4  2000              MOVS     r0,#0                 ;874
000ac6  66a0              STR      r0,[r4,#0x68]         ;874
000ac8  2011              MOVS     r0,#0x11              ;875
000aca  7020              STRB     r0,[r4,#0]            ;875
000acc  bf00              NOP                            ;876
000ace  e128              B        |L1.3362|
                  |L1.2768|
000ad0  bf00              NOP                            ;878
                  |L1.2770|
000ad2  f8942054          LDRB     r2,[r4,#0x54]         ;879
000ad6  2001              MOVS     r0,#1                 ;879
000ad8  4090              LSLS     r0,r0,r2              ;879
000ada  1e40              SUBS     r0,r0,#1              ;879
000adc  4028              ANDS     r0,r0,r5              ;879
000ade  6ce1              LDR      r1,[r4,#0x4c]         ;879
000ae0  eb010080          ADD      r0,r1,r0,LSL #2       ;879
000ae4  6800              LDR      r0,[r0,#0]            ;879
000ae6  9006              STR      r0,[sp,#0x18]         ;879
000ae8  f89d0019          LDRB     r0,[sp,#0x19]         ;880
000aec  42b0              CMP      r0,r6                 ;880
000aee  d800              BHI      |L1.2802|
000af0  e009              B        |L1.2822|
                  |L1.2802|
000af2  bf00              NOP                            ;881
000af4  b907              CBNZ     r7,|L1.2808|
000af6  e3ea              B        |L1.4814|
                  |L1.2808|
000af8  1e7f              SUBS     r7,r7,#1              ;881
000afa  f8190b01          LDRB     r0,[r9],#1            ;881
000afe  40b0              LSLS     r0,r0,r6              ;881
000b00  4405              ADD      r5,r5,r0              ;881
000b02  3608              ADDS     r6,r6,#8              ;881
000b04  e7e5              B        |L1.2770|
                  |L1.2822|
000b06  bf00              NOP                            ;880
000b08  f8bd001a          LDRH     r0,[sp,#0x1a]         ;883
000b0c  2810              CMP      r0,#0x10              ;883
000b0e  da22              BGE      |L1.2902|
000b10  bf00              NOP                            ;884
000b12  e009              B        |L1.2856|
                  |L1.2836|
000b14  bf00              NOP                            ;884
000b16  b907              CBNZ     r7,|L1.2842|
000b18  e3d9              B        |L1.4814|
                  |L1.2842|
000b1a  1e7f              SUBS     r7,r7,#1              ;884
000b1c  f8190b01          LDRB     r0,[r9],#1            ;884
000b20  40b0              LSLS     r0,r0,r6              ;884
000b22  4405              ADD      r5,r5,r0              ;884
000b24  3608              ADDS     r6,r6,#8              ;884
000b26  bf00              NOP                            ;884
                  |L1.2856|
000b28  f89d0019          LDRB     r0,[sp,#0x19]         ;884
000b2c  42b0              CMP      r0,r6                 ;884
000b2e  d8f1              BHI      |L1.2836|
000b30  bf00              NOP                            ;884
000b32  bf00              NOP                            ;885
000b34  f89d0019          LDRB     r0,[sp,#0x19]         ;885
000b38  40c5              LSRS     r5,r5,r0              ;885
000b3a  f89d0019          LDRB     r0,[sp,#0x19]         ;885
000b3e  1a36              SUBS     r6,r6,r0              ;885
000b40  bf00              NOP                            ;885
000b42  f8bd101a          LDRH     r1,[sp,#0x1a]         ;886
000b46  6ea2              LDR      r2,[r4,#0x68]         ;886
000b48  1c50              ADDS     r0,r2,#1              ;886
000b4a  66a0              STR      r0,[r4,#0x68]         ;886
000b4c  f1040070          ADD      r0,r4,#0x70           ;886
000b50  f8201012          STRH     r1,[r0,r2,LSL #1]     ;886
000b54  e0e5              B        |L1.3362|
                  |L1.2902|
000b56  f8bd001a          LDRH     r0,[sp,#0x1a]         ;889
000b5a  2810              CMP      r0,#0x10              ;889
000b5c  d179              BNE      |L1.3154|
000b5e  bf00              NOP                            ;890
000b60  e009              B        |L1.2934|
                  |L1.2914|
000b62  bf00              NOP                            ;890
000b64  b907              CBNZ     r7,|L1.2920|
000b66  e3b2              B        |L1.4814|
                  |L1.2920|
000b68  1e7f              SUBS     r7,r7,#1              ;890
000b6a  f8190b01          LDRB     r0,[r9],#1            ;890
000b6e  40b0              LSLS     r0,r0,r6              ;890
000b70  4405              ADD      r5,r5,r0              ;890
000b72  3608              ADDS     r6,r6,#8              ;890
000b74  bf00              NOP                            ;890
                  |L1.2934|
000b76  f89d0019          LDRB     r0,[sp,#0x19]         ;890
000b7a  1c80              ADDS     r0,r0,#2              ;890
000b7c  42b0              CMP      r0,r6                 ;890
000b7e  d8f0              BHI      |L1.2914|
000b80  bf00              NOP                            ;890
000b82  bf00              NOP                            ;891
000b84  f89d0019          LDRB     r0,[sp,#0x19]         ;891
000b88  40c5              LSRS     r5,r5,r0              ;891
000b8a  f89d0019          LDRB     r0,[sp,#0x19]         ;891
000b8e  1a36              SUBS     r6,r6,r0              ;891
000b90  bf00              NOP                            ;891
000b92  6ea0              LDR      r0,[r4,#0x68]         ;892
000b94  b900              CBNZ     r0,|L1.2968|
000b96  e047              B        |L1.3112|
                  |L1.2968|
000b98  e04c              B        |L1.3124|
000b9a  e05a              B        |L1.3154|
                  |L1.2972|
000b9c  68656164          DCB      "header crc mismatch",0
000ba0  65722063
000ba4  7263206d
000ba8  69736d61
000bac  74636800
                  |L1.2992|
000bb0  696e7661          DCB      "invalid block type",0
000bb4  6c696420
000bb8  626c6f63
000bbc  6b207479
000bc0  706500  
000bc3  00                DCB      0
                  |L1.3012|
000bc4  696e7661          DCB      "invalid stored block lengths",0
000bc8  6c696420
000bcc  73746f72
000bd0  65642062
000bd4  6c6f636b
000bd8  206c656e
000bdc  67746873
000be0  00      
000be1  00                DCB      0
000be2  00                DCB      0
000be3  00                DCB      0
                  |L1.3044|
000be4  746f6f20          DCB      "too many length or distance symbols",0
000be8  6d616e79
000bec  206c656e
000bf0  67746820
000bf4  6f722064
000bf8  69737461
000bfc  6e636520
000c00  73796d62
000c04  6f6c7300
                  |L1.3080|
                          DCD      order
                  |L1.3084|
000c0c  696e7661          DCB      "invalid code lengths set",0
000c10  6c696420
000c14  636f6465
000c18  206c656e
000c1c  67746873
000c20  20736574
000c24  00      
000c25  00                DCB      0
000c26  00                DCB      0
000c27  00                DCB      0
                  |L1.3112|
000c28  a0f8              ADR      r0,|L1.4108|
000c2a  f8c80018          STR      r0,[r8,#0x18]         ;893
000c2e  201b              MOVS     r0,#0x1b              ;894
000c30  7020              STRB     r0,[r4,#0]            ;894
000c32  e07d              B        |L1.3376|
                  |L1.3124|
000c34  6ea0              LDR      r0,[r4,#0x68]         ;897
000c36  1e40              SUBS     r0,r0,#1              ;897
000c38  f1040170          ADD      r1,r4,#0x70           ;897
000c3c  f8310010          LDRH     r0,[r1,r0,LSL #1]     ;897
000c40  9004              STR      r0,[sp,#0x10]         ;897
000c42  f0050003          AND      r0,r5,#3              ;898
000c46  f1000a03          ADD      r10,r0,#3             ;898
000c4a  bf00              NOP                            ;899
000c4c  08ad              LSRS     r5,r5,#2              ;899
000c4e  1eb6              SUBS     r6,r6,#2              ;899
000c50  e04b              B        |L1.3306|
                  |L1.3154|
000c52  f8bd001a          LDRH     r0,[sp,#0x1a]         ;901
000c56  2811              CMP      r0,#0x11              ;901
000c58  d123              BNE      |L1.3234|
000c5a  bf00              NOP                            ;902
000c5c  e009              B        |L1.3186|
                  |L1.3166|
000c5e  bf00              NOP                            ;902
000c60  b907              CBNZ     r7,|L1.3172|
000c62  e334              B        |L1.4814|
                  |L1.3172|
000c64  1e7f              SUBS     r7,r7,#1              ;902
000c66  f8190b01          LDRB     r0,[r9],#1            ;902
000c6a  40b0              LSLS     r0,r0,r6              ;902
000c6c  4405              ADD      r5,r5,r0              ;902
000c6e  3608              ADDS     r6,r6,#8              ;902
000c70  bf00              NOP                            ;902
                  |L1.3186|
000c72  f89d0019          LDRB     r0,[sp,#0x19]         ;902
000c76  1cc0              ADDS     r0,r0,#3              ;902
000c78  42b0              CMP      r0,r6                 ;902
000c7a  d8f0              BHI      |L1.3166|
000c7c  bf00              NOP                            ;902
000c7e  bf00              NOP                            ;903
000c80  f89d0019          LDRB     r0,[sp,#0x19]         ;903
000c84  40c5              LSRS     r5,r5,r0              ;903
000c86  f89d0019          LDRB     r0,[sp,#0x19]         ;903
000c8a  1a36              SUBS     r6,r6,r0              ;903
000c8c  bf00              NOP                            ;903
000c8e  2000              MOVS     r0,#0                 ;904
000c90  9004              STR      r0,[sp,#0x10]         ;904
000c92  f0050007          AND      r0,r5,#7              ;905
000c96  f1000a03          ADD      r10,r0,#3             ;905
000c9a  bf00              NOP                            ;906
000c9c  08ed              LSRS     r5,r5,#3              ;906
000c9e  1ef6              SUBS     r6,r6,#3              ;906
000ca0  e023              B        |L1.3306|
                  |L1.3234|
000ca2  bf00              NOP                            ;909
000ca4  e009              B        |L1.3258|
                  |L1.3238|
000ca6  bf00              NOP                            ;909
000ca8  b907              CBNZ     r7,|L1.3244|
000caa  e310              B        |L1.4814|
                  |L1.3244|
000cac  1e7f              SUBS     r7,r7,#1              ;909
000cae  f8190b01          LDRB     r0,[r9],#1            ;909
000cb2  40b0              LSLS     r0,r0,r6              ;909
000cb4  4405              ADD      r5,r5,r0              ;909
000cb6  3608              ADDS     r6,r6,#8              ;909
000cb8  bf00              NOP                            ;909
                  |L1.3258|
000cba  f89d0019          LDRB     r0,[sp,#0x19]         ;909
000cbe  1dc0              ADDS     r0,r0,#7              ;909
000cc0  42b0              CMP      r0,r6                 ;909
000cc2  d8f0              BHI      |L1.3238|
000cc4  bf00              NOP                            ;909
000cc6  bf00              NOP                            ;910
000cc8  f89d0019          LDRB     r0,[sp,#0x19]         ;910
000ccc  40c5              LSRS     r5,r5,r0              ;910
000cce  f89d0019          LDRB     r0,[sp,#0x19]         ;910
000cd2  1a36              SUBS     r6,r6,r0              ;910
000cd4  bf00              NOP                            ;910
000cd6  2000              MOVS     r0,#0                 ;911
000cd8  9004              STR      r0,[sp,#0x10]         ;911
000cda  f005007f          AND      r0,r5,#0x7f           ;912
000cde  f1000a0b          ADD      r10,r0,#0xb           ;912
000ce2  bf00              NOP                            ;913
000ce4  09ed              LSRS     r5,r5,#7              ;913
000ce6  1ff6              SUBS     r6,r6,#7              ;913
000ce8  bf00              NOP                            ;913
                  |L1.3306|
000cea  e9d40118          LDRD     r0,r1,[r4,#0x60]      ;915
000cee  4408              ADD      r0,r0,r1              ;915
000cf0  6ea1              LDR      r1,[r4,#0x68]         ;915
000cf2  4451              ADD      r1,r1,r10             ;915
000cf4  4288              CMP      r0,r1                 ;915
000cf6  d205              BCS      |L1.3332|
000cf8  a0c4              ADR      r0,|L1.4108|
000cfa  f8c80018          STR      r0,[r8,#0x18]         ;916
000cfe  201b              MOVS     r0,#0x1b              ;917
000d00  7020              STRB     r0,[r4,#0]            ;917
000d02  e015              B        |L1.3376|
                  |L1.3332|
000d04  e008              B        |L1.3352|
                  |L1.3334|
000d06  9804              LDR      r0,[sp,#0x10]         ;921
000d08  b281              UXTH     r1,r0                 ;921
000d0a  6ea2              LDR      r2,[r4,#0x68]         ;921
000d0c  1c50              ADDS     r0,r2,#1              ;921
000d0e  66a0              STR      r0,[r4,#0x68]         ;921
000d10  f1040070          ADD      r0,r4,#0x70           ;921
000d14  f8201012          STRH     r1,[r0,r2,LSL #1]     ;921
                  |L1.3352|
000d18  ea5f000a          MOVS     r0,r10                ;920
000d1c  f1aa0a01          SUB      r10,r10,#1            ;920
000d20  d1f1              BNE      |L1.3334|
                  |L1.3362|
000d22  e9d40118          LDRD     r0,r1,[r4,#0x60]      ;877
000d26  4408              ADD      r0,r0,r1              ;877
000d28  6ea1              LDR      r1,[r4,#0x68]         ;877
000d2a  4288              CMP      r0,r1                 ;877
000d2c  f63faed0          BHI      |L1.2768|
                  |L1.3376|
000d30  bf00              NOP                            ;895
000d32  7820              LDRB     r0,[r4,#0]            ;926
000d34  281b              CMP      r0,#0x1b              ;926
000d36  d100              BNE      |L1.3386|
000d38  e2c7              B        |L1.4810|
                  |L1.3386|
000d3a  f50460a6          ADD      r0,r4,#0x530          ;929
000d3e  66e0              STR      r0,[r4,#0x6c]         ;929
000d40  6ee0              LDR      r0,[r4,#0x6c]         ;930
000d42  64e0              STR      r0,[r4,#0x4c]         ;930
000d44  2009              MOVS     r0,#9                 ;931
000d46  6560              STR      r0,[r4,#0x54]         ;931
000d48  f504703c          ADD      r0,r4,#0x2f0          ;932
000d4c  f1040154          ADD      r1,r4,#0x54           ;932
000d50  e9cd1000          STRD     r1,r0,[sp,#0]         ;932
000d54  f104036c          ADD      r3,r4,#0x6c           ;932
000d58  311c              ADDS     r1,r1,#0x1c           ;932
000d5a  2001              MOVS     r0,#1                 ;932
000d5c  6e22              LDR      r2,[r4,#0x60]         ;932
000d5e  f7fffffe          BL       inflate_table
000d62  9003              STR      r0,[sp,#0xc]          ;932
000d64  9803              LDR      r0,[sp,#0xc]          ;934
000d66  b128              CBZ      r0,|L1.3444|
000d68  a0af              ADR      r0,|L1.4136|
000d6a  f8c80018          STR      r0,[r8,#0x18]         ;935
000d6e  201b              MOVS     r0,#0x1b              ;936
000d70  7020              STRB     r0,[r4,#0]            ;936
000d72  e2aa              B        |L1.4810|
                  |L1.3444|
000d74  6ee0              LDR      r0,[r4,#0x6c]         ;939
000d76  6520              STR      r0,[r4,#0x50]         ;939
000d78  2006              MOVS     r0,#6                 ;940
000d7a  65a0              STR      r0,[r4,#0x58]         ;940
000d7c  f504703c          ADD      r0,r4,#0x2f0          ;941
000d80  f1040158          ADD      r1,r4,#0x58           ;941
000d84  e9cd1000          STRD     r1,r0,[sp,#0]         ;941
000d88  f1040070          ADD      r0,r4,#0x70           ;941
000d8c  e9d43218          LDRD     r3,r2,[r4,#0x60]      ;941
000d90  eb000143          ADD      r1,r0,r3,LSL #1       ;941
000d94  1f03              SUBS     r3,r0,#4              ;941
000d96  2002              MOVS     r0,#2                 ;941
000d98  f7fffffe          BL       inflate_table
000d9c  9003              STR      r0,[sp,#0xc]          ;941
000d9e  9803              LDR      r0,[sp,#0xc]          ;943
000da0  b128              CBZ      r0,|L1.3502|
000da2  a0a8              ADR      r0,|L1.4164|
000da4  f8c80018          STR      r0,[r8,#0x18]         ;944
000da8  201b              MOVS     r0,#0x1b              ;945
000daa  7020              STRB     r0,[r4,#0]            ;945
000dac  e28d              B        |L1.4810|
                  |L1.3502|
000dae  2012              MOVS     r0,#0x12              ;949
000db0  7020              STRB     r0,[r4,#0]            ;949
000db2  bf00              NOP                            ;950
000db4  2f06              CMP      r7,#6                 ;951
000db6  d321              BCC      |L1.3580|
000db8  f5bb7f81          CMP      r11,#0x102            ;951
000dbc  d31e              BCC      |L1.3580|
000dbe  bf00              NOP                            ;952
000dc0  980a              LDR      r0,[sp,#0x28]         ;952
000dc2  f8c8000c          STR      r0,[r8,#0xc]          ;952
000dc6  f8c8b010          STR      r11,[r8,#0x10]        ;952
000dca  f8c89000          STR      r9,[r8,#0]            ;952
000dce  f8c87004          STR      r7,[r8,#4]            ;952
000dd2  63a5              STR      r5,[r4,#0x38]         ;952
000dd4  63e6              STR      r6,[r4,#0x3c]         ;952
000dd6  bf00              NOP                            ;952
000dd8  4640              MOV      r0,r8                 ;953
000dda  9908              LDR      r1,[sp,#0x20]         ;953
000ddc  f7fffffe          BL       inflate_fast
000de0  bf00              NOP                            ;954
000de2  f8d8000c          LDR      r0,[r8,#0xc]          ;954
000de6  900a              STR      r0,[sp,#0x28]         ;954
000de8  f8d8b010          LDR      r11,[r8,#0x10]        ;954
000dec  f8d89000          LDR      r9,[r8,#0]            ;954
000df0  f8d87004          LDR      r7,[r8,#4]            ;954
000df4  6ba5              LDR      r5,[r4,#0x38]         ;954
000df6  6be6              LDR      r6,[r4,#0x3c]         ;954
000df8  bf00              NOP                            ;954
000dfa  e266              B        |L1.4810|
                  |L1.3580|
000dfc  bf00              NOP                            ;957
                  |L1.3582|
000dfe  f8942054          LDRB     r2,[r4,#0x54]         ;958
000e02  2001              MOVS     r0,#1                 ;958
000e04  4090              LSLS     r0,r0,r2              ;958
000e06  1e40              SUBS     r0,r0,#1              ;958
000e08  4028              ANDS     r0,r0,r5              ;958
000e0a  6ce1              LDR      r1,[r4,#0x4c]         ;958
000e0c  eb010080          ADD      r0,r1,r0,LSL #2       ;958
000e10  6800              LDR      r0,[r0,#0]            ;958
000e12  9006              STR      r0,[sp,#0x18]         ;958
000e14  f89d0019          LDRB     r0,[sp,#0x19]         ;959
000e18  42b0              CMP      r0,r6                 ;959
000e1a  d800              BHI      |L1.3614|
000e1c  e009              B        |L1.3634|
                  |L1.3614|
000e1e  bf00              NOP                            ;960
000e20  b907              CBNZ     r7,|L1.3620|
000e22  e254              B        |L1.4814|
                  |L1.3620|
000e24  1e7f              SUBS     r7,r7,#1              ;960
000e26  f8190b01          LDRB     r0,[r9],#1            ;960
000e2a  40b0              LSLS     r0,r0,r6              ;960
000e2c  4405              ADD      r5,r5,r0              ;960
000e2e  3608              ADDS     r6,r6,#8              ;960
000e30  e7e5              B        |L1.3582|
                  |L1.3634|
000e32  bf00              NOP                            ;959
000e34  f89d0018          LDRB     r0,[sp,#0x18]         ;962
000e38  b3b0              CBZ      r0,|L1.3752|
000e3a  f89d0018          LDRB     r0,[sp,#0x18]         ;962
000e3e  f00000f0          AND      r0,r0,#0xf0           ;962
000e42  bb88              CBNZ     r0,|L1.3752|
000e44  9806              LDR      r0,[sp,#0x18]         ;963
000e46  9005              STR      r0,[sp,#0x14]         ;963
000e48  bf00              NOP                            ;964
                  |L1.3658|
000e4a  f89d0015          LDRB     r0,[sp,#0x15]         ;965
000e4e  f89d1014          LDRB     r1,[sp,#0x14]         ;965
000e52  4401              ADD      r1,r1,r0              ;965
000e54  2001              MOVS     r0,#1                 ;965
000e56  4088              LSLS     r0,r0,r1              ;965
000e58  1e40              SUBS     r0,r0,#1              ;965
000e5a  4028              ANDS     r0,r0,r5              ;965
000e5c  f89d1015          LDRB     r1,[sp,#0x15]         ;965
000e60  40c8              LSRS     r0,r0,r1              ;965
000e62  f8bd1016          LDRH     r1,[sp,#0x16]         ;965
000e66  4408              ADD      r0,r0,r1              ;965
000e68  6ce1              LDR      r1,[r4,#0x4c]         ;965
000e6a  eb010080          ADD      r0,r1,r0,LSL #2       ;965
000e6e  6800              LDR      r0,[r0,#0]            ;965
000e70  9006              STR      r0,[sp,#0x18]         ;965
000e72  f89d0015          LDRB     r0,[sp,#0x15]         ;967
000e76  f89d1019          LDRB     r1,[sp,#0x19]         ;967
000e7a  4408              ADD      r0,r0,r1              ;967
000e7c  42b0              CMP      r0,r6                 ;967
000e7e  d800              BHI      |L1.3714|
000e80  e009              B        |L1.3734|
                  |L1.3714|
000e82  bf00              NOP                            ;968
000e84  b907              CBNZ     r7,|L1.3720|
000e86  e222              B        |L1.4814|
                  |L1.3720|
000e88  1e7f              SUBS     r7,r7,#1              ;968
000e8a  f8190b01          LDRB     r0,[r9],#1            ;968
000e8e  40b0              LSLS     r0,r0,r6              ;968
000e90  4405              ADD      r5,r5,r0              ;968
000e92  3608              ADDS     r6,r6,#8              ;968
000e94  e7d9              B        |L1.3658|
                  |L1.3734|
000e96  bf00              NOP                            ;967
000e98  bf00              NOP                            ;970
000e9a  f89d0015          LDRB     r0,[sp,#0x15]         ;970
000e9e  40c5              LSRS     r5,r5,r0              ;970
000ea0  f89d0015          LDRB     r0,[sp,#0x15]         ;970
000ea4  1a36              SUBS     r6,r6,r0              ;970
000ea6  bf00              NOP                            ;970
                  |L1.3752|
000ea8  bf00              NOP                            ;972
000eaa  f89d0019          LDRB     r0,[sp,#0x19]         ;972
000eae  40c5              LSRS     r5,r5,r0              ;972
000eb0  f89d0019          LDRB     r0,[sp,#0x19]         ;972
000eb4  1a36              SUBS     r6,r6,r0              ;972
000eb6  bf00              NOP                            ;972
000eb8  f8bd001a          LDRH     r0,[sp,#0x1a]         ;973
000ebc  6420              STR      r0,[r4,#0x40]         ;973
000ebe  f89d0018          LDRB     r0,[sp,#0x18]         ;974
000ec2  b910              CBNZ     r0,|L1.3786|
000ec4  2017              MOVS     r0,#0x17              ;978
000ec6  7020              STRB     r0,[r4,#0]            ;978
000ec8  e1ff              B        |L1.4810|
                  |L1.3786|
000eca  f89d0018          LDRB     r0,[sp,#0x18]         ;981
000ece  f0000020          AND      r0,r0,#0x20           ;981
000ed2  b110              CBZ      r0,|L1.3802|
000ed4  200b              MOVS     r0,#0xb               ;983
000ed6  7020              STRB     r0,[r4,#0]            ;983
000ed8  e1f7              B        |L1.4810|
                  |L1.3802|
000eda  f89d0018          LDRB     r0,[sp,#0x18]         ;986
000ede  f0000040          AND      r0,r0,#0x40           ;986
000ee2  b128              CBZ      r0,|L1.3824|
000ee4  a05d              ADR      r0,|L1.4188|
000ee6  f8c80018          STR      r0,[r8,#0x18]         ;987
000eea  201b              MOVS     r0,#0x1b              ;988
000eec  7020              STRB     r0,[r4,#0]            ;988
000eee  e1ec              B        |L1.4810|
                  |L1.3824|
000ef0  f89d0018          LDRB     r0,[sp,#0x18]         ;991
000ef4  f000000f          AND      r0,r0,#0xf            ;991
000ef8  64a0              STR      r0,[r4,#0x48]         ;991
000efa  2013              MOVS     r0,#0x13              ;992
000efc  7020              STRB     r0,[r4,#0]            ;992
000efe  bf00              NOP                            ;993
000f00  6ca0              LDR      r0,[r4,#0x48]         ;994
000f02  b1f8              CBZ      r0,|L1.3908|
000f04  bf00              NOP                            ;995
000f06  e009              B        |L1.3868|
                  |L1.3848|
000f08  bf00              NOP                            ;995
000f0a  b907              CBNZ     r7,|L1.3854|
000f0c  e1df              B        |L1.4814|
                  |L1.3854|
000f0e  1e7f              SUBS     r7,r7,#1              ;995
000f10  f8190b01          LDRB     r0,[r9],#1            ;995
000f14  40b0              LSLS     r0,r0,r6              ;995
000f16  4405              ADD      r5,r5,r0              ;995
000f18  3608              ADDS     r6,r6,#8              ;995
000f1a  bf00              NOP                            ;995
                  |L1.3868|
000f1c  6ca0              LDR      r0,[r4,#0x48]         ;995
000f1e  42b0              CMP      r0,r6                 ;995
000f20  d8f2              BHI      |L1.3848|
000f22  bf00              NOP                            ;995
000f24  f8942048          LDRB     r2,[r4,#0x48]         ;996
000f28  2001              MOVS     r0,#1                 ;996
000f2a  4090              LSLS     r0,r0,r2              ;996
000f2c  1e40              SUBS     r0,r0,#1              ;996
000f2e  4028              ANDS     r0,r0,r5              ;996
000f30  6c21              LDR      r1,[r4,#0x40]         ;996
000f32  4408              ADD      r0,r0,r1              ;996
000f34  6420              STR      r0,[r4,#0x40]         ;996
000f36  bf00              NOP                            ;997
000f38  f8940048          LDRB     r0,[r4,#0x48]         ;997
000f3c  40c5              LSRS     r5,r5,r0              ;997
000f3e  6ca0              LDR      r0,[r4,#0x48]         ;997
000f40  1a36              SUBS     r6,r6,r0              ;997
000f42  bf00              NOP                            ;997
                  |L1.3908|
000f44  2014              MOVS     r0,#0x14              ;1000
000f46  7020              STRB     r0,[r4,#0]            ;1000
000f48  bf00              NOP                            ;1001
000f4a  bf00              NOP                            ;1002
                  |L1.3916|
000f4c  f8942058          LDRB     r2,[r4,#0x58]         ;1003
000f50  2001              MOVS     r0,#1                 ;1003
000f52  4090              LSLS     r0,r0,r2              ;1003
000f54  1e40              SUBS     r0,r0,#1              ;1003
000f56  4028              ANDS     r0,r0,r5              ;1003
000f58  6d21              LDR      r1,[r4,#0x50]         ;1003
000f5a  eb010080          ADD      r0,r1,r0,LSL #2       ;1003
000f5e  6800              LDR      r0,[r0,#0]            ;1003
000f60  9006              STR      r0,[sp,#0x18]         ;1003
000f62  f89d0019          LDRB     r0,[sp,#0x19]         ;1004
000f66  42b0              CMP      r0,r6                 ;1004
000f68  d800              BHI      |L1.3948|
000f6a  e009              B        |L1.3968|
                  |L1.3948|
000f6c  bf00              NOP                            ;1005
000f6e  b907              CBNZ     r7,|L1.3954|
000f70  e1ad              B        |L1.4814|
                  |L1.3954|
000f72  1e7f              SUBS     r7,r7,#1              ;1005
000f74  f8190b01          LDRB     r0,[r9],#1            ;1005
000f78  40b0              LSLS     r0,r0,r6              ;1005
000f7a  4405              ADD      r5,r5,r0              ;1005
000f7c  3608              ADDS     r6,r6,#8              ;1005
000f7e  e7e5              B        |L1.3916|
                  |L1.3968|
000f80  bf00              NOP                            ;1004
000f82  f89d0018          LDRB     r0,[sp,#0x18]         ;1007
000f86  f00000f0          AND      r0,r0,#0xf0           ;1007
000f8a  bb88              CBNZ     r0,|L1.4080|
000f8c  9806              LDR      r0,[sp,#0x18]         ;1008
000f8e  9005              STR      r0,[sp,#0x14]         ;1008
000f90  bf00              NOP                            ;1009
                  |L1.3986|
000f92  f89d0015          LDRB     r0,[sp,#0x15]         ;1010
000f96  f89d1014          LDRB     r1,[sp,#0x14]         ;1010
000f9a  4401              ADD      r1,r1,r0              ;1010
000f9c  2001              MOVS     r0,#1                 ;1010
000f9e  4088              LSLS     r0,r0,r1              ;1010
000fa0  1e40              SUBS     r0,r0,#1              ;1010
000fa2  4028              ANDS     r0,r0,r5              ;1010
000fa4  f89d1015          LDRB     r1,[sp,#0x15]         ;1010
000fa8  40c8              LSRS     r0,r0,r1              ;1010
000faa  f8bd1016          LDRH     r1,[sp,#0x16]         ;1010
000fae  4408              ADD      r0,r0,r1              ;1010
000fb0  6d21              LDR      r1,[r4,#0x50]         ;1010
000fb2  eb010080          ADD      r0,r1,r0,LSL #2       ;1010
000fb6  6800              LDR      r0,[r0,#0]            ;1010
000fb8  9006              STR      r0,[sp,#0x18]         ;1010
000fba  f89d0015          LDRB     r0,[sp,#0x15]         ;1012
000fbe  f89d1019          LDRB     r1,[sp,#0x19]         ;1012
000fc2  4408              ADD      r0,r0,r1              ;1012
000fc4  42b0              CMP      r0,r6                 ;1012
000fc6  d800              BHI      |L1.4042|
000fc8  e009              B        |L1.4062|
                  |L1.4042|
000fca  bf00              NOP                            ;1013
000fcc  b907              CBNZ     r7,|L1.4048|
000fce  e17e              B        |L1.4814|
                  |L1.4048|
000fd0  1e7f              SUBS     r7,r7,#1              ;1013
000fd2  f8190b01          LDRB     r0,[r9],#1            ;1013
000fd6  40b0              LSLS     r0,r0,r6              ;1013
000fd8  4405              ADD      r5,r5,r0              ;1013
000fda  3608              ADDS     r6,r6,#8              ;1013
000fdc  e7d9              B        |L1.3986|
                  |L1.4062|
000fde  bf00              NOP                            ;1012
000fe0  bf00              NOP                            ;1015
000fe2  f89d0015          LDRB     r0,[sp,#0x15]         ;1015
000fe6  40c5              LSRS     r5,r5,r0              ;1015
000fe8  f89d0015          LDRB     r0,[sp,#0x15]         ;1015
000fec  1a36              SUBS     r6,r6,r0              ;1015
000fee  bf00              NOP                            ;1015
                  |L1.4080|
000ff0  bf00              NOP                            ;1017
000ff2  f89d0019          LDRB     r0,[sp,#0x19]         ;1017
000ff6  40c5              LSRS     r5,r5,r0              ;1017
000ff8  f89d0019          LDRB     r0,[sp,#0x19]         ;1017
000ffc  1a36              SUBS     r6,r6,r0              ;1017
000ffe  bf00              NOP                            ;1017
001000  f89d0018          LDRB     r0,[sp,#0x18]         ;1018
001004  f0000040          AND      r0,r0,#0x40           ;1018
001008  b3b0              CBZ      r0,|L1.4216|
00100a  e036              B        |L1.4218|
                  |L1.4108|
00100c  696e7661          DCB      "invalid bit length repeat",0
001010  6c696420
001014  62697420
001018  6c656e67
00101c  74682072
001020  65706561
001024  7400    
001026  00                DCB      0
001027  00                DCB      0
                  |L1.4136|
001028  696e7661          DCB      "invalid literal/lengths set",0
00102c  6c696420
001030  6c697465
001034  72616c2f
001038  6c656e67
00103c  74687320
001040  73657400
                  |L1.4164|
001044  696e7661          DCB      "invalid distances set",0
001048  6c696420
00104c  64697374
001050  616e6365
001054  73207365
001058  7400    
00105a  00                DCB      0
00105b  00                DCB      0
                  |L1.4188|
00105c  696e7661          DCB      "invalid literal/length code",0
001060  6c696420
001064  6c697465
001068  72616c2f
00106c  6c656e67
001070  74682063
001074  6f646500
                  |L1.4216|
001078  e005              B        |L1.4230|
                  |L1.4218|
00107a  a0fb              ADR      r0,|L1.5224|
00107c  f8c80018          STR      r0,[r8,#0x18]         ;1019
001080  201b              MOVS     r0,#0x1b              ;1020
001082  7020              STRB     r0,[r4,#0]            ;1020
001084  e121              B        |L1.4810|
                  |L1.4230|
001086  f8bd001a          LDRH     r0,[sp,#0x1a]         ;1023
00108a  6460              STR      r0,[r4,#0x44]         ;1023
00108c  f89d0018          LDRB     r0,[sp,#0x18]         ;1024
001090  f000000f          AND      r0,r0,#0xf            ;1024
001094  64a0              STR      r0,[r4,#0x48]         ;1024
001096  2015              MOVS     r0,#0x15              ;1025
001098  7020              STRB     r0,[r4,#0]            ;1025
00109a  bf00              NOP                            ;1026
00109c  6ca0              LDR      r0,[r4,#0x48]         ;1027
00109e  b1f8              CBZ      r0,|L1.4320|
0010a0  bf00              NOP                            ;1028
0010a2  e009              B        |L1.4280|
                  |L1.4260|
0010a4  bf00              NOP                            ;1028
0010a6  b907              CBNZ     r7,|L1.4266|
0010a8  e111              B        |L1.4814|
                  |L1.4266|
0010aa  1e7f              SUBS     r7,r7,#1              ;1028
0010ac  f8190b01          LDRB     r0,[r9],#1            ;1028
0010b0  40b0              LSLS     r0,r0,r6              ;1028
0010b2  4405              ADD      r5,r5,r0              ;1028
0010b4  3608              ADDS     r6,r6,#8              ;1028
0010b6  bf00              NOP                            ;1028
                  |L1.4280|
0010b8  6ca0              LDR      r0,[r4,#0x48]         ;1028
0010ba  42b0              CMP      r0,r6                 ;1028
0010bc  d8f2              BHI      |L1.4260|
0010be  bf00              NOP                            ;1028
0010c0  f8942048          LDRB     r2,[r4,#0x48]         ;1029
0010c4  2001              MOVS     r0,#1                 ;1029
0010c6  4090              LSLS     r0,r0,r2              ;1029
0010c8  1e40              SUBS     r0,r0,#1              ;1029
0010ca  4028              ANDS     r0,r0,r5              ;1029
0010cc  6c61              LDR      r1,[r4,#0x44]         ;1029
0010ce  4408              ADD      r0,r0,r1              ;1029
0010d0  6460              STR      r0,[r4,#0x44]         ;1029
0010d2  bf00              NOP                            ;1030
0010d4  f8940048          LDRB     r0,[r4,#0x48]         ;1030
0010d8  40c5              LSRS     r5,r5,r0              ;1030
0010da  6ca0              LDR      r0,[r4,#0x48]         ;1030
0010dc  1a36              SUBS     r6,r6,r0              ;1030
0010de  bf00              NOP                            ;1030
                  |L1.4320|
0010e0  6ae2              LDR      r2,[r4,#0x2c]         ;1039
0010e2  6c61              LDR      r1,[r4,#0x44]         ;1039
0010e4  9808              LDR      r0,[sp,#0x20]         ;1039
0010e6  4410              ADD      r0,r0,r2              ;1039
0010e8  eba0000b          SUB      r0,r0,r11             ;1039
0010ec  4281              CMP      r1,r0                 ;1039
0010ee  d905              BLS      |L1.4348|
0010f0  a0e3              ADR      r0,|L1.5248|
0010f2  f8c80018          STR      r0,[r8,#0x18]         ;1040
0010f6  201b              MOVS     r0,#0x1b              ;1041
0010f8  7020              STRB     r0,[r4,#0]            ;1041
0010fa  e0e6              B        |L1.4810|
                  |L1.4348|
0010fc  2016              MOVS     r0,#0x16              ;1045
0010fe  7020              STRB     r0,[r4,#0]            ;1045
001100  bf00              NOP                            ;1046
001102  f1bb0f00          CMP      r11,#0                ;1047
001106  d100              BNE      |L1.4362|
001108  e0e1              B        |L1.4814|
                  |L1.4362|
00110a  9808              LDR      r0,[sp,#0x20]         ;1048
00110c  eba00a0b          SUB      r10,r0,r11            ;1048
001110  6c60              LDR      r0,[r4,#0x44]         ;1049
001112  4550              CMP      r0,r10                ;1049
001114  d91b              BLS      |L1.4430|
001116  6c60              LDR      r0,[r4,#0x44]         ;1050
001118  eba00a0a          SUB      r10,r0,r10            ;1050
00111c  6b20              LDR      r0,[r4,#0x30]         ;1051
00111e  4550              CMP      r0,r10                ;1051
001120  d209              BCS      |L1.4406|
001122  6b20              LDR      r0,[r4,#0x30]         ;1052
001124  ebaa0a00          SUB      r10,r10,r0            ;1052
001128  6aa1              LDR      r1,[r4,#0x28]         ;1053
00112a  eba1010a          SUB      r1,r1,r10             ;1053
00112e  6b60              LDR      r0,[r4,#0x34]         ;1053
001130  4408              ADD      r0,r0,r1              ;1053
001132  9007              STR      r0,[sp,#0x1c]         ;1053
001134  e005              B        |L1.4418|
                  |L1.4406|
001136  e9d4100c          LDRD     r1,r0,[r4,#0x30]      ;1056
00113a  eba1010a          SUB      r1,r1,r10             ;1056
00113e  4408              ADD      r0,r0,r1              ;1056
001140  9007              STR      r0,[sp,#0x1c]         ;1056
                  |L1.4418|
001142  6c20              LDR      r0,[r4,#0x40]         ;1057
001144  4550              CMP      r0,r10                ;1057
001146  d208              BCS      |L1.4442|
001148  f8d4a040          LDR      r10,[r4,#0x40]        ;1057
00114c  e005              B        |L1.4442|
                  |L1.4430|
00114e  6c61              LDR      r1,[r4,#0x44]         ;1060
001150  980a              LDR      r0,[sp,#0x28]         ;1060
001152  1a40              SUBS     r0,r0,r1              ;1060
001154  9007              STR      r0,[sp,#0x1c]         ;1060
001156  f8d4a040          LDR      r10,[r4,#0x40]        ;1061
                  |L1.4442|
00115a  45da              CMP      r10,r11               ;1063
00115c  d900              BLS      |L1.4448|
00115e  46da              MOV      r10,r11               ;1063
                  |L1.4448|
001160  ebab0b0a          SUB      r11,r11,r10           ;1064
001164  6c20              LDR      r0,[r4,#0x40]         ;1065
001166  eba0000a          SUB      r0,r0,r10             ;1065
00116a  6420              STR      r0,[r4,#0x40]         ;1065
00116c  bf00              NOP                            ;1066
                  |L1.4462|
00116e  9807              LDR      r0,[sp,#0x1c]         ;1067
001170  7801              LDRB     r1,[r0,#0]            ;1067
001172  980a              LDR      r0,[sp,#0x28]         ;1067
001174  7001              STRB     r1,[r0,#0]            ;1067
001176  9807              LDR      r0,[sp,#0x1c]         ;1067
001178  1c40              ADDS     r0,r0,#1              ;1067
00117a  9007              STR      r0,[sp,#0x1c]         ;1067
00117c  980a              LDR      r0,[sp,#0x28]         ;1067
00117e  1c40              ADDS     r0,r0,#1              ;1067
001180  900a              STR      r0,[sp,#0x28]         ;1067
001182  f1aa0001          SUB      r0,r10,#1             ;1068
001186  ea5f0a00          MOVS     r10,r0                ;1068
00118a  d1f0              BNE      |L1.4462|
00118c  6c20              LDR      r0,[r4,#0x40]         ;1069
00118e  b908              CBNZ     r0,|L1.4500|
001190  2012              MOVS     r0,#0x12              ;1069
001192  7020              STRB     r0,[r4,#0]            ;1069
                  |L1.4500|
001194  e099              B        |L1.4810|
001196  f1bb0f00          CMP      r11,#0                ;1072
00119a  d100              BNE      |L1.4510|
00119c  e097              B        |L1.4814|
                  |L1.4510|
00119e  f8941040          LDRB     r1,[r4,#0x40]         ;1073
0011a2  980a              LDR      r0,[sp,#0x28]         ;1073
0011a4  7001              STRB     r1,[r0,#0]            ;1073
0011a6  980a              LDR      r0,[sp,#0x28]         ;1073
0011a8  1c40              ADDS     r0,r0,#1              ;1073
0011aa  900a              STR      r0,[sp,#0x28]         ;1073
0011ac  f1ab0b01          SUB      r11,r11,#1            ;1074
0011b0  2012              MOVS     r0,#0x12              ;1075
0011b2  7020              STRB     r0,[r4,#0]            ;1075
0011b4  e089              B        |L1.4810|
0011b6  68a0              LDR      r0,[r4,#8]            ;1078
0011b8  b3c0              CBZ      r0,|L1.4652|
0011ba  bf00              NOP                            ;1079
0011bc  e009              B        |L1.4562|
                  |L1.4542|
0011be  bf00              NOP                            ;1079
0011c0  b907              CBNZ     r7,|L1.4548|
0011c2  e084              B        |L1.4814|
                  |L1.4548|
0011c4  1e7f              SUBS     r7,r7,#1              ;1079
0011c6  f8190b01          LDRB     r0,[r9],#1            ;1079
0011ca  40b0              LSLS     r0,r0,r6              ;1079
0011cc  4405              ADD      r5,r5,r0              ;1079
0011ce  3608              ADDS     r6,r6,#8              ;1079
0011d0  bf00              NOP                            ;1079
                  |L1.4562|
0011d2  2e20              CMP      r6,#0x20              ;1079
0011d4  d3f3              BCC      |L1.4542|
0011d6  bf00              NOP                            ;1079
0011d8  9808              LDR      r0,[sp,#0x20]         ;1080
0011da  eba0000b          SUB      r0,r0,r11             ;1080
0011de  9008              STR      r0,[sp,#0x20]         ;1080
0011e0  f8d81014          LDR      r1,[r8,#0x14]         ;1081
0011e4  9808              LDR      r0,[sp,#0x20]         ;1081
0011e6  4408              ADD      r0,r0,r1              ;1081
0011e8  f8c80014          STR      r0,[r8,#0x14]         ;1081
0011ec  69e1              LDR      r1,[r4,#0x1c]         ;1082
0011ee  9808              LDR      r0,[sp,#0x20]         ;1082
0011f0  4408              ADD      r0,r0,r1              ;1082
0011f2  61e0              STR      r0,[r4,#0x1c]         ;1082
0011f4  9808              LDR      r0,[sp,#0x20]         ;1083
0011f6  b198              CBZ      r0,|L1.4640|
0011f8  6920              LDR      r0,[r4,#0x10]         ;1084
0011fa  b138              CBZ      r0,|L1.4620|
0011fc  9b08              LDR      r3,[sp,#0x20]         ;1085
0011fe  9a0a              LDR      r2,[sp,#0x28]         ;1085
001200  1ad1              SUBS     r1,r2,r3              ;1085
001202  461a              MOV      r2,r3                 ;1085
001204  69a0              LDR      r0,[r4,#0x18]         ;1085
001206  f7fffffe          BL       crc32
00120a  e006              B        |L1.4634|
                  |L1.4620|
00120c  9b08              LDR      r3,[sp,#0x20]         ;1085
00120e  9a0a              LDR      r2,[sp,#0x28]         ;1085
001210  1ad1              SUBS     r1,r2,r3              ;1085
001212  461a              MOV      r2,r3                 ;1085
001214  69a0              LDR      r0,[r4,#0x18]         ;1085
001216  f7fffffe          BL       adler32
                  |L1.4634|
00121a  61a0              STR      r0,[r4,#0x18]         ;1085
00121c  f8c80030          STR      r0,[r8,#0x30]         ;1085
                  |L1.4640|
001220  f8cdb020          STR      r11,[sp,#0x20]        ;1086
001224  6920              LDR      r0,[r4,#0x10]         ;1087
001226  b110              CBZ      r0,|L1.4654|
001228  4628              MOV      r0,r5                 ;1089
00122a  e00c              B        |L1.4678|
                  |L1.4652|
00122c  e018              B        |L1.4704|
                  |L1.4654|
00122e  f44f417f          MOV      r1,#0xff00            ;1091
001232  ea012115          AND      r1,r1,r5,LSR #8       ;1091
001236  eb016015          ADD      r0,r1,r5,LSR #24      ;1091
00123a  f405417f          AND      r1,r5,#0xff00         ;1091
00123e  eb002001          ADD      r0,r0,r1,LSL #8       ;1091
001242  eb006005          ADD      r0,r0,r5,LSL #24      ;1091
                  |L1.4678|
001246  69a1              LDR      r1,[r4,#0x18]         ;1091
001248  4288              CMP      r0,r1                 ;1091
00124a  d005              BEQ      |L1.4696|
00124c  a094              ADR      r0,|L1.5280|
00124e  f8c80018          STR      r0,[r8,#0x18]         ;1092
001252  201b              MOVS     r0,#0x1b              ;1093
001254  7020              STRB     r0,[r4,#0]            ;1093
001256  e038              B        |L1.4810|
                  |L1.4696|
001258  bf00              NOP                            ;1096
00125a  2500              MOVS     r5,#0                 ;1096
00125c  2600              MOVS     r6,#0                 ;1096
00125e  bf00              NOP                            ;1096
                  |L1.4704|
001260  2019              MOVS     r0,#0x19              ;1100
001262  7020              STRB     r0,[r4,#0]            ;1100
001264  bf00              NOP                            ;1101
001266  68a0              LDR      r0,[r4,#8]            ;1102
001268  b1e8              CBZ      r0,|L1.4774|
00126a  6920              LDR      r0,[r4,#0x10]         ;1102
00126c  b1d8              CBZ      r0,|L1.4774|
00126e  bf00              NOP                            ;1103
001270  e009              B        |L1.4742|
                  |L1.4722|
001272  bf00              NOP                            ;1103
001274  b907              CBNZ     r7,|L1.4728|
001276  e02a              B        |L1.4814|
                  |L1.4728|
001278  1e7f              SUBS     r7,r7,#1              ;1103
00127a  f8190b01          LDRB     r0,[r9],#1            ;1103
00127e  40b0              LSLS     r0,r0,r6              ;1103
001280  4405              ADD      r5,r5,r0              ;1103
001282  3608              ADDS     r6,r6,#8              ;1103
001284  bf00              NOP                            ;1103
                  |L1.4742|
001286  2e20              CMP      r6,#0x20              ;1103
001288  d3f3              BCC      |L1.4722|
00128a  bf00              NOP                            ;1103
00128c  69e0              LDR      r0,[r4,#0x1c]         ;1104
00128e  42a8              CMP      r0,r5                 ;1104
001290  d005              BEQ      |L1.4766|
001292  a089              ADR      r0,|L1.5304|
001294  f8c80018          STR      r0,[r8,#0x18]         ;1105
001298  201b              MOVS     r0,#0x1b              ;1106
00129a  7020              STRB     r0,[r4,#0]            ;1106
00129c  e015              B        |L1.4810|
                  |L1.4766|
00129e  bf00              NOP                            ;1109
0012a0  2500              MOVS     r5,#0                 ;1109
0012a2  2600              MOVS     r6,#0                 ;1109
0012a4  bf00              NOP                            ;1109
                  |L1.4774|
0012a6  201a              MOVS     r0,#0x1a              ;1113
0012a8  7020              STRB     r0,[r4,#0]            ;1113
0012aa  bf00              NOP                            ;1114
0012ac  2001              MOVS     r0,#1                 ;1115
0012ae  9003              STR      r0,[sp,#0xc]          ;1115
0012b0  e00d              B        |L1.4814|
0012b2  f06f0002          MVN      r0,#2                 ;1118
0012b6  9003              STR      r0,[sp,#0xc]          ;1118
0012b8  e009              B        |L1.4814|
0012ba  f06f0003          MVN      r0,#3                 ;1121
                  |L1.4798|
0012be  f7febfbe          B        |L1.574|
                  |L1.4802|
0012c2  bf00              NOP                            ;1122
0012c4  f06f0001          MVN      r0,#1                 ;1124
0012c8  e7f9              B        |L1.4798|
                  |L1.4810|
0012ca  f7febfd5          B        |L1.632|
                  |L1.4814|
0012ce  bf00              NOP                            ;1134
0012d0  980a              LDR      r0,[sp,#0x28]         ;1134
0012d2  f8c8000c          STR      r0,[r8,#0xc]          ;1134
0012d6  f8c8b010          STR      r11,[r8,#0x10]        ;1134
0012da  f8c89000          STR      r9,[r8,#0]            ;1134
0012de  f8c87004          STR      r7,[r8,#4]            ;1134
0012e2  63a5              STR      r5,[r4,#0x38]         ;1134
0012e4  63e6              STR      r6,[r4,#0x3c]         ;1134
0012e6  bf00              NOP                            ;1134
0012e8  6aa0              LDR      r0,[r4,#0x28]         ;1135
0012ea  b938              CBNZ     r0,|L1.4860|
0012ec  7820              LDRB     r0,[r4,#0]            ;1135
0012ee  2818              CMP      r0,#0x18              ;1135
0012f0  da0e              BGE      |L1.4880|
0012f2  f8d81010          LDR      r1,[r8,#0x10]         ;1135
0012f6  9808              LDR      r0,[sp,#0x20]         ;1135
0012f8  4281              CMP      r1,r0                 ;1135
0012fa  d009              BEQ      |L1.4880|
                  |L1.4860|
0012fc  4640              MOV      r0,r8                 ;1136
0012fe  9908              LDR      r1,[sp,#0x20]         ;1136
001300  f7fffffe          BL       updatewindow
001304  b120              CBZ      r0,|L1.4880|
001306  201c              MOVS     r0,#0x1c              ;1137
001308  7020              STRB     r0,[r4,#0]            ;1137
00130a  f06f0003          MVN      r0,#3                 ;1138
00130e  e7d6              B        |L1.4798|
                  |L1.4880|
001310  f8d81004          LDR      r1,[r8,#4]            ;1140
001314  9809              LDR      r0,[sp,#0x24]         ;1140
001316  1a40              SUBS     r0,r0,r1              ;1140
001318  9009              STR      r0,[sp,#0x24]         ;1140
00131a  f8d81010          LDR      r1,[r8,#0x10]         ;1141
00131e  9808              LDR      r0,[sp,#0x20]         ;1141
001320  1a40              SUBS     r0,r0,r1              ;1141
001322  9008              STR      r0,[sp,#0x20]         ;1141
001324  f8d81008          LDR      r1,[r8,#8]            ;1142
001328  9809              LDR      r0,[sp,#0x24]         ;1142
00132a  4408              ADD      r0,r0,r1              ;1142
00132c  f8c80008          STR      r0,[r8,#8]            ;1142
001330  f8d81014          LDR      r1,[r8,#0x14]         ;1143
001334  9808              LDR      r0,[sp,#0x20]         ;1143
001336  4408              ADD      r0,r0,r1              ;1143
001338  f8c80014          STR      r0,[r8,#0x14]         ;1143
00133c  69e1              LDR      r1,[r4,#0x1c]         ;1144
00133e  9808              LDR      r0,[sp,#0x20]         ;1144
001340  4408              ADD      r0,r0,r1              ;1144
001342  61e0              STR      r0,[r4,#0x1c]         ;1144
001344  68a0              LDR      r0,[r4,#8]            ;1145
001346  b1a8              CBZ      r0,|L1.4980|
001348  9808              LDR      r0,[sp,#0x20]         ;1145
00134a  b198              CBZ      r0,|L1.4980|
00134c  6920              LDR      r0,[r4,#0x10]         ;1146
00134e  b138              CBZ      r0,|L1.4960|
001350  f8d8300c          LDR      r3,[r8,#0xc]          ;1147
001354  9a08              LDR      r2,[sp,#0x20]         ;1147
001356  1a99              SUBS     r1,r3,r2              ;1147
001358  69a0              LDR      r0,[r4,#0x18]         ;1147
00135a  f7fffffe          BL       crc32
00135e  e006              B        |L1.4974|
                  |L1.4960|
001360  f8d8300c          LDR      r3,[r8,#0xc]          ;1147
001364  9a08              LDR      r2,[sp,#0x20]         ;1147
001366  1a99              SUBS     r1,r3,r2              ;1147
001368  69a0              LDR      r0,[r4,#0x18]         ;1147
00136a  f7fffffe          BL       adler32
                  |L1.4974|
00136e  61a0              STR      r0,[r4,#0x18]         ;1147
001370  f8c80030          STR      r0,[r8,#0x30]         ;1147
                  |L1.4980|
001374  6861              LDR      r1,[r4,#4]            ;1148
001376  6be0              LDR      r0,[r4,#0x3c]         ;1148
001378  b109              CBZ      r1,|L1.4990|
00137a  2140              MOVS     r1,#0x40              ;1148
00137c  e000              B        |L1.4992|
                  |L1.4990|
00137e  2100              MOVS     r1,#0                 ;1148
                  |L1.4992|
001380  4408              ADD      r0,r0,r1              ;1148
001382  7821              LDRB     r1,[r4,#0]            ;1148
001384  290b              CMP      r1,#0xb               ;1148
001386  d101              BNE      |L1.5004|
001388  2180              MOVS     r1,#0x80              ;1149
00138a  e000              B        |L1.5006|
                  |L1.5004|
00138c  2100              MOVS     r1,#0                 ;1149
                  |L1.5006|
00138e  4408              ADD      r0,r0,r1              ;1149
001390  f8c8002c          STR      r0,[r8,#0x2c]         ;1149
001394  9809              LDR      r0,[sp,#0x24]         ;1150
001396  b908              CBNZ     r0,|L1.5020|
001398  9808              LDR      r0,[sp,#0x20]         ;1150
00139a  b110              CBZ      r0,|L1.5026|
                  |L1.5020|
00139c  980c              LDR      r0,[sp,#0x30]         ;1150
00139e  2804              CMP      r0,#4                 ;1150
0013a0  d104              BNE      |L1.5036|
                  |L1.5026|
0013a2  9803              LDR      r0,[sp,#0xc]          ;1150
0013a4  b910              CBNZ     r0,|L1.5036|
0013a6  f06f0004          MVN      r0,#4                 ;1151
0013aa  9003              STR      r0,[sp,#0xc]          ;1151
                  |L1.5036|
0013ac  9803              LDR      r0,[sp,#0xc]          ;1152
0013ae  e786              B        |L1.4798|
;;;1154   
                          ENDP

                  inflateEnd PROC
;;;1155   int ZEXPORT inflateEnd(strm)
0013b0  b570              PUSH     {r4-r6,lr}
;;;1156   z_streamp strm;
;;;1157   {
0013b2  4604              MOV      r4,r0
;;;1158       struct inflate_state FAR *state;
;;;1159       if (strm == Z_NULL || strm->state == Z_NULL || strm->zfree == (free_func)0)
0013b4  b11c              CBZ      r4,|L1.5054|
0013b6  69e0              LDR      r0,[r4,#0x1c]
0013b8  b108              CBZ      r0,|L1.5054|
0013ba  6a60              LDR      r0,[r4,#0x24]
0013bc  b910              CBNZ     r0,|L1.5060|
                  |L1.5054|
;;;1160           return Z_STREAM_ERROR;
0013be  f06f0001          MVN      r0,#1
                  |L1.5058|
;;;1161       state = (struct inflate_state FAR *)strm->state;
;;;1162       if (state->window != Z_NULL) ZFREE(strm, state->window);
;;;1163       ZFREE(strm, strm->state);
;;;1164       strm->state = Z_NULL;
;;;1165       Tracev((stderr, "inflate: end\n"));
;;;1166       return Z_OK;
;;;1167   }
0013c2  bd70              POP      {r4-r6,pc}
                  |L1.5060|
0013c4  69e5              LDR      r5,[r4,#0x1c]         ;1161
0013c6  6b68              LDR      r0,[r5,#0x34]         ;1162
0013c8  b118              CBZ      r0,|L1.5074|
0013ca  6b69              LDR      r1,[r5,#0x34]         ;1162
0013cc  e9d42009          LDRD     r2,r0,[r4,#0x24]      ;1162
0013d0  4790              BLX      r2                    ;1162
                  |L1.5074|
0013d2  e9d42009          LDRD     r2,r0,[r4,#0x24]      ;1163
0013d6  69e1              LDR      r1,[r4,#0x1c]         ;1163
0013d8  4790              BLX      r2                    ;1163
0013da  2000              MOVS     r0,#0                 ;1164
0013dc  61e0              STR      r0,[r4,#0x1c]         ;1164
0013de  bf00              NOP                            ;1166
0013e0  e7ef              B        |L1.5058|
;;;1168   
                          ENDP

                  inflateSetDictionary PROC
;;;1169   int ZEXPORT inflateSetDictionary(strm, dictionary, dictLength)
0013e2  e92d41f0          PUSH     {r4-r8,lr}
;;;1170   z_streamp strm;
;;;1171   const Bytef *dictionary;
;;;1172   uInt dictLength;
;;;1173   {
0013e6  4605              MOV      r5,r0
0013e8  460f              MOV      r7,r1
0013ea  4616              MOV      r6,r2
;;;1174       struct inflate_state FAR *state;
;;;1175       unsigned long id;
;;;1176   
;;;1177       /* check state */
;;;1178       if (strm == Z_NULL || strm->state == Z_NULL) return Z_STREAM_ERROR;
0013ec  b10d              CBZ      r5,|L1.5106|
0013ee  69e8              LDR      r0,[r5,#0x1c]
0013f0  b918              CBNZ     r0,|L1.5114|
                  |L1.5106|
0013f2  f06f0001          MVN      r0,#1
                  |L1.5110|
;;;1179       state = (struct inflate_state FAR *)strm->state;
;;;1180       if (state->wrap != 0 && state->mode != DICT)
;;;1181           return Z_STREAM_ERROR;
;;;1182   
;;;1183       /* check for correct dictionary id */
;;;1184       if (state->mode == DICT) {
;;;1185           id = adler32(0L, Z_NULL, 0);
;;;1186           id = adler32(id, dictionary, dictLength);
;;;1187           if (id != state->check)
;;;1188               return Z_DATA_ERROR;
;;;1189       }
;;;1190   
;;;1191       /* copy dictionary to window */
;;;1192       if (updatewindow(strm, strm->avail_out)) {
;;;1193           state->mode = MEM;
;;;1194           return Z_MEM_ERROR;
;;;1195       }
;;;1196       if (dictLength > state->wsize) {
;;;1197           zmemcpy(state->window, dictionary + dictLength - state->wsize,
;;;1198                   state->wsize);
;;;1199           state->whave = state->wsize;
;;;1200       }
;;;1201       else {
;;;1202           zmemcpy(state->window + state->wsize - dictLength, dictionary,
;;;1203                   dictLength);
;;;1204           state->whave = dictLength;
;;;1205       }
;;;1206       state->havedict = 1;
;;;1207       Tracev((stderr, "inflate:   dictionary set\n"));
;;;1208       return Z_OK;
;;;1209   }
0013f6  e8bd81f0          POP      {r4-r8,pc}
                  |L1.5114|
0013fa  69ec              LDR      r4,[r5,#0x1c]         ;1179
0013fc  68a0              LDR      r0,[r4,#8]            ;1180
0013fe  b128              CBZ      r0,|L1.5132|
001400  7820              LDRB     r0,[r4,#0]            ;1180
001402  280a              CMP      r0,#0xa               ;1180
001404  d002              BEQ      |L1.5132|
001406  f06f0001          MVN      r0,#1                 ;1181
00140a  e7f4              B        |L1.5110|
                  |L1.5132|
00140c  7820              LDRB     r0,[r4,#0]            ;1184
00140e  280a              CMP      r0,#0xa               ;1184
001410  d111              BNE      |L1.5174|
001412  2200              MOVS     r2,#0                 ;1185
001414  4611              MOV      r1,r2                 ;1185
001416  4610              MOV      r0,r2                 ;1185
001418  f7fffffe          BL       adler32
00141c  4680              MOV      r8,r0                 ;1185
00141e  4632              MOV      r2,r6                 ;1186
001420  4639              MOV      r1,r7                 ;1186
001422  4640              MOV      r0,r8                 ;1186
001424  f7fffffe          BL       adler32
001428  4680              MOV      r8,r0                 ;1186
00142a  69a0              LDR      r0,[r4,#0x18]         ;1187
00142c  4540              CMP      r0,r8                 ;1187
00142e  d002              BEQ      |L1.5174|
001430  f06f0002          MVN      r0,#2                 ;1188
001434  e7df              B        |L1.5110|
                  |L1.5174|
001436  4628              MOV      r0,r5                 ;1192
001438  6929              LDR      r1,[r5,#0x10]         ;1192
00143a  f7fffffe          BL       updatewindow
00143e  b120              CBZ      r0,|L1.5194|
001440  201c              MOVS     r0,#0x1c              ;1193
001442  7020              STRB     r0,[r4,#0]            ;1193
001444  f06f0003          MVN      r0,#3                 ;1194
001448  e7d5              B        |L1.5110|
                  |L1.5194|
00144a  6aa0              LDR      r0,[r4,#0x28]         ;1196
00144c  42b0              CMP      r0,r6                 ;1196
00144e  d23f              BCS      |L1.5328|
001450  19bb              ADDS     r3,r7,r6              ;1197
001452  f8d4c028          LDR      r12,[r4,#0x28]        ;1197
001456  eba3010c          SUB      r1,r3,r12             ;1197
00145a  4662              MOV      r2,r12                ;1197
00145c  6b60              LDR      r0,[r4,#0x34]         ;1197
00145e  f7fffffe          BL       __aeabi_memcpy
001462  6aa0              LDR      r0,[r4,#0x28]         ;1199
001464  62e0              STR      r0,[r4,#0x2c]         ;1199
001466  e03c              B        |L1.5346|
                  |L1.5224|
001468  696e7661          DCB      "invalid distance code",0
00146c  6c696420
001470  64697374
001474  616e6365
001478  20636f64
00147c  6500    
00147e  00                DCB      0
00147f  00                DCB      0
                  |L1.5248|
001480  696e7661          DCB      "invalid distance too far back",0
001484  6c696420
001488  64697374
00148c  616e6365
001490  20746f6f
001494  20666172
001498  20626163
00149c  6b00    
00149e  00                DCB      0
00149f  00                DCB      0
                  |L1.5280|
0014a0  696e636f          DCB      "incorrect data check",0
0014a4  72726563
0014a8  74206461
0014ac  74612063
0014b0  6865636b
0014b4  00      
0014b5  00                DCB      0
0014b6  00                DCB      0
0014b7  00                DCB      0
                  |L1.5304|
0014b8  696e636f          DCB      "incorrect length check",0
0014bc  72726563
0014c0  74206c65
0014c4  6e677468
0014c8  20636865
0014cc  636b00  
0014cf  00                DCB      0
                  |L1.5328|
0014d0  6aa2              LDR      r2,[r4,#0x28]         ;1202
0014d2  6b61              LDR      r1,[r4,#0x34]         ;1202
0014d4  4411              ADD      r1,r1,r2              ;1202
0014d6  1b88              SUBS     r0,r1,r6              ;1202
0014d8  4632              MOV      r2,r6                 ;1202
0014da  4639              MOV      r1,r7                 ;1202
0014dc  f7fffffe          BL       __aeabi_memcpy
0014e0  62e6              STR      r6,[r4,#0x2c]         ;1204
                  |L1.5346|
0014e2  2001              MOVS     r0,#1                 ;1206
0014e4  60e0              STR      r0,[r4,#0xc]          ;1206
0014e6  2000              MOVS     r0,#0                 ;1208
0014e8  e785              B        |L1.5110|
;;;1210   
                          ENDP

                  inflateGetHeader PROC
;;;1211   int ZEXPORT inflateGetHeader(strm, head)
0014ea  4602              MOV      r2,r0
;;;1212   z_streamp strm;
;;;1213   gz_headerp head;
;;;1214   {
;;;1215       struct inflate_state FAR *state;
;;;1216   
;;;1217       /* check state */
;;;1218       if (strm == Z_NULL || strm->state == Z_NULL) return Z_STREAM_ERROR;
0014ec  b10a              CBZ      r2,|L1.5362|
0014ee  69d0              LDR      r0,[r2,#0x1c]
0014f0  b910              CBNZ     r0,|L1.5368|
                  |L1.5362|
0014f2  f06f0001          MVN      r0,#1
                  |L1.5366|
;;;1219       state = (struct inflate_state FAR *)strm->state;
;;;1220       if ((state->wrap & 2) == 0) return Z_STREAM_ERROR;
;;;1221   
;;;1222       /* save header structure */
;;;1223       state->head = head;
;;;1224       head->done = 0;
;;;1225       return Z_OK;
;;;1226   }
0014f6  4770              BX       lr
                  |L1.5368|
0014f8  69d3              LDR      r3,[r2,#0x1c]         ;1219
0014fa  7a18              LDRB     r0,[r3,#8]            ;1220
0014fc  f0000002          AND      r0,r0,#2              ;1220
001500  b910              CBNZ     r0,|L1.5384|
001502  f06f0001          MVN      r0,#1                 ;1220
001506  e7f6              B        |L1.5366|
                  |L1.5384|
001508  6219              STR      r1,[r3,#0x20]         ;1223
00150a  2000              MOVS     r0,#0                 ;1224
00150c  6308              STR      r0,[r1,#0x30]         ;1224
00150e  bf00              NOP                            ;1225
001510  e7f1              B        |L1.5366|
;;;1227   
                          ENDP

                  syncsearch PROC
;;;1238    */
;;;1239   local unsigned syncsearch(have, buf, len)
001512  b570              PUSH     {r4-r6,lr}
;;;1240   unsigned FAR *have;
;;;1241   unsigned char FAR *buf;
;;;1242   unsigned len;
;;;1243   {
001514  4603              MOV      r3,r0
001516  460c              MOV      r4,r1
;;;1244       unsigned got;
;;;1245       unsigned next;
;;;1246   
;;;1247       got = *have;
001518  6819              LDR      r1,[r3,#0]
;;;1248       next = 0;
00151a  2000              MOVS     r0,#0
;;;1249       while (next < len && got < 4) {
00151c  e010              B        |L1.5440|
                  |L1.5406|
;;;1250           if ((int)(buf[next]) == (got < 2 ? 0 : 0xff))
00151e  5c25              LDRB     r5,[r4,r0]
001520  2902              CMP      r1,#2
001522  d201              BCS      |L1.5416|
001524  2600              MOVS     r6,#0
001526  e000              B        |L1.5418|
                  |L1.5416|
001528  26ff              MOVS     r6,#0xff
                  |L1.5418|
00152a  42b5              CMP      r5,r6
00152c  d101              BNE      |L1.5426|
;;;1251               got++;
00152e  1c49              ADDS     r1,r1,#1
001530  e005              B        |L1.5438|
                  |L1.5426|
;;;1252           else if (buf[next])
001532  5c25              LDRB     r5,[r4,r0]
001534  b10d              CBZ      r5,|L1.5434|
;;;1253               got = 0;
001536  2100              MOVS     r1,#0
001538  e001              B        |L1.5438|
                  |L1.5434|
;;;1254           else
;;;1255               got = 4 - got;
00153a  f1c10104          RSB      r1,r1,#4
                  |L1.5438|
;;;1256           next++;
00153e  1c40              ADDS     r0,r0,#1
                  |L1.5440|
001540  4290              CMP      r0,r2                 ;1249
001542  d201              BCS      |L1.5448|
001544  2904              CMP      r1,#4                 ;1249
001546  d3ea              BCC      |L1.5406|
                  |L1.5448|
;;;1257       }
;;;1258       *have = got;
001548  6019              STR      r1,[r3,#0]
;;;1259       return next;
;;;1260   }
00154a  bd70              POP      {r4-r6,pc}
;;;1261   
                          ENDP

                  inflateSync PROC
;;;1262   int ZEXPORT inflateSync(strm)
00154c  e92d43f8          PUSH     {r3-r9,lr}
;;;1263   z_streamp strm;
;;;1264   {
001550  4605              MOV      r5,r0
;;;1265       unsigned len;               /* number of bytes to look at or looked at */
;;;1266       unsigned long in, out;      /* temporary to save total_in and total_out */
;;;1267       unsigned char buf[4];       /* to restore bit buffer to byte string */
;;;1268       struct inflate_state FAR *state;
;;;1269   
;;;1270       /* check parameters */
;;;1271       if (strm == Z_NULL || strm->state == Z_NULL) return Z_STREAM_ERROR;
001552  b10d              CBZ      r5,|L1.5464|
001554  69e8              LDR      r0,[r5,#0x1c]
001556  b918              CBNZ     r0,|L1.5472|
                  |L1.5464|
001558  f06f0001          MVN      r0,#1
                  |L1.5468|
;;;1272       state = (struct inflate_state FAR *)strm->state;
;;;1273       if (strm->avail_in == 0 && state->bits < 8) return Z_BUF_ERROR;
;;;1274   
;;;1275       /* if first time, start search in bit buffer */
;;;1276       if (state->mode != SYNC) {
;;;1277           state->mode = SYNC;
;;;1278           state->hold <<= state->bits & 7;
;;;1279           state->bits -= state->bits & 7;
;;;1280           len = 0;
;;;1281           while (state->bits >= 8) {
;;;1282               buf[len++] = (unsigned char)(state->hold);
;;;1283               state->hold >>= 8;
;;;1284               state->bits -= 8;
;;;1285           }
;;;1286           state->have = 0;
;;;1287           syncsearch(&(state->have), buf, len);
;;;1288       }
;;;1289   
;;;1290       /* search available input */
;;;1291       len = syncsearch(&(state->have), strm->next_in, strm->avail_in);
;;;1292       strm->avail_in -= len;
;;;1293       strm->next_in += len;
;;;1294       strm->total_in += len;
;;;1295   
;;;1296       /* return no joy or set up to restart inflate() on a new block */
;;;1297       if (state->have != 4) return Z_DATA_ERROR;
;;;1298       in = strm->total_in;  out = strm->total_out;
;;;1299       inflateReset(strm);
;;;1300       strm->total_in = in;  strm->total_out = out;
;;;1301       state->mode = TYPE;
;;;1302       return Z_OK;
;;;1303   }
00155c  e8bd83f8          POP      {r3-r9,pc}
                  |L1.5472|
001560  69ec              LDR      r4,[r5,#0x1c]         ;1272
001562  6868              LDR      r0,[r5,#4]            ;1273
001564  b928              CBNZ     r0,|L1.5490|
001566  6be0              LDR      r0,[r4,#0x3c]         ;1273
001568  2808              CMP      r0,#8                 ;1273
00156a  d202              BCS      |L1.5490|
00156c  f06f0004          MVN      r0,#4                 ;1273
001570  e7f4              B        |L1.5468|
                  |L1.5490|
001572  7820              LDRB     r0,[r4,#0]            ;1276
001574  281d              CMP      r0,#0x1d              ;1276
001576  d028              BEQ      |L1.5578|
001578  201d              MOVS     r0,#0x1d              ;1277
00157a  7020              STRB     r0,[r4,#0]            ;1277
00157c  f894103c          LDRB     r1,[r4,#0x3c]         ;1278
001580  f0010107          AND      r1,r1,#7              ;1278
001584  6ba0              LDR      r0,[r4,#0x38]         ;1278
001586  4088              LSLS     r0,r0,r1              ;1278
001588  63a0              STR      r0,[r4,#0x38]         ;1278
00158a  f894103c          LDRB     r1,[r4,#0x3c]         ;1279
00158e  f0010107          AND      r1,r1,#7              ;1279
001592  6be0              LDR      r0,[r4,#0x3c]         ;1279
001594  1a40              SUBS     r0,r0,r1              ;1279
001596  63e0              STR      r0,[r4,#0x3c]         ;1279
001598  2600              MOVS     r6,#0                 ;1280
00159a  e00b              B        |L1.5556|
                  |L1.5532|
00159c  f8942038          LDRB     r2,[r4,#0x38]         ;1282
0015a0  4630              MOV      r0,r6                 ;1282
0015a2  1c76              ADDS     r6,r6,#1              ;1282
0015a4  f80d2000          STRB     r2,[sp,r0]            ;1282
0015a8  6ba0              LDR      r0,[r4,#0x38]         ;1283
0015aa  0a00              LSRS     r0,r0,#8              ;1283
0015ac  63a0              STR      r0,[r4,#0x38]         ;1283
0015ae  6be0              LDR      r0,[r4,#0x3c]         ;1284
0015b0  3808              SUBS     r0,r0,#8              ;1284
0015b2  63e0              STR      r0,[r4,#0x3c]         ;1284
                  |L1.5556|
0015b4  6be0              LDR      r0,[r4,#0x3c]         ;1281
0015b6  2808              CMP      r0,#8                 ;1281
0015b8  d2f0              BCS      |L1.5532|
0015ba  2000              MOVS     r0,#0                 ;1286
0015bc  66a0              STR      r0,[r4,#0x68]         ;1286
0015be  4632              MOV      r2,r6                 ;1287
0015c0  4669              MOV      r1,sp                 ;1287
0015c2  f1040068          ADD      r0,r4,#0x68           ;1287
0015c6  f7fffffe          BL       syncsearch
                  |L1.5578|
0015ca  f1040068          ADD      r0,r4,#0x68           ;1291
0015ce  e9d51200          LDRD     r1,r2,[r5,#0]         ;1291
0015d2  f7fffffe          BL       syncsearch
0015d6  4606              MOV      r6,r0                 ;1291
0015d8  6868              LDR      r0,[r5,#4]            ;1292
0015da  1b80              SUBS     r0,r0,r6              ;1292
0015dc  6068              STR      r0,[r5,#4]            ;1292
0015de  6828              LDR      r0,[r5,#0]            ;1293
0015e0  4430              ADD      r0,r0,r6              ;1293
0015e2  6028              STR      r0,[r5,#0]            ;1293
0015e4  68a8              LDR      r0,[r5,#8]            ;1294
0015e6  4430              ADD      r0,r0,r6              ;1294
0015e8  60a8              STR      r0,[r5,#8]            ;1294
0015ea  6ea0              LDR      r0,[r4,#0x68]         ;1297
0015ec  2804              CMP      r0,#4                 ;1297
0015ee  d002              BEQ      |L1.5622|
0015f0  f06f0002          MVN      r0,#2                 ;1297
0015f4  e7b2              B        |L1.5468|
                  |L1.5622|
0015f6  68af              LDR      r7,[r5,#8]            ;1298
0015f8  f8d58014          LDR      r8,[r5,#0x14]         ;1298
0015fc  4628              MOV      r0,r5                 ;1299
0015fe  f7fffffe          BL       inflateReset
001602  60af              STR      r7,[r5,#8]            ;1300
001604  f8c58014          STR      r8,[r5,#0x14]         ;1300
001608  200b              MOVS     r0,#0xb               ;1301
00160a  7020              STRB     r0,[r4,#0]            ;1301
00160c  2000              MOVS     r0,#0                 ;1302
00160e  e7a5              B        |L1.5468|
;;;1304   
                          ENDP

                  inflateSyncPoint PROC
;;;1312    */
;;;1313   int ZEXPORT inflateSyncPoint(strm)
001610  4601              MOV      r1,r0
;;;1314   z_streamp strm;
;;;1315   {
;;;1316       struct inflate_state FAR *state;
;;;1317   
;;;1318       if (strm == Z_NULL || strm->state == Z_NULL) return Z_STREAM_ERROR;
001612  b109              CBZ      r1,|L1.5656|
001614  69c8              LDR      r0,[r1,#0x1c]
001616  b910              CBNZ     r0,|L1.5662|
                  |L1.5656|
001618  f06f0001          MVN      r0,#1
                  |L1.5660|
;;;1319       state = (struct inflate_state FAR *)strm->state;
;;;1320       return state->mode == STORED && state->bits == 0;
;;;1321   }
00161c  4770              BX       lr
                  |L1.5662|
00161e  69ca              LDR      r2,[r1,#0x1c]         ;1319
001620  7810              LDRB     r0,[r2,#0]            ;1320
001622  280d              CMP      r0,#0xd               ;1320
001624  d103              BNE      |L1.5678|
001626  6bd0              LDR      r0,[r2,#0x3c]         ;1320
001628  b908              CBNZ     r0,|L1.5678|
00162a  2001              MOVS     r0,#1                 ;1320
00162c  e7f6              B        |L1.5660|
                  |L1.5678|
00162e  2000              MOVS     r0,#0                 ;1320
001630  e7f4              B        |L1.5660|
;;;1322   
                          ENDP

                  inflateCopy PROC
;;;1323   int ZEXPORT inflateCopy(dest, source)
001632  e92d47f0          PUSH     {r4-r10,lr}
;;;1324   z_streamp dest;
;;;1325   z_streamp source;
;;;1326   {
001636  4680              MOV      r8,r0
001638  460d              MOV      r5,r1
;;;1327       struct inflate_state FAR *state;
;;;1328       struct inflate_state FAR *copy;
;;;1329       unsigned char FAR *window;
;;;1330       unsigned wsize;
;;;1331   
;;;1332       /* check input */
;;;1333       if (dest == Z_NULL || source == Z_NULL || source->state == Z_NULL ||
00163a  f1b80f00          CMP      r8,#0
00163e  d006              BEQ      |L1.5710|
001640  b12d              CBZ      r5,|L1.5710|
001642  69e8              LDR      r0,[r5,#0x1c]
001644  b118              CBZ      r0,|L1.5710|
;;;1334           source->zalloc == (alloc_func)0 || source->zfree == (free_func)0)
001646  6a28              LDR      r0,[r5,#0x20]
001648  b108              CBZ      r0,|L1.5710|
00164a  6a68              LDR      r0,[r5,#0x24]
00164c  b918              CBNZ     r0,|L1.5718|
                  |L1.5710|
;;;1335           return Z_STREAM_ERROR;
00164e  f06f0001          MVN      r0,#1
                  |L1.5714|
;;;1336       state = (struct inflate_state FAR *)source->state;
;;;1337   
;;;1338       /* allocate space */
;;;1339       copy = (struct inflate_state FAR *)
;;;1340              ZALLOC(source, 1, sizeof(struct inflate_state));
;;;1341       if (copy == Z_NULL) return Z_MEM_ERROR;
;;;1342       window = Z_NULL;
;;;1343       if (state->window != Z_NULL) {
;;;1344           window = (unsigned char FAR *)
;;;1345                    ZALLOC(source, 1U << state->wbits, sizeof(unsigned char));
;;;1346           if (window == Z_NULL) {
;;;1347               ZFREE(source, copy);
;;;1348               return Z_MEM_ERROR;
;;;1349           }
;;;1350       }
;;;1351   
;;;1352       /* copy state */
;;;1353       zmemcpy(dest, source, sizeof(z_stream));
;;;1354       zmemcpy(copy, state, sizeof(struct inflate_state));
;;;1355       if (state->lencode >= state->codes &&
;;;1356           state->lencode <= state->codes + ENOUGH - 1) {
;;;1357           copy->lencode = copy->codes + (state->lencode - state->codes);
;;;1358           copy->distcode = copy->codes + (state->distcode - state->codes);
;;;1359       }
;;;1360       copy->next = copy->codes + (state->next - state->codes);
;;;1361       if (window != Z_NULL) {
;;;1362           wsize = 1U << state->wbits;
;;;1363           zmemcpy(window, state->window, wsize);
;;;1364       }
;;;1365       copy->window = window;
;;;1366       dest->state = (struct internal_state FAR *)copy;
;;;1367       return Z_OK;
;;;1368   }
001652  e8bd87f0          POP      {r4-r10,pc}
                  |L1.5718|
001656  69ec              LDR      r4,[r5,#0x1c]         ;1336
001658  f2425230          MOV      r2,#0x2530            ;1339
00165c  2101              MOVS     r1,#1                 ;1339
00165e  6a2b              LDR      r3,[r5,#0x20]         ;1339
001660  6aa8              LDR      r0,[r5,#0x28]         ;1339
001662  4798              BLX      r3                    ;1339
001664  4606              MOV      r6,r0                 ;1339
001666  b916              CBNZ     r6,|L1.5742|
001668  f06f0003          MVN      r0,#3                 ;1341
00166c  e7f1              B        |L1.5714|
                  |L1.5742|
00166e  2700              MOVS     r7,#0                 ;1342
001670  6b60              LDR      r0,[r4,#0x34]         ;1343
001672  b180              CBZ      r0,|L1.5782|
001674  f894c024          LDRB     r12,[r4,#0x24]        ;1344
001678  2201              MOVS     r2,#1                 ;1344
00167a  fa02f10c          LSL      r1,r2,r12             ;1344
00167e  6a2b              LDR      r3,[r5,#0x20]         ;1344
001680  6aa8              LDR      r0,[r5,#0x28]         ;1344
001682  4798              BLX      r3                    ;1344
001684  4607              MOV      r7,r0                 ;1344
001686  b937              CBNZ     r7,|L1.5782|
001688  4631              MOV      r1,r6                 ;1347
00168a  e9d52009          LDRD     r2,r0,[r5,#0x24]      ;1347
00168e  4790              BLX      r2                    ;1347
001690  f06f0003          MVN      r0,#3                 ;1348
001694  e7dd              B        |L1.5714|
                  |L1.5782|
001696  2238              MOVS     r2,#0x38              ;1353
001698  4629              MOV      r1,r5                 ;1353
00169a  4640              MOV      r0,r8                 ;1353
00169c  f7fffffe          BL       __aeabi_memcpy4
0016a0  f2425230          MOV      r2,#0x2530            ;1354
0016a4  4621              MOV      r1,r4                 ;1354
0016a6  4630              MOV      r0,r6                 ;1354
0016a8  f7fffffe          BL       __aeabi_memcpy4
0016ac  f50460a6          ADD      r0,r4,#0x530          ;1355
0016b0  6ce1              LDR      r1,[r4,#0x4c]         ;1355
0016b2  4281              CMP      r1,r0                 ;1355
0016b4  d319              BCC      |L1.5866|
0016b6  f5005000          ADD      r0,r0,#0x2000         ;1356
0016ba  1f00              SUBS     r0,r0,#4              ;1356
0016bc  6ce1              LDR      r1,[r4,#0x4c]         ;1356
0016be  4281              CMP      r1,r0                 ;1356
0016c0  d813              BHI      |L1.5866|
0016c2  f50460a6          ADD      r0,r4,#0x530          ;1357
0016c6  6ce1              LDR      r1,[r4,#0x4c]         ;1357
0016c8  1a08              SUBS     r0,r1,r0              ;1357
0016ca  1081              ASRS     r1,r0,#2              ;1357
0016cc  f50660a6          ADD      r0,r6,#0x530          ;1357
0016d0  eb000081          ADD      r0,r0,r1,LSL #2       ;1357
0016d4  64f0              STR      r0,[r6,#0x4c]         ;1357
0016d6  f50460a6          ADD      r0,r4,#0x530          ;1358
0016da  6d21              LDR      r1,[r4,#0x50]         ;1358
0016dc  1a08              SUBS     r0,r1,r0              ;1358
0016de  1081              ASRS     r1,r0,#2              ;1358
0016e0  f50660a6          ADD      r0,r6,#0x530          ;1358
0016e4  eb000081          ADD      r0,r0,r1,LSL #2       ;1358
0016e8  6530              STR      r0,[r6,#0x50]         ;1358
                  |L1.5866|
0016ea  f50460a6          ADD      r0,r4,#0x530          ;1360
0016ee  6ee1              LDR      r1,[r4,#0x6c]         ;1360
0016f0  1a08              SUBS     r0,r1,r0              ;1360
0016f2  1081              ASRS     r1,r0,#2              ;1360
0016f4  f50660a6          ADD      r0,r6,#0x530          ;1360
0016f8  eb000081          ADD      r0,r0,r1,LSL #2       ;1360
0016fc  66f0              STR      r0,[r6,#0x6c]         ;1360
0016fe  b14f              CBZ      r7,|L1.5908|
001700  f8941024          LDRB     r1,[r4,#0x24]         ;1362
001704  2001              MOVS     r0,#1                 ;1362
001706  fa00f901          LSL      r9,r0,r1              ;1362
00170a  464a              MOV      r2,r9                 ;1363
00170c  4638              MOV      r0,r7                 ;1363
00170e  6b61              LDR      r1,[r4,#0x34]         ;1363
001710  f7fffffe          BL       __aeabi_memcpy
                  |L1.5908|
001714  6377              STR      r7,[r6,#0x34]         ;1365
001716  f8c8601c          STR      r6,[r8,#0x1c]         ;1366
00171a  2000              MOVS     r0,#0                 ;1367
00171c  e799              B        |L1.5714|
                          ENDP


                          AREA ||.constdata||, DATA, READONLY, ALIGN=1

                  lenfix
000000  6007              DCB      0x60,0x07
000002  0000              DCW      0x0000
000004  0008              DCB      0x00,0x08
000006  0050              DCW      0x0050
000008  0008              DCB      0x00,0x08
00000a  0010              DCW      0x0010
00000c  1408              DCB      0x14,0x08
00000e  0073              DCW      0x0073
000010  1207              DCB      0x12,0x07
000012  001f              DCW      0x001f
000014  0008              DCB      0x00,0x08
000016  0070              DCW      0x0070
000018  0008              DCB      0x00,0x08
00001a  0030              DCW      0x0030
00001c  0009              DCB      0x00,0x09
00001e  00c0              DCW      0x00c0
000020  1007              DCB      0x10,0x07
000022  000a              DCW      0x000a
000024  0008              DCB      0x00,0x08
000026  0060              DCW      0x0060
000028  0008              DCB      0x00,0x08
00002a  0020              DCW      0x0020
00002c  0009              DCB      0x00,0x09
00002e  00a0              DCW      0x00a0
000030  0008              DCB      0x00,0x08
000032  0000              DCW      0x0000
000034  0008              DCB      0x00,0x08
000036  0080              DCW      0x0080
000038  0008              DCB      0x00,0x08
00003a  0040              DCW      0x0040
00003c  0009              DCB      0x00,0x09
00003e  00e0              DCW      0x00e0
000040  1007              DCB      0x10,0x07
000042  0006              DCW      0x0006
000044  0008              DCB      0x00,0x08
000046  0058              DCW      0x0058
000048  0008              DCB      0x00,0x08
00004a  0018              DCW      0x0018
00004c  0009              DCB      0x00,0x09
00004e  0090              DCW      0x0090
000050  1307              DCB      0x13,0x07
000052  003b              DCW      0x003b
000054  0008              DCB      0x00,0x08
000056  0078              DCW      0x0078
000058  0008              DCB      0x00,0x08
00005a  0038              DCW      0x0038
00005c  0009              DCB      0x00,0x09
00005e  00d0              DCW      0x00d0
000060  1107              DCB      0x11,0x07
000062  0011              DCW      0x0011
000064  0008              DCB      0x00,0x08
000066  0068              DCW      0x0068
000068  0008              DCB      0x00,0x08
00006a  0028              DCW      0x0028
00006c  0009              DCB      0x00,0x09
00006e  00b0              DCW      0x00b0
000070  0008              DCB      0x00,0x08
000072  0008              DCW      0x0008
000074  0008              DCB      0x00,0x08
000076  0088              DCW      0x0088
000078  0008              DCB      0x00,0x08
00007a  0048              DCW      0x0048
00007c  0009              DCB      0x00,0x09
00007e  00f0              DCW      0x00f0
000080  1007              DCB      0x10,0x07
000082  0004              DCW      0x0004
000084  0008              DCB      0x00,0x08
000086  0054              DCW      0x0054
000088  0008              DCB      0x00,0x08
00008a  0014              DCW      0x0014
00008c  1508              DCB      0x15,0x08
00008e  00e3              DCW      0x00e3
000090  1307              DCB      0x13,0x07
000092  002b              DCW      0x002b
000094  0008              DCB      0x00,0x08
000096  0074              DCW      0x0074
000098  0008              DCB      0x00,0x08
00009a  0034              DCW      0x0034
00009c  0009              DCB      0x00,0x09
00009e  00c8              DCW      0x00c8
0000a0  1107              DCB      0x11,0x07
0000a2  000d              DCW      0x000d
0000a4  0008              DCB      0x00,0x08
0000a6  0064              DCW      0x0064
0000a8  0008              DCB      0x00,0x08
0000aa  0024              DCW      0x0024
0000ac  0009              DCB      0x00,0x09
0000ae  00a8              DCW      0x00a8
0000b0  0008              DCB      0x00,0x08
0000b2  0004              DCW      0x0004
0000b4  0008              DCB      0x00,0x08
0000b6  0084              DCW      0x0084
0000b8  0008              DCB      0x00,0x08
0000ba  0044              DCW      0x0044
0000bc  0009              DCB      0x00,0x09
0000be  00e8              DCW      0x00e8
0000c0  1007              DCB      0x10,0x07
0000c2  0008              DCW      0x0008
0000c4  0008              DCB      0x00,0x08
0000c6  005c              DCW      0x005c
0000c8  0008              DCB      0x00,0x08
0000ca  001c              DCW      0x001c
0000cc  0009              DCB      0x00,0x09
0000ce  0098              DCW      0x0098
0000d0  1407              DCB      0x14,0x07
0000d2  0053              DCW      0x0053
0000d4  0008              DCB      0x00,0x08
0000d6  007c              DCW      0x007c
0000d8  0008              DCB      0x00,0x08
0000da  003c              DCW      0x003c
0000dc  0009              DCB      0x00,0x09
0000de  00d8              DCW      0x00d8
0000e0  1207              DCB      0x12,0x07
0000e2  0017              DCW      0x0017
0000e4  0008              DCB      0x00,0x08
0000e6  006c              DCW      0x006c
0000e8  0008              DCB      0x00,0x08
0000ea  002c              DCW      0x002c
0000ec  0009              DCB      0x00,0x09
0000ee  00b8              DCW      0x00b8
0000f0  0008              DCB      0x00,0x08
0000f2  000c              DCW      0x000c
0000f4  0008              DCB      0x00,0x08
0000f6  008c              DCW      0x008c
0000f8  0008              DCB      0x00,0x08
0000fa  004c              DCW      0x004c
0000fc  0009              DCB      0x00,0x09
0000fe  00f8              DCW      0x00f8
000100  1007              DCB      0x10,0x07
000102  0003              DCW      0x0003
000104  0008              DCB      0x00,0x08
000106  0052              DCW      0x0052
000108  0008              DCB      0x00,0x08
00010a  0012              DCW      0x0012
00010c  1508              DCB      0x15,0x08
00010e  00a3              DCW      0x00a3
000110  1307              DCB      0x13,0x07
000112  0023              DCW      0x0023
000114  0008              DCB      0x00,0x08
000116  0072              DCW      0x0072
000118  0008              DCB      0x00,0x08
00011a  0032              DCW      0x0032
00011c  0009              DCB      0x00,0x09
00011e  00c4              DCW      0x00c4
000120  1107              DCB      0x11,0x07
000122  000b              DCW      0x000b
000124  0008              DCB      0x00,0x08
000126  0062              DCW      0x0062
000128  0008              DCB      0x00,0x08
00012a  0022              DCW      0x0022
00012c  0009              DCB      0x00,0x09
00012e  00a4              DCW      0x00a4
000130  0008              DCB      0x00,0x08
000132  0002              DCW      0x0002
000134  0008              DCB      0x00,0x08
000136  0082              DCW      0x0082
000138  0008              DCB      0x00,0x08
00013a  0042              DCW      0x0042
00013c  0009              DCB      0x00,0x09
00013e  00e4              DCW      0x00e4
000140  1007              DCB      0x10,0x07
000142  0007              DCW      0x0007
000144  0008              DCB      0x00,0x08
000146  005a              DCW      0x005a
000148  0008              DCB      0x00,0x08
00014a  001a              DCW      0x001a
00014c  0009              DCB      0x00,0x09
00014e  0094              DCW      0x0094
000150  1407              DCB      0x14,0x07
000152  0043              DCW      0x0043
000154  0008              DCB      0x00,0x08
000156  007a              DCW      0x007a
000158  0008              DCB      0x00,0x08
00015a  003a              DCW      0x003a
00015c  0009              DCB      0x00,0x09
00015e  00d4              DCW      0x00d4
000160  1207              DCB      0x12,0x07
000162  0013              DCW      0x0013
000164  0008              DCB      0x00,0x08
000166  006a              DCW      0x006a
000168  0008              DCB      0x00,0x08
00016a  002a              DCW      0x002a
00016c  0009              DCB      0x00,0x09
00016e  00b4              DCW      0x00b4
000170  0008              DCB      0x00,0x08
000172  000a              DCW      0x000a
000174  0008              DCB      0x00,0x08
000176  008a              DCW      0x008a
000178  0008              DCB      0x00,0x08
00017a  004a              DCW      0x004a
00017c  0009              DCB      0x00,0x09
00017e  00f4              DCW      0x00f4
000180  1007              DCB      0x10,0x07
000182  0005              DCW      0x0005
000184  0008              DCB      0x00,0x08
000186  0056              DCW      0x0056
000188  0008              DCB      0x00,0x08
00018a  0016              DCW      0x0016
00018c  4008              DCB      0x40,0x08
00018e  0000              DCW      0x0000
000190  1307              DCB      0x13,0x07
000192  0033              DCW      0x0033
000194  0008              DCB      0x00,0x08
000196  0076              DCW      0x0076
000198  0008              DCB      0x00,0x08
00019a  0036              DCW      0x0036
00019c  0009              DCB      0x00,0x09
00019e  00cc              DCW      0x00cc
0001a0  1107              DCB      0x11,0x07
0001a2  000f              DCW      0x000f
0001a4  0008              DCB      0x00,0x08
0001a6  0066              DCW      0x0066
0001a8  0008              DCB      0x00,0x08
0001aa  0026              DCW      0x0026
0001ac  0009              DCB      0x00,0x09
0001ae  00ac              DCW      0x00ac
0001b0  0008              DCB      0x00,0x08
0001b2  0006              DCW      0x0006
0001b4  0008              DCB      0x00,0x08
0001b6  0086              DCW      0x0086
0001b8  0008              DCB      0x00,0x08
0001ba  0046              DCW      0x0046
0001bc  0009              DCB      0x00,0x09
0001be  00ec              DCW      0x00ec
0001c0  1007              DCB      0x10,0x07
0001c2  0009              DCW      0x0009
0001c4  0008              DCB      0x00,0x08
0001c6  005e              DCW      0x005e
0001c8  0008              DCB      0x00,0x08
0001ca  001e              DCW      0x001e
0001cc  0009              DCB      0x00,0x09
0001ce  009c              DCW      0x009c
0001d0  1407              DCB      0x14,0x07
0001d2  0063              DCW      0x0063
0001d4  0008              DCB      0x00,0x08
0001d6  007e              DCW      0x007e
0001d8  0008              DCB      0x00,0x08
0001da  003e              DCW      0x003e
0001dc  0009              DCB      0x00,0x09
0001de  00dc              DCW      0x00dc
0001e0  1207              DCB      0x12,0x07
0001e2  001b              DCW      0x001b
0001e4  0008              DCB      0x00,0x08
0001e6  006e              DCW      0x006e
0001e8  0008              DCB      0x00,0x08
0001ea  002e              DCW      0x002e
0001ec  0009              DCB      0x00,0x09
0001ee  00bc              DCW      0x00bc
0001f0  0008              DCB      0x00,0x08
0001f2  000e              DCW      0x000e
0001f4  0008              DCB      0x00,0x08
0001f6  008e              DCW      0x008e
0001f8  0008              DCB      0x00,0x08
0001fa  004e              DCW      0x004e
0001fc  0009              DCB      0x00,0x09
0001fe  00fc              DCW      0x00fc
000200  6007              DCB      0x60,0x07
000202  0000              DCW      0x0000
000204  0008              DCB      0x00,0x08
000206  0051              DCW      0x0051
000208  0008              DCB      0x00,0x08
00020a  0011              DCW      0x0011
00020c  1508              DCB      0x15,0x08
00020e  0083              DCW      0x0083
000210  1207              DCB      0x12,0x07
000212  001f              DCW      0x001f
000214  0008              DCB      0x00,0x08
000216  0071              DCW      0x0071
000218  0008              DCB      0x00,0x08
00021a  0031              DCW      0x0031
00021c  0009              DCB      0x00,0x09
00021e  00c2              DCW      0x00c2
000220  1007              DCB      0x10,0x07
000222  000a              DCW      0x000a
000224  0008              DCB      0x00,0x08
000226  0061              DCW      0x0061
000228  0008              DCB      0x00,0x08
00022a  0021              DCW      0x0021
00022c  0009              DCB      0x00,0x09
00022e  00a2              DCW      0x00a2
000230  0008              DCB      0x00,0x08
000232  0001              DCW      0x0001
000234  0008              DCB      0x00,0x08
000236  0081              DCW      0x0081
000238  0008              DCB      0x00,0x08
00023a  0041              DCW      0x0041
00023c  0009              DCB      0x00,0x09
00023e  00e2              DCW      0x00e2
000240  1007              DCB      0x10,0x07
000242  0006              DCW      0x0006
000244  0008              DCB      0x00,0x08
000246  0059              DCW      0x0059
000248  0008              DCB      0x00,0x08
00024a  0019              DCW      0x0019
00024c  0009              DCB      0x00,0x09
00024e  0092              DCW      0x0092
000250  1307              DCB      0x13,0x07
000252  003b              DCW      0x003b
000254  0008              DCB      0x00,0x08
000256  0079              DCW      0x0079
000258  0008              DCB      0x00,0x08
00025a  0039              DCW      0x0039
00025c  0009              DCB      0x00,0x09
00025e  00d2              DCW      0x00d2
000260  1107              DCB      0x11,0x07
000262  0011              DCW      0x0011
000264  0008              DCB      0x00,0x08
000266  0069              DCW      0x0069
000268  0008              DCB      0x00,0x08
00026a  0029              DCW      0x0029
00026c  0009              DCB      0x00,0x09
00026e  00b2              DCW      0x00b2
000270  0008              DCB      0x00,0x08
000272  0009              DCW      0x0009
000274  0008              DCB      0x00,0x08
000276  0089              DCW      0x0089
000278  0008              DCB      0x00,0x08
00027a  0049              DCW      0x0049
00027c  0009              DCB      0x00,0x09
00027e  00f2              DCW      0x00f2
000280  1007              DCB      0x10,0x07
000282  0004              DCW      0x0004
000284  0008              DCB      0x00,0x08
000286  0055              DCW      0x0055
000288  0008              DCB      0x00,0x08
00028a  0015              DCW      0x0015
00028c  1008              DCB      0x10,0x08
00028e  0102              DCW      0x0102
000290  1307              DCB      0x13,0x07
000292  002b              DCW      0x002b
000294  0008              DCB      0x00,0x08
000296  0075              DCW      0x0075
000298  0008              DCB      0x00,0x08
00029a  0035              DCW      0x0035
00029c  0009              DCB      0x00,0x09
00029e  00ca              DCW      0x00ca
0002a0  1107              DCB      0x11,0x07
0002a2  000d              DCW      0x000d
0002a4  0008              DCB      0x00,0x08
0002a6  0065              DCW      0x0065
0002a8  0008              DCB      0x00,0x08
0002aa  0025              DCW      0x0025
0002ac  0009              DCB      0x00,0x09
0002ae  00aa              DCW      0x00aa
0002b0  0008              DCB      0x00,0x08
0002b2  0005              DCW      0x0005
0002b4  0008              DCB      0x00,0x08
0002b6  0085              DCW      0x0085
0002b8  0008              DCB      0x00,0x08
0002ba  0045              DCW      0x0045
0002bc  0009              DCB      0x00,0x09
0002be  00ea              DCW      0x00ea
0002c0  1007              DCB      0x10,0x07
0002c2  0008              DCW      0x0008
0002c4  0008              DCB      0x00,0x08
0002c6  005d              DCW      0x005d
0002c8  0008              DCB      0x00,0x08
0002ca  001d              DCW      0x001d
0002cc  0009              DCB      0x00,0x09
0002ce  009a              DCW      0x009a
0002d0  1407              DCB      0x14,0x07
0002d2  0053              DCW      0x0053
0002d4  0008              DCB      0x00,0x08
0002d6  007d              DCW      0x007d
0002d8  0008              DCB      0x00,0x08
0002da  003d              DCW      0x003d
0002dc  0009              DCB      0x00,0x09
0002de  00da              DCW      0x00da
0002e0  1207              DCB      0x12,0x07
0002e2  0017              DCW      0x0017
0002e4  0008              DCB      0x00,0x08
0002e6  006d              DCW      0x006d
0002e8  0008              DCB      0x00,0x08
0002ea  002d              DCW      0x002d
0002ec  0009              DCB      0x00,0x09
0002ee  00ba              DCW      0x00ba
0002f0  0008              DCB      0x00,0x08
0002f2  000d              DCW      0x000d
0002f4  0008              DCB      0x00,0x08
0002f6  008d              DCW      0x008d
0002f8  0008              DCB      0x00,0x08
0002fa  004d              DCW      0x004d
0002fc  0009              DCB      0x00,0x09
0002fe  00fa              DCW      0x00fa
000300  1007              DCB      0x10,0x07
000302  0003              DCW      0x0003
000304  0008              DCB      0x00,0x08
000306  0053              DCW      0x0053
000308  0008              DCB      0x00,0x08
00030a  0013              DCW      0x0013
00030c  1508              DCB      0x15,0x08
00030e  00c3              DCW      0x00c3
000310  1307              DCB      0x13,0x07
000312  0023              DCW      0x0023
000314  0008              DCB      0x00,0x08
000316  0073              DCW      0x0073
000318  0008              DCB      0x00,0x08
00031a  0033              DCW      0x0033
00031c  0009              DCB      0x00,0x09
00031e  00c6              DCW      0x00c6
000320  1107              DCB      0x11,0x07
000322  000b              DCW      0x000b
000324  0008              DCB      0x00,0x08
000326  0063              DCW      0x0063
000328  0008              DCB      0x00,0x08
00032a  0023              DCW      0x0023
00032c  0009              DCB      0x00,0x09
00032e  00a6              DCW      0x00a6
000330  0008              DCB      0x00,0x08
000332  0003              DCW      0x0003
000334  0008              DCB      0x00,0x08
000336  0083              DCW      0x0083
000338  0008              DCB      0x00,0x08
00033a  0043              DCW      0x0043
00033c  0009              DCB      0x00,0x09
00033e  00e6              DCW      0x00e6
000340  1007              DCB      0x10,0x07
000342  0007              DCW      0x0007
000344  0008              DCB      0x00,0x08
000346  005b              DCW      0x005b
000348  0008              DCB      0x00,0x08
00034a  001b              DCW      0x001b
00034c  0009              DCB      0x00,0x09
00034e  0096              DCW      0x0096
000350  1407              DCB      0x14,0x07
000352  0043              DCW      0x0043
000354  0008              DCB      0x00,0x08
000356  007b              DCW      0x007b
000358  0008              DCB      0x00,0x08
00035a  003b              DCW      0x003b
00035c  0009              DCB      0x00,0x09
00035e  00d6              DCW      0x00d6
000360  1207              DCB      0x12,0x07
000362  0013              DCW      0x0013
000364  0008              DCB      0x00,0x08
000366  006b              DCW      0x006b
000368  0008              DCB      0x00,0x08
00036a  002b              DCW      0x002b
00036c  0009              DCB      0x00,0x09
00036e  00b6              DCW      0x00b6
000370  0008              DCB      0x00,0x08
000372  000b              DCW      0x000b
000374  0008              DCB      0x00,0x08
000376  008b              DCW      0x008b
000378  0008              DCB      0x00,0x08
00037a  004b              DCW      0x004b
00037c  0009              DCB      0x00,0x09
00037e  00f6              DCW      0x00f6
000380  1007              DCB      0x10,0x07
000382  0005              DCW      0x0005
000384  0008              DCB      0x00,0x08
000386  0057              DCW      0x0057
000388  0008              DCB      0x00,0x08
00038a  0017              DCW      0x0017
00038c  4008              DCB      0x40,0x08
00038e  0000              DCW      0x0000
000390  1307              DCB      0x13,0x07
000392  0033              DCW      0x0033
000394  0008              DCB      0x00,0x08
000396  0077              DCW      0x0077
000398  0008              DCB      0x00,0x08
00039a  0037              DCW      0x0037
00039c  0009              DCB      0x00,0x09
00039e  00ce              DCW      0x00ce
0003a0  1107              DCB      0x11,0x07
0003a2  000f              DCW      0x000f
0003a4  0008              DCB      0x00,0x08
0003a6  0067              DCW      0x0067
0003a8  0008              DCB      0x00,0x08
0003aa  0027              DCW      0x0027
0003ac  0009              DCB      0x00,0x09
0003ae  00ae              DCW      0x00ae
0003b0  0008              DCB      0x00,0x08
0003b2  0007              DCW      0x0007
0003b4  0008              DCB      0x00,0x08
0003b6  0087              DCW      0x0087
0003b8  0008              DCB      0x00,0x08
0003ba  0047              DCW      0x0047
0003bc  0009              DCB      0x00,0x09
0003be  00ee              DCW      0x00ee
0003c0  1007              DCB      0x10,0x07
0003c2  0009              DCW      0x0009
0003c4  0008              DCB      0x00,0x08
0003c6  005f              DCW      0x005f
0003c8  0008              DCB      0x00,0x08
0003ca  001f              DCW      0x001f
0003cc  0009              DCB      0x00,0x09
0003ce  009e              DCW      0x009e
0003d0  1407              DCB      0x14,0x07
0003d2  0063              DCW      0x0063
0003d4  0008              DCB      0x00,0x08
0003d6  007f              DCW      0x007f
0003d8  0008              DCB      0x00,0x08
0003da  003f              DCW      0x003f
0003dc  0009              DCB      0x00,0x09
0003de  00de              DCW      0x00de
0003e0  1207              DCB      0x12,0x07
0003e2  001b              DCW      0x001b
0003e4  0008              DCB      0x00,0x08
0003e6  006f              DCW      0x006f
0003e8  0008              DCB      0x00,0x08
0003ea  002f              DCW      0x002f
0003ec  0009              DCB      0x00,0x09
0003ee  00be              DCW      0x00be
0003f0  0008              DCB      0x00,0x08
0003f2  000f              DCW      0x000f
0003f4  0008              DCB      0x00,0x08
0003f6  008f              DCW      0x008f
0003f8  0008              DCB      0x00,0x08
0003fa  004f              DCW      0x004f
0003fc  0009              DCB      0x00,0x09
0003fe  00fe              DCW      0x00fe
000400  6007              DCB      0x60,0x07
000402  0000              DCW      0x0000
000404  0008              DCB      0x00,0x08
000406  0050              DCW      0x0050
000408  0008              DCB      0x00,0x08
00040a  0010              DCW      0x0010
00040c  1408              DCB      0x14,0x08
00040e  0073              DCW      0x0073
000410  1207              DCB      0x12,0x07
000412  001f              DCW      0x001f
000414  0008              DCB      0x00,0x08
000416  0070              DCW      0x0070
000418  0008              DCB      0x00,0x08
00041a  0030              DCW      0x0030
00041c  0009              DCB      0x00,0x09
00041e  00c1              DCW      0x00c1
000420  1007              DCB      0x10,0x07
000422  000a              DCW      0x000a
000424  0008              DCB      0x00,0x08
000426  0060              DCW      0x0060
000428  0008              DCB      0x00,0x08
00042a  0020              DCW      0x0020
00042c  0009              DCB      0x00,0x09
00042e  00a1              DCW      0x00a1
000430  0008              DCB      0x00,0x08
000432  0000              DCW      0x0000
000434  0008              DCB      0x00,0x08
000436  0080              DCW      0x0080
000438  0008              DCB      0x00,0x08
00043a  0040              DCW      0x0040
00043c  0009              DCB      0x00,0x09
00043e  00e1              DCW      0x00e1
000440  1007              DCB      0x10,0x07
000442  0006              DCW      0x0006
000444  0008              DCB      0x00,0x08
000446  0058              DCW      0x0058
000448  0008              DCB      0x00,0x08
00044a  0018              DCW      0x0018
00044c  0009              DCB      0x00,0x09
00044e  0091              DCW      0x0091
000450  1307              DCB      0x13,0x07
000452  003b              DCW      0x003b
000454  0008              DCB      0x00,0x08
000456  0078              DCW      0x0078
000458  0008              DCB      0x00,0x08
00045a  0038              DCW      0x0038
00045c  0009              DCB      0x00,0x09
00045e  00d1              DCW      0x00d1
000460  1107              DCB      0x11,0x07
000462  0011              DCW      0x0011
000464  0008              DCB      0x00,0x08
000466  0068              DCW      0x0068
000468  0008              DCB      0x00,0x08
00046a  0028              DCW      0x0028
00046c  0009              DCB      0x00,0x09
00046e  00b1              DCW      0x00b1
000470  0008              DCB      0x00,0x08
000472  0008              DCW      0x0008
000474  0008              DCB      0x00,0x08
000476  0088              DCW      0x0088
000478  0008              DCB      0x00,0x08
00047a  0048              DCW      0x0048
00047c  0009              DCB      0x00,0x09
00047e  00f1              DCW      0x00f1
000480  1007              DCB      0x10,0x07
000482  0004              DCW      0x0004
000484  0008              DCB      0x00,0x08
000486  0054              DCW      0x0054
000488  0008              DCB      0x00,0x08
00048a  0014              DCW      0x0014
00048c  1508              DCB      0x15,0x08
00048e  00e3              DCW      0x00e3
000490  1307              DCB      0x13,0x07
000492  002b              DCW      0x002b
000494  0008              DCB      0x00,0x08
000496  0074              DCW      0x0074
000498  0008              DCB      0x00,0x08
00049a  0034              DCW      0x0034
00049c  0009              DCB      0x00,0x09
00049e  00c9              DCW      0x00c9
0004a0  1107              DCB      0x11,0x07
0004a2  000d              DCW      0x000d
0004a4  0008              DCB      0x00,0x08
0004a6  0064              DCW      0x0064
0004a8  0008              DCB      0x00,0x08
0004aa  0024              DCW      0x0024
0004ac  0009              DCB      0x00,0x09
0004ae  00a9              DCW      0x00a9
0004b0  0008              DCB      0x00,0x08
0004b2  0004              DCW      0x0004
0004b4  0008              DCB      0x00,0x08
0004b6  0084              DCW      0x0084
0004b8  0008              DCB      0x00,0x08
0004ba  0044              DCW      0x0044
0004bc  0009              DCB      0x00,0x09
0004be  00e9              DCW      0x00e9
0004c0  1007              DCB      0x10,0x07
0004c2  0008              DCW      0x0008
0004c4  0008              DCB      0x00,0x08
0004c6  005c              DCW      0x005c
0004c8  0008              DCB      0x00,0x08
0004ca  001c              DCW      0x001c
0004cc  0009              DCB      0x00,0x09
0004ce  0099              DCW      0x0099
0004d0  1407              DCB      0x14,0x07
0004d2  0053              DCW      0x0053
0004d4  0008              DCB      0x00,0x08
0004d6  007c              DCW      0x007c
0004d8  0008              DCB      0x00,0x08
0004da  003c              DCW      0x003c
0004dc  0009              DCB      0x00,0x09
0004de  00d9              DCW      0x00d9
0004e0  1207              DCB      0x12,0x07
0004e2  0017              DCW      0x0017
0004e4  0008              DCB      0x00,0x08
0004e6  006c              DCW      0x006c
0004e8  0008              DCB      0x00,0x08
0004ea  002c              DCW      0x002c
0004ec  0009              DCB      0x00,0x09
0004ee  00b9              DCW      0x00b9
0004f0  0008              DCB      0x00,0x08
0004f2  000c              DCW      0x000c
0004f4  0008              DCB      0x00,0x08
0004f6  008c              DCW      0x008c
0004f8  0008              DCB      0x00,0x08
0004fa  004c              DCW      0x004c
0004fc  0009              DCB      0x00,0x09
0004fe  00f9              DCW      0x00f9
000500  1007              DCB      0x10,0x07
000502  0003              DCW      0x0003
000504  0008              DCB      0x00,0x08
000506  0052              DCW      0x0052
000508  0008              DCB      0x00,0x08
00050a  0012              DCW      0x0012
00050c  1508              DCB      0x15,0x08
00050e  00a3              DCW      0x00a3
000510  1307              DCB      0x13,0x07
000512  0023              DCW      0x0023
000514  0008              DCB      0x00,0x08
000516  0072              DCW      0x0072
000518  0008              DCB      0x00,0x08
00051a  0032              DCW      0x0032
00051c  0009              DCB      0x00,0x09
00051e  00c5              DCW      0x00c5
000520  1107              DCB      0x11,0x07
000522  000b              DCW      0x000b
000524  0008              DCB      0x00,0x08
000526  0062              DCW      0x0062
000528  0008              DCB      0x00,0x08
00052a  0022              DCW      0x0022
00052c  0009              DCB      0x00,0x09
00052e  00a5              DCW      0x00a5
000530  0008              DCB      0x00,0x08
000532  0002              DCW      0x0002
000534  0008              DCB      0x00,0x08
000536  0082              DCW      0x0082
000538  0008              DCB      0x00,0x08
00053a  0042              DCW      0x0042
00053c  0009              DCB      0x00,0x09
00053e  00e5              DCW      0x00e5
000540  1007              DCB      0x10,0x07
000542  0007              DCW      0x0007
000544  0008              DCB      0x00,0x08
000546  005a              DCW      0x005a
000548  0008              DCB      0x00,0x08
00054a  001a              DCW      0x001a
00054c  0009              DCB      0x00,0x09
00054e  0095              DCW      0x0095
000550  1407              DCB      0x14,0x07
000552  0043              DCW      0x0043
000554  0008              DCB      0x00,0x08
000556  007a              DCW      0x007a
000558  0008              DCB      0x00,0x08
00055a  003a              DCW      0x003a
00055c  0009              DCB      0x00,0x09
00055e  00d5              DCW      0x00d5
000560  1207              DCB      0x12,0x07
000562  0013              DCW      0x0013
000564  0008              DCB      0x00,0x08
000566  006a              DCW      0x006a
000568  0008              DCB      0x00,0x08
00056a  002a              DCW      0x002a
00056c  0009              DCB      0x00,0x09
00056e  00b5              DCW      0x00b5
000570  0008              DCB      0x00,0x08
000572  000a              DCW      0x000a
000574  0008              DCB      0x00,0x08
000576  008a              DCW      0x008a
000578  0008              DCB      0x00,0x08
00057a  004a              DCW      0x004a
00057c  0009              DCB      0x00,0x09
00057e  00f5              DCW      0x00f5
000580  1007              DCB      0x10,0x07
000582  0005              DCW      0x0005
000584  0008              DCB      0x00,0x08
000586  0056              DCW      0x0056
000588  0008              DCB      0x00,0x08
00058a  0016              DCW      0x0016
00058c  4008              DCB      0x40,0x08
00058e  0000              DCW      0x0000
000590  1307              DCB      0x13,0x07
000592  0033              DCW      0x0033
000594  0008              DCB      0x00,0x08
000596  0076              DCW      0x0076
000598  0008              DCB      0x00,0x08
00059a  0036              DCW      0x0036
00059c  0009              DCB      0x00,0x09
00059e  00cd              DCW      0x00cd
0005a0  1107              DCB      0x11,0x07
0005a2  000f              DCW      0x000f
0005a4  0008              DCB      0x00,0x08
0005a6  0066              DCW      0x0066
0005a8  0008              DCB      0x00,0x08
0005aa  0026              DCW      0x0026
0005ac  0009              DCB      0x00,0x09
0005ae  00ad              DCW      0x00ad
0005b0  0008              DCB      0x00,0x08
0005b2  0006              DCW      0x0006
0005b4  0008              DCB      0x00,0x08
0005b6  0086              DCW      0x0086
0005b8  0008              DCB      0x00,0x08
0005ba  0046              DCW      0x0046
0005bc  0009              DCB      0x00,0x09
0005be  00ed              DCW      0x00ed
0005c0  1007              DCB      0x10,0x07
0005c2  0009              DCW      0x0009
0005c4  0008              DCB      0x00,0x08
0005c6  005e              DCW      0x005e
0005c8  0008              DCB      0x00,0x08
0005ca  001e              DCW      0x001e
0005cc  0009              DCB      0x00,0x09
0005ce  009d              DCW      0x009d
0005d0  1407              DCB      0x14,0x07
0005d2  0063              DCW      0x0063
0005d4  0008              DCB      0x00,0x08
0005d6  007e              DCW      0x007e
0005d8  0008              DCB      0x00,0x08
0005da  003e              DCW      0x003e
0005dc  0009              DCB      0x00,0x09
0005de  00dd              DCW      0x00dd
0005e0  1207              DCB      0x12,0x07
0005e2  001b              DCW      0x001b
0005e4  0008              DCB      0x00,0x08
0005e6  006e              DCW      0x006e
0005e8  0008              DCB      0x00,0x08
0005ea  002e              DCW      0x002e
0005ec  0009              DCB      0x00,0x09
0005ee  00bd              DCW      0x00bd
0005f0  0008              DCB      0x00,0x08
0005f2  000e              DCW      0x000e
0005f4  0008              DCB      0x00,0x08
0005f6  008e              DCW      0x008e
0005f8  0008              DCB      0x00,0x08
0005fa  004e              DCW      0x004e
0005fc  0009              DCB      0x00,0x09
0005fe  00fd              DCW      0x00fd
000600  6007              DCB      0x60,0x07
000602  0000              DCW      0x0000
000604  0008              DCB      0x00,0x08
000606  0051              DCW      0x0051
000608  0008              DCB      0x00,0x08
00060a  0011              DCW      0x0011
00060c  1508              DCB      0x15,0x08
00060e  0083              DCW      0x0083
000610  1207              DCB      0x12,0x07
000612  001f              DCW      0x001f
000614  0008              DCB      0x00,0x08
000616  0071              DCW      0x0071
000618  0008              DCB      0x00,0x08
00061a  0031              DCW      0x0031
00061c  0009              DCB      0x00,0x09
00061e  00c3              DCW      0x00c3
000620  1007              DCB      0x10,0x07
000622  000a              DCW      0x000a
000624  0008              DCB      0x00,0x08
000626  0061              DCW      0x0061
000628  0008              DCB      0x00,0x08
00062a  0021              DCW      0x0021
00062c  0009              DCB      0x00,0x09
00062e  00a3              DCW      0x00a3
000630  0008              DCB      0x00,0x08
000632  0001              DCW      0x0001
000634  0008              DCB      0x00,0x08
000636  0081              DCW      0x0081
000638  0008              DCB      0x00,0x08
00063a  0041              DCW      0x0041
00063c  0009              DCB      0x00,0x09
00063e  00e3              DCW      0x00e3
000640  1007              DCB      0x10,0x07
000642  0006              DCW      0x0006
000644  0008              DCB      0x00,0x08
000646  0059              DCW      0x0059
000648  0008              DCB      0x00,0x08
00064a  0019              DCW      0x0019
00064c  0009              DCB      0x00,0x09
00064e  0093              DCW      0x0093
000650  1307              DCB      0x13,0x07
000652  003b              DCW      0x003b
000654  0008              DCB      0x00,0x08
000656  0079              DCW      0x0079
000658  0008              DCB      0x00,0x08
00065a  0039              DCW      0x0039
00065c  0009              DCB      0x00,0x09
00065e  00d3              DCW      0x00d3
000660  1107              DCB      0x11,0x07
000662  0011              DCW      0x0011
000664  0008              DCB      0x00,0x08
000666  0069              DCW      0x0069
000668  0008              DCB      0x00,0x08
00066a  0029              DCW      0x0029
00066c  0009              DCB      0x00,0x09
00066e  00b3              DCW      0x00b3
000670  0008              DCB      0x00,0x08
000672  0009              DCW      0x0009
000674  0008              DCB      0x00,0x08
000676  0089              DCW      0x0089
000678  0008              DCB      0x00,0x08
00067a  0049              DCW      0x0049
00067c  0009              DCB      0x00,0x09
00067e  00f3              DCW      0x00f3
000680  1007              DCB      0x10,0x07
000682  0004              DCW      0x0004
000684  0008              DCB      0x00,0x08
000686  0055              DCW      0x0055
000688  0008              DCB      0x00,0x08
00068a  0015              DCW      0x0015
00068c  1008              DCB      0x10,0x08
00068e  0102              DCW      0x0102
000690  1307              DCB      0x13,0x07
000692  002b              DCW      0x002b
000694  0008              DCB      0x00,0x08
000696  0075              DCW      0x0075
000698  0008              DCB      0x00,0x08
00069a  0035              DCW      0x0035
00069c  0009              DCB      0x00,0x09
00069e  00cb              DCW      0x00cb
0006a0  1107              DCB      0x11,0x07
0006a2  000d              DCW      0x000d
0006a4  0008              DCB      0x00,0x08
0006a6  0065              DCW      0x0065
0006a8  0008              DCB      0x00,0x08
0006aa  0025              DCW      0x0025
0006ac  0009              DCB      0x00,0x09
0006ae  00ab              DCW      0x00ab
0006b0  0008              DCB      0x00,0x08
0006b2  0005              DCW      0x0005
0006b4  0008              DCB      0x00,0x08
0006b6  0085              DCW      0x0085
0006b8  0008              DCB      0x00,0x08
0006ba  0045              DCW      0x0045
0006bc  0009              DCB      0x00,0x09
0006be  00eb              DCW      0x00eb
0006c0  1007              DCB      0x10,0x07
0006c2  0008              DCW      0x0008
0006c4  0008              DCB      0x00,0x08
0006c6  005d              DCW      0x005d
0006c8  0008              DCB      0x00,0x08
0006ca  001d              DCW      0x001d
0006cc  0009              DCB      0x00,0x09
0006ce  009b              DCW      0x009b
0006d0  1407              DCB      0x14,0x07
0006d2  0053              DCW      0x0053
0006d4  0008              DCB      0x00,0x08
0006d6  007d              DCW      0x007d
0006d8  0008              DCB      0x00,0x08
0006da  003d              DCW      0x003d
0006dc  0009              DCB      0x00,0x09
0006de  00db              DCW      0x00db
0006e0  1207              DCB      0x12,0x07
0006e2  0017              DCW      0x0017
0006e4  0008              DCB      0x00,0x08
0006e6  006d              DCW      0x006d
0006e8  0008              DCB      0x00,0x08
0006ea  002d              DCW      0x002d
0006ec  0009              DCB      0x00,0x09
0006ee  00bb              DCW      0x00bb
0006f0  0008              DCB      0x00,0x08
0006f2  000d              DCW      0x000d
0006f4  0008              DCB      0x00,0x08
0006f6  008d              DCW      0x008d
0006f8  0008              DCB      0x00,0x08
0006fa  004d              DCW      0x004d
0006fc  0009              DCB      0x00,0x09
0006fe  00fb              DCW      0x00fb
000700  1007              DCB      0x10,0x07
000702  0003              DCW      0x0003
000704  0008              DCB      0x00,0x08
000706  0053              DCW      0x0053
000708  0008              DCB      0x00,0x08
00070a  0013              DCW      0x0013
00070c  1508              DCB      0x15,0x08
00070e  00c3              DCW      0x00c3
000710  1307              DCB      0x13,0x07
000712  0023              DCW      0x0023
000714  0008              DCB      0x00,0x08
000716  0073              DCW      0x0073
000718  0008              DCB      0x00,0x08
00071a  0033              DCW      0x0033
00071c  0009              DCB      0x00,0x09
00071e  00c7              DCW      0x00c7
000720  1107              DCB      0x11,0x07
000722  000b              DCW      0x000b
000724  0008              DCB      0x00,0x08
000726  0063              DCW      0x0063
000728  0008              DCB      0x00,0x08
00072a  0023              DCW      0x0023
00072c  0009              DCB      0x00,0x09
00072e  00a7              DCW      0x00a7
000730  0008              DCB      0x00,0x08
000732  0003              DCW      0x0003
000734  0008              DCB      0x00,0x08
000736  0083              DCW      0x0083
000738  0008              DCB      0x00,0x08
00073a  0043              DCW      0x0043
00073c  0009              DCB      0x00,0x09
00073e  00e7              DCW      0x00e7
000740  1007              DCB      0x10,0x07
000742  0007              DCW      0x0007
000744  0008              DCB      0x00,0x08
000746  005b              DCW      0x005b
000748  0008              DCB      0x00,0x08
00074a  001b              DCW      0x001b
00074c  0009              DCB      0x00,0x09
00074e  0097              DCW      0x0097
000750  1407              DCB      0x14,0x07
000752  0043              DCW      0x0043
000754  0008              DCB      0x00,0x08
000756  007b              DCW      0x007b
000758  0008              DCB      0x00,0x08
00075a  003b              DCW      0x003b
00075c  0009              DCB      0x00,0x09
00075e  00d7              DCW      0x00d7
000760  1207              DCB      0x12,0x07
000762  0013              DCW      0x0013
000764  0008              DCB      0x00,0x08
000766  006b              DCW      0x006b
000768  0008              DCB      0x00,0x08
00076a  002b              DCW      0x002b
00076c  0009              DCB      0x00,0x09
00076e  00b7              DCW      0x00b7
000770  0008              DCB      0x00,0x08
000772  000b              DCW      0x000b
000774  0008              DCB      0x00,0x08
000776  008b              DCW      0x008b
000778  0008              DCB      0x00,0x08
00077a  004b              DCW      0x004b
00077c  0009              DCB      0x00,0x09
00077e  00f7              DCW      0x00f7
000780  1007              DCB      0x10,0x07
000782  0005              DCW      0x0005
000784  0008              DCB      0x00,0x08
000786  0057              DCW      0x0057
000788  0008              DCB      0x00,0x08
00078a  0017              DCW      0x0017
00078c  4008              DCB      0x40,0x08
00078e  0000              DCW      0x0000
000790  1307              DCB      0x13,0x07
000792  0033              DCW      0x0033
000794  0008              DCB      0x00,0x08
000796  0077              DCW      0x0077
000798  0008              DCB      0x00,0x08
00079a  0037              DCW      0x0037
00079c  0009              DCB      0x00,0x09
00079e  00cf              DCW      0x00cf
0007a0  1107              DCB      0x11,0x07
0007a2  000f              DCW      0x000f
0007a4  0008              DCB      0x00,0x08
0007a6  0067              DCW      0x0067
0007a8  0008              DCB      0x00,0x08
0007aa  0027              DCW      0x0027
0007ac  0009              DCB      0x00,0x09
0007ae  00af              DCW      0x00af
0007b0  0008              DCB      0x00,0x08
0007b2  0007              DCW      0x0007
0007b4  0008              DCB      0x00,0x08
0007b6  0087              DCW      0x0087
0007b8  0008              DCB      0x00,0x08
0007ba  0047              DCW      0x0047
0007bc  0009              DCB      0x00,0x09
0007be  00ef              DCW      0x00ef
0007c0  1007              DCB      0x10,0x07
0007c2  0009              DCW      0x0009
0007c4  0008              DCB      0x00,0x08
0007c6  005f              DCW      0x005f
0007c8  0008              DCB      0x00,0x08
0007ca  001f              DCW      0x001f
0007cc  0009              DCB      0x00,0x09
0007ce  009f              DCW      0x009f
0007d0  1407              DCB      0x14,0x07
0007d2  0063              DCW      0x0063
0007d4  0008              DCB      0x00,0x08
0007d6  007f              DCW      0x007f
0007d8  0008              DCB      0x00,0x08
0007da  003f              DCW      0x003f
0007dc  0009              DCB      0x00,0x09
0007de  00df              DCW      0x00df
0007e0  1207              DCB      0x12,0x07
0007e2  001b              DCW      0x001b
0007e4  0008              DCB      0x00,0x08
0007e6  006f              DCW      0x006f
0007e8  0008              DCB      0x00,0x08
0007ea  002f              DCW      0x002f
0007ec  0009              DCB      0x00,0x09
0007ee  00bf              DCW      0x00bf
0007f0  0008              DCB      0x00,0x08
0007f2  000f              DCW      0x000f
0007f4  0008              DCB      0x00,0x08
0007f6  008f              DCW      0x008f
0007f8  0008              DCB      0x00,0x08
0007fa  004f              DCW      0x004f
0007fc  0009              DCB      0x00,0x09
0007fe  00ff              DCW      0x00ff
                  distfix
000800  1005              DCB      0x10,0x05
000802  0001              DCW      0x0001
000804  1705              DCB      0x17,0x05
000806  0101              DCW      0x0101
000808  1305              DCB      0x13,0x05
00080a  0011              DCW      0x0011
00080c  1b05              DCB      0x1b,0x05
00080e  1001              DCW      0x1001
000810  1105              DCB      0x11,0x05
000812  0005              DCW      0x0005
000814  1905              DCB      0x19,0x05
000816  0401              DCW      0x0401
000818  1505              DCB      0x15,0x05
00081a  0041              DCW      0x0041
00081c  1d05              DCB      0x1d,0x05
00081e  4001              DCW      0x4001
000820  1005              DCB      0x10,0x05
000822  0003              DCW      0x0003
000824  1805              DCB      0x18,0x05
000826  0201              DCW      0x0201
000828  1405              DCB      0x14,0x05
00082a  0021              DCW      0x0021
00082c  1c05              DCB      0x1c,0x05
00082e  2001              DCW      0x2001
000830  1205              DCB      0x12,0x05
000832  0009              DCW      0x0009
000834  1a05              DCB      0x1a,0x05
000836  0801              DCW      0x0801
000838  1605              DCB      0x16,0x05
00083a  0081              DCW      0x0081
00083c  4005              DCB      0x40,0x05
00083e  0000              DCW      0x0000
000840  1005              DCB      0x10,0x05
000842  0002              DCW      0x0002
000844  1705              DCB      0x17,0x05
000846  0181              DCW      0x0181
000848  1305              DCB      0x13,0x05
00084a  0019              DCW      0x0019
00084c  1b05              DCB      0x1b,0x05
00084e  1801              DCW      0x1801
000850  1105              DCB      0x11,0x05
000852  0007              DCW      0x0007
000854  1905              DCB      0x19,0x05
000856  0601              DCW      0x0601
000858  1505              DCB      0x15,0x05
00085a  0061              DCW      0x0061
00085c  1d05              DCB      0x1d,0x05
00085e  6001              DCW      0x6001
000860  1005              DCB      0x10,0x05
000862  0004              DCW      0x0004
000864  1805              DCB      0x18,0x05
000866  0301              DCW      0x0301
000868  1405              DCB      0x14,0x05
00086a  0031              DCW      0x0031
00086c  1c05              DCB      0x1c,0x05
00086e  3001              DCW      0x3001
000870  1205              DCB      0x12,0x05
000872  000d              DCW      0x000d
000874  1a05              DCB      0x1a,0x05
000876  0c01              DCW      0x0c01
000878  1605              DCB      0x16,0x05
00087a  00c1              DCW      0x00c1
00087c  4005              DCB      0x40,0x05
00087e  0000              DCW      0x0000
                  order
000880  00100011          DCW      0x0010,0x0011
000884  00120000          DCW      0x0012,0x0000
000888  00080007          DCW      0x0008,0x0007
00088c  00090006          DCW      0x0009,0x0006
000890  000a0005          DCW      0x000a,0x0005
000894  000b0004          DCW      0x000b,0x0004
000898  000c0003          DCW      0x000c,0x0003
00089c  000d0002          DCW      0x000d,0x0002
0008a0  000e0001          DCW      0x000e,0x0001
0008a4  000f              DCW      0x000f

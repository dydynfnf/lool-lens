; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\lcdnull.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\lcdnull.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\lcdnull.crf GUI\LCDDriver\LCDNull.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  LCD_L0_SetPixelIndex PROC
;;;31     
;;;32     void LCD_L0_SetPixelIndex(int x, int y, int PixelIndex) 
000000  b570              PUSH     {r4-r6,lr}
;;;33     {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
000006  4616              MOV      r6,r2
;;;34     	TFT_DrawPoint(x,y,PixelIndex);
000008  b2b2              UXTH     r2,r6
00000a  b2a9              UXTH     r1,r5
00000c  b2a0              UXTH     r0,r4
00000e  f7fffffe          BL       TFT_DrawPoint
;;;35     }
000012  bd70              POP      {r4-r6,pc}
;;;36     
                          ENDP

                  LCD_L0_GetPixelIndex PROC
;;;40     */
;;;41     unsigned int LCD_L0_GetPixelIndex(int x, int y) 
000014  b570              PUSH     {r4-r6,lr}
;;;42     {
000016  4604              MOV      r4,r0
000018  460d              MOV      r5,r1
;;;43     	return (TFT_ReadPoint(x,y));
00001a  b2a9              UXTH     r1,r5
00001c  b2a0              UXTH     r0,r4
00001e  f7fffffe          BL       TFT_ReadPoint
;;;44     }
000022  bd70              POP      {r4-r6,pc}
;;;45     
                          ENDP

                  LCD_L0_XorPixel PROC
;;;49     */
;;;50     void LCD_L0_XorPixel(int x, int y) 
000024  b570              PUSH     {r4-r6,lr}
;;;51     {
000026  4604              MOV      r4,r0
000028  460d              MOV      r5,r1
;;;52     	LCD_PIXELINDEX Index = TFT_ReadPoint(x,y);
00002a  b2a9              UXTH     r1,r5
00002c  b2a0              UXTH     r0,r4
00002e  f7fffffe          BL       TFT_ReadPoint
000032  4606              MOV      r6,r0
;;;53     	TFT_DrawPoint(x,y,LCD_NUM_COLORS-1-Index);
000034  f64f70ff          MOV      r0,#0xffff
000038  eba00206          SUB      r2,r0,r6
00003c  b2a9              UXTH     r1,r5
00003e  b2a0              UXTH     r0,r4
000040  f7fffffe          BL       TFT_DrawPoint
;;;54     }
000044  bd70              POP      {r4-r6,pc}
;;;55     
                          ENDP

                  LCD_L0_DrawHLine PROC
;;;60     
;;;61     void LCD_L0_DrawHLine(int x0, int y,  int x1) 
000046  b570              PUSH     {r4-r6,lr}
;;;62     {
000048  4604              MOV      r4,r0
00004a  460d              MOV      r5,r1
00004c  4616              MOV      r6,r2
;;;63     	TFT_HLine(x0,y,x1,LCD_COLORINDEX);
00004e  48f8              LDR      r0,|L1.1072|
000050  8843              LDRH     r3,[r0,#2]  ; GUI_Context
000052  b2b2              UXTH     r2,r6
000054  b2a9              UXTH     r1,r5
000056  b2a0              UXTH     r0,r4
000058  f7fffffe          BL       TFT_HLine
;;;64     }
00005c  bd70              POP      {r4-r6,pc}
;;;65     
                          ENDP

                  LCD_L0_DrawVLine PROC
;;;69     */
;;;70     void LCD_L0_DrawVLine(int x, int y0,  int y1) 
00005e  b570              PUSH     {r4-r6,lr}
;;;71     {
000060  4604              MOV      r4,r0
000062  460d              MOV      r5,r1
000064  4616              MOV      r6,r2
;;;72     	TFT_VLine(x,y0,y1,LCD_COLORINDEX);
000066  48f2              LDR      r0,|L1.1072|
000068  8843              LDRH     r3,[r0,#2]  ; GUI_Context
00006a  b2b2              UXTH     r2,r6
00006c  b2a9              UXTH     r1,r5
00006e  b2a0              UXTH     r0,r4
000070  f7fffffe          BL       TFT_VLine
;;;73     }
000074  bd70              POP      {r4-r6,pc}
;;;74     
                          ENDP

                  LCD_L0_FillRect PROC
;;;78     */
;;;79     void LCD_L0_FillRect(int x0, int y0, int x1, int y1) 
000076  b5f8              PUSH     {r3-r7,lr}
;;;80     {
000078  4604              MOV      r4,r0
00007a  460d              MOV      r5,r1
00007c  4616              MOV      r6,r2
00007e  461f              MOV      r7,r3
;;;81     	TFT_Fill(x0,y0,x1,y1,LCD_COLORINDEX);
000080  48eb              LDR      r0,|L1.1072|
000082  8840              LDRH     r0,[r0,#2]  ; GUI_Context
000084  b2bb              UXTH     r3,r7
000086  b2b2              UXTH     r2,r6
000088  b2a9              UXTH     r1,r5
00008a  9000              STR      r0,[sp,#0]
00008c  b2a0              UXTH     r0,r4
00008e  f7fffffe          BL       TFT_Fill
;;;82     }
000092  bdf8              POP      {r3-r7,pc}
;;;83     
                          ENDP

                  DrawBitLine1BPP PROC
;;;88     
;;;89     void DrawBitLine1BPP(int x, int y, U8 const*p, int Diff, int xsize, const LCD_PIXELINDEX*pTrans)
000094  e92d4ff8          PUSH     {r3-r11,lr}
;;;90     {
000098  4604              MOV      r4,r0
00009a  460f              MOV      r7,r1
00009c  4690              MOV      r8,r2
00009e  4699              MOV      r9,r3
0000a0  e9dd5a0a          LDRD     r5,r10,[sp,#0x28]
;;;91       LCD_PIXELINDEX pixels;
;;;92       LCD_PIXELINDEX Index0 = *(pTrans+0);
0000a4  f8ba0000          LDRH     r0,[r10,#0]
0000a8  9000              STR      r0,[sp,#0]
;;;93       LCD_PIXELINDEX Index1 = *(pTrans+1);
0000aa  f8bab002          LDRH     r11,[r10,#2]
;;;94     /*
;;;95     // Jump to right entry point
;;;96     */
;;;97       pixels = *p;
0000ae  f8986000          LDRB     r6,[r8,#0]
;;;98       switch (GUI_Context.DrawMode & (LCD_DRAWMODE_TRANS|LCD_DRAWMODE_XOR)) {
0000b2  48df              LDR      r0,|L1.1072|
0000b4  7c00              LDRB     r0,[r0,#0x10]  ; GUI_Context
0000b6  f0100003          ANDS     r0,r0,#3
0000ba  d004              BEQ      |L1.198|
0000bc  2801              CMP      r0,#1
0000be  d028              BEQ      |L1.274|
0000c0  2802              CMP      r0,#2
0000c2  d139              BNE      |L1.312|
0000c4  e012              B        |L1.236|
                  |L1.198|
;;;99       case 0:
;;;100        #if defined (SETNEXTPIXEL)   /* Optimization ! */
;;;101          x+=Diff;
;;;102        #endif
;;;103        switch (Diff&7) {
0000c6  f0090007          AND      r0,r9,#7
0000ca  2808              CMP      r0,#8
0000cc  d20d              BCS      |L1.234|
0000ce  e8dff000          TBB      [pc,r0]
0000d2  0405              DCB      0x04,0x05
0000d4  06070809          DCB      0x06,0x07,0x08,0x09
0000d8  0a0b              DCB      0x0a,0x0b
;;;104        case 0:   
;;;105          goto WriteBit0;
0000da  e0ad              B        |L1.568|
;;;106        case 1:   
;;;107          goto WriteBit1;
0000dc  e0bd              B        |L1.602|
;;;108        case 2:
;;;109          goto WriteBit2;
0000de  e0ce              B        |L1.638|
;;;110        case 3:
;;;111          goto WriteBit3;
0000e0  e0df              B        |L1.674|
;;;112        case 4:
;;;113          goto WriteBit4;
0000e2  e0f0              B        |L1.710|
;;;114        case 5:   
;;;115          goto WriteBit5;
0000e4  e101              B        |L1.746|
;;;116        case 6:   
;;;117          goto WriteBit6;
0000e6  e112              B        |L1.782|
;;;118        case 7:   
;;;119          goto WriteBit7;
0000e8  e123              B        |L1.818|
                  |L1.234|
;;;120        }
;;;121        break;
0000ea  e025              B        |L1.312|
                  |L1.236|
;;;122      case LCD_DRAWMODE_TRANS:
;;;123        switch (Diff&7) {
0000ec  f0090007          AND      r0,r9,#7
0000f0  2808              CMP      r0,#8
0000f2  d20d              BCS      |L1.272|
0000f4  e8dff000          TBB      [pc,r0]
0000f8  04050607          DCB      0x04,0x05,0x06,0x07
0000fc  08090a0b          DCB      0x08,0x09,0x0a,0x0b
;;;124        case 0:
;;;125          goto WriteTBit0;
000100  e01c              B        |L1.316|
;;;126        case 1:
;;;127          goto WriteTBit1;
000102  e02a              B        |L1.346|
;;;128        case 2:
;;;129          goto WriteTBit2;
000104  e038              B        |L1.376|
;;;130        case 3:
;;;131          goto WriteTBit3;
000106  e046              B        |L1.406|
;;;132        case 4:
;;;133          goto WriteTBit4;
000108  e054              B        |L1.436|
;;;134        case 5:   
;;;135          goto WriteTBit5;
00010a  e062              B        |L1.466|
;;;136        case 6:   
;;;137          goto WriteTBit6;
00010c  e070              B        |L1.496|
;;;138        case 7:   
;;;139          goto WriteTBit7;
00010e  e07e              B        |L1.526|
                  |L1.272|
;;;140        }
;;;141        break;
000110  e012              B        |L1.312|
                  |L1.274|
;;;142      case LCD_DRAWMODE_XOR:
;;;143        switch (Diff&7) {
000112  f0090007          AND      r0,r9,#7
000116  2808              CMP      r0,#8
000118  d20d              BCS      |L1.310|
00011a  e8dff000          TBB      [pc,r0]
00011e  0405              DCB      0x04,0x05
000120  06070809          DCB      0x06,0x07,0x08,0x09
000124  0a0b              DCB      0x0a,0x0b
;;;144        case 0:   
;;;145          goto WriteXBit0;
000126  e11c              B        |L1.866|
;;;146        case 1:   
;;;147          goto WriteXBit1;
000128  e128              B        |L1.892|
;;;148        case 2:
;;;149          goto WriteXBit2;
00012a  e134              B        |L1.918|
;;;150        case 3:
;;;151          goto WriteXBit3;
00012c  e140              B        |L1.944|
;;;152        case 4:
;;;153          goto WriteXBit4;
00012e  e14c              B        |L1.970|
;;;154        case 5:   
;;;155          goto WriteXBit5;
000130  e158              B        |L1.996|
;;;156        case 6:   
;;;157          goto WriteXBit6;
000132  e164              B        |L1.1022|
;;;158        case 7:   
;;;159          goto WriteXBit7;
000134  e170              B        |L1.1048|
                  |L1.310|
000136  bf00              NOP                            ;98
                  |L1.312|
000138  bf00              NOP                            ;121
;;;160        }
;;;161      }
;;;162    /*
;;;163            Write with transparency
;;;164    */
;;;165      WriteTBit0:
00013a  bf00              NOP      
                  |L1.316|
;;;166        if (pixels&(1<<7)) TFT_DrawPoint(x+0, y, Index1);
00013c  f0160f80          TST      r6,#0x80
000140  d004              BEQ      |L1.332|
000142  465a              MOV      r2,r11
000144  b2b9              UXTH     r1,r7
000146  b2a0              UXTH     r0,r4
000148  f7fffffe          BL       TFT_DrawPoint
                  |L1.332|
;;;167        if (!--xsize)
00014c  f1a50001          SUB      r0,r5,#1
000150  0005              MOVS     r5,r0
000152  d101              BNE      |L1.344|
                  |L1.340|
;;;168          return;
;;;169      WriteTBit1:
;;;170        if (pixels&(1<<6)) TFT_DrawPoint(x+1, y, Index1);
;;;171        if (!--xsize)
;;;172          return;
;;;173      WriteTBit2:
;;;174        if (pixels&(1<<5)) TFT_DrawPoint(x+2, y, Index1);
;;;175        if (!--xsize)
;;;176          return;
;;;177      WriteTBit3:
;;;178        if (pixels&(1<<4)) TFT_DrawPoint(x+3, y, Index1);
;;;179        if (!--xsize)
;;;180          return;
;;;181      WriteTBit4:
;;;182        if (pixels&(1<<3)) TFT_DrawPoint(x+4, y, Index1);
;;;183        if (!--xsize)
;;;184          return;
;;;185      WriteTBit5:
;;;186        if (pixels&(1<<2)) TFT_DrawPoint(x+5, y, Index1);
;;;187        if (!--xsize)
;;;188          return;
;;;189      WriteTBit6:
;;;190        if (pixels&(1<<1)) TFT_DrawPoint(x+6, y, Index1);
;;;191        if (!--xsize)
;;;192          return;
;;;193      WriteTBit7:
;;;194        if (pixels&(1<<0)) TFT_DrawPoint(x+7, y, Index1);
;;;195        if (!--xsize)
;;;196          return;
;;;197        x+=8;
;;;198        pixels = *(++p);
;;;199        goto WriteTBit0;
;;;200    
;;;201    /*
;;;202            Write without transparency
;;;203    */
;;;204    
;;;205      WriteBit0:
;;;206        TFT_DrawPoint(x+0, y, (pixels&(1<<7)) ? Index1 : Index0);
;;;207        if (!--xsize)
;;;208          return;
;;;209      WriteBit1:
;;;210        TFT_DrawPoint(x+1, y, (pixels&(1<<6)) ? Index1 : Index0);
;;;211        if (!--xsize)
;;;212          return;
;;;213      WriteBit2:
;;;214        TFT_DrawPoint(x+2, y, (pixels&(1<<5)) ? Index1 : Index0);
;;;215        if (!--xsize)
;;;216          return;
;;;217      WriteBit3:
;;;218        TFT_DrawPoint(x+3, y, (pixels&(1<<4)) ? Index1 : Index0);
;;;219        if (!--xsize)
;;;220          return;
;;;221      WriteBit4:
;;;222        TFT_DrawPoint(x+4, y, (pixels&(1<<3)) ? Index1 : Index0);
;;;223        if (!--xsize)
;;;224          return;
;;;225      WriteBit5:
;;;226        TFT_DrawPoint(x+5, y, (pixels&(1<<2)) ? Index1 : Index0);
;;;227        if (!--xsize)
;;;228          return;
;;;229      WriteBit6:
;;;230        TFT_DrawPoint(x+6, y, (pixels&(1<<1)) ? Index1 : Index0);
;;;231        if (!--xsize)
;;;232          return;
;;;233      WriteBit7:
;;;234        TFT_DrawPoint(x+7, y, (pixels&(1<<0)) ? Index1 : Index0);
;;;235        if (!--xsize)
;;;236          return;
;;;237        x+=8;
;;;238        pixels = *(++p);
;;;239        goto WriteBit0;
;;;240    
;;;241    /*
;;;242            Write XOR mode
;;;243    */
;;;244      WriteXBit0:
;;;245        if (pixels&(1<<7))
;;;246          LCD_L0_XorPixel(x+0, y);
;;;247        if (!--xsize)
;;;248          return;
;;;249      WriteXBit1:
;;;250        if (pixels&(1<<6))
;;;251          LCD_L0_XorPixel(x+1, y);
;;;252        if (!--xsize)
;;;253          return;
;;;254      WriteXBit2:
;;;255        if (pixels&(1<<5))
;;;256          LCD_L0_XorPixel(x+2, y);
;;;257        if (!--xsize)
;;;258          return;
;;;259      WriteXBit3:
;;;260        if (pixels&(1<<4))
;;;261          LCD_L0_XorPixel(x+3, y);
;;;262        if (!--xsize)
;;;263          return;
;;;264      WriteXBit4:
;;;265        if (pixels&(1<<3))
;;;266          LCD_L0_XorPixel(x+4, y);
;;;267        if (!--xsize)
;;;268          return;
;;;269      WriteXBit5:
;;;270        if (pixels&(1<<2))
;;;271          LCD_L0_XorPixel(x+5, y);
;;;272        if (!--xsize)
;;;273          return;
;;;274      WriteXBit6:
;;;275        if (pixels&(1<<1))
;;;276          LCD_L0_XorPixel(x+6, y);
;;;277        if (!--xsize)
;;;278          return;
;;;279      WriteXBit7:
;;;280        if (pixels&(1<<0))
;;;281          LCD_L0_XorPixel(x+7, y);
;;;282        if (!--xsize)
;;;283          return;
;;;284        x+=8;
;;;285        pixels = *(++p);
;;;286        goto WriteXBit0;
;;;287    }
000154  e8bd8ff8          POP      {r3-r11,pc}
                  |L1.344|
000158  bf00              NOP                            ;169
                  |L1.346|
00015a  f0160f40          TST      r6,#0x40              ;170
00015e  d005              BEQ      |L1.364|
000160  465a              MOV      r2,r11                ;170
000162  b2b9              UXTH     r1,r7                 ;170
000164  1c60              ADDS     r0,r4,#1              ;170
000166  b280              UXTH     r0,r0                 ;170
000168  f7fffffe          BL       TFT_DrawPoint
                  |L1.364|
00016c  f1a50001          SUB      r0,r5,#1              ;171
000170  0005              MOVS     r5,r0                 ;171
000172  d100              BNE      |L1.374|
000174  e7ee              B        |L1.340|
                  |L1.374|
000176  bf00              NOP                            ;173
                  |L1.376|
000178  f0160f20          TST      r6,#0x20              ;174
00017c  d005              BEQ      |L1.394|
00017e  465a              MOV      r2,r11                ;174
000180  b2b9              UXTH     r1,r7                 ;174
000182  1ca0              ADDS     r0,r4,#2              ;174
000184  b280              UXTH     r0,r0                 ;174
000186  f7fffffe          BL       TFT_DrawPoint
                  |L1.394|
00018a  f1a50001          SUB      r0,r5,#1              ;175
00018e  0005              MOVS     r5,r0                 ;175
000190  d100              BNE      |L1.404|
000192  e7df              B        |L1.340|
                  |L1.404|
000194  bf00              NOP                            ;177
                  |L1.406|
000196  f0160f10          TST      r6,#0x10              ;178
00019a  d005              BEQ      |L1.424|
00019c  465a              MOV      r2,r11                ;178
00019e  b2b9              UXTH     r1,r7                 ;178
0001a0  1ce0              ADDS     r0,r4,#3              ;178
0001a2  b280              UXTH     r0,r0                 ;178
0001a4  f7fffffe          BL       TFT_DrawPoint
                  |L1.424|
0001a8  f1a50001          SUB      r0,r5,#1              ;179
0001ac  0005              MOVS     r5,r0                 ;179
0001ae  d100              BNE      |L1.434|
0001b0  e7d0              B        |L1.340|
                  |L1.434|
0001b2  bf00              NOP                            ;181
                  |L1.436|
0001b4  f0160f08          TST      r6,#8                 ;182
0001b8  d005              BEQ      |L1.454|
0001ba  465a              MOV      r2,r11                ;182
0001bc  b2b9              UXTH     r1,r7                 ;182
0001be  1d20              ADDS     r0,r4,#4              ;182
0001c0  b280              UXTH     r0,r0                 ;182
0001c2  f7fffffe          BL       TFT_DrawPoint
                  |L1.454|
0001c6  f1a50001          SUB      r0,r5,#1              ;183
0001ca  0005              MOVS     r5,r0                 ;183
0001cc  d100              BNE      |L1.464|
0001ce  e7c1              B        |L1.340|
                  |L1.464|
0001d0  bf00              NOP                            ;185
                  |L1.466|
0001d2  f0160f04          TST      r6,#4                 ;186
0001d6  d005              BEQ      |L1.484|
0001d8  465a              MOV      r2,r11                ;186
0001da  b2b9              UXTH     r1,r7                 ;186
0001dc  1d60              ADDS     r0,r4,#5              ;186
0001de  b280              UXTH     r0,r0                 ;186
0001e0  f7fffffe          BL       TFT_DrawPoint
                  |L1.484|
0001e4  f1a50001          SUB      r0,r5,#1              ;187
0001e8  0005              MOVS     r5,r0                 ;187
0001ea  d100              BNE      |L1.494|
0001ec  e7b2              B        |L1.340|
                  |L1.494|
0001ee  bf00              NOP                            ;189
                  |L1.496|
0001f0  f0160f02          TST      r6,#2                 ;190
0001f4  d005              BEQ      |L1.514|
0001f6  465a              MOV      r2,r11                ;190
0001f8  b2b9              UXTH     r1,r7                 ;190
0001fa  1da0              ADDS     r0,r4,#6              ;190
0001fc  b280              UXTH     r0,r0                 ;190
0001fe  f7fffffe          BL       TFT_DrawPoint
                  |L1.514|
000202  f1a50001          SUB      r0,r5,#1              ;191
000206  0005              MOVS     r5,r0                 ;191
000208  d100              BNE      |L1.524|
00020a  e7a3              B        |L1.340|
                  |L1.524|
00020c  bf00              NOP                            ;193
                  |L1.526|
00020e  f0160f01          TST      r6,#1                 ;194
000212  d005              BEQ      |L1.544|
000214  465a              MOV      r2,r11                ;194
000216  b2b9              UXTH     r1,r7                 ;194
000218  1de0              ADDS     r0,r4,#7              ;194
00021a  b280              UXTH     r0,r0                 ;194
00021c  f7fffffe          BL       TFT_DrawPoint
                  |L1.544|
000220  f1a50001          SUB      r0,r5,#1              ;195
000224  0005              MOVS     r5,r0                 ;195
000226  d100              BNE      |L1.554|
000228  e794              B        |L1.340|
                  |L1.554|
00022a  f1040408          ADD      r4,r4,#8              ;197
00022e  f1080001          ADD      r0,r8,#1              ;198
000232  4680              MOV      r8,r0                 ;198
000234  7806              LDRB     r6,[r0,#0]            ;198
000236  e781              B        |L1.316|
                  |L1.568|
000238  f0160f80          TST      r6,#0x80              ;206
00023c  d001              BEQ      |L1.578|
00023e  4658              MOV      r0,r11                ;206
000240  e000              B        |L1.580|
                  |L1.578|
000242  9800              LDR      r0,[sp,#0]            ;206
                  |L1.580|
000244  4602              MOV      r2,r0                 ;206
000246  b2b9              UXTH     r1,r7                 ;206
000248  b2a0              UXTH     r0,r4                 ;206
00024a  f7fffffe          BL       TFT_DrawPoint
00024e  f1a50001          SUB      r0,r5,#1              ;207
000252  0005              MOVS     r5,r0                 ;207
000254  d100              BNE      |L1.600|
000256  e77d              B        |L1.340|
                  |L1.600|
000258  bf00              NOP                            ;209
                  |L1.602|
00025a  f0160f40          TST      r6,#0x40              ;210
00025e  d001              BEQ      |L1.612|
000260  4658              MOV      r0,r11                ;210
000262  e000              B        |L1.614|
                  |L1.612|
000264  9800              LDR      r0,[sp,#0]            ;210
                  |L1.614|
000266  4602              MOV      r2,r0                 ;210
000268  b2b9              UXTH     r1,r7                 ;210
00026a  1c60              ADDS     r0,r4,#1              ;210
00026c  b280              UXTH     r0,r0                 ;210
00026e  f7fffffe          BL       TFT_DrawPoint
000272  f1a50001          SUB      r0,r5,#1              ;211
000276  0005              MOVS     r5,r0                 ;211
000278  d100              BNE      |L1.636|
00027a  e76b              B        |L1.340|
                  |L1.636|
00027c  bf00              NOP                            ;213
                  |L1.638|
00027e  f0160f20          TST      r6,#0x20              ;214
000282  d001              BEQ      |L1.648|
000284  4658              MOV      r0,r11                ;214
000286  e000              B        |L1.650|
                  |L1.648|
000288  9800              LDR      r0,[sp,#0]            ;214
                  |L1.650|
00028a  4602              MOV      r2,r0                 ;214
00028c  b2b9              UXTH     r1,r7                 ;214
00028e  1ca0              ADDS     r0,r4,#2              ;214
000290  b280              UXTH     r0,r0                 ;214
000292  f7fffffe          BL       TFT_DrawPoint
000296  f1a50001          SUB      r0,r5,#1              ;215
00029a  0005              MOVS     r5,r0                 ;215
00029c  d100              BNE      |L1.672|
00029e  e759              B        |L1.340|
                  |L1.672|
0002a0  bf00              NOP                            ;217
                  |L1.674|
0002a2  f0160f10          TST      r6,#0x10              ;218
0002a6  d001              BEQ      |L1.684|
0002a8  4658              MOV      r0,r11                ;218
0002aa  e000              B        |L1.686|
                  |L1.684|
0002ac  9800              LDR      r0,[sp,#0]            ;218
                  |L1.686|
0002ae  4602              MOV      r2,r0                 ;218
0002b0  b2b9              UXTH     r1,r7                 ;218
0002b2  1ce0              ADDS     r0,r4,#3              ;218
0002b4  b280              UXTH     r0,r0                 ;218
0002b6  f7fffffe          BL       TFT_DrawPoint
0002ba  f1a50001          SUB      r0,r5,#1              ;219
0002be  0005              MOVS     r5,r0                 ;219
0002c0  d100              BNE      |L1.708|
0002c2  e747              B        |L1.340|
                  |L1.708|
0002c4  bf00              NOP                            ;221
                  |L1.710|
0002c6  f0160f08          TST      r6,#8                 ;222
0002ca  d001              BEQ      |L1.720|
0002cc  4658              MOV      r0,r11                ;222
0002ce  e000              B        |L1.722|
                  |L1.720|
0002d0  9800              LDR      r0,[sp,#0]            ;222
                  |L1.722|
0002d2  4602              MOV      r2,r0                 ;222
0002d4  b2b9              UXTH     r1,r7                 ;222
0002d6  1d20              ADDS     r0,r4,#4              ;222
0002d8  b280              UXTH     r0,r0                 ;222
0002da  f7fffffe          BL       TFT_DrawPoint
0002de  f1a50001          SUB      r0,r5,#1              ;223
0002e2  0005              MOVS     r5,r0                 ;223
0002e4  d100              BNE      |L1.744|
0002e6  e735              B        |L1.340|
                  |L1.744|
0002e8  bf00              NOP                            ;225
                  |L1.746|
0002ea  f0160f04          TST      r6,#4                 ;226
0002ee  d001              BEQ      |L1.756|
0002f0  4658              MOV      r0,r11                ;226
0002f2  e000              B        |L1.758|
                  |L1.756|
0002f4  9800              LDR      r0,[sp,#0]            ;226
                  |L1.758|
0002f6  4602              MOV      r2,r0                 ;226
0002f8  b2b9              UXTH     r1,r7                 ;226
0002fa  1d60              ADDS     r0,r4,#5              ;226
0002fc  b280              UXTH     r0,r0                 ;226
0002fe  f7fffffe          BL       TFT_DrawPoint
000302  f1a50001          SUB      r0,r5,#1              ;227
000306  0005              MOVS     r5,r0                 ;227
000308  d100              BNE      |L1.780|
00030a  e723              B        |L1.340|
                  |L1.780|
00030c  bf00              NOP                            ;229
                  |L1.782|
00030e  f0160f02          TST      r6,#2                 ;230
000312  d001              BEQ      |L1.792|
000314  4658              MOV      r0,r11                ;230
000316  e000              B        |L1.794|
                  |L1.792|
000318  9800              LDR      r0,[sp,#0]            ;230
                  |L1.794|
00031a  4602              MOV      r2,r0                 ;230
00031c  b2b9              UXTH     r1,r7                 ;230
00031e  1da0              ADDS     r0,r4,#6              ;230
000320  b280              UXTH     r0,r0                 ;230
000322  f7fffffe          BL       TFT_DrawPoint
000326  f1a50001          SUB      r0,r5,#1              ;231
00032a  0005              MOVS     r5,r0                 ;231
00032c  d100              BNE      |L1.816|
00032e  e711              B        |L1.340|
                  |L1.816|
000330  bf00              NOP                            ;233
                  |L1.818|
000332  f0160f01          TST      r6,#1                 ;234
000336  d001              BEQ      |L1.828|
000338  4658              MOV      r0,r11                ;234
00033a  e000              B        |L1.830|
                  |L1.828|
00033c  9800              LDR      r0,[sp,#0]            ;234
                  |L1.830|
00033e  4602              MOV      r2,r0                 ;234
000340  b2b9              UXTH     r1,r7                 ;234
000342  1de0              ADDS     r0,r4,#7              ;234
000344  b280              UXTH     r0,r0                 ;234
000346  f7fffffe          BL       TFT_DrawPoint
00034a  f1a50001          SUB      r0,r5,#1              ;235
00034e  0005              MOVS     r5,r0                 ;235
000350  d100              BNE      |L1.852|
000352  e6ff              B        |L1.340|
                  |L1.852|
000354  f1040408          ADD      r4,r4,#8              ;237
000358  f1080001          ADD      r0,r8,#1              ;238
00035c  4680              MOV      r8,r0                 ;238
00035e  7806              LDRB     r6,[r0,#0]            ;238
000360  e76a              B        |L1.568|
                  |L1.866|
000362  f0160f80          TST      r6,#0x80              ;245
000366  d003              BEQ      |L1.880|
000368  4639              MOV      r1,r7                 ;246
00036a  4620              MOV      r0,r4                 ;246
00036c  f7fffffe          BL       LCD_L0_XorPixel
                  |L1.880|
000370  f1a50001          SUB      r0,r5,#1              ;247
000374  0005              MOVS     r5,r0                 ;247
000376  d100              BNE      |L1.890|
000378  e6ec              B        |L1.340|
                  |L1.890|
00037a  bf00              NOP                            ;249
                  |L1.892|
00037c  f0160f40          TST      r6,#0x40              ;250
000380  d003              BEQ      |L1.906|
000382  4639              MOV      r1,r7                 ;251
000384  1c60              ADDS     r0,r4,#1              ;251
000386  f7fffffe          BL       LCD_L0_XorPixel
                  |L1.906|
00038a  f1a50001          SUB      r0,r5,#1              ;252
00038e  0005              MOVS     r5,r0                 ;252
000390  d100              BNE      |L1.916|
000392  e6df              B        |L1.340|
                  |L1.916|
000394  bf00              NOP                            ;254
                  |L1.918|
000396  f0160f20          TST      r6,#0x20              ;255
00039a  d003              BEQ      |L1.932|
00039c  4639              MOV      r1,r7                 ;256
00039e  1ca0              ADDS     r0,r4,#2              ;256
0003a0  f7fffffe          BL       LCD_L0_XorPixel
                  |L1.932|
0003a4  f1a50001          SUB      r0,r5,#1              ;257
0003a8  0005              MOVS     r5,r0                 ;257
0003aa  d100              BNE      |L1.942|
0003ac  e6d2              B        |L1.340|
                  |L1.942|
0003ae  bf00              NOP                            ;259
                  |L1.944|
0003b0  f0160f10          TST      r6,#0x10              ;260
0003b4  d003              BEQ      |L1.958|
0003b6  4639              MOV      r1,r7                 ;261
0003b8  1ce0              ADDS     r0,r4,#3              ;261
0003ba  f7fffffe          BL       LCD_L0_XorPixel
                  |L1.958|
0003be  f1a50001          SUB      r0,r5,#1              ;262
0003c2  0005              MOVS     r5,r0                 ;262
0003c4  d100              BNE      |L1.968|
0003c6  e6c5              B        |L1.340|
                  |L1.968|
0003c8  bf00              NOP                            ;264
                  |L1.970|
0003ca  f0160f08          TST      r6,#8                 ;265
0003ce  d003              BEQ      |L1.984|
0003d0  4639              MOV      r1,r7                 ;266
0003d2  1d20              ADDS     r0,r4,#4              ;266
0003d4  f7fffffe          BL       LCD_L0_XorPixel
                  |L1.984|
0003d8  f1a50001          SUB      r0,r5,#1              ;267
0003dc  0005              MOVS     r5,r0                 ;267
0003de  d100              BNE      |L1.994|
0003e0  e6b8              B        |L1.340|
                  |L1.994|
0003e2  bf00              NOP                            ;269
                  |L1.996|
0003e4  f0160f04          TST      r6,#4                 ;270
0003e8  d003              BEQ      |L1.1010|
0003ea  4639              MOV      r1,r7                 ;271
0003ec  1d60              ADDS     r0,r4,#5              ;271
0003ee  f7fffffe          BL       LCD_L0_XorPixel
                  |L1.1010|
0003f2  f1a50001          SUB      r0,r5,#1              ;272
0003f6  0005              MOVS     r5,r0                 ;272
0003f8  d100              BNE      |L1.1020|
0003fa  e6ab              B        |L1.340|
                  |L1.1020|
0003fc  bf00              NOP                            ;274
                  |L1.1022|
0003fe  f0160f02          TST      r6,#2                 ;275
000402  d003              BEQ      |L1.1036|
000404  4639              MOV      r1,r7                 ;276
000406  1da0              ADDS     r0,r4,#6              ;276
000408  f7fffffe          BL       LCD_L0_XorPixel
                  |L1.1036|
00040c  f1a50001          SUB      r0,r5,#1              ;277
000410  0005              MOVS     r5,r0                 ;277
000412  d100              BNE      |L1.1046|
000414  e69e              B        |L1.340|
                  |L1.1046|
000416  bf00              NOP                            ;279
                  |L1.1048|
000418  f0160f01          TST      r6,#1                 ;280
00041c  d003              BEQ      |L1.1062|
00041e  4639              MOV      r1,r7                 ;281
000420  1de0              ADDS     r0,r4,#7              ;281
000422  f7fffffe          BL       LCD_L0_XorPixel
                  |L1.1062|
000426  f1a50001          SUB      r0,r5,#1              ;282
00042a  0005              MOVS     r5,r0                 ;282
00042c  d102              BNE      |L1.1076|
00042e  e691              B        |L1.340|
                  |L1.1072|
                          DCD      GUI_Context
                  |L1.1076|
000434  f1040408          ADD      r4,r4,#8              ;284
000438  f1080001          ADD      r0,r8,#1              ;285
00043c  4680              MOV      r8,r0                 ;285
00043e  7806              LDRB     r6,[r0,#0]            ;285
000440  e78f              B        |L1.866|
;;;288    
                          ENDP

                  DrawBitLine2BPP PROC
;;;289    static void  DrawBitLine2BPP(int x, int y, U8 const*p, int Diff, int xsize, const LCD_PIXELINDEX*pTrans) {
000442  e92d47f0          PUSH     {r4-r10,lr}
000446  4604              MOV      r4,r0
000448  460e              MOV      r6,r1
00044a  4691              MOV      r9,r2
00044c  469a              MOV      r10,r3
00044e  e9dd7808          LDRD     r7,r8,[sp,#0x20]
;;;290      LCD_PIXELINDEX pixels;
;;;291    /*
;;;292    // Jump to right entry point
;;;293    */
;;;294      pixels = *p;
000452  f8995000          LDRB     r5,[r9,#0]
;;;295      if (pTrans) {
000456  f1b80f00          CMP      r8,#0
00045a  d06e              BEQ      |L1.1338|
;;;296        /*
;;;297          with palette
;;;298        */
;;;299        if (GUI_Context.DrawMode & LCD_DRAWMODE_TRANS) switch (Diff&3) {
00045c  48fd              LDR      r0,|L1.2132|
00045e  7c00              LDRB     r0,[r0,#0x10]  ; GUI_Context
000460  f0100f02          TST      r0,#2
000464  d00b              BEQ      |L1.1150|
000466  f01a0003          ANDS     r0,r10,#3
00046a  d004              BEQ      |L1.1142|
00046c  2801              CMP      r0,#1
00046e  d003              BEQ      |L1.1144|
000470  2802              CMP      r0,#2
000472  d103              BNE      |L1.1148|
000474  e001              B        |L1.1146|
                  |L1.1142|
;;;300        case 0:
;;;301          goto WriteTBit0;
000476  e051              B        |L1.1308|
                  |L1.1144|
;;;302        case 1:
;;;303          goto WriteTBit1;
000478  e061              B        |L1.1342|
                  |L1.1146|
;;;304        case 2:
;;;305          goto WriteTBit2;
00047a  e073              B        |L1.1380|
                  |L1.1148|
;;;306        default:
;;;307          goto WriteTBit3;
00047c  e085              B        |L1.1418|
                  |L1.1150|
;;;308        } else switch (Diff&3) {
00047e  f01a0003          ANDS     r0,r10,#3
000482  d004              BEQ      |L1.1166|
000484  2801              CMP      r0,#1
000486  d003              BEQ      |L1.1168|
000488  2802              CMP      r0,#2
00048a  d103              BNE      |L1.1172|
00048c  e001              B        |L1.1170|
                  |L1.1166|
;;;309        case 0:
;;;310          goto WriteBit0;
00048e  e002              B        |L1.1174|
                  |L1.1168|
;;;311        case 1:
;;;312          goto WriteBit1;
000490  e00f              B        |L1.1202|
                  |L1.1170|
;;;313        case 2:
;;;314          goto WriteBit2;
000492  e01e              B        |L1.1234|
                  |L1.1172|
;;;315        default:
;;;316          goto WriteBit3;
000494  e02d              B        |L1.1266|
                  |L1.1174|
;;;317        }
;;;318      /*
;;;319              Write without transparency
;;;320      */
;;;321      WriteBit0:
;;;322        TFT_DrawPoint(x+0, y, *(pTrans+(pixels>>6)));
000496  11a8              ASRS     r0,r5,#6
000498  f8382010          LDRH     r2,[r8,r0,LSL #1]
00049c  b2b1              UXTH     r1,r6
00049e  b2a0              UXTH     r0,r4
0004a0  f7fffffe          BL       TFT_DrawPoint
;;;323        if (!--xsize)
0004a4  f1a70001          SUB      r0,r7,#1
0004a8  0007              MOVS     r7,r0
0004aa  d101              BNE      |L1.1200|
                  |L1.1196|
;;;324          return;
;;;325      WriteBit1:
;;;326        TFT_DrawPoint(x+1, y, *(pTrans+(3&(pixels>>4))));
;;;327        if (!--xsize)
;;;328          return;
;;;329      WriteBit2:
;;;330        TFT_DrawPoint(x+2, y, *(pTrans+(3&(pixels>>2))));
;;;331        if (!--xsize)
;;;332          return;
;;;333      WriteBit3:
;;;334        TFT_DrawPoint(x+3, y, *(pTrans+(3&(pixels))));
;;;335        if (!--xsize)
;;;336          return;
;;;337        pixels = *(++p);
;;;338        x+=4;
;;;339        goto WriteBit0;
;;;340      /*
;;;341              Write with transparency
;;;342      */
;;;343      WriteTBit0:
;;;344        if (pixels&(3<<6))
;;;345          TFT_DrawPoint(x+0, y, *(pTrans+(pixels>>6)));
;;;346        if (!--xsize)
;;;347          return;
;;;348      WriteTBit1:
;;;349        if (pixels&(3<<4))
;;;350          TFT_DrawPoint(x+1, y, *(pTrans+(3&(pixels>>4))));
;;;351        if (!--xsize)
;;;352          return;
;;;353      WriteTBit2:
;;;354        if (pixels&(3<<2))
;;;355          TFT_DrawPoint(x+2, y, *(pTrans+(3&(pixels>>2))));
;;;356        if (!--xsize)
;;;357          return;
;;;358      WriteTBit3:
;;;359        if (pixels&(3<<0))
;;;360          TFT_DrawPoint(x+3, y, *(pTrans+(3&(pixels))));
;;;361        if (!--xsize)
;;;362          return;
;;;363        pixels = *(++p);
;;;364        x+=4;
;;;365        goto WriteTBit0;
;;;366      } else { 
;;;367        /* 
;;;368          without palette 
;;;369        */
;;;370        if (GUI_Context.DrawMode & LCD_DRAWMODE_TRANS) switch (Diff&3) {
;;;371        case 0:
;;;372          goto WriteDDPTBit0;
;;;373        case 1:
;;;374          goto WriteDDPTBit1;
;;;375        case 2:
;;;376          goto WriteDDPTBit2;
;;;377        default:
;;;378          goto WriteDDPTBit3;
;;;379        } else switch (Diff&3) {
;;;380        case 0:
;;;381          goto WriteDDPBit0;
;;;382        case 1:
;;;383          goto WriteDDPBit1;
;;;384        case 2:
;;;385          goto WriteDDPBit2;
;;;386        default:
;;;387          goto WriteDDPBit3;
;;;388        }
;;;389      /*
;;;390              Write without transparency
;;;391      */
;;;392      WriteDDPBit0:
;;;393        TFT_DrawPoint(x+0, y, (pixels>>6));
;;;394        if (!--xsize)
;;;395          return;
;;;396      WriteDDPBit1:
;;;397        TFT_DrawPoint(x+1, y, (3&(pixels>>4)));
;;;398        if (!--xsize)
;;;399          return;
;;;400      WriteDDPBit2:
;;;401        TFT_DrawPoint(x+2, y, (3&(pixels>>2)));
;;;402        if (!--xsize)
;;;403          return;
;;;404      WriteDDPBit3:
;;;405        TFT_DrawPoint(x+3, y, (3&(pixels)));
;;;406        if (!--xsize)
;;;407          return;
;;;408        pixels = *(++p);
;;;409        x+=4;
;;;410        goto WriteDDPBit0;
;;;411      /*
;;;412              Write with transparency
;;;413      */
;;;414      WriteDDPTBit0:
;;;415        if (pixels&(3<<6))
;;;416          TFT_DrawPoint(x+0, y, (pixels>>6));
;;;417        if (!--xsize)
;;;418          return;
;;;419      WriteDDPTBit1:
;;;420        if (pixels&(3<<4))
;;;421          TFT_DrawPoint(x+1, y, (3&(pixels>>4)));
;;;422        if (!--xsize)
;;;423          return;
;;;424      WriteDDPTBit2:
;;;425        if (pixels&(3<<2))
;;;426          TFT_DrawPoint(x+2, y, (3&(pixels>>2)));
;;;427        if (!--xsize)
;;;428          return;
;;;429      WriteDDPTBit3:
;;;430        if (pixels&(3<<0))
;;;431          TFT_DrawPoint(x+3, y, (3&(pixels)));
;;;432        if (!--xsize)
;;;433          return;
;;;434        pixels = *(++p);
;;;435        x+=4;
;;;436        goto WriteDDPTBit0;
;;;437      }
;;;438    }
0004ac  e8bd87f0          POP      {r4-r10,pc}
                  |L1.1200|
0004b0  bf00              NOP                            ;325
                  |L1.1202|
0004b2  2003              MOVS     r0,#3                 ;326
0004b4  ea001025          AND      r0,r0,r5,ASR #4       ;326
0004b8  f8382010          LDRH     r2,[r8,r0,LSL #1]     ;326
0004bc  b2b1              UXTH     r1,r6                 ;326
0004be  1c60              ADDS     r0,r4,#1              ;326
0004c0  b280              UXTH     r0,r0                 ;326
0004c2  f7fffffe          BL       TFT_DrawPoint
0004c6  f1a70001          SUB      r0,r7,#1              ;327
0004ca  0007              MOVS     r7,r0                 ;327
0004cc  d100              BNE      |L1.1232|
0004ce  e7ed              B        |L1.1196|
                  |L1.1232|
0004d0  bf00              NOP                            ;329
                  |L1.1234|
0004d2  2003              MOVS     r0,#3                 ;330
0004d4  ea0000a5          AND      r0,r0,r5,ASR #2       ;330
0004d8  f8382010          LDRH     r2,[r8,r0,LSL #1]     ;330
0004dc  b2b1              UXTH     r1,r6                 ;330
0004de  1ca0              ADDS     r0,r4,#2              ;330
0004e0  b280              UXTH     r0,r0                 ;330
0004e2  f7fffffe          BL       TFT_DrawPoint
0004e6  f1a70001          SUB      r0,r7,#1              ;331
0004ea  0007              MOVS     r7,r0                 ;331
0004ec  d100              BNE      |L1.1264|
0004ee  e7dd              B        |L1.1196|
                  |L1.1264|
0004f0  bf00              NOP                            ;333
                  |L1.1266|
0004f2  f0050003          AND      r0,r5,#3              ;334
0004f6  f8382010          LDRH     r2,[r8,r0,LSL #1]     ;334
0004fa  b2b1              UXTH     r1,r6                 ;334
0004fc  1ce0              ADDS     r0,r4,#3              ;334
0004fe  b280              UXTH     r0,r0                 ;334
000500  f7fffffe          BL       TFT_DrawPoint
000504  f1a70001          SUB      r0,r7,#1              ;335
000508  0007              MOVS     r7,r0                 ;335
00050a  d100              BNE      |L1.1294|
00050c  e7ce              B        |L1.1196|
                  |L1.1294|
00050e  f1090001          ADD      r0,r9,#1              ;337
000512  4681              MOV      r9,r0                 ;337
000514  7805              LDRB     r5,[r0,#0]            ;337
000516  f1040404          ADD      r4,r4,#4              ;338
00051a  e7bc              B        |L1.1174|
                  |L1.1308|
00051c  f0150fc0          TST      r5,#0xc0              ;344
000520  d006              BEQ      |L1.1328|
000522  11a8              ASRS     r0,r5,#6              ;345
000524  f8382010          LDRH     r2,[r8,r0,LSL #1]     ;345
000528  b2b1              UXTH     r1,r6                 ;345
00052a  b2a0              UXTH     r0,r4                 ;345
00052c  f7fffffe          BL       TFT_DrawPoint
                  |L1.1328|
000530  f1a70001          SUB      r0,r7,#1              ;346
000534  0007              MOVS     r7,r0                 ;346
000536  d101              BNE      |L1.1340|
000538  e7b8              B        |L1.1196|
                  |L1.1338|
00053a  e03e              B        |L1.1466|
                  |L1.1340|
00053c  bf00              NOP                            ;348
                  |L1.1342|
00053e  f0150f30          TST      r5,#0x30              ;349
000542  d009              BEQ      |L1.1368|
000544  2003              MOVS     r0,#3                 ;350
000546  ea001025          AND      r0,r0,r5,ASR #4       ;350
00054a  f8382010          LDRH     r2,[r8,r0,LSL #1]     ;350
00054e  b2b1              UXTH     r1,r6                 ;350
000550  1c60              ADDS     r0,r4,#1              ;350
000552  b280              UXTH     r0,r0                 ;350
000554  f7fffffe          BL       TFT_DrawPoint
                  |L1.1368|
000558  f1a70001          SUB      r0,r7,#1              ;351
00055c  0007              MOVS     r7,r0                 ;351
00055e  d100              BNE      |L1.1378|
000560  e7a4              B        |L1.1196|
                  |L1.1378|
000562  bf00              NOP                            ;353
                  |L1.1380|
000564  f0150f0c          TST      r5,#0xc               ;354
000568  d009              BEQ      |L1.1406|
00056a  2003              MOVS     r0,#3                 ;355
00056c  ea0000a5          AND      r0,r0,r5,ASR #2       ;355
000570  f8382010          LDRH     r2,[r8,r0,LSL #1]     ;355
000574  b2b1              UXTH     r1,r6                 ;355
000576  1ca0              ADDS     r0,r4,#2              ;355
000578  b280              UXTH     r0,r0                 ;355
00057a  f7fffffe          BL       TFT_DrawPoint
                  |L1.1406|
00057e  f1a70001          SUB      r0,r7,#1              ;356
000582  0007              MOVS     r7,r0                 ;356
000584  d100              BNE      |L1.1416|
000586  e791              B        |L1.1196|
                  |L1.1416|
000588  bf00              NOP                            ;358
                  |L1.1418|
00058a  f0150f03          TST      r5,#3                 ;359
00058e  d008              BEQ      |L1.1442|
000590  f0050003          AND      r0,r5,#3              ;360
000594  f8382010          LDRH     r2,[r8,r0,LSL #1]     ;360
000598  b2b1              UXTH     r1,r6                 ;360
00059a  1ce0              ADDS     r0,r4,#3              ;360
00059c  b280              UXTH     r0,r0                 ;360
00059e  f7fffffe          BL       TFT_DrawPoint
                  |L1.1442|
0005a2  f1a70001          SUB      r0,r7,#1              ;361
0005a6  0007              MOVS     r7,r0                 ;361
0005a8  d100              BNE      |L1.1452|
0005aa  e77f              B        |L1.1196|
                  |L1.1452|
0005ac  f1090001          ADD      r0,r9,#1              ;363
0005b0  4681              MOV      r9,r0                 ;363
0005b2  7805              LDRB     r5,[r0,#0]            ;363
0005b4  f1040404          ADD      r4,r4,#4              ;364
0005b8  e7b0              B        |L1.1308|
                  |L1.1466|
0005ba  48a6              LDR      r0,|L1.2132|
0005bc  7c00              LDRB     r0,[r0,#0x10]         ;370  ; GUI_Context
0005be  f0100f02          TST      r0,#2                 ;370
0005c2  d00b              BEQ      |L1.1500|
0005c4  f01a0003          ANDS     r0,r10,#3             ;370
0005c8  d004              BEQ      |L1.1492|
0005ca  2801              CMP      r0,#1                 ;370
0005cc  d003              BEQ      |L1.1494|
0005ce  2802              CMP      r0,#2                 ;370
0005d0  d103              BNE      |L1.1498|
0005d2  e001              B        |L1.1496|
                  |L1.1492|
0005d4  e048              B        |L1.1640|
                  |L1.1494|
0005d6  e055              B        |L1.1668|
                  |L1.1496|
0005d8  e065              B        |L1.1702|
                  |L1.1498|
0005da  e075              B        |L1.1736|
                  |L1.1500|
0005dc  f01a0003          ANDS     r0,r10,#3             ;379
0005e0  d004              BEQ      |L1.1516|
0005e2  2801              CMP      r0,#1                 ;379
0005e4  d003              BEQ      |L1.1518|
0005e6  2802              CMP      r0,#2                 ;379
0005e8  d103              BNE      |L1.1522|
0005ea  e001              B        |L1.1520|
                  |L1.1516|
0005ec  e002              B        |L1.1524|
                  |L1.1518|
0005ee  e00c              B        |L1.1546|
                  |L1.1520|
0005f0  e019              B        |L1.1574|
                  |L1.1522|
0005f2  e026              B        |L1.1602|
                  |L1.1524|
0005f4  11aa              ASRS     r2,r5,#6              ;393
0005f6  b2b1              UXTH     r1,r6                 ;393
0005f8  b2a0              UXTH     r0,r4                 ;393
0005fa  f7fffffe          BL       TFT_DrawPoint
0005fe  f1a70001          SUB      r0,r7,#1              ;394
000602  0007              MOVS     r7,r0                 ;394
000604  d100              BNE      |L1.1544|
000606  e751              B        |L1.1196|
                  |L1.1544|
000608  bf00              NOP                            ;396
                  |L1.1546|
00060a  2003              MOVS     r0,#3                 ;397
00060c  ea001225          AND      r2,r0,r5,ASR #4       ;397
000610  b2b1              UXTH     r1,r6                 ;397
000612  1c60              ADDS     r0,r4,#1              ;397
000614  b280              UXTH     r0,r0                 ;397
000616  f7fffffe          BL       TFT_DrawPoint
00061a  f1a70001          SUB      r0,r7,#1              ;398
00061e  0007              MOVS     r7,r0                 ;398
000620  d100              BNE      |L1.1572|
000622  e743              B        |L1.1196|
                  |L1.1572|
000624  bf00              NOP                            ;400
                  |L1.1574|
000626  2003              MOVS     r0,#3                 ;401
000628  ea0002a5          AND      r2,r0,r5,ASR #2       ;401
00062c  b2b1              UXTH     r1,r6                 ;401
00062e  1ca0              ADDS     r0,r4,#2              ;401
000630  b280              UXTH     r0,r0                 ;401
000632  f7fffffe          BL       TFT_DrawPoint
000636  f1a70001          SUB      r0,r7,#1              ;402
00063a  0007              MOVS     r7,r0                 ;402
00063c  d100              BNE      |L1.1600|
00063e  e735              B        |L1.1196|
                  |L1.1600|
000640  bf00              NOP                            ;404
                  |L1.1602|
000642  f0050203          AND      r2,r5,#3              ;405
000646  b2b1              UXTH     r1,r6                 ;405
000648  1ce0              ADDS     r0,r4,#3              ;405
00064a  b280              UXTH     r0,r0                 ;405
00064c  f7fffffe          BL       TFT_DrawPoint
000650  f1a70001          SUB      r0,r7,#1              ;406
000654  0007              MOVS     r7,r0                 ;406
000656  d100              BNE      |L1.1626|
000658  e728              B        |L1.1196|
                  |L1.1626|
00065a  f1090001          ADD      r0,r9,#1              ;408
00065e  4681              MOV      r9,r0                 ;408
000660  7805              LDRB     r5,[r0,#0]            ;408
000662  f1040404          ADD      r4,r4,#4              ;409
000666  e7c5              B        |L1.1524|
                  |L1.1640|
000668  f0150fc0          TST      r5,#0xc0              ;415
00066c  d004              BEQ      |L1.1656|
00066e  11aa              ASRS     r2,r5,#6              ;416
000670  b2b1              UXTH     r1,r6                 ;416
000672  b2a0              UXTH     r0,r4                 ;416
000674  f7fffffe          BL       TFT_DrawPoint
                  |L1.1656|
000678  f1a70001          SUB      r0,r7,#1              ;417
00067c  0007              MOVS     r7,r0                 ;417
00067e  d100              BNE      |L1.1666|
000680  e714              B        |L1.1196|
                  |L1.1666|
000682  bf00              NOP                            ;419
                  |L1.1668|
000684  f0150f30          TST      r5,#0x30              ;420
000688  d007              BEQ      |L1.1690|
00068a  2003              MOVS     r0,#3                 ;421
00068c  ea001225          AND      r2,r0,r5,ASR #4       ;421
000690  b2b1              UXTH     r1,r6                 ;421
000692  1c60              ADDS     r0,r4,#1              ;421
000694  b280              UXTH     r0,r0                 ;421
000696  f7fffffe          BL       TFT_DrawPoint
                  |L1.1690|
00069a  f1a70001          SUB      r0,r7,#1              ;422
00069e  0007              MOVS     r7,r0                 ;422
0006a0  d100              BNE      |L1.1700|
0006a2  e703              B        |L1.1196|
                  |L1.1700|
0006a4  bf00              NOP                            ;424
                  |L1.1702|
0006a6  f0150f0c          TST      r5,#0xc               ;425
0006aa  d007              BEQ      |L1.1724|
0006ac  2003              MOVS     r0,#3                 ;426
0006ae  ea0002a5          AND      r2,r0,r5,ASR #2       ;426
0006b2  b2b1              UXTH     r1,r6                 ;426
0006b4  1ca0              ADDS     r0,r4,#2              ;426
0006b6  b280              UXTH     r0,r0                 ;426
0006b8  f7fffffe          BL       TFT_DrawPoint
                  |L1.1724|
0006bc  f1a70001          SUB      r0,r7,#1              ;427
0006c0  0007              MOVS     r7,r0                 ;427
0006c2  d100              BNE      |L1.1734|
0006c4  e6f2              B        |L1.1196|
                  |L1.1734|
0006c6  bf00              NOP                            ;429
                  |L1.1736|
0006c8  f0150f03          TST      r5,#3                 ;430
0006cc  d006              BEQ      |L1.1756|
0006ce  f0050203          AND      r2,r5,#3              ;431
0006d2  b2b1              UXTH     r1,r6                 ;431
0006d4  1ce0              ADDS     r0,r4,#3              ;431
0006d6  b280              UXTH     r0,r0                 ;431
0006d8  f7fffffe          BL       TFT_DrawPoint
                  |L1.1756|
0006dc  f1a70001          SUB      r0,r7,#1              ;432
0006e0  0007              MOVS     r7,r0                 ;432
0006e2  d100              BNE      |L1.1766|
0006e4  e6e2              B        |L1.1196|
                  |L1.1766|
0006e6  f1090001          ADD      r0,r9,#1              ;434
0006ea  4681              MOV      r9,r0                 ;434
0006ec  7805              LDRB     r5,[r0,#0]            ;434
0006ee  f1040404          ADD      r4,r4,#4              ;435
0006f2  e7b9              B        |L1.1640|
;;;439    
                          ENDP

                  DrawBitLine4BPP PROC
;;;440    static void  DrawBitLine4BPP(int x, int y, U8 const*p, int Diff, int xsize, const LCD_PIXELINDEX*pTrans)
0006f4  e92d47f0          PUSH     {r4-r10,lr}
;;;441    {
0006f8  4604              MOV      r4,r0
0006fa  460e              MOV      r6,r1
0006fc  4690              MOV      r8,r2
0006fe  4699              MOV      r9,r3
000700  e9dd7a08          LDRD     r7,r10,[sp,#0x20]
;;;442      LCD_PIXELINDEX pixels;
;;;443    
;;;444      pixels = *p;
000704  f8985000          LDRB     r5,[r8,#0]
;;;445      if (pTrans)
000708  f1ba0f00          CMP      r10,#0
00070c  d058              BEQ      |L1.1984|
;;;446      {
;;;447        if (GUI_Context.DrawMode & LCD_DRAWMODE_TRANS)
00070e  4851              LDR      r0,|L1.2132|
000710  7c00              LDRB     r0,[r0,#0x10]  ; GUI_Context
000712  f0100f02          TST      r0,#2
000716  d004              BEQ      |L1.1826|
;;;448        {
;;;449          if ((Diff&1) ==0)
000718  f0190f01          TST      r9,#1
00071c  d100              BNE      |L1.1824|
;;;450            goto WriteTBit0;
00071e  e028              B        |L1.1906|
                  |L1.1824|
;;;451            goto WriteTBit1;
000720  e036              B        |L1.1936|
                  |L1.1826|
;;;452        }
;;;453        else
;;;454        {
;;;455          if ((Diff&1) ==0)
000722  f0190f01          TST      r9,#1
000726  d100              BNE      |L1.1834|
;;;456            goto WriteBit0;
000728  e000              B        |L1.1836|
                  |L1.1834|
;;;457            goto WriteBit1;
00072a  e00d              B        |L1.1864|
                  |L1.1836|
;;;458        }
;;;459    
;;;460      WriteBit0:
;;;461        TFT_DrawPoint(x+0, y, *(pTrans+(pixels>>4)));
00072c  1128              ASRS     r0,r5,#4
00072e  f83a2010          LDRH     r2,[r10,r0,LSL #1]
000732  b2b1              UXTH     r1,r6
000734  b2a0              UXTH     r0,r4
000736  f7fffffe          BL       TFT_DrawPoint
;;;462        if (!--xsize)
00073a  f1a70001          SUB      r0,r7,#1
00073e  0007              MOVS     r7,r0
000740  d101              BNE      |L1.1862|
                  |L1.1858|
;;;463          return;
;;;464      WriteBit1:
;;;465        TFT_DrawPoint(x+1, y, *(pTrans+(pixels&0xf)));
;;;466        if (!--xsize)
;;;467          return;
;;;468        x+=2;
;;;469        pixels = *(++p);
;;;470        goto WriteBit0;
;;;471      /*
;;;472              Write with transparency
;;;473      */
;;;474      WriteTBit0:
;;;475        if (pixels>>4)
;;;476          TFT_DrawPoint(x+0, y, *(pTrans+(pixels>>4)));
;;;477        if (!--xsize)
;;;478          return;
;;;479      WriteTBit1:
;;;480        if (pixels&0xf)
;;;481          TFT_DrawPoint(x+1, y, *(pTrans+(pixels&0xf)));
;;;482        if (!--xsize)
;;;483          return;
;;;484        x+=2;
;;;485        pixels = *(++p);
;;;486        goto WriteTBit0;
;;;487      } else {
;;;488        /*
;;;489          without palette
;;;490        */
;;;491        if (GUI_Context.DrawMode & LCD_DRAWMODE_TRANS) {
;;;492          if ((Diff&1) ==0)
;;;493            goto WriteDDPTBit0;
;;;494          goto WriteDDPTBit1;
;;;495        } else {
;;;496          if ((Diff&1) ==0)
;;;497            goto WriteDDPBit0;
;;;498          goto WriteDDPBit1;
;;;499        }
;;;500      /*
;;;501              Write without transparency
;;;502      */
;;;503      WriteDDPBit0:
;;;504        TFT_DrawPoint(x+0, y, (pixels>>4));
;;;505        if (!--xsize)
;;;506          return;
;;;507      WriteDDPBit1:
;;;508        TFT_DrawPoint(x+1, y, (pixels&0xf));
;;;509        if (!--xsize)
;;;510          return;
;;;511        x+=2;
;;;512        pixels = *(++p);
;;;513        goto WriteDDPBit0;
;;;514      /*
;;;515              Write with transparency
;;;516      */
;;;517      WriteDDPTBit0:
;;;518        if (pixels>>4)
;;;519          TFT_DrawPoint(x+0, y, (pixels>>4));
;;;520        if (!--xsize)
;;;521          return;
;;;522      WriteDDPTBit1:
;;;523        if (pixels&0xf)
;;;524          TFT_DrawPoint(x+1, y, (pixels&0xf));
;;;525        if (!--xsize)
;;;526          return;
;;;527        x+=2;
;;;528        pixels = *(++p);
;;;529        goto WriteDDPTBit0;
;;;530      }
;;;531    }
000742  e8bd87f0          POP      {r4-r10,pc}
                  |L1.1862|
000746  bf00              NOP                            ;464
                  |L1.1864|
000748  f005000f          AND      r0,r5,#0xf            ;465
00074c  f83a2010          LDRH     r2,[r10,r0,LSL #1]    ;465
000750  b2b1              UXTH     r1,r6                 ;465
000752  1c60              ADDS     r0,r4,#1              ;465
000754  b280              UXTH     r0,r0                 ;465
000756  f7fffffe          BL       TFT_DrawPoint
00075a  f1a70001          SUB      r0,r7,#1              ;466
00075e  0007              MOVS     r7,r0                 ;466
000760  d100              BNE      |L1.1892|
000762  e7ee              B        |L1.1858|
                  |L1.1892|
000764  f1040402          ADD      r4,r4,#2              ;468
000768  f1080001          ADD      r0,r8,#1              ;469
00076c  4680              MOV      r8,r0                 ;469
00076e  7805              LDRB     r5,[r0,#0]            ;469
000770  e7dc              B        |L1.1836|
                  |L1.1906|
000772  1128              ASRS     r0,r5,#4              ;475
000774  d006              BEQ      |L1.1924|
000776  1128              ASRS     r0,r5,#4              ;476
000778  f83a2010          LDRH     r2,[r10,r0,LSL #1]    ;476
00077c  b2b1              UXTH     r1,r6                 ;476
00077e  b2a0              UXTH     r0,r4                 ;476
000780  f7fffffe          BL       TFT_DrawPoint
                  |L1.1924|
000784  f1a70001          SUB      r0,r7,#1              ;477
000788  0007              MOVS     r7,r0                 ;477
00078a  d100              BNE      |L1.1934|
00078c  e7d9              B        |L1.1858|
                  |L1.1934|
00078e  bf00              NOP                            ;479
                  |L1.1936|
000790  f0150f0f          TST      r5,#0xf               ;480
000794  d008              BEQ      |L1.1960|
000796  f005000f          AND      r0,r5,#0xf            ;481
00079a  f83a2010          LDRH     r2,[r10,r0,LSL #1]    ;481
00079e  b2b1              UXTH     r1,r6                 ;481
0007a0  1c60              ADDS     r0,r4,#1              ;481
0007a2  b280              UXTH     r0,r0                 ;481
0007a4  f7fffffe          BL       TFT_DrawPoint
                  |L1.1960|
0007a8  f1a70001          SUB      r0,r7,#1              ;482
0007ac  0007              MOVS     r7,r0                 ;482
0007ae  d100              BNE      |L1.1970|
0007b0  e7c7              B        |L1.1858|
                  |L1.1970|
0007b2  f1040402          ADD      r4,r4,#2              ;484
0007b6  f1080001          ADD      r0,r8,#1              ;485
0007ba  4680              MOV      r8,r0                 ;485
0007bc  7805              LDRB     r5,[r0,#0]            ;485
0007be  e7d8              B        |L1.1906|
                  |L1.1984|
0007c0  4824              LDR      r0,|L1.2132|
0007c2  7c00              LDRB     r0,[r0,#0x10]         ;491  ; GUI_Context
0007c4  f0100f02          TST      r0,#2                 ;491
0007c8  d004              BEQ      |L1.2004|
0007ca  f0190f01          TST      r9,#1                 ;492
0007ce  d100              BNE      |L1.2002|
0007d0  e023              B        |L1.2074|
                  |L1.2002|
0007d2  e02f              B        |L1.2100|
                  |L1.2004|
0007d4  f0190f01          TST      r9,#1                 ;496
0007d8  d100              BNE      |L1.2012|
0007da  e000              B        |L1.2014|
                  |L1.2012|
0007dc  e00a              B        |L1.2036|
                  |L1.2014|
0007de  112a              ASRS     r2,r5,#4              ;504
0007e0  b2b1              UXTH     r1,r6                 ;504
0007e2  b2a0              UXTH     r0,r4                 ;504
0007e4  f7fffffe          BL       TFT_DrawPoint
0007e8  f1a70001          SUB      r0,r7,#1              ;505
0007ec  0007              MOVS     r7,r0                 ;505
0007ee  d100              BNE      |L1.2034|
0007f0  e7a7              B        |L1.1858|
                  |L1.2034|
0007f2  bf00              NOP                            ;507
                  |L1.2036|
0007f4  f005020f          AND      r2,r5,#0xf            ;508
0007f8  b2b1              UXTH     r1,r6                 ;508
0007fa  1c60              ADDS     r0,r4,#1              ;508
0007fc  b280              UXTH     r0,r0                 ;508
0007fe  f7fffffe          BL       TFT_DrawPoint
000802  f1a70001          SUB      r0,r7,#1              ;509
000806  0007              MOVS     r7,r0                 ;509
000808  d100              BNE      |L1.2060|
00080a  e79a              B        |L1.1858|
                  |L1.2060|
00080c  f1040402          ADD      r4,r4,#2              ;511
000810  f1080001          ADD      r0,r8,#1              ;512
000814  4680              MOV      r8,r0                 ;512
000816  7805              LDRB     r5,[r0,#0]            ;512
000818  e7e1              B        |L1.2014|
                  |L1.2074|
00081a  1128              ASRS     r0,r5,#4              ;518
00081c  d004              BEQ      |L1.2088|
00081e  112a              ASRS     r2,r5,#4              ;519
000820  b2b1              UXTH     r1,r6                 ;519
000822  b2a0              UXTH     r0,r4                 ;519
000824  f7fffffe          BL       TFT_DrawPoint
                  |L1.2088|
000828  f1a70001          SUB      r0,r7,#1              ;520
00082c  0007              MOVS     r7,r0                 ;520
00082e  d100              BNE      |L1.2098|
000830  e787              B        |L1.1858|
                  |L1.2098|
000832  bf00              NOP                            ;522
                  |L1.2100|
000834  f0150f0f          TST      r5,#0xf               ;523
000838  d006              BEQ      |L1.2120|
00083a  f005020f          AND      r2,r5,#0xf            ;524
00083e  b2b1              UXTH     r1,r6                 ;524
000840  1c60              ADDS     r0,r4,#1              ;524
000842  b280              UXTH     r0,r0                 ;524
000844  f7fffffe          BL       TFT_DrawPoint
                  |L1.2120|
000848  f1a70001          SUB      r0,r7,#1              ;525
00084c  0007              MOVS     r7,r0                 ;525
00084e  d103              BNE      |L1.2136|
000850  e777              B        |L1.1858|
000852  0000              DCW      0x0000
                  |L1.2132|
                          DCD      GUI_Context
                  |L1.2136|
000858  f1040402          ADD      r4,r4,#2              ;527
00085c  f1080001          ADD      r0,r8,#1              ;528
000860  4680              MOV      r8,r0                 ;528
000862  7805              LDRB     r5,[r0,#0]            ;528
000864  e7d9              B        |L1.2074|
;;;532    
                          ENDP

                  DrawBitLine8BPP PROC
;;;533    void DrawBitLine8BPP(int x, int y, U8 const*p, int xsize, const LCD_PIXELINDEX*pTrans) {
000866  e92d47f0          PUSH     {r4-r10,lr}
00086a  4604              MOV      r4,r0
00086c  4688              MOV      r8,r1
00086e  4615              MOV      r5,r2
000870  461e              MOV      r6,r3
000872  f8dd9020          LDR      r9,[sp,#0x20]
;;;534      LCD_PIXELINDEX pixel;
;;;535      if ((GUI_Context.DrawMode & LCD_DRAWMODE_TRANS)==0) {
000876  4884              LDR      r0,|L1.2696|
000878  7c00              LDRB     r0,[r0,#0x10]  ; GUI_Context
00087a  f0100f02          TST      r0,#2
00087e  d124              BNE      |L1.2250|
;;;536        if (pTrans) {
000880  f1b90f00          CMP      r9,#0
000884  d011              BEQ      |L1.2218|
;;;537          for (;xsize > 0; xsize--,x++,p++) {
000886  e00d              B        |L1.2212|
                  |L1.2184|
;;;538            pixel = *p;
000888  782f              LDRB     r7,[r5,#0]
;;;539            TFT_DrawPoint(x, y, *(pTrans+pixel));
00088a  f8392017          LDRH     r2,[r9,r7,LSL #1]
00088e  fa1ff188          UXTH     r1,r8
000892  b2a0              UXTH     r0,r4
000894  f7fffffe          BL       TFT_DrawPoint
000898  f1a60601          SUB      r6,r6,#1              ;537
00089c  f1040401          ADD      r4,r4,#1              ;537
0008a0  f1050501          ADD      r5,r5,#1              ;537
                  |L1.2212|
0008a4  2e00              CMP      r6,#0                 ;537
0008a6  dcef              BGT      |L1.2184|
0008a8  e036              B        |L1.2328|
                  |L1.2218|
;;;540          }
;;;541        } else {
;;;542          for (;xsize > 0; xsize--,x++,p++) {
0008aa  e00b              B        |L1.2244|
                  |L1.2220|
;;;543            TFT_DrawPoint(x, y, *p);
0008ac  782a              LDRB     r2,[r5,#0]
0008ae  fa1ff188          UXTH     r1,r8
0008b2  b2a0              UXTH     r0,r4
0008b4  f7fffffe          BL       TFT_DrawPoint
0008b8  f1a60601          SUB      r6,r6,#1              ;542
0008bc  f1040401          ADD      r4,r4,#1              ;542
0008c0  f1050501          ADD      r5,r5,#1              ;542
                  |L1.2244|
0008c4  2e00              CMP      r6,#0                 ;542
0008c6  dcf1              BGT      |L1.2220|
0008c8  e026              B        |L1.2328|
                  |L1.2250|
;;;544          }
;;;545        }
;;;546      } else {   /* Handle transparent bitmap */
;;;547        if (pTrans) {
0008ca  f1b90f00          CMP      r9,#0
0008ce  d012              BEQ      |L1.2294|
;;;548          for (; xsize > 0; xsize--, x++, p++) {
0008d0  e00e              B        |L1.2288|
                  |L1.2258|
;;;549            pixel = *p;
0008d2  782f              LDRB     r7,[r5,#0]
;;;550            if (pixel) {
0008d4  b137              CBZ      r7,|L1.2276|
;;;551              TFT_DrawPoint(x+0, y, *(pTrans+pixel));
0008d6  f8392017          LDRH     r2,[r9,r7,LSL #1]
0008da  fa1ff188          UXTH     r1,r8
0008de  b2a0              UXTH     r0,r4
0008e0  f7fffffe          BL       TFT_DrawPoint
                  |L1.2276|
0008e4  f1a60601          SUB      r6,r6,#1              ;548
0008e8  f1040401          ADD      r4,r4,#1              ;548
0008ec  f1050501          ADD      r5,r5,#1              ;548
                  |L1.2288|
0008f0  2e00              CMP      r6,#0                 ;548
0008f2  dcee              BGT      |L1.2258|
0008f4  e010              B        |L1.2328|
                  |L1.2294|
;;;552            }
;;;553          }
;;;554        } else {
;;;555          for (; xsize > 0; xsize--, x++, p++) {
0008f6  e00d              B        |L1.2324|
                  |L1.2296|
;;;556            pixel = *p;
0008f8  782f              LDRB     r7,[r5,#0]
;;;557            if (pixel) {
0008fa  b12f              CBZ      r7,|L1.2312|
;;;558              TFT_DrawPoint(x+0, y, pixel);
0008fc  463a              MOV      r2,r7
0008fe  fa1ff188          UXTH     r1,r8
000902  b2a0              UXTH     r0,r4
000904  f7fffffe          BL       TFT_DrawPoint
                  |L1.2312|
000908  f1a60601          SUB      r6,r6,#1              ;555
00090c  f1040401          ADD      r4,r4,#1              ;555
000910  f1050501          ADD      r5,r5,#1              ;555
                  |L1.2324|
000914  2e00              CMP      r6,#0                 ;555
000916  dcef              BGT      |L1.2296|
                  |L1.2328|
;;;559            }
;;;560          }
;;;561        }
;;;562      }
;;;563    }
000918  e8bd87f0          POP      {r4-r10,pc}
;;;564    
                          ENDP

                  DrawBitLine16BPP PROC
;;;565    void DrawBitLine16BPP(int x, int y, U16 const*p, int xsize)
00091c  e92d41f0          PUSH     {r4-r8,lr}
;;;566    {
000920  4604              MOV      r4,r0
000922  460f              MOV      r7,r1
000924  4615              MOV      r5,r2
000926  461e              MOV      r6,r3
;;;567      LCD_PIXELINDEX Index;
;;;568    
;;;569      if ((GUI_Context.DrawMode & LCD_DRAWMODE_TRANS)==0)
000928  4857              LDR      r0,|L1.2696|
00092a  7c00              LDRB     r0,[r0,#0x10]  ; GUI_Context
00092c  f0100f02          TST      r0,#2
000930  d10e              BNE      |L1.2384|
;;;570      {
;;;571        for (;xsize > 0; xsize--,x++,p++)
000932  e00a              B        |L1.2378|
                  |L1.2356|
;;;572        {
;;;573          	TFT_DrawPoint(x, y, *p);
000934  882a              LDRH     r2,[r5,#0]
000936  b2b9              UXTH     r1,r7
000938  b2a0              UXTH     r0,r4
00093a  f7fffffe          BL       TFT_DrawPoint
00093e  f1a60601          SUB      r6,r6,#1              ;571
000942  f1040401          ADD      r4,r4,#1              ;571
000946  f1050502          ADD      r5,r5,#2              ;571
                  |L1.2378|
00094a  2e00              CMP      r6,#0                 ;571
00094c  dcf2              BGT      |L1.2356|
00094e  e012              B        |L1.2422|
                  |L1.2384|
;;;574        }
;;;575      }
;;;576      else
;;;577      {   /* Handle transparent bitmap */
;;;578        for (; xsize > 0; xsize--, x++, p++)
000950  e00f              B        |L1.2418|
                  |L1.2386|
;;;579        {
;;;580          Index = *p;
000952  f8b58000          LDRH     r8,[r5,#0]
;;;581          if (Index)
000956  f1b80f00          CMP      r8,#0
00095a  d004              BEQ      |L1.2406|
;;;582          {
;;;583            TFT_DrawPoint(x+0, y, Index);
00095c  4642              MOV      r2,r8
00095e  b2b9              UXTH     r1,r7
000960  b2a0              UXTH     r0,r4
000962  f7fffffe          BL       TFT_DrawPoint
                  |L1.2406|
000966  f1a60601          SUB      r6,r6,#1              ;578
00096a  f1040401          ADD      r4,r4,#1              ;578
00096e  f1050502          ADD      r5,r5,#2              ;578
                  |L1.2418|
000972  2e00              CMP      r6,#0                 ;578
000974  dced              BGT      |L1.2386|
                  |L1.2422|
;;;584          }
;;;585        }
;;;586      }
;;;587    }
000976  e8bd81f0          POP      {r4-r8,pc}
;;;588    
                          ENDP

                  LCD_L0_DrawBitmap PROC
;;;589    void LCD_L0_DrawBitmap   (int x0, int y0,
00097a  e92d4fff          PUSH     {r0-r11,lr}
;;;590                           int xsize, int ysize,
;;;591                           int BitsPerPixel, 
;;;592                           int BytesPerLine,
;;;593                           const U8* pData, int Diff,
;;;594                           const LCD_PIXELINDEX* pTrans)
;;;595    {
00097e  b083              SUB      sp,sp,#0xc
000980  460d              MOV      r5,r1
000982  4690              MOV      r8,r2
000984  461e              MOV      r6,r3
000986  e9ddb910          LDRD     r11,r9,[sp,#0x40]
00098a  f8dda050          LDR      r10,[sp,#0x50]
00098e  9f12              LDR      r7,[sp,#0x48]
;;;596      int i;
;;;597      switch (BitsPerPixel)
000990  f1bb0f04          CMP      r11,#4
000994  d030              BEQ      |L1.2552|
000996  dc06              BGT      |L1.2470|
000998  f1bb0f01          CMP      r11,#1
00099c  d00a              BEQ      |L1.2484|
00099e  f1bb0f02          CMP      r11,#2
0009a2  d15a              BNE      |L1.2650|
0009a4  e017              B        |L1.2518|
                  |L1.2470|
0009a6  f1bb0f08          CMP      r11,#8
0009aa  d036              BEQ      |L1.2586|
0009ac  f1bb0f10          CMP      r11,#0x10
0009b0  d153              BNE      |L1.2650|
0009b2  e043              B        |L1.2620|
                  |L1.2484|
;;;598      {
;;;599      case 1:
;;;600        for (i=0; i<ysize; i++)
0009b4  f04f0400          MOV      r4,#0
0009b8  e00a              B        |L1.2512|
                  |L1.2490|
;;;601        {
;;;602          DrawBitLine1BPP(x0, i+y0, pData, Diff, xsize, pTrans);
0009ba  1961              ADDS     r1,r4,r5
0009bc  e9cd8a00          STRD     r8,r10,[sp,#0]
0009c0  463a              MOV      r2,r7
0009c2  9b13              LDR      r3,[sp,#0x4c]
0009c4  9803              LDR      r0,[sp,#0xc]
0009c6  f7fffffe          BL       DrawBitLine1BPP
;;;603          pData += BytesPerLine;
0009ca  444f              ADD      r7,r7,r9
0009cc  f1040401          ADD      r4,r4,#1              ;600
                  |L1.2512|
0009d0  42b4              CMP      r4,r6                 ;600
0009d2  dbf2              BLT      |L1.2490|
;;;604        }
;;;605        break;
0009d4  e041              B        |L1.2650|
                  |L1.2518|
;;;606      case 2:
;;;607        for (i=0; i<ysize; i++)
0009d6  f04f0400          MOV      r4,#0
0009da  e00a              B        |L1.2546|
                  |L1.2524|
;;;608        {
;;;609          DrawBitLine2BPP(x0, i+y0, pData, Diff, xsize, pTrans);
0009dc  1961              ADDS     r1,r4,r5
0009de  e9cd8a00          STRD     r8,r10,[sp,#0]
0009e2  463a              MOV      r2,r7
0009e4  9b13              LDR      r3,[sp,#0x4c]
0009e6  9803              LDR      r0,[sp,#0xc]
0009e8  f7fffffe          BL       DrawBitLine2BPP
;;;610          pData += BytesPerLine;
0009ec  444f              ADD      r7,r7,r9
0009ee  f1040401          ADD      r4,r4,#1              ;607
                  |L1.2546|
0009f2  42b4              CMP      r4,r6                 ;607
0009f4  dbf2              BLT      |L1.2524|
;;;611        }
;;;612        break;
0009f6  e030              B        |L1.2650|
                  |L1.2552|
;;;613      case 4:
;;;614        for (i=0; i<ysize; i++)
0009f8  f04f0400          MOV      r4,#0
0009fc  e00a              B        |L1.2580|
                  |L1.2558|
;;;615        {
;;;616          DrawBitLine4BPP(x0, i+y0, pData, Diff, xsize, pTrans);
0009fe  1961              ADDS     r1,r4,r5
000a00  e9cd8a00          STRD     r8,r10,[sp,#0]
000a04  463a              MOV      r2,r7
000a06  9b13              LDR      r3,[sp,#0x4c]
000a08  9803              LDR      r0,[sp,#0xc]
000a0a  f7fffffe          BL       DrawBitLine4BPP
;;;617          pData += BytesPerLine;
000a0e  444f              ADD      r7,r7,r9
000a10  f1040401          ADD      r4,r4,#1              ;614
                  |L1.2580|
000a14  42b4              CMP      r4,r6                 ;614
000a16  dbf2              BLT      |L1.2558|
;;;618        }
;;;619        break;
000a18  e01f              B        |L1.2650|
                  |L1.2586|
;;;620      case 8:
;;;621        for (i=0; i<ysize; i++)
000a1a  f04f0400          MOV      r4,#0
000a1e  e00a              B        |L1.2614|
                  |L1.2592|
;;;622        {
;;;623          DrawBitLine8BPP(x0, i+y0, pData, xsize, pTrans);
000a20  1961              ADDS     r1,r4,r5
000a22  4643              MOV      r3,r8
000a24  463a              MOV      r2,r7
000a26  f8cda000          STR      r10,[sp,#0]
000a2a  9803              LDR      r0,[sp,#0xc]
000a2c  f7fffffe          BL       DrawBitLine8BPP
;;;624          pData += BytesPerLine;
000a30  444f              ADD      r7,r7,r9
000a32  f1040401          ADD      r4,r4,#1              ;621
                  |L1.2614|
000a36  42b4              CMP      r4,r6                 ;621
000a38  dbf2              BLT      |L1.2592|
;;;625        }
;;;626        break;
000a3a  e00e              B        |L1.2650|
                  |L1.2620|
;;;627      case 16:
;;;628        for (i=0; i<ysize; i++)
000a3c  f04f0400          MOV      r4,#0
000a40  e008              B        |L1.2644|
                  |L1.2626|
;;;629        {
;;;630          DrawBitLine16BPP(x0, i+y0, (U16*)pData, xsize);
000a42  1961              ADDS     r1,r4,r5
000a44  4643              MOV      r3,r8
000a46  463a              MOV      r2,r7
000a48  9803              LDR      r0,[sp,#0xc]
000a4a  f7fffffe          BL       DrawBitLine16BPP
;;;631          pData += BytesPerLine;
000a4e  444f              ADD      r7,r7,r9
000a50  f1040401          ADD      r4,r4,#1              ;628
                  |L1.2644|
000a54  42b4              CMP      r4,r6                 ;628
000a56  dbf4              BLT      |L1.2626|
;;;632        }
;;;633        break;
000a58  bf00              NOP      
                  |L1.2650|
000a5a  bf00              NOP                            ;605
;;;634      }
;;;635    }
000a5c  b007              ADD      sp,sp,#0x1c
000a5e  e8bd8ff0          POP      {r4-r11,pc}
;;;636    
                          ENDP

                  LCD_L0_SetOrg PROC
;;;640    */
;;;641    void LCD_L0_SetOrg(int x, int y) {
000a62  bf00              NOP      
;;;642      GUI_USE_PARA(x);
;;;643      GUI_USE_PARA(y);
000a64  bf00              NOP      
;;;644    }
000a66  4770              BX       lr
;;;645    
                          ENDP

                  LCD_L0_On PROC
;;;649    */
;;;650    void LCD_On (void) {}
000a68  4770              BX       lr
;;;651    void LCD_Off(void) {}
                          ENDP

                  LCD_L0_Off PROC
000a6a  4770              BX       lr
;;;652    
                          ENDP

                  LCD_L0_Init PROC
;;;656    */
;;;657    int LCD_L0_Init(void) 
000a6c  b510              PUSH     {r4,lr}
;;;658    {
;;;659    	LCD_init();
000a6e  f7fffffe          BL       LCD_init
;;;660    	return 0;
000a72  2000              MOVS     r0,#0
;;;661    }
000a74  bd10              POP      {r4,pc}
;;;662    
                          ENDP

                  LCD_L0_SetLUTEntry PROC
;;;666    */
;;;667    void LCD_L0_SetLUTEntry(U8 Pos, LCD_COLOR Color) {
000a76  bf00              NOP      
;;;668      GUI_USE_PARA(Pos);
;;;669      GUI_USE_PARA(Color);
000a78  bf00              NOP      
;;;670    }
000a7a  4770              BX       lr
;;;671    
                          ENDP

                  LCD_L0_GetDevFunc PROC
;;;675    */
;;;676    void * LCD_L0_GetDevFunc(int Index) {
000a7c  4601              MOV      r1,r0
;;;677      GUI_USE_PARA(Index);
000a7e  bf00              NOP      
;;;678      return NULL;
000a80  f04f0000          MOV      r0,#0
;;;679    }
000a84  4770              BX       lr
                          ENDP

000a86  0000              DCW      0x0000
                  |L1.2696|
                          DCD      GUI_Context

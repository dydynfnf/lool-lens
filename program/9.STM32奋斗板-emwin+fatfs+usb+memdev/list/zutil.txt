; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\zutil.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\zutil.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\FWlib\inc -I.\user -I.\CM3 -I.\MALLOC -I.\TFT -I.\EMWIN\EMWIN_INC -I.\EMWIN\DEMO -I.\PNG -I.\FATFS -I.\SDIO -I.\USB\inc -I.\USBCFG\inc -IE:\material\GUI\9.STM32·Ü¶·°å-emwin+fatfs+usb+memdev\RTE -Id:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.1.0\Device\Include -Id:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=515 -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\zutil.crf PNG\zutil.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  zlibVersion PROC
;;;26     
;;;27     const char * ZEXPORT zlibVersion()
000000  a030              ADR      r0,|L1.196|
;;;28     {
;;;29         return ZLIB_VERSION;
;;;30     }
000002  4770              BX       lr
;;;31     
                          ENDP

                  zlibCompileFlags PROC
;;;32     uLong ZEXPORT zlibCompileFlags()
000004  2000              MOVS     r0,#0
;;;33     {
;;;34         uLong flags;
;;;35     
;;;36         flags = 0;
;;;37         switch (sizeof(uInt)) {
000006  2104              MOVS     r1,#4
000008  2902              CMP      r1,#2
00000a  d004              BEQ      |L1.22|
00000c  2904              CMP      r1,#4
00000e  d003              BEQ      |L1.24|
000010  2908              CMP      r1,#8
000012  d105              BNE      |L1.32|
000014  e002              B        |L1.28|
                  |L1.22|
;;;38         case 2:     break;
000016  e005              B        |L1.36|
                  |L1.24|
;;;39         case 4:     flags += 1;     break;
000018  1c40              ADDS     r0,r0,#1
00001a  e003              B        |L1.36|
                  |L1.28|
;;;40         case 8:     flags += 2;     break;
00001c  1c80              ADDS     r0,r0,#2
00001e  e001              B        |L1.36|
                  |L1.32|
;;;41         default:    flags += 3;
000020  1cc0              ADDS     r0,r0,#3
000022  bf00              NOP                            ;37
                  |L1.36|
000024  bf00              NOP                            ;38
;;;42         }
;;;43         switch (sizeof(uLong)) {
000026  2104              MOVS     r1,#4
000028  2902              CMP      r1,#2
00002a  d004              BEQ      |L1.54|
00002c  2904              CMP      r1,#4
00002e  d003              BEQ      |L1.56|
000030  2908              CMP      r1,#8
000032  d105              BNE      |L1.64|
000034  e002              B        |L1.60|
                  |L1.54|
;;;44         case 2:     break;
000036  e005              B        |L1.68|
                  |L1.56|
;;;45         case 4:     flags += 1 << 2;        break;
000038  1d00              ADDS     r0,r0,#4
00003a  e003              B        |L1.68|
                  |L1.60|
;;;46         case 8:     flags += 2 << 2;        break;
00003c  3008              ADDS     r0,r0,#8
00003e  e001              B        |L1.68|
                  |L1.64|
;;;47         default:    flags += 3 << 2;
000040  300c              ADDS     r0,r0,#0xc
000042  bf00              NOP                            ;43
                  |L1.68|
000044  bf00              NOP                            ;44
;;;48         }
;;;49         switch (sizeof(voidpf)) {
000046  2104              MOVS     r1,#4
000048  2902              CMP      r1,#2
00004a  d004              BEQ      |L1.86|
00004c  2904              CMP      r1,#4
00004e  d003              BEQ      |L1.88|
000050  2908              CMP      r1,#8
000052  d105              BNE      |L1.96|
000054  e002              B        |L1.92|
                  |L1.86|
;;;50         case 2:     break;
000056  e005              B        |L1.100|
                  |L1.88|
;;;51         case 4:     flags += 1 << 4;        break;
000058  3010              ADDS     r0,r0,#0x10
00005a  e003              B        |L1.100|
                  |L1.92|
;;;52         case 8:     flags += 2 << 4;        break;
00005c  3020              ADDS     r0,r0,#0x20
00005e  e001              B        |L1.100|
                  |L1.96|
;;;53         default:    flags += 3 << 4;
000060  3030              ADDS     r0,r0,#0x30
000062  bf00              NOP                            ;49
                  |L1.100|
000064  bf00              NOP                            ;50
;;;54         }
;;;55         switch (sizeof(z_off_t)) {
000066  2104              MOVS     r1,#4
000068  2902              CMP      r1,#2
00006a  d004              BEQ      |L1.118|
00006c  2904              CMP      r1,#4
00006e  d003              BEQ      |L1.120|
000070  2908              CMP      r1,#8
000072  d105              BNE      |L1.128|
000074  e002              B        |L1.124|
                  |L1.118|
;;;56         case 2:     break;
000076  e005              B        |L1.132|
                  |L1.120|
;;;57         case 4:     flags += 1 << 6;        break;
000078  3040              ADDS     r0,r0,#0x40
00007a  e003              B        |L1.132|
                  |L1.124|
;;;58         case 8:     flags += 2 << 6;        break;
00007c  3080              ADDS     r0,r0,#0x80
00007e  e001              B        |L1.132|
                  |L1.128|
;;;59         default:    flags += 3 << 6;
000080  30c0              ADDS     r0,r0,#0xc0
000082  bf00              NOP                            ;55
                  |L1.132|
000084  bf00              NOP                            ;56
;;;60         }
;;;61     #ifdef DEBUG
;;;62         flags += 1 << 8;
;;;63     #endif
;;;64     #if defined(ASMV) || defined(ASMINF)
;;;65         flags += 1 << 9;
;;;66     #endif
;;;67     #ifdef ZLIB_WINAPI
;;;68         flags += 1 << 10;
;;;69     #endif
;;;70     #ifdef BUILDFIXED
;;;71         flags += 1 << 12;
;;;72     #endif
;;;73     #ifdef DYNAMIC_CRC_TABLE
;;;74         flags += 1 << 13;
;;;75     #endif
;;;76     #ifdef NO_GZCOMPRESS
;;;77         flags += 1L << 16;
;;;78     #endif
;;;79     #ifdef NO_GZIP
;;;80         flags += 1L << 17;
;;;81     #endif
;;;82     #ifdef PKZIP_BUG_WORKAROUND
;;;83         flags += 1L << 20;
;;;84     #endif
;;;85     #ifdef FASTEST
;;;86         flags += 1L << 21;
;;;87     #endif
;;;88     #ifdef STDC
;;;89     #  ifdef NO_vsnprintf
;;;90             flags += 1L << 25;
;;;91     #    ifdef HAS_vsprintf_void
;;;92             flags += 1L << 26;
;;;93     #    endif
;;;94     #  else
;;;95     #    ifdef HAS_vsnprintf_void
;;;96             flags += 1L << 26;
;;;97     #    endif
;;;98     #  endif
;;;99     #else
;;;100            flags += 1L << 24;
;;;101    #  ifdef NO_snprintf
;;;102            flags += 1L << 25;
;;;103    #    ifdef HAS_sprintf_void
;;;104            flags += 1L << 26;
;;;105    #    endif
;;;106    #  else
;;;107    #    ifdef HAS_snprintf_void
;;;108            flags += 1L << 26;
;;;109    #    endif
;;;110    #  endif
;;;111    #endif
;;;112        return flags;
;;;113    }
000086  4770              BX       lr
;;;114    
                          ENDP

                  zError PROC
;;;132     */
;;;133    const char * ZEXPORT zError(err)
000088  4601              MOV      r1,r0
;;;134        int err;
;;;135    {
;;;136        return ERR_MSG(err);
00008a  f1c10002          RSB      r0,r1,#2
00008e  4a0f              LDR      r2,|L1.204|
000090  f8520020          LDR      r0,[r2,r0,LSL #2]
;;;137    }
000094  4770              BX       lr
;;;138    
                          ENDP

                  zcalloc PROC
;;;299    
;;;300    voidpf zcalloc (opaque, items, size)
000096  b570              PUSH     {r4-r6,lr}
;;;301        voidpf opaque;
;;;302        unsigned items;
;;;303        unsigned size;
;;;304    {
000098  4606              MOV      r6,r0
00009a  460c              MOV      r4,r1
00009c  4615              MOV      r5,r2
;;;305        if (opaque) items += size - size; /* make compiler happy */
00009e  b10e              CBZ      r6,|L1.164|
0000a0  1b68              SUBS     r0,r5,r5
0000a2  4404              ADD      r4,r4,r0
                  |L1.164|
;;;306        return sizeof(uInt) > 2 ? (voidpf)malloc(items * size) :
0000a4  fb04f005          MUL      r0,r4,r5
0000a8  f7fffffe          BL       malloc
;;;307                                  (voidpf)calloc(items, size);
;;;308    }
0000ac  bd70              POP      {r4-r6,pc}
;;;309    
                          ENDP

                  zcfree PROC
;;;310    void  zcfree (opaque, ptr)
0000ae  b570              PUSH     {r4-r6,lr}
;;;311        voidpf opaque;
;;;312        voidpf ptr;
;;;313    {
0000b0  4605              MOV      r5,r0
0000b2  460c              MOV      r4,r1
;;;314        free(ptr);
0000b4  4620              MOV      r0,r4
0000b6  f7fffffe          BL       free
;;;315        if (opaque) return; /* make compiler happy */
0000ba  b105              CBZ      r5,|L1.190|
                  |L1.188|
;;;316    }
0000bc  bd70              POP      {r4-r6,pc}
                  |L1.190|
0000be  bf00              NOP      
0000c0  e7fc              B        |L1.188|
;;;317    
                          ENDP

0000c2  0000              DCW      0x0000
                  |L1.196|
0000c4  312e322e          DCB      "1.2.3",0
0000c8  3300    
0000ca  00                DCB      0
0000cb  00                DCB      0
                  |L1.204|
                          DCD      z_errmsg

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  z_errmsg
                          DCD      ||.conststring||
                          DCD      ||.conststring||+0x10
                          DCD      ||.conststring||+0x1c
                          DCD      ||.conststring||+0x20
                          DCD      ||.conststring||+0x2c
                          DCD      ||.conststring||+0x3c
                          DCD      ||.conststring||+0x48
                          DCD      ||.conststring||+0x5c
                          DCD      ||.conststring||+0x6c
                          DCD      ||.conststring||+0x1c

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=2

000000  6e656564          DCB      "need dictionary",0
000004  20646963
000008  74696f6e
00000c  61727900
000010  73747265          DCB      "stream end",0
000014  616d2065
000018  6e6400  
00001b  00                DCB      0
00001c  00                DCB      0
00001d  00                DCB      0
00001e  00                DCB      0
00001f  00                DCB      0
000020  66696c65          DCB      "file error",0
000024  20657272
000028  6f7200  
00002b  00                DCB      0
00002c  73747265          DCB      "stream error",0
000030  616d2065
000034  72726f72
000038  00      
000039  00                DCB      0
00003a  00                DCB      0
00003b  00                DCB      0
00003c  64617461          DCB      "data error",0
000040  20657272
000044  6f7200  
000047  00                DCB      0
000048  696e7375          DCB      "insufficient memory",0
00004c  66666963
000050  69656e74
000054  206d656d
000058  6f727900
00005c  62756666          DCB      "buffer error",0
000060  65722065
000064  72726f72
000068  00      
000069  00                DCB      0
00006a  00                DCB      0
00006b  00                DCB      0
00006c  696e636f          DCB      "incompatible version",0
000070  6d706174
000074  69626c65
000078  20766572
00007c  73696f6e
000080  00      

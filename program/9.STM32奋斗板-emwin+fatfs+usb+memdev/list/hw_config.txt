; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\hw_config.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\hw_config.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\FWlib\inc -I.\user -I.\CM3 -I.\MALLOC -I.\TFT -I.\EMWIN\EMWIN_INC -I.\EMWIN\DEMO -I.\PNG -I.\FATFS -I.\SDIO -I.\USB\inc -I.\USBCFG\inc -IE:\material\GUI\STM32·Ü¶·°å-emwin+fatfs+usb+memdev\RTE -Id:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.1.0\Device\Include -Id:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=515 -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\hw_config.crf USBCFG\scr\hw_config.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  Enter_LowPowerMode PROC
;;;20     *******************************************************************************/
;;;21     void Enter_LowPowerMode(void)
000000  2003              MOVS     r0,#3
;;;22     {
;;;23       /* Set the device state to suspend */
;;;24       bDeviceState = SUSPENDED;
000002  4934              LDR      r1,|L1.212|
000004  6008              STR      r0,[r1,#0]  ; bDeviceState
;;;25     }
000006  4770              BX       lr
;;;26     
                          ENDP

                  Leave_LowPowerMode PROC
;;;32     *******************************************************************************/
;;;33     void Leave_LowPowerMode(void)
000008  4833              LDR      r0,|L1.216|
;;;34     {
;;;35       DEVICE_INFO *pInfo = &Device_Info;
;;;36     
;;;37       /* Set the device state to the correct state */
;;;38       if (pInfo->Current_Configuration != 0)
00000a  7a81              LDRB     r1,[r0,#0xa]
00000c  b119              CBZ      r1,|L1.22|
;;;39       {
;;;40         /* Device configured */
;;;41         bDeviceState = CONFIGURED;
00000e  2105              MOVS     r1,#5
000010  4a30              LDR      r2,|L1.212|
000012  6011              STR      r1,[r2,#0]  ; bDeviceState
000014  e002              B        |L1.28|
                  |L1.22|
;;;42       }
;;;43       else
;;;44       {
;;;45         bDeviceState = ATTACHED;
000016  2101              MOVS     r1,#1
000018  4a2e              LDR      r2,|L1.212|
00001a  6011              STR      r1,[r2,#0]  ; bDeviceState
                  |L1.28|
;;;46       }
;;;47     
;;;48     }
00001c  4770              BX       lr
;;;49     
                          ENDP

                  Led_RW_ON PROC
;;;59     *******************************************************************************/
;;;60     void Led_RW_ON(void)
00001e  b510              PUSH     {r4,lr}
;;;61     {
;;;62       Led_ON();								 //LED1 ÁÁ
000020  2120              MOVS     r1,#0x20
000022  482e              LDR      r0,|L1.220|
000024  f7fffffe          BL       GPIO_SetBits
;;;63     }
000028  bd10              POP      {r4,pc}
;;;64     
                          ENDP

                  Led_RW_OFF PROC
;;;71     *******************************************************************************/
;;;72     void Led_RW_OFF(void)
00002a  b510              PUSH     {r4,lr}
;;;73     {
;;;74       Led_OFF();								 //LED1 Ãð
00002c  2120              MOVS     r1,#0x20
00002e  482b              LDR      r0,|L1.220|
000030  f7fffffe          BL       GPIO_ResetBits
;;;75     }
000034  bd10              POP      {r4,pc}
;;;76     /*******************************************************************************
                          ENDP

                  USB_Configured_LED PROC
;;;82     *******************************************************************************/
;;;83     void USB_Configured_LED(void)
000036  b510              PUSH     {r4,lr}
;;;84     {
;;;85        Led_ON();								 //LED1 ÁÁ
000038  2120              MOVS     r1,#0x20
00003a  4828              LDR      r0,|L1.220|
00003c  f7fffffe          BL       GPIO_SetBits
;;;86     }
000040  bd10              POP      {r4,pc}
;;;87     
                          ENDP

                  USB_NotConfigured_LED PROC
;;;94     *******************************************************************************/
;;;95     void USB_NotConfigured_LED(void)
000042  b510              PUSH     {r4,lr}
;;;96     {
;;;97       Led_OFF();								 //LED1 Ãð
000044  2120              MOVS     r1,#0x20
000046  4825              LDR      r0,|L1.220|
000048  f7fffffe          BL       GPIO_ResetBits
;;;98     }
00004c  bd10              POP      {r4,pc}
;;;99     
                          ENDP

                  USB_Cable_Config PROC
;;;105    *******************************************************************************/
;;;106    void USB_Cable_Config (FunctionalState NewState)
00004e  b510              PUSH     {r4,lr}
;;;107    {  
000050  4604              MOV      r4,r0
;;;108      if (NewState != DISABLE)
000052  b12c              CBZ      r4,|L1.96|
;;;109      {
;;;110        GPIO_ResetBits(GPIOC, GPIO_Pin_13);
000054  f44f5100          MOV      r1,#0x2000
000058  4821              LDR      r0,|L1.224|
00005a  f7fffffe          BL       GPIO_ResetBits
00005e  e004              B        |L1.106|
                  |L1.96|
;;;111      }
;;;112      else
;;;113      {
;;;114        GPIO_SetBits(GPIOC, GPIO_Pin_13);
000060  f44f5100          MOV      r1,#0x2000
000064  481e              LDR      r0,|L1.224|
000066  f7fffffe          BL       GPIO_SetBits
                  |L1.106|
;;;115      }	
;;;116    }
00006a  bd10              POP      {r4,pc}
;;;117    
                          ENDP

                  Get_SerialNum PROC
;;;124    *******************************************************************************/
;;;125    void Get_SerialNum(void)
00006c  b510              PUSH     {r4,lr}
;;;126    {
;;;127      uint32_t Device_Serial0, Device_Serial1, Device_Serial2;
;;;128    
;;;129      Device_Serial0 = *(__IO uint32_t*)(0x1FFFF7E8);
00006e  4b1d              LDR      r3,|L1.228|
000070  6818              LDR      r0,[r3,#0]
;;;130      Device_Serial1 = *(__IO uint32_t*)(0x1FFFF7EC);
000072  1d1b              ADDS     r3,r3,#4
000074  6819              LDR      r1,[r3,#0]
;;;131      Device_Serial2 = *(__IO uint32_t*)(0x1FFFF7F0);
000076  1d1b              ADDS     r3,r3,#4
000078  681a              LDR      r2,[r3,#0]
;;;132    
;;;133      if (Device_Serial0 != 0)
00007a  b1a8              CBZ      r0,|L1.168|
;;;134      {
;;;135        MASS_StringSerial[2] = (uint8_t)(Device_Serial0 & 0x000000FF);
00007c  4c1a              LDR      r4,|L1.232|
00007e  70a0              STRB     r0,[r4,#2]
;;;136        MASS_StringSerial[4] = (uint8_t)((Device_Serial0 & 0x0000FF00) >> 8);
000080  0a03              LSRS     r3,r0,#8
000082  7123              STRB     r3,[r4,#4]
;;;137        MASS_StringSerial[6] = (uint8_t)((Device_Serial0 & 0x00FF0000) >> 16);
000084  0c03              LSRS     r3,r0,#16
000086  71a3              STRB     r3,[r4,#6]
;;;138        MASS_StringSerial[8] = (uint8_t)((Device_Serial0 & 0xFF000000) >> 24);
000088  0e03              LSRS     r3,r0,#24
00008a  7223              STRB     r3,[r4,#8]
;;;139    
;;;140        MASS_StringSerial[10] = (uint8_t)(Device_Serial1 & 0x000000FF);
00008c  72a1              STRB     r1,[r4,#0xa]
;;;141        MASS_StringSerial[12] = (uint8_t)((Device_Serial1 & 0x0000FF00) >> 8);
00008e  0a0b              LSRS     r3,r1,#8
000090  7323              STRB     r3,[r4,#0xc]
;;;142        MASS_StringSerial[14] = (uint8_t)((Device_Serial1 & 0x00FF0000) >> 16);
000092  0c0b              LSRS     r3,r1,#16
000094  73a3              STRB     r3,[r4,#0xe]
;;;143        MASS_StringSerial[16] = (uint8_t)((Device_Serial1 & 0xFF000000) >> 24);
000096  0e0b              LSRS     r3,r1,#24
000098  7423              STRB     r3,[r4,#0x10]
;;;144    
;;;145        MASS_StringSerial[18] = (uint8_t)(Device_Serial2 & 0x000000FF);
00009a  74a2              STRB     r2,[r4,#0x12]
;;;146        MASS_StringSerial[20] = (uint8_t)((Device_Serial2 & 0x0000FF00) >> 8);
00009c  0a13              LSRS     r3,r2,#8
00009e  7523              STRB     r3,[r4,#0x14]
;;;147        MASS_StringSerial[22] = (uint8_t)((Device_Serial2 & 0x00FF0000) >> 16);
0000a0  0c13              LSRS     r3,r2,#16
0000a2  75a3              STRB     r3,[r4,#0x16]
;;;148        MASS_StringSerial[24] = (uint8_t)((Device_Serial2 & 0xFF000000) >> 24);
0000a4  0e13              LSRS     r3,r2,#24
0000a6  7623              STRB     r3,[r4,#0x18]
                  |L1.168|
;;;149      }
;;;150    }
0000a8  bd10              POP      {r4,pc}
;;;151    
                          ENDP

                  USB_Disconnect_Config PROC
;;;157    *******************************************************************************/
;;;158    void USB_Disconnect_Config(void)
0000aa  b508              PUSH     {r3,lr}
;;;159    {
;;;160      GPIO_InitTypeDef GPIO_InitStructure;
;;;161    
;;;162      /* Enable USB_DISCONNECT GPIO clock */
;;;163      RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOC, ENABLE);
0000ac  2101              MOVS     r1,#1
0000ae  2010              MOVS     r0,#0x10
0000b0  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;164    
;;;165      /* USB_DISCONNECT_PIN used as USB pull-up */
;;;166      GPIO_InitStructure.GPIO_Pin = GPIO_Pin_13;
0000b4  f44f5000          MOV      r0,#0x2000
0000b8  f8ad0000          STRH     r0,[sp,#0]
;;;167      GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
0000bc  2003              MOVS     r0,#3
0000be  f88d0002          STRB     r0,[sp,#2]
;;;168      GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_OD;
0000c2  2014              MOVS     r0,#0x14
0000c4  f88d0003          STRB     r0,[sp,#3]
;;;169      GPIO_Init(GPIOC, &GPIO_InitStructure);
0000c8  4669              MOV      r1,sp
0000ca  4805              LDR      r0,|L1.224|
0000cc  f7fffffe          BL       GPIO_Init
;;;170    }
0000d0  bd08              POP      {r3,pc}
;;;171    
                          ENDP

0000d2  0000              DCW      0x0000
                  |L1.212|
                          DCD      bDeviceState
                  |L1.216|
                          DCD      Device_Info
                  |L1.220|
                          DCD      0x40010c00
                  |L1.224|
                          DCD      0x40011000
                  |L1.228|
                          DCD      0x1ffff7e8
                  |L1.232|
                          DCD      MASS_StringSerial

                          AREA ||.data||, DATA, ALIGN=0

                  HSEStartUpStatus
000000  00                DCB      0x00

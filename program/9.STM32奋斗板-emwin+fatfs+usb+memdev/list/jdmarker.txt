; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\jdmarker.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\jdmarker.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\jdmarker.crf GUI\JPEG\jdmarker.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  get_soi PROC
;;;196    LOCAL(boolean)
;;;197    get_soi (j_decompress_ptr cinfo)
000000  b570              PUSH     {r4-r6,lr}
;;;198    /* Process an SOI marker */
;;;199    {
000002  4604              MOV      r4,r0
;;;200      int i;
;;;201      
;;;202      TRACEMS(cinfo, 1, JTRC_SOI);
000004  f04f0066          MOV      r0,#0x66
000008  6821              LDR      r1,[r4,#0]
00000a  6148              STR      r0,[r1,#0x14]
00000c  6820              LDR      r0,[r4,#0]
00000e  f04f0101          MOV      r1,#1
000012  6842              LDR      r2,[r0,#4]
000014  4620              MOV      r0,r4
000016  4790              BLX      r2
;;;203    
;;;204      if (cinfo->marker->saw_SOI)
000018  f8d401b8          LDR      r0,[r4,#0x1b8]
00001c  68c0              LDR      r0,[r0,#0xc]
00001e  b138              CBZ      r0,|L1.48|
;;;205        ERREXIT(cinfo, JERR_SOI_DUPLICATE);
000020  f04f003d          MOV      r0,#0x3d
000024  6821              LDR      r1,[r4,#0]
000026  6148              STR      r0,[r1,#0x14]
000028  6820              LDR      r0,[r4,#0]
00002a  6801              LDR      r1,[r0,#0]
00002c  4620              MOV      r0,r4
00002e  4788              BLX      r1
                  |L1.48|
;;;206    
;;;207      /* Reset all parameters that are defined to be reset by SOI */
;;;208    
;;;209      for (i = 0; i < NUM_ARITH_TBLS; i++) {
000030  f04f0500          MOV      r5,#0
000034  e010              B        |L1.88|
                  |L1.54|
;;;210        cinfo->arith_dc_L[i] = 0;
000036  f04f0100          MOV      r1,#0
00003a  f10400e4          ADD      r0,r4,#0xe4
00003e  5541              STRB     r1,[r0,r5]
;;;211        cinfo->arith_dc_U[i] = 1;
000040  f04f0101          MOV      r1,#1
000044  f10400f4          ADD      r0,r4,#0xf4
000048  5541              STRB     r1,[r0,r5]
;;;212        cinfo->arith_ac_K[i] = 5;
00004a  f04f0105          MOV      r1,#5
00004e  f5047082          ADD      r0,r4,#0x104
000052  5541              STRB     r1,[r0,r5]
000054  f1050501          ADD      r5,r5,#1              ;209
                  |L1.88|
000058  2d10              CMP      r5,#0x10              ;209
00005a  dbec              BLT      |L1.54|
;;;213      }
;;;214      cinfo->restart_interval = 0;
00005c  f04f0000          MOV      r0,#0
000060  f504748a          ADD      r4,r4,#0x114
000064  6020              STR      r0,[r4,#0]
;;;215    
;;;216      /* Set initial assumptions for colorspace etc */
;;;217    
;;;218      cinfo->jpeg_color_space = JCS_UNKNOWN;
000066  f8040cec          STRB     r0,[r4,#-0xec]
;;;219      cinfo->CCIR601_sampling = FALSE; /* Assume non-CCIR sampling??? */
00006a  61a0              STR      r0,[r4,#0x18]
;;;220    
;;;221      cinfo->saw_JFIF_marker = FALSE;
00006c  6060              STR      r0,[r4,#4]
;;;222      cinfo->JFIF_major_version = 1; /* set default JFIF APP0 values */
00006e  f04f0001          MOV      r0,#1
000072  7220              STRB     r0,[r4,#8]
;;;223      cinfo->JFIF_minor_version = 1;
000074  7260              STRB     r0,[r4,#9]
;;;224      cinfo->density_unit = 0;
000076  f04f0000          MOV      r0,#0
00007a  72a0              STRB     r0,[r4,#0xa]
;;;225      cinfo->X_density = 1;
00007c  f04f0001          MOV      r0,#1
000080  81a0              STRH     r0,[r4,#0xc]
;;;226      cinfo->Y_density = 1;
000082  81e0              STRH     r0,[r4,#0xe]
;;;227      cinfo->saw_Adobe_marker = FALSE;
000084  f04f0000          MOV      r0,#0
000088  6120              STR      r0,[r4,#0x10]
;;;228      cinfo->Adobe_transform = 0;
00008a  7520              STRB     r0,[r4,#0x14]
;;;229    
;;;230      cinfo->marker->saw_SOI = TRUE;
00008c  f04f0001          MOV      r0,#1
000090  f8d410a4          LDR      r1,[r4,#0xa4]
000094  f5a4748a          SUB      r4,r4,#0x114
000098  60c8              STR      r0,[r1,#0xc]
;;;231    
;;;232      return TRUE;
;;;233    }
00009a  bd70              POP      {r4-r6,pc}
;;;234    
                          ENDP

                  get_sof PROC
;;;236    LOCAL(boolean)
;;;237    get_sof (j_decompress_ptr cinfo, boolean is_prog, boolean is_arith)
00009c  e92d4ff7          PUSH     {r0-r2,r4-r11,lr}
;;;238    /* Process a SOFn marker */
;;;239    {
0000a0  b082              SUB      sp,sp,#8
0000a2  4604              MOV      r4,r0
;;;240      INT32 length;
;;;241      int c, ci;
;;;242      jpeg_component_info * compptr;
;;;243      INPUT_VARS(cinfo);
0000a4  69a5              LDR      r5,[r4,#0x18]
0000a6  682e              LDR      r6,[r5,#0]
0000a8  686f              LDR      r7,[r5,#4]
;;;244    
;;;245      cinfo->progressive_mode = is_prog;
0000aa  9803              LDR      r0,[sp,#0xc]
0000ac  f8c400dc          STR      r0,[r4,#0xdc]
;;;246      cinfo->arith_code = is_arith;
0000b0  9804              LDR      r0,[sp,#0x10]
0000b2  f8c400e0          STR      r0,[r4,#0xe0]
;;;247    
;;;248      INPUT_2BYTES(cinfo, length, return FALSE);
0000b6  bf00              NOP      
0000b8  b94f              CBNZ     r7,|L1.206|
0000ba  4620              MOV      r0,r4
0000bc  68e9              LDR      r1,[r5,#0xc]
0000be  4788              BLX      r1
0000c0  b918              CBNZ     r0,|L1.202|
0000c2  2000              MOVS     r0,#0
                  |L1.196|
;;;249    
;;;250      INPUT_BYTE(cinfo, cinfo->data_precision, return FALSE);
;;;251      INPUT_2BYTES(cinfo, cinfo->image_height, return FALSE);
;;;252      INPUT_2BYTES(cinfo, cinfo->image_width, return FALSE);
;;;253      INPUT_BYTE(cinfo, cinfo->num_components, return FALSE);
;;;254    
;;;255      length -= 8;
;;;256    
;;;257      TRACEMS4(cinfo, 1, JTRC_SOF, cinfo->unread_marker,
;;;258    	   (int) cinfo->image_width, (int) cinfo->image_height,
;;;259    	   cinfo->num_components);
;;;260    
;;;261      if (cinfo->marker->saw_SOF)
;;;262        ERREXIT(cinfo, JERR_SOF_DUPLICATE);
;;;263    
;;;264      /* We don't support files in which the image height is initially specified */
;;;265      /* as 0 and is later redefined by DNL.  As long as we have to check that,  */
;;;266      /* might as well have a general sanity check. */
;;;267      if (cinfo->image_height <= 0 || cinfo->image_width <= 0
;;;268          || cinfo->num_components <= 0)
;;;269        ERREXIT(cinfo, JERR_EMPTY_IMAGE);
;;;270    
;;;271      if (length != (cinfo->num_components * 3))
;;;272        ERREXIT(cinfo, JERR_BAD_LENGTH);
;;;273    
;;;274      if (cinfo->comp_info == NULL)	/* do only once, even if suspend */
;;;275        cinfo->comp_info = (jpeg_component_info *) (*cinfo->mem->alloc_small)
;;;276    			((j_common_ptr) cinfo, JPOOL_IMAGE,
;;;277    			 cinfo->num_components * SIZEOF(jpeg_component_info));
;;;278      
;;;279      for (ci = 0, compptr = cinfo->comp_info; ci < cinfo->num_components;
;;;280           ci++, compptr++) {
;;;281        compptr->component_index = ci;
;;;282        INPUT_BYTE(cinfo, compptr->component_id, return FALSE);
;;;283        INPUT_BYTE(cinfo, c, return FALSE);
;;;284        compptr->h_samp_factor = (c >> 4) & 15;
;;;285        compptr->v_samp_factor = (c     ) & 15;
;;;286        INPUT_BYTE(cinfo, compptr->quant_tbl_no, return FALSE);
;;;287    
;;;288        TRACEMS4(cinfo, 1, JTRC_SOF_COMPONENT,
;;;289    	     compptr->component_id, compptr->h_samp_factor,
;;;290    	     compptr->v_samp_factor, compptr->quant_tbl_no);
;;;291      }
;;;292    
;;;293      cinfo->marker->saw_SOF = TRUE;
;;;294    
;;;295      INPUT_SYNC(cinfo);
;;;296      return TRUE;
;;;297    }
0000c4  b005              ADD      sp,sp,#0x14
0000c6  e8bd8ff0          POP      {r4-r11,pc}
                  |L1.202|
0000ca  682e              LDR      r6,[r5,#0]            ;248
0000cc  686f              LDR      r7,[r5,#4]            ;248
                  |L1.206|
0000ce  f1a70701          SUB      r7,r7,#1              ;248
0000d2  f8161b01          LDRB     r1,[r6],#1            ;248
0000d6  ea4f2901          LSL      r9,r1,#8              ;248
0000da  b93f              CBNZ     r7,|L1.236|
0000dc  4620              MOV      r0,r4                 ;248
0000de  68e9              LDR      r1,[r5,#0xc]          ;248
0000e0  4788              BLX      r1                    ;248
0000e2  b908              CBNZ     r0,|L1.232|
0000e4  2000              MOVS     r0,#0                 ;248
0000e6  e7ed              B        |L1.196|
                  |L1.232|
0000e8  682e              LDR      r6,[r5,#0]            ;248
0000ea  686f              LDR      r7,[r5,#4]            ;248
                  |L1.236|
0000ec  f1a70701          SUB      r7,r7,#1              ;248
0000f0  f8161b01          LDRB     r1,[r6],#1            ;248
0000f4  4489              ADD      r9,r9,r1              ;248
0000f6  bf00              NOP                            ;248
0000f8  bf00              NOP                            ;250
0000fa  b93f              CBNZ     r7,|L1.268|
0000fc  4620              MOV      r0,r4                 ;250
0000fe  68e9              LDR      r1,[r5,#0xc]          ;250
000100  4788              BLX      r1                    ;250
000102  b908              CBNZ     r0,|L1.264|
000104  2000              MOVS     r0,#0                 ;250
000106  e7dd              B        |L1.196|
                  |L1.264|
000108  682e              LDR      r6,[r5,#0]            ;250
00010a  686f              LDR      r7,[r5,#4]            ;250
                  |L1.268|
00010c  f1a70701          SUB      r7,r7,#1              ;250
000110  f8160b01          LDRB     r0,[r6],#1            ;250
000114  f8c400d4          STR      r0,[r4,#0xd4]         ;250
000118  bf00              NOP                            ;250
00011a  bf00              NOP                            ;251
00011c  b93f              CBNZ     r7,|L1.302|
00011e  4620              MOV      r0,r4                 ;251
000120  68e9              LDR      r1,[r5,#0xc]          ;251
000122  4788              BLX      r1                    ;251
000124  b908              CBNZ     r0,|L1.298|
000126  2000              MOVS     r0,#0                 ;251
000128  e7cc              B        |L1.196|
                  |L1.298|
00012a  682e              LDR      r6,[r5,#0]            ;251
00012c  686f              LDR      r7,[r5,#4]            ;251
                  |L1.302|
00012e  f1a70701          SUB      r7,r7,#1              ;251
000132  f8161b01          LDRB     r1,[r6],#1            ;251
000136  ea4f2001          LSL      r0,r1,#8              ;251
00013a  6220              STR      r0,[r4,#0x20]         ;251
00013c  b93f              CBNZ     r7,|L1.334|
00013e  4620              MOV      r0,r4                 ;251
000140  68e9              LDR      r1,[r5,#0xc]          ;251
000142  4788              BLX      r1                    ;251
000144  b908              CBNZ     r0,|L1.330|
000146  2000              MOVS     r0,#0                 ;251
000148  e7bc              B        |L1.196|
                  |L1.330|
00014a  682e              LDR      r6,[r5,#0]            ;251
00014c  686f              LDR      r7,[r5,#4]            ;251
                  |L1.334|
00014e  f1a70701          SUB      r7,r7,#1              ;251
000152  f8161b01          LDRB     r1,[r6],#1            ;251
000156  6a20              LDR      r0,[r4,#0x20]         ;251
000158  4408              ADD      r0,r0,r1              ;251
00015a  6220              STR      r0,[r4,#0x20]         ;251
00015c  bf00              NOP                            ;251
00015e  bf00              NOP                            ;252
000160  b93f              CBNZ     r7,|L1.370|
000162  4620              MOV      r0,r4                 ;252
000164  68e9              LDR      r1,[r5,#0xc]          ;252
000166  4788              BLX      r1                    ;252
000168  b908              CBNZ     r0,|L1.366|
00016a  2000              MOVS     r0,#0                 ;252
00016c  e7aa              B        |L1.196|
                  |L1.366|
00016e  682e              LDR      r6,[r5,#0]            ;252
000170  686f              LDR      r7,[r5,#4]            ;252
                  |L1.370|
000172  f1a70701          SUB      r7,r7,#1              ;252
000176  f8161b01          LDRB     r1,[r6],#1            ;252
00017a  ea4f2001          LSL      r0,r1,#8              ;252
00017e  61e0              STR      r0,[r4,#0x1c]         ;252
000180  b93f              CBNZ     r7,|L1.402|
000182  4620              MOV      r0,r4                 ;252
000184  68e9              LDR      r1,[r5,#0xc]          ;252
000186  4788              BLX      r1                    ;252
000188  b908              CBNZ     r0,|L1.398|
00018a  2000              MOVS     r0,#0                 ;252
00018c  e79a              B        |L1.196|
                  |L1.398|
00018e  682e              LDR      r6,[r5,#0]            ;252
000190  686f              LDR      r7,[r5,#4]            ;252
                  |L1.402|
000192  f1a70701          SUB      r7,r7,#1              ;252
000196  f8161b01          LDRB     r1,[r6],#1            ;252
00019a  69e0              LDR      r0,[r4,#0x1c]         ;252
00019c  4408              ADD      r0,r0,r1              ;252
00019e  61e0              STR      r0,[r4,#0x1c]         ;252
0001a0  bf00              NOP                            ;252
0001a2  bf00              NOP                            ;253
0001a4  b93f              CBNZ     r7,|L1.438|
0001a6  4620              MOV      r0,r4                 ;253
0001a8  68e9              LDR      r1,[r5,#0xc]          ;253
0001aa  4788              BLX      r1                    ;253
0001ac  b908              CBNZ     r0,|L1.434|
0001ae  2000              MOVS     r0,#0                 ;253
0001b0  e788              B        |L1.196|
                  |L1.434|
0001b2  682e              LDR      r6,[r5,#0]            ;253
0001b4  686f              LDR      r7,[r5,#4]            ;253
                  |L1.438|
0001b6  f1a70701          SUB      r7,r7,#1              ;253
0001ba  f8160b01          LDRB     r0,[r6],#1            ;253
0001be  6260              STR      r0,[r4,#0x24]         ;253
0001c0  bf00              NOP                            ;253
0001c2  f1a90908          SUB      r9,r9,#8              ;255
0001c6  bf00              NOP                            ;257
0001c8  6820              LDR      r0,[r4,#0]            ;257
0001ca  f1000b18          ADD      r11,r0,#0x18          ;257
0001ce  f8d401a0          LDR      r0,[r4,#0x1a0]        ;257
0001d2  f8cb0000          STR      r0,[r11,#0]           ;257
0001d6  69e0              LDR      r0,[r4,#0x1c]         ;257
0001d8  f8cb0004          STR      r0,[r11,#4]           ;257
0001dc  6a20              LDR      r0,[r4,#0x20]         ;257
0001de  f8cb0008          STR      r0,[r11,#8]           ;257
0001e2  6a60              LDR      r0,[r4,#0x24]         ;257
0001e4  f8cb000c          STR      r0,[r11,#0xc]         ;257
0001e8  f04f0064          MOV      r0,#0x64              ;257
0001ec  6821              LDR      r1,[r4,#0]            ;257
0001ee  6148              STR      r0,[r1,#0x14]         ;257
0001f0  6820              LDR      r0,[r4,#0]            ;257
0001f2  f04f0101          MOV      r1,#1                 ;257
0001f6  6842              LDR      r2,[r0,#4]            ;257
0001f8  4620              MOV      r0,r4                 ;257
0001fa  4790              BLX      r2                    ;257
0001fc  bf00              NOP                            ;257
0001fe  f8d401b8          LDR      r0,[r4,#0x1b8]        ;261
000202  6900              LDR      r0,[r0,#0x10]         ;261
000204  b138              CBZ      r0,|L1.534|
000206  f04f003a          MOV      r0,#0x3a              ;262
00020a  6821              LDR      r1,[r4,#0]            ;262
00020c  6148              STR      r0,[r1,#0x14]         ;262
00020e  6820              LDR      r0,[r4,#0]            ;262
000210  6801              LDR      r1,[r0,#0]            ;262
000212  4620              MOV      r0,r4                 ;262
000214  4788              BLX      r1                    ;262
                  |L1.534|
000216  6a20              LDR      r0,[r4,#0x20]         ;267
000218  b120              CBZ      r0,|L1.548|
00021a  69e0              LDR      r0,[r4,#0x1c]         ;267
00021c  b110              CBZ      r0,|L1.548|
00021e  6a60              LDR      r0,[r4,#0x24]         ;268
000220  2800              CMP      r0,#0                 ;268
000222  dc07              BGT      |L1.564|
                  |L1.548|
000224  f04f0020          MOV      r0,#0x20              ;269
000228  6821              LDR      r1,[r4,#0]            ;269
00022a  6148              STR      r0,[r1,#0x14]         ;269
00022c  6820              LDR      r0,[r4,#0]            ;269
00022e  6801              LDR      r1,[r0,#0]            ;269
000230  4620              MOV      r0,r4                 ;269
000232  4788              BLX      r1                    ;269
                  |L1.564|
000234  6a60              LDR      r0,[r4,#0x24]         ;271
000236  eb000040          ADD      r0,r0,r0,LSL #1       ;271
00023a  4548              CMP      r0,r9                 ;271
00023c  d007              BEQ      |L1.590|
00023e  f04f000b          MOV      r0,#0xb               ;272
000242  6821              LDR      r1,[r4,#0]            ;272
000244  6148              STR      r0,[r1,#0x14]         ;272
000246  6820              LDR      r0,[r4,#0]            ;272
000248  6801              LDR      r1,[r0,#0]            ;272
00024a  4620              MOV      r0,r4                 ;272
00024c  4788              BLX      r1                    ;272
                  |L1.590|
00024e  f8d400d8          LDR      r0,[r4,#0xd8]         ;274
000252  b950              CBNZ     r0,|L1.618|
000254  2154              MOVS     r1,#0x54              ;275
000256  6a60              LDR      r0,[r4,#0x24]         ;275
000258  fb00f201          MUL      r2,r0,r1              ;275
00025c  6860              LDR      r0,[r4,#4]            ;275
00025e  2101              MOVS     r1,#1                 ;275
000260  6803              LDR      r3,[r0,#0]            ;275
000262  4620              MOV      r0,r4                 ;275
000264  4798              BLX      r3                    ;275
000266  f8c400d8          STR      r0,[r4,#0xd8]         ;275
                  |L1.618|
00026a  f04f0a00          MOV      r10,#0                ;279
00026e  f8d480d8          LDR      r8,[r4,#0xd8]         ;279
000272  e060              B        |L1.822|
                  |L1.628|
000274  f8c8a004          STR      r10,[r8,#4]           ;281
000278  bf00              NOP                            ;282
00027a  b93f              CBNZ     r7,|L1.652|
00027c  4620              MOV      r0,r4                 ;282
00027e  68e9              LDR      r1,[r5,#0xc]          ;282
000280  4788              BLX      r1                    ;282
000282  b908              CBNZ     r0,|L1.648|
000284  2000              MOVS     r0,#0                 ;282
000286  e71d              B        |L1.196|
                  |L1.648|
000288  682e              LDR      r6,[r5,#0]            ;282
00028a  686f              LDR      r7,[r5,#4]            ;282
                  |L1.652|
00028c  f1a70701          SUB      r7,r7,#1              ;282
000290  f8160b01          LDRB     r0,[r6],#1            ;282
000294  f8c80000          STR      r0,[r8,#0]            ;282
000298  bf00              NOP                            ;282
00029a  bf00              NOP                            ;283
00029c  b93f              CBNZ     r7,|L1.686|
00029e  4620              MOV      r0,r4                 ;283
0002a0  68e9              LDR      r1,[r5,#0xc]          ;283
0002a2  4788              BLX      r1                    ;283
0002a4  b908              CBNZ     r0,|L1.682|
0002a6  2000              MOVS     r0,#0                 ;283
0002a8  e70c              B        |L1.196|
                  |L1.682|
0002aa  682e              LDR      r6,[r5,#0]            ;283
0002ac  686f              LDR      r7,[r5,#4]            ;283
                  |L1.686|
0002ae  f1a70701          SUB      r7,r7,#1              ;283
0002b2  f8160b01          LDRB     r0,[r6],#1            ;283
0002b6  9001              STR      r0,[sp,#4]            ;283
0002b8  bf00              NOP                            ;283
0002ba  9801              LDR      r0,[sp,#4]            ;284
0002bc  f3c01003          UBFX     r0,r0,#4,#4           ;284
0002c0  f8c80008          STR      r0,[r8,#8]            ;284
0002c4  9801              LDR      r0,[sp,#4]            ;285
0002c6  f000000f          AND      r0,r0,#0xf            ;285
0002ca  f8c8000c          STR      r0,[r8,#0xc]          ;285
0002ce  bf00              NOP                            ;286
0002d0  b93f              CBNZ     r7,|L1.738|
0002d2  4620              MOV      r0,r4                 ;286
0002d4  68e9              LDR      r1,[r5,#0xc]          ;286
0002d6  4788              BLX      r1                    ;286
0002d8  b908              CBNZ     r0,|L1.734|
0002da  2000              MOVS     r0,#0                 ;286
0002dc  e6f2              B        |L1.196|
                  |L1.734|
0002de  682e              LDR      r6,[r5,#0]            ;286
0002e0  686f              LDR      r7,[r5,#4]            ;286
                  |L1.738|
0002e2  f1a70701          SUB      r7,r7,#1              ;286
0002e6  f8160b01          LDRB     r0,[r6],#1            ;286
0002ea  f8c80010          STR      r0,[r8,#0x10]         ;286
0002ee  bf00              NOP                            ;286
0002f0  bf00              NOP                            ;288
0002f2  6820              LDR      r0,[r4,#0]            ;288
0002f4  f1000b18          ADD      r11,r0,#0x18          ;288
0002f8  f8d80000          LDR      r0,[r8,#0]            ;288
0002fc  f8cb0000          STR      r0,[r11,#0]           ;288
000300  f8d80008          LDR      r0,[r8,#8]            ;288
000304  f8cb0004          STR      r0,[r11,#4]           ;288
000308  f8d8000c          LDR      r0,[r8,#0xc]          ;288
00030c  f8cb0008          STR      r0,[r11,#8]           ;288
000310  f8d80010          LDR      r0,[r8,#0x10]         ;288
000314  f8cb000c          STR      r0,[r11,#0xc]         ;288
000318  f04f0065          MOV      r0,#0x65              ;288
00031c  6821              LDR      r1,[r4,#0]            ;288
00031e  6148              STR      r0,[r1,#0x14]         ;288
000320  6820              LDR      r0,[r4,#0]            ;288
000322  f04f0101          MOV      r1,#1                 ;288
000326  6842              LDR      r2,[r0,#4]            ;288
000328  4620              MOV      r0,r4                 ;288
00032a  4790              BLX      r2                    ;288
00032c  bf00              NOP                            ;288
00032e  f10a0a01          ADD      r10,r10,#1            ;280
000332  f1080854          ADD      r8,r8,#0x54           ;280
                  |L1.822|
000336  6a60              LDR      r0,[r4,#0x24]         ;279
000338  4550              CMP      r0,r10                ;279
00033a  dc9b              BGT      |L1.628|
00033c  f04f0001          MOV      r0,#1                 ;293
000340  f8d411b8          LDR      r1,[r4,#0x1b8]        ;293
000344  6108              STR      r0,[r1,#0x10]         ;293
000346  602e              STR      r6,[r5,#0]            ;295
000348  606f              STR      r7,[r5,#4]            ;295
00034a  bf00              NOP                            ;296
00034c  e6ba              B        |L1.196|
;;;298    
                          ENDP

                  get_sos PROC
;;;300    LOCAL(boolean)
;;;301    get_sos (j_decompress_ptr cinfo)
00034e  e92d5fff          PUSH     {r0-r12,lr}
;;;302    /* Process a SOS marker */
;;;303    {
000352  4604              MOV      r4,r0
;;;304      INT32 length;
;;;305      int i, ci, n, c, cc;
;;;306      jpeg_component_info * compptr;
;;;307      INPUT_VARS(cinfo);
000354  69a5              LDR      r5,[r4,#0x18]
000356  682e              LDR      r6,[r5,#0]
000358  686f              LDR      r7,[r5,#4]
;;;308    
;;;309      if (! cinfo->marker->saw_SOF)
00035a  f8d401b8          LDR      r0,[r4,#0x1b8]
00035e  6900              LDR      r0,[r0,#0x10]
000360  b938              CBNZ     r0,|L1.882|
;;;310        ERREXIT(cinfo, JERR_SOS_NO_SOF);
000362  f04f003e          MOV      r0,#0x3e
000366  6821              LDR      r1,[r4,#0]
000368  6148              STR      r0,[r1,#0x14]
00036a  6820              LDR      r0,[r4,#0]
00036c  6801              LDR      r1,[r0,#0]
00036e  4620              MOV      r0,r4
000370  4788              BLX      r1
                  |L1.882|
;;;311    
;;;312      INPUT_2BYTES(cinfo, length, return FALSE);
000372  bf00              NOP      
000374  b94f              CBNZ     r7,|L1.906|
000376  4620              MOV      r0,r4
000378  68e9              LDR      r1,[r5,#0xc]
00037a  4788              BLX      r1
00037c  b918              CBNZ     r0,|L1.902|
00037e  2000              MOVS     r0,#0
                  |L1.896|
;;;313    
;;;314      INPUT_BYTE(cinfo, n, return FALSE); /* Number of components */
;;;315    
;;;316      TRACEMS1(cinfo, 1, JTRC_SOS, n);
;;;317    
;;;318      if (length != (n * 2 + 6) || n < 1 || n > MAX_COMPS_IN_SCAN)
;;;319        ERREXIT(cinfo, JERR_BAD_LENGTH);
;;;320    
;;;321      cinfo->comps_in_scan = n;
;;;322    
;;;323      /* Collect the component-spec parameters */
;;;324    
;;;325      for (i = 0; i < n; i++) {
;;;326        INPUT_BYTE(cinfo, cc, return FALSE);
;;;327        INPUT_BYTE(cinfo, c, return FALSE);
;;;328        
;;;329        for (ci = 0, compptr = cinfo->comp_info; ci < cinfo->num_components;
;;;330    	 ci++, compptr++) {
;;;331          if (cc == compptr->component_id)
;;;332    	goto id_found;
;;;333        }
;;;334    
;;;335        ERREXIT1(cinfo, JERR_BAD_COMPONENT_ID, cc);
;;;336    
;;;337      id_found:
;;;338    
;;;339        cinfo->cur_comp_info[i] = compptr;
;;;340        compptr->dc_tbl_no = (c >> 4) & 15;
;;;341        compptr->ac_tbl_no = (c     ) & 15;
;;;342        
;;;343        TRACEMS3(cinfo, 1, JTRC_SOS_COMPONENT, cc,
;;;344    	     compptr->dc_tbl_no, compptr->ac_tbl_no);
;;;345      }
;;;346    
;;;347      /* Collect the additional scan parameters Ss, Se, Ah/Al. */
;;;348      INPUT_BYTE(cinfo, c, return FALSE);
;;;349      cinfo->Ss = c;
;;;350      INPUT_BYTE(cinfo, c, return FALSE);
;;;351      cinfo->Se = c;
;;;352      INPUT_BYTE(cinfo, c, return FALSE);
;;;353      cinfo->Ah = (c >> 4) & 15;
;;;354      cinfo->Al = (c     ) & 15;
;;;355    
;;;356      TRACEMS4(cinfo, 1, JTRC_SOS_PARAMS, cinfo->Ss, cinfo->Se,
;;;357    	   cinfo->Ah, cinfo->Al);
;;;358    
;;;359      /* Prepare to scan data & restart markers */
;;;360      cinfo->marker->next_restart_num = 0;
;;;361    
;;;362      /* Count another SOS marker */
;;;363      cinfo->input_scan_number++;
;;;364    
;;;365      INPUT_SYNC(cinfo);
;;;366      return TRUE;
;;;367    }
000380  b004              ADD      sp,sp,#0x10
000382  e8bd9ff0          POP      {r4-r12,pc}
                  |L1.902|
000386  682e              LDR      r6,[r5,#0]            ;312
000388  686f              LDR      r7,[r5,#4]            ;312
                  |L1.906|
00038a  f1a70701          SUB      r7,r7,#1              ;312
00038e  f8161b01          LDRB     r1,[r6],#1            ;312
000392  ea4f2001          LSL      r0,r1,#8              ;312
000396  9003              STR      r0,[sp,#0xc]          ;312
000398  b93f              CBNZ     r7,|L1.938|
00039a  4620              MOV      r0,r4                 ;312
00039c  68e9              LDR      r1,[r5,#0xc]          ;312
00039e  4788              BLX      r1                    ;312
0003a0  b908              CBNZ     r0,|L1.934|
0003a2  2000              MOVS     r0,#0                 ;312
0003a4  e7ec              B        |L1.896|
                  |L1.934|
0003a6  682e              LDR      r6,[r5,#0]            ;312
0003a8  686f              LDR      r7,[r5,#4]            ;312
                  |L1.938|
0003aa  f1a70701          SUB      r7,r7,#1              ;312
0003ae  f8161b01          LDRB     r1,[r6],#1            ;312
0003b2  9803              LDR      r0,[sp,#0xc]          ;312
0003b4  4408              ADD      r0,r0,r1              ;312
0003b6  9003              STR      r0,[sp,#0xc]          ;312
0003b8  bf00              NOP                            ;312
0003ba  bf00              NOP                            ;314
0003bc  b93f              CBNZ     r7,|L1.974|
0003be  4620              MOV      r0,r4                 ;314
0003c0  68e9              LDR      r1,[r5,#0xc]          ;314
0003c2  4788              BLX      r1                    ;314
0003c4  b908              CBNZ     r0,|L1.970|
0003c6  2000              MOVS     r0,#0                 ;314
0003c8  e7da              B        |L1.896|
                  |L1.970|
0003ca  682e              LDR      r6,[r5,#0]            ;314
0003cc  686f              LDR      r7,[r5,#4]            ;314
                  |L1.974|
0003ce  f1a70701          SUB      r7,r7,#1              ;314
0003d2  f8168b01          LDRB     r8,[r6],#1            ;314
0003d6  bf00              NOP                            ;314
0003d8  f04f0067          MOV      r0,#0x67              ;316
0003dc  6821              LDR      r1,[r4,#0]            ;316
0003de  6148              STR      r0,[r1,#0x14]         ;316
0003e0  6820              LDR      r0,[r4,#0]            ;316
0003e2  f8c08018          STR      r8,[r0,#0x18]         ;316
0003e6  6820              LDR      r0,[r4,#0]            ;316
0003e8  f04f0101          MOV      r1,#1                 ;316
0003ec  6842              LDR      r2,[r0,#4]            ;316
0003ee  4620              MOV      r0,r4                 ;316
0003f0  4790              BLX      r2                    ;316
0003f2  2006              MOVS     r0,#6                 ;318
0003f4  eb000148          ADD      r1,r0,r8,LSL #1       ;318
0003f8  9803              LDR      r0,[sp,#0xc]          ;318
0003fa  4281              CMP      r1,r0                 ;318
0003fc  d105              BNE      |L1.1034|
0003fe  f1b80f01          CMP      r8,#1                 ;318
000402  db02              BLT      |L1.1034|
000404  f1b80f04          CMP      r8,#4                 ;318
000408  dd07              BLE      |L1.1050|
                  |L1.1034|
00040a  f04f000b          MOV      r0,#0xb               ;319
00040e  6821              LDR      r1,[r4,#0]            ;319
000410  6148              STR      r0,[r1,#0x14]         ;319
000412  6820              LDR      r0,[r4,#0]            ;319
000414  6801              LDR      r1,[r0,#0]            ;319
000416  4620              MOV      r0,r4                 ;319
000418  4788              BLX      r1                    ;319
                  |L1.1050|
00041a  f8c48148          STR      r8,[r4,#0x148]        ;321
00041e  f04f0b00          MOV      r11,#0                ;325
000422  e069              B        |L1.1272|
                  |L1.1060|
000424  bf00              NOP                            ;326
000426  b93f              CBNZ     r7,|L1.1080|
000428  4620              MOV      r0,r4                 ;326
00042a  68e9              LDR      r1,[r5,#0xc]          ;326
00042c  4788              BLX      r1                    ;326
00042e  b908              CBNZ     r0,|L1.1076|
000430  2000              MOVS     r0,#0                 ;326
000432  e7a5              B        |L1.896|
                  |L1.1076|
000434  682e              LDR      r6,[r5,#0]            ;326
000436  686f              LDR      r7,[r5,#4]            ;326
                  |L1.1080|
000438  f1a70701          SUB      r7,r7,#1              ;326
00043c  f8160b01          LDRB     r0,[r6],#1            ;326
000440  9001              STR      r0,[sp,#4]            ;326
000442  bf00              NOP                            ;326
000444  bf00              NOP                            ;327
000446  b93f              CBNZ     r7,|L1.1112|
000448  4620              MOV      r0,r4                 ;327
00044a  68e9              LDR      r1,[r5,#0xc]          ;327
00044c  4788              BLX      r1                    ;327
00044e  b908              CBNZ     r0,|L1.1108|
000450  2000              MOVS     r0,#0                 ;327
000452  e795              B        |L1.896|
                  |L1.1108|
000454  682e              LDR      r6,[r5,#0]            ;327
000456  686f              LDR      r7,[r5,#4]            ;327
                  |L1.1112|
000458  f1a70701          SUB      r7,r7,#1              ;327
00045c  f8169b01          LDRB     r9,[r6],#1            ;327
000460  bf00              NOP                            ;327
000462  f04f0000          MOV      r0,#0                 ;329
000466  9002              STR      r0,[sp,#8]            ;329
000468  f8d4a0d8          LDR      r10,[r4,#0xd8]        ;329
00046c  e00b              B        |L1.1158|
                  |L1.1134|
00046e  f8da1000          LDR      r1,[r10,#0]           ;331
000472  9801              LDR      r0,[sp,#4]            ;331
000474  4281              CMP      r1,r0                 ;331
000476  d100              BNE      |L1.1146|
000478  e015              B        |L1.1190|
                  |L1.1146|
00047a  9802              LDR      r0,[sp,#8]            ;330
00047c  f1000001          ADD      r0,r0,#1              ;330
000480  9002              STR      r0,[sp,#8]            ;330
000482  f10a0a54          ADD      r10,r10,#0x54         ;330
                  |L1.1158|
000486  6a61              LDR      r1,[r4,#0x24]         ;329
000488  9802              LDR      r0,[sp,#8]            ;329
00048a  4281              CMP      r1,r0                 ;329
00048c  dcef              BGT      |L1.1134|
00048e  f04f0005          MOV      r0,#5                 ;335
000492  6821              LDR      r1,[r4,#0]            ;335
000494  6148              STR      r0,[r1,#0x14]         ;335
000496  9801              LDR      r0,[sp,#4]            ;335
000498  6821              LDR      r1,[r4,#0]            ;335
00049a  6188              STR      r0,[r1,#0x18]         ;335
00049c  6820              LDR      r0,[r4,#0]            ;335
00049e  6801              LDR      r1,[r0,#0]            ;335
0004a0  4620              MOV      r0,r4                 ;335
0004a2  4788              BLX      r1                    ;335
0004a4  bf00              NOP                            ;337
                  |L1.1190|
0004a6  f50470a6          ADD      r0,r4,#0x14c          ;339
0004aa  f840a02b          STR      r10,[r0,r11,LSL #2]   ;339
0004ae  f3c91003          UBFX     r0,r9,#4,#4           ;340
0004b2  f8ca0014          STR      r0,[r10,#0x14]        ;340
0004b6  f009000f          AND      r0,r9,#0xf            ;341
0004ba  f8ca0018          STR      r0,[r10,#0x18]        ;341
0004be  bf00              NOP                            ;343
0004c0  6820              LDR      r0,[r4,#0]            ;343
0004c2  f1000018          ADD      r0,r0,#0x18           ;343
0004c6  9000              STR      r0,[sp,#0]            ;343
0004c8  e9dd1000          LDRD     r1,r0,[sp,#0]         ;343
0004cc  6008              STR      r0,[r1,#0]            ;343
0004ce  f8da1014          LDR      r1,[r10,#0x14]        ;343
0004d2  9800              LDR      r0,[sp,#0]            ;343
0004d4  6041              STR      r1,[r0,#4]            ;343
0004d6  f8da1018          LDR      r1,[r10,#0x18]        ;343
0004da  9800              LDR      r0,[sp,#0]            ;343
0004dc  6081              STR      r1,[r0,#8]            ;343
0004de  f04f0068          MOV      r0,#0x68              ;343
0004e2  6821              LDR      r1,[r4,#0]            ;343
0004e4  6148              STR      r0,[r1,#0x14]         ;343
0004e6  6820              LDR      r0,[r4,#0]            ;343
0004e8  f04f0101          MOV      r1,#1                 ;343
0004ec  6842              LDR      r2,[r0,#4]            ;343
0004ee  4620              MOV      r0,r4                 ;343
0004f0  4790              BLX      r2                    ;343
0004f2  bf00              NOP                            ;343
0004f4  f10b0b01          ADD      r11,r11,#1            ;325
                  |L1.1272|
0004f8  45c3              CMP      r11,r8                ;325
0004fa  db93              BLT      |L1.1060|
0004fc  bf00              NOP                            ;348
0004fe  b93f              CBNZ     r7,|L1.1296|
000500  4620              MOV      r0,r4                 ;348
000502  68e9              LDR      r1,[r5,#0xc]          ;348
000504  4788              BLX      r1                    ;348
000506  b908              CBNZ     r0,|L1.1292|
000508  2000              MOVS     r0,#0                 ;348
00050a  e739              B        |L1.896|
                  |L1.1292|
00050c  682e              LDR      r6,[r5,#0]            ;348
00050e  686f              LDR      r7,[r5,#4]            ;348
                  |L1.1296|
000510  f1a70701          SUB      r7,r7,#1              ;348
000514  f8169b01          LDRB     r9,[r6],#1            ;348
000518  bf00              NOP                            ;348
00051a  f8c49190          STR      r9,[r4,#0x190]        ;349
00051e  bf00              NOP                            ;350
000520  b93f              CBNZ     r7,|L1.1330|
000522  4620              MOV      r0,r4                 ;350
000524  68e9              LDR      r1,[r5,#0xc]          ;350
000526  4788              BLX      r1                    ;350
000528  b908              CBNZ     r0,|L1.1326|
00052a  2000              MOVS     r0,#0                 ;350
00052c  e728              B        |L1.896|
                  |L1.1326|
00052e  682e              LDR      r6,[r5,#0]            ;350
000530  686f              LDR      r7,[r5,#4]            ;350
                  |L1.1330|
000532  f1a70701          SUB      r7,r7,#1              ;350
000536  f8169b01          LDRB     r9,[r6],#1            ;350
00053a  bf00              NOP                            ;350
00053c  f8c49194          STR      r9,[r4,#0x194]        ;351
000540  bf00              NOP                            ;352
000542  b93f              CBNZ     r7,|L1.1364|
000544  4620              MOV      r0,r4                 ;352
000546  68e9              LDR      r1,[r5,#0xc]          ;352
000548  4788              BLX      r1                    ;352
00054a  b908              CBNZ     r0,|L1.1360|
00054c  2000              MOVS     r0,#0                 ;352
00054e  e717              B        |L1.896|
                  |L1.1360|
000550  682e              LDR      r6,[r5,#0]            ;352
000552  686f              LDR      r7,[r5,#4]            ;352
                  |L1.1364|
000554  f1a70701          SUB      r7,r7,#1              ;352
000558  f8169b01          LDRB     r9,[r6],#1            ;352
00055c  bf00              NOP                            ;352
00055e  f3c91003          UBFX     r0,r9,#4,#4           ;353
000562  f8c40198          STR      r0,[r4,#0x198]        ;353
000566  f009000f          AND      r0,r9,#0xf            ;354
00056a  f8c4019c          STR      r0,[r4,#0x19c]        ;354
00056e  bf00              NOP                            ;356
000570  6820              LDR      r0,[r4,#0]            ;356
000572  f1000018          ADD      r0,r0,#0x18           ;356
000576  9000              STR      r0,[sp,#0]            ;356
000578  f8d41190          LDR      r1,[r4,#0x190]        ;356
00057c  9800              LDR      r0,[sp,#0]            ;356
00057e  6001              STR      r1,[r0,#0]            ;356
000580  f8d41194          LDR      r1,[r4,#0x194]        ;356
000584  9800              LDR      r0,[sp,#0]            ;356
000586  6041              STR      r1,[r0,#4]            ;356
000588  f8d41198          LDR      r1,[r4,#0x198]        ;356
00058c  9800              LDR      r0,[sp,#0]            ;356
00058e  6081              STR      r1,[r0,#8]            ;356
000590  f8d4119c          LDR      r1,[r4,#0x19c]        ;356
000594  9800              LDR      r0,[sp,#0]            ;356
000596  60c1              STR      r1,[r0,#0xc]          ;356
000598  f04f0069          MOV      r0,#0x69              ;356
00059c  6821              LDR      r1,[r4,#0]            ;356
00059e  6148              STR      r0,[r1,#0x14]         ;356
0005a0  6820              LDR      r0,[r4,#0]            ;356
0005a2  f04f0101          MOV      r1,#1                 ;356
0005a6  6842              LDR      r2,[r0,#4]            ;356
0005a8  4620              MOV      r0,r4                 ;356
0005aa  4790              BLX      r2                    ;356
0005ac  bf00              NOP                            ;356
0005ae  f04f0000          MOV      r0,#0                 ;360
0005b2  f8d411b8          LDR      r1,[r4,#0x1b8]        ;360
0005b6  6148              STR      r0,[r1,#0x14]         ;360
0005b8  f8d40090          LDR      r0,[r4,#0x90]         ;363
0005bc  f1000001          ADD      r0,r0,#1              ;363
0005c0  f8c40090          STR      r0,[r4,#0x90]         ;363
0005c4  602e              STR      r6,[r5,#0]            ;365
0005c6  606f              STR      r7,[r5,#4]            ;365
0005c8  f04f0001          MOV      r0,#1                 ;366
0005cc  e6d8              B        |L1.896|
;;;368    
                          ENDP

                  get_dht PROC
;;;418    LOCAL(boolean)
;;;419    get_dht (j_decompress_ptr cinfo)
0005ce  e92d4ff0          PUSH     {r4-r11,lr}
;;;420    /* Process a DHT marker */
;;;421    {
0005d2  b0c7              SUB      sp,sp,#0x11c
0005d4  4604              MOV      r4,r0
;;;422      INT32 length;
;;;423      UINT8 bits[17];
;;;424      UINT8 huffval[256];
;;;425      int i, index, count;
;;;426      JHUFF_TBL **htblptr;
;;;427      INPUT_VARS(cinfo);
0005d6  69a5              LDR      r5,[r4,#0x18]
0005d8  682e              LDR      r6,[r5,#0]
0005da  686f              LDR      r7,[r5,#4]
;;;428    
;;;429      INPUT_2BYTES(cinfo, length, return FALSE);
0005dc  bf00              NOP      
0005de  b94f              CBNZ     r7,|L1.1524|
0005e0  4620              MOV      r0,r4
0005e2  68e9              LDR      r1,[r5,#0xc]
0005e4  4788              BLX      r1
0005e6  b918              CBNZ     r0,|L1.1520|
0005e8  2000              MOVS     r0,#0
                  |L1.1514|
;;;430      length -= 2;
;;;431      
;;;432      while (length > 16) {
;;;433        INPUT_BYTE(cinfo, index, return FALSE);
;;;434    
;;;435        TRACEMS1(cinfo, 1, JTRC_DHT, index);
;;;436          
;;;437        bits[0] = 0;
;;;438        count = 0;
;;;439        for (i = 1; i <= 16; i++) {
;;;440          INPUT_BYTE(cinfo, bits[i], return FALSE);
;;;441          count += bits[i];
;;;442        }
;;;443    
;;;444        length -= 1 + 16;
;;;445    
;;;446        TRACEMS8(cinfo, 2, JTRC_HUFFBITS,
;;;447    	     bits[1], bits[2], bits[3], bits[4],
;;;448    	     bits[5], bits[6], bits[7], bits[8]);
;;;449        TRACEMS8(cinfo, 2, JTRC_HUFFBITS,
;;;450    	     bits[9], bits[10], bits[11], bits[12],
;;;451    	     bits[13], bits[14], bits[15], bits[16]);
;;;452    
;;;453        /* Here we just do minimal validation of the counts to avoid walking
;;;454         * off the end of our table space.  jdhuff.c will check more carefully.
;;;455         */
;;;456        if (count > 256 || ((INT32) count) > length)
;;;457          ERREXIT(cinfo, JERR_BAD_HUFF_TABLE);
;;;458    
;;;459        for (i = 0; i < count; i++)
;;;460          INPUT_BYTE(cinfo, huffval[i], return FALSE);
;;;461    
;;;462        length -= count;
;;;463    
;;;464        if (index & 0x10) {		/* AC table definition */
;;;465          index -= 0x10;
;;;466          htblptr = &cinfo->ac_huff_tbl_ptrs[index];
;;;467        } else {			/* DC table definition */
;;;468          htblptr = &cinfo->dc_huff_tbl_ptrs[index];
;;;469        }
;;;470    
;;;471        if (index < 0 || index >= NUM_HUFF_TBLS)
;;;472          ERREXIT1(cinfo, JERR_DHT_INDEX, index);
;;;473    
;;;474        if (*htblptr == NULL)
;;;475          *htblptr = jpeg_alloc_huff_table((j_common_ptr) cinfo);
;;;476      
;;;477        MEMCOPY((*htblptr)->bits, bits, SIZEOF((*htblptr)->bits));
;;;478        MEMCOPY((*htblptr)->huffval, huffval, SIZEOF((*htblptr)->huffval));
;;;479      }
;;;480    
;;;481      if (length != 0)
;;;482        ERREXIT(cinfo, JERR_BAD_LENGTH);
;;;483    
;;;484      INPUT_SYNC(cinfo);
;;;485      return TRUE;
;;;486    }
0005ea  b047              ADD      sp,sp,#0x11c
0005ec  e8bd8ff0          POP      {r4-r11,pc}
                  |L1.1520|
0005f0  682e              LDR      r6,[r5,#0]            ;429
0005f2  686f              LDR      r7,[r5,#4]            ;429
                  |L1.1524|
0005f4  f1a70701          SUB      r7,r7,#1              ;429
0005f8  f8161b01          LDRB     r1,[r6],#1            ;429
0005fc  ea4f2801          LSL      r8,r1,#8              ;429
000600  b93f              CBNZ     r7,|L1.1554|
000602  4620              MOV      r0,r4                 ;429
000604  68e9              LDR      r1,[r5,#0xc]          ;429
000606  4788              BLX      r1                    ;429
000608  b908              CBNZ     r0,|L1.1550|
00060a  2000              MOVS     r0,#0                 ;429
00060c  e7ed              B        |L1.1514|
                  |L1.1550|
00060e  682e              LDR      r6,[r5,#0]            ;429
000610  686f              LDR      r7,[r5,#4]            ;429
                  |L1.1554|
000612  f1a70701          SUB      r7,r7,#1              ;429
000616  f8161b01          LDRB     r1,[r6],#1            ;429
00061a  4488              ADD      r8,r8,r1              ;429
00061c  bf00              NOP                            ;429
00061e  f1a80802          SUB      r8,r8,#2              ;430
000622  e104              B        |L1.2094|
                  |L1.1572|
000624  bf00              NOP                            ;433
000626  b93f              CBNZ     r7,|L1.1592|
000628  4620              MOV      r0,r4                 ;433
00062a  68e9              LDR      r1,[r5,#0xc]          ;433
00062c  4788              BLX      r1                    ;433
00062e  b908              CBNZ     r0,|L1.1588|
000630  2000              MOVS     r0,#0                 ;433
000632  e7da              B        |L1.1514|
                  |L1.1588|
000634  682e              LDR      r6,[r5,#0]            ;433
000636  686f              LDR      r7,[r5,#4]            ;433
                  |L1.1592|
000638  f1a70701          SUB      r7,r7,#1              ;433
00063c  f8169b01          LDRB     r9,[r6],#1            ;433
000640  bf00              NOP                            ;433
000642  f04f0050          MOV      r0,#0x50              ;435
000646  6821              LDR      r1,[r4,#0]            ;435
000648  6148              STR      r0,[r1,#0x14]         ;435
00064a  6820              LDR      r0,[r4,#0]            ;435
00064c  f8c09018          STR      r9,[r0,#0x18]         ;435
000650  6820              LDR      r0,[r4,#0]            ;435
000652  f04f0101          MOV      r1,#1                 ;435
000656  6842              LDR      r2,[r0,#4]            ;435
000658  4620              MOV      r0,r4                 ;435
00065a  4790              BLX      r2                    ;435
00065c  f04f0000          MOV      r0,#0                 ;437
000660  f88d0108          STRB     r0,[sp,#0x108]        ;437
000664  9001              STR      r0,[sp,#4]            ;438
000666  f04f0b01          MOV      r11,#1                ;439
00066a  e019              B        |L1.1696|
                  |L1.1644|
00066c  bf00              NOP                            ;440
00066e  b93f              CBNZ     r7,|L1.1664|
000670  4620              MOV      r0,r4                 ;440
000672  68e9              LDR      r1,[r5,#0xc]          ;440
000674  4788              BLX      r1                    ;440
000676  b908              CBNZ     r0,|L1.1660|
000678  2000              MOVS     r0,#0                 ;440
00067a  e7b6              B        |L1.1514|
                  |L1.1660|
00067c  682e              LDR      r6,[r5,#0]            ;440
00067e  686f              LDR      r7,[r5,#4]            ;440
                  |L1.1664|
000680  f1a70701          SUB      r7,r7,#1              ;440
000684  f8160b01          LDRB     r0,[r6],#1            ;440
000688  a942              ADD      r1,sp,#0x108          ;440
00068a  f801000b          STRB     r0,[r1,r11]           ;440
00068e  bf00              NOP                            ;440
000690  a842              ADD      r0,sp,#0x108          ;441
000692  f810100b          LDRB     r1,[r0,r11]           ;441
000696  9801              LDR      r0,[sp,#4]            ;441
000698  4408              ADD      r0,r0,r1              ;441
00069a  9001              STR      r0,[sp,#4]            ;441
00069c  f10b0b01          ADD      r11,r11,#1            ;439
                  |L1.1696|
0006a0  f1bb0f10          CMP      r11,#0x10             ;439
0006a4  dde2              BLE      |L1.1644|
0006a6  f1a80811          SUB      r8,r8,#0x11           ;444
0006aa  bf00              NOP                            ;446
0006ac  6820              LDR      r0,[r4,#0]            ;446
0006ae  f1000a18          ADD      r10,r0,#0x18          ;446
0006b2  f89d0109          LDRB     r0,[sp,#0x109]        ;446
0006b6  f8ca0000          STR      r0,[r10,#0]           ;446
0006ba  f89d010a          LDRB     r0,[sp,#0x10a]        ;446
0006be  f8ca0004          STR      r0,[r10,#4]           ;446
0006c2  f89d010b          LDRB     r0,[sp,#0x10b]        ;446
0006c6  f8ca0008          STR      r0,[r10,#8]           ;446
0006ca  f89d010c          LDRB     r0,[sp,#0x10c]        ;446
0006ce  f8ca000c          STR      r0,[r10,#0xc]         ;446
0006d2  f89d010d          LDRB     r0,[sp,#0x10d]        ;446
0006d6  f8ca0010          STR      r0,[r10,#0x10]        ;446
0006da  f89d010e          LDRB     r0,[sp,#0x10e]        ;446
0006de  f8ca0014          STR      r0,[r10,#0x14]        ;446
0006e2  f89d010f          LDRB     r0,[sp,#0x10f]        ;446
0006e6  f8ca0018          STR      r0,[r10,#0x18]        ;446
0006ea  f89d0110          LDRB     r0,[sp,#0x110]        ;446
0006ee  f8ca001c          STR      r0,[r10,#0x1c]        ;446
0006f2  f04f0056          MOV      r0,#0x56              ;446
0006f6  6821              LDR      r1,[r4,#0]            ;446
0006f8  6148              STR      r0,[r1,#0x14]         ;446
0006fa  6820              LDR      r0,[r4,#0]            ;446
0006fc  f04f0102          MOV      r1,#2                 ;446
000700  6842              LDR      r2,[r0,#4]            ;446
000702  4620              MOV      r0,r4                 ;446
000704  4790              BLX      r2                    ;446
000706  bf00              NOP                            ;446
000708  bf00              NOP                            ;449
00070a  6820              LDR      r0,[r4,#0]            ;449
00070c  f1000a18          ADD      r10,r0,#0x18          ;449
000710  f89d0111          LDRB     r0,[sp,#0x111]        ;449
000714  f8ca0000          STR      r0,[r10,#0]           ;449
000718  f89d0112          LDRB     r0,[sp,#0x112]        ;449
00071c  f8ca0004          STR      r0,[r10,#4]           ;449
000720  f89d0113          LDRB     r0,[sp,#0x113]        ;449
000724  f8ca0008          STR      r0,[r10,#8]           ;449
000728  f89d0114          LDRB     r0,[sp,#0x114]        ;449
00072c  f8ca000c          STR      r0,[r10,#0xc]         ;449
000730  f89d0115          LDRB     r0,[sp,#0x115]        ;449
000734  f8ca0010          STR      r0,[r10,#0x10]        ;449
000738  f89d0116          LDRB     r0,[sp,#0x116]        ;449
00073c  f8ca0014          STR      r0,[r10,#0x14]        ;449
000740  f89d0117          LDRB     r0,[sp,#0x117]        ;449
000744  f8ca0018          STR      r0,[r10,#0x18]        ;449
000748  f89d0118          LDRB     r0,[sp,#0x118]        ;449
00074c  f8ca001c          STR      r0,[r10,#0x1c]        ;449
000750  f04f0056          MOV      r0,#0x56              ;449
000754  6821              LDR      r1,[r4,#0]            ;449
000756  6148              STR      r0,[r1,#0x14]         ;449
000758  6820              LDR      r0,[r4,#0]            ;449
00075a  f04f0102          MOV      r1,#2                 ;449
00075e  6842              LDR      r2,[r0,#4]            ;449
000760  4620              MOV      r0,r4                 ;449
000762  4790              BLX      r2                    ;449
000764  bf00              NOP                            ;449
000766  9801              LDR      r0,[sp,#4]            ;456
000768  f5b07f80          CMP      r0,#0x100             ;456
00076c  dc02              BGT      |L1.1908|
00076e  9801              LDR      r0,[sp,#4]            ;456
000770  4540              CMP      r0,r8                 ;456
000772  dd07              BLE      |L1.1924|
                  |L1.1908|
000774  f04f0008          MOV      r0,#8                 ;457
000778  6821              LDR      r1,[r4,#0]            ;457
00077a  6148              STR      r0,[r1,#0x14]         ;457
00077c  6820              LDR      r0,[r4,#0]            ;457
00077e  6801              LDR      r1,[r0,#0]            ;457
000780  4620              MOV      r0,r4                 ;457
000782  4788              BLX      r1                    ;457
                  |L1.1924|
000784  f04f0b00          MOV      r11,#0                ;459
000788  e013              B        |L1.1970|
                  |L1.1930|
00078a  bf00              NOP                            ;460
00078c  b93f              CBNZ     r7,|L1.1950|
00078e  4620              MOV      r0,r4                 ;460
000790  68e9              LDR      r1,[r5,#0xc]          ;460
000792  4788              BLX      r1                    ;460
000794  b908              CBNZ     r0,|L1.1946|
000796  2000              MOVS     r0,#0                 ;460
000798  e727              B        |L1.1514|
                  |L1.1946|
00079a  682e              LDR      r6,[r5,#0]            ;460
00079c  686f              LDR      r7,[r5,#4]            ;460
                  |L1.1950|
00079e  f1a70701          SUB      r7,r7,#1              ;460
0007a2  f8160b01          LDRB     r0,[r6],#1            ;460
0007a6  a902              ADD      r1,sp,#8              ;460
0007a8  f801000b          STRB     r0,[r1,r11]           ;460
0007ac  bf00              NOP                            ;460
0007ae  f10b0b01          ADD      r11,r11,#1            ;459
                  |L1.1970|
0007b2  9801              LDR      r0,[sp,#4]            ;459
0007b4  4583              CMP      r11,r0                ;459
0007b6  dbe8              BLT      |L1.1930|
0007b8  9801              LDR      r0,[sp,#4]            ;462
0007ba  eba80800          SUB      r8,r8,r0              ;462
0007be  f0190f10          TST      r9,#0x10              ;464
0007c2  d007              BEQ      |L1.2004|
0007c4  f1a90910          SUB      r9,r9,#0x10           ;465
0007c8  f10400c4          ADD      r0,r4,#0xc4           ;466
0007cc  eb000089          ADD      r0,r0,r9,LSL #2       ;466
0007d0  9000              STR      r0,[sp,#0]            ;466
0007d2  e004              B        |L1.2014|
                  |L1.2004|
0007d4  f10400b4          ADD      r0,r4,#0xb4           ;468
0007d8  eb000089          ADD      r0,r0,r9,LSL #2       ;468
0007dc  9000              STR      r0,[sp,#0]            ;468
                  |L1.2014|
0007de  f1b90f00          CMP      r9,#0                 ;471
0007e2  db02              BLT      |L1.2026|
0007e4  f1b90f04          CMP      r9,#4                 ;471
0007e8  db0a              BLT      |L1.2048|
                  |L1.2026|
0007ea  f04f001e          MOV      r0,#0x1e              ;472
0007ee  6821              LDR      r1,[r4,#0]            ;472
0007f0  6148              STR      r0,[r1,#0x14]         ;472
0007f2  6820              LDR      r0,[r4,#0]            ;472
0007f4  f8c09018          STR      r9,[r0,#0x18]         ;472
0007f8  6820              LDR      r0,[r4,#0]            ;472
0007fa  6801              LDR      r1,[r0,#0]            ;472
0007fc  4620              MOV      r0,r4                 ;472
0007fe  4788              BLX      r1                    ;472
                  |L1.2048|
000800  9800              LDR      r0,[sp,#0]            ;474
000802  6800              LDR      r0,[r0,#0]            ;474
000804  b920              CBNZ     r0,|L1.2064|
000806  4620              MOV      r0,r4                 ;475
000808  f7fffffe          BL       jpeg_alloc_huff_table
00080c  9900              LDR      r1,[sp,#0]            ;475
00080e  6008              STR      r0,[r1,#0]            ;475
                  |L1.2064|
000810  9900              LDR      r1,[sp,#0]            ;477
000812  2211              MOVS     r2,#0x11              ;477
000814  6808              LDR      r0,[r1,#0]            ;477
000816  a942              ADD      r1,sp,#0x108          ;477
000818  f7fffffe          BL       __aeabi_memcpy4
00081c  9900              LDR      r1,[sp,#0]            ;478
00081e  6809              LDR      r1,[r1,#0]            ;478
000820  f1010011          ADD      r0,r1,#0x11           ;478
000824  f44f7280          MOV      r2,#0x100             ;478
000828  a902              ADD      r1,sp,#8              ;478
00082a  f7fffffe          BL       __aeabi_memcpy
                  |L1.2094|
00082e  f1b80f10          CMP      r8,#0x10              ;432
000832  f73faef7          BGT      |L1.1572|
000836  f1b80f00          CMP      r8,#0                 ;481
00083a  d007              BEQ      |L1.2124|
00083c  f04f000b          MOV      r0,#0xb               ;482
000840  6821              LDR      r1,[r4,#0]            ;482
000842  6148              STR      r0,[r1,#0x14]         ;482
000844  6820              LDR      r0,[r4,#0]            ;482
000846  6801              LDR      r1,[r0,#0]            ;482
000848  4620              MOV      r0,r4                 ;482
00084a  4788              BLX      r1                    ;482
                  |L1.2124|
00084c  602e              STR      r6,[r5,#0]            ;484
00084e  606f              STR      r7,[r5,#4]            ;484
000850  2001              MOVS     r0,#1                 ;485
000852  e6ca              B        |L1.1514|
;;;487    
                          ENDP

                  get_dqt PROC
;;;489    LOCAL(boolean)
;;;490    get_dqt (j_decompress_ptr cinfo)
000854  e92d4ffe          PUSH     {r1-r11,lr}
;;;491    /* Process a DQT marker */
;;;492    {
000858  4605              MOV      r5,r0
;;;493      INT32 length;
;;;494      int n, i, prec;
;;;495      unsigned int tmp;
;;;496      JQUANT_TBL *quant_ptr;
;;;497      INPUT_VARS(cinfo);
00085a  69ac              LDR      r4,[r5,#0x18]
00085c  6827              LDR      r7,[r4,#0]
00085e  f8d48004          LDR      r8,[r4,#4]
;;;498    
;;;499      INPUT_2BYTES(cinfo, length, return FALSE);
000862  bf00              NOP      
000864  f1b80f00          CMP      r8,#0
000868  d109              BNE      |L1.2174|
00086a  4628              MOV      r0,r5
00086c  68e1              LDR      r1,[r4,#0xc]
00086e  4788              BLX      r1
000870  b910              CBNZ     r0,|L1.2168|
000872  2000              MOVS     r0,#0
                  |L1.2164|
;;;500      length -= 2;
;;;501    
;;;502      while (length > 0) {
;;;503        INPUT_BYTE(cinfo, n, return FALSE);
;;;504        prec = n >> 4;
;;;505        n &= 0x0F;
;;;506    
;;;507        TRACEMS2(cinfo, 1, JTRC_DQT, n, prec);
;;;508    
;;;509        if (n >= NUM_QUANT_TBLS)
;;;510          ERREXIT1(cinfo, JERR_DQT_INDEX, n);
;;;511          
;;;512        if (cinfo->quant_tbl_ptrs[n] == NULL)
;;;513          cinfo->quant_tbl_ptrs[n] = jpeg_alloc_quant_table((j_common_ptr) cinfo);
;;;514        quant_ptr = cinfo->quant_tbl_ptrs[n];
;;;515    
;;;516        for (i = 0; i < DCTSIZE2; i++) {
;;;517          if (prec)
;;;518    	INPUT_2BYTES(cinfo, tmp, return FALSE);
;;;519          else
;;;520    	INPUT_BYTE(cinfo, tmp, return FALSE);
;;;521          /* We convert the zigzag-order table to natural array order. */
;;;522          quant_ptr->quantval[jpeg_natural_order[i]] = (UINT16) tmp;
;;;523        }
;;;524    
;;;525        if (cinfo->err->trace_level >= 2) {
;;;526          for (i = 0; i < DCTSIZE2; i += 8) {
;;;527    	TRACEMS8(cinfo, 2, JTRC_QUANTVALS,
;;;528    		 quant_ptr->quantval[i],   quant_ptr->quantval[i+1],
;;;529    		 quant_ptr->quantval[i+2], quant_ptr->quantval[i+3],
;;;530    		 quant_ptr->quantval[i+4], quant_ptr->quantval[i+5],
;;;531    		 quant_ptr->quantval[i+6], quant_ptr->quantval[i+7]);
;;;532          }
;;;533        }
;;;534    
;;;535        length -= DCTSIZE2+1;
;;;536        if (prec) length -= DCTSIZE2;
;;;537      }
;;;538    
;;;539      if (length != 0)
;;;540        ERREXIT(cinfo, JERR_BAD_LENGTH);
;;;541    
;;;542      INPUT_SYNC(cinfo);
;;;543      return TRUE;
;;;544    }
000874  e8bd8ffe          POP      {r1-r11,pc}
                  |L1.2168|
000878  6827              LDR      r7,[r4,#0]            ;499
00087a  f8d48004          LDR      r8,[r4,#4]            ;499
                  |L1.2174|
00087e  f1a80801          SUB      r8,r8,#1              ;499
000882  f8171b01          LDRB     r1,[r7],#1            ;499
000886  ea4f2001          LSL      r0,r1,#8              ;499
00088a  9002              STR      r0,[sp,#8]            ;499
00088c  f1b80f00          CMP      r8,#0                 ;499
000890  d108              BNE      |L1.2212|
000892  4628              MOV      r0,r5                 ;499
000894  68e1              LDR      r1,[r4,#0xc]          ;499
000896  4788              BLX      r1                    ;499
000898  b908              CBNZ     r0,|L1.2206|
00089a  2000              MOVS     r0,#0                 ;499
00089c  e7ea              B        |L1.2164|
                  |L1.2206|
00089e  6827              LDR      r7,[r4,#0]            ;499
0008a0  f8d48004          LDR      r8,[r4,#4]            ;499
                  |L1.2212|
0008a4  f1a80801          SUB      r8,r8,#1              ;499
0008a8  f8171b01          LDRB     r1,[r7],#1            ;499
0008ac  9802              LDR      r0,[sp,#8]            ;499
0008ae  4408              ADD      r0,r0,r1              ;499
0008b0  9002              STR      r0,[sp,#8]            ;499
0008b2  bf00              NOP                            ;499
0008b4  9802              LDR      r0,[sp,#8]            ;500
0008b6  f1a00002          SUB      r0,r0,#2              ;500
0008ba  9002              STR      r0,[sp,#8]            ;500
0008bc  e0e0              B        |L1.2688|
                  |L1.2238|
0008be  bf00              NOP                            ;503
0008c0  f1b80f00          CMP      r8,#0                 ;503
0008c4  d108              BNE      |L1.2264|
0008c6  4628              MOV      r0,r5                 ;503
0008c8  68e1              LDR      r1,[r4,#0xc]          ;503
0008ca  4788              BLX      r1                    ;503
0008cc  b908              CBNZ     r0,|L1.2258|
0008ce  2000              MOVS     r0,#0                 ;503
0008d0  e7d0              B        |L1.2164|
                  |L1.2258|
0008d2  6827              LDR      r7,[r4,#0]            ;503
0008d4  f8d48004          LDR      r8,[r4,#4]            ;503
                  |L1.2264|
0008d8  f1a80801          SUB      r8,r8,#1              ;503
0008dc  f817ab01          LDRB     r10,[r7],#1           ;503
0008e0  bf00              NOP                            ;503
0008e2  ea4f102a          ASR      r0,r10,#4             ;504
0008e6  9001              STR      r0,[sp,#4]            ;504
0008e8  f00a0a0f          AND      r10,r10,#0xf          ;505
0008ec  f04f0051          MOV      r0,#0x51              ;507
0008f0  6829              LDR      r1,[r5,#0]            ;507
0008f2  6148              STR      r0,[r1,#0x14]         ;507
0008f4  6828              LDR      r0,[r5,#0]            ;507
0008f6  f8c0a018          STR      r10,[r0,#0x18]        ;507
0008fa  9801              LDR      r0,[sp,#4]            ;507
0008fc  6829              LDR      r1,[r5,#0]            ;507
0008fe  61c8              STR      r0,[r1,#0x1c]         ;507
000900  6828              LDR      r0,[r5,#0]            ;507
000902  f04f0101          MOV      r1,#1                 ;507
000906  6842              LDR      r2,[r0,#4]            ;507
000908  4628              MOV      r0,r5                 ;507
00090a  4790              BLX      r2                    ;507
00090c  f1ba0f04          CMP      r10,#4                ;509
000910  db0a              BLT      |L1.2344|
000912  f04f001f          MOV      r0,#0x1f              ;510
000916  6829              LDR      r1,[r5,#0]            ;510
000918  6148              STR      r0,[r1,#0x14]         ;510
00091a  6828              LDR      r0,[r5,#0]            ;510
00091c  f8c0a018          STR      r10,[r0,#0x18]        ;510
000920  6828              LDR      r0,[r5,#0]            ;510
000922  6801              LDR      r1,[r0,#0]            ;510
000924  4628              MOV      r0,r5                 ;510
000926  4788              BLX      r1                    ;510
                  |L1.2344|
000928  f10500a4          ADD      r0,r5,#0xa4           ;512
00092c  f850002a          LDR      r0,[r0,r10,LSL #2]    ;512
000930  b930              CBNZ     r0,|L1.2368|
000932  4628              MOV      r0,r5                 ;513
000934  f7fffffe          BL       jpeg_alloc_quant_table
000938  f10501a4          ADD      r1,r5,#0xa4           ;513
00093c  f841002a          STR      r0,[r1,r10,LSL #2]    ;513
                  |L1.2368|
000940  f10500a4          ADD      r0,r5,#0xa4           ;514
000944  f850902a          LDR      r9,[r0,r10,LSL #2]    ;514
000948  f04f0600          MOV      r6,#0                 ;516
00094c  e044              B        |L1.2520|
                  |L1.2382|
00094e  9801              LDR      r0,[sp,#4]            ;517
000950  b338              CBZ      r0,|L1.2466|
000952  bf00              NOP                            ;518
000954  f1b80f00          CMP      r8,#0                 ;518
000958  d108              BNE      |L1.2412|
00095a  4628              MOV      r0,r5                 ;518
00095c  68e1              LDR      r1,[r4,#0xc]          ;518
00095e  4788              BLX      r1                    ;518
000960  b908              CBNZ     r0,|L1.2406|
000962  2000              MOVS     r0,#0                 ;518
000964  e786              B        |L1.2164|
                  |L1.2406|
000966  6827              LDR      r7,[r4,#0]            ;518
000968  f8d48004          LDR      r8,[r4,#4]            ;518
                  |L1.2412|
00096c  f1a80801          SUB      r8,r8,#1              ;518
000970  f8171b01          LDRB     r1,[r7],#1            ;518
000974  ea4f2001          LSL      r0,r1,#8              ;518
000978  9000              STR      r0,[sp,#0]            ;518
00097a  f1b80f00          CMP      r8,#0                 ;518
00097e  d108              BNE      |L1.2450|
000980  4628              MOV      r0,r5                 ;518
000982  68e1              LDR      r1,[r4,#0xc]          ;518
000984  4788              BLX      r1                    ;518
000986  b908              CBNZ     r0,|L1.2444|
000988  2000              MOVS     r0,#0                 ;518
00098a  e773              B        |L1.2164|
                  |L1.2444|
00098c  6827              LDR      r7,[r4,#0]            ;518
00098e  f8d48004          LDR      r8,[r4,#4]            ;518
                  |L1.2450|
000992  f1a80801          SUB      r8,r8,#1              ;518
000996  f8171b01          LDRB     r1,[r7],#1            ;518
00099a  9800              LDR      r0,[sp,#0]            ;518
00099c  4408              ADD      r0,r0,r1              ;518
00099e  9000              STR      r0,[sp,#0]            ;518
0009a0  e012              B        |L1.2504|
                  |L1.2466|
0009a2  bf00              NOP                            ;520
0009a4  f1b80f00          CMP      r8,#0                 ;520
0009a8  d108              BNE      |L1.2492|
0009aa  4628              MOV      r0,r5                 ;520
0009ac  68e1              LDR      r1,[r4,#0xc]          ;520
0009ae  4788              BLX      r1                    ;520
0009b0  b908              CBNZ     r0,|L1.2486|
0009b2  2000              MOVS     r0,#0                 ;520
0009b4  e75e              B        |L1.2164|
                  |L1.2486|
0009b6  6827              LDR      r7,[r4,#0]            ;520
0009b8  f8d48004          LDR      r8,[r4,#4]            ;520
                  |L1.2492|
0009bc  f1a80801          SUB      r8,r8,#1              ;520
0009c0  f8170b01          LDRB     r0,[r7],#1            ;520
0009c4  9000              STR      r0,[sp,#0]            ;520
0009c6  bf00              NOP                            ;520
                  |L1.2504|
0009c8  49fe              LDR      r1,|L1.3524|
0009ca  f8511026          LDR      r1,[r1,r6,LSL #2]     ;522
0009ce  9800              LDR      r0,[sp,#0]            ;522
0009d0  f8290011          STRH     r0,[r9,r1,LSL #1]     ;522
0009d4  f1060601          ADD      r6,r6,#1              ;516
                  |L1.2520|
0009d8  2e40              CMP      r6,#0x40              ;516
0009da  dbb8              BLT      |L1.2382|
0009dc  6828              LDR      r0,[r5,#0]            ;525
0009de  6e80              LDR      r0,[r0,#0x68]         ;525
0009e0  2802              CMP      r0,#2                 ;525
0009e2  db43              BLT      |L1.2668|
0009e4  f04f0600          MOV      r6,#0                 ;526
0009e8  e03e              B        |L1.2664|
                  |L1.2538|
0009ea  bf00              NOP                            ;527
0009ec  6828              LDR      r0,[r5,#0]            ;527
0009ee  f1000b18          ADD      r11,r0,#0x18          ;527
0009f2  f8390016          LDRH     r0,[r9,r6,LSL #1]     ;527
0009f6  f8cb0000          STR      r0,[r11,#0]           ;527
0009fa  f1060001          ADD      r0,r6,#1              ;527
0009fe  f8390010          LDRH     r0,[r9,r0,LSL #1]     ;527
000a02  f8cb0004          STR      r0,[r11,#4]           ;527
000a06  f1060002          ADD      r0,r6,#2              ;527
000a0a  f8390010          LDRH     r0,[r9,r0,LSL #1]     ;527
000a0e  f8cb0008          STR      r0,[r11,#8]           ;527
000a12  f1060003          ADD      r0,r6,#3              ;527
000a16  f8390010          LDRH     r0,[r9,r0,LSL #1]     ;527
000a1a  f8cb000c          STR      r0,[r11,#0xc]         ;527
000a1e  f1060004          ADD      r0,r6,#4              ;527
000a22  f8390010          LDRH     r0,[r9,r0,LSL #1]     ;527
000a26  f8cb0010          STR      r0,[r11,#0x10]        ;527
000a2a  f1060005          ADD      r0,r6,#5              ;527
000a2e  f8390010          LDRH     r0,[r9,r0,LSL #1]     ;527
000a32  f8cb0014          STR      r0,[r11,#0x14]        ;527
000a36  f1060006          ADD      r0,r6,#6              ;527
000a3a  f8390010          LDRH     r0,[r9,r0,LSL #1]     ;527
000a3e  f8cb0018          STR      r0,[r11,#0x18]        ;527
000a42  f1060007          ADD      r0,r6,#7              ;527
000a46  f8390010          LDRH     r0,[r9,r0,LSL #1]     ;527
000a4a  f8cb001c          STR      r0,[r11,#0x1c]        ;527
000a4e  f04f005d          MOV      r0,#0x5d              ;527
000a52  6829              LDR      r1,[r5,#0]            ;527
000a54  6148              STR      r0,[r1,#0x14]         ;527
000a56  6828              LDR      r0,[r5,#0]            ;527
000a58  f04f0102          MOV      r1,#2                 ;527
000a5c  6842              LDR      r2,[r0,#4]            ;527
000a5e  4628              MOV      r0,r5                 ;527
000a60  4790              BLX      r2                    ;527
000a62  bf00              NOP                            ;527
000a64  f1060608          ADD      r6,r6,#8              ;526
                  |L1.2664|
000a68  2e40              CMP      r6,#0x40              ;526
000a6a  dbbe              BLT      |L1.2538|
                  |L1.2668|
000a6c  9802              LDR      r0,[sp,#8]            ;535
000a6e  f1a00041          SUB      r0,r0,#0x41           ;535
000a72  9002              STR      r0,[sp,#8]            ;535
000a74  9801              LDR      r0,[sp,#4]            ;536
000a76  b118              CBZ      r0,|L1.2688|
000a78  9802              LDR      r0,[sp,#8]            ;536
000a7a  f1a00040          SUB      r0,r0,#0x40           ;536
000a7e  9002              STR      r0,[sp,#8]            ;536
                  |L1.2688|
000a80  9802              LDR      r0,[sp,#8]            ;502
000a82  2800              CMP      r0,#0                 ;502
000a84  f73faf1b          BGT      |L1.2238|
000a88  9802              LDR      r0,[sp,#8]            ;539
000a8a  b138              CBZ      r0,|L1.2716|
000a8c  f04f000b          MOV      r0,#0xb               ;540
000a90  6829              LDR      r1,[r5,#0]            ;540
000a92  6148              STR      r0,[r1,#0x14]         ;540
000a94  6828              LDR      r0,[r5,#0]            ;540
000a96  6801              LDR      r1,[r0,#0]            ;540
000a98  4628              MOV      r0,r5                 ;540
000a9a  4788              BLX      r1                    ;540
                  |L1.2716|
000a9c  6027              STR      r7,[r4,#0]            ;542
000a9e  f8c48004          STR      r8,[r4,#4]            ;542
000aa2  2001              MOVS     r0,#1                 ;543
000aa4  e6e6              B        |L1.2164|
;;;545    
                          ENDP

                  get_dri PROC
;;;547    LOCAL(boolean)
;;;548    get_dri (j_decompress_ptr cinfo)
000aa6  e92d47f0          PUSH     {r4-r10,lr}
;;;549    /* Process a DRI marker */
;;;550    {
000aaa  4607              MOV      r7,r0
;;;551      INT32 length;
;;;552      unsigned int tmp;
;;;553      INPUT_VARS(cinfo);
000aac  69bc              LDR      r4,[r7,#0x18]
000aae  6825              LDR      r5,[r4,#0]
000ab0  6866              LDR      r6,[r4,#4]
;;;554    
;;;555      INPUT_2BYTES(cinfo, length, return FALSE);
000ab2  bf00              NOP      
000ab4  b946              CBNZ     r6,|L1.2760|
000ab6  4638              MOV      r0,r7
000ab8  68e1              LDR      r1,[r4,#0xc]
000aba  4788              BLX      r1
000abc  b910              CBNZ     r0,|L1.2756|
000abe  2000              MOVS     r0,#0
                  |L1.2752|
;;;556      
;;;557      if (length != 4)
;;;558        ERREXIT(cinfo, JERR_BAD_LENGTH);
;;;559    
;;;560      INPUT_2BYTES(cinfo, tmp, return FALSE);
;;;561    
;;;562      TRACEMS1(cinfo, 1, JTRC_DRI, tmp);
;;;563    
;;;564      cinfo->restart_interval = tmp;
;;;565    
;;;566      INPUT_SYNC(cinfo);
;;;567      return TRUE;
;;;568    }
000ac0  e8bd87f0          POP      {r4-r10,pc}
                  |L1.2756|
000ac4  6825              LDR      r5,[r4,#0]            ;555
000ac6  6866              LDR      r6,[r4,#4]            ;555
                  |L1.2760|
000ac8  f1a60601          SUB      r6,r6,#1              ;555
000acc  f8151b01          LDRB     r1,[r5],#1            ;555
000ad0  ea4f2901          LSL      r9,r1,#8              ;555
000ad4  b93e              CBNZ     r6,|L1.2790|
000ad6  4638              MOV      r0,r7                 ;555
000ad8  68e1              LDR      r1,[r4,#0xc]          ;555
000ada  4788              BLX      r1                    ;555
000adc  b908              CBNZ     r0,|L1.2786|
000ade  2000              MOVS     r0,#0                 ;555
000ae0  e7ee              B        |L1.2752|
                  |L1.2786|
000ae2  6825              LDR      r5,[r4,#0]            ;555
000ae4  6866              LDR      r6,[r4,#4]            ;555
                  |L1.2790|
000ae6  f1a60601          SUB      r6,r6,#1              ;555
000aea  f8151b01          LDRB     r1,[r5],#1            ;555
000aee  4489              ADD      r9,r9,r1              ;555
000af0  bf00              NOP                            ;555
000af2  f1b90f04          CMP      r9,#4                 ;557
000af6  d007              BEQ      |L1.2824|
000af8  f04f000b          MOV      r0,#0xb               ;558
000afc  6839              LDR      r1,[r7,#0]            ;558
000afe  6148              STR      r0,[r1,#0x14]         ;558
000b00  6838              LDR      r0,[r7,#0]            ;558
000b02  6801              LDR      r1,[r0,#0]            ;558
000b04  4638              MOV      r0,r7                 ;558
000b06  4788              BLX      r1                    ;558
                  |L1.2824|
000b08  bf00              NOP                            ;560
000b0a  b93e              CBNZ     r6,|L1.2844|
000b0c  4638              MOV      r0,r7                 ;560
000b0e  68e1              LDR      r1,[r4,#0xc]          ;560
000b10  4788              BLX      r1                    ;560
000b12  b908              CBNZ     r0,|L1.2840|
000b14  2000              MOVS     r0,#0                 ;560
000b16  e7d3              B        |L1.2752|
                  |L1.2840|
000b18  6825              LDR      r5,[r4,#0]            ;560
000b1a  6866              LDR      r6,[r4,#4]            ;560
                  |L1.2844|
000b1c  f1a60601          SUB      r6,r6,#1              ;560
000b20  f8151b01          LDRB     r1,[r5],#1            ;560
000b24  ea4f2801          LSL      r8,r1,#8              ;560
000b28  b93e              CBNZ     r6,|L1.2874|
000b2a  4638              MOV      r0,r7                 ;560
000b2c  68e1              LDR      r1,[r4,#0xc]          ;560
000b2e  4788              BLX      r1                    ;560
000b30  b908              CBNZ     r0,|L1.2870|
000b32  2000              MOVS     r0,#0                 ;560
000b34  e7c4              B        |L1.2752|
                  |L1.2870|
000b36  6825              LDR      r5,[r4,#0]            ;560
000b38  6866              LDR      r6,[r4,#4]            ;560
                  |L1.2874|
000b3a  f1a60601          SUB      r6,r6,#1              ;560
000b3e  f8151b01          LDRB     r1,[r5],#1            ;560
000b42  4488              ADD      r8,r8,r1              ;560
000b44  bf00              NOP                            ;560
000b46  f04f0052          MOV      r0,#0x52              ;562
000b4a  6839              LDR      r1,[r7,#0]            ;562
000b4c  6148              STR      r0,[r1,#0x14]         ;562
000b4e  6838              LDR      r0,[r7,#0]            ;562
000b50  f8c08018          STR      r8,[r0,#0x18]         ;562
000b54  6838              LDR      r0,[r7,#0]            ;562
000b56  f04f0101          MOV      r1,#1                 ;562
000b5a  6842              LDR      r2,[r0,#4]            ;562
000b5c  4638              MOV      r0,r7                 ;562
000b5e  4790              BLX      r2                    ;562
000b60  f8c78114          STR      r8,[r7,#0x114]        ;564
000b64  6025              STR      r5,[r4,#0]            ;566
000b66  6066              STR      r6,[r4,#4]            ;566
000b68  2001              MOVS     r0,#1                 ;567
000b6a  e7a9              B        |L1.2752|
;;;569    
                          ENDP

                  examine_app0 PROC
;;;583    LOCAL(void)
;;;584    examine_app0 (j_decompress_ptr cinfo, JOCTET FAR * data,
000b6c  e92d47f0          PUSH     {r4-r10,lr}
;;;585    	      unsigned int datalen, INT32 remaining)
;;;586    /* Examine first few bytes from an APP0.
;;;587     * Take appropriate action if it is a JFIF marker.
;;;588     * datalen is # of bytes at data[], remaining is length of rest of marker data.
;;;589     */
;;;590    {
000b70  4604              MOV      r4,r0
000b72  460d              MOV      r5,r1
000b74  4690              MOV      r8,r2
000b76  4699              MOV      r9,r3
;;;591      INT32 totallen = (INT32) datalen + remaining;
000b78  eb080609          ADD      r6,r8,r9
;;;592    
;;;593      if (datalen >= APP0_DATA_LEN &&
000b7c  f1b80f0e          CMP      r8,#0xe
000b80  d37e              BCC      |L1.3200|
;;;594          GETJOCTET(data[0]) == 0x4A &&
000b82  7828              LDRB     r0,[r5,#0]
000b84  284a              CMP      r0,#0x4a
000b86  d17b              BNE      |L1.3200|
;;;595          GETJOCTET(data[1]) == 0x46 &&
000b88  7868              LDRB     r0,[r5,#1]
000b8a  2846              CMP      r0,#0x46
000b8c  d17f              BNE      |L1.3214|
;;;596          GETJOCTET(data[2]) == 0x49 &&
000b8e  78a8              LDRB     r0,[r5,#2]
000b90  2849              CMP      r0,#0x49
000b92  d17c              BNE      |L1.3214|
;;;597          GETJOCTET(data[3]) == 0x46 &&
000b94  78e8              LDRB     r0,[r5,#3]
000b96  2846              CMP      r0,#0x46
000b98  d179              BNE      |L1.3214|
;;;598          GETJOCTET(data[4]) == 0) {
000b9a  7928              LDRB     r0,[r5,#4]
000b9c  2800              CMP      r0,#0
000b9e  d176              BNE      |L1.3214|
;;;599        /* Found JFIF APP0 marker: save info */
;;;600        cinfo->saw_JFIF_marker = TRUE;
000ba0  f04f0001          MOV      r0,#1
000ba4  f504748c          ADD      r4,r4,#0x118
000ba8  6020              STR      r0,[r4,#0]
;;;601        cinfo->JFIF_major_version = GETJOCTET(data[5]);
000baa  7968              LDRB     r0,[r5,#5]
000bac  7120              STRB     r0,[r4,#4]
;;;602        cinfo->JFIF_minor_version = GETJOCTET(data[6]);
000bae  79a8              LDRB     r0,[r5,#6]
000bb0  7160              STRB     r0,[r4,#5]
;;;603        cinfo->density_unit = GETJOCTET(data[7]);
000bb2  79e8              LDRB     r0,[r5,#7]
000bb4  71a0              STRB     r0,[r4,#6]
;;;604        cinfo->X_density = (GETJOCTET(data[8]) << 8) + GETJOCTET(data[9]);
000bb6  7a68              LDRB     r0,[r5,#9]
000bb8  7a29              LDRB     r1,[r5,#8]
000bba  eb002001          ADD      r0,r0,r1,LSL #8
000bbe  8120              STRH     r0,[r4,#8]
;;;605        cinfo->Y_density = (GETJOCTET(data[10]) << 8) + GETJOCTET(data[11]);
000bc0  7ae8              LDRB     r0,[r5,#0xb]
000bc2  7aa9              LDRB     r1,[r5,#0xa]
000bc4  eb002001          ADD      r0,r0,r1,LSL #8
000bc8  8160              STRH     r0,[r4,#0xa]
;;;606        /* Check version.
;;;607         * Major version must be 1, anything else signals an incompatible change.
;;;608         * (We used to treat this as an error, but now it's a nonfatal warning,
;;;609         * because some bozo at Hijaak couldn't read the spec.)
;;;610         * Minor version should be 0..2, but process anyway if newer.
;;;611         */
;;;612        if (cinfo->JFIF_major_version != 1)
000bca  7920              LDRB     r0,[r4,#4]
000bcc  f5a4748c          SUB      r4,r4,#0x118
000bd0  2801              CMP      r0,#1
000bd2  d011              BEQ      |L1.3064|
;;;613          WARNMS2(cinfo, JWRN_JFIF_MAJOR,
000bd4  f04f0077          MOV      r0,#0x77
000bd8  6821              LDR      r1,[r4,#0]
000bda  6148              STR      r0,[r1,#0x14]
000bdc  f894011c          LDRB     r0,[r4,#0x11c]
000be0  6821              LDR      r1,[r4,#0]
000be2  6188              STR      r0,[r1,#0x18]
000be4  f894111d          LDRB     r1,[r4,#0x11d]
000be8  6820              LDR      r0,[r4,#0]
000bea  61c1              STR      r1,[r0,#0x1c]
000bec  6820              LDR      r0,[r4,#0]
000bee  f04f31ff          MOV      r1,#0xffffffff
000bf2  6842              LDR      r2,[r0,#4]
000bf4  4620              MOV      r0,r4
000bf6  4790              BLX      r2
                  |L1.3064|
;;;614    	      cinfo->JFIF_major_version, cinfo->JFIF_minor_version);
;;;615        /* Generate trace messages */
;;;616        TRACEMS5(cinfo, 1, JTRC_JFIF,
000bf8  bf00              NOP      
000bfa  6820              LDR      r0,[r4,#0]
000bfc  f1000718          ADD      r7,r0,#0x18
000c00  f894011c          LDRB     r0,[r4,#0x11c]
000c04  6038              STR      r0,[r7,#0]
000c06  f894011d          LDRB     r0,[r4,#0x11d]
000c0a  6078              STR      r0,[r7,#4]
000c0c  f8b40120          LDRH     r0,[r4,#0x120]
000c10  60b8              STR      r0,[r7,#8]
000c12  f8b40122          LDRH     r0,[r4,#0x122]
000c16  60f8              STR      r0,[r7,#0xc]
000c18  f894011e          LDRB     r0,[r4,#0x11e]
000c1c  6138              STR      r0,[r7,#0x10]
000c1e  f04f0057          MOV      r0,#0x57
000c22  6821              LDR      r1,[r4,#0]
000c24  6148              STR      r0,[r1,#0x14]
000c26  6820              LDR      r0,[r4,#0]
000c28  f04f0101          MOV      r1,#1
000c2c  6842              LDR      r2,[r0,#4]
000c2e  4620              MOV      r0,r4
000c30  4790              BLX      r2
000c32  bf00              NOP      
;;;617    	     cinfo->JFIF_major_version, cinfo->JFIF_minor_version,
;;;618    	     cinfo->X_density, cinfo->Y_density, cinfo->density_unit);
;;;619        /* Validate thumbnail dimensions and issue appropriate messages */
;;;620        if (GETJOCTET(data[12]) | GETJOCTET(data[13]))
000c34  7b28              LDRB     r0,[r5,#0xc]
000c36  7b69              LDRB     r1,[r5,#0xd]
000c38  4308              ORRS     r0,r0,r1
000c3a  d00f              BEQ      |L1.3164|
;;;621          TRACEMS2(cinfo, 1, JTRC_JFIF_THUMBNAIL,
000c3c  f04f005a          MOV      r0,#0x5a
000c40  6821              LDR      r1,[r4,#0]
000c42  6148              STR      r0,[r1,#0x14]
000c44  7b28              LDRB     r0,[r5,#0xc]
000c46  6821              LDR      r1,[r4,#0]
000c48  6188              STR      r0,[r1,#0x18]
000c4a  7b69              LDRB     r1,[r5,#0xd]
000c4c  6820              LDR      r0,[r4,#0]
000c4e  61c1              STR      r1,[r0,#0x1c]
000c50  6820              LDR      r0,[r4,#0]
000c52  f04f0101          MOV      r1,#1
000c56  6842              LDR      r2,[r0,#4]
000c58  4620              MOV      r0,r4
000c5a  4790              BLX      r2
                  |L1.3164|
;;;622    	       GETJOCTET(data[12]), GETJOCTET(data[13]));
;;;623        totallen -= APP0_DATA_LEN;
000c5c  f1a6060e          SUB      r6,r6,#0xe
;;;624        if (totallen !=
000c60  7b28              LDRB     r0,[r5,#0xc]
000c62  7b69              LDRB     r1,[r5,#0xd]
000c64  fb00f001          MUL      r0,r0,r1
000c68  eb000040          ADD      r0,r0,r0,LSL #1
000c6c  42b0              CMP      r0,r6
000c6e  d06c              BEQ      |L1.3402|
;;;625    	((INT32)GETJOCTET(data[12]) * (INT32)GETJOCTET(data[13]) * (INT32) 3))
;;;626          TRACEMS1(cinfo, 1, JTRC_JFIF_BADTHUMBNAILSIZE, (int) totallen);
000c70  f04f0058          MOV      r0,#0x58
000c74  6821              LDR      r1,[r4,#0]
000c76  6148              STR      r0,[r1,#0x14]
000c78  6820              LDR      r0,[r4,#0]
000c7a  6186              STR      r6,[r0,#0x18]
000c7c  6820              LDR      r0,[r4,#0]
000c7e  e000              B        |L1.3202|
                  |L1.3200|
000c80  e005              B        |L1.3214|
                  |L1.3202|
000c82  f04f0101          MOV      r1,#1
000c86  6842              LDR      r2,[r0,#4]
000c88  4620              MOV      r0,r4
000c8a  4790              BLX      r2
000c8c  e05d              B        |L1.3402|
                  |L1.3214|
;;;627      } else if (datalen >= 6 &&
000c8e  f1b80f06          CMP      r8,#6
000c92  d34e              BCC      |L1.3378|
;;;628          GETJOCTET(data[0]) == 0x4A &&
000c94  7828              LDRB     r0,[r5,#0]
000c96  284a              CMP      r0,#0x4a
000c98  d14b              BNE      |L1.3378|
;;;629          GETJOCTET(data[1]) == 0x46 &&
000c9a  7868              LDRB     r0,[r5,#1]
000c9c  2846              CMP      r0,#0x46
000c9e  d148              BNE      |L1.3378|
;;;630          GETJOCTET(data[2]) == 0x58 &&
000ca0  78a8              LDRB     r0,[r5,#2]
000ca2  2858              CMP      r0,#0x58
000ca4  d145              BNE      |L1.3378|
;;;631          GETJOCTET(data[3]) == 0x58 &&
000ca6  78e8              LDRB     r0,[r5,#3]
000ca8  2858              CMP      r0,#0x58
000caa  d142              BNE      |L1.3378|
;;;632          GETJOCTET(data[4]) == 0) {
000cac  7928              LDRB     r0,[r5,#4]
000cae  bb70              CBNZ     r0,|L1.3342|
;;;633        /* Found JFIF "JFXX" extension APP0 marker */
;;;634        /* The library doesn't actually do anything with these,
;;;635         * but we try to produce a helpful trace message.
;;;636         */
;;;637        switch (GETJOCTET(data[5])) {
000cb0  7968              LDRB     r0,[r5,#5]
000cb2  2810              CMP      r0,#0x10
000cb4  d004              BEQ      |L1.3264|
000cb6  2811              CMP      r0,#0x11
000cb8  d00f              BEQ      |L1.3290|
000cba  2813              CMP      r0,#0x13
000cbc  d128              BNE      |L1.3344|
000cbe  e019              B        |L1.3316|
                  |L1.3264|
;;;638        case 0x10:
;;;639          TRACEMS1(cinfo, 1, JTRC_THUMB_JPEG, (int) totallen);
000cc0  f04f006c          MOV      r0,#0x6c
000cc4  6821              LDR      r1,[r4,#0]
000cc6  6148              STR      r0,[r1,#0x14]
000cc8  6820              LDR      r0,[r4,#0]
000cca  6186              STR      r6,[r0,#0x18]
000ccc  6820              LDR      r0,[r4,#0]
000cce  f04f0101          MOV      r1,#1
000cd2  6842              LDR      r2,[r0,#4]
000cd4  4620              MOV      r0,r4
000cd6  4790              BLX      r2
;;;640          break;
000cd8  e02a              B        |L1.3376|
                  |L1.3290|
;;;641        case 0x11:
;;;642          TRACEMS1(cinfo, 1, JTRC_THUMB_PALETTE, (int) totallen);
000cda  f04f006d          MOV      r0,#0x6d
000cde  6821              LDR      r1,[r4,#0]
000ce0  6148              STR      r0,[r1,#0x14]
000ce2  6820              LDR      r0,[r4,#0]
000ce4  6186              STR      r6,[r0,#0x18]
000ce6  6820              LDR      r0,[r4,#0]
000ce8  f04f0101          MOV      r1,#1
000cec  6842              LDR      r2,[r0,#4]
000cee  4620              MOV      r0,r4
000cf0  4790              BLX      r2
;;;643          break;
000cf2  e01d              B        |L1.3376|
                  |L1.3316|
;;;644        case 0x13:
;;;645          TRACEMS1(cinfo, 1, JTRC_THUMB_RGB, (int) totallen);
000cf4  f04f006e          MOV      r0,#0x6e
000cf8  6821              LDR      r1,[r4,#0]
000cfa  6148              STR      r0,[r1,#0x14]
000cfc  6820              LDR      r0,[r4,#0]
000cfe  6186              STR      r6,[r0,#0x18]
000d00  6820              LDR      r0,[r4,#0]
000d02  f04f0101          MOV      r1,#1
000d06  6842              LDR      r2,[r0,#4]
000d08  4620              MOV      r0,r4
000d0a  4790              BLX      r2
;;;646          break;
000d0c  e010              B        |L1.3376|
                  |L1.3342|
000d0e  e010              B        |L1.3378|
                  |L1.3344|
;;;647        default:
;;;648          TRACEMS2(cinfo, 1, JTRC_JFIF_EXTENSION,
000d10  f04f0059          MOV      r0,#0x59
000d14  6821              LDR      r1,[r4,#0]
000d16  6148              STR      r0,[r1,#0x14]
000d18  7968              LDRB     r0,[r5,#5]
000d1a  6821              LDR      r1,[r4,#0]
000d1c  6188              STR      r0,[r1,#0x18]
000d1e  6820              LDR      r0,[r4,#0]
000d20  61c6              STR      r6,[r0,#0x1c]
000d22  6820              LDR      r0,[r4,#0]
000d24  f04f0101          MOV      r1,#1
000d28  6842              LDR      r2,[r0,#4]
000d2a  4620              MOV      r0,r4
000d2c  4790              BLX      r2
;;;649    	       GETJOCTET(data[5]), (int) totallen);
;;;650          break;
000d2e  bf00              NOP      
                  |L1.3376|
000d30  e00b              B        |L1.3402|
                  |L1.3378|
;;;651        }
;;;652      } else {
;;;653        /* Start of APP0 does not match "JFIF" or "JFXX", or too short */
;;;654        TRACEMS1(cinfo, 1, JTRC_APP0, (int) totallen);
000d32  f04f004d          MOV      r0,#0x4d
000d36  6821              LDR      r1,[r4,#0]
000d38  6148              STR      r0,[r1,#0x14]
000d3a  6820              LDR      r0,[r4,#0]
000d3c  6186              STR      r6,[r0,#0x18]
000d3e  6820              LDR      r0,[r4,#0]
000d40  f04f0101          MOV      r1,#1
000d44  6842              LDR      r2,[r0,#4]
000d46  4620              MOV      r0,r4
000d48  4790              BLX      r2
                  |L1.3402|
;;;655      }
;;;656    }
000d4a  e8bd87f0          POP      {r4-r10,pc}
;;;657    
                          ENDP

                  examine_app14 PROC
;;;659    LOCAL(void)
;;;660    examine_app14 (j_decompress_ptr cinfo, JOCTET FAR * data,
000d4e  e92d5fff          PUSH     {r0-r12,lr}
;;;661    	       unsigned int datalen, INT32 remaining)
;;;662    /* Examine first few bytes from an APP14.
;;;663     * Take appropriate action if it is an Adobe marker.
;;;664     * datalen is # of bytes at data[], remaining is length of rest of marker data.
;;;665     */
;;;666    {
000d52  4605              MOV      r5,r0
000d54  460c              MOV      r4,r1
000d56  4617              MOV      r7,r2
;;;667      unsigned int version, flags0, flags1, transform;
;;;668    
;;;669      if (datalen >= APP14_DATA_LEN &&
000d58  2f0c              CMP      r7,#0xc
000d5a  d33d              BCC      |L1.3544|
;;;670          GETJOCTET(data[0]) == 0x41 &&
000d5c  7820              LDRB     r0,[r4,#0]
000d5e  2841              CMP      r0,#0x41
000d60  d13a              BNE      |L1.3544|
;;;671          GETJOCTET(data[1]) == 0x64 &&
000d62  7860              LDRB     r0,[r4,#1]
000d64  2864              CMP      r0,#0x64
000d66  d137              BNE      |L1.3544|
;;;672          GETJOCTET(data[2]) == 0x6F &&
000d68  78a0              LDRB     r0,[r4,#2]
000d6a  286f              CMP      r0,#0x6f
000d6c  d134              BNE      |L1.3544|
;;;673          GETJOCTET(data[3]) == 0x62 &&
000d6e  78e0              LDRB     r0,[r4,#3]
000d70  2862              CMP      r0,#0x62
000d72  d131              BNE      |L1.3544|
;;;674          GETJOCTET(data[4]) == 0x65) {
000d74  7920              LDRB     r0,[r4,#4]
000d76  2865              CMP      r0,#0x65
000d78  d12e              BNE      |L1.3544|
;;;675        /* Found Adobe APP14 marker */
;;;676        version = (GETJOCTET(data[5]) << 8) + GETJOCTET(data[6]);
000d7a  79a0              LDRB     r0,[r4,#6]
000d7c  7961              LDRB     r1,[r4,#5]
000d7e  eb002901          ADD      r9,r0,r1,LSL #8
;;;677        flags0 = (GETJOCTET(data[7]) << 8) + GETJOCTET(data[8]);
000d82  7a20              LDRB     r0,[r4,#8]
000d84  79e1              LDRB     r1,[r4,#7]
000d86  eb002a01          ADD      r10,r0,r1,LSL #8
;;;678        flags1 = (GETJOCTET(data[9]) << 8) + GETJOCTET(data[10]);
000d8a  7aa0              LDRB     r0,[r4,#0xa]
000d8c  7a61              LDRB     r1,[r4,#9]
000d8e  eb002b01          ADD      r11,r0,r1,LSL #8
;;;679        transform = GETJOCTET(data[11]);
000d92  f894800b          LDRB     r8,[r4,#0xb]
;;;680        TRACEMS4(cinfo, 1, JTRC_ADOBE, version, flags0, flags1, transform);
000d96  bf00              NOP      
000d98  6828              LDR      r0,[r5,#0]
000d9a  f1000618          ADD      r6,r0,#0x18
000d9e  f8c69000          STR      r9,[r6,#0]
000da2  f8c6a004          STR      r10,[r6,#4]
000da6  f8c6b008          STR      r11,[r6,#8]
000daa  f8c6800c          STR      r8,[r6,#0xc]
000dae  f04f004c          MOV      r0,#0x4c
000db2  6829              LDR      r1,[r5,#0]
000db4  6148              STR      r0,[r1,#0x14]
000db6  6828              LDR      r0,[r5,#0]
000db8  f04f0101          MOV      r1,#1
000dbc  6842              LDR      r2,[r0,#4]
000dbe  4628              MOV      r0,r5
000dc0  4790              BLX      r2
000dc2  e001              B        |L1.3528|
                  |L1.3524|
                          DCD      jpeg_natural_order
                  |L1.3528|
000dc8  bf00              NOP      
;;;681        cinfo->saw_Adobe_marker = TRUE;
000dca  f04f0001          MOV      r0,#1
000dce  f8c50124          STR      r0,[r5,#0x124]
;;;682        cinfo->Adobe_transform = (UINT8) transform;
000dd2  f8858128          STRB     r8,[r5,#0x128]
000dd6  e00d              B        |L1.3572|
                  |L1.3544|
;;;683      } else {
;;;684        /* Start of APP14 does not match "Adobe", or too short */
;;;685        TRACEMS1(cinfo, 1, JTRC_APP14, (int) (datalen + remaining));
000dd8  f04f004e          MOV      r0,#0x4e
000ddc  6829              LDR      r1,[r5,#0]
000dde  6148              STR      r0,[r1,#0x14]
000de0  9803              LDR      r0,[sp,#0xc]
000de2  4438              ADD      r0,r0,r7
000de4  6829              LDR      r1,[r5,#0]
000de6  6188              STR      r0,[r1,#0x18]
000de8  6828              LDR      r0,[r5,#0]
000dea  f04f0101          MOV      r1,#1
000dee  6842              LDR      r2,[r0,#4]
000df0  4628              MOV      r0,r5
000df2  4790              BLX      r2
                  |L1.3572|
;;;686      }
;;;687    }
000df4  e8bd9fff          POP      {r0-r12,pc}
;;;688    
                          ENDP

                  get_interesting_appn PROC
;;;690    METHODDEF(boolean)
;;;691    get_interesting_appn (j_decompress_ptr cinfo)
000df8  e92d47ff          PUSH     {r0-r10,lr}
;;;692    /* Process an APP0 or APP14 marker without saving it */
;;;693    {
000dfc  4606              MOV      r6,r0
;;;694      INT32 length;
;;;695      JOCTET b[APPN_DATA_LEN];
;;;696      unsigned int i, numtoread;
;;;697      INPUT_VARS(cinfo);
000dfe  69b4              LDR      r4,[r6,#0x18]
000e00  6827              LDR      r7,[r4,#0]
000e02  f8d48004          LDR      r8,[r4,#4]
;;;698    
;;;699      INPUT_2BYTES(cinfo, length, return FALSE);
000e06  bf00              NOP      
000e08  f1b80f00          CMP      r8,#0
000e0c  d10a              BNE      |L1.3620|
000e0e  4630              MOV      r0,r6
000e10  68e1              LDR      r1,[r4,#0xc]
000e12  4788              BLX      r1
000e14  b918              CBNZ     r0,|L1.3614|
000e16  2000              MOVS     r0,#0
                  |L1.3608|
;;;700      length -= 2;
;;;701    
;;;702      /* get the interesting part of the marker data */
;;;703      if (length >= APPN_DATA_LEN)
;;;704        numtoread = APPN_DATA_LEN;
;;;705      else if (length > 0)
;;;706        numtoread = (unsigned int) length;
;;;707      else
;;;708        numtoread = 0;
;;;709      for (i = 0; i < numtoread; i++)
;;;710        INPUT_BYTE(cinfo, b[i], return FALSE);
;;;711      length -= numtoread;
;;;712    
;;;713      /* process it */
;;;714      switch (cinfo->unread_marker) {
;;;715      case M_APP0:
;;;716        examine_app0(cinfo, (JOCTET FAR *) b, numtoread, length);
;;;717        break;
;;;718      case M_APP14:
;;;719        examine_app14(cinfo, (JOCTET FAR *) b, numtoread, length);
;;;720        break;
;;;721      default:
;;;722        /* can't get here unless jpeg_save_markers chooses wrong processor */
;;;723        ERREXIT1(cinfo, JERR_UNKNOWN_MARKER, cinfo->unread_marker);
;;;724        break;
;;;725      }
;;;726    
;;;727      /* skip any remaining data -- could be lots */
;;;728      INPUT_SYNC(cinfo);
;;;729      if (length > 0)
;;;730        (*cinfo->src->skip_input_data) (cinfo, (long) length);
;;;731    
;;;732      return TRUE;
;;;733    }
000e18  b004              ADD      sp,sp,#0x10
000e1a  e8bd87f0          POP      {r4-r10,pc}
                  |L1.3614|
000e1e  6827              LDR      r7,[r4,#0]            ;699
000e20  f8d48004          LDR      r8,[r4,#4]            ;699
                  |L1.3620|
000e24  f1a80801          SUB      r8,r8,#1              ;699
000e28  f8171b01          LDRB     r1,[r7],#1            ;699
000e2c  ea4f2501          LSL      r5,r1,#8              ;699
000e30  f1b80f00          CMP      r8,#0                 ;699
000e34  d108              BNE      |L1.3656|
000e36  4630              MOV      r0,r6                 ;699
000e38  68e1              LDR      r1,[r4,#0xc]          ;699
000e3a  4788              BLX      r1                    ;699
000e3c  b908              CBNZ     r0,|L1.3650|
000e3e  2000              MOVS     r0,#0                 ;699
000e40  e7ea              B        |L1.3608|
                  |L1.3650|
000e42  6827              LDR      r7,[r4,#0]            ;699
000e44  f8d48004          LDR      r8,[r4,#4]            ;699
                  |L1.3656|
000e48  f1a80801          SUB      r8,r8,#1              ;699
000e4c  f8171b01          LDRB     r1,[r7],#1            ;699
000e50  440d              ADD      r5,r5,r1              ;699
000e52  bf00              NOP                            ;699
000e54  f1a50502          SUB      r5,r5,#2              ;700
000e58  2d0e              CMP      r5,#0xe               ;703
000e5a  db02              BLT      |L1.3682|
000e5c  f04f090e          MOV      r9,#0xe               ;704
000e60  e005              B        |L1.3694|
                  |L1.3682|
000e62  2d00              CMP      r5,#0                 ;705
000e64  dd01              BLE      |L1.3690|
000e66  46a9              MOV      r9,r5                 ;706
000e68  e001              B        |L1.3694|
                  |L1.3690|
000e6a  f04f0900          MOV      r9,#0                 ;708
                  |L1.3694|
000e6e  f04f0a00          MOV      r10,#0                ;709
000e72  e015              B        |L1.3744|
                  |L1.3700|
000e74  bf00              NOP                            ;710
000e76  f1b80f00          CMP      r8,#0                 ;710
000e7a  d108              BNE      |L1.3726|
000e7c  4630              MOV      r0,r6                 ;710
000e7e  68e1              LDR      r1,[r4,#0xc]          ;710
000e80  4788              BLX      r1                    ;710
000e82  b908              CBNZ     r0,|L1.3720|
000e84  2000              MOVS     r0,#0                 ;710
000e86  e7c7              B        |L1.3608|
                  |L1.3720|
000e88  6827              LDR      r7,[r4,#0]            ;710
000e8a  f8d48004          LDR      r8,[r4,#4]            ;710
                  |L1.3726|
000e8e  f1a80801          SUB      r8,r8,#1              ;710
000e92  f8170b01          LDRB     r0,[r7],#1            ;710
000e96  f80d000a          STRB     r0,[sp,r10]           ;710
000e9a  bf00              NOP                            ;710
000e9c  f10a0a01          ADD      r10,r10,#1            ;709
                  |L1.3744|
000ea0  45ca              CMP      r10,r9                ;709
000ea2  d3e7              BCC      |L1.3700|
000ea4  eba50509          SUB      r5,r5,r9              ;711
000ea8  f8d601a0          LDR      r0,[r6,#0x1a0]        ;714
000eac  28e0              CMP      r0,#0xe0              ;714
000eae  d002              BEQ      |L1.3766|
000eb0  28ee              CMP      r0,#0xee              ;714
000eb2  d10e              BNE      |L1.3794|
000eb4  e006              B        |L1.3780|
                  |L1.3766|
000eb6  462b              MOV      r3,r5                 ;716
000eb8  464a              MOV      r2,r9                 ;716
000eba  4669              MOV      r1,sp                 ;716
000ebc  4630              MOV      r0,r6                 ;716
000ebe  f7fffffe          BL       examine_app0
000ec2  e013              B        |L1.3820|
                  |L1.3780|
000ec4  462b              MOV      r3,r5                 ;719
000ec6  464a              MOV      r2,r9                 ;719
000ec8  4669              MOV      r1,sp                 ;719
000eca  4630              MOV      r0,r6                 ;719
000ecc  f7fffffe          BL       examine_app14
000ed0  e00c              B        |L1.3820|
                  |L1.3794|
000ed2  f04f0044          MOV      r0,#0x44              ;723
000ed6  6831              LDR      r1,[r6,#0]            ;723
000ed8  6148              STR      r0,[r1,#0x14]         ;723
000eda  6831              LDR      r1,[r6,#0]            ;723
000edc  f8d601a0          LDR      r0,[r6,#0x1a0]        ;723
000ee0  6188              STR      r0,[r1,#0x18]         ;723
000ee2  6830              LDR      r0,[r6,#0]            ;723
000ee4  6801              LDR      r1,[r0,#0]            ;723
000ee6  4630              MOV      r0,r6                 ;723
000ee8  4788              BLX      r1                    ;723
000eea  bf00              NOP                            ;724
                  |L1.3820|
000eec  bf00              NOP                            ;717
000eee  6027              STR      r7,[r4,#0]            ;728
000ef0  f8c48004          STR      r8,[r4,#4]            ;728
000ef4  2d00              CMP      r5,#0                 ;729
000ef6  dd04              BLE      |L1.3842|
000ef8  69b0              LDR      r0,[r6,#0x18]         ;730
000efa  4629              MOV      r1,r5                 ;730
000efc  6902              LDR      r2,[r0,#0x10]         ;730
000efe  4630              MOV      r0,r6                 ;730
000f00  4790              BLX      r2                    ;730
                  |L1.3842|
000f02  2001              MOVS     r0,#1                 ;732
000f04  e788              B        |L1.3608|
;;;734    
                          ENDP

                  skip_variable PROC
;;;844    METHODDEF(boolean)
;;;845    skip_variable (j_decompress_ptr cinfo)
000f06  e92d41f0          PUSH     {r4-r8,lr}
;;;846    /* Skip over an unknown or uninteresting variable-length marker */
;;;847    {
000f0a  4605              MOV      r5,r0
;;;848      INT32 length;
;;;849      INPUT_VARS(cinfo);
000f0c  69ac              LDR      r4,[r5,#0x18]
000f0e  6827              LDR      r7,[r4,#0]
000f10  f8d48004          LDR      r8,[r4,#4]
;;;850    
;;;851      INPUT_2BYTES(cinfo, length, return FALSE);
000f14  bf00              NOP      
000f16  f1b80f00          CMP      r8,#0
000f1a  d109              BNE      |L1.3888|
000f1c  4628              MOV      r0,r5
000f1e  68e1              LDR      r1,[r4,#0xc]
000f20  4788              BLX      r1
000f22  b910              CBNZ     r0,|L1.3882|
000f24  2000              MOVS     r0,#0
                  |L1.3878|
;;;852      length -= 2;
;;;853      
;;;854      TRACEMS2(cinfo, 1, JTRC_MISC_MARKER, cinfo->unread_marker, (int) length);
;;;855    
;;;856      INPUT_SYNC(cinfo);		/* do before skip_input_data */
;;;857      if (length > 0)
;;;858        (*cinfo->src->skip_input_data) (cinfo, (long) length);
;;;859    
;;;860      return TRUE;
;;;861    }
000f26  e8bd81f0          POP      {r4-r8,pc}
                  |L1.3882|
000f2a  6827              LDR      r7,[r4,#0]            ;851
000f2c  f8d48004          LDR      r8,[r4,#4]            ;851
                  |L1.3888|
000f30  f1a80801          SUB      r8,r8,#1              ;851
000f34  f8171b01          LDRB     r1,[r7],#1            ;851
000f38  ea4f2601          LSL      r6,r1,#8              ;851
000f3c  f1b80f00          CMP      r8,#0                 ;851
000f40  d108              BNE      |L1.3924|
000f42  4628              MOV      r0,r5                 ;851
000f44  68e1              LDR      r1,[r4,#0xc]          ;851
000f46  4788              BLX      r1                    ;851
000f48  b908              CBNZ     r0,|L1.3918|
000f4a  2000              MOVS     r0,#0                 ;851
000f4c  e7eb              B        |L1.3878|
                  |L1.3918|
000f4e  6827              LDR      r7,[r4,#0]            ;851
000f50  f8d48004          LDR      r8,[r4,#4]            ;851
                  |L1.3924|
000f54  f1a80801          SUB      r8,r8,#1              ;851
000f58  f8171b01          LDRB     r1,[r7],#1            ;851
000f5c  440e              ADD      r6,r6,r1              ;851
000f5e  bf00              NOP                            ;851
000f60  f1a60602          SUB      r6,r6,#2              ;852
000f64  f04f005b          MOV      r0,#0x5b              ;854
000f68  6829              LDR      r1,[r5,#0]            ;854
000f6a  6148              STR      r0,[r1,#0x14]         ;854
000f6c  6829              LDR      r1,[r5,#0]            ;854
000f6e  f8d501a0          LDR      r0,[r5,#0x1a0]        ;854
000f72  6188              STR      r0,[r1,#0x18]         ;854
000f74  6828              LDR      r0,[r5,#0]            ;854
000f76  61c6              STR      r6,[r0,#0x1c]         ;854
000f78  6828              LDR      r0,[r5,#0]            ;854
000f7a  f04f0101          MOV      r1,#1                 ;854
000f7e  6842              LDR      r2,[r0,#4]            ;854
000f80  4628              MOV      r0,r5                 ;854
000f82  4790              BLX      r2                    ;854
000f84  6027              STR      r7,[r4,#0]            ;856
000f86  f8c48004          STR      r8,[r4,#4]            ;856
000f8a  2e00              CMP      r6,#0                 ;857
000f8c  dd04              BLE      |L1.3992|
000f8e  69a8              LDR      r0,[r5,#0x18]         ;858
000f90  4631              MOV      r1,r6                 ;858
000f92  6902              LDR      r2,[r0,#0x10]         ;858
000f94  4628              MOV      r0,r5                 ;858
000f96  4790              BLX      r2                    ;858
                  |L1.3992|
000f98  2001              MOVS     r0,#1                 ;860
000f9a  e7c4              B        |L1.3878|
;;;862    
                          ENDP

                  next_marker PROC
;;;873    LOCAL(boolean)
;;;874    next_marker (j_decompress_ptr cinfo)
000f9c  e92d41f0          PUSH     {r4-r8,lr}
;;;875    {
000fa0  4605              MOV      r5,r0
;;;876      int c;
;;;877      INPUT_VARS(cinfo);
000fa2  69ac              LDR      r4,[r5,#0x18]
000fa4  6826              LDR      r6,[r4,#0]
000fa6  6867              LDR      r7,[r4,#4]
;;;878    
;;;879      while(1) {
000fa8  e04d              B        |L1.4166|
                  |L1.4010|
;;;880        INPUT_BYTE(cinfo, c, return FALSE);
000faa  bf00              NOP      
000fac  b947              CBNZ     r7,|L1.4032|
000fae  4628              MOV      r0,r5
000fb0  68e1              LDR      r1,[r4,#0xc]
000fb2  4788              BLX      r1
000fb4  b910              CBNZ     r0,|L1.4028|
000fb6  2000              MOVS     r0,#0
                  |L1.4024|
;;;881        /* Skip any non-FF bytes.
;;;882         * This may look a bit inefficient, but it will not occur in a valid file.
;;;883         * We sync after each discarded byte so that a suspending data source
;;;884         * can discard the byte from its buffer.
;;;885         */
;;;886        while (c != 0xFF) {
;;;887          cinfo->marker->discarded_bytes++;
;;;888          INPUT_SYNC(cinfo);
;;;889          INPUT_BYTE(cinfo, c, return FALSE);
;;;890        }
;;;891        /* This loop swallows any duplicate FF bytes.  Extra FFs are legal as
;;;892         * pad bytes, so don't count them in discarded_bytes.  We assume there
;;;893         * will not be so many consecutive FF bytes as to overflow a suspending
;;;894         * data source's input buffer.
;;;895         */
;;;896        do {
;;;897          INPUT_BYTE(cinfo, c, return FALSE);
;;;898        } while (c == 0xFF);
;;;899        if (c != 0)
;;;900          break;			/* found a valid marker, exit loop */
;;;901        /* Reach here if we found a stuffed-zero data sequence (FF/00).
;;;902         * Discard it and loop back to try again.
;;;903         */
;;;904        cinfo->marker->discarded_bytes += 2;
;;;905        INPUT_SYNC(cinfo);
;;;906      }
;;;907    
;;;908      if (cinfo->marker->discarded_bytes != 0) {
;;;909        WARNMS2(cinfo, JWRN_EXTRANEOUS_DATA, cinfo->marker->discarded_bytes, c);
;;;910        cinfo->marker->discarded_bytes = 0;
;;;911      }
;;;912    
;;;913      cinfo->unread_marker = c;
;;;914    
;;;915      INPUT_SYNC(cinfo);
;;;916      return TRUE;
;;;917    }
000fb8  e8bd81f0          POP      {r4-r8,pc}
                  |L1.4028|
000fbc  6826              LDR      r6,[r4,#0]            ;880
000fbe  6867              LDR      r7,[r4,#4]            ;880
                  |L1.4032|
000fc0  f1a70701          SUB      r7,r7,#1              ;880
000fc4  f8168b01          LDRB     r8,[r6],#1            ;880
000fc8  bf00              NOP                            ;880
000fca  e018              B        |L1.4094|
                  |L1.4044|
000fcc  f8d501b8          LDR      r0,[r5,#0x1b8]        ;887
000fd0  6980              LDR      r0,[r0,#0x18]         ;887
000fd2  f1000001          ADD      r0,r0,#1              ;887
000fd6  f8d511b8          LDR      r1,[r5,#0x1b8]        ;887
000fda  6188              STR      r0,[r1,#0x18]         ;887
000fdc  6026              STR      r6,[r4,#0]            ;888
000fde  6067              STR      r7,[r4,#4]            ;888
000fe0  bf00              NOP                            ;889
000fe2  b93f              CBNZ     r7,|L1.4084|
000fe4  4628              MOV      r0,r5                 ;889
000fe6  68e1              LDR      r1,[r4,#0xc]          ;889
000fe8  4788              BLX      r1                    ;889
000fea  b908              CBNZ     r0,|L1.4080|
000fec  2000              MOVS     r0,#0                 ;889
000fee  e7e3              B        |L1.4024|
                  |L1.4080|
000ff0  6826              LDR      r6,[r4,#0]            ;889
000ff2  6867              LDR      r7,[r4,#4]            ;889
                  |L1.4084|
000ff4  f1a70701          SUB      r7,r7,#1              ;889
000ff8  f8168b01          LDRB     r8,[r6],#1            ;889
000ffc  bf00              NOP                            ;889
                  |L1.4094|
000ffe  f1b80fff          CMP      r8,#0xff              ;886
001002  d1e3              BNE      |L1.4044|
001004  bf00              NOP                            ;896
                  |L1.4102|
001006  bf00              NOP                            ;897
001008  b93f              CBNZ     r7,|L1.4122|
00100a  4628              MOV      r0,r5                 ;897
00100c  68e1              LDR      r1,[r4,#0xc]          ;897
00100e  4788              BLX      r1                    ;897
001010  b908              CBNZ     r0,|L1.4118|
001012  2000              MOVS     r0,#0                 ;897
001014  e7d0              B        |L1.4024|
                  |L1.4118|
001016  6826              LDR      r6,[r4,#0]            ;897
001018  6867              LDR      r7,[r4,#4]            ;897
                  |L1.4122|
00101a  f1a70701          SUB      r7,r7,#1              ;897
00101e  f8168b01          LDRB     r8,[r6],#1            ;897
001022  bf00              NOP                            ;897
001024  f1b80fff          CMP      r8,#0xff              ;898
001028  d0ed              BEQ      |L1.4102|
00102a  f1b80f00          CMP      r8,#0                 ;899
00102e  d000              BEQ      |L1.4146|
001030  e00a              B        |L1.4168|
                  |L1.4146|
001032  f8d501b8          LDR      r0,[r5,#0x1b8]        ;904
001036  6980              LDR      r0,[r0,#0x18]         ;904
001038  f1000002          ADD      r0,r0,#2              ;904
00103c  f8d511b8          LDR      r1,[r5,#0x1b8]        ;904
001040  6188              STR      r0,[r1,#0x18]         ;904
001042  6026              STR      r6,[r4,#0]            ;905
001044  6067              STR      r7,[r4,#4]            ;905
                  |L1.4166|
001046  e7b0              B        |L1.4010|
                  |L1.4168|
001048  bf00              NOP                            ;900
00104a  f8d501b8          LDR      r0,[r5,#0x1b8]        ;908
00104e  6980              LDR      r0,[r0,#0x18]         ;908
001050  b1b0              CBZ      r0,|L1.4224|
001052  f04f0074          MOV      r0,#0x74              ;909
001056  6829              LDR      r1,[r5,#0]            ;909
001058  6148              STR      r0,[r1,#0x14]         ;909
00105a  f8d501b8          LDR      r0,[r5,#0x1b8]        ;909
00105e  6980              LDR      r0,[r0,#0x18]         ;909
001060  6829              LDR      r1,[r5,#0]            ;909
001062  6188              STR      r0,[r1,#0x18]         ;909
001064  6828              LDR      r0,[r5,#0]            ;909
001066  f8c0801c          STR      r8,[r0,#0x1c]         ;909
00106a  6828              LDR      r0,[r5,#0]            ;909
00106c  f04f31ff          MOV      r1,#0xffffffff        ;909
001070  6842              LDR      r2,[r0,#4]            ;909
001072  4628              MOV      r0,r5                 ;909
001074  4790              BLX      r2                    ;909
001076  f04f0000          MOV      r0,#0                 ;910
00107a  f8d511b8          LDR      r1,[r5,#0x1b8]        ;910
00107e  6188              STR      r0,[r1,#0x18]         ;910
                  |L1.4224|
001080  f8c581a0          STR      r8,[r5,#0x1a0]        ;913
001084  6026              STR      r6,[r4,#0]            ;915
001086  6067              STR      r7,[r4,#4]            ;915
001088  2001              MOVS     r0,#1                 ;916
00108a  e795              B        |L1.4024|
;;;918    
                          ENDP

                  first_marker PROC
;;;920    LOCAL(boolean)
;;;921    first_marker (j_decompress_ptr cinfo)
00108c  e92d47f0          PUSH     {r4-r10,lr}
;;;922    /* Like next_marker, but used to obtain the initial SOI marker. */
;;;923    /* For this marker, we do not allow preceding garbage or fill; otherwise,
;;;924     * we might well scan an entire input file before realizing it ain't JPEG.
;;;925     * If an application wants to process non-JFIF files, it must seek to the
;;;926     * SOI before calling the JPEG library.
;;;927     */
;;;928    {
001090  4605              MOV      r5,r0
;;;929      int c, c2;
;;;930      INPUT_VARS(cinfo);
001092  69ac              LDR      r4,[r5,#0x18]
001094  6826              LDR      r6,[r4,#0]
001096  6867              LDR      r7,[r4,#4]
;;;931    
;;;932      INPUT_BYTE(cinfo, c, return FALSE);
001098  bf00              NOP      
00109a  b947              CBNZ     r7,|L1.4270|
00109c  4628              MOV      r0,r5
00109e  68e1              LDR      r1,[r4,#0xc]
0010a0  4788              BLX      r1
0010a2  b910              CBNZ     r0,|L1.4266|
0010a4  2000              MOVS     r0,#0
                  |L1.4262|
;;;933      INPUT_BYTE(cinfo, c2, return FALSE);
;;;934      if (c != 0xFF || c2 != (int) M_SOI)
;;;935        ERREXIT2(cinfo, JERR_NO_SOI, c, c2);
;;;936    
;;;937      cinfo->unread_marker = c2;
;;;938    
;;;939      INPUT_SYNC(cinfo);
;;;940      return TRUE;
;;;941    }
0010a6  e8bd87f0          POP      {r4-r10,pc}
                  |L1.4266|
0010aa  6826              LDR      r6,[r4,#0]            ;932
0010ac  6867              LDR      r7,[r4,#4]            ;932
                  |L1.4270|
0010ae  f1a70701          SUB      r7,r7,#1              ;932
0010b2  f8169b01          LDRB     r9,[r6],#1            ;932
0010b6  bf00              NOP                            ;932
0010b8  bf00              NOP                            ;933
0010ba  b93f              CBNZ     r7,|L1.4300|
0010bc  4628              MOV      r0,r5                 ;933
0010be  68e1              LDR      r1,[r4,#0xc]          ;933
0010c0  4788              BLX      r1                    ;933
0010c2  b908              CBNZ     r0,|L1.4296|
0010c4  2000              MOVS     r0,#0                 ;933
0010c6  e7ee              B        |L1.4262|
                  |L1.4296|
0010c8  6826              LDR      r6,[r4,#0]            ;933
0010ca  6867              LDR      r7,[r4,#4]            ;933
                  |L1.4300|
0010cc  f1a70701          SUB      r7,r7,#1              ;933
0010d0  f8168b01          LDRB     r8,[r6],#1            ;933
0010d4  bf00              NOP                            ;933
0010d6  f1b90fff          CMP      r9,#0xff              ;934
0010da  d102              BNE      |L1.4322|
0010dc  f1b80fd8          CMP      r8,#0xd8              ;934
0010e0  d00d              BEQ      |L1.4350|
                  |L1.4322|
0010e2  f04f0035          MOV      r0,#0x35              ;935
0010e6  6829              LDR      r1,[r5,#0]            ;935
0010e8  6148              STR      r0,[r1,#0x14]         ;935
0010ea  6828              LDR      r0,[r5,#0]            ;935
0010ec  f8c09018          STR      r9,[r0,#0x18]         ;935
0010f0  6828              LDR      r0,[r5,#0]            ;935
0010f2  f8c0801c          STR      r8,[r0,#0x1c]         ;935
0010f6  6828              LDR      r0,[r5,#0]            ;935
0010f8  6801              LDR      r1,[r0,#0]            ;935
0010fa  4628              MOV      r0,r5                 ;935
0010fc  4788              BLX      r1                    ;935
                  |L1.4350|
0010fe  f8c581a0          STR      r8,[r5,#0x1a0]        ;937
001102  6026              STR      r6,[r4,#0]            ;939
001104  6067              STR      r7,[r4,#4]            ;939
001106  2001              MOVS     r0,#1                 ;940
001108  e7cd              B        |L1.4262|
;;;942    
                          ENDP

                  read_markers PROC
;;;951    METHODDEF(int)
;;;952    read_markers (j_decompress_ptr cinfo)
00110a  b510              PUSH     {r4,lr}
;;;953    {
00110c  4604              MOV      r4,r0
;;;954      /* Outer loop repeats once for each marker. */
;;;955      while(1) {
00110e  e12d              B        |L1.4972|
                  |L1.4368|
;;;956        /* Collect the marker proper, unless we already did. */
;;;957        /* NB: first_marker() enforces the requirement that SOI appear first. */
;;;958        if (cinfo->unread_marker == 0) {
001110  f8d401a0          LDR      r0,[r4,#0x1a0]
001114  b978              CBNZ     r0,|L1.4406|
;;;959          if (! cinfo->marker->saw_SOI) {
001116  f8d401b8          LDR      r0,[r4,#0x1b8]
00111a  68c0              LDR      r0,[r0,#0xc]
00111c  b928              CBNZ     r0,|L1.4394|
;;;960    	if (! first_marker(cinfo))
00111e  4620              MOV      r0,r4
001120  f7fffffe          BL       first_marker
001124  b938              CBNZ     r0,|L1.4406|
;;;961    	  return JPEG_SUSPENDED;
001126  2000              MOVS     r0,#0
                  |L1.4392|
;;;962          } else {
;;;963    	if (! next_marker(cinfo))
;;;964    	  return JPEG_SUSPENDED;
;;;965          }
;;;966        }
;;;967        /* At this point cinfo->unread_marker contains the marker code and the
;;;968         * input point is just past the marker proper, but before any parameters.
;;;969         * A suspension will cause us to return with this state still true.
;;;970         */
;;;971        switch (cinfo->unread_marker) {
;;;972        case M_SOI:
;;;973          if (! get_soi(cinfo))
;;;974    	return JPEG_SUSPENDED;
;;;975          break;
;;;976    
;;;977        case M_SOF0:		/* Baseline */
;;;978        case M_SOF1:		/* Extended sequential, Huffman */
;;;979          if (! get_sof(cinfo, FALSE, FALSE))
;;;980    	return JPEG_SUSPENDED;
;;;981          break;
;;;982    
;;;983        case M_SOF2:		/* Progressive, Huffman */
;;;984          if (! get_sof(cinfo, TRUE, FALSE))
;;;985    	return JPEG_SUSPENDED;
;;;986          break;
;;;987    
;;;988        case M_SOF9:		/* Extended sequential, arithmetic */
;;;989          if (! get_sof(cinfo, FALSE, TRUE))
;;;990    	return JPEG_SUSPENDED;
;;;991          break;
;;;992    
;;;993        case M_SOF10:		/* Progressive, arithmetic */
;;;994          if (! get_sof(cinfo, TRUE, TRUE))
;;;995    	return JPEG_SUSPENDED;
;;;996          break;
;;;997    
;;;998        /* Currently unsupported SOFn types */
;;;999        case M_SOF3:		/* Lossless, Huffman */
;;;1000       case M_SOF5:		/* Differential sequential, Huffman */
;;;1001       case M_SOF6:		/* Differential progressive, Huffman */
;;;1002       case M_SOF7:		/* Differential lossless, Huffman */
;;;1003       case M_JPG:			/* Reserved for JPEG extensions */
;;;1004       case M_SOF11:		/* Lossless, arithmetic */
;;;1005       case M_SOF13:		/* Differential sequential, arithmetic */
;;;1006       case M_SOF14:		/* Differential progressive, arithmetic */
;;;1007       case M_SOF15:		/* Differential lossless, arithmetic */
;;;1008         ERREXIT1(cinfo, JERR_SOF_UNSUPPORTED, cinfo->unread_marker);
;;;1009         break;
;;;1010   
;;;1011       case M_SOS:
;;;1012         if (! get_sos(cinfo))
;;;1013   	return JPEG_SUSPENDED;
;;;1014         cinfo->unread_marker = 0;	/* processed the marker */
;;;1015         return JPEG_REACHED_SOS;
;;;1016       
;;;1017       case M_EOI:
;;;1018         TRACEMS(cinfo, 1, JTRC_EOI);
;;;1019         cinfo->unread_marker = 0;	/* processed the marker */
;;;1020         return JPEG_REACHED_EOI;
;;;1021         
;;;1022       case M_DAC:
;;;1023         if (! get_dac(cinfo))
;;;1024   	return JPEG_SUSPENDED;
;;;1025         break;
;;;1026         
;;;1027       case M_DHT:
;;;1028         if (! get_dht(cinfo))
;;;1029   	return JPEG_SUSPENDED;
;;;1030         break;
;;;1031         
;;;1032       case M_DQT:
;;;1033         if (! get_dqt(cinfo))
;;;1034   	return JPEG_SUSPENDED;
;;;1035         break;
;;;1036         
;;;1037       case M_DRI:
;;;1038         if (! get_dri(cinfo))
;;;1039   	return JPEG_SUSPENDED;
;;;1040         break;
;;;1041         
;;;1042       case M_APP0:
;;;1043       case M_APP1:
;;;1044       case M_APP2:
;;;1045       case M_APP3:
;;;1046       case M_APP4:
;;;1047       case M_APP5:
;;;1048       case M_APP6:
;;;1049       case M_APP7:
;;;1050       case M_APP8:
;;;1051       case M_APP9:
;;;1052       case M_APP10:
;;;1053       case M_APP11:
;;;1054       case M_APP12:
;;;1055       case M_APP13:
;;;1056       case M_APP14:
;;;1057       case M_APP15:
;;;1058         if (! (*((my_marker_ptr) cinfo->marker)->process_APPn[
;;;1059   		cinfo->unread_marker - (int) M_APP0]) (cinfo))
;;;1060   	return JPEG_SUSPENDED;
;;;1061         break;
;;;1062         
;;;1063       case M_COM:
;;;1064         if (! (*((my_marker_ptr) cinfo->marker)->process_COM) (cinfo))
;;;1065   	return JPEG_SUSPENDED;
;;;1066         break;
;;;1067   
;;;1068       case M_RST0:		/* these are all parameterless */
;;;1069       case M_RST1:
;;;1070       case M_RST2:
;;;1071       case M_RST3:
;;;1072       case M_RST4:
;;;1073       case M_RST5:
;;;1074       case M_RST6:
;;;1075       case M_RST7:
;;;1076       case M_TEM:
;;;1077         TRACEMS1(cinfo, 1, JTRC_PARMLESS_MARKER, cinfo->unread_marker);
;;;1078         break;
;;;1079   
;;;1080       case M_DNL:			/* Ignore DNL ... perhaps the wrong thing */
;;;1081         if (! skip_variable(cinfo))
;;;1082   	return JPEG_SUSPENDED;
;;;1083         break;
;;;1084   
;;;1085       default:			/* must be DHP, EXP, JPGn, or RESn */
;;;1086         /* For now, we treat the reserved markers as fatal errors since they are
;;;1087          * likely to be used to signal incompatible JPEG Part 3 extensions.
;;;1088          * Once the JPEG 3 version-number marker is well defined, this code
;;;1089          * ought to change!
;;;1090          */
;;;1091         ERREXIT1(cinfo, JERR_UNKNOWN_MARKER, cinfo->unread_marker);
;;;1092         break;
;;;1093       }
;;;1094       /* Successfully processed marker, so reset state variable */
;;;1095       cinfo->unread_marker = 0;
;;;1096     } /* end loop */
;;;1097   }
001128  bd10              POP      {r4,pc}
                  |L1.4394|
00112a  4620              MOV      r0,r4                 ;963
00112c  f7fffffe          BL       next_marker
001130  b908              CBNZ     r0,|L1.4406|
001132  2000              MOVS     r0,#0                 ;964
001134  e7f8              B        |L1.4392|
                  |L1.4406|
001136  f8d401a0          LDR      r0,[r4,#0x1a0]        ;971
00113a  28d7              CMP      r0,#0xd7              ;971
00113c  d07e              BEQ      |L1.4668|
00113e  dc27              BGT      |L1.4496|
001140  28cb              CMP      r0,#0xcb              ;971
001142  d06f              BEQ      |L1.4644|
001144  dc19              BGT      |L1.4474|
001146  28c5              CMP      r0,#0xc5              ;971
001148  d068              BEQ      |L1.4636|
00114a  dc0e              BGT      |L1.4458|
00114c  28c2              CMP      r0,#0xc2              ;971
00114e  d049              BEQ      |L1.4580|
001150  dc06              BGT      |L1.4448|
001152  2801              CMP      r0,#1                 ;971
001154  d073              BEQ      |L1.4670|
001156  28c0              CMP      r0,#0xc0              ;971
001158  d03a              BEQ      |L1.4560|
00115a  28c1              CMP      r0,#0xc1              ;971
                  |L1.4444|
00115c  d170              BNE      |L1.4672|
00115e  e038              B        |L1.4562|
                  |L1.4448|
001160  28c3              CMP      r0,#0xc3              ;971
001162  d05a              BEQ      |L1.4634|
001164  28c4              CMP      r0,#0xc4              ;971
001166  d1f9              BNE      |L1.4444|
001168  e095              B        |L1.4758|
                  |L1.4458|
00116a  38c6              SUBS     r0,r0,#0xc6           ;971
00116c  2805              CMP      r0,#5                 ;971
                  |L1.4462|
00116e  d267              BCS      |L1.4672|
001170  e8dff000          TBB      [pc,r0]               ;971
001174  55565741          DCB      0x55,0x56,0x57,0x41
001178  4a00              DCB      0x4a,0x00
                  |L1.4474|
00117a  38cc              SUBS     r0,r0,#0xcc           ;971
00117c  280b              CMP      r0,#0xb               ;971
00117e  d2f6              BCS      |L1.4462|
001180  e8dff000          TBB      [pc,r0]               ;971
001184  82515253          DCB      0x82,0x51,0x52,0x53
001188  c4c5c6c7          DCB      0xc4,0xc5,0xc6,0xc7
00118c  c8c9ca00          DCB      0xc8,0xc9,0xca,0x00
                  |L1.4496|
001190  38d8              SUBS     r0,r0,#0xd8           ;971
001192  2827              CMP      r0,#0x27              ;971
001194  d2eb              BCS      |L1.4462|
001196  e8dff000          TBB      [pc,r0]               ;971
00119a  1466              DCB      0x14,0x66
00119c  5985d08c          DCB      0x59,0x85,0xd0,0x8c
0011a0  d7d79394          DCB      0xd7,0xd7,0x93,0x94
0011a4  95969798          DCB      0x95,0x96,0x97,0x98
0011a8  999a9b9c          DCB      0x99,0x9a,0x9b,0x9c
0011ac  9d9e9fa0          DCB      0x9d,0x9e,0x9f,0xa0
0011b0  a1a2d7d7          DCB      0xa1,0xa2,0xd7,0xd7
0011b4  d7d7d7d7          DCB      0xd7,0xd7,0xd7,0xd7
0011b8  d7d7d7d7          DCB      0xd7,0xd7,0xd7,0xd7
0011bc  d7d7d7d7          DCB      0xd7,0xd7,0xd7,0xd7
0011c0  b000              DCB      0xb0,0x00
0011c2  4620              MOV      r0,r4                 ;973
0011c4  f7fffffe          BL       get_soi
0011c8  b908              CBNZ     r0,|L1.4558|
0011ca  2000              MOVS     r0,#0                 ;974
0011cc  e7ac              B        |L1.4392|
                  |L1.4558|
0011ce  e0c8              B        |L1.4962|
                  |L1.4560|
0011d0  bf00              NOP                            ;978
                  |L1.4562|
0011d2  2200              MOVS     r2,#0                 ;979
0011d4  4611              MOV      r1,r2                 ;979
0011d6  4620              MOV      r0,r4                 ;979
0011d8  f7fffffe          BL       get_sof
0011dc  b908              CBNZ     r0,|L1.4578|
0011de  2000              MOVS     r0,#0                 ;980
0011e0  e7a2              B        |L1.4392|
                  |L1.4578|
0011e2  e0be              B        |L1.4962|
                  |L1.4580|
0011e4  2200              MOVS     r2,#0                 ;984
0011e6  2101              MOVS     r1,#1                 ;984
0011e8  4620              MOV      r0,r4                 ;984
0011ea  f7fffffe          BL       get_sof
0011ee  b908              CBNZ     r0,|L1.4596|
0011f0  2000              MOVS     r0,#0                 ;985
0011f2  e799              B        |L1.4392|
                  |L1.4596|
0011f4  e0b5              B        |L1.4962|
0011f6  2201              MOVS     r2,#1                 ;989
0011f8  2100              MOVS     r1,#0                 ;989
0011fa  4620              MOV      r0,r4                 ;989
0011fc  f7fffffe          BL       get_sof
001200  b908              CBNZ     r0,|L1.4614|
001202  2000              MOVS     r0,#0                 ;990
001204  e790              B        |L1.4392|
                  |L1.4614|
001206  e0ac              B        |L1.4962|
001208  2201              MOVS     r2,#1                 ;994
00120a  4611              MOV      r1,r2                 ;994
00120c  4620              MOV      r0,r4                 ;994
00120e  f7fffffe          BL       get_sof
001212  b908              CBNZ     r0,|L1.4632|
001214  2000              MOVS     r0,#0                 ;995
001216  e787              B        |L1.4392|
                  |L1.4632|
001218  e0a3              B        |L1.4962|
                  |L1.4634|
00121a  bf00              NOP                            ;1000
                  |L1.4636|
00121c  bf00              NOP                            ;1001
00121e  bf00              NOP                            ;1002
001220  bf00              NOP                            ;1003
001222  bf00              NOP                            ;1004
                  |L1.4644|
001224  bf00              NOP                            ;1005
001226  bf00              NOP                            ;1006
001228  bf00              NOP                            ;1007
00122a  f04f003c          MOV      r0,#0x3c              ;1008
00122e  6821              LDR      r1,[r4,#0]            ;1008
001230  6148              STR      r0,[r1,#0x14]         ;1008
001232  6821              LDR      r1,[r4,#0]            ;1008
001234  f8d401a0          LDR      r0,[r4,#0x1a0]        ;1008
001238  6188              STR      r0,[r1,#0x18]         ;1008
00123a  e002              B        |L1.4674|
                  |L1.4668|
00123c  e06d              B        |L1.4890|
                  |L1.4670|
00123e  e06d              B        |L1.4892|
                  |L1.4672|
001240  e082              B        |L1.4936|
                  |L1.4674|
001242  6820              LDR      r0,[r4,#0]            ;1008
001244  6801              LDR      r1,[r0,#0]            ;1008
001246  4620              MOV      r0,r4                 ;1008
001248  4788              BLX      r1                    ;1008
00124a  e08a              B        |L1.4962|
00124c  4620              MOV      r0,r4                 ;1012
00124e  f7fffffe          BL       get_sos
001252  b908              CBNZ     r0,|L1.4696|
001254  2000              MOVS     r0,#0                 ;1013
001256  e767              B        |L1.4392|
                  |L1.4696|
001258  f04f0000          MOV      r0,#0                 ;1014
00125c  f8c401a0          STR      r0,[r4,#0x1a0]        ;1014
001260  f04f0001          MOV      r0,#1                 ;1015
001264  e760              B        |L1.4392|
001266  f04f0055          MOV      r0,#0x55              ;1018
00126a  6821              LDR      r1,[r4,#0]            ;1018
00126c  6148              STR      r0,[r1,#0x14]         ;1018
00126e  6820              LDR      r0,[r4,#0]            ;1018
001270  f04f0101          MOV      r1,#1                 ;1018
001274  6842              LDR      r2,[r0,#4]            ;1018
001276  4620              MOV      r0,r4                 ;1018
001278  4790              BLX      r2                    ;1018
00127a  f04f0000          MOV      r0,#0                 ;1019
00127e  f8c401a0          STR      r0,[r4,#0x1a0]        ;1019
001282  f04f0002          MOV      r0,#2                 ;1020
001286  e74f              B        |L1.4392|
001288  4620              MOV      r0,r4                 ;1023
00128a  f7fffffe          BL       skip_variable
00128e  b908              CBNZ     r0,|L1.4756|
001290  2000              MOVS     r0,#0                 ;1024
001292  e749              B        |L1.4392|
                  |L1.4756|
001294  e065              B        |L1.4962|
                  |L1.4758|
001296  4620              MOV      r0,r4                 ;1028
001298  f7fffffe          BL       get_dht
00129c  b908              CBNZ     r0,|L1.4770|
00129e  2000              MOVS     r0,#0                 ;1029
0012a0  e742              B        |L1.4392|
                  |L1.4770|
0012a2  e05e              B        |L1.4962|
0012a4  4620              MOV      r0,r4                 ;1033
0012a6  f7fffffe          BL       get_dqt
0012aa  b908              CBNZ     r0,|L1.4784|
0012ac  2000              MOVS     r0,#0                 ;1034
0012ae  e73b              B        |L1.4392|
                  |L1.4784|
0012b0  e057              B        |L1.4962|
0012b2  4620              MOV      r0,r4                 ;1038
0012b4  f7fffffe          BL       get_dri
0012b8  b908              CBNZ     r0,|L1.4798|
0012ba  2000              MOVS     r0,#0                 ;1039
0012bc  e734              B        |L1.4392|
                  |L1.4798|
0012be  e050              B        |L1.4962|
0012c0  bf00              NOP                            ;1043
0012c2  bf00              NOP                            ;1044
0012c4  bf00              NOP                            ;1045
0012c6  bf00              NOP                            ;1046
0012c8  bf00              NOP                            ;1047
0012ca  bf00              NOP                            ;1048
0012cc  bf00              NOP                            ;1049
0012ce  bf00              NOP                            ;1050
0012d0  bf00              NOP                            ;1051
0012d2  bf00              NOP                            ;1052
0012d4  bf00              NOP                            ;1053
0012d6  bf00              NOP                            ;1054
0012d8  bf00              NOP                            ;1055
0012da  bf00              NOP                            ;1056
0012dc  bf00              NOP                            ;1057
0012de  f8d401b8          LDR      r0,[r4,#0x1b8]        ;1058
0012e2  3020              ADDS     r0,r0,#0x20           ;1058
0012e4  f8d421a0          LDR      r2,[r4,#0x1a0]        ;1058
0012e8  3ae0              SUBS     r2,r2,#0xe0           ;1058
0012ea  f8501022          LDR      r1,[r0,r2,LSL #2]     ;1058
0012ee  4620              MOV      r0,r4                 ;1058
0012f0  4788              BLX      r1                    ;1058
0012f2  b908              CBNZ     r0,|L1.4856|
0012f4  2000              MOVS     r0,#0                 ;1060
0012f6  e717              B        |L1.4392|
                  |L1.4856|
0012f8  e033              B        |L1.4962|
0012fa  f8d401b8          LDR      r0,[r4,#0x1b8]        ;1064
0012fe  69c1              LDR      r1,[r0,#0x1c]         ;1064
001300  4620              MOV      r0,r4                 ;1064
001302  4788              BLX      r1                    ;1064
001304  b908              CBNZ     r0,|L1.4874|
001306  2000              MOVS     r0,#0                 ;1065
001308  e70e              B        |L1.4392|
                  |L1.4874|
00130a  e02a              B        |L1.4962|
00130c  bf00              NOP                            ;1069
00130e  bf00              NOP                            ;1070
001310  bf00              NOP                            ;1071
001312  bf00              NOP                            ;1072
001314  bf00              NOP                            ;1073
001316  bf00              NOP                            ;1074
001318  bf00              NOP                            ;1075
                  |L1.4890|
00131a  bf00              NOP                            ;1076
                  |L1.4892|
00131c  f04f005c          MOV      r0,#0x5c              ;1077
001320  6821              LDR      r1,[r4,#0]            ;1077
001322  6148              STR      r0,[r1,#0x14]         ;1077
001324  6821              LDR      r1,[r4,#0]            ;1077
001326  f8d401a0          LDR      r0,[r4,#0x1a0]        ;1077
00132a  6188              STR      r0,[r1,#0x18]         ;1077
00132c  6820              LDR      r0,[r4,#0]            ;1077
00132e  f04f0101          MOV      r1,#1                 ;1077
001332  6842              LDR      r2,[r0,#4]            ;1077
001334  4620              MOV      r0,r4                 ;1077
001336  4790              BLX      r2                    ;1077
001338  e013              B        |L1.4962|
00133a  4620              MOV      r0,r4                 ;1081
00133c  f7fffffe          BL       skip_variable
001340  b908              CBNZ     r0,|L1.4934|
001342  2000              MOVS     r0,#0                 ;1082
001344  e6f0              B        |L1.4392|
                  |L1.4934|
001346  e00c              B        |L1.4962|
                  |L1.4936|
001348  f04f0044          MOV      r0,#0x44              ;1091
00134c  6821              LDR      r1,[r4,#0]            ;1091
00134e  6148              STR      r0,[r1,#0x14]         ;1091
001350  6821              LDR      r1,[r4,#0]            ;1091
001352  f8d401a0          LDR      r0,[r4,#0x1a0]        ;1091
001356  6188              STR      r0,[r1,#0x18]         ;1091
001358  6820              LDR      r0,[r4,#0]            ;1091
00135a  6801              LDR      r1,[r0,#0]            ;1091
00135c  4620              MOV      r0,r4                 ;1091
00135e  4788              BLX      r1                    ;1091
001360  bf00              NOP                            ;1092
                  |L1.4962|
001362  bf00              NOP                            ;975
001364  f04f0000          MOV      r0,#0                 ;1095
001368  f8c401a0          STR      r0,[r4,#0x1a0]        ;1095
                  |L1.4972|
00136c  e6d0              B        |L1.4368|
;;;1098   
                          ENDP

                  read_restart_marker PROC
;;;1112   METHODDEF(boolean)
;;;1113   read_restart_marker (j_decompress_ptr cinfo)
00136e  b510              PUSH     {r4,lr}
;;;1114   {
001370  4604              MOV      r4,r0
;;;1115     /* Obtain a marker unless we already did. */
;;;1116     /* Note that next_marker will complain if it skips any data. */
;;;1117     if (cinfo->unread_marker == 0) {
001372  f8d401a0          LDR      r0,[r4,#0x1a0]
001376  b928              CBNZ     r0,|L1.4996|
;;;1118       if (! next_marker(cinfo))
001378  4620              MOV      r0,r4
00137a  f7fffffe          BL       next_marker
00137e  b908              CBNZ     r0,|L1.4996|
;;;1119         return FALSE;
001380  2000              MOVS     r0,#0
                  |L1.4994|
;;;1120     }
;;;1121   
;;;1122     if (cinfo->unread_marker ==
;;;1123         ((int) M_RST0 + cinfo->marker->next_restart_num)) {
;;;1124       /* Normal case --- swallow the marker and let entropy decoder continue */
;;;1125       TRACEMS1(cinfo, 3, JTRC_RST, cinfo->marker->next_restart_num);
;;;1126       cinfo->unread_marker = 0;
;;;1127     } else {
;;;1128       /* Uh-oh, the restart markers have been messed up. */
;;;1129       /* Let the data source manager determine how to resync. */
;;;1130       if (! (*cinfo->src->resync_to_restart) (cinfo,
;;;1131   					    cinfo->marker->next_restart_num))
;;;1132         return FALSE;
;;;1133     }
;;;1134   
;;;1135     /* Update next-restart state */
;;;1136     cinfo->marker->next_restart_num = (cinfo->marker->next_restart_num + 1) & 7;
;;;1137   
;;;1138     return TRUE;
;;;1139   }
001382  bd10              POP      {r4,pc}
                  |L1.4996|
001384  f8d411a0          LDR      r1,[r4,#0x1a0]        ;1122
001388  f8d401b8          LDR      r0,[r4,#0x1b8]        ;1122
00138c  6940              LDR      r0,[r0,#0x14]         ;1122
00138e  30d0              ADDS     r0,r0,#0xd0           ;1122
001390  4281              CMP      r1,r0                 ;1122
001392  d113              BNE      |L1.5052|
001394  f04f0062          MOV      r0,#0x62              ;1125
001398  6821              LDR      r1,[r4,#0]            ;1125
00139a  6148              STR      r0,[r1,#0x14]         ;1125
00139c  f8d401b8          LDR      r0,[r4,#0x1b8]        ;1125
0013a0  6940              LDR      r0,[r0,#0x14]         ;1125
0013a2  6821              LDR      r1,[r4,#0]            ;1125
0013a4  6188              STR      r0,[r1,#0x18]         ;1125
0013a6  6820              LDR      r0,[r4,#0]            ;1125
0013a8  f04f0103          MOV      r1,#3                 ;1125
0013ac  6842              LDR      r2,[r0,#4]            ;1125
0013ae  4620              MOV      r0,r4                 ;1125
0013b0  4790              BLX      r2                    ;1125
0013b2  f04f0000          MOV      r0,#0                 ;1126
0013b6  f8c401a0          STR      r0,[r4,#0x1a0]        ;1126
0013ba  e009              B        |L1.5072|
                  |L1.5052|
0013bc  f8d401b8          LDR      r0,[r4,#0x1b8]        ;1130
0013c0  6941              LDR      r1,[r0,#0x14]         ;1130
0013c2  69a0              LDR      r0,[r4,#0x18]         ;1130
0013c4  6942              LDR      r2,[r0,#0x14]         ;1130
0013c6  4620              MOV      r0,r4                 ;1130
0013c8  4790              BLX      r2                    ;1130
0013ca  b908              CBNZ     r0,|L1.5072|
0013cc  2000              MOVS     r0,#0                 ;1132
0013ce  e7d8              B        |L1.4994|
                  |L1.5072|
0013d0  f8d401b8          LDR      r0,[r4,#0x1b8]        ;1136
0013d4  6940              LDR      r0,[r0,#0x14]         ;1136
0013d6  f1000001          ADD      r0,r0,#1              ;1136
0013da  f0000007          AND      r0,r0,#7              ;1136
0013de  f8d411b8          LDR      r1,[r4,#0x1b8]        ;1136
0013e2  6148              STR      r0,[r1,#0x14]         ;1136
0013e4  f04f0001          MOV      r0,#1                 ;1138
0013e8  e7cb              B        |L1.4994|
;;;1140   
                          ENDP

                  jpeg_resync_to_restart PROC
;;;1191   GLOBAL(boolean)
;;;1192   jpeg_resync_to_restart (j_decompress_ptr cinfo, int desired)
0013ea  e92d41f0          PUSH     {r4-r8,lr}
;;;1193   {
0013ee  4604              MOV      r4,r0
0013f0  460e              MOV      r6,r1
;;;1194     int marker = cinfo->unread_marker;
0013f2  f8d451a0          LDR      r5,[r4,#0x1a0]
;;;1195     int action;
;;;1196     
;;;1197     /* Always put up a warning. */
;;;1198     WARNMS2(cinfo, JWRN_MUST_RESYNC, marker, desired);
0013f6  f04f0079          MOV      r0,#0x79
0013fa  6821              LDR      r1,[r4,#0]
0013fc  6148              STR      r0,[r1,#0x14]
0013fe  6820              LDR      r0,[r4,#0]
001400  6185              STR      r5,[r0,#0x18]
001402  6820              LDR      r0,[r4,#0]
001404  61c6              STR      r6,[r0,#0x1c]
001406  6820              LDR      r0,[r4,#0]
001408  f04f31ff          MOV      r1,#0xffffffff
00140c  6842              LDR      r2,[r0,#4]
00140e  4620              MOV      r0,r4
001410  4790              BLX      r2
;;;1199     
;;;1200     /* Outer loop handles repeated decision after scanning forward. */
;;;1201     while(1) {
001412  e054              B        |L1.5310|
                  |L1.5140|
;;;1202       if (marker < (int) M_SOF0)
001414  2dc0              CMP      r5,#0xc0
001416  da02              BGE      |L1.5150|
;;;1203         action = 2;		/* invalid marker */
001418  f04f0702          MOV      r7,#2
00141c  e026              B        |L1.5228|
                  |L1.5150|
;;;1204       else if (marker < (int) M_RST0 || marker > (int) M_RST7)
00141e  2dd0              CMP      r5,#0xd0
001420  db01              BLT      |L1.5158|
001422  2dd7              CMP      r5,#0xd7
001424  dd02              BLE      |L1.5164|
                  |L1.5158|
;;;1205         action = 3;		/* valid non-restart marker */
001426  f04f0703          MOV      r7,#3
00142a  e01f              B        |L1.5228|
                  |L1.5164|
;;;1206       else {
;;;1207         if (marker == ((int) M_RST0 + ((desired+1) & 7)) ||
00142c  1c70              ADDS     r0,r6,#1
00142e  f0000007          AND      r0,r0,#7
001432  30d0              ADDS     r0,r0,#0xd0
001434  42a8              CMP      r0,r5
001436  d005              BEQ      |L1.5188|
;;;1208   	  marker == ((int) M_RST0 + ((desired+2) & 7)))
001438  1cb0              ADDS     r0,r6,#2
00143a  f0000007          AND      r0,r0,#7
00143e  30d0              ADDS     r0,r0,#0xd0
001440  42a8              CMP      r0,r5
001442  d102              BNE      |L1.5194|
                  |L1.5188|
;;;1209   	action = 3;		/* one of the next two expected restarts */
001444  f04f0703          MOV      r7,#3
001448  e010              B        |L1.5228|
                  |L1.5194|
;;;1210         else if (marker == ((int) M_RST0 + ((desired-1) & 7)) ||
00144a  1e70              SUBS     r0,r6,#1
00144c  f0000007          AND      r0,r0,#7
001450  30d0              ADDS     r0,r0,#0xd0
001452  42a8              CMP      r0,r5
001454  d005              BEQ      |L1.5218|
;;;1211   	       marker == ((int) M_RST0 + ((desired-2) & 7)))
001456  1eb0              SUBS     r0,r6,#2
001458  f0000007          AND      r0,r0,#7
00145c  30d0              ADDS     r0,r0,#0xd0
00145e  42a8              CMP      r0,r5
001460  d102              BNE      |L1.5224|
                  |L1.5218|
;;;1212   	action = 2;		/* a prior restart, so advance */
001462  f04f0702          MOV      r7,#2
001466  e001              B        |L1.5228|
                  |L1.5224|
;;;1213         else
;;;1214   	action = 1;		/* desired restart or too far away */
001468  f04f0701          MOV      r7,#1
                  |L1.5228|
;;;1215       }
;;;1216       TRACEMS2(cinfo, 4, JTRC_RECOVERY_ACTION, marker, action);
00146c  f04f0061          MOV      r0,#0x61
001470  6821              LDR      r1,[r4,#0]
001472  6148              STR      r0,[r1,#0x14]
001474  6820              LDR      r0,[r4,#0]
001476  6185              STR      r5,[r0,#0x18]
001478  6820              LDR      r0,[r4,#0]
00147a  61c7              STR      r7,[r0,#0x1c]
00147c  6820              LDR      r0,[r4,#0]
00147e  f04f0104          MOV      r1,#4
001482  6842              LDR      r2,[r0,#4]
001484  4620              MOV      r0,r4
001486  4790              BLX      r2
;;;1217       switch (action) {
001488  2f01              CMP      r7,#1
00148a  d004              BEQ      |L1.5270|
00148c  2f02              CMP      r7,#2
00148e  d00a              BEQ      |L1.5286|
001490  2f03              CMP      r7,#3
001492  d113              BNE      |L1.5308|
001494  e010              B        |L1.5304|
                  |L1.5270|
;;;1218       case 1:
;;;1219         /* Discard marker and let entropy decoder resume processing. */
;;;1220         cinfo->unread_marker = 0;
001496  f04f0000          MOV      r0,#0
00149a  f8c401a0          STR      r0,[r4,#0x1a0]
;;;1221         return TRUE;
00149e  f04f0001          MOV      r0,#1
                  |L1.5282|
;;;1222       case 2:
;;;1223         /* Scan to the next marker, and repeat the decision loop. */
;;;1224         if (! next_marker(cinfo))
;;;1225   	return FALSE;
;;;1226         marker = cinfo->unread_marker;
;;;1227         break;
;;;1228       case 3:
;;;1229         /* Return without advancing past this marker. */
;;;1230         /* Entropy decoder will be forced to process an empty segment. */
;;;1231         return TRUE;
;;;1232       }
;;;1233     } /* end loop */
;;;1234   }
0014a2  e8bd81f0          POP      {r4-r8,pc}
                  |L1.5286|
0014a6  4620              MOV      r0,r4                 ;1224
0014a8  f7fffffe          BL       next_marker
0014ac  b908              CBNZ     r0,|L1.5298|
0014ae  2000              MOVS     r0,#0                 ;1225
0014b0  e7f7              B        |L1.5282|
                  |L1.5298|
0014b2  f8d451a0          LDR      r5,[r4,#0x1a0]        ;1226
0014b6  e001              B        |L1.5308|
                  |L1.5304|
0014b8  2001              MOVS     r0,#1                 ;1231
0014ba  e7f2              B        |L1.5282|
                  |L1.5308|
0014bc  bf00              NOP                            ;1227
                  |L1.5310|
0014be  e7a9              B        |L1.5140|
;;;1235   
                          ENDP

                  reset_marker_reader PROC
;;;1241   METHODDEF(void)
;;;1242   reset_marker_reader (j_decompress_ptr cinfo)
0014c0  f8d011b8          LDR      r1,[r0,#0x1b8]
;;;1243   {
;;;1244     my_marker_ptr marker = (my_marker_ptr) cinfo->marker;
;;;1245   
;;;1246     cinfo->comp_info = NULL;		/* until allocated by get_sof */
0014c4  f04f0200          MOV      r2,#0
0014c8  f8c020d8          STR      r2,[r0,#0xd8]
;;;1247     cinfo->input_scan_number = 0;		/* no SOS seen yet */
0014cc  f8c02090          STR      r2,[r0,#0x90]
;;;1248     cinfo->unread_marker = 0;		/* no pending marker */
0014d0  f8c021a0          STR      r2,[r0,#0x1a0]
;;;1249     marker->pub.saw_SOI = FALSE;		/* set internal state too */
0014d4  60ca              STR      r2,[r1,#0xc]
;;;1250     marker->pub.saw_SOF = FALSE;
0014d6  610a              STR      r2,[r1,#0x10]
;;;1251     marker->pub.discarded_bytes = 0;
0014d8  618a              STR      r2,[r1,#0x18]
;;;1252     marker->cur_marker = NULL;
0014da  f8c120a4          STR      r2,[r1,#0xa4]
;;;1253   }
0014de  4770              BX       lr
;;;1254   
                          ENDP

                  jinit_marker_reader PROC
;;;1261   GLOBAL(void)
;;;1262   jinit_marker_reader (j_decompress_ptr cinfo)
0014e0  b570              PUSH     {r4-r6,lr}
;;;1263   {
0014e2  4606              MOV      r6,r0
;;;1264     my_marker_ptr marker;
;;;1265     int i;
;;;1266   
;;;1267     /* Create subobject in permanent pool */
;;;1268     marker = (my_marker_ptr)
0014e4  6870              LDR      r0,[r6,#4]
0014e6  f04f02ac          MOV      r2,#0xac
0014ea  f04f0100          MOV      r1,#0
0014ee  6803              LDR      r3,[r0,#0]
0014f0  4630              MOV      r0,r6
0014f2  4798              BLX      r3
0014f4  4604              MOV      r4,r0
;;;1269       (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_PERMANENT,
;;;1270   				SIZEOF(my_marker_reader));
;;;1271     cinfo->marker = (struct jpeg_marker_reader *) marker;
0014f6  f8c641b8          STR      r4,[r6,#0x1b8]
;;;1272     /* Initialize public method pointers */
;;;1273     marker->pub.reset_marker_reader = reset_marker_reader;
0014fa  4823              LDR      r0,|L1.5512|
0014fc  6020              STR      r0,[r4,#0]
;;;1274     marker->pub.read_markers = read_markers;
0014fe  4823              LDR      r0,|L1.5516|
001500  6060              STR      r0,[r4,#4]
;;;1275     marker->pub.read_restart_marker = read_restart_marker;
001502  4823              LDR      r0,|L1.5520|
001504  60a0              STR      r0,[r4,#8]
;;;1276     /* Initialize COM/APPn processing.
;;;1277      * By default, we examine and then discard APP0 and APP14,
;;;1278      * but simply discard COM and all other APPn.
;;;1279      */
;;;1280     marker->process_COM = skip_variable;
001506  4823              LDR      r0,|L1.5524|
001508  61e0              STR      r0,[r4,#0x1c]
;;;1281     marker->length_limit_COM = 0;
00150a  f04f0000          MOV      r0,#0
00150e  6620              STR      r0,[r4,#0x60]
;;;1282     for (i = 0; i < 16; i++) {
001510  4605              MOV      r5,r0
001512  e00c              B        |L1.5422|
                  |L1.5396|
;;;1283       marker->process_APPn[i] = skip_variable;
001514  491f              LDR      r1,|L1.5524|
001516  f1040020          ADD      r0,r4,#0x20
00151a  f8401025          STR      r1,[r0,r5,LSL #2]
;;;1284       marker->length_limit_APPn[i] = 0;
00151e  f04f0100          MOV      r1,#0
001522  f1040064          ADD      r0,r4,#0x64
001526  f8401025          STR      r1,[r0,r5,LSL #2]
00152a  f1050501          ADD      r5,r5,#1              ;1282
                  |L1.5422|
00152e  2d10              CMP      r5,#0x10              ;1282
001530  dbf0              BLT      |L1.5396|
;;;1285     }
;;;1286     marker->process_APPn[0] = get_interesting_appn;
001532  4819              LDR      r0,|L1.5528|
001534  6220              STR      r0,[r4,#0x20]
;;;1287     marker->process_APPn[14] = get_interesting_appn;
001536  4601              MOV      r1,r0
001538  65a1              STR      r1,[r4,#0x58]
;;;1288     /* Reset marker processing state */
;;;1289     reset_marker_reader(cinfo);
00153a  4630              MOV      r0,r6
00153c  f7fffffe          BL       reset_marker_reader
;;;1290   }
001540  bd70              POP      {r4-r6,pc}
;;;1291   
                          ENDP

                  jpeg_set_marker_processor PROC
;;;1348   GLOBAL(void)
;;;1349   jpeg_set_marker_processor (j_decompress_ptr cinfo, int marker_code,
001542  e92d41f0          PUSH     {r4-r8,lr}
;;;1350   			   jpeg_marker_parser_method routine)
;;;1351   {
001546  4605              MOV      r5,r0
001548  460c              MOV      r4,r1
00154a  4616              MOV      r6,r2
;;;1352     my_marker_ptr marker = (my_marker_ptr) cinfo->marker;
00154c  f8d571b8          LDR      r7,[r5,#0x1b8]
;;;1353   
;;;1354     if (marker_code == (int) M_COM)
001550  2cfe              CMP      r4,#0xfe
001552  d101              BNE      |L1.5464|
;;;1355       marker->process_COM = routine;
001554  61fe              STR      r6,[r7,#0x1c]
001556  e014              B        |L1.5506|
                  |L1.5464|
;;;1356     else if (marker_code >= (int) M_APP0 && marker_code <= (int) M_APP15)
001558  2ce0              CMP      r4,#0xe0
00155a  db08              BLT      |L1.5486|
00155c  2cef              CMP      r4,#0xef
00155e  dc06              BGT      |L1.5486|
;;;1357       marker->process_APPn[marker_code - (int) M_APP0] = routine;
001560  f1a400e0          SUB      r0,r4,#0xe0
001564  f1070120          ADD      r1,r7,#0x20
001568  f8416020          STR      r6,[r1,r0,LSL #2]
00156c  e009              B        |L1.5506|
                  |L1.5486|
;;;1358     else
;;;1359       ERREXIT1(cinfo, JERR_UNKNOWN_MARKER, marker_code);
00156e  f04f0044          MOV      r0,#0x44
001572  6829              LDR      r1,[r5,#0]
001574  6148              STR      r0,[r1,#0x14]
001576  6828              LDR      r0,[r5,#0]
001578  6184              STR      r4,[r0,#0x18]
00157a  6828              LDR      r0,[r5,#0]
00157c  6801              LDR      r1,[r0,#0]
00157e  4628              MOV      r0,r5
001580  4788              BLX      r1
                  |L1.5506|
;;;1360   }
001582  e8bd81f0          POP      {r4-r8,pc}
                          ENDP

001586  0000              DCW      0x0000
                  |L1.5512|
                          DCD      reset_marker_reader
                  |L1.5516|
                          DCD      read_markers
                  |L1.5520|
                          DCD      read_restart_marker
                  |L1.5524|
                          DCD      skip_variable
                  |L1.5528|
                          DCD      get_interesting_appn

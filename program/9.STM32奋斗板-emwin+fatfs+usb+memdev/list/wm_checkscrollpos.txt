; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\wm_checkscrollpos.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\wm_checkscrollpos.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\wm_checkscrollpos.crf GUI\WM\WM_CheckScrollPos.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  WM_CheckScrollBounds PROC
;;;37     */
;;;38     void WM_CheckScrollBounds(WM_SCROLL_STATE* pScrollState) {
000000  6883              LDR      r3,[r0,#8]
;;;39       int Max;
;;;40       Max = pScrollState->NumItems - pScrollState->PageSize;
000002  6802              LDR      r2,[r0,#0]
000004  eba20103          SUB      r1,r2,r3
;;;41       if (Max < 0) {
000008  2900              CMP      r1,#0
00000a  da01              BGE      |L1.16|
;;;42         Max = 0;
00000c  f04f0100          MOV      r1,#0
                  |L1.16|
;;;43       }
;;;44       /* Make sure scroll pos is in bounds */
;;;45       if (pScrollState->v < 0) {
000010  6842              LDR      r2,[r0,#4]
000012  2a00              CMP      r2,#0
000014  da02              BGE      |L1.28|
;;;46         pScrollState->v = 0;
000016  f04f0200          MOV      r2,#0
00001a  6042              STR      r2,[r0,#4]
                  |L1.28|
;;;47       }
;;;48       if (pScrollState->v > Max) {
00001c  6842              LDR      r2,[r0,#4]
00001e  428a              CMP      r2,r1
000020  dd00              BLE      |L1.36|
;;;49         pScrollState->v = Max;
000022  6041              STR      r1,[r0,#4]
                  |L1.36|
;;;50       }
;;;51     }
000024  4770              BX       lr
;;;52     
                          ENDP

                  WM_CheckScrollPos PROC
;;;60     */
;;;61     int  WM_CheckScrollPos(WM_SCROLL_STATE* pScrollState, int Pos, int LowerDist, int UpperDist) {
000026  e92d41f0          PUSH     {r4-r8,lr}
00002a  4604              MOV      r4,r0
00002c  460d              MOV      r5,r1
00002e  4616              MOV      r6,r2
000030  461f              MOV      r7,r3
;;;62       int vOld;
;;;63       vOld = pScrollState->v;
000032  f8d48004          LDR      r8,[r4,#4]
;;;64       /* Check upper limit */
;;;65       if (Pos > pScrollState->v + pScrollState->PageSize - 1) {
000036  e9d40101          LDRD     r0,r1,[r4,#4]
00003a  4408              ADD      r0,r0,r1
00003c  f1a00001          SUB      r0,r0,#1
000040  42a8              CMP      r0,r5
000042  da06              BGE      |L1.82|
;;;66         pScrollState->v = Pos - (pScrollState->PageSize - 1) + UpperDist;
000044  68a0              LDR      r0,[r4,#8]
000046  f1a00001          SUB      r0,r0,#1
00004a  eba50000          SUB      r0,r5,r0
00004e  4438              ADD      r0,r0,r7
000050  6060              STR      r0,[r4,#4]
                  |L1.82|
;;;67       }
;;;68       /* Check lower limit */
;;;69       if (Pos < pScrollState->v) {
000052  6860              LDR      r0,[r4,#4]
000054  42a8              CMP      r0,r5
000056  dd02              BLE      |L1.94|
;;;70         pScrollState->v = Pos - LowerDist;
000058  eba50006          SUB      r0,r5,r6
00005c  6060              STR      r0,[r4,#4]
                  |L1.94|
;;;71       }
;;;72       WM_CheckScrollBounds(pScrollState);
00005e  4620              MOV      r0,r4
000060  f7fffffe          BL       WM_CheckScrollBounds
;;;73       return pScrollState->v - vOld;
000064  6860              LDR      r0,[r4,#4]
000066  eba00008          SUB      r0,r0,r8
;;;74     }
00006a  e8bd81f0          POP      {r4-r8,pc}
;;;75     
                          ENDP

                  WM_SetScrollValue PROC
;;;82     */
;;;83     int  WM_SetScrollValue(WM_SCROLL_STATE* pScrollState, int v) {
00006e  b570              PUSH     {r4-r6,lr}
000070  4604              MOV      r4,r0
000072  460d              MOV      r5,r1
;;;84       int vOld;
;;;85       vOld = pScrollState->v;
000074  6866              LDR      r6,[r4,#4]
;;;86       pScrollState->v = v;
000076  6065              STR      r5,[r4,#4]
;;;87       WM_CheckScrollBounds(pScrollState);
000078  4620              MOV      r0,r4
00007a  f7fffffe          BL       WM_CheckScrollBounds
;;;88       return pScrollState->v - vOld;
00007e  6860              LDR      r0,[r4,#4]
000080  1b80              SUBS     r0,r0,r6
;;;89     }
000082  bd70              POP      {r4-r6,pc}
;;;90     
                          ENDP


; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\usb_bot.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\usb_bot.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\FWlib\inc -I.\user -I.\CM3 -I.\MALLOC -I.\TFT -I.\EMWIN\EMWIN_INC -I.\EMWIN\DEMO -I.\PNG -I.\FATFS -I.\SDIO -I.\USB\inc -I.\USBCFG\inc -IE:\material\GUI\STM32·Ü¶·°å-emwin+fatfs+usb+memdev\RTE -Id:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.1.0\Device\Include -Id:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=515 -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\usb_bot.crf USBCFG\scr\usb_bot.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  Set_CSW PROC
;;;298    *******************************************************************************/
;;;299    void Set_CSW (uint8_t CSW_Status, uint8_t Send_Permission)
000000  b570              PUSH     {r4-r6,lr}
;;;300    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;301      CSW.dSignature = BOT_CSW_SIGNATURE;
000006  48f9              LDR      r0,|L1.1004|
000008  49f9              LDR      r1,|L1.1008|
00000a  6008              STR      r0,[r1,#0]  ; CSW
;;;302      CSW.bStatus = CSW_Status;
00000c  4608              MOV      r0,r1
00000e  7305              STRB     r5,[r0,#0xc]
;;;303    
;;;304      USB_SIL_Write(EP1_IN, ((uint8_t *)& CSW), CSW_DATA_LENGTH);
000010  220d              MOVS     r2,#0xd
000012  2081              MOVS     r0,#0x81
000014  f7fffffe          BL       USB_SIL_Write
;;;305    
;;;306      Bot_State = BOT_ERROR;
000018  2005              MOVS     r0,#5
00001a  49f6              LDR      r1,|L1.1012|
00001c  7008              STRB     r0,[r1,#0]
;;;307      if (Send_Permission)
00001e  b12c              CBZ      r4,|L1.44|
;;;308      {
;;;309        Bot_State = BOT_CSW_Send;
000020  2004              MOVS     r0,#4
000022  7008              STRB     r0,[r1,#0]
;;;310        SetEPTxStatus(ENDP1, EP_TX_VALID);
000024  2130              MOVS     r1,#0x30
000026  2001              MOVS     r0,#1
000028  f7fffffe          BL       SetEPTxStatus
                  |L1.44|
;;;311      }
;;;312    
;;;313    }
00002c  bd70              POP      {r4-r6,pc}
;;;314    
                          ENDP

                  Mass_Storage_In PROC
;;;48     *******************************************************************************/
;;;49     void Mass_Storage_In (void)
00002e  b510              PUSH     {r4,lr}
;;;50     {
;;;51       switch (Bot_State)
000030  48f0              LDR      r0,|L1.1012|
000032  7800              LDRB     r0,[r0,#0]  ; Bot_State
000034  2802              CMP      r0,#2
000036  d010              BEQ      |L1.90|
000038  2803              CMP      r0,#3
00003a  d01d              BEQ      |L1.120|
00003c  2804              CMP      r0,#4
00003e  d002              BEQ      |L1.70|
000040  2805              CMP      r0,#5
000042  d123              BNE      |L1.140|
000044  e000              B        |L1.72|
                  |L1.70|
;;;52       {
;;;53         case BOT_CSW_Send:
;;;54         case BOT_ERROR:
000046  bf00              NOP      
                  |L1.72|
;;;55           Bot_State = BOT_IDLE;
000048  2000              MOVS     r0,#0
00004a  49ea              LDR      r1,|L1.1012|
00004c  7008              STRB     r0,[r1,#0]
;;;56         #ifndef STM32F10X_CL
;;;57           SetEPRxStatus(ENDP2, EP_RX_VALID);/* enable the Endpoint to recive the next cmd*/
00004e  f44f5140          MOV      r1,#0x3000
000052  2002              MOVS     r0,#2
000054  f7fffffe          BL       SetEPRxStatus
;;;58         #else
;;;59           if (GetEPRxStatus(EP2_OUT) == EP_RX_STALL)
;;;60           {
;;;61             SetEPRxStatus(EP2_OUT, EP_RX_VALID);/* enable the Endpoint to recive the next cmd*/
;;;62           }
;;;63         #endif /* STM32F10X_CL */
;;;64           break;
000058  e019              B        |L1.142|
                  |L1.90|
;;;65         case BOT_DATA_IN:
;;;66           switch (CBW.CB[0])
00005a  48e7              LDR      r0,|L1.1016|
00005c  7bc0              LDRB     r0,[r0,#0xf]  ; CBW
00005e  2828              CMP      r0,#0x28
000060  d108              BNE      |L1.116|
;;;67           {
;;;68             case SCSI_READ10:
;;;69               SCSI_Read10_Cmd(CBW.bLUN , SCSI_LBA , SCSI_BlkLen);
000062  49e5              LDR      r1,|L1.1016|
000064  7b48              LDRB     r0,[r1,#0xd]  ; CBW
000066  49e5              LDR      r1,|L1.1020|
000068  680a              LDR      r2,[r1,#0]  ; SCSI_BlkLen
00006a  49e5              LDR      r1,|L1.1024|
00006c  6809              LDR      r1,[r1,#0]  ; SCSI_LBA
00006e  f7fffffe          BL       SCSI_Read10_Cmd
;;;70               break;
000072  bf00              NOP      
                  |L1.116|
000074  bf00              NOP      
;;;71           }
;;;72           break;
000076  e00a              B        |L1.142|
                  |L1.120|
;;;73         case BOT_DATA_IN_LAST:
;;;74           Set_CSW (CSW_CMD_PASSED, SEND_CSW_ENABLE);
000078  2101              MOVS     r1,#1
00007a  2000              MOVS     r0,#0
00007c  f7fffffe          BL       Set_CSW
;;;75         #ifndef STM32F10X_CL
;;;76           SetEPRxStatus(ENDP2, EP_RX_VALID);
000080  f44f5140          MOV      r1,#0x3000
000084  2002              MOVS     r0,#2
000086  f7fffffe          BL       SetEPRxStatus
;;;77         #else
;;;78           if (GetEPRxStatus(EP2_OUT) == EP_RX_STALL)
;;;79           {
;;;80             SetEPRxStatus(EP2_OUT, EP_RX_VALID);/* enable the Endpoint to recive the next cmd*/
;;;81           }      
;;;82         #endif /* STM32F10X_CL */
;;;83           break;
00008a  e000              B        |L1.142|
                  |L1.140|
;;;84     
;;;85         default:
;;;86           break;
00008c  bf00              NOP      
                  |L1.142|
00008e  bf00              NOP                            ;64
;;;87       }
;;;88     }
000090  bd10              POP      {r4,pc}
;;;89     
                          ENDP

                  Bot_Abort PROC
;;;321    *******************************************************************************/
;;;322    void Bot_Abort(uint8_t Direction)
000092  b510              PUSH     {r4,lr}
;;;323    {
000094  4604              MOV      r4,r0
;;;324      switch (Direction)
000096  b124              CBZ      r4,|L1.162|
000098  2c01              CMP      r4,#1
00009a  d007              BEQ      |L1.172|
00009c  2c02              CMP      r4,#2
00009e  d115              BNE      |L1.204|
0000a0  e00a              B        |L1.184|
                  |L1.162|
;;;325      {
;;;326        case DIR_IN :
;;;327          SetEPTxStatus(ENDP1, EP_TX_STALL);
0000a2  2110              MOVS     r1,#0x10
0000a4  2001              MOVS     r0,#1
0000a6  f7fffffe          BL       SetEPTxStatus
;;;328          break;
0000aa  e010              B        |L1.206|
                  |L1.172|
;;;329        case DIR_OUT :
;;;330          SetEPRxStatus(ENDP2, EP_RX_STALL);
0000ac  f44f5180          MOV      r1,#0x1000
0000b0  2002              MOVS     r0,#2
0000b2  f7fffffe          BL       SetEPRxStatus
;;;331          break;
0000b6  e00a              B        |L1.206|
                  |L1.184|
;;;332        case BOTH_DIR :
;;;333          SetEPTxStatus(ENDP1, EP_TX_STALL);
0000b8  2110              MOVS     r1,#0x10
0000ba  2001              MOVS     r0,#1
0000bc  f7fffffe          BL       SetEPTxStatus
;;;334          SetEPRxStatus(ENDP2, EP_RX_STALL);
0000c0  f44f5180          MOV      r1,#0x1000
0000c4  2002              MOVS     r0,#2
0000c6  f7fffffe          BL       SetEPRxStatus
;;;335          break;
0000ca  e000              B        |L1.206|
                  |L1.204|
;;;336        default:
;;;337          break;
0000cc  bf00              NOP      
                  |L1.206|
0000ce  bf00              NOP                            ;328
;;;338      }
;;;339    }
0000d0  bd10              POP      {r4,pc}
;;;340    
                          ENDP

                  CBW_Decode PROC
;;;134    *******************************************************************************/
;;;135    void CBW_Decode(void)
0000d2  b510              PUSH     {r4,lr}
;;;136    {
;;;137      uint32_t Counter;
;;;138    
;;;139      for (Counter = 0; Counter < Data_Len; Counter++)
0000d4  2400              MOVS     r4,#0
0000d6  e004              B        |L1.226|
                  |L1.216|
;;;140      {
;;;141        *((uint8_t *)&CBW + Counter) = Bulk_Data_Buff[Counter];
0000d8  48ca              LDR      r0,|L1.1028|
0000da  5d00              LDRB     r0,[r0,r4]
0000dc  49c6              LDR      r1,|L1.1016|
0000de  5508              STRB     r0,[r1,r4]
0000e0  1c64              ADDS     r4,r4,#1              ;139
                  |L1.226|
0000e2  48c9              LDR      r0,|L1.1032|
0000e4  8800              LDRH     r0,[r0,#0]            ;139  ; Data_Len
0000e6  4284              CMP      r4,r0                 ;139
0000e8  d3f6              BCC      |L1.216|
;;;142      }
;;;143      CSW.dTag = CBW.dTag;
0000ea  48c3              LDR      r0,|L1.1016|
0000ec  6840              LDR      r0,[r0,#4]  ; CBW
0000ee  49c0              LDR      r1,|L1.1008|
0000f0  6048              STR      r0,[r1,#4]  ; CSW
;;;144      CSW.dDataResidue = CBW.dDataLength;
0000f2  48c1              LDR      r0,|L1.1016|
0000f4  6880              LDR      r0,[r0,#8]  ; CBW
0000f6  6088              STR      r0,[r1,#8]  ; CSW
;;;145      if (Data_Len != BOT_CBW_PACKET_LENGTH)
0000f8  48c3              LDR      r0,|L1.1032|
0000fa  8800              LDRH     r0,[r0,#0]  ; Data_Len
0000fc  281f              CMP      r0,#0x1f
0000fe  d00f              BEQ      |L1.288|
;;;146      {
;;;147        Bot_Abort(BOTH_DIR);
000100  2002              MOVS     r0,#2
000102  f7fffffe          BL       Bot_Abort
;;;148        /* reset the CBW.dSignature to desible the clear feature until receiving a Mass storage reset*/
;;;149        CBW.dSignature = 0;
000106  2000              MOVS     r0,#0
000108  49bb              LDR      r1,|L1.1016|
00010a  6008              STR      r0,[r1,#0]  ; CBW
;;;150        Set_Scsi_Sense_Data(CBW.bLUN, ILLEGAL_REQUEST, PARAMETER_LIST_LENGTH_ERROR);
00010c  7b48              LDRB     r0,[r1,#0xd]  ; CBW
00010e  221a              MOVS     r2,#0x1a
000110  2105              MOVS     r1,#5
000112  f7fffffe          BL       Set_Scsi_Sense_Data
;;;151        Set_CSW (CSW_CMD_FAILED, SEND_CSW_DISABLE);
000116  2100              MOVS     r1,#0
000118  2001              MOVS     r0,#1
00011a  f7fffffe          BL       Set_CSW
                  |L1.286|
;;;152        return;
;;;153      }
;;;154    
;;;155      if ((CBW.CB[0] == SCSI_READ10 ) || (CBW.CB[0] == SCSI_WRITE10 ))
;;;156      {
;;;157        /* Calculate Logical Block Address */
;;;158        SCSI_LBA = (CBW.CB[2] << 24) | (CBW.CB[3] << 16) | (CBW.CB[4] <<  8) | CBW.CB[5];
;;;159        /* Calculate the Number of Blocks to transfer */
;;;160        SCSI_BlkLen = (CBW.CB[7] <<  8) | CBW.CB[8];
;;;161      }
;;;162    
;;;163      if (CBW.dSignature == BOT_CBW_SIGNATURE)
;;;164      {
;;;165        /* Valid CBW */
;;;166        if ((CBW.bLUN > Max_Lun) || (CBW.bCBLength < 1) || (CBW.bCBLength > 16))
;;;167        {
;;;168          Bot_Abort(BOTH_DIR);
;;;169          Set_Scsi_Sense_Data(CBW.bLUN, ILLEGAL_REQUEST, INVALID_FIELED_IN_COMMAND);
;;;170          Set_CSW (CSW_CMD_FAILED, SEND_CSW_DISABLE);
;;;171        }
;;;172        else
;;;173        {
;;;174          switch (CBW.CB[0])
;;;175          {
;;;176            case SCSI_REQUEST_SENSE:
;;;177              SCSI_RequestSense_Cmd (CBW.bLUN);
;;;178              break;
;;;179            case SCSI_INQUIRY:
;;;180              SCSI_Inquiry_Cmd(CBW.bLUN);
;;;181              break;
;;;182            case SCSI_START_STOP_UNIT:
;;;183              SCSI_Start_Stop_Unit_Cmd(CBW.bLUN);
;;;184              break;
;;;185            case SCSI_ALLOW_MEDIUM_REMOVAL:
;;;186              SCSI_Start_Stop_Unit_Cmd(CBW.bLUN);
;;;187              break;
;;;188            case SCSI_MODE_SENSE6:
;;;189              SCSI_ModeSense6_Cmd (CBW.bLUN);
;;;190              break;
;;;191            case SCSI_MODE_SENSE10:
;;;192              SCSI_ModeSense10_Cmd (CBW.bLUN);
;;;193              break;
;;;194            case SCSI_READ_FORMAT_CAPACITIES:
;;;195              SCSI_ReadFormatCapacity_Cmd(CBW.bLUN);
;;;196              break;
;;;197            case SCSI_READ_CAPACITY10:
;;;198              SCSI_ReadCapacity10_Cmd(CBW.bLUN);
;;;199              break;
;;;200            case SCSI_TEST_UNIT_READY:
;;;201              SCSI_TestUnitReady_Cmd(CBW.bLUN);
;;;202              break;
;;;203            case SCSI_READ10:
;;;204              SCSI_Read10_Cmd(CBW.bLUN, SCSI_LBA , SCSI_BlkLen);
;;;205              break;
;;;206            case SCSI_WRITE10:
;;;207              SCSI_Write10_Cmd(CBW.bLUN, SCSI_LBA , SCSI_BlkLen);
;;;208              break;
;;;209            case SCSI_VERIFY10:
;;;210              SCSI_Verify10_Cmd(CBW.bLUN);
;;;211              break;
;;;212            case SCSI_FORMAT_UNIT:
;;;213              SCSI_Format_Cmd(CBW.bLUN);
;;;214              break;
;;;215              /*Unsupported command*/
;;;216    
;;;217            case SCSI_MODE_SELECT10:
;;;218              SCSI_Mode_Select10_Cmd(CBW.bLUN);
;;;219              break;
;;;220            case SCSI_MODE_SELECT6:
;;;221              SCSI_Mode_Select6_Cmd(CBW.bLUN);
;;;222              break;
;;;223    
;;;224            case SCSI_SEND_DIAGNOSTIC:
;;;225              SCSI_Send_Diagnostic_Cmd(CBW.bLUN);
;;;226              break;
;;;227            case SCSI_READ6:
;;;228              SCSI_Read6_Cmd(CBW.bLUN);
;;;229              break;
;;;230            case SCSI_READ12:
;;;231              SCSI_Read12_Cmd(CBW.bLUN);
;;;232              break;
;;;233            case SCSI_READ16:
;;;234              SCSI_Read16_Cmd(CBW.bLUN);
;;;235              break;
;;;236            case SCSI_READ_CAPACITY16:
;;;237              SCSI_READ_CAPACITY16_Cmd(CBW.bLUN);
;;;238              break;
;;;239            case SCSI_WRITE6:
;;;240              SCSI_Write6_Cmd(CBW.bLUN);
;;;241              break;
;;;242            case SCSI_WRITE12:
;;;243              SCSI_Write12_Cmd(CBW.bLUN);
;;;244              break;
;;;245            case SCSI_WRITE16:
;;;246              SCSI_Write16_Cmd(CBW.bLUN);
;;;247              break;
;;;248            case SCSI_VERIFY12:
;;;249              SCSI_Verify12_Cmd(CBW.bLUN);
;;;250              break;
;;;251            case SCSI_VERIFY16:
;;;252              SCSI_Verify16_Cmd(CBW.bLUN);
;;;253              break;
;;;254    
;;;255            default:
;;;256            {
;;;257              Bot_Abort(BOTH_DIR);
;;;258              Set_Scsi_Sense_Data(CBW.bLUN, ILLEGAL_REQUEST, INVALID_COMMAND);
;;;259              Set_CSW (CSW_CMD_FAILED, SEND_CSW_DISABLE);
;;;260            }
;;;261          }
;;;262        }
;;;263      }
;;;264      else
;;;265      {
;;;266        /* Invalid CBW */
;;;267        Bot_Abort(BOTH_DIR);
;;;268        Set_Scsi_Sense_Data(CBW.bLUN, ILLEGAL_REQUEST, INVALID_COMMAND);
;;;269        Set_CSW (CSW_CMD_FAILED, SEND_CSW_DISABLE);
;;;270      }
;;;271    }
00011e  bd10              POP      {r4,pc}
                  |L1.288|
000120  48b5              LDR      r0,|L1.1016|
000122  7bc0              LDRB     r0,[r0,#0xf]          ;155  ; CBW
000124  2828              CMP      r0,#0x28              ;155
000126  d003              BEQ      |L1.304|
000128  48b3              LDR      r0,|L1.1016|
00012a  7bc0              LDRB     r0,[r0,#0xf]          ;155  ; CBW
00012c  282a              CMP      r0,#0x2a              ;155
00012e  d116              BNE      |L1.350|
                  |L1.304|
000130  48b1              LDR      r0,|L1.1016|
000132  7c40              LDRB     r0,[r0,#0x11]         ;158
000134  0601              LSLS     r1,r0,#24             ;158
000136  48b0              LDR      r0,|L1.1016|
000138  7c80              LDRB     r0,[r0,#0x12]         ;158
00013a  ea414100          ORR      r1,r1,r0,LSL #16      ;158
00013e  48ae              LDR      r0,|L1.1016|
000140  7cc0              LDRB     r0,[r0,#0x13]         ;158
000142  ea412000          ORR      r0,r1,r0,LSL #8       ;158
000146  49ac              LDR      r1,|L1.1016|
000148  7d09              LDRB     r1,[r1,#0x14]         ;158
00014a  4308              ORRS     r0,r0,r1              ;158
00014c  49ac              LDR      r1,|L1.1024|
00014e  6008              STR      r0,[r1,#0]            ;158  ; SCSI_LBA
000150  48a9              LDR      r0,|L1.1016|
000152  7dc1              LDRB     r1,[r0,#0x17]         ;160
000154  7d80              LDRB     r0,[r0,#0x16]         ;160
000156  ea412000          ORR      r0,r1,r0,LSL #8       ;160
00015a  49a8              LDR      r1,|L1.1020|
00015c  6008              STR      r0,[r1,#0]            ;160  ; SCSI_BlkLen
                  |L1.350|
00015e  48a6              LDR      r0,|L1.1016|
000160  6800              LDR      r0,[r0,#0]            ;163  ; CBW
000162  49aa              LDR      r1,|L1.1036|
000164  4288              CMP      r0,r1                 ;163
000166  d16f              BNE      |L1.584|
000168  48a3              LDR      r0,|L1.1016|
00016a  7b40              LDRB     r0,[r0,#0xd]          ;166  ; CBW
00016c  49a8              LDR      r1,|L1.1040|
00016e  6809              LDR      r1,[r1,#0]            ;166  ; Max_Lun
000170  4288              CMP      r0,r1                 ;166
000172  d807              BHI      |L1.388|
000174  48a0              LDR      r0,|L1.1016|
000176  7b80              LDRB     r0,[r0,#0xe]          ;166  ; CBW
000178  2801              CMP      r0,#1                 ;166
00017a  db03              BLT      |L1.388|
00017c  489e              LDR      r0,|L1.1016|
00017e  7b80              LDRB     r0,[r0,#0xe]          ;166  ; CBW
000180  2810              CMP      r0,#0x10              ;166
000182  dd0d              BLE      |L1.416|
                  |L1.388|
000184  2002              MOVS     r0,#2                 ;168
000186  f7fffffe          BL       Bot_Abort
00018a  499b              LDR      r1,|L1.1016|
00018c  7b48              LDRB     r0,[r1,#0xd]          ;169  ; CBW
00018e  2224              MOVS     r2,#0x24              ;169
000190  2105              MOVS     r1,#5                 ;169
000192  f7fffffe          BL       Set_Scsi_Sense_Data
000196  2100              MOVS     r1,#0                 ;170
000198  2001              MOVS     r0,#1                 ;170
00019a  f7fffffe          BL       Set_CSW
00019e  e0e8              B        |L1.882|
                  |L1.416|
0001a0  4895              LDR      r0,|L1.1016|
0001a2  7bc0              LDRB     r0,[r0,#0xf]          ;174  ; CBW
0001a4  2825              CMP      r0,#0x25              ;174
0001a6  d05f              BEQ      |L1.616|
0001a8  dc1b              BGT      |L1.482|
0001aa  2815              CMP      r0,#0x15              ;174
0001ac  d06f              BEQ      |L1.654|
0001ae  dc0e              BGT      |L1.462|
0001b0  2808              CMP      r0,#8                 ;174
0001b2  d06d              BEQ      |L1.656|
0001b4  dc06              BGT      |L1.452|
0001b6  2800              CMP      r0,#0                 ;174
0001b8  d05b              BEQ      |L1.626|
0001ba  2803              CMP      r0,#3                 ;174
0001bc  d030              BEQ      |L1.544|
0001be  2804              CMP      r0,#4                 ;174
                  |L1.448|
0001c0  d167              BNE      |L1.658|
0001c2  e076              B        |L1.690|
                  |L1.452|
0001c4  280a              CMP      r0,#0xa               ;174
0001c6  d06e              BEQ      |L1.678|
0001c8  2812              CMP      r0,#0x12              ;174
0001ca  d1f9              BNE      |L1.448|
0001cc  e02d              B        |L1.554|
                  |L1.462|
0001ce  381a              SUBS     r0,r0,#0x1a           ;174
0001d0  280a              CMP      r0,#0xa               ;174
0001d2  d25e              BCS      |L1.658|
0001d4  e8dff000          TBB      [pc,r0]               ;174
0001d8  392eb17d          DCB      0x39,0x2e,0xb1,0x7d
0001dc  33b1b1b1          DCB      0x33,0xb1,0xb1,0xb1
0001e0  b143              DCB      0xb1,0x43
                  |L1.482|
0001e2  288a              CMP      r0,#0x8a              ;174
0001e4  d06f              BEQ      |L1.710|
0001e6  dc0e              BGT      |L1.518|
0001e8  2855              CMP      r0,#0x55              ;174
0001ea  d067              BEQ      |L1.700|
0001ec  dc06              BGT      |L1.508|
0001ee  2828              CMP      r0,#0x28              ;174
0001f0  d044              BEQ      |L1.636|
0001f2  282a              CMP      r0,#0x2a              ;174
0001f4  d04e              BEQ      |L1.660|
0001f6  282f              CMP      r0,#0x2f              ;174
0001f8  d1e2              BNE      |L1.448|
0001fa  e055              B        |L1.680|
                  |L1.508|
0001fc  285a              CMP      r0,#0x5a              ;174
0001fe  d029              BEQ      |L1.596|
000200  2888              CMP      r0,#0x88              ;174
000202  d1dd              BNE      |L1.448|
000204  e076              B        |L1.756|
                  |L1.518|
000206  28a8              CMP      r0,#0xa8              ;174
000208  d06d              BEQ      |L1.742|
00020a  dc04              BGT      |L1.534|
00020c  288f              CMP      r0,#0x8f              ;174
00020e  d06f              BEQ      |L1.752|
000210  289e              CMP      r0,#0x9e              ;174
000212  d1d5              BNE      |L1.448|
000214  e073              B        |L1.766|
                  |L1.534|
000216  28aa              CMP      r0,#0xaa              ;174
000218  d07b              BEQ      |L1.786|
00021a  28af              CMP      r0,#0xaf              ;174
00021c  d1d0              BNE      |L1.448|
00021e  e082              B        |L1.806|
                  |L1.544|
000220  4975              LDR      r1,|L1.1016|
000222  7b48              LDRB     r0,[r1,#0xd]          ;177  ; CBW
000224  f7fffffe          BL       SCSI_RequestSense_Cmd
000228  e095              B        |L1.854|
                  |L1.554|
00022a  4973              LDR      r1,|L1.1016|
00022c  7b48              LDRB     r0,[r1,#0xd]          ;180  ; CBW
00022e  f7fffffe          BL       SCSI_Inquiry_Cmd
000232  e090              B        |L1.854|
000234  4970              LDR      r1,|L1.1016|
000236  7b48              LDRB     r0,[r1,#0xd]          ;183  ; CBW
000238  f7fffffe          BL       SCSI_Start_Stop_Unit_Cmd
00023c  e08b              B        |L1.854|
00023e  496e              LDR      r1,|L1.1016|
000240  7b48              LDRB     r0,[r1,#0xd]          ;186  ; CBW
000242  f7fffffe          BL       SCSI_Start_Stop_Unit_Cmd
000246  e086              B        |L1.854|
                  |L1.584|
000248  e086              B        |L1.856|
00024a  496b              LDR      r1,|L1.1016|
00024c  7b48              LDRB     r0,[r1,#0xd]          ;189  ; CBW
00024e  f7fffffe          BL       SCSI_ModeSense6_Cmd
000252  e080              B        |L1.854|
                  |L1.596|
000254  4968              LDR      r1,|L1.1016|
000256  7b48              LDRB     r0,[r1,#0xd]          ;192  ; CBW
000258  f7fffffe          BL       SCSI_ModeSense10_Cmd
00025c  e07b              B        |L1.854|
00025e  4966              LDR      r1,|L1.1016|
000260  7b48              LDRB     r0,[r1,#0xd]          ;195  ; CBW
000262  f7fffffe          BL       SCSI_ReadFormatCapacity_Cmd
000266  e076              B        |L1.854|
                  |L1.616|
000268  4963              LDR      r1,|L1.1016|
00026a  7b48              LDRB     r0,[r1,#0xd]          ;198  ; CBW
00026c  f7fffffe          BL       SCSI_ReadCapacity10_Cmd
000270  e071              B        |L1.854|
                  |L1.626|
000272  4961              LDR      r1,|L1.1016|
000274  7b48              LDRB     r0,[r1,#0xd]          ;201  ; CBW
000276  f7fffffe          BL       SCSI_TestUnitReady_Cmd
00027a  e06c              B        |L1.854|
                  |L1.636|
00027c  495e              LDR      r1,|L1.1016|
00027e  7b48              LDRB     r0,[r1,#0xd]          ;204  ; CBW
000280  495e              LDR      r1,|L1.1020|
000282  680a              LDR      r2,[r1,#0]            ;204  ; SCSI_BlkLen
000284  495e              LDR      r1,|L1.1024|
000286  6809              LDR      r1,[r1,#0]            ;204  ; SCSI_LBA
000288  f7fffffe          BL       SCSI_Read10_Cmd
00028c  e063              B        |L1.854|
                  |L1.654|
00028e  e01b              B        |L1.712|
                  |L1.656|
000290  e024              B        |L1.732|
                  |L1.658|
000292  e052              B        |L1.826|
                  |L1.660|
000294  4958              LDR      r1,|L1.1016|
000296  7b48              LDRB     r0,[r1,#0xd]          ;207  ; CBW
000298  4958              LDR      r1,|L1.1020|
00029a  680a              LDR      r2,[r1,#0]            ;207  ; SCSI_BlkLen
00029c  4958              LDR      r1,|L1.1024|
00029e  6809              LDR      r1,[r1,#0]            ;207  ; SCSI_LBA
0002a0  f7fffffe          BL       SCSI_Write10_Cmd
0002a4  e057              B        |L1.854|
                  |L1.678|
0002a6  e02f              B        |L1.776|
                  |L1.680|
0002a8  4953              LDR      r1,|L1.1016|
0002aa  7b48              LDRB     r0,[r1,#0xd]          ;210  ; CBW
0002ac  f7fffffe          BL       SCSI_Verify10_Cmd
0002b0  e051              B        |L1.854|
                  |L1.690|
0002b2  4951              LDR      r1,|L1.1016|
0002b4  7b48              LDRB     r0,[r1,#0xd]          ;213  ; CBW
0002b6  f7fffffe          BL       SCSI_Format_Cmd
0002ba  e04c              B        |L1.854|
                  |L1.700|
0002bc  494e              LDR      r1,|L1.1016|
0002be  7b48              LDRB     r0,[r1,#0xd]          ;218  ; CBW
0002c0  f7fffffe          BL       SCSI_Invalid_Cmd
0002c4  e047              B        |L1.854|
                  |L1.710|
0002c6  e029              B        |L1.796|
                  |L1.712|
0002c8  494b              LDR      r1,|L1.1016|
0002ca  7b48              LDRB     r0,[r1,#0xd]          ;221  ; CBW
0002cc  f7fffffe          BL       SCSI_Invalid_Cmd
0002d0  e041              B        |L1.854|
0002d2  4949              LDR      r1,|L1.1016|
0002d4  7b48              LDRB     r0,[r1,#0xd]          ;225  ; CBW
0002d6  f7fffffe          BL       SCSI_Invalid_Cmd
0002da  e03c              B        |L1.854|
                  |L1.732|
0002dc  4946              LDR      r1,|L1.1016|
0002de  7b48              LDRB     r0,[r1,#0xd]          ;228  ; CBW
0002e0  f7fffffe          BL       SCSI_Invalid_Cmd
0002e4  e037              B        |L1.854|
                  |L1.742|
0002e6  4944              LDR      r1,|L1.1016|
0002e8  7b48              LDRB     r0,[r1,#0xd]          ;231  ; CBW
0002ea  f7fffffe          BL       SCSI_Invalid_Cmd
0002ee  e032              B        |L1.854|
                  |L1.752|
0002f0  e01e              B        |L1.816|
0002f2  e00e              B        |L1.786|
                  |L1.756|
0002f4  4940              LDR      r1,|L1.1016|
0002f6  7b48              LDRB     r0,[r1,#0xd]          ;234  ; CBW
0002f8  f7fffffe          BL       SCSI_Invalid_Cmd
0002fc  e02b              B        |L1.854|
                  |L1.766|
0002fe  493e              LDR      r1,|L1.1016|
000300  7b48              LDRB     r0,[r1,#0xd]          ;237  ; CBW
000302  f7fffffe          BL       SCSI_Invalid_Cmd
000306  e026              B        |L1.854|
                  |L1.776|
000308  493b              LDR      r1,|L1.1016|
00030a  7b48              LDRB     r0,[r1,#0xd]          ;240  ; CBW
00030c  f7fffffe          BL       SCSI_Invalid_Cmd
000310  e021              B        |L1.854|
                  |L1.786|
000312  4939              LDR      r1,|L1.1016|
000314  7b48              LDRB     r0,[r1,#0xd]          ;243  ; CBW
000316  f7fffffe          BL       SCSI_Invalid_Cmd
00031a  e01c              B        |L1.854|
                  |L1.796|
00031c  4936              LDR      r1,|L1.1016|
00031e  7b48              LDRB     r0,[r1,#0xd]          ;246  ; CBW
000320  f7fffffe          BL       SCSI_Invalid_Cmd
000324  e017              B        |L1.854|
                  |L1.806|
000326  4934              LDR      r1,|L1.1016|
000328  7b48              LDRB     r0,[r1,#0xd]          ;249  ; CBW
00032a  f7fffffe          BL       SCSI_Invalid_Cmd
00032e  e012              B        |L1.854|
                  |L1.816|
000330  4931              LDR      r1,|L1.1016|
000332  7b48              LDRB     r0,[r1,#0xd]          ;252  ; CBW
000334  f7fffffe          BL       SCSI_Invalid_Cmd
000338  e00d              B        |L1.854|
                  |L1.826|
00033a  2002              MOVS     r0,#2                 ;257
00033c  f7fffffe          BL       Bot_Abort
000340  492d              LDR      r1,|L1.1016|
000342  7b48              LDRB     r0,[r1,#0xd]          ;258  ; CBW
000344  2220              MOVS     r2,#0x20              ;258
000346  2105              MOVS     r1,#5                 ;258
000348  f7fffffe          BL       Set_Scsi_Sense_Data
00034c  2100              MOVS     r1,#0                 ;259
00034e  2001              MOVS     r0,#1                 ;259
000350  f7fffffe          BL       Set_CSW
000354  bf00              NOP                            ;174
                  |L1.854|
000356  e00c              B        |L1.882|
                  |L1.856|
000358  2002              MOVS     r0,#2                 ;267
00035a  f7fffffe          BL       Bot_Abort
00035e  4926              LDR      r1,|L1.1016|
000360  7b48              LDRB     r0,[r1,#0xd]          ;268  ; CBW
000362  2220              MOVS     r2,#0x20              ;268
000364  2105              MOVS     r1,#5                 ;268
000366  f7fffffe          BL       Set_Scsi_Sense_Data
00036a  2100              MOVS     r1,#0                 ;269
00036c  2001              MOVS     r0,#1                 ;269
00036e  f7fffffe          BL       Set_CSW
                  |L1.882|
000372  bf00              NOP      
000374  e6d3              B        |L1.286|
;;;272    
                          ENDP

                  Mass_Storage_Out PROC
;;;96     *******************************************************************************/
;;;97     void Mass_Storage_Out (void)
000376  b510              PUSH     {r4,lr}
;;;98     {
;;;99       uint8_t CMD;
;;;100      CMD = CBW.CB[0];
000378  481f              LDR      r0,|L1.1016|
00037a  7bc4              LDRB     r4,[r0,#0xf]  ; CBW
;;;101    
;;;102      Data_Len = USB_SIL_Read(EP2_OUT, Bulk_Data_Buff);
00037c  4921              LDR      r1,|L1.1028|
00037e  2002              MOVS     r0,#2
000380  f7fffffe          BL       USB_SIL_Read
000384  4920              LDR      r1,|L1.1032|
000386  8008              STRH     r0,[r1,#0]
;;;103    
;;;104      switch (Bot_State)
000388  481a              LDR      r0,|L1.1012|
00038a  7800              LDRB     r0,[r0,#0]  ; Bot_State
00038c  b110              CBZ      r0,|L1.916|
00038e  2801              CMP      r0,#1
000390  d11c              BNE      |L1.972|
000392  e002              B        |L1.922|
                  |L1.916|
;;;105      {
;;;106        case BOT_IDLE:
;;;107          CBW_Decode();
000394  f7fffffe          BL       CBW_Decode
;;;108          break;
000398  e026              B        |L1.1000|
                  |L1.922|
;;;109        case BOT_DATA_OUT:
;;;110          if (CMD == SCSI_WRITE10)
00039a  2c2a              CMP      r4,#0x2a
00039c  d108              BNE      |L1.944|
;;;111          {
;;;112            SCSI_Write10_Cmd(CBW.bLUN , SCSI_LBA , SCSI_BlkLen);
00039e  4916              LDR      r1,|L1.1016|
0003a0  7b48              LDRB     r0,[r1,#0xd]  ; CBW
0003a2  4916              LDR      r1,|L1.1020|
0003a4  680a              LDR      r2,[r1,#0]  ; SCSI_BlkLen
0003a6  4916              LDR      r1,|L1.1024|
0003a8  6809              LDR      r1,[r1,#0]  ; SCSI_LBA
0003aa  f7fffffe          BL       SCSI_Write10_Cmd
;;;113            break;
0003ae  e01b              B        |L1.1000|
                  |L1.944|
;;;114          }
;;;115          Bot_Abort(DIR_OUT);
0003b0  2001              MOVS     r0,#1
0003b2  f7fffffe          BL       Bot_Abort
;;;116          Set_Scsi_Sense_Data(CBW.bLUN, ILLEGAL_REQUEST, INVALID_FIELED_IN_COMMAND);
0003b6  4910              LDR      r1,|L1.1016|
0003b8  7b48              LDRB     r0,[r1,#0xd]  ; CBW
0003ba  2224              MOVS     r2,#0x24
0003bc  2105              MOVS     r1,#5
0003be  f7fffffe          BL       Set_Scsi_Sense_Data
;;;117          Set_CSW (CSW_PHASE_ERROR, SEND_CSW_DISABLE);
0003c2  2100              MOVS     r1,#0
0003c4  2002              MOVS     r0,#2
0003c6  f7fffffe          BL       Set_CSW
;;;118          break;
0003ca  e00d              B        |L1.1000|
                  |L1.972|
;;;119        default:
;;;120          Bot_Abort(BOTH_DIR);
0003cc  2002              MOVS     r0,#2
0003ce  f7fffffe          BL       Bot_Abort
;;;121          Set_Scsi_Sense_Data(CBW.bLUN, ILLEGAL_REQUEST, INVALID_FIELED_IN_COMMAND);
0003d2  4909              LDR      r1,|L1.1016|
0003d4  7b48              LDRB     r0,[r1,#0xd]  ; CBW
0003d6  2224              MOVS     r2,#0x24
0003d8  2105              MOVS     r1,#5
0003da  f7fffffe          BL       Set_Scsi_Sense_Data
;;;122          Set_CSW (CSW_PHASE_ERROR, SEND_CSW_DISABLE);
0003de  2100              MOVS     r1,#0
0003e0  2002              MOVS     r0,#2
0003e2  f7fffffe          BL       Set_CSW
;;;123          break;
0003e6  bf00              NOP      
                  |L1.1000|
0003e8  bf00              NOP                            ;108
;;;124      }
;;;125    }
0003ea  bd10              POP      {r4,pc}
                  |L1.1004|
                          DCD      0x53425355
                  |L1.1008|
                          DCD      ||CSW||
                  |L1.1012|
                          DCD      Bot_State
                  |L1.1016|
                          DCD      ||CBW||
                  |L1.1020|
                          DCD      SCSI_BlkLen
                  |L1.1024|
                          DCD      SCSI_LBA
                  |L1.1028|
                          DCD      Bulk_Data_Buff
                  |L1.1032|
                          DCD      Data_Len
                  |L1.1036|
                          DCD      0x43425355
                  |L1.1040|
                          DCD      Max_Lun
                          ENDP

                  Transfer_Data_Request PROC
;;;280    *******************************************************************************/
;;;281    void Transfer_Data_Request(uint8_t* Data_Pointer, uint16_t Data_Len)
000414  b570              PUSH     {r4-r6,lr}
;;;282    {
000416  4605              MOV      r5,r0
000418  460c              MOV      r4,r1
;;;283      USB_SIL_Write(EP1_IN, Data_Pointer, Data_Len);
00041a  4622              MOV      r2,r4
00041c  4629              MOV      r1,r5
00041e  2081              MOVS     r0,#0x81
000420  f7fffffe          BL       USB_SIL_Write
;;;284    
;;;285      SetEPTxStatus(ENDP1, EP_TX_VALID);
000424  2130              MOVS     r1,#0x30
000426  2001              MOVS     r0,#1
000428  f7fffffe          BL       SetEPTxStatus
;;;286      Bot_State = BOT_DATA_IN_LAST;
00042c  2003              MOVS     r0,#3
00042e  4905              LDR      r1,|L1.1092|
000430  7008              STRB     r0,[r1,#0]
;;;287      CSW.dDataResidue -= Data_Len;
000432  4805              LDR      r0,|L1.1096|
000434  6880              LDR      r0,[r0,#8]  ; CSW
000436  1b00              SUBS     r0,r0,r4
000438  4903              LDR      r1,|L1.1096|
00043a  6088              STR      r0,[r1,#8]  ; CSW
;;;288      CSW.bStatus = CSW_CMD_PASSED;
00043c  2000              MOVS     r0,#0
00043e  7308              STRB     r0,[r1,#0xc]
;;;289    }
000440  bd70              POP      {r4-r6,pc}
;;;290    
                          ENDP

000442  0000              DCW      0x0000
                  |L1.1092|
                          DCD      Bot_State
                  |L1.1096|
                          DCD      ||CSW||

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  Bulk_Data_Buff
                          %        64
                  ||CBW||
                          %        32
                  ||CSW||
                          %        16

                          AREA ||.data||, DATA, ALIGN=2

                  Bot_State
000000  0000              DCB      0x00,0x00
                  Data_Len
000002  0000              DCB      0x00,0x00
                  SCSI_LBA
                          DCD      0x00000000
                  SCSI_BlkLen
                          DCD      0x00000000

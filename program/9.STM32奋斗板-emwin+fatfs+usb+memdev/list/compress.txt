; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\compress.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\compress.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\FWlib\inc -I.\user -I.\CM3 -I.\MALLOC -I.\TFT -I.\EMWIN\EMWIN_INC -I.\EMWIN\DEMO -I.\PNG -I.\FATFS -I.\SDIO -I.\USB\inc -I.\USBCFG\inc -IE:\material\GUI\9.STM32·Ü¶·°å-emwin+fatfs+usb+memdev\RTE -Id:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.1.0\Device\Include -Id:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=515 -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\compress.crf PNG\compress.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  compress2 PROC
;;;21     */
;;;22     int ZEXPORT compress2 (dest, destLen, source, sourceLen, level)
000000  e92d43f0          PUSH     {r4-r9,lr}
;;;23         Bytef *dest;
;;;24         uLongf *destLen;
;;;25         const Bytef *source;
;;;26         uLong sourceLen;
;;;27         int level;
;;;28     {
000004  b08f              SUB      sp,sp,#0x3c
000006  4606              MOV      r6,r0
000008  460d              MOV      r5,r1
00000a  4617              MOV      r7,r2
00000c  4698              MOV      r8,r3
00000e  f8dd9058          LDR      r9,[sp,#0x58]
;;;29         z_stream stream;
;;;30         int err;
;;;31     
;;;32         stream.next_in = (Bytef*)source;
000012  9701              STR      r7,[sp,#4]
;;;33         stream.avail_in = (uInt)sourceLen;
000014  f8cd8008          STR      r8,[sp,#8]
;;;34     #ifdef MAXSEG_64K
;;;35         /* Check for source > 64K on 16-bit machine: */
;;;36         if ((uLong)stream.avail_in != sourceLen) return Z_BUF_ERROR;
;;;37     #endif
;;;38         stream.next_out = dest;
000018  9604              STR      r6,[sp,#0x10]
;;;39         stream.avail_out = (uInt)*destLen;
00001a  6828              LDR      r0,[r5,#0]
00001c  9005              STR      r0,[sp,#0x14]
;;;40         if ((uLong)stream.avail_out != *destLen) return Z_BUF_ERROR;
00001e  9805              LDR      r0,[sp,#0x14]
000020  6829              LDR      r1,[r5,#0]
000022  4288              CMP      r0,r1
000024  d004              BEQ      |L1.48|
000026  f06f0004          MVN      r0,#4
                  |L1.42|
;;;41     
;;;42         stream.zalloc = (alloc_func)0;
;;;43         stream.zfree = (free_func)0;
;;;44         stream.opaque = (voidpf)0;
;;;45     
;;;46         err = deflateInit(&stream, level);
;;;47         if (err != Z_OK) return err;
;;;48     
;;;49         err = deflate(&stream, Z_FINISH);
;;;50         if (err != Z_STREAM_END) {
;;;51             deflateEnd(&stream);
;;;52             return err == Z_OK ? Z_BUF_ERROR : err;
;;;53         }
;;;54         *destLen = stream.total_out;
;;;55     
;;;56         err = deflateEnd(&stream);
;;;57         return err;
;;;58     }
00002a  b00f              ADD      sp,sp,#0x3c
00002c  e8bd83f0          POP      {r4-r9,pc}
                  |L1.48|
000030  2000              MOVS     r0,#0                 ;42
000032  9009              STR      r0,[sp,#0x24]         ;42
000034  900a              STR      r0,[sp,#0x28]         ;43
000036  900b              STR      r0,[sp,#0x2c]         ;44
000038  2338              MOVS     r3,#0x38              ;46
00003a  a21b              ADR      r2,|L1.168|
00003c  4649              MOV      r1,r9                 ;46
00003e  a801              ADD      r0,sp,#4              ;46
000040  f7fffffe          BL       deflateInit_
000044  4604              MOV      r4,r0                 ;46
000046  b10c              CBZ      r4,|L1.76|
000048  4620              MOV      r0,r4                 ;47
00004a  e7ee              B        |L1.42|
                  |L1.76|
00004c  2104              MOVS     r1,#4                 ;49
00004e  a801              ADD      r0,sp,#4              ;49
000050  f7fffffe          BL       deflate
000054  4604              MOV      r4,r0                 ;49
000056  2c01              CMP      r4,#1                 ;50
000058  d008              BEQ      |L1.108|
00005a  a801              ADD      r0,sp,#4              ;51
00005c  f7fffffe          BL       deflateEnd
000060  b914              CBNZ     r4,|L1.104|
000062  f06f0004          MVN      r0,#4                 ;52
000066  e7e0              B        |L1.42|
                  |L1.104|
000068  4620              MOV      r0,r4                 ;52
00006a  e7de              B        |L1.42|
                  |L1.108|
00006c  9806              LDR      r0,[sp,#0x18]         ;54
00006e  6028              STR      r0,[r5,#0]            ;54
000070  a801              ADD      r0,sp,#4              ;56
000072  f7fffffe          BL       deflateEnd
000076  4604              MOV      r4,r0                 ;56
000078  4620              MOV      r0,r4                 ;57
00007a  e7d6              B        |L1.42|
;;;59     
                          ENDP

                  compress PROC
;;;61      */
;;;62     int ZEXPORT compress (dest, destLen, source, sourceLen)
00007c  b5f8              PUSH     {r3-r7,lr}
;;;63         Bytef *dest;
;;;64         uLongf *destLen;
;;;65         const Bytef *source;
;;;66         uLong sourceLen;
;;;67     {
00007e  4604              MOV      r4,r0
000080  460d              MOV      r5,r1
000082  4616              MOV      r6,r2
000084  461f              MOV      r7,r3
;;;68         return compress2(dest, destLen, source, sourceLen, Z_DEFAULT_COMPRESSION);
000086  f04f30ff          MOV      r0,#0xffffffff
00008a  463b              MOV      r3,r7
00008c  4632              MOV      r2,r6
00008e  4629              MOV      r1,r5
000090  9000              STR      r0,[sp,#0]
000092  4620              MOV      r0,r4
000094  f7fffffe          BL       compress2
;;;69     }
000098  bdf8              POP      {r3-r7,pc}
;;;70     
                          ENDP

                  compressBound PROC
;;;74      */
;;;75     uLong ZEXPORT compressBound (sourceLen)
00009a  4601              MOV      r1,r0
;;;76         uLong sourceLen;
;;;77     {
;;;78         return sourceLen + (sourceLen >> 12) + (sourceLen >> 14) + 11;
00009c  eb013011          ADD      r0,r1,r1,LSR #12
0000a0  eb003091          ADD      r0,r0,r1,LSR #14
0000a4  300b              ADDS     r0,r0,#0xb
;;;79     }
0000a6  4770              BX       lr
                          ENDP

                  |L1.168|
0000a8  312e322e          DCB      "1.2.3",0
0000ac  3300    
0000ae  00                DCB      0
0000af  00                DCB      0

; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\guipolyr.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\guipolyr.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\guipolyr.crf GUI\Core\GUIPolyR.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  GUI_RotatePolygon PROC
;;;32     */
;;;33     void GUI_RotatePolygon(GUI_POINT* pDest, const GUI_POINT* pSrc, int NumPoints, float Angle) {
000000  e92d4ff0          PUSH     {r4-r11,lr}
000004  b085              SUB      sp,sp,#0x14
000006  4607              MOV      r7,r0
000008  4688              MOV      r8,r1
00000a  4691              MOV      r9,r2
00000c  469a              MOV      r10,r3
;;;34       int j;
;;;35       float fcos = cos(Angle);
00000e  4650              MOV      r0,r10
000010  f7fffffe          BL       __aeabi_f2d
000014  e9cd0100          STRD     r0,r1,[sp,#0]
000018  f7fffffe          BL       ||cos||
00001c  4604              MOV      r4,r0
00001e  f7fffffe          BL       __aeabi_d2f
000022  9004              STR      r0,[sp,#0x10]
;;;36       float fsin = sin(Angle);
000024  4650              MOV      r0,r10
000026  f7fffffe          BL       __aeabi_f2d
00002a  e9cd0100          STRD     r0,r1,[sp,#0]
00002e  f7fffffe          BL       ||sin||
000032  4604              MOV      r4,r0
000034  f7fffffe          BL       __aeabi_d2f
000038  9003              STR      r0,[sp,#0xc]
;;;37       for (j=0; j<NumPoints; j++) {
00003a  f04f0600          MOV      r6,#0
00003e  e03b              B        |L1.184|
                  |L1.64|
;;;38         int x = (pSrc+j)->x;
000040  f9384026          LDRSH    r4,[r8,r6,LSL #2]
;;;39         int y = (pSrc+j)->y;
000044  eb080086          ADD      r0,r8,r6,LSL #2
000048  f9b00002          LDRSH    r0,[r0,#2]
00004c  9002              STR      r0,[sp,#8]
;;;40         (pDest+j)->x =  x * fcos + y * fsin;
00004e  9802              LDR      r0,[sp,#8]
000050  f7fffffe          BL       __aeabi_i2f
000054  9000              STR      r0,[sp,#0]
000056  9903              LDR      r1,[sp,#0xc]
000058  f7fffffe          BL       __aeabi_fmul
00005c  4605              MOV      r5,r0
00005e  4620              MOV      r0,r4
000060  f7fffffe          BL       __aeabi_i2f
000064  9000              STR      r0,[sp,#0]
000066  9904              LDR      r1,[sp,#0x10]
000068  f7fffffe          BL       __aeabi_fmul
00006c  4683              MOV      r11,r0
00006e  4629              MOV      r1,r5
000070  f7fffffe          BL       __aeabi_fadd
000074  9001              STR      r0,[sp,#4]
000076  f7fffffe          BL       __aeabi_f2iz
00007a  b200              SXTH     r0,r0
00007c  f8270026          STRH     r0,[r7,r6,LSL #2]
;;;41         (pDest+j)->y = -x * fsin + y * fcos;
000080  9802              LDR      r0,[sp,#8]
000082  f7fffffe          BL       __aeabi_i2f
000086  9000              STR      r0,[sp,#0]
000088  9904              LDR      r1,[sp,#0x10]
00008a  f7fffffe          BL       __aeabi_fmul
00008e  4683              MOV      r11,r0
000090  4260              RSBS     r0,r4,#0
000092  f7fffffe          BL       __aeabi_i2f
000096  9000              STR      r0,[sp,#0]
000098  9903              LDR      r1,[sp,#0xc]
00009a  f7fffffe          BL       __aeabi_fmul
00009e  4659              MOV      r1,r11
0000a0  9001              STR      r0,[sp,#4]
0000a2  f7fffffe          BL       __aeabi_fadd
0000a6  4605              MOV      r5,r0
0000a8  f7fffffe          BL       __aeabi_f2iz
0000ac  b200              SXTH     r0,r0
0000ae  eb070186          ADD      r1,r7,r6,LSL #2
0000b2  8048              STRH     r0,[r1,#2]
0000b4  f1060601          ADD      r6,r6,#1              ;37
                  |L1.184|
0000b8  454e              CMP      r6,r9                 ;37
0000ba  dbc1              BLT      |L1.64|
;;;42       }
;;;43     }
0000bc  b005              ADD      sp,sp,#0x14
0000be  e8bd8ff0          POP      {r4-r11,pc}
;;;44     
                          ENDP


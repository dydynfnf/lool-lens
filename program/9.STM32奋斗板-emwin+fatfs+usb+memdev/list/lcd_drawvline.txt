; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\lcd_drawvline.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\lcd_drawvline.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\lcd_drawvline.crf GUI\Core\LCD_DrawVLine.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  LCD_DrawVLine PROC
;;;55     */
;;;56     void LCD_DrawVLine(int x, int y0,  int y1) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
000006  4616              MOV      r6,r2
;;;57       /* Perform clipping and check if there is something to do */
;;;58       RETURN_IF_X_OUT();
000008  4813              LDR      r0,|L1.88|
00000a  f9b00008          LDRSH    r0,[r0,#8]  ; GUI_Context
00000e  42a0              CMP      r0,r4
000010  dd00              BLE      |L1.20|
                  |L1.18|
;;;59       CLIP_Y();
;;;60       if (y1 < y0) {
;;;61         return;
;;;62       }
;;;63       /* Call driver to draw */
;;;64       LCDDEV_L0_DrawVLine(x, y0, y1);
;;;65     }
000012  bd70              POP      {r4-r6,pc}
                  |L1.20|
000014  4810              LDR      r0,|L1.88|
000016  f9b0000c          LDRSH    r0,[r0,#0xc]          ;58
00001a  42a0              CMP      r0,r4                 ;58
00001c  da00              BGE      |L1.32|
00001e  e7f8              B        |L1.18|
                  |L1.32|
000020  480d              LDR      r0,|L1.88|
000022  f9b0000a          LDRSH    r0,[r0,#0xa]          ;59
000026  42a8              CMP      r0,r5                 ;59
000028  dd02              BLE      |L1.48|
00002a  480b              LDR      r0,|L1.88|
00002c  f9b0500a          LDRSH    r5,[r0,#0xa]          ;59
                  |L1.48|
000030  4809              LDR      r0,|L1.88|
000032  f9b0000e          LDRSH    r0,[r0,#0xe]          ;59
000036  42b0              CMP      r0,r6                 ;59
000038  da02              BGE      |L1.64|
00003a  4807              LDR      r0,|L1.88|
00003c  f9b0600e          LDRSH    r6,[r0,#0xe]          ;59
                  |L1.64|
000040  42ae              CMP      r6,r5                 ;60
000042  da00              BGE      |L1.70|
000044  e7e5              B        |L1.18|
                  |L1.70|
000046  4804              LDR      r0,|L1.88|
000048  6c80              LDR      r0,[r0,#0x48]         ;64  ; GUI_Context
00004a  4632              MOV      r2,r6                 ;64
00004c  4629              MOV      r1,r5                 ;64
00004e  6943              LDR      r3,[r0,#0x14]         ;64
000050  4620              MOV      r0,r4                 ;64
000052  4798              BLX      r3                    ;64
000054  bf00              NOP      
000056  e7dc              B        |L1.18|
;;;66     
                          ENDP

                  |L1.88|
                          DCD      GUI_Context

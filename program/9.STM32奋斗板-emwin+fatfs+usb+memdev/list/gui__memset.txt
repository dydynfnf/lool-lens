; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\gui__memset.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\gui__memset.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\gui__memset.crf GUI\Core\GUI__memset.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  GUI__memset PROC
;;;39     */
;;;40     void GUI__memset(U8* p, U8 Fill, int NumBytes) {
000000  b570              PUSH     {r4-r6,lr}
000002  4603              MOV      r3,r0
000004  460d              MOV      r5,r1
;;;41       int NumInts;
;;;42       /* Write bytes until we are done or have reached an int boundary */
;;;43       while (NumBytes && ((sizeof(int) - 1) & (U32)p)) {
000006  e003              B        |L1.16|
                  |L1.8|
;;;44         *p++ = Fill;
000008  f8035b01          STRB     r5,[r3],#1
;;;45         NumBytes--;
00000c  f1a20201          SUB      r2,r2,#1
                  |L1.16|
000010  b112              CBZ      r2,|L1.24|
000012  f0130f03          TST      r3,#3                 ;43
000016  d1f7              BNE      |L1.8|
                  |L1.24|
;;;46       }
;;;47       /* Write Ints */
;;;48       NumInts = (unsigned)NumBytes / sizeof(int);
000018  ea4f0192          LSR      r1,r2,#2
;;;49       if (NumInts) {
00001c  b1b9              CBZ      r1,|L1.78|
;;;50         int FillInt;
;;;51         int *pInt;
;;;52         NumBytes &= (sizeof(int) - 1);
00001e  f0020203          AND      r2,r2,#3
;;;53         if (sizeof(int) == 2) {        /* May some compilers generate a warning at this line: Condition is alwaws true/false */
;;;54           FillInt = Fill * 0x101;      /* May some compilers generate a warning at this line: Unreachable code */
;;;55         } else if (sizeof(int) == 4) { /* May some compilers generate a warning at this line: Condition is alwaws true/false */
;;;56           FillInt = Fill * 0x1010101;  /* May some compilers generate a warning at this line: Unreachable code */
000022  eb054605          ADD      r6,r5,r5,LSL #16
000026  eb062406          ADD      r4,r6,r6,LSL #8
;;;57         }
;;;58         pInt = (int*)p;
00002a  4618              MOV      r0,r3
;;;59         /* Fill large amount of data at a time */
;;;60         while (NumInts >= 4) { 
00002c  e005              B        |L1.58|
                  |L1.46|
;;;61           *pInt++ = FillInt;
00002e  c010              STM      r0!,{r4}
;;;62           *pInt++ = FillInt;
000030  c010              STM      r0!,{r4}
;;;63           *pInt++ = FillInt;
000032  c010              STM      r0!,{r4}
;;;64           *pInt++ = FillInt;
000034  c010              STM      r0!,{r4}
;;;65           NumInts -= 4;
000036  f1a10104          SUB      r1,r1,#4
                  |L1.58|
00003a  2904              CMP      r1,#4                 ;60
00003c  daf7              BGE      |L1.46|
;;;66         }
;;;67         /* Fill one int at a time */
;;;68         while (NumInts) {
00003e  e002              B        |L1.70|
                  |L1.64|
;;;69           *pInt++ = FillInt;
000040  c010              STM      r0!,{r4}
;;;70           NumInts--;
000042  f1a10101          SUB      r1,r1,#1
                  |L1.70|
000046  2900              CMP      r1,#0                 ;68
000048  d1fa              BNE      |L1.64|
;;;71         }
;;;72         p = (U8*)pInt;
00004a  4603              MOV      r3,r0
;;;73       }
00004c  bf00              NOP      
                  |L1.78|
;;;74       /* Fill the remainder byte wise */
;;;75       while (NumBytes) {
00004e  e003              B        |L1.88|
                  |L1.80|
;;;76         *p++ = Fill;
000050  f8035b01          STRB     r5,[r3],#1
;;;77         NumBytes--;
000054  f1a20201          SUB      r2,r2,#1
                  |L1.88|
000058  2a00              CMP      r2,#0                 ;75
00005a  d1f9              BNE      |L1.80|
;;;78       }
;;;79     }
00005c  bd70              POP      {r4-r6,pc}
;;;80     
                          ENDP


; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\menu.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\menu.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\menu.crf GUI\Widget\MENU.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  MENU__SendMenuMessage PROC
;;;1338   */
;;;1339   int MENU__SendMenuMessage(MENU_Handle hObj, WM_HWIN hDestWin, U16 MsgType, U16 ItemId) {
000000  e92d41ff          PUSH     {r0-r8,lr}
000004  4605              MOV      r5,r0
000006  460c              MOV      r4,r1
000008  4616              MOV      r6,r2
00000a  461f              MOV      r7,r3
;;;1340     MENU_MSG_DATA MsgData;
;;;1341     WM_MESSAGE    Msg = {0};
00000c  f04f0000          MOV      r0,#0
000010  9000              STR      r0,[sp,#0]
000012  9001              STR      r0,[sp,#4]
000014  9002              STR      r0,[sp,#8]
;;;1342     MsgData.MsgType   = MsgType;
000016  f8ad600c          STRH     r6,[sp,#0xc]
;;;1343     MsgData.ItemId    = ItemId;
00001a  f8ad700e          STRH     r7,[sp,#0xe]
;;;1344     Msg.MsgId         = WM_MENU;
00001e  f04f002c          MOV      r0,#0x2c
000022  9000              STR      r0,[sp,#0]
;;;1345     Msg.Data.p        = &MsgData;
000024  a803              ADD      r0,sp,#0xc
000026  9002              STR      r0,[sp,#8]
;;;1346     Msg.hWinSrc       = hObj;
000028  f8ad5006          STRH     r5,[sp,#6]
;;;1347     if (!hDestWin) {
00002c  b91c              CBNZ     r4,|L1.54|
;;;1348       hDestWin = WM_GetParent(hObj);
00002e  4628              MOV      r0,r5
000030  f7fffffe          BL       WM_GetParent
000034  4604              MOV      r4,r0
                  |L1.54|
;;;1349     }
;;;1350     if (hDestWin) {
000036  b13c              CBZ      r4,|L1.72|
;;;1351       WM__SendMessage(hDestWin, &Msg);
000038  4669              MOV      r1,sp
00003a  4620              MOV      r0,r4
00003c  f7fffffe          BL       WM__SendMessage
;;;1352       return Msg.Data.v;
000040  9802              LDR      r0,[sp,#8]
                  |L1.66|
;;;1353     }
;;;1354     return 0;
;;;1355   }
000042  b004              ADD      sp,sp,#0x10
000044  e8bd81f0          POP      {r4-r8,pc}
                  |L1.72|
000048  2000              MOVS     r0,#0                 ;1354
00004a  e7fa              B        |L1.66|
;;;1356   
                          ENDP

                  _IsTopLevelMenu PROC
;;;153    */
;;;154    static char _IsTopLevelMenu(MENU_Handle hObj, const MENU_Obj* pObj) {
00004c  b570              PUSH     {r4-r6,lr}
00004e  4605              MOV      r5,r0
000050  460c              MOV      r4,r1
;;;155      if (MENU__SendMenuMessage(hObj, pObj->hOwner, MENU_IS_MENU, 0) == 0) {
000052  f9b4105c          LDRSH    r1,[r4,#0x5c]
000056  f04f0300          MOV      r3,#0
00005a  f04f0205          MOV      r2,#5
00005e  4628              MOV      r0,r5
000060  f7fffffe          BL       MENU__SendMenuMessage
000064  b908              CBNZ     r0,|L1.106|
;;;156        return 1;
000066  2001              MOVS     r0,#1
                  |L1.104|
;;;157      }
;;;158      return 0;
;;;159    }
000068  bd70              POP      {r4-r6,pc}
                  |L1.106|
00006a  2000              MOVS     r0,#0                 ;158
00006c  e7fc              B        |L1.104|
;;;160    
                          ENDP

                  _GetTopLevelMenu PROC
;;;173    */
;;;174    static void _GetTopLevelMenu(MENU_Handle hObj, MENU_Obj * pObj, MENU_Handle * phObjTopLevel, MENU_Obj ** ppObjTopLevel, int * pSubSel) {
00006e  e92d47f0          PUSH     {r4-r10,lr}
000072  4682              MOV      r10,r0
000074  460e              MOV      r6,r1
000076  4617              MOV      r7,r2
000078  4698              MOV      r8,r3
00007a  f8dd9020          LDR      r9,[sp,#0x20]
;;;175      MENU_Handle hObjTopLevel;
;;;176      MENU_Obj * pObjTopLevel;
;;;177      pObjTopLevel = pObj;
00007e  4635              MOV      r5,r6
;;;178      if (_IsTopLevelMenu(hObj, pObj)) {
000080  4631              MOV      r1,r6
000082  4650              MOV      r0,r10
000084  f7fffffe          BL       _IsTopLevelMenu
000088  b110              CBZ      r0,|L1.144|
;;;179        hObjTopLevel = hObj;
00008a  4654              MOV      r4,r10
;;;180        pObjTopLevel = pObj;
00008c  4635              MOV      r5,r6
00008e  e014              B        |L1.186|
                  |L1.144|
;;;181      } else {
;;;182        do {
000090  bf00              NOP      
                  |L1.146|
;;;183          hObjTopLevel = pObjTopLevel->hOwner;
000092  f9b5405c          LDRSH    r4,[r5,#0x5c]
;;;184          pObjTopLevel = (MENU_Obj *)GUI_ALLOC_h2p(hObjTopLevel);
000096  4620              MOV      r0,r4
000098  f7fffffe          BL       GUI_ALLOC_h2p
00009c  4605              MOV      r5,r0
;;;185          if (_IsTopLevelMenu(hObjTopLevel, pObjTopLevel)) {
00009e  4629              MOV      r1,r5
0000a0  4620              MOV      r0,r4
0000a2  f7fffffe          BL       _IsTopLevelMenu
0000a6  b100              CBZ      r0,|L1.170|
;;;186            break;
0000a8  e006              B        |L1.184|
                  |L1.170|
;;;187          } else {
;;;188            if (pSubSel) {
0000aa  f1b90f00          CMP      r9,#0
0000ae  d002              BEQ      |L1.182|
;;;189              *pSubSel = pObjTopLevel->Sel;
0000b0  6ee8              LDR      r0,[r5,#0x6c]
0000b2  f8c90000          STR      r0,[r9,#0]
                  |L1.182|
;;;190            }
;;;191          }
;;;192        } while (1);
0000b6  e7ec              B        |L1.146|
                  |L1.184|
0000b8  bf00              NOP                            ;186
                  |L1.186|
;;;193      }
;;;194      *phObjTopLevel = hObjTopLevel;
0000ba  803c              STRH     r4,[r7,#0]
;;;195      *ppObjTopLevel = pObjTopLevel;
0000bc  f8c85000          STR      r5,[r8,#0]
;;;196    }
0000c0  e8bd87f0          POP      {r4-r10,pc}
;;;197    
                          ENDP

                  _HasEffect PROC
;;;201    */
;;;202    static int _HasEffect(MENU_Handle hObj, MENU_Obj* pObj) {
0000c4  b570              PUSH     {r4-r6,lr}
0000c6  4605              MOV      r5,r0
0000c8  460c              MOV      r4,r1
;;;203      if (!(pObj->Flags & MENU_SF_POPUP)) {
0000ca  f8b4005e          LDRH     r0,[r4,#0x5e]
0000ce  f0100f80          TST      r0,#0x80
0000d2  d106              BNE      |L1.226|
;;;204        if (_IsTopLevelMenu(hObj, pObj)) {
0000d4  4621              MOV      r1,r4
0000d6  4628              MOV      r0,r5
0000d8  f7fffffe          BL       _IsTopLevelMenu
0000dc  b108              CBZ      r0,|L1.226|
;;;205          return 0;
0000de  2000              MOVS     r0,#0
                  |L1.224|
;;;206        }
;;;207      }
;;;208      return 1;
;;;209    }
0000e0  bd70              POP      {r4-r6,pc}
                  |L1.226|
0000e2  2001              MOVS     r0,#1                 ;208
0000e4  e7fc              B        |L1.224|
;;;210    
                          ENDP

                  _GetEffectSize PROC
;;;214    */
;;;215    static int _GetEffectSize(MENU_Handle hObj, MENU_Obj* pObj) {
0000e6  b570              PUSH     {r4-r6,lr}
0000e8  4605              MOV      r5,r0
0000ea  460c              MOV      r4,r1
;;;216      int r = 0;
0000ec  f04f0600          MOV      r6,#0
;;;217      if (_HasEffect(hObj, pObj)) { 
0000f0  4621              MOV      r1,r4
0000f2  4628              MOV      r0,r5
0000f4  f7fffffe          BL       _HasEffect
0000f8  b108              CBZ      r0,|L1.254|
;;;218        r = pObj->Widget.pEffect->EffectSize;
0000fa  6a20              LDR      r0,[r4,#0x20]
0000fc  6946              LDR      r6,[r0,#0x14]
                  |L1.254|
;;;219      }
;;;220      return r;
0000fe  4630              MOV      r0,r6
;;;221    }
000100  bd70              POP      {r4-r6,pc}
;;;222    
                          ENDP

                  _CalcTextWidth PROC
;;;226    */
;;;227    static int _CalcTextWidth(MENU_Obj* pObj, const char GUI_UNI_PTR* sText) {
000102  e92d41f0          PUSH     {r4-r8,lr}
000106  4605              MOV      r5,r0
000108  460c              MOV      r4,r1
;;;228      int TextWidth = 0;
00010a  f04f0600          MOV      r6,#0
;;;229      if (sText) {
00010e  b15c              CBZ      r4,|L1.296|
;;;230        const GUI_FONT GUI_UNI_PTR* pOldFont;
;;;231        pOldFont  = GUI_SetFont(pObj->Props.pFont);
000110  6d68              LDR      r0,[r5,#0x54]
000112  f7fffffe          BL       GUI_SetFont
000116  4607              MOV      r7,r0
;;;232        TextWidth = GUI_GetStringDistX(sText);
000118  4620              MOV      r0,r4
00011a  f7fffffe          BL       GUI_GetStringDistX
00011e  4606              MOV      r6,r0
;;;233        GUI_SetFont(pOldFont);
000120  4638              MOV      r0,r7
000122  f7fffffe          BL       GUI_SetFont
;;;234      }
000126  bf00              NOP      
                  |L1.296|
;;;235      return TextWidth;
000128  4630              MOV      r0,r6
;;;236    }
00012a  e8bd81f0          POP      {r4-r8,pc}
;;;237    
                          ENDP

                  _GetItemWidth PROC
;;;241    */
;;;242    static int _GetItemWidth(MENU_Handle hObj, MENU_Obj* pObj, unsigned Index) {
00012e  e92d41f0          PUSH     {r4-r8,lr}
000132  4680              MOV      r8,r0
000134  460c              MOV      r4,r1
000136  4616              MOV      r6,r2
;;;243      int ItemWidth;
;;;244      if (pObj->Width && (pObj->Flags & MENU_SF_VERTICAL)) {
000138  6e60              LDR      r0,[r4,#0x64]
00013a  b160              CBZ      r0,|L1.342|
00013c  f8b4005e          LDRH     r0,[r4,#0x5e]
000140  f0100f01          TST      r0,#1
000144  d007              BEQ      |L1.342|
;;;245        ItemWidth = pObj->Width - (_GetEffectSize(hObj, pObj) << 1);
000146  4621              MOV      r1,r4
000148  4640              MOV      r0,r8
00014a  f7fffffe          BL       _GetEffectSize
00014e  6e61              LDR      r1,[r4,#0x64]
000150  eba10540          SUB      r5,r1,r0,LSL #1
000154  e019              B        |L1.394|
                  |L1.342|
;;;246      } else {
;;;247        MENU_ITEM* pItem = (MENU_ITEM*)GUI_ARRAY_GetpItem(&pObj->ItemArray, Index);
000156  4631              MOV      r1,r6
000158  f1040058          ADD      r0,r4,#0x58
00015c  f7fffffe          BL       GUI_ARRAY_GetpItem
000160  4607              MOV      r7,r0
;;;248        if ((pObj->Flags & MENU_SF_VERTICAL) || !(pItem->Flags & MENU_IF_SEPARATOR)) {
000162  f8b4005e          LDRH     r0,[r4,#0x5e]
000166  f0100f01          TST      r0,#1
00016a  d103              BNE      |L1.372|
00016c  88b8              LDRH     r0,[r7,#4]
00016e  f0100f02          TST      r0,#2
000172  d101              BNE      |L1.376|
                  |L1.372|
;;;249          ItemWidth = pItem->TextWidth;
000174  68bd              LDR      r5,[r7,#8]
000176  e001              B        |L1.380|
                  |L1.376|
;;;250        } else {
;;;251          ItemWidth = 3;
000178  f04f0503          MOV      r5,#3
                  |L1.380|
;;;252       }
;;;253        ItemWidth += pObj->Props.aBorder[MENU_BI_LEFT] + pObj->Props.aBorder[MENU_BI_RIGHT];
00017c  f8941050          LDRB     r1,[r4,#0x50]
000180  f8940051          LDRB     r0,[r4,#0x51]
000184  4408              ADD      r0,r0,r1
000186  4405              ADD      r5,r5,r0
;;;254      }
000188  bf00              NOP      
                  |L1.394|
;;;255      return ItemWidth;
00018a  4628              MOV      r0,r5
;;;256    }
00018c  e8bd81f0          POP      {r4-r8,pc}
;;;257    
                          ENDP

                  _GetItemHeight PROC
;;;261    */
;;;262    static int _GetItemHeight(MENU_Handle hObj, MENU_Obj* pObj, unsigned Index) {
000190  e92d41f0          PUSH     {r4-r8,lr}
000194  4607              MOV      r7,r0
000196  460c              MOV      r4,r1
000198  4616              MOV      r6,r2
;;;263      int ItemHeight;
;;;264      if (pObj->Height && !(pObj->Flags & MENU_SF_VERTICAL)) {
00019a  6ea0              LDR      r0,[r4,#0x68]
00019c  b160              CBZ      r0,|L1.440|
00019e  f8b4005e          LDRH     r0,[r4,#0x5e]
0001a2  f0100f01          TST      r0,#1
0001a6  d107              BNE      |L1.440|
;;;265        ItemHeight = pObj->Height - (_GetEffectSize(hObj, pObj) << 1);
0001a8  4621              MOV      r1,r4
0001aa  4638              MOV      r0,r7
0001ac  f7fffffe          BL       _GetEffectSize
0001b0  6ea1              LDR      r1,[r4,#0x68]
0001b2  eba10540          SUB      r5,r1,r0,LSL #1
0001b6  e01c              B        |L1.498|
                  |L1.440|
;;;266      } else {
;;;267        ItemHeight = GUI_GetYDistOfFont(pObj->Props.pFont);
0001b8  6d60              LDR      r0,[r4,#0x54]
0001ba  f7fffffe          BL       GUI_GetYDistOfFont
0001be  4605              MOV      r5,r0
;;;268        if (pObj->Flags & MENU_SF_VERTICAL) {
0001c0  f8b4005e          LDRH     r0,[r4,#0x5e]
0001c4  f0100f01          TST      r0,#1
0001c8  d00d              BEQ      |L1.486|
;;;269          MENU_ITEM* pItem = (MENU_ITEM*)GUI_ARRAY_GetpItem(&pObj->ItemArray, Index);
0001ca  4631              MOV      r1,r6
0001cc  f1040058          ADD      r0,r4,#0x58
0001d0  f7fffffe          BL       GUI_ARRAY_GetpItem
0001d4  4680              MOV      r8,r0
;;;270          if (pItem->Flags & MENU_IF_SEPARATOR) {
0001d6  f8b80004          LDRH     r0,[r8,#4]
0001da  f0100f02          TST      r0,#2
0001de  d001              BEQ      |L1.484|
;;;271            ItemHeight = 3;
0001e0  f04f0503          MOV      r5,#3
                  |L1.484|
;;;272          }
;;;273        }
0001e4  bf00              NOP      
                  |L1.486|
;;;274        ItemHeight += pObj->Props.aBorder[MENU_BI_TOP] + pObj->Props.aBorder[MENU_BI_BOTTOM];
0001e6  f8941052          LDRB     r1,[r4,#0x52]
0001ea  f8940053          LDRB     r0,[r4,#0x53]
0001ee  4408              ADD      r0,r0,r1
0001f0  4405              ADD      r5,r5,r0
                  |L1.498|
;;;275      }
;;;276      return ItemHeight;
0001f2  4628              MOV      r0,r5
;;;277    }
0001f4  e8bd81f0          POP      {r4-r8,pc}
;;;278    
                          ENDP

                  MENU__GetNumItems PROC
;;;1253   */
;;;1254   unsigned MENU__GetNumItems(MENU_Obj* pObj) {
0001f8  b510              PUSH     {r4,lr}
0001fa  4604              MOV      r4,r0
;;;1255     return GUI_ARRAY_GetNumItems(&pObj->ItemArray);
0001fc  f1040058          ADD      r0,r4,#0x58
000200  f7fffffe          BL       GUI_ARRAY_GetNumItems
;;;1256   }
000204  bd10              POP      {r4,pc}
;;;1257   
                          ENDP

                  _CalcMenuSizeX PROC
;;;282    */
;;;283    static int _CalcMenuSizeX(MENU_Handle hObj, MENU_Obj* pObj) {
000206  e92d47f0          PUSH     {r4-r10,lr}
00020a  4681              MOV      r9,r0
00020c  460f              MOV      r7,r1
;;;284      unsigned i, NumItems = MENU__GetNumItems(pObj);
00020e  4638              MOV      r0,r7
000210  f7fffffe          BL       MENU__GetNumItems
000214  4680              MOV      r8,r0
;;;285      int xSize = 0;
000216  f04f0500          MOV      r5,#0
;;;286      if (pObj->Flags & MENU_SF_VERTICAL) {
00021a  f8b7005e          LDRH     r0,[r7,#0x5e]
00021e  f0100f01          TST      r0,#1
000222  d00f              BEQ      |L1.580|
;;;287        int ItemWidth;
;;;288        for (i = 0; i < NumItems; i++) {
000224  462c              MOV      r4,r5
000226  e00a              B        |L1.574|
                  |L1.552|
;;;289          ItemWidth = _GetItemWidth(hObj, pObj, i);
000228  4622              MOV      r2,r4
00022a  4639              MOV      r1,r7
00022c  4648              MOV      r0,r9
00022e  f7fffffe          BL       _GetItemWidth
000232  4606              MOV      r6,r0
;;;290          if (ItemWidth > xSize) {
000234  42ae              CMP      r6,r5
000236  dd00              BLE      |L1.570|
;;;291            xSize = ItemWidth;
000238  4635              MOV      r5,r6
                  |L1.570|
00023a  f1040401          ADD      r4,r4,#1              ;288
                  |L1.574|
00023e  4544              CMP      r4,r8                 ;288
000240  d3f2              BCC      |L1.552|
;;;292          }
;;;293        }
;;;294      } else {
000242  e00c              B        |L1.606|
                  |L1.580|
;;;295        for (i = 0; i < NumItems; i++) {
000244  f04f0400          MOV      r4,#0
000248  e007              B        |L1.602|
                  |L1.586|
;;;296          xSize += _GetItemWidth(hObj, pObj, i);
00024a  4622              MOV      r2,r4
00024c  4639              MOV      r1,r7
00024e  4648              MOV      r0,r9
000250  f7fffffe          BL       _GetItemWidth
000254  4405              ADD      r5,r5,r0
000256  f1040401          ADD      r4,r4,#1              ;295
                  |L1.602|
00025a  4544              CMP      r4,r8                 ;295
00025c  d3f5              BCC      |L1.586|
                  |L1.606|
;;;297        }
;;;298      }
;;;299      xSize += (_GetEffectSize(hObj, pObj) << 1);
00025e  4639              MOV      r1,r7
000260  4648              MOV      r0,r9
000262  f7fffffe          BL       _GetEffectSize
000266  eb050540          ADD      r5,r5,r0,LSL #1
;;;300      return xSize;
00026a  4628              MOV      r0,r5
;;;301    }
00026c  e8bd87f0          POP      {r4-r10,pc}
;;;302    
                          ENDP

                  _CalcMenuSizeY PROC
;;;306    */
;;;307    static int _CalcMenuSizeY(MENU_Handle hObj, MENU_Obj* pObj) {
000270  e92d47f0          PUSH     {r4-r10,lr}
000274  4681              MOV      r9,r0
000276  460f              MOV      r7,r1
;;;308      unsigned i, NumItems = MENU__GetNumItems(pObj);
000278  4638              MOV      r0,r7
00027a  f7fffffe          BL       MENU__GetNumItems
00027e  4680              MOV      r8,r0
;;;309      int ySize = 0;
000280  f04f0500          MOV      r5,#0
;;;310      if (pObj->Flags & MENU_SF_VERTICAL) {
000284  f8b7005e          LDRH     r0,[r7,#0x5e]
000288  f0100f01          TST      r0,#1
00028c  d00c              BEQ      |L1.680|
;;;311        for (i = 0; i < NumItems; i++) {
00028e  462c              MOV      r4,r5
000290  e007              B        |L1.674|
                  |L1.658|
;;;312          ySize += _GetItemHeight(hObj, pObj, i);
000292  4622              MOV      r2,r4
000294  4639              MOV      r1,r7
000296  4648              MOV      r0,r9
000298  f7fffffe          BL       _GetItemHeight
00029c  4405              ADD      r5,r5,r0
00029e  f1040401          ADD      r4,r4,#1              ;311
                  |L1.674|
0002a2  4544              CMP      r4,r8                 ;311
0002a4  d3f5              BCC      |L1.658|
0002a6  e010              B        |L1.714|
                  |L1.680|
;;;313        }
;;;314      } else {
;;;315        int ItemHeight;
;;;316        for (i = 0; i < NumItems; i++) {
0002a8  f04f0400          MOV      r4,#0
0002ac  e00a              B        |L1.708|
                  |L1.686|
;;;317          ItemHeight = _GetItemHeight(hObj, pObj, i);
0002ae  4622              MOV      r2,r4
0002b0  4639              MOV      r1,r7
0002b2  4648              MOV      r0,r9
0002b4  f7fffffe          BL       _GetItemHeight
0002b8  4606              MOV      r6,r0
;;;318          if (ItemHeight > ySize) {
0002ba  42ae              CMP      r6,r5
0002bc  dd00              BLE      |L1.704|
;;;319            ySize = ItemHeight;
0002be  4635              MOV      r5,r6
                  |L1.704|
0002c0  f1040401          ADD      r4,r4,#1              ;316
                  |L1.708|
0002c4  4544              CMP      r4,r8                 ;316
0002c6  d3f2              BCC      |L1.686|
;;;320          }
;;;321        }
;;;322      }
0002c8  bf00              NOP      
                  |L1.714|
;;;323      ySize += (_GetEffectSize(hObj, pObj) << 1);
0002ca  4639              MOV      r1,r7
0002cc  4648              MOV      r0,r9
0002ce  f7fffffe          BL       _GetEffectSize
0002d2  eb050540          ADD      r5,r5,r0,LSL #1
;;;324      return ySize;
0002d6  4628              MOV      r0,r5
;;;325    }
0002d8  e8bd87f0          POP      {r4-r10,pc}
;;;326    
                          ENDP

                  _CalcWindowSizeX PROC
;;;330    */
;;;331    static int _CalcWindowSizeX(MENU_Handle hObj, MENU_Obj* pObj) {
0002dc  b570              PUSH     {r4-r6,lr}
0002de  4606              MOV      r6,r0
0002e0  460c              MOV      r4,r1
;;;332      int xSize = pObj->Width;
0002e2  6e65              LDR      r5,[r4,#0x64]
;;;333      if (xSize == 0) {
0002e4  b925              CBNZ     r5,|L1.752|
;;;334        xSize = _CalcMenuSizeX(hObj, pObj);
0002e6  4621              MOV      r1,r4
0002e8  4630              MOV      r0,r6
0002ea  f7fffffe          BL       _CalcMenuSizeX
0002ee  4605              MOV      r5,r0
                  |L1.752|
;;;335      }
;;;336      return xSize;
0002f0  4628              MOV      r0,r5
;;;337    }
0002f2  bd70              POP      {r4-r6,pc}
;;;338    
                          ENDP

                  _CalcWindowSizeY PROC
;;;342    */
;;;343    static int _CalcWindowSizeY(MENU_Handle hObj, MENU_Obj* pObj) {
0002f4  b570              PUSH     {r4-r6,lr}
0002f6  4606              MOV      r6,r0
0002f8  460c              MOV      r4,r1
;;;344      int ySize = pObj->Height;
0002fa  6ea5              LDR      r5,[r4,#0x68]
;;;345      if (ySize == 0) {
0002fc  b925              CBNZ     r5,|L1.776|
;;;346        ySize = _CalcMenuSizeY(hObj, pObj);
0002fe  4621              MOV      r1,r4
000300  4630              MOV      r0,r6
000302  f7fffffe          BL       _CalcMenuSizeY
000306  4605              MOV      r5,r0
                  |L1.776|
;;;347      }
;;;348      return ySize;
000308  4628              MOV      r0,r5
;;;349    }
00030a  bd70              POP      {r4-r6,pc}
;;;350    
                          ENDP

                  _GetItemFromPos PROC
;;;361    */
;;;362    static int _GetItemFromPos(MENU_Handle hObj, MENU_Obj* pObj, int x, int y) {
00030c  e92d4fff          PUSH     {r0-r11,lr}
000310  b083              SUB      sp,sp,#0xc
000312  460c              MOV      r4,r1
000314  4617              MOV      r7,r2
000316  4698              MOV      r8,r3
;;;363      int xSize, ySize, EffectSize, r = -1;
000318  f04f30ff          MOV      r0,#0xffffffff
00031c  9002              STR      r0,[sp,#8]
;;;364      ySize = _CalcMenuSizeY(hObj, pObj);
00031e  4621              MOV      r1,r4
000320  9803              LDR      r0,[sp,#0xc]
000322  f7fffffe          BL       _CalcMenuSizeY
000326  4682              MOV      r10,r0
;;;365      if ((pObj->Height) && (pObj->Height < ySize)) {
000328  6ea0              LDR      r0,[r4,#0x68]
00032a  b120              CBZ      r0,|L1.822|
00032c  6ea0              LDR      r0,[r4,#0x68]
00032e  4550              CMP      r0,r10
000330  da01              BGE      |L1.822|
;;;366        ySize = pObj->Height;
000332  f8d4a068          LDR      r10,[r4,#0x68]
                  |L1.822|
;;;367      }
;;;368      xSize = _CalcMenuSizeX(hObj, pObj);
000336  4621              MOV      r1,r4
000338  9803              LDR      r0,[sp,#0xc]
00033a  f7fffffe          BL       _CalcMenuSizeX
00033e  4681              MOV      r9,r0
;;;369      if ((pObj->Width) && (pObj->Width < xSize)) {
000340  6e60              LDR      r0,[r4,#0x64]
000342  b120              CBZ      r0,|L1.846|
000344  6e60              LDR      r0,[r4,#0x64]
000346  4548              CMP      r0,r9
000348  da01              BGE      |L1.846|
;;;370        xSize = pObj->Width;
00034a  f8d49064          LDR      r9,[r4,#0x64]
                  |L1.846|
;;;371      }
;;;372      EffectSize = _GetEffectSize(hObj, pObj);
00034e  4621              MOV      r1,r4
000350  9803              LDR      r0,[sp,#0xc]
000352  f7fffffe          BL       _GetEffectSize
000356  4606              MOV      r6,r0
;;;373      x     -= EffectSize;
000358  eba70706          SUB      r7,r7,r6
;;;374      y     -= EffectSize;
00035c  eba80806          SUB      r8,r8,r6
;;;375      xSize -= (EffectSize << 1);
000360  eba90946          SUB      r9,r9,r6,LSL #1
;;;376      ySize -= (EffectSize << 1);
000364  ebaa0a46          SUB      r10,r10,r6,LSL #1
;;;377      if ((x >= 0) && (y >= 0) && (x < xSize) && (y < ySize)) {
000368  2f00              CMP      r7,#0
00036a  db3a              BLT      |L1.994|
00036c  f1b80f00          CMP      r8,#0
000370  db37              BLT      |L1.994|
000372  454f              CMP      r7,r9
000374  da35              BGE      |L1.994|
000376  45d0              CMP      r8,r10
000378  da33              BGE      |L1.994|
;;;378        unsigned i, NumItems = MENU__GetNumItems(pObj);
00037a  4620              MOV      r0,r4
00037c  f7fffffe          BL       MENU__GetNumItems
000380  9001              STR      r0,[sp,#4]
;;;379        if (pObj->Flags & MENU_SF_VERTICAL) {
000382  f8b4005e          LDRH     r0,[r4,#0x5e]
000386  f0100f01          TST      r0,#1
00038a  d014              BEQ      |L1.950|
;;;380          int yPos = 0;
00038c  f04f0b00          MOV      r11,#0
;;;381          for (i = 0; i < NumItems; i++) {
000390  465d              MOV      r5,r11
000392  e00b              B        |L1.940|
                  |L1.916|
;;;382            yPos += _GetItemHeight(hObj, pObj, i);
000394  462a              MOV      r2,r5
000396  4621              MOV      r1,r4
000398  9803              LDR      r0,[sp,#0xc]
00039a  f7fffffe          BL       _GetItemHeight
00039e  4483              ADD      r11,r11,r0
;;;383            if (y < yPos) {
0003a0  45d8              CMP      r8,r11
0003a2  da01              BGE      |L1.936|
;;;384              r = i;
0003a4  9502              STR      r5,[sp,#8]
;;;385              break;
0003a6  e004              B        |L1.946|
                  |L1.936|
0003a8  f1050501          ADD      r5,r5,#1              ;381
                  |L1.940|
0003ac  9801              LDR      r0,[sp,#4]            ;381
0003ae  4285              CMP      r5,r0                 ;381
0003b0  d3f0              BCC      |L1.916|
                  |L1.946|
0003b2  bf00              NOP      
;;;386            }
;;;387          }
;;;388        } else {
0003b4  e014              B        |L1.992|
                  |L1.950|
;;;389          int xPos = 0;
0003b6  f04f0b00          MOV      r11,#0
;;;390          for (i = 0; i < NumItems; i++) {
0003ba  465d              MOV      r5,r11
0003bc  e00b              B        |L1.982|
                  |L1.958|
;;;391            xPos += _GetItemWidth(hObj, pObj, i);
0003be  462a              MOV      r2,r5
0003c0  4621              MOV      r1,r4
0003c2  9803              LDR      r0,[sp,#0xc]
0003c4  f7fffffe          BL       _GetItemWidth
0003c8  4483              ADD      r11,r11,r0
;;;392            if (x < xPos) {
0003ca  455f              CMP      r7,r11
0003cc  da01              BGE      |L1.978|
;;;393              r = i;
0003ce  9502              STR      r5,[sp,#8]
;;;394              break;
0003d0  e004              B        |L1.988|
                  |L1.978|
0003d2  f1050501          ADD      r5,r5,#1              ;390
                  |L1.982|
0003d6  9801              LDR      r0,[sp,#4]            ;390
0003d8  4285              CMP      r5,r0                 ;390
0003da  d3f0              BCC      |L1.958|
                  |L1.988|
0003dc  bf00              NOP      
;;;395            }
;;;396          }
;;;397        }
0003de  bf00              NOP      
                  |L1.992|
;;;398      }
0003e0  bf00              NOP      
                  |L1.994|
;;;399      return r;
0003e2  9802              LDR      r0,[sp,#8]
;;;400    }
0003e4  b007              ADD      sp,sp,#0x1c
0003e6  e8bd8ff0          POP      {r4-r11,pc}
;;;401    
                          ENDP

                  _GetItemPos PROC
;;;405    */
;;;406    static void _GetItemPos(MENU_Handle hObj, MENU_Obj* pObj, unsigned Index, int* px, int* py) {
0003ea  e92d5ff0          PUSH     {r4-r12,lr}
0003ee  4683              MOV      r11,r0
0003f0  4688              MOV      r8,r1
0003f2  4616              MOV      r6,r2
0003f4  461f              MOV      r7,r3
0003f6  f8dd9028          LDR      r9,[sp,#0x28]
;;;407      int i, EffectSize;
;;;408      EffectSize = _GetEffectSize(hObj, pObj);
0003fa  4641              MOV      r1,r8
0003fc  4658              MOV      r0,r11
0003fe  f7fffffe          BL       _GetEffectSize
000402  4605              MOV      r5,r0
;;;409      if (pObj->Flags & MENU_SF_VERTICAL) {
000404  f8b8005e          LDRH     r0,[r8,#0x5e]
000408  f0100f01          TST      r0,#1
00040c  d013              BEQ      |L1.1078|
;;;410        int yPos = 0;
00040e  f04f0a00          MOV      r10,#0
;;;411        for (i = 0; i < (int)Index; i++) {
000412  4654              MOV      r4,r10
000414  e007              B        |L1.1062|
                  |L1.1046|
;;;412          yPos += _GetItemHeight(hObj, pObj, i);
000416  4622              MOV      r2,r4
000418  4641              MOV      r1,r8
00041a  4658              MOV      r0,r11
00041c  f7fffffe          BL       _GetItemHeight
000420  4482              ADD      r10,r10,r0
000422  f1040401          ADD      r4,r4,#1              ;411
                  |L1.1062|
000426  42b4              CMP      r4,r6                 ;411
000428  dbf5              BLT      |L1.1046|
;;;413        }
;;;414        *px = EffectSize;
00042a  603d              STR      r5,[r7,#0]
;;;415        *py = EffectSize + yPos;
00042c  eb05000a          ADD      r0,r5,r10
000430  f8c90000          STR      r0,[r9,#0]
;;;416      } else {
000434  e013              B        |L1.1118|
                  |L1.1078|
;;;417        int xPos = 0;
000436  f04f0a00          MOV      r10,#0
;;;418        for (i = 0; i < (int)Index; i++) {
00043a  4654              MOV      r4,r10
00043c  e007              B        |L1.1102|
                  |L1.1086|
;;;419          xPos += _GetItemWidth(hObj, pObj, i);
00043e  4622              MOV      r2,r4
000440  4641              MOV      r1,r8
000442  4658              MOV      r0,r11
000444  f7fffffe          BL       _GetItemWidth
000448  4482              ADD      r10,r10,r0
00044a  f1040401          ADD      r4,r4,#1              ;418
                  |L1.1102|
00044e  42b4              CMP      r4,r6                 ;418
000450  dbf5              BLT      |L1.1086|
;;;420        }
;;;421        *px = EffectSize + xPos;
000452  eb05000a          ADD      r0,r5,r10
000456  6038              STR      r0,[r7,#0]
;;;422        *py = EffectSize;
000458  f8c95000          STR      r5,[r9,#0]
;;;423      }
00045c  bf00              NOP      
                  |L1.1118|
;;;424    }
00045e  e8bd9ff0          POP      {r4-r12,pc}
;;;425    
                          ENDP

                  _SetCapture PROC
;;;429    */
;;;430    static void _SetCapture(MENU_Handle hObj, const MENU_Obj* pObj) {
000462  b570              PUSH     {r4-r6,lr}
000464  4605              MOV      r5,r0
000466  460c              MOV      r4,r1
;;;431      if (pObj->IsSubmenuActive == 0) {
000468  f8940060          LDRB     r0,[r4,#0x60]
00046c  b938              CBNZ     r0,|L1.1150|
;;;432        if (WM_HasCaptured(hObj) == 0) {
00046e  4628              MOV      r0,r5
000470  f7fffffe          BL       WM_HasCaptured
000474  b918              CBNZ     r0,|L1.1150|
;;;433          WM_SetCapture(hObj, 0);
000476  2100              MOVS     r1,#0
000478  4628              MOV      r0,r5
00047a  f7fffffe          BL       WM_SetCapture
                  |L1.1150|
;;;434        }
;;;435      }
;;;436    }
00047e  bd70              POP      {r4-r6,pc}
;;;437    
                          ENDP

                  _ReleaseCapture PROC
;;;441    */
;;;442    static void _ReleaseCapture(MENU_Handle hObj, const MENU_Obj* pObj) {
000480  b570              PUSH     {r4-r6,lr}
000482  4605              MOV      r5,r0
000484  460c              MOV      r4,r1
;;;443      if (WM_HasCaptured(hObj)) {
000486  4628              MOV      r0,r5
000488  f7fffffe          BL       WM_HasCaptured
00048c  b158              CBZ      r0,|L1.1190|
;;;444        if (_IsTopLevelMenu(hObj, pObj) && !(pObj->Flags & MENU_SF_POPUP)) {
00048e  4621              MOV      r1,r4
000490  4628              MOV      r0,r5
000492  f7fffffe          BL       _IsTopLevelMenu
000496  b130              CBZ      r0,|L1.1190|
000498  f8b4005e          LDRH     r0,[r4,#0x5e]
00049c  f0100f80          TST      r0,#0x80
0004a0  d101              BNE      |L1.1190|
;;;445          WM_ReleaseCapture();
0004a2  f7fffffe          BL       WM_ReleaseCapture
                  |L1.1190|
;;;446        }
;;;447      }
;;;448    }
0004a6  bd70              POP      {r4-r6,pc}
;;;449    
                          ENDP

                  MENU__InvalidateItem PROC
;;;1261   */
;;;1262   void MENU__InvalidateItem(MENU_Handle hObj, const MENU_Obj* pObj, unsigned Index) {
0004a8  b570              PUSH     {r4-r6,lr}
0004aa  4606              MOV      r6,r0
0004ac  460c              MOV      r4,r1
0004ae  4615              MOV      r5,r2
;;;1263     GUI_USE_PARA(pObj);
0004b0  bf00              NOP      
;;;1264     GUI_USE_PARA(Index);
0004b2  bf00              NOP      
;;;1265     WM_InvalidateWindow(hObj);  /* Can be optimized, no need to invalidate all items */
0004b4  4630              MOV      r0,r6
0004b6  f7fffffe          BL       WM_InvalidateWindow
;;;1266   }
0004ba  bd70              POP      {r4-r6,pc}
;;;1267   
                          ENDP

                  _CloseSubmenu PROC
;;;453    */
;;;454    static void _CloseSubmenu(MENU_Handle hObj, MENU_Obj* pObj) {
0004bc  b570              PUSH     {r4-r6,lr}
0004be  4606              MOV      r6,r0
0004c0  460c              MOV      r4,r1
;;;455      if (pObj->Flags & MENU_SF_ACTIVE) {
0004c2  f8b4005e          LDRH     r0,[r4,#0x5e]
0004c6  f0100f40          TST      r0,#0x40
0004ca  d023              BEQ      |L1.1300|
;;;456        if (pObj->IsSubmenuActive) {
0004cc  f8940060          LDRB     r0,[r4,#0x60]
0004d0  b300              CBZ      r0,|L1.1300|
;;;457          MENU_ITEM* pItem = (MENU_ITEM*)GUI_ARRAY_GetpItem(&pObj->ItemArray, pObj->Sel);
0004d2  f1040058          ADD      r0,r4,#0x58
0004d6  6ee1              LDR      r1,[r4,#0x6c]
0004d8  f7fffffe          BL       GUI_ARRAY_GetpItem
0004dc  4605              MOV      r5,r0
;;;458          /* Inform submenu about its deactivation and detach it */
;;;459          MENU__SendMenuMessage(hObj, pItem->hSubmenu, MENU_ON_CLOSE, 0);
0004de  f9b51000          LDRSH    r1,[r5,#0]
0004e2  f04f0300          MOV      r3,#0
0004e6  f04f0204          MOV      r2,#4
0004ea  4630              MOV      r0,r6
0004ec  f7fffffe          BL       MENU__SendMenuMessage
;;;460          WM_DetachWindow(pItem->hSubmenu);
0004f0  f9b50000          LDRSH    r0,[r5,#0]
0004f4  f7fffffe          BL       WM_DetachWindow
;;;461          pObj->IsSubmenuActive = 0;
0004f8  f04f0000          MOV      r0,#0
0004fc  f8840060          STRB     r0,[r4,#0x60]
;;;462          /*
;;;463           * Keep capture in menu widget. The capture may only released
;;;464           * by clicking outside the menu or when mouse moved out.
;;;465           * And it may only released from a top level menu.
;;;466           */
;;;467          _SetCapture(hObj, pObj);
000500  4621              MOV      r1,r4
000502  4630              MOV      r0,r6
000504  f7fffffe          BL       _SetCapture
;;;468          /* Invalidate menu item. This is needed because the appearance may have changed */
;;;469          MENU__InvalidateItem(hObj, pObj, pObj->Sel);
000508  4621              MOV      r1,r4
00050a  4630              MOV      r0,r6
00050c  6ee2              LDR      r2,[r4,#0x6c]
00050e  f7fffffe          BL       MENU__InvalidateItem
;;;470        }
000512  bf00              NOP      
                  |L1.1300|
;;;471      }
;;;472    }
000514  bd70              POP      {r4-r6,pc}
;;;473    
                          ENDP

                  MENU_SetOwner PROC
;;;1390   */
;;;1391   void MENU_SetOwner(MENU_Handle hObj, WM_HWIN hOwner) {
000516  b570              PUSH     {r4-r6,lr}
000518  4604              MOV      r4,r0
00051a  460d              MOV      r5,r1
;;;1392     if (hObj) {
00051c  b13c              CBZ      r4,|L1.1326|
;;;1393       MENU_Obj* pObj;
;;;1394       WM_LOCK();
;;;1395       pObj = MENU_H2P(hObj);
00051e  4620              MOV      r0,r4
000520  f7fffffe          BL       GUI_ALLOC_h2p
000524  4606              MOV      r6,r0
;;;1396       if (pObj) {
000526  b10e              CBZ      r6,|L1.1324|
;;;1397         pObj->hOwner = hOwner;
000528  f8a6505c          STRH     r5,[r6,#0x5c]
                  |L1.1324|
;;;1398       }
;;;1399       WM_UNLOCK();
;;;1400     }
00052c  bf00              NOP      
                  |L1.1326|
;;;1401   }
00052e  bd70              POP      {r4-r6,pc}
;;;1402   
                          ENDP

                  _OpenSubmenu PROC
;;;477    */
;;;478    static void _OpenSubmenu(MENU_Handle hObj, MENU_Obj* pObj, unsigned Index) {
000530  e92d4ffe          PUSH     {r1-r11,lr}
000534  4606              MOV      r6,r0
000536  460c              MOV      r4,r1
000538  4617              MOV      r7,r2
;;;479      if (pObj->Flags & MENU_SF_ACTIVE) {
00053a  f8b4005e          LDRH     r0,[r4,#0x5e]
00053e  f0100f40          TST      r0,#0x40
000542  d07d              BEQ      |L1.1600|
;;;480        MENU_ITEM* pItem;
;;;481        char PrevActiveSubmenu;
;;;482        PrevActiveSubmenu = pObj->IsSubmenuActive;
000544  f8949060          LDRB     r9,[r4,#0x60]
;;;483        /* Close previous submenu (if needed) */
;;;484        _CloseSubmenu(hObj, pObj);
000548  4621              MOV      r1,r4
00054a  4630              MOV      r0,r6
00054c  f7fffffe          BL       _CloseSubmenu
;;;485        pItem = (MENU_ITEM*)GUI_ARRAY_GetpItem(&pObj->ItemArray, Index);
000550  4639              MOV      r1,r7
000552  f1040058          ADD      r0,r4,#0x58
000556  f7fffffe          BL       GUI_ARRAY_GetpItem
00055a  4605              MOV      r5,r0
;;;486        if (pItem->hSubmenu) {
00055c  8828              LDRH     r0,[r5,#0]
00055e  2800              CMP      r0,#0
000560  d07f              BEQ      |L1.1634|
;;;487          if ((pItem->Flags & MENU_IF_DISABLED) == 0) {
000562  88a8              LDRH     r0,[r5,#4]
000564  f0100f01          TST      r0,#1
000568  d17b              BNE      |L1.1634|
;;;488            int x, y, EffectSize;
;;;489            /* Calculate position of submenu */
;;;490            EffectSize = _GetEffectSize(hObj, pObj);
00056a  4621              MOV      r1,r4
00056c  4630              MOV      r0,r6
00056e  f7fffffe          BL       _GetEffectSize
000572  4680              MOV      r8,r0
;;;491            _GetItemPos(hObj, pObj, Index, &x, &y);
000574  a801              ADD      r0,sp,#4
000576  ab02              ADD      r3,sp,#8
000578  463a              MOV      r2,r7
00057a  4621              MOV      r1,r4
00057c  9000              STR      r0,[sp,#0]
00057e  4630              MOV      r0,r6
000580  f7fffffe          BL       _GetItemPos
;;;492            if (pObj->Flags & MENU_SF_VERTICAL) {
000584  f8b4005e          LDRH     r0,[r4,#0x5e]
000588  f0100f01          TST      r0,#1
00058c  d012              BEQ      |L1.1460|
;;;493              x += _CalcMenuSizeX(hObj, pObj) - (_GetEffectSize(hObj, pObj) << 1);
00058e  4621              MOV      r1,r4
000590  4630              MOV      r0,r6
000592  f7fffffe          BL       _CalcMenuSizeX
000596  4682              MOV      r10,r0
000598  4621              MOV      r1,r4
00059a  4630              MOV      r0,r6
00059c  f7fffffe          BL       _GetEffectSize
0005a0  ebaa0040          SUB      r0,r10,r0,LSL #1
0005a4  9902              LDR      r1,[sp,#8]
0005a6  4408              ADD      r0,r0,r1
0005a8  9002              STR      r0,[sp,#8]
;;;494              y -= EffectSize;
0005aa  9801              LDR      r0,[sp,#4]
0005ac  eba00008          SUB      r0,r0,r8
0005b0  9001              STR      r0,[sp,#4]
0005b2  e011              B        |L1.1496|
                  |L1.1460|
;;;495            } else {
;;;496              y += _CalcMenuSizeY(hObj, pObj) - (_GetEffectSize(hObj, pObj) << 1);
0005b4  4621              MOV      r1,r4
0005b6  4630              MOV      r0,r6
0005b8  f7fffffe          BL       _CalcMenuSizeY
0005bc  4682              MOV      r10,r0
0005be  4621              MOV      r1,r4
0005c0  4630              MOV      r0,r6
0005c2  f7fffffe          BL       _GetEffectSize
0005c6  ebaa0040          SUB      r0,r10,r0,LSL #1
0005ca  9901              LDR      r1,[sp,#4]
0005cc  4408              ADD      r0,r0,r1
0005ce  9001              STR      r0,[sp,#4]
;;;497              x -= EffectSize;
0005d0  9802              LDR      r0,[sp,#8]
0005d2  eba00008          SUB      r0,r0,r8
0005d6  9002              STR      r0,[sp,#8]
                  |L1.1496|
;;;498            }
;;;499            x += WM_GetWindowOrgX(hObj);
0005d8  4630              MOV      r0,r6
0005da  f7fffffe          BL       WM_GetWindowOrgX
0005de  9902              LDR      r1,[sp,#8]
0005e0  4408              ADD      r0,r0,r1
0005e2  9002              STR      r0,[sp,#8]
;;;500            y += WM_GetWindowOrgY(hObj);
0005e4  4630              MOV      r0,r6
0005e6  f7fffffe          BL       WM_GetWindowOrgY
0005ea  9901              LDR      r1,[sp,#4]
0005ec  4408              ADD      r0,r0,r1
0005ee  9001              STR      r0,[sp,#4]
;;;501            /*
;;;502             * Notify owner window when for the first time open a menu (when no
;;;503             * other submenu was open), so it can initialize the menu items.
;;;504             */
;;;505            if (PrevActiveSubmenu == 0) {
0005f0  f1b90f00          CMP      r9,#0
0005f4  d10b              BNE      |L1.1550|
;;;506              if (_IsTopLevelMenu(hObj, pObj)) {
0005f6  4621              MOV      r1,r4
0005f8  4630              MOV      r0,r6
0005fa  f7fffffe          BL       _IsTopLevelMenu
0005fe  b130              CBZ      r0,|L1.1550|
;;;507                MENU__SendMenuMessage(hObj, pObj->hOwner, MENU_ON_INITMENU, 0);
000600  f9b4105c          LDRSH    r1,[r4,#0x5c]
000604  2300              MOVS     r3,#0
000606  2201              MOVS     r2,#1
000608  4630              MOV      r0,r6
00060a  f7fffffe          BL       MENU__SendMenuMessage
                  |L1.1550|
;;;508              }
;;;509            }
;;;510            /* Notify owner window when a submenu opens, so it can initialize the menu items. */
;;;511            MENU__SendMenuMessage(hObj, pObj->hOwner, MENU_ON_INITSUBMENU, pItem->Id);
00060e  886b              LDRH     r3,[r5,#2]
000610  f9b4105c          LDRSH    r1,[r4,#0x5c]
000614  2202              MOVS     r2,#2
000616  4630              MOV      r0,r6
000618  f7fffffe          BL       MENU__SendMenuMessage
;;;512            /* Set active menu as owner of submenu. */
;;;513            MENU_SetOwner(pItem->hSubmenu, hObj);
00061c  f9b50000          LDRSH    r0,[r5,#0]
000620  4631              MOV      r1,r6
000622  f7fffffe          BL       MENU_SetOwner
;;;514            /* Attach submenu and inform it about its activation. */
;;;515            WM_AttachWindowAt(pItem->hSubmenu, WM_HBKWIN, x, y);
000626  f7fffffe          BL       WM_GetDesktopWindow
00062a  4682              MOV      r10,r0
00062c  f9b50000          LDRSH    r0,[r5,#0]
000630  4651              MOV      r1,r10
000632  e9dd3201          LDRD     r3,r2,[sp,#4]
000636  f7fffffe          BL       WM_AttachWindowAt
;;;516            MENU__SendMenuMessage(hObj, pItem->hSubmenu, MENU_ON_OPEN, 0);
00063a  f9b51000          LDRSH    r1,[r5,#0]
00063e  e001              B        |L1.1604|
                  |L1.1600|
000640  e010              B        |L1.1636|
000642  e00e              B        |L1.1634|
                  |L1.1604|
000644  2300              MOVS     r3,#0
000646  2203              MOVS     r2,#3
000648  4630              MOV      r0,r6
00064a  f7fffffe          BL       MENU__SendMenuMessage
;;;517            pObj->IsSubmenuActive = 1;
00064e  f04f0001          MOV      r0,#1
000652  f8840060          STRB     r0,[r4,#0x60]
;;;518            /* Invalidate menu item. This is needed because the appearance may have changed. */
;;;519            MENU__InvalidateItem(hObj, pObj, Index);
000656  463a              MOV      r2,r7
000658  4621              MOV      r1,r4
00065a  4630              MOV      r0,r6
00065c  f7fffffe          BL       MENU__InvalidateItem
;;;520          }
000660  bf00              NOP      
                  |L1.1634|
;;;521        }
;;;522      }
000662  bf00              NOP      
                  |L1.1636|
;;;523    }
000664  e8bd8ffe          POP      {r1-r11,pc}
;;;524    
                          ENDP

                  _ClosePopup PROC
;;;528    */
;;;529    static void _ClosePopup(MENU_Handle hObj, MENU_Obj* pObj) {
000668  b570              PUSH     {r4-r6,lr}
00066a  4605              MOV      r5,r0
00066c  460c              MOV      r4,r1
;;;530      if (pObj->Flags & MENU_SF_POPUP) {
00066e  f8b4005e          LDRH     r0,[r4,#0x5e]
000672  f0100f80          TST      r0,#0x80
000676  d00a              BEQ      |L1.1678|
;;;531        pObj->Flags &= ~(MENU_SF_POPUP);
000678  f8b4005e          LDRH     r0,[r4,#0x5e]
00067c  f0200080          BIC      r0,r0,#0x80
000680  f8a4005e          STRH     r0,[r4,#0x5e]
;;;532        WM_DetachWindow(hObj);
000684  4628              MOV      r0,r5
000686  f7fffffe          BL       WM_DetachWindow
;;;533        WM_ReleaseCapture();
00068a  f7fffffe          BL       WM_ReleaseCapture
                  |L1.1678|
;;;534      }
;;;535    }
00068e  bd70              POP      {r4-r6,pc}
;;;536    
                          ENDP

                  _SetSelection PROC
;;;540    */
;;;541    static void _SetSelection(MENU_Handle hObj, MENU_Obj* pObj, int Index) {
000690  b570              PUSH     {r4-r6,lr}
000692  4606              MOV      r6,r0
000694  460c              MOV      r4,r1
000696  4615              MOV      r5,r2
;;;542      if (Index != pObj->Sel) {
000698  6ee0              LDR      r0,[r4,#0x6c]
00069a  42a8              CMP      r0,r5
00069c  d00a              BEQ      |L1.1716|
;;;543        pObj->Sel = Index;
00069e  66e5              STR      r5,[r4,#0x6c]
;;;544        MENU__InvalidateItem(hObj, pObj, pObj->Sel); /* Invalidate previous selection */
0006a0  4621              MOV      r1,r4
0006a2  4630              MOV      r0,r6
0006a4  6ee2              LDR      r2,[r4,#0x6c]
0006a6  f7fffffe          BL       MENU__InvalidateItem
;;;545        MENU__InvalidateItem(hObj, pObj, Index);     /* Invalidate new selection */
0006aa  462a              MOV      r2,r5
0006ac  4621              MOV      r1,r4
0006ae  4630              MOV      r0,r6
0006b0  f7fffffe          BL       MENU__InvalidateItem
                  |L1.1716|
;;;546      }
;;;547    }
0006b4  bd70              POP      {r4-r6,pc}
;;;548    
                          ENDP

                  _SelectItem PROC
;;;552    */
;;;553    static void _SelectItem(MENU_Handle hObj, MENU_Obj* pObj, unsigned Index) {
0006b6  b570              PUSH     {r4-r6,lr}
0006b8  4606              MOV      r6,r0
0006ba  460c              MOV      r4,r1
0006bc  4615              MOV      r5,r2
;;;554      if (pObj->Sel != (int)Index) {
0006be  6ee0              LDR      r0,[r4,#0x6c]
0006c0  42a8              CMP      r0,r5
0006c2  d00d              BEQ      |L1.1760|
;;;555        _SetCapture(hObj, pObj);
0006c4  4621              MOV      r1,r4
0006c6  4630              MOV      r0,r6
0006c8  f7fffffe          BL       _SetCapture
;;;556        _OpenSubmenu(hObj, pObj, Index);
0006cc  462a              MOV      r2,r5
0006ce  4621              MOV      r1,r4
0006d0  4630              MOV      r0,r6
0006d2  f7fffffe          BL       _OpenSubmenu
;;;557        _SetSelection(hObj, pObj, Index);
0006d6  462a              MOV      r2,r5
0006d8  4621              MOV      r1,r4
0006da  4630              MOV      r0,r6
0006dc  f7fffffe          BL       _SetSelection
                  |L1.1760|
;;;558      }
;;;559    }
0006e0  bd70              POP      {r4-r6,pc}
;;;560    
                          ENDP

                  _DeselectItem PROC
;;;564    */
;;;565    static void _DeselectItem(MENU_Handle hObj, MENU_Obj* pObj) {
0006e2  b570              PUSH     {r4-r6,lr}
0006e4  4605              MOV      r5,r0
0006e6  460c              MOV      r4,r1
;;;566      if (pObj->IsSubmenuActive == 0) {
0006e8  f8940060          LDRB     r0,[r4,#0x60]
0006ec  b948              CBNZ     r0,|L1.1794|
;;;567        _SetSelection(hObj, pObj, -1);
0006ee  f04f32ff          MOV      r2,#0xffffffff
0006f2  4621              MOV      r1,r4
0006f4  4628              MOV      r0,r5
0006f6  f7fffffe          BL       _SetSelection
;;;568        _ReleaseCapture(hObj, pObj);
0006fa  4621              MOV      r1,r4
0006fc  4628              MOV      r0,r5
0006fe  f7fffffe          BL       _ReleaseCapture
                  |L1.1794|
;;;569      }
;;;570    }
000702  bd70              POP      {r4-r6,pc}
;;;571    
                          ENDP

                  _ActivateItem PROC
;;;575    */
;;;576    static void _ActivateItem(MENU_Handle hObj, MENU_Obj* pObj, unsigned Index) {
000704  e92d41f0          PUSH     {r4-r8,lr}
000708  4607              MOV      r7,r0
00070a  460c              MOV      r4,r1
00070c  4616              MOV      r6,r2
;;;577      MENU_ITEM* pItem;
;;;578      pItem = (MENU_ITEM*)GUI_ARRAY_GetpItem(&pObj->ItemArray, Index);
00070e  4631              MOV      r1,r6
000710  f1040058          ADD      r0,r4,#0x58
000714  f7fffffe          BL       GUI_ARRAY_GetpItem
000718  4605              MOV      r5,r0
;;;579      if (pItem->hSubmenu == 0) {
00071a  8828              LDRH     r0,[r5,#0]
00071c  b970              CBNZ     r0,|L1.1852|
;;;580        if ((pItem->Flags & (MENU_IF_DISABLED | MENU_IF_SEPARATOR)) == 0) {
00071e  88a8              LDRH     r0,[r5,#4]
000720  f0100f03          TST      r0,#3
000724  d10a              BNE      |L1.1852|
;;;581          _ClosePopup(hObj, pObj);
000726  4621              MOV      r1,r4
000728  4638              MOV      r0,r7
00072a  f7fffffe          BL       _ClosePopup
;;;582          /* Send item select message to owner. */
;;;583          MENU__SendMenuMessage(hObj, pObj->hOwner, MENU_ON_ITEMSELECT, pItem->Id);
00072e  886b              LDRH     r3,[r5,#2]
000730  f9b4105c          LDRSH    r1,[r4,#0x5c]
000734  2200              MOVS     r2,#0
000736  4638              MOV      r0,r7
000738  f7fffffe          BL       MENU__SendMenuMessage
                  |L1.1852|
;;;584        }
;;;585      }
;;;586    }
00073c  e8bd81f0          POP      {r4-r8,pc}
;;;587    
                          ENDP

                  _ActivateMenu PROC
;;;591    */
;;;592    static void _ActivateMenu(MENU_Handle hObj, MENU_Obj* pObj, unsigned Index) {
000740  e92d41f0          PUSH     {r4-r8,lr}
000744  4607              MOV      r7,r0
000746  460c              MOV      r4,r1
000748  4615              MOV      r5,r2
;;;593      if ((pObj->Flags & MENU_SF_OPEN_ON_POINTEROVER) == 0) {
00074a  f8b4005e          LDRH     r0,[r4,#0x5e]
00074e  f0100f02          TST      r0,#2
000752  d134              BNE      |L1.1982|
;;;594        MENU_ITEM* pItem;
;;;595        pItem = (MENU_ITEM*)GUI_ARRAY_GetpItem(&pObj->ItemArray, Index);
000754  4629              MOV      r1,r5
000756  f1040058          ADD      r0,r4,#0x58
00075a  f7fffffe          BL       GUI_ARRAY_GetpItem
00075e  4606              MOV      r6,r0
;;;596        if (pItem->hSubmenu) {
000760  8830              LDRH     r0,[r6,#0]
000762  b358              CBZ      r0,|L1.1980|
;;;597          if ((pItem->Flags & MENU_IF_DISABLED) == 0) {
000764  88b0              LDRH     r0,[r6,#4]
000766  f0100f01          TST      r0,#1
00076a  d127              BNE      |L1.1980|
;;;598            if ((pObj->Flags & MENU_SF_ACTIVE) == 0) {
00076c  f8b4005e          LDRH     r0,[r4,#0x5e]
000770  f0100f40          TST      r0,#0x40
000774  d110              BNE      |L1.1944|
;;;599              pObj->Flags |= MENU_SF_ACTIVE;
000776  f8b4005e          LDRH     r0,[r4,#0x5e]
00077a  f0400040          ORR      r0,r0,#0x40
00077e  f8a4005e          STRH     r0,[r4,#0x5e]
;;;600              _OpenSubmenu(hObj, pObj, Index);
000782  462a              MOV      r2,r5
000784  4621              MOV      r1,r4
000786  4638              MOV      r0,r7
000788  f7fffffe          BL       _OpenSubmenu
;;;601              _SetSelection(hObj, pObj, Index);
00078c  462a              MOV      r2,r5
00078e  4621              MOV      r1,r4
000790  4638              MOV      r0,r7
000792  f7fffffe          BL       _SetSelection
000796  e011              B        |L1.1980|
                  |L1.1944|
;;;602            } else if (pObj->Flags & MENU_SF_CLOSE_ON_SECOND_CLICK) {
000798  f8b4005e          LDRH     r0,[r4,#0x5e]
00079c  f0100f04          TST      r0,#4
0007a0  d00c              BEQ      |L1.1980|
;;;603              if ((int)Index == pObj->Sel) {
0007a2  6ee0              LDR      r0,[r4,#0x6c]
0007a4  42a8              CMP      r0,r5
0007a6  d109              BNE      |L1.1980|
;;;604                _CloseSubmenu(hObj, pObj);
0007a8  4621              MOV      r1,r4
0007aa  4638              MOV      r0,r7
0007ac  f7fffffe          BL       _CloseSubmenu
;;;605                pObj->Flags &= ~MENU_SF_ACTIVE;
0007b0  f8b4005e          LDRH     r0,[r4,#0x5e]
0007b4  f0200040          BIC      r0,r0,#0x40
0007b8  f8a4005e          STRH     r0,[r4,#0x5e]
                  |L1.1980|
;;;606              }
;;;607            }
;;;608          }
;;;609        }
;;;610      }
0007bc  bf00              NOP      
                  |L1.1982|
;;;611    }
0007be  e8bd81f0          POP      {r4-r8,pc}
;;;612    
                          ENDP

                  _DeactivateMenu PROC
;;;616    */
;;;617    static void _DeactivateMenu(MENU_Handle hObj, MENU_Obj* pObj) {
0007c2  b570              PUSH     {r4-r6,lr}
0007c4  4605              MOV      r5,r0
0007c6  460c              MOV      r4,r1
;;;618      _CloseSubmenu(hObj, pObj);
0007c8  4621              MOV      r1,r4
0007ca  4628              MOV      r0,r5
0007cc  f7fffffe          BL       _CloseSubmenu
;;;619      if ((pObj->Flags & MENU_SF_OPEN_ON_POINTEROVER) == 0) {
0007d0  f8b4005e          LDRH     r0,[r4,#0x5e]
0007d4  f0100f02          TST      r0,#2
0007d8  d105              BNE      |L1.2022|
;;;620        pObj->Flags &= ~MENU_SF_ACTIVE;
0007da  f8b4005e          LDRH     r0,[r4,#0x5e]
0007de  f0200040          BIC      r0,r0,#0x40
0007e2  f8a4005e          STRH     r0,[r4,#0x5e]
                  |L1.2022|
;;;621      }
;;;622    }
0007e6  bd70              POP      {r4-r6,pc}
;;;623    
                          ENDP

                  _HandlePID PROC
;;;662    */
;;;663    static char _HandlePID(MENU_Handle hObj, MENU_Obj* pObj, int x, int y, int Pressed) {
0007e8  e92d47f0          PUSH     {r4-r10,lr}
0007ec  b086              SUB      sp,sp,#0x18
0007ee  4681              MOV      r9,r0
0007f0  460d              MOV      r5,r1
0007f2  4616              MOV      r6,r2
0007f4  461f              MOV      r7,r3
0007f6  9c0e              LDR      r4,[sp,#0x38]
;;;664      GUI_PID_STATE PrevState;
;;;665      char XYInWidget = 0;
0007f8  f04f0a00          MOV      r10,#0
;;;666      WM_PID__GetPrevState(&PrevState);
0007fc  a803              ADD      r0,sp,#0xc
0007fe  f7fffffe          BL       WM_PID__GetPrevState
;;;667      /*
;;;668       * Check if coordinates are inside the widget.
;;;669       */
;;;670      if ((x >= 0) && (y >= 0)) {
000802  2e00              CMP      r6,#0
000804  db10              BLT      |L1.2088|
000806  2f00              CMP      r7,#0
000808  db0e              BLT      |L1.2088|
;;;671        GUI_RECT r;
;;;672        WM__GetClientRectWin(&pObj->Widget.Win, &r);
00080a  a901              ADD      r1,sp,#4
00080c  4628              MOV      r0,r5
00080e  f7fffffe          BL       WM__GetClientRectWin
;;;673        if ((x <= r.x1) && (y <= r.y1)) {
000812  f9bd0008          LDRSH    r0,[sp,#8]
000816  42b0              CMP      r0,r6
000818  db05              BLT      |L1.2086|
00081a  f9bd000a          LDRSH    r0,[sp,#0xa]
00081e  42b8              CMP      r0,r7
000820  db01              BLT      |L1.2086|
;;;674          XYInWidget = 1;
000822  f04f0a01          MOV      r10,#1
                  |L1.2086|
;;;675        }
;;;676      }
000826  bf00              NOP      
                  |L1.2088|
;;;677    
;;;678      if (XYInWidget) {
000828  f1ba0f00          CMP      r10,#0
00082c  d04a              BEQ      |L1.2244|
;;;679        int ItemIndex;
;;;680        ItemIndex = _GetItemFromPos(hObj, pObj, x, y);
00082e  463b              MOV      r3,r7
000830  4632              MOV      r2,r6
000832  4629              MOV      r1,r5
000834  4648              MOV      r0,r9
000836  f7fffffe          BL       _GetItemFromPos
00083a  4680              MOV      r8,r0
;;;681        /* 
;;;682         * Handle PID when coordinates are inside the widget.
;;;683         */
;;;684        if (ItemIndex >= 0) {
00083c  f1b80f00          CMP      r8,#0
000840  db24              BLT      |L1.2188|
;;;685          /* 
;;;686           * Coordinates are inside the menu.
;;;687           */
;;;688          if (Pressed > 0) {
000842  2c00              CMP      r4,#0
000844  dd0f              BLE      |L1.2150|
;;;689            if ((PrevState.Pressed == 0) && (Pressed == 1)) {  /* Clicked */
000846  f89d0014          LDRB     r0,[sp,#0x14]
00084a  b930              CBNZ     r0,|L1.2138|
00084c  2c01              CMP      r4,#1
00084e  d104              BNE      |L1.2138|
;;;690              _ActivateMenu(hObj, pObj, ItemIndex);
000850  4642              MOV      r2,r8
000852  4629              MOV      r1,r5
000854  4648              MOV      r0,r9
000856  f7fffffe          BL       _ActivateMenu
                  |L1.2138|
;;;691            }
;;;692            _SelectItem(hObj, pObj, ItemIndex);
00085a  4642              MOV      r2,r8
00085c  4629              MOV      r1,r5
00085e  4648              MOV      r0,r9
000860  f7fffffe          BL       _SelectItem
000864  e02a              B        |L1.2236|
                  |L1.2150|
;;;693          } else if ((Pressed == 0) && (PrevState.Pressed == 1)) {  /* Released */
000866  b94c              CBNZ     r4,|L1.2172|
000868  f89d0014          LDRB     r0,[sp,#0x14]
00086c  2801              CMP      r0,#1
00086e  d105              BNE      |L1.2172|
;;;694            _ActivateItem(hObj, pObj, ItemIndex);
000870  4642              MOV      r2,r8
000872  4629              MOV      r1,r5
000874  4648              MOV      r0,r9
000876  f7fffffe          BL       _ActivateItem
00087a  e01f              B        |L1.2236|
                  |L1.2172|
;;;695          } else if (Pressed < 0) {  /* Mouse moved */
00087c  2c00              CMP      r4,#0
00087e  da1d              BGE      |L1.2236|
;;;696            #if (GUI_SUPPORT_MOUSE)
;;;697              if (_ForwardMouseOverMsg(hObj, pObj, x, y) != 0) {
;;;698                _DeselectItem(hObj, pObj);
;;;699              } else
;;;700            #endif
;;;701            {
;;;702              _SelectItem(hObj, pObj, ItemIndex);
000880  4642              MOV      r2,r8
000882  4629              MOV      r1,r5
000884  4648              MOV      r0,r9
000886  f7fffffe          BL       _SelectItem
00088a  e017              B        |L1.2236|
                  |L1.2188|
;;;703            }
;;;704          }
;;;705        } else {
;;;706          /* 
;;;707           * Coordinates are outside the menu but inside the widget.
;;;708           */
;;;709          if (Pressed > 0) {
00088c  2c00              CMP      r4,#0
00088e  dd0b              BLE      |L1.2216|
;;;710            if (PrevState.Pressed == 0) {  /* Clicked */
000890  f89d0014          LDRB     r0,[sp,#0x14]
000894  b918              CBNZ     r0,|L1.2206|
;;;711              /* 
;;;712               * User has clicked outside the menu. Close the active submenu.
;;;713               * The widget itself must be closed (if needed) by the owner.
;;;714               */
;;;715              _DeactivateMenu(hObj, pObj);
000896  4629              MOV      r1,r5
000898  4648              MOV      r0,r9
00089a  f7fffffe          BL       _DeactivateMenu
                  |L1.2206|
;;;716            }
;;;717            _DeselectItem(hObj, pObj);
00089e  4629              MOV      r1,r5
0008a0  4648              MOV      r0,r9
0008a2  f7fffffe          BL       _DeselectItem
0008a6  e009              B        |L1.2236|
                  |L1.2216|
;;;718          } else if (Pressed < 0) {  /* Moved out or mouse moved */
0008a8  2c00              CMP      r4,#0
0008aa  da07              BGE      |L1.2236|
;;;719            if (!(pObj->Widget.State & WIDGET_STATE_FOCUS)) {
0008ac  8ce8              LDRH     r0,[r5,#0x26]
0008ae  f0100f01          TST      r0,#1
0008b2  d103              BNE      |L1.2236|
;;;720              _DeselectItem(hObj, pObj);
0008b4  4629              MOV      r1,r5
0008b6  4648              MOV      r0,r9
0008b8  f7fffffe          BL       _DeselectItem
                  |L1.2236|
;;;721            }
;;;722          }
;;;723        }
;;;724        return 0;
0008bc  2000              MOVS     r0,#0
                  |L1.2238|
;;;725      } else {
;;;726        /* 
;;;727         * Handle PID when coordinates are outside the widget.
;;;728         */
;;;729        if ((Pressed > 0) && (PrevState.Pressed == 0)) {
;;;730          /* 
;;;731           * User has clicked outside the menu. Close the active submenu.
;;;732           * The widget itself must be closed (if needed) by the owner.
;;;733           */
;;;734          _DeselectItem(hObj, pObj);
;;;735          _DeactivateMenu(hObj, pObj);
;;;736          _ClosePopup(hObj, pObj);
;;;737          _SetSelection(hObj, pObj, -1);
;;;738          if (pObj->Widget.State & WIDGET_STATE_FOCUS) {
;;;739            MENU_Handle hObjTopLevel; 
;;;740            MENU_Obj *  pObjTopLevel;
;;;741            _GetTopLevelMenu(hObj, pObj, &hObjTopLevel, &pObjTopLevel, 0);
;;;742            WM_SetFocus(hObjTopLevel);
;;;743            _SetSelection(hObjTopLevel, pObjTopLevel, -1);
;;;744            _ReleaseCapture(hObjTopLevel, pObjTopLevel);
;;;745          }
;;;746        }
;;;747        if (!(pObj->Widget.State & WIDGET_STATE_FOCUS)) {
;;;748          _DeselectItem(hObj, pObj);
;;;749        }
;;;750        #if (GUI_SUPPORT_MOUSE)
;;;751          _ForwardMouseOverMsg(hObj, pObj, x, y);
;;;752        #endif
;;;753      }
;;;754      return 1;   /* Coordinates are not in widget, we need to forward PID message to owner */
;;;755    }
0008be  b006              ADD      sp,sp,#0x18
0008c0  e8bd87f0          POP      {r4-r10,pc}
                  |L1.2244|
0008c4  2c00              CMP      r4,#0                 ;729
0008c6  dd31              BLE      |L1.2348|
0008c8  f89d0014          LDRB     r0,[sp,#0x14]         ;729
0008cc  bb70              CBNZ     r0,|L1.2348|
0008ce  4629              MOV      r1,r5                 ;734
0008d0  4648              MOV      r0,r9                 ;734
0008d2  f7fffffe          BL       _DeselectItem
0008d6  4629              MOV      r1,r5                 ;735
0008d8  4648              MOV      r0,r9                 ;735
0008da  f7fffffe          BL       _DeactivateMenu
0008de  4629              MOV      r1,r5                 ;736
0008e0  4648              MOV      r0,r9                 ;736
0008e2  f7fffffe          BL       _ClosePopup
0008e6  f04f32ff          MOV      r2,#0xffffffff        ;737
0008ea  4629              MOV      r1,r5                 ;737
0008ec  4648              MOV      r0,r9                 ;737
0008ee  f7fffffe          BL       _SetSelection
0008f2  8ce8              LDRH     r0,[r5,#0x26]         ;738
0008f4  f0100f01          TST      r0,#1                 ;738
0008f8  d018              BEQ      |L1.2348|
0008fa  2000              MOVS     r0,#0                 ;741
0008fc  ab01              ADD      r3,sp,#4              ;741
0008fe  aa02              ADD      r2,sp,#8              ;741
000900  4629              MOV      r1,r5                 ;741
000902  9000              STR      r0,[sp,#0]            ;741
000904  4648              MOV      r0,r9                 ;741
000906  f7fffffe          BL       _GetTopLevelMenu
00090a  f9bd0008          LDRSH    r0,[sp,#8]            ;742
00090e  f7fffffe          BL       WM_SetFocus
000912  f04f32ff          MOV      r2,#0xffffffff        ;743
000916  f9bd0008          LDRSH    r0,[sp,#8]            ;743
00091a  9901              LDR      r1,[sp,#4]            ;743
00091c  f7fffffe          BL       _SetSelection
000920  f9bd0008          LDRSH    r0,[sp,#8]            ;744
000924  9901              LDR      r1,[sp,#4]            ;744
000926  f7fffffe          BL       _ReleaseCapture
00092a  bf00              NOP                            ;745
                  |L1.2348|
00092c  8ce8              LDRH     r0,[r5,#0x26]         ;747
00092e  f0100f01          TST      r0,#1                 ;747
000932  d103              BNE      |L1.2364|
000934  4629              MOV      r1,r5                 ;748
000936  4648              MOV      r0,r9                 ;748
000938  f7fffffe          BL       _DeselectItem
                  |L1.2364|
00093c  2001              MOVS     r0,#1                 ;754
00093e  e7be              B        |L1.2238|
;;;756    
                          ENDP

                  _ForwardPIDMsgToOwner PROC
;;;760    */
;;;761    static void _ForwardPIDMsgToOwner(MENU_Handle hObj, MENU_Obj* pObj, WM_MESSAGE* pMsg) {
000940  e92d47f0          PUSH     {r4-r10,lr}
000944  4680              MOV      r8,r0
000946  460e              MOV      r6,r1
000948  4614              MOV      r4,r2
;;;762      if (_IsTopLevelMenu(hObj, pObj) == 0) {
00094a  4631              MOV      r1,r6
00094c  4640              MOV      r0,r8
00094e  f7fffffe          BL       _IsTopLevelMenu
000952  bb58              CBNZ     r0,|L1.2476|
;;;763        WM_HWIN hOwner;
;;;764        hOwner = pObj->hOwner ? pObj->hOwner : WM_GetParent(hObj);
000954  f8b6005c          LDRH     r0,[r6,#0x5c]
000958  b110              CBZ      r0,|L1.2400|
00095a  f9b6005c          LDRSH    r0,[r6,#0x5c]
00095e  e002              B        |L1.2406|
                  |L1.2400|
000960  4640              MOV      r0,r8
000962  f7fffffe          BL       WM_GetParent
                  |L1.2406|
000966  4607              MOV      r7,r0
;;;765        if (hOwner) {
000968  b1ff              CBZ      r7,|L1.2474|
;;;766          if (pMsg->Data.p) {
00096a  68a0              LDR      r0,[r4,#8]
00096c  b1c8              CBZ      r0,|L1.2466|
;;;767            GUI_PID_STATE* pState;
;;;768            pState = (GUI_PID_STATE*)pMsg->Data.p;
00096e  68a5              LDR      r5,[r4,#8]
;;;769            pState->x += WM_GetWindowOrgX(hObj) - WM_GetWindowOrgX(hOwner);
000970  4640              MOV      r0,r8
000972  f7fffffe          BL       WM_GetWindowOrgX
000976  4681              MOV      r9,r0
000978  4638              MOV      r0,r7
00097a  f7fffffe          BL       WM_GetWindowOrgX
00097e  eba90000          SUB      r0,r9,r0
000982  6829              LDR      r1,[r5,#0]
000984  4408              ADD      r0,r0,r1
000986  6028              STR      r0,[r5,#0]
;;;770            pState->y += WM_GetWindowOrgY(hObj) - WM_GetWindowOrgY(hOwner);
000988  4640              MOV      r0,r8
00098a  f7fffffe          BL       WM_GetWindowOrgY
00098e  4681              MOV      r9,r0
000990  4638              MOV      r0,r7
000992  f7fffffe          BL       WM_GetWindowOrgY
000996  eba90000          SUB      r0,r9,r0
00099a  6869              LDR      r1,[r5,#4]
00099c  4408              ADD      r0,r0,r1
00099e  6068              STR      r0,[r5,#4]
;;;771          }
0009a0  bf00              NOP      
                  |L1.2466|
;;;772          WM__SendMessage(hOwner, pMsg);
0009a2  4621              MOV      r1,r4
0009a4  4638              MOV      r0,r7
0009a6  f7fffffe          BL       WM__SendMessage
                  |L1.2474|
;;;773        }
;;;774      }
0009aa  bf00              NOP      
                  |L1.2476|
;;;775    }
0009ac  e8bd87f0          POP      {r4-r10,pc}
;;;776    
                          ENDP

                  MENU__ResizeMenu PROC
;;;1288   */
;;;1289   void MENU__ResizeMenu(MENU_Handle hObj, MENU_Obj* pObj) {
0009b0  e92d41f0          PUSH     {r4-r8,lr}
0009b4  4604              MOV      r4,r0
0009b6  460d              MOV      r5,r1
;;;1290     int xSize, ySize;
;;;1291     xSize = _CalcWindowSizeX(hObj, pObj);
0009b8  4629              MOV      r1,r5
0009ba  4620              MOV      r0,r4
0009bc  f7fffffe          BL       _CalcWindowSizeX
0009c0  4606              MOV      r6,r0
;;;1292     ySize = _CalcWindowSizeY(hObj, pObj);
0009c2  4629              MOV      r1,r5
0009c4  4620              MOV      r0,r4
0009c6  f7fffffe          BL       _CalcWindowSizeY
0009ca  4607              MOV      r7,r0
;;;1293     WM_SetSize(hObj, xSize, ySize);
0009cc  463a              MOV      r2,r7
0009ce  4631              MOV      r1,r6
0009d0  4620              MOV      r0,r4
0009d2  f7fffffe          BL       WM_SetSize
;;;1294     WM_InvalidateWindow(hObj);
0009d6  4620              MOV      r0,r4
0009d8  f7fffffe          BL       WM_InvalidateWindow
;;;1295   }
0009dc  e8bd81f0          POP      {r4-r8,pc}
;;;1296   
                          ENDP

                  _OnMenu PROC
;;;786    */
;;;787    static void _OnMenu(MENU_Handle hObj, MENU_Obj* pObj, WM_MESSAGE* pMsg) {
0009e0  e92d41f0          PUSH     {r4-r8,lr}
0009e4  4606              MOV      r6,r0
0009e6  460c              MOV      r4,r1
0009e8  4615              MOV      r5,r2
;;;788      const MENU_MSG_DATA* pData = (const MENU_MSG_DATA*)pMsg->Data.p;
0009ea  68af              LDR      r7,[r5,#8]
;;;789      if (pData) {
0009ec  2f00              CMP      r7,#0
0009ee  d049              BEQ      |L1.2692|
;;;790        switch (pData->MsgType) {
0009f0  8838              LDRH     r0,[r7,#0]
0009f2  2806              CMP      r0,#6
0009f4  d245              BCS      |L1.2690|
0009f6  e8dff000          TBB      [pc,r0]
0009fa  0310              DCB      0x03,0x10
0009fc  11243b40          DCB      0x11,0x24,0x3b,0x40
;;;791        case MENU_ON_ITEMSELECT:
;;;792          _DeactivateMenu(hObj, pObj);
000a00  4621              MOV      r1,r4
000a02  4630              MOV      r0,r6
000a04  f7fffffe          BL       _DeactivateMenu
;;;793          _DeselectItem(hObj, pObj);
000a08  4621              MOV      r1,r4
000a0a  4630              MOV      r0,r6
000a0c  f7fffffe          BL       _DeselectItem
;;;794          _ClosePopup(hObj, pObj);
000a10  4621              MOV      r1,r4
000a12  4630              MOV      r0,r6
000a14  f7fffffe          BL       _ClosePopup
;;;795          /* No break here. We need to forward message to owner. */
;;;796        case MENU_ON_INITMENU:
000a18  bf00              NOP      
;;;797        case MENU_ON_INITSUBMENU:
000a1a  bf00              NOP      
;;;798          /* Forward message to owner. */
;;;799          {
;;;800            WM_HWIN hOwner;
;;;801            hOwner = pObj->hOwner ? pObj->hOwner : WM_GetParent(hObj);
000a1c  f8b4005c          LDRH     r0,[r4,#0x5c]
000a20  b110              CBZ      r0,|L1.2600|
000a22  f9b4005c          LDRSH    r0,[r4,#0x5c]
000a26  e002              B        |L1.2606|
                  |L1.2600|
000a28  4630              MOV      r0,r6
000a2a  f7fffffe          BL       WM_GetParent
                  |L1.2606|
000a2e  4680              MOV      r8,r0
;;;802            if (hOwner) {
000a30  f1b80f00          CMP      r8,#0
000a34  d004              BEQ      |L1.2624|
;;;803              pMsg->hWinSrc = hObj;
000a36  80ee              STRH     r6,[r5,#6]
;;;804              WM__SendMessage(hOwner, pMsg);
000a38  4629              MOV      r1,r5
000a3a  4640              MOV      r0,r8
000a3c  f7fffffe          BL       WM__SendMessage
                  |L1.2624|
;;;805            }
;;;806          }
;;;807          break;
000a40  e01f              B        |L1.2690|
;;;808        case MENU_ON_OPEN:
;;;809          pObj->Sel = -1;
000a42  f04f30ff          MOV      r0,#0xffffffff
000a46  f104045c          ADD      r4,r4,#0x5c
000a4a  6120              STR      r0,[r4,#0x10]
;;;810          pObj->IsSubmenuActive = 0;
000a4c  f04f0000          MOV      r0,#0
000a50  7120              STRB     r0,[r4,#4]
;;;811          pObj->Flags |= MENU_SF_ACTIVE | MENU_SF_OPEN_ON_POINTEROVER;
000a52  8860              LDRH     r0,[r4,#2]
000a54  f0400042          ORR      r0,r0,#0x42
000a58  8060              STRH     r0,[r4,#2]
000a5a  f1a4045c          SUB      r4,r4,#0x5c
;;;812          _SetCapture(hObj, pObj);
000a5e  4621              MOV      r1,r4
000a60  4630              MOV      r0,r6
000a62  f7fffffe          BL       _SetCapture
;;;813          MENU__ResizeMenu(hObj, pObj);
000a66  4621              MOV      r1,r4
000a68  4630              MOV      r0,r6
000a6a  f7fffffe          BL       MENU__ResizeMenu
;;;814          break;
000a6e  e008              B        |L1.2690|
;;;815        case MENU_ON_CLOSE:
;;;816          _CloseSubmenu(hObj, pObj);
000a70  4621              MOV      r1,r4
000a72  4630              MOV      r0,r6
000a74  f7fffffe          BL       _CloseSubmenu
;;;817          break;
000a78  e003              B        |L1.2690|
;;;818        case MENU_IS_MENU:
;;;819          pMsg->Data.v = 1;
000a7a  f04f0001          MOV      r0,#1
000a7e  60a8              STR      r0,[r5,#8]
;;;820          break;
000a80  bf00              NOP      
                  |L1.2690|
000a82  bf00              NOP                            ;807
                  |L1.2692|
;;;821        }
;;;822      }
;;;823    }
000a84  e8bd81f0          POP      {r4-r8,pc}
;;;824    
                          ENDP

                  _OnTouch PROC
;;;828    */
;;;829    static char _OnTouch(MENU_Handle hObj, MENU_Obj* pObj, WM_MESSAGE* pMsg) {
000a88  b5f8              PUSH     {r3-r7,lr}
000a8a  4606              MOV      r6,r0
000a8c  460f              MOV      r7,r1
000a8e  4615              MOV      r5,r2
;;;830      const GUI_PID_STATE* pState = (const GUI_PID_STATE*)pMsg->Data.p;
000a90  68ac              LDR      r4,[r5,#8]
;;;831      if (pState) {  /* Something happened in our area (pressed or released) */
000a92  b144              CBZ      r4,|L1.2726|
;;;832        return _HandlePID(hObj, pObj, pState->x, pState->y, pState->Pressed);
000a94  7a20              LDRB     r0,[r4,#8]
000a96  9000              STR      r0,[sp,#0]
000a98  4639              MOV      r1,r7
000a9a  4630              MOV      r0,r6
000a9c  e9d42300          LDRD     r2,r3,[r4,#0]
000aa0  f7fffffe          BL       _HandlePID
                  |L1.2724|
;;;833      }
;;;834      return _HandlePID(hObj, pObj, -1, -1, -1); /* Moved out */
;;;835    }
000aa4  bdf8              POP      {r3-r7,pc}
                  |L1.2726|
000aa6  f04f30ff          MOV      r0,#0xffffffff        ;834
000aaa  4603              MOV      r3,r0                 ;834
000aac  4602              MOV      r2,r0                 ;834
000aae  4639              MOV      r1,r7                 ;834
000ab0  9000              STR      r0,[sp,#0]            ;834
000ab2  4630              MOV      r0,r6                 ;834
000ab4  f7fffffe          BL       _HandlePID
000ab8  e7f4              B        |L1.2724|
;;;836    
                          ENDP

                  _SetPaintColors PROC
;;;854    */
;;;855    static void _SetPaintColors(const MENU_Obj* pObj, const MENU_ITEM* pItem, int ItemIndex) {
000aba  e92d41f0          PUSH     {r4-r8,lr}
000abe  4604              MOV      r4,r0
000ac0  460e              MOV      r6,r1
000ac2  4617              MOV      r7,r2
;;;856      char Selected;
;;;857      unsigned ColorIndex;
;;;858      Selected = (ItemIndex == pObj->Sel) ? 1 : 0;
000ac4  6ee0              LDR      r0,[r4,#0x6c]
000ac6  42b8              CMP      r0,r7
000ac8  d102              BNE      |L1.2768|
000aca  f04f0001          MOV      r0,#1
000ace  e001              B        |L1.2772|
                  |L1.2768|
000ad0  f04f0000          MOV      r0,#0
                  |L1.2772|
000ad4  4680              MOV      r8,r0
;;;859      if (pObj->IsSubmenuActive && Selected) {
000ad6  f8940060          LDRB     r0,[r4,#0x60]
000ada  b128              CBZ      r0,|L1.2792|
000adc  f1b80f00          CMP      r8,#0
000ae0  d002              BEQ      |L1.2792|
;;;860        ColorIndex = MENU_CI_ACTIVE_SUBMENU;
000ae2  f04f0504          MOV      r5,#4
000ae6  e01d              B        |L1.2852|
                  |L1.2792|
;;;861      } else if (pItem->Flags & MENU_IF_SEPARATOR) {
000ae8  88b0              LDRH     r0,[r6,#4]
000aea  f0100f02          TST      r0,#2
000aee  d002              BEQ      |L1.2806|
;;;862        ColorIndex = MENU_CI_ENABLED;
000af0  f04f0500          MOV      r5,#0
000af4  e016              B        |L1.2852|
                  |L1.2806|
;;;863      } else {
;;;864        ColorIndex = (Selected) ? MENU_CI_SELECTED : MENU_CI_ENABLED;
000af6  f1b80f00          CMP      r8,#0
000afa  d002              BEQ      |L1.2818|
000afc  f04f0001          MOV      r0,#1
000b00  e001              B        |L1.2822|
                  |L1.2818|
000b02  f04f0000          MOV      r0,#0
                  |L1.2822|
000b06  4605              MOV      r5,r0
;;;865        if (pItem->Flags & MENU_IF_DISABLED) {
000b08  88b0              LDRH     r0,[r6,#4]
000b0a  f0100f01          TST      r0,#1
000b0e  d009              BEQ      |L1.2852|
;;;866          if (pObj->Flags & MENU_CF_HIDE_DISABLED_SEL) {
000b10  f8b4005e          LDRH     r0,[r4,#0x5e]
000b14  f0100f08          TST      r0,#8
000b18  d002              BEQ      |L1.2848|
;;;867            ColorIndex = MENU_CI_DISABLED;
000b1a  f04f0502          MOV      r5,#2
000b1e  e001              B        |L1.2852|
                  |L1.2848|
;;;868          } else {
;;;869            ColorIndex += MENU_CI_DISABLED;
000b20  f1050502          ADD      r5,r5,#2
                  |L1.2852|
;;;870          }
;;;871        }
;;;872      }
;;;873      GUI_SetBkColor(pObj->Props.aBkColor[ColorIndex]);
000b24  f104013c          ADD      r1,r4,#0x3c
000b28  f8510025          LDR      r0,[r1,r5,LSL #2]
000b2c  f7fffffe          BL       GUI_SetBkColor
;;;874      GUI_SetColor(pObj->Props.aTextColor[ColorIndex]);
000b30  f1040128          ADD      r1,r4,#0x28
000b34  f8510025          LDR      r0,[r1,r5,LSL #2]
000b38  f7fffffe          BL       GUI_SetColor
;;;875    }
000b3c  e8bd81f0          POP      {r4-r8,pc}
;;;876    
                          ENDP

                  _OnPaint PROC
;;;880    */
;;;881    static void _OnPaint(MENU_Handle hObj, MENU_Obj* pObj) {
000b40  e92d4ff3          PUSH     {r0,r1,r4-r11,lr}
000b44  b089              SUB      sp,sp,#0x24
000b46  460c              MOV      r4,r1
;;;882      GUI_RECT FillRect, TextRect;
;;;883      MENU_ITEM* pItem;
;;;884      unsigned TextWidth, NumItems, i;
;;;885      U8 BorderLeft   = pObj->Props.aBorder[MENU_BI_LEFT];
000b48  f8949050          LDRB     r9,[r4,#0x50]
;;;886      U8 BorderTop    = pObj->Props.aBorder[MENU_BI_TOP];
000b4c  f894a052          LDRB     r10,[r4,#0x52]
;;;887      int FontHeight  = GUI_GetYDistOfFont(pObj->Props.pFont);
000b50  6d60              LDR      r0,[r4,#0x54]
000b52  f7fffffe          BL       GUI_GetYDistOfFont
000b56  9003              STR      r0,[sp,#0xc]
;;;888      int EffectSize  = _GetEffectSize(hObj, pObj);
000b58  4621              MOV      r1,r4
000b5a  9809              LDR      r0,[sp,#0x24]
000b5c  f7fffffe          BL       _GetEffectSize
000b60  4607              MOV      r7,r0
;;;889      NumItems = MENU__GetNumItems(pObj);
000b62  4620              MOV      r0,r4
000b64  f7fffffe          BL       MENU__GetNumItems
000b68  9004              STR      r0,[sp,#0x10]
;;;890      WM__GetClientRectWin(&pObj->Widget.Win, &FillRect);
000b6a  a907              ADD      r1,sp,#0x1c
000b6c  4620              MOV      r0,r4
000b6e  f7fffffe          BL       WM__GetClientRectWin
;;;891      GUI__ReduceRect(&FillRect, &FillRect, EffectSize);
000b72  463a              MOV      r2,r7
000b74  a907              ADD      r1,sp,#0x1c
000b76  a807              ADD      r0,sp,#0x1c
000b78  f7fffffe          BL       GUI__ReduceRect
;;;892      GUI_SetFont(pObj->Props.pFont);
000b7c  6d60              LDR      r0,[r4,#0x54]
000b7e  f7fffffe          BL       GUI_SetFont
;;;893      if (pObj->Flags & MENU_SF_VERTICAL) {
000b82  f8b4005e          LDRH     r0,[r4,#0x5e]
000b86  f0100f01          TST      r0,#1
000b8a  d072              BEQ      |L1.3186|
;;;894        int ItemHeight, xSize;
;;;895        xSize = _CalcMenuSizeX(hObj, pObj);
000b8c  4621              MOV      r1,r4
000b8e  9809              LDR      r0,[sp,#0x24]
000b90  f7fffffe          BL       _CalcMenuSizeX
000b94  9002              STR      r0,[sp,#8]
;;;896        FillRect.x1 = xSize - EffectSize - 1;
000b96  9802              LDR      r0,[sp,#8]
000b98  eba00007          SUB      r0,r0,r7
000b9c  f1a00001          SUB      r0,r0,#1
000ba0  b200              SXTH     r0,r0
000ba2  f8ad0020          STRH     r0,[sp,#0x20]
;;;897        TextRect.x0 = FillRect.x0 + BorderLeft;
000ba6  f8bd001c          LDRH     r0,[sp,#0x1c]
000baa  4448              ADD      r0,r0,r9
000bac  b200              SXTH     r0,r0
000bae  f8ad0014          STRH     r0,[sp,#0x14]
;;;898        for (i = 0; i < NumItems; i++) {
000bb2  f04f0600          MOV      r6,#0
000bb6  e057              B        |L1.3176|
                  |L1.3000|
;;;899          pItem = (MENU_ITEM*)GUI_ARRAY_GetpItem(&pObj->ItemArray, i);
000bb8  4631              MOV      r1,r6
000bba  f1040058          ADD      r0,r4,#0x58
000bbe  f7fffffe          BL       GUI_ARRAY_GetpItem
000bc2  4605              MOV      r5,r0
;;;900          ItemHeight = _GetItemHeight(hObj, pObj, i);
000bc4  4632              MOV      r2,r6
000bc6  4621              MOV      r1,r4
000bc8  9809              LDR      r0,[sp,#0x24]
000bca  f7fffffe          BL       _GetItemHeight
000bce  4683              MOV      r11,r0
;;;901          _SetPaintColors(pObj, pItem, i);
000bd0  4632              MOV      r2,r6
000bd2  4629              MOV      r1,r5
000bd4  4620              MOV      r0,r4
000bd6  f7fffffe          BL       _SetPaintColors
;;;902          FillRect.y1 = FillRect.y0 + ItemHeight - 1;
000bda  f8bd001e          LDRH     r0,[sp,#0x1e]
000bde  4458              ADD      r0,r0,r11
000be0  f1a00001          SUB      r0,r0,#1
000be4  b200              SXTH     r0,r0
000be6  f8ad0022          STRH     r0,[sp,#0x22]
;;;903          if (pItem->Flags & MENU_IF_SEPARATOR) {
000bea  88a8              LDRH     r0,[r5,#4]
000bec  f0100f02          TST      r0,#2
000bf0  d012              BEQ      |L1.3096|
;;;904            GUI_ClearRectEx(&FillRect);
000bf2  a807              ADD      r0,sp,#0x1c
000bf4  f7fffffe          BL       GUI_ClearRectEx
;;;905            GUI_SetColor(0x7C7C7C);
000bf8  48fe              LDR      r0,|L1.4084|
000bfa  f7fffffe          BL       GUI_SetColor
;;;906            GUI_DrawHLine(FillRect.y0 + BorderTop + 1, FillRect.x0 + 2, FillRect.x1 - 2);
000bfe  f9bd3020          LDRSH    r3,[sp,#0x20]
000c02  1e9a              SUBS     r2,r3,#2
000c04  f9bd301c          LDRSH    r3,[sp,#0x1c]
000c08  1c99              ADDS     r1,r3,#2
000c0a  f9bd301e          LDRSH    r3,[sp,#0x1e]
000c0e  4453              ADD      r3,r3,r10
000c10  1c58              ADDS     r0,r3,#1
000c12  f7fffffe          BL       GUI_DrawHLine
000c16  e01f              B        |L1.3160|
                  |L1.3096|
;;;907          } else {
;;;908            TextWidth = pItem->TextWidth;
000c18  f8d58008          LDR      r8,[r5,#8]
;;;909            TextRect.x1 = TextRect.x0 + TextWidth - 1;
000c1c  f8bd0014          LDRH     r0,[sp,#0x14]
000c20  4440              ADD      r0,r0,r8
000c22  f1a00001          SUB      r0,r0,#1
000c26  b200              SXTH     r0,r0
000c28  f8ad0018          STRH     r0,[sp,#0x18]
;;;910            TextRect.y0 = FillRect.y0 + BorderTop;
000c2c  f8bd001e          LDRH     r0,[sp,#0x1e]
000c30  4450              ADD      r0,r0,r10
000c32  b200              SXTH     r0,r0
000c34  f8ad0016          STRH     r0,[sp,#0x16]
;;;911            TextRect.y1 = TextRect.y0 + FontHeight - 1;
000c38  f8bd1016          LDRH     r1,[sp,#0x16]
000c3c  9803              LDR      r0,[sp,#0xc]
000c3e  4408              ADD      r0,r0,r1
000c40  f1a00001          SUB      r0,r0,#1
000c44  b200              SXTH     r0,r0
000c46  f8ad001a          STRH     r0,[sp,#0x1a]
;;;912            WIDGET__FillStringInRect(pItem->acText, &FillRect, &TextRect, &TextRect);
000c4a  ab05              ADD      r3,sp,#0x14
000c4c  aa05              ADD      r2,sp,#0x14
000c4e  a907              ADD      r1,sp,#0x1c
000c50  f105000c          ADD      r0,r5,#0xc
000c54  f7fffffe          BL       WIDGET__FillStringInRect
                  |L1.3160|
;;;913          }
;;;914          FillRect.y0 += ItemHeight;
000c58  f8bd001e          LDRH     r0,[sp,#0x1e]
000c5c  4458              ADD      r0,r0,r11
000c5e  b200              SXTH     r0,r0
000c60  f8ad001e          STRH     r0,[sp,#0x1e]
000c64  f1060601          ADD      r6,r6,#1              ;898
                  |L1.3176|
000c68  9804              LDR      r0,[sp,#0x10]         ;898
000c6a  4286              CMP      r6,r0                 ;898
000c6c  d3a4              BCC      |L1.3000|
;;;915        }
;;;916      } else {
000c6e  e072              B        |L1.3414|
000c70  e7ff              B        |L1.3186|
                  |L1.3186|
;;;917        int ItemWidth, ySize;
;;;918        ySize = _CalcMenuSizeY(hObj, pObj);
000c72  4621              MOV      r1,r4
000c74  9809              LDR      r0,[sp,#0x24]
000c76  f7fffffe          BL       _CalcMenuSizeY
000c7a  9002              STR      r0,[sp,#8]
;;;919        FillRect.y1 = ySize - EffectSize - 1;
000c7c  9802              LDR      r0,[sp,#8]
000c7e  eba00007          SUB      r0,r0,r7
000c82  f1a00001          SUB      r0,r0,#1
000c86  b200              SXTH     r0,r0
000c88  f8ad0022          STRH     r0,[sp,#0x22]
;;;920        TextRect.y0 = FillRect.y0 + BorderTop;
000c8c  f8bd001e          LDRH     r0,[sp,#0x1e]
000c90  4450              ADD      r0,r0,r10
000c92  b200              SXTH     r0,r0
000c94  f8ad0016          STRH     r0,[sp,#0x16]
;;;921        TextRect.y1 = TextRect.y0 + FontHeight - 1;
000c98  f8bd1016          LDRH     r1,[sp,#0x16]
000c9c  9803              LDR      r0,[sp,#0xc]
000c9e  4408              ADD      r0,r0,r1
000ca0  f1a00001          SUB      r0,r0,#1
000ca4  b200              SXTH     r0,r0
000ca6  f8ad001a          STRH     r0,[sp,#0x1a]
;;;922        for (i = 0; i < NumItems; i++) {
000caa  f04f0600          MOV      r6,#0
000cae  e04e              B        |L1.3406|
                  |L1.3248|
;;;923          pItem = (MENU_ITEM*)GUI_ARRAY_GetpItem(&pObj->ItemArray, i);
000cb0  4631              MOV      r1,r6
000cb2  f1040058          ADD      r0,r4,#0x58
000cb6  f7fffffe          BL       GUI_ARRAY_GetpItem
000cba  4605              MOV      r5,r0
;;;924          ItemWidth = _GetItemWidth(hObj, pObj, i);
000cbc  4632              MOV      r2,r6
000cbe  4621              MOV      r1,r4
000cc0  9809              LDR      r0,[sp,#0x24]
000cc2  f7fffffe          BL       _GetItemWidth
000cc6  4683              MOV      r11,r0
;;;925          _SetPaintColors(pObj, pItem, i);
000cc8  4632              MOV      r2,r6
000cca  4629              MOV      r1,r5
000ccc  4620              MOV      r0,r4
000cce  f7fffffe          BL       _SetPaintColors
;;;926          FillRect.x1 = FillRect.x0 + ItemWidth - 1;
000cd2  f8bd001c          LDRH     r0,[sp,#0x1c]
000cd6  4458              ADD      r0,r0,r11
000cd8  f1a00001          SUB      r0,r0,#1
000cdc  b200              SXTH     r0,r0
000cde  f8ad0020          STRH     r0,[sp,#0x20]
;;;927          if (pItem->Flags & MENU_IF_SEPARATOR) {
000ce2  88a8              LDRH     r0,[r5,#4]
000ce4  f0100f02          TST      r0,#2
000ce8  d012              BEQ      |L1.3344|
;;;928            GUI_ClearRectEx(&FillRect);
000cea  a807              ADD      r0,sp,#0x1c
000cec  f7fffffe          BL       GUI_ClearRectEx
;;;929            GUI_SetColor(0x7C7C7C);
000cf0  48c0              LDR      r0,|L1.4084|
000cf2  f7fffffe          BL       GUI_SetColor
;;;930            GUI_DrawVLine(FillRect.x0 + BorderLeft + 1, FillRect.y0 + 2, FillRect.y1 - 2);
000cf6  f9bd3022          LDRSH    r3,[sp,#0x22]
000cfa  1e9a              SUBS     r2,r3,#2
000cfc  f9bd301e          LDRSH    r3,[sp,#0x1e]
000d00  1c99              ADDS     r1,r3,#2
000d02  f9bd301c          LDRSH    r3,[sp,#0x1c]
000d06  444b              ADD      r3,r3,r9
000d08  1c58              ADDS     r0,r3,#1
000d0a  f7fffffe          BL       GUI_DrawVLine
000d0e  e016              B        |L1.3390|
                  |L1.3344|
;;;931          } else {
;;;932            TextWidth = pItem->TextWidth;
000d10  f8d58008          LDR      r8,[r5,#8]
;;;933            TextRect.x0 = FillRect.x0 + BorderLeft;
000d14  f8bd001c          LDRH     r0,[sp,#0x1c]
000d18  4448              ADD      r0,r0,r9
000d1a  b200              SXTH     r0,r0
000d1c  f8ad0014          STRH     r0,[sp,#0x14]
;;;934            TextRect.x1 = TextRect.x0 + TextWidth - 1;
000d20  f8bd0014          LDRH     r0,[sp,#0x14]
000d24  4440              ADD      r0,r0,r8
000d26  f1a00001          SUB      r0,r0,#1
000d2a  b200              SXTH     r0,r0
000d2c  f8ad0018          STRH     r0,[sp,#0x18]
;;;935            WIDGET__FillStringInRect(pItem->acText, &FillRect, &TextRect, &TextRect);
000d30  ab05              ADD      r3,sp,#0x14
000d32  aa05              ADD      r2,sp,#0x14
000d34  a907              ADD      r1,sp,#0x1c
000d36  f105000c          ADD      r0,r5,#0xc
000d3a  f7fffffe          BL       WIDGET__FillStringInRect
                  |L1.3390|
;;;936          }
;;;937          FillRect.x0 += ItemWidth;
000d3e  f8bd001c          LDRH     r0,[sp,#0x1c]
000d42  4458              ADD      r0,r0,r11
000d44  b200              SXTH     r0,r0
000d46  f8ad001c          STRH     r0,[sp,#0x1c]
000d4a  f1060601          ADD      r6,r6,#1              ;922
                  |L1.3406|
000d4e  9804              LDR      r0,[sp,#0x10]         ;922
000d50  4286              CMP      r6,r0                 ;922
000d52  d3ad              BCC      |L1.3248|
;;;938        }
;;;939      }
000d54  bf00              NOP      
                  |L1.3414|
;;;940      if (pObj->Width || pObj->Height) {
000d56  6e60              LDR      r0,[r4,#0x64]
000d58  b908              CBNZ     r0,|L1.3422|
000d5a  6ea0              LDR      r0,[r4,#0x68]
000d5c  b300              CBZ      r0,|L1.3488|
                  |L1.3422|
;;;941        GUI_RECT r;
;;;942        WM__GetClientRectWin(&pObj->Widget.Win, &r);
000d5e  a901              ADD      r1,sp,#4
000d60  4620              MOV      r0,r4
000d62  f7fffffe          BL       WM__GetClientRectWin
;;;943        GUI__ReduceRect(&r, &r, EffectSize);
000d66  463a              MOV      r2,r7
000d68  a901              ADD      r1,sp,#4
000d6a  a801              ADD      r0,sp,#4
000d6c  f7fffffe          BL       GUI__ReduceRect
;;;944        GUI_SetBkColor(pObj->Props.aBkColor[MENU_CI_ENABLED]);
000d70  6be0              LDR      r0,[r4,#0x3c]
000d72  f7fffffe          BL       GUI_SetBkColor
;;;945        GUI_ClearRect(FillRect.x1 + 1, EffectSize, r.x1, FillRect.y1);
000d76  f9bd3022          LDRSH    r3,[sp,#0x22]
000d7a  f9bd2008          LDRSH    r2,[sp,#8]
000d7e  f9bd1020          LDRSH    r1,[sp,#0x20]
000d82  1c48              ADDS     r0,r1,#1
000d84  4639              MOV      r1,r7
000d86  f7fffffe          BL       GUI_ClearRect
;;;946        GUI_ClearRect(EffectSize, FillRect.y1 + 1, r.x1, r.y1);
000d8a  f9bd300a          LDRSH    r3,[sp,#0xa]
000d8e  f9bd2008          LDRSH    r2,[sp,#8]
000d92  f9bd0022          LDRSH    r0,[sp,#0x22]
000d96  1c41              ADDS     r1,r0,#1
000d98  4638              MOV      r0,r7
000d9a  f7fffffe          BL       GUI_ClearRect
;;;947      }
000d9e  bf00              NOP      
                  |L1.3488|
;;;948      /* Draw 3D effect (if configured) */
;;;949      if (_HasEffect(hObj, pObj)) {
000da0  4621              MOV      r1,r4
000da2  9809              LDR      r0,[sp,#0x24]
000da4  f7fffffe          BL       _HasEffect
000da8  b110              CBZ      r0,|L1.3504|
;;;950        pObj->Widget.pEffect->pfDrawUp();
000daa  6a21              LDR      r1,[r4,#0x20]
000dac  6808              LDR      r0,[r1,#0]
000dae  4780              BLX      r0
                  |L1.3504|
;;;951      }
;;;952    }
000db0  b00b              ADD      sp,sp,#0x2c
000db2  e8bd8ff0          POP      {r4-r11,pc}
;;;953    
                          ENDP

                  _MoveSel PROC
;;;962    */
;;;963    static void _MoveSel(MENU_Handle hObj, int Dir) {
000db6  e92d5ff0          PUSH     {r4-r12,lr}
000dba  4683              MOV      r11,r0
000dbc  4688              MOV      r8,r1
;;;964      MENU_Obj * pObj;
;;;965      int NewIndex, Index, NumItems, Cnt = 0;
000dbe  f04f0600          MOV      r6,#0
;;;966      pObj = (MENU_Obj*) GUI_ALLOC_h2p(hObj);
000dc2  4658              MOV      r0,r11
000dc4  f7fffffe          BL       GUI_ALLOC_h2p
000dc8  4605              MOV      r5,r0
;;;967      Index = pObj->Sel;
000dca  6eec              LDR      r4,[r5,#0x6c]
;;;968      NewIndex = -1;
000dcc  f04f39ff          MOV      r9,#0xffffffff
;;;969      NumItems = pObj->ItemArray.NumItems;
000dd0  f8b5a058          LDRH     r10,[r5,#0x58]
;;;970      do {
000dd4  bf00              NOP      
                  |L1.3542|
;;;971        MENU_ITEM * pItem;
;;;972        Index += Dir;
000dd6  4444              ADD      r4,r4,r8
;;;973        if (Index >= NumItems) {
000dd8  4554              CMP      r4,r10
000dda  db04              BLT      |L1.3558|
;;;974          Index = 0;
000ddc  f04f0400          MOV      r4,#0
;;;975          Cnt++;
000de0  f1060601          ADD      r6,r6,#1
000de4  e005              B        |L1.3570|
                  |L1.3558|
;;;976        } else if (Index < 0) {
000de6  2c00              CMP      r4,#0
000de8  da03              BGE      |L1.3570|
;;;977          Index = NumItems - 1;
000dea  f1aa0401          SUB      r4,r10,#1
;;;978          Cnt++;
000dee  f1060601          ADD      r6,r6,#1
                  |L1.3570|
;;;979        }
;;;980        pItem = (MENU_ITEM*)GUI_ARRAY_GetpItem(&pObj->ItemArray, Index);
000df2  4621              MOV      r1,r4
000df4  f1050058          ADD      r0,r5,#0x58
000df8  f7fffffe          BL       GUI_ARRAY_GetpItem
000dfc  4607              MOV      r7,r0
;;;981        if (!(pItem->Flags & MENU_IF_SEPARATOR)) {
000dfe  88b8              LDRH     r0,[r7,#4]
000e00  f0100f02          TST      r0,#2
000e04  d100              BNE      |L1.3592|
;;;982          NewIndex = Index;
000e06  46a1              MOV      r9,r4
                  |L1.3592|
;;;983        }
;;;984      } while ((NewIndex < 0) && (Cnt < 2));
000e08  f1b90f00          CMP      r9,#0
000e0c  da01              BGE      |L1.3602|
000e0e  2e02              CMP      r6,#2
000e10  dbe1              BLT      |L1.3542|
                  |L1.3602|
;;;985      if (NewIndex >= 0) {
000e12  f1b90f00          CMP      r9,#0
000e16  db04              BLT      |L1.3618|
;;;986        _SetSelection(hObj, pObj, Index);
000e18  4622              MOV      r2,r4
000e1a  4629              MOV      r1,r5
000e1c  4658              MOV      r0,r11
000e1e  f7fffffe          BL       _SetSelection
                  |L1.3618|
;;;987      }
;;;988    }
000e22  e8bd9ff0          POP      {r4-r12,pc}
;;;989    
                          ENDP

                  _OpenMenu PROC
;;;993    */
;;;994    static void _OpenMenu(MENU_Handle hObj, MENU_Obj * pObj, int Index, int SubSel) {
000e26  e92d47f0          PUSH     {r4-r10,lr}
000e2a  4681              MOV      r9,r0
000e2c  460c              MOV      r4,r1
000e2e  4690              MOV      r8,r2
000e30  461d              MOV      r5,r3
;;;995      MENU_ITEM * pItem;
;;;996      MENU_Obj  * pSubObj;
;;;997      pItem = (MENU_ITEM *)GUI_ARRAY_GetpItem(&pObj->ItemArray, Index);
000e32  4641              MOV      r1,r8
000e34  f1040058          ADD      r0,r4,#0x58
000e38  f7fffffe          BL       GUI_ARRAY_GetpItem
000e3c  4606              MOV      r6,r0
;;;998      pObj->Flags |= MENU_SF_ACTIVE;
000e3e  f8b4005e          LDRH     r0,[r4,#0x5e]
000e42  f0400040          ORR      r0,r0,#0x40
000e46  f8a4005e          STRH     r0,[r4,#0x5e]
;;;999      _OpenSubmenu(hObj, pObj, Index);
000e4a  4642              MOV      r2,r8
000e4c  4621              MOV      r1,r4
000e4e  4648              MOV      r0,r9
000e50  f7fffffe          BL       _OpenSubmenu
;;;1000     pSubObj = (MENU_Obj *) GUI_ALLOC_h2p(pItem->hSubmenu);
000e54  f9b60000          LDRSH    r0,[r6,#0]
000e58  f7fffffe          BL       GUI_ALLOC_h2p
000e5c  4607              MOV      r7,r0
;;;1001     if (SubSel >= pSubObj->ItemArray.NumItems) {
000e5e  f8b70058          LDRH     r0,[r7,#0x58]
000e62  42a8              CMP      r0,r5
000e64  dc03              BGT      |L1.3694|
;;;1002       SubSel = pSubObj->ItemArray.NumItems - 1;
000e66  f8b70058          LDRH     r0,[r7,#0x58]
000e6a  f1a00501          SUB      r5,r0,#1
                  |L1.3694|
;;;1003     }
;;;1004     _SetSelection(pItem->hSubmenu, pSubObj, SubSel);
000e6e  f9b60000          LDRSH    r0,[r6,#0]
000e72  462a              MOV      r2,r5
000e74  4639              MOV      r1,r7
000e76  f7fffffe          BL       _SetSelection
;;;1005     WM_SetFocus(pItem->hSubmenu);
000e7a  f9b60000          LDRSH    r0,[r6,#0]
000e7e  f7fffffe          BL       WM_SetFocus
;;;1006     _SetSelection(hObj, pObj, Index);
000e82  4642              MOV      r2,r8
000e84  4621              MOV      r1,r4
000e86  4648              MOV      r0,r9
000e88  f7fffffe          BL       _SetSelection
;;;1007   }
000e8c  e8bd87f0          POP      {r4-r10,pc}
;;;1008   
                          ENDP

                  _OnKey PROC
;;;1012   */
;;;1013   static int _OnKey(MENU_Handle hObj, MENU_Obj * pObj, int Key) {
000e90  e92d4ff0          PUSH     {r4-r11,lr}
000e94  b085              SUB      sp,sp,#0x14
000e96  4607              MOV      r7,r0
000e98  460d              MOV      r5,r1
000e9a  4614              MOV      r4,r2
;;;1014     int KeyOpen, KeyBack, KeyNext, KeyPrev, Index, SubSel = 0;
000e9c  f04f0000          MOV      r0,#0
000ea0  9003              STR      r0,[sp,#0xc]
;;;1015     MENU_ITEM * pItem;
;;;1016     MENU_Handle hObjTopLevel;
;;;1017     MENU_Obj * pObjTopLevel;
;;;1018     Index = pObj->Sel;
000ea2  6ee8              LDR      r0,[r5,#0x6c]
000ea4  9004              STR      r0,[sp,#0x10]
;;;1019     _GetTopLevelMenu(hObj, pObj, &hObjTopLevel, &pObjTopLevel, &SubSel);
000ea6  a803              ADD      r0,sp,#0xc
000ea8  ab01              ADD      r3,sp,#4
000eaa  aa02              ADD      r2,sp,#8
000eac  4629              MOV      r1,r5
000eae  9000              STR      r0,[sp,#0]
000eb0  4638              MOV      r0,r7
000eb2  f7fffffe          BL       _GetTopLevelMenu
;;;1020     if (Index < 0) {
000eb6  9804              LDR      r0,[sp,#0x10]
000eb8  2800              CMP      r0,#0
000eba  da0e              BGE      |L1.3802|
;;;1021       if (Key != GUI_KEY_ESCAPE) {
000ebc  2c1b              CMP      r4,#0x1b
000ebe  d008              BEQ      |L1.3794|
;;;1022         _SetSelection(hObj, pObj, 0);
000ec0  2200              MOVS     r2,#0
000ec2  4629              MOV      r1,r5
000ec4  4638              MOV      r0,r7
000ec6  f7fffffe          BL       _SetSelection
;;;1023         _SetCapture(hObj, pObj);
000eca  4629              MOV      r1,r5
000ecc  4638              MOV      r0,r7
000ece  f7fffffe          BL       _SetCapture
                  |L1.3794|
;;;1024       }
;;;1025       return 0;
000ed2  2000              MOVS     r0,#0
                  |L1.3796|
;;;1026     }
;;;1027     if (pObj->Flags & MENU_CF_VERTICAL) {
;;;1028       KeyOpen = GUI_KEY_RIGHT;
;;;1029       KeyBack = GUI_KEY_LEFT;
;;;1030       KeyNext = GUI_KEY_DOWN;
;;;1031       KeyPrev = GUI_KEY_UP;
;;;1032     } else {
;;;1033       KeyOpen = GUI_KEY_DOWN;
;;;1034       KeyBack = 0;
;;;1035       KeyNext = GUI_KEY_RIGHT;
;;;1036       KeyPrev = GUI_KEY_LEFT;
;;;1037     }
;;;1038     pItem = (MENU_ITEM *)GUI_ARRAY_GetpItem(&pObj->ItemArray, Index);
;;;1039     if (pItem->hSubmenu && ((Key == KeyOpen) || (Key == GUI_KEY_ENTER))) {
;;;1040       /*
;;;1041        *  If the current menu item is a submenu and <ENTER> or KeyOpen has been pressed, open the submenu
;;;1042        */
;;;1043       _OpenMenu(hObj, pObj, Index, 0);
;;;1044     } else if (!pItem->hSubmenu && (Key == GUI_KEY_ENTER)) {
;;;1045       /*
;;;1046        *  If the current menu item is not a submenu and <ENTER> has been pressed,
;;;1047        *  set the focus to the top level menu, close the submenus and send an MENU_ON_ITEMSELECT message to the owner
;;;1048        */
;;;1049       WM_SetFocus(hObjTopLevel);
;;;1050       _ActivateItem(hObj, pObj, Index);
;;;1051     } else if (((hObjTopLevel != hObj) && !(pObjTopLevel->Flags & MENU_CF_VERTICAL) && (Key == KeyOpen) && (!pItem->hSubmenu)) ||
;;;1052                ((hObjTopLevel != hObj) && !(pObjTopLevel->Flags & MENU_CF_VERTICAL) && (Key == KeyBack) && (hObjTopLevel == pObj->hOwner))) {
;;;1053       /*
;;;1054        *  If the current menu is not the top level menu and the top level menu is horizontal
;;;1055        *  and <GUI_KEY_RIGHT> or <GUI_KEY_LEFT> has been pressed close the current submenus,
;;;1056        *  move the selection of the top level menu to next/previous item and open it
;;;1057        */
;;;1058       pObj->Flags &= ~MENU_SF_ACTIVE;
;;;1059       /* Set focus to top level menu */
;;;1060       WM_SetFocus(hObjTopLevel);
;;;1061       /* Move selection of top level menu */
;;;1062       if (Key == KeyOpen) {
;;;1063         _MoveSel(hObjTopLevel, +1);
;;;1064       } else {
;;;1065         _MoveSel(hObjTopLevel, -1);
;;;1066       }
;;;1067       /* Open top level menu */
;;;1068       _OpenMenu(hObjTopLevel, pObjTopLevel, pObjTopLevel->Sel, (Key == KeyBack) ? SubSel : 0);
;;;1069     } else if ((hObjTopLevel != hObj) && 
;;;1070                ((Key == GUI_KEY_ESCAPE) || ((Key == KeyBack) && ((!(pObjTopLevel->Flags & MENU_CF_VERTICAL)) && (!pItem->hSubmenu) && (hObjTopLevel != pObj->hOwner)) || (pObjTopLevel->Flags & MENU_CF_VERTICAL)))) {
;;;1071       /*
;;;1072        *  If the current menu is not the top level menu and the top level menu is vertical and <GUI_KEY_LEFT> has been pressed
;;;1073        *  or the top level menu is vertical or horizontal and <GUI_KEY_ESCAPE> has been pressed,
;;;1074        *  close the current submenu
;;;1075        */
;;;1076       WM_SetFocus(pObj->hOwner);
;;;1077     } else if ((hObjTopLevel == hObj) && (Key == GUI_KEY_ESCAPE)) {
;;;1078       /*
;;;1079        *  If the current menu is the top level menu and <GUI_KEY_ESCAPE> has been pressed,
;;;1080        *  unselect the menu and release capture
;;;1081        */
;;;1082       _SetSelection(hObj, pObj, -1);
;;;1083       _ReleaseCapture(hObj, pObj);
;;;1084     } else if (Key == KeyNext) {
;;;1085       /*
;;;1086        *  If KeyNext has been pressed move the selection to the next menu item
;;;1087        */
;;;1088       _CloseSubmenu(hObj, pObj);
;;;1089       _MoveSel(hObj, +1);
;;;1090     } else if (Key == KeyPrev) {
;;;1091       /*
;;;1092        *  If KeyPrev has been pressed move the selection to the previous menu item
;;;1093        */
;;;1094       _CloseSubmenu(hObj, pObj);
;;;1095       _MoveSel(hObj, -1);
;;;1096     } else {
;;;1097       return 1;
;;;1098     }
;;;1099     return 0;
;;;1100   }
000ed4  b005              ADD      sp,sp,#0x14
000ed6  e8bd8ff0          POP      {r4-r11,pc}
                  |L1.3802|
000eda  f8b5005e          LDRH     r0,[r5,#0x5e]         ;1027
000ede  f0100f01          TST      r0,#1                 ;1027
000ee2  d008              BEQ      |L1.3830|
000ee4  f04f0812          MOV      r8,#0x12              ;1028
000ee8  f04f0910          MOV      r9,#0x10              ;1029
000eec  f04f0a13          MOV      r10,#0x13             ;1030
000ef0  f04f0b11          MOV      r11,#0x11             ;1031
000ef4  e007              B        |L1.3846|
                  |L1.3830|
000ef6  f04f0813          MOV      r8,#0x13              ;1033
000efa  f04f0900          MOV      r9,#0                 ;1034
000efe  f04f0a12          MOV      r10,#0x12             ;1035
000f02  f04f0b10          MOV      r11,#0x10             ;1036
                  |L1.3846|
000f06  f1050058          ADD      r0,r5,#0x58           ;1038
000f0a  9904              LDR      r1,[sp,#0x10]         ;1038
000f0c  f7fffffe          BL       GUI_ARRAY_GetpItem
000f10  4606              MOV      r6,r0                 ;1038
000f12  8830              LDRH     r0,[r6,#0]            ;1039
000f14  b150              CBZ      r0,|L1.3884|
000f16  4544              CMP      r4,r8                 ;1039
000f18  d001              BEQ      |L1.3870|
000f1a  2c0d              CMP      r4,#0xd               ;1039
000f1c  d106              BNE      |L1.3884|
                  |L1.3870|
000f1e  2300              MOVS     r3,#0                 ;1043
000f20  4629              MOV      r1,r5                 ;1043
000f22  4638              MOV      r0,r7                 ;1043
000f24  9a04              LDR      r2,[sp,#0x10]         ;1043
000f26  f7fffffe          BL       _OpenMenu
000f2a  e0a1              B        |L1.4208|
                  |L1.3884|
000f2c  8830              LDRH     r0,[r6,#0]            ;1044
000f2e  b958              CBNZ     r0,|L1.3912|
000f30  2c0d              CMP      r4,#0xd               ;1044
000f32  d109              BNE      |L1.3912|
000f34  f9bd0008          LDRSH    r0,[sp,#8]            ;1049
000f38  f7fffffe          BL       WM_SetFocus
000f3c  4629              MOV      r1,r5                 ;1050
000f3e  4638              MOV      r0,r7                 ;1050
000f40  9a04              LDR      r2,[sp,#0x10]         ;1050
000f42  f7fffffe          BL       _ActivateItem
000f46  e093              B        |L1.4208|
                  |L1.3912|
000f48  f9bd0008          LDRSH    r0,[sp,#8]            ;1051
000f4c  42b8              CMP      r0,r7                 ;1051
000f4e  d009              BEQ      |L1.3940|
000f50  9801              LDR      r0,[sp,#4]            ;1051
000f52  f8b0005e          LDRH     r0,[r0,#0x5e]         ;1051
000f56  f0100f01          TST      r0,#1                 ;1051
000f5a  d103              BNE      |L1.3940|
000f5c  4544              CMP      r4,r8                 ;1051
000f5e  d101              BNE      |L1.3940|
000f60  8830              LDRH     r0,[r6,#0]            ;1051
000f62  b188              CBZ      r0,|L1.3976|
                  |L1.3940|
000f64  f9bd0008          LDRSH    r0,[sp,#8]            ;1052
000f68  42b8              CMP      r0,r7                 ;1052
000f6a  d033              BEQ      |L1.4052|
000f6c  9801              LDR      r0,[sp,#4]            ;1052
000f6e  f8b0005e          LDRH     r0,[r0,#0x5e]         ;1052
000f72  f0100f01          TST      r0,#1                 ;1052
000f76  d12d              BNE      |L1.4052|
000f78  454c              CMP      r4,r9                 ;1052
000f7a  d12b              BNE      |L1.4052|
000f7c  f9b5005c          LDRSH    r0,[r5,#0x5c]         ;1052
000f80  f9bd1008          LDRSH    r1,[sp,#8]            ;1052
000f84  4288              CMP      r0,r1                 ;1052
000f86  d125              BNE      |L1.4052|
                  |L1.3976|
000f88  f8b5005e          LDRH     r0,[r5,#0x5e]         ;1058
000f8c  f0200040          BIC      r0,r0,#0x40           ;1058
000f90  f8a5005e          STRH     r0,[r5,#0x5e]         ;1058
000f94  f9bd0008          LDRSH    r0,[sp,#8]            ;1060
000f98  f7fffffe          BL       WM_SetFocus
000f9c  4544              CMP      r4,r8                 ;1062
000f9e  d105              BNE      |L1.4012|
000fa0  2101              MOVS     r1,#1                 ;1063
000fa2  f9bd0008          LDRSH    r0,[sp,#8]            ;1063
000fa6  f7fffffe          BL       _MoveSel
000faa  e005              B        |L1.4024|
                  |L1.4012|
000fac  f04f31ff          MOV      r1,#0xffffffff        ;1065
000fb0  f9bd0008          LDRSH    r0,[sp,#8]            ;1065
000fb4  f7fffffe          BL       _MoveSel
                  |L1.4024|
000fb8  454c              CMP      r4,r9                 ;1068
000fba  d101              BNE      |L1.4032|
000fbc  9803              LDR      r0,[sp,#0xc]          ;1068
000fbe  e000              B        |L1.4034|
                  |L1.4032|
000fc0  2000              MOVS     r0,#0                 ;1068
                  |L1.4034|
000fc2  4603              MOV      r3,r0                 ;1068
000fc4  9801              LDR      r0,[sp,#4]            ;1068
000fc6  4601              MOV      r1,r0                 ;1068
000fc8  6ec2              LDR      r2,[r0,#0x6c]         ;1068
000fca  f9bd0008          LDRSH    r0,[sp,#8]            ;1068
000fce  f7fffffe          BL       _OpenMenu
000fd2  e04d              B        |L1.4208|
                  |L1.4052|
000fd4  f9bd0008          LDRSH    r0,[sp,#8]            ;1069
000fd8  42b8              CMP      r0,r7                 ;1069
000fda  d01f              BEQ      |L1.4124|
000fdc  2c1b              CMP      r4,#0x1b              ;1070
000fde  d018              BEQ      |L1.4114|
000fe0  454c              CMP      r4,r9                 ;1070
000fe2  d110              BNE      |L1.4102|
000fe4  9801              LDR      r0,[sp,#4]            ;1070
000fe6  f8b0005e          LDRH     r0,[r0,#0x5e]         ;1070
000fea  f0100f01          TST      r0,#1                 ;1070
000fee  d10a              BNE      |L1.4102|
000ff0  8830              LDRH     r0,[r6,#0]            ;1070
000ff2  e001              B        |L1.4088|
                  |L1.4084|
                          DCD      0x007c7c7c
                  |L1.4088|
000ff8  b928              CBNZ     r0,|L1.4102|
000ffa  f9b5005c          LDRSH    r0,[r5,#0x5c]         ;1070
000ffe  f9bd1008          LDRSH    r1,[sp,#8]            ;1070
001002  4288              CMP      r0,r1                 ;1070
001004  d105              BNE      |L1.4114|
                  |L1.4102|
001006  9801              LDR      r0,[sp,#4]            ;1070
001008  f8b0005e          LDRH     r0,[r0,#0x5e]         ;1070
00100c  f0100f01          TST      r0,#1                 ;1070
001010  d004              BEQ      |L1.4124|
                  |L1.4114|
001012  f9b5005c          LDRSH    r0,[r5,#0x5c]         ;1076
001016  f7fffffe          BL       WM_SetFocus
00101a  e029              B        |L1.4208|
                  |L1.4124|
00101c  f9bd0008          LDRSH    r0,[sp,#8]            ;1077
001020  42b8              CMP      r0,r7                 ;1077
001022  d10c              BNE      |L1.4158|
001024  2c1b              CMP      r4,#0x1b              ;1077
001026  d10a              BNE      |L1.4158|
001028  f04f32ff          MOV      r2,#0xffffffff        ;1082
00102c  4629              MOV      r1,r5                 ;1082
00102e  4638              MOV      r0,r7                 ;1082
001030  f7fffffe          BL       _SetSelection
001034  4629              MOV      r1,r5                 ;1083
001036  4638              MOV      r0,r7                 ;1083
001038  f7fffffe          BL       _ReleaseCapture
00103c  e018              B        |L1.4208|
                  |L1.4158|
00103e  4554              CMP      r4,r10                ;1084
001040  d108              BNE      |L1.4180|
001042  4629              MOV      r1,r5                 ;1088
001044  4638              MOV      r0,r7                 ;1088
001046  f7fffffe          BL       _CloseSubmenu
00104a  2101              MOVS     r1,#1                 ;1089
00104c  4638              MOV      r0,r7                 ;1089
00104e  f7fffffe          BL       _MoveSel
001052  e00d              B        |L1.4208|
                  |L1.4180|
001054  455c              CMP      r4,r11                ;1090
001056  d109              BNE      |L1.4204|
001058  4629              MOV      r1,r5                 ;1094
00105a  4638              MOV      r0,r7                 ;1094
00105c  f7fffffe          BL       _CloseSubmenu
001060  f04f31ff          MOV      r1,#0xffffffff        ;1095
001064  4638              MOV      r0,r7                 ;1095
001066  f7fffffe          BL       _MoveSel
00106a  e001              B        |L1.4208|
                  |L1.4204|
00106c  2001              MOVS     r0,#1                 ;1097
00106e  e731              B        |L1.3796|
                  |L1.4208|
001070  2000              MOVS     r0,#0                 ;1099
001072  e72f              B        |L1.3796|
;;;1101   
                          ENDP

                  MENU_Callback PROC
;;;1134   */
;;;1135   void MENU_Callback(WM_MESSAGE* pMsg) {
001074  e92d47f0          PUSH     {r4-r10,lr}
001078  4604              MOV      r4,r0
;;;1136     MENU_Handle hObj;
;;;1137     MENU_Obj* pObj;
;;;1138     int OldWidgetState, Result, HasFocus;
;;;1139     hObj = pMsg->hWin;
00107a  f9b47004          LDRSH    r7,[r4,#4]
;;;1140     pObj = (MENU_Obj*) GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
00107e  4638              MOV      r0,r7
001080  f7fffffe          BL       GUI_ALLOC_h2p
001084  4605              MOV      r5,r0
;;;1141     OldWidgetState = pObj->Widget.State;
001086  f8b58026          LDRH     r8,[r5,#0x26]
;;;1142     Result = 1;
00108a  f04f0901          MOV      r9,#1
;;;1143     if (pMsg->MsgId != WM_PID_STATE_CHANGED) {
00108e  6820              LDR      r0,[r4,#0]
001090  2811              CMP      r0,#0x11
001092  d004              BEQ      |L1.4254|
;;;1144       /* Let widget handle the standard messages */
;;;1145       Result = WIDGET_HandleActive(hObj, pMsg);
001094  4621              MOV      r1,r4
001096  4638              MOV      r0,r7
001098  f7fffffe          BL       WIDGET_HandleActive
00109c  4681              MOV      r9,r0
                  |L1.4254|
;;;1146     }
;;;1147     HasFocus = pObj->Widget.State & WIDGET_STATE_FOCUS;
00109e  8ce8              LDRH     r0,[r5,#0x26]
0010a0  f0000601          AND      r6,r0,#1
;;;1148     /* React on focus change */
;;;1149     if ((OldWidgetState & WIDGET_STATE_FOCUS) != HasFocus) {
0010a4  f0080001          AND      r0,r8,#1
0010a8  42b0              CMP      r0,r6
0010aa  d021              BEQ      |L1.4336|
;;;1150       if (HasFocus) {
0010ac  b1b6              CBZ      r6,|L1.4316|
;;;1151         _CloseSubmenu(hObj, pObj);
0010ae  4629              MOV      r1,r5
0010b0  4638              MOV      r0,r7
0010b2  f7fffffe          BL       _CloseSubmenu
;;;1152         pObj->Flags &= ~MENU_SF_ACTIVE;
0010b6  f8b5005e          LDRH     r0,[r5,#0x5e]
0010ba  f0200040          BIC      r0,r0,#0x40
0010be  f8a5005e          STRH     r0,[r5,#0x5e]
;;;1153         if (pObj->Sel <= 0) {
0010c2  6ee8              LDR      r0,[r5,#0x6c]
0010c4  2800              CMP      r0,#0
0010c6  dc13              BGT      |L1.4336|
;;;1154           _SetSelection(hObj, pObj, 0);
0010c8  2200              MOVS     r2,#0
0010ca  4629              MOV      r1,r5
0010cc  4638              MOV      r0,r7
0010ce  f7fffffe          BL       _SetSelection
;;;1155           _SetCapture(hObj, pObj);
0010d2  4629              MOV      r1,r5
0010d4  4638              MOV      r0,r7
0010d6  f7fffffe          BL       _SetCapture
0010da  e009              B        |L1.4336|
                  |L1.4316|
;;;1156         }
;;;1157       } else {
;;;1158         _SetSelection(hObj, pObj, -1);
0010dc  f04f32ff          MOV      r2,#0xffffffff
0010e0  4629              MOV      r1,r5
0010e2  4638              MOV      r0,r7
0010e4  f7fffffe          BL       _SetSelection
;;;1159         _ReleaseCapture(hObj, pObj);
0010e8  4629              MOV      r1,r5
0010ea  4638              MOV      r0,r7
0010ec  f7fffffe          BL       _ReleaseCapture
                  |L1.4336|
;;;1160       }
;;;1161     }
;;;1162     /* Return if message already has been processed */
;;;1163     if (!Result) {
0010f0  f1b90f00          CMP      r9,#0
0010f4  d101              BNE      |L1.4346|
                  |L1.4342|
;;;1164       return;
;;;1165     }
;;;1166     switch (pMsg->MsgId) {
;;;1167     case WM_MENU:
;;;1168       _OnMenu(hObj, pObj, pMsg);
;;;1169       return;     /* Message handled, do not call WM_DefaultProc() here. */
;;;1170     case WM_TOUCH:
;;;1171       if (_OnTouch(hObj, pObj, pMsg)) {
;;;1172         _ForwardPIDMsgToOwner(hObj, pObj, pMsg);
;;;1173       }
;;;1174       break;
;;;1175   #if (GUI_SUPPORT_MOUSE)
;;;1176     case WM_MOUSEOVER:
;;;1177       if (_OnMouseOver(hObj, pObj, pMsg)) {
;;;1178         _ForwardPIDMsgToOwner(hObj, pObj, pMsg);
;;;1179       }
;;;1180       break;
;;;1181   #endif
;;;1182     case WM_KEY:
;;;1183       if (((const WM_KEY_INFO*)(pMsg->Data.p))->PressedCnt > 0) {
;;;1184         if (!_OnKey(hObj, pObj, ((const WM_KEY_INFO*)(pMsg->Data.p))->Key)) {
;;;1185           return;
;;;1186         }
;;;1187       }
;;;1188       break;
;;;1189     case WM_PAINT:
;;;1190       _OnPaint(hObj, pObj);
;;;1191       break;
;;;1192     case WM_DELETE:
;;;1193       GUI_ARRAY_Delete(&pObj->ItemArray);
;;;1194       break;      /* No return here ... WM_DefaultProc needs to be called */
;;;1195     }
;;;1196     WM_DefaultProc(pMsg);
;;;1197   }
0010f6  e8bd87f0          POP      {r4-r10,pc}
                  |L1.4346|
0010fa  6820              LDR      r0,[r4,#0]            ;1166
0010fc  280e              CMP      r0,#0xe               ;1166
0010fe  d01b              BEQ      |L1.4408|
001100  dc04              BGT      |L1.4364|
001102  280b              CMP      r0,#0xb               ;1166
001104  d02a              BEQ      |L1.4444|
001106  280c              CMP      r0,#0xc               ;1166
001108  d12d              BNE      |L1.4454|
00110a  e009              B        |L1.4384|
                  |L1.4364|
00110c  280f              CMP      r0,#0xf               ;1166
00110e  d020              BEQ      |L1.4434|
001110  282c              CMP      r0,#0x2c              ;1166
001112  d128              BNE      |L1.4454|
001114  4622              MOV      r2,r4                 ;1168
001116  4629              MOV      r1,r5                 ;1168
001118  4638              MOV      r0,r7                 ;1168
00111a  f7fffffe          BL       _OnMenu
00111e  e7ea              B        |L1.4342|
                  |L1.4384|
001120  4622              MOV      r2,r4                 ;1171
001122  4629              MOV      r1,r5                 ;1171
001124  4638              MOV      r0,r7                 ;1171
001126  f7fffffe          BL       _OnTouch
00112a  b120              CBZ      r0,|L1.4406|
00112c  4622              MOV      r2,r4                 ;1172
00112e  4629              MOV      r1,r5                 ;1172
001130  4638              MOV      r0,r7                 ;1172
001132  f7fffffe          BL       _ForwardPIDMsgToOwner
                  |L1.4406|
001136  e016              B        |L1.4454|
                  |L1.4408|
001138  68a0              LDR      r0,[r4,#8]            ;1183
00113a  6840              LDR      r0,[r0,#4]            ;1183
00113c  2800              CMP      r0,#0                 ;1183
00113e  dd07              BLE      |L1.4432|
001140  68a0              LDR      r0,[r4,#8]            ;1184
001142  4629              MOV      r1,r5                 ;1184
001144  6802              LDR      r2,[r0,#0]            ;1184
001146  4638              MOV      r0,r7                 ;1184
001148  f7fffffe          BL       _OnKey
00114c  b900              CBNZ     r0,|L1.4432|
00114e  e7d2              B        |L1.4342|
                  |L1.4432|
001150  e009              B        |L1.4454|
                  |L1.4434|
001152  4629              MOV      r1,r5                 ;1190
001154  4638              MOV      r0,r7                 ;1190
001156  f7fffffe          BL       _OnPaint
00115a  e004              B        |L1.4454|
                  |L1.4444|
00115c  f1050058          ADD      r0,r5,#0x58           ;1193
001160  f7fffffe          BL       GUI_ARRAY_Delete
001164  bf00              NOP                            ;1194
                  |L1.4454|
001166  bf00              NOP                            ;1174
001168  4620              MOV      r0,r4                 ;1196
00116a  f7fffffe          BL       WM_DefaultProc
00116e  bf00              NOP      
001170  e7c1              B        |L1.4342|
;;;1198   
                          ENDP

                  MENU_CreateEx PROC
;;;1208   */
;;;1209   MENU_Handle MENU_CreateEx(int x0, int y0, int xSize, int ySize, WM_HWIN hParent, int WinFlags, int ExFlags, int Id) {
001172  e92d5fff          PUSH     {r0-r12,lr}
001176  4681              MOV      r9,r0
001178  468a              MOV      r10,r1
00117a  4616              MOV      r6,r2
00117c  461f              MOV      r7,r3
00117e  f8ddb038          LDR      r11,[sp,#0x38]
001182  9d10              LDR      r5,[sp,#0x40]
;;;1210     MENU_Handle hObj;
;;;1211     /* Create the window */
;;;1212     WM_LOCK();
;;;1213     hObj = WM_CreateWindowAsChild(x0, y0, xSize, ySize, hParent, WM_CF_SHOW | WM_CF_STAYONTOP | WinFlags, &MENU_Callback,
001184  f04f0150          MOV      r1,#0x50
001188  f2af1217          ADR      r2,MENU_Callback + 1
00118c  980f              LDR      r0,[sp,#0x3c]
00118e  b280              UXTH     r0,r0
001190  f040000a          ORR      r0,r0,#0xa
001194  463b              MOV      r3,r7
001196  e9cdb000          STRD     r11,r0,[sp,#0]
00119a  e9cd2102          STRD     r2,r1,[sp,#8]
00119e  4632              MOV      r2,r6
0011a0  4651              MOV      r1,r10
0011a2  4648              MOV      r0,r9
0011a4  f7fffffe          BL       WM_CreateWindowAsChild
0011a8  4680              MOV      r8,r0
;;;1214                                   sizeof(MENU_Obj) - sizeof(WM_Obj));
;;;1215     if (hObj) {
0011aa  f1b80f00          CMP      r8,#0
0011ae  d036              BEQ      |L1.4638|
;;;1216       MENU_Obj* pObj;
;;;1217       pObj = (MENU_Obj*)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
0011b0  4640              MOV      r0,r8
0011b2  f7fffffe          BL       GUI_ALLOC_h2p
0011b6  4604              MOV      r4,r0
;;;1218        /* Init sub-classes */
;;;1219       GUI_ARRAY_CREATE(&pObj->ItemArray);
;;;1220       /* init widget specific variables */
;;;1221       WIDGET__Init(&pObj->Widget, Id, WIDGET_STATE_FOCUSSABLE);
0011b8  f04f0210          MOV      r2,#0x10
0011bc  4620              MOV      r0,r4
0011be  9911              LDR      r1,[sp,#0x44]
0011c0  f7fffffe          BL       WIDGET__Init
;;;1222       /* init member variables */
;;;1223       MENU_INIT_ID(pObj);
;;;1224       if (ExFlags & MENU_SF_OPEN_ON_POINTEROVER) {
0011c4  f0150f02          TST      r5,#2
0011c8  d002              BEQ      |L1.4560|
;;;1225         ExFlags |= MENU_SF_ACTIVE;
0011ca  f0450540          ORR      r5,r5,#0x40
0011ce  e001              B        |L1.4564|
                  |L1.4560|
;;;1226       } else {
;;;1227         ExFlags &= ~(MENU_SF_ACTIVE);
0011d0  f0250540          BIC      r5,r5,#0x40
                  |L1.4564|
;;;1228       }
;;;1229       pObj->Props           = MENU__DefaultProps;
0011d4  2230              MOVS     r2,#0x30
0011d6  496c              LDR      r1,|L1.5000|
0011d8  f1040028          ADD      r0,r4,#0x28
0011dc  f7fffffe          BL       __aeabi_memcpy4
;;;1230       pObj->Flags           = ExFlags;
0011e0  f8a4505e          STRH     r5,[r4,#0x5e]
;;;1231       pObj->Width           = ((xSize > 0) ? xSize : 0);
0011e4  2e00              CMP      r6,#0
0011e6  dd01              BLE      |L1.4588|
0011e8  4630              MOV      r0,r6
0011ea  e001              B        |L1.4592|
                  |L1.4588|
0011ec  f04f0000          MOV      r0,#0
                  |L1.4592|
0011f0  6660              STR      r0,[r4,#0x64]
;;;1232       pObj->Height          = ((ySize > 0) ? ySize : 0);
0011f2  2f00              CMP      r7,#0
0011f4  dd01              BLE      |L1.4602|
0011f6  4638              MOV      r0,r7
0011f8  e001              B        |L1.4606|
                  |L1.4602|
0011fa  f04f0000          MOV      r0,#0
                  |L1.4606|
0011fe  66a0              STR      r0,[r4,#0x68]
;;;1233       pObj->Sel             = -1;
001200  f04f30ff          MOV      r0,#0xffffffff
001204  66e0              STR      r0,[r4,#0x6c]
;;;1234       pObj->hOwner          = 0;
001206  f04f0000          MOV      r0,#0
00120a  f8a4005c          STRH     r0,[r4,#0x5c]
;;;1235       pObj->IsSubmenuActive = 0;
00120e  f8840060          STRB     r0,[r4,#0x60]
;;;1236       WIDGET_SetEffect(hObj, MENU__pDefaultEffect);
001212  485e              LDR      r0,|L1.5004|
001214  6801              LDR      r1,[r0,#0]  ; MENU__pDefaultEffect
001216  4640              MOV      r0,r8
001218  f7fffffe          BL       WIDGET_SetEffect
;;;1237     } else {
00121c  bf00              NOP      
                  |L1.4638|
;;;1238       GUI_DEBUG_ERROROUT_IF(hObj==0, "MENU_CreateEx failed")
;;;1239     }
;;;1240     WM_UNLOCK();
;;;1241     return hObj;
00121e  4640              MOV      r0,r8
;;;1242   }
001220  b004              ADD      sp,sp,#0x10
001222  e8bd9ff0          POP      {r4-r12,pc}
;;;1243   
                          ENDP

                  MENU__RecalcTextWidthOfItems PROC
;;;1271   */
;;;1272   void MENU__RecalcTextWidthOfItems(MENU_Obj* pObj) {
001226  e92d41f0          PUSH     {r4-r8,lr}
00122a  4604              MOV      r4,r0
;;;1273     const GUI_FONT GUI_UNI_PTR* pOldFont;
;;;1274     MENU_ITEM* pItem;
;;;1275     unsigned i, NumItems;
;;;1276     NumItems = MENU__GetNumItems(pObj);
00122c  4620              MOV      r0,r4
00122e  f7fffffe          BL       MENU__GetNumItems
001232  4680              MOV      r8,r0
;;;1277     pOldFont  = GUI_SetFont(pObj->Props.pFont);
001234  6d60              LDR      r0,[r4,#0x54]
001236  f7fffffe          BL       GUI_SetFont
00123a  4607              MOV      r7,r0
;;;1278     for (i = 0; i < NumItems; i++) {
00123c  f04f0600          MOV      r6,#0
001240  e00c              B        |L1.4700|
                  |L1.4674|
;;;1279       pItem = (MENU_ITEM*)GUI_ARRAY_GetpItem(&pObj->ItemArray, i);
001242  4631              MOV      r1,r6
001244  f1040058          ADD      r0,r4,#0x58
001248  f7fffffe          BL       GUI_ARRAY_GetpItem
00124c  4605              MOV      r5,r0
;;;1280       pItem->TextWidth = GUI_GetStringDistX(pItem->acText);
00124e  f105000c          ADD      r0,r5,#0xc
001252  f7fffffe          BL       GUI_GetStringDistX
001256  60a8              STR      r0,[r5,#8]
001258  f1060601          ADD      r6,r6,#1              ;1278
                  |L1.4700|
00125c  4546              CMP      r6,r8                 ;1278
00125e  d3f0              BCC      |L1.4674|
;;;1281     }
;;;1282     GUI_SetFont(pOldFont);
001260  4638              MOV      r0,r7
001262  f7fffffe          BL       GUI_SetFont
;;;1283   }
001266  e8bd81f0          POP      {r4-r8,pc}
;;;1284   
                          ENDP

                  MENU__SetItem PROC
;;;1300   */
;;;1301   char MENU__SetItem(MENU_Handle hObj, MENU_Obj* pObj, unsigned Index, const MENU_ITEM_DATA* pItemData) {
00126a  e92d47ff          PUSH     {r0-r10,lr}
00126e  4607              MOV      r7,r0
001270  460d              MOV      r5,r1
001272  4690              MOV      r8,r2
001274  461c              MOV      r4,r3
;;;1302     MENU_ITEM Item = {0};
001276  f04f0000          MOV      r0,#0
00127a  9000              STR      r0,[sp,#0]
00127c  9001              STR      r0,[sp,#4]
00127e  9002              STR      r0,[sp,#8]
001280  9003              STR      r0,[sp,#0xc]
;;;1303     const char* pText;
;;;1304     pText = pItemData->pText;
001282  6826              LDR      r6,[r4,#0]
;;;1305     if (!pText) {
001284  b906              CBNZ     r6,|L1.4744|
;;;1306       pText = "";
001286  a642              ADR      r6,|L1.5008|
                  |L1.4744|
;;;1307     }
;;;1308     Item.Id        = pItemData->Id;
001288  88a0              LDRH     r0,[r4,#4]
00128a  f8ad0002          STRH     r0,[sp,#2]
;;;1309     Item.Flags     = pItemData->Flags;
00128e  88e0              LDRH     r0,[r4,#6]
001290  f8ad0004          STRH     r0,[sp,#4]
;;;1310     Item.hSubmenu  = pItemData->hSubmenu;
001294  8920              LDRH     r0,[r4,#8]
001296  f8ad0000          STRH     r0,[sp,#0]
;;;1311     Item.TextWidth = _CalcTextWidth(pObj, pText);
00129a  4631              MOV      r1,r6
00129c  4628              MOV      r0,r5
00129e  f7fffffe          BL       _CalcTextWidth
0012a2  9002              STR      r0,[sp,#8]
;;;1312     if (Item.Flags & MENU_IF_SEPARATOR) {
0012a4  f8bd0004          LDRH     r0,[sp,#4]
0012a8  f0100f02          TST      r0,#2
0012ac  d003              BEQ      |L1.4790|
;;;1313       Item.hSubmenu = 0;   /* Ensures that no separator is a submenu */
0012ae  f04f0000          MOV      r0,#0
0012b2  f8ad0000          STRH     r0,[sp,#0]
                  |L1.4790|
;;;1314     }
;;;1315     if (GUI_ARRAY_SetItem(&pObj->ItemArray, Index, &Item, sizeof(MENU_ITEM) + strlen(pText)) != 0) {
0012b6  4630              MOV      r0,r6
0012b8  f7fffffe          BL       strlen
0012bc  f1000910          ADD      r9,r0,#0x10
0012c0  464b              MOV      r3,r9
0012c2  466a              MOV      r2,sp
0012c4  4641              MOV      r1,r8
0012c6  f1050058          ADD      r0,r5,#0x58
0012ca  f7fffffe          BL       GUI_ARRAY_SetItem
0012ce  b1b8              CBZ      r0,|L1.4864|
;;;1316       MENU_ITEM* pItem = (MENU_ITEM*)GUI_ARRAY_GetpItem(&pObj->ItemArray, Index);
0012d0  4641              MOV      r1,r8
0012d2  f1050058          ADD      r0,r5,#0x58
0012d6  f7fffffe          BL       GUI_ARRAY_GetpItem
0012da  4681              MOV      r9,r0
;;;1317       strcpy(pItem->acText, pText);
0012dc  4631              MOV      r1,r6
0012de  f109000c          ADD      r0,r9,#0xc
0012e2  f7fffffe          BL       strcpy
;;;1318       MENU_SetOwner(Item.hSubmenu, hObj);
0012e6  f9bd0000          LDRSH    r0,[sp,#0]
0012ea  4639              MOV      r1,r7
0012ec  f7fffffe          BL       MENU_SetOwner
;;;1319       WM_DetachWindow(Item.hSubmenu);   /* Ensures all submenus are initially closed */
0012f0  f9bd0000          LDRSH    r0,[sp,#0]
0012f4  f7fffffe          BL       WM_DetachWindow
;;;1320       return 1;
0012f8  2001              MOVS     r0,#1
                  |L1.4858|
;;;1321     }
;;;1322     return 0;
;;;1323   }
0012fa  b004              ADD      sp,sp,#0x10
0012fc  e8bd87f0          POP      {r4-r10,pc}
                  |L1.4864|
001300  2000              MOVS     r0,#0                 ;1322
001302  e7fa              B        |L1.4858|
;;;1324   
                          ENDP

                  MENU__SetItemFlags PROC
;;;1328   */
;;;1329   void MENU__SetItemFlags(MENU_Obj* pObj, unsigned Index, U16 Mask, U16 Flags) {
001304  e92d41f0          PUSH     {r4-r8,lr}
001308  4605              MOV      r5,r0
00130a  4688              MOV      r8,r1
00130c  4616              MOV      r6,r2
00130e  461f              MOV      r7,r3
;;;1330     MENU_ITEM* pItem = (MENU_ITEM*)GUI_ARRAY_GetpItem(&pObj->ItemArray, Index);
001310  4641              MOV      r1,r8
001312  f1050058          ADD      r0,r5,#0x58
001316  f7fffffe          BL       GUI_ARRAY_GetpItem
00131a  4604              MOV      r4,r0
;;;1331     pItem->Flags &= ~Mask;
00131c  88a0              LDRH     r0,[r4,#4]
00131e  ea200006          BIC      r0,r0,r6
001322  80a0              STRH     r0,[r4,#4]
;;;1332     pItem->Flags |= Flags;
001324  88a0              LDRH     r0,[r4,#4]
001326  ea400007          ORR      r0,r0,r7
00132a  80a0              STRH     r0,[r4,#4]
;;;1333   }
00132c  e8bd81f0          POP      {r4-r8,pc}
;;;1334   
                          ENDP

                  MENU_AddItem PROC
;;;1366   */
;;;1367   void MENU_AddItem(MENU_Handle hObj, const MENU_ITEM_DATA* pItemData) {
001330  e92d41f0          PUSH     {r4-r8,lr}
001334  4606              MOV      r6,r0
001336  460d              MOV      r5,r1
;;;1368     if (hObj && pItemData) {
001338  b326              CBZ      r6,|L1.4996|
00133a  b31d              CBZ      r5,|L1.4996|
;;;1369       MENU_Obj* pObj;
;;;1370       WM_LOCK();
;;;1371       pObj = MENU_H2P(hObj);
00133c  4630              MOV      r0,r6
00133e  f7fffffe          BL       GUI_ALLOC_h2p
001342  4604              MOV      r4,r0
;;;1372       if (pObj) {
001344  b1ec              CBZ      r4,|L1.4994|
;;;1373         if (GUI_ARRAY_AddItem(&pObj->ItemArray, NULL, 0) == 0) {
001346  2200              MOVS     r2,#0
001348  4611              MOV      r1,r2
00134a  f1040058          ADD      r0,r4,#0x58
00134e  f7fffffe          BL       GUI_ARRAY_AddItem
001352  b9b0              CBNZ     r0,|L1.4994|
;;;1374           unsigned Index;
;;;1375           Index = MENU__GetNumItems(pObj) - 1;
001354  4620              MOV      r0,r4
001356  f7fffffe          BL       MENU__GetNumItems
00135a  f1a00701          SUB      r7,r0,#1
;;;1376           if (MENU__SetItem(hObj, pObj, Index, pItemData) == 0) {
00135e  462b              MOV      r3,r5
001360  463a              MOV      r2,r7
001362  4621              MOV      r1,r4
001364  4630              MOV      r0,r6
001366  f7fffffe          BL       MENU__SetItem
00136a  b928              CBNZ     r0,|L1.4984|
;;;1377             GUI_ARRAY_DeleteItem(&pObj->ItemArray, Index);
00136c  4639              MOV      r1,r7
00136e  f1040058          ADD      r0,r4,#0x58
001372  f7fffffe          BL       GUI_ARRAY_DeleteItem
001376  e003              B        |L1.4992|
                  |L1.4984|
;;;1378           } else {
;;;1379             MENU__ResizeMenu(hObj, pObj);
001378  4621              MOV      r1,r4
00137a  4630              MOV      r0,r6
00137c  f7fffffe          BL       MENU__ResizeMenu
                  |L1.4992|
;;;1380           }
;;;1381         }
001380  bf00              NOP      
                  |L1.4994|
;;;1382       }
;;;1383       WM_UNLOCK();
;;;1384     }
001382  bf00              NOP      
                  |L1.4996|
;;;1385   }
001384  e8bd81f0          POP      {r4-r8,pc}
;;;1386   
                          ENDP

                  |L1.5000|
                          DCD      MENU__DefaultProps
                  |L1.5004|
                          DCD      MENU__pDefaultEffect
                  |L1.5008|
001390  00                DCB      0
001391  00                DCB      0
001392  00                DCB      0
001393  00                DCB      0

                          AREA ||.data||, DATA, ALIGN=2

                  MENU__DefaultProps
                          DCD      0x00000000
                          DCD      0x00ffffff
                          DCD      0x007c7c7c
                          DCD      0x00d3d3d3
                          DCD      0x00ffffff
                          DCD      0x00d3d3d3
                          DCD      0x00980000
                          DCD      0x00d3d3d3
                          DCD      0x00980000
                          DCD      0x007c7c7c
000028  04040202          DCB      0x04,0x04,0x02,0x02
                          DCD      GUI_Font13_1
                  MENU__pDefaultEffect
                          DCD      WIDGET_Effect_3D1L

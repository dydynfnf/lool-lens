; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\slider.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\slider.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\slider.crf GUI\Widget\SLIDER.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _Paint PROC
;;;74     */
;;;75     static void _Paint(SLIDER_Obj* pObj, WM_HWIN hObj) {
000000  e92d4ff0          PUSH     {r4-r11,lr}
000004  b089              SUB      sp,sp,#0x24
000006  4604              MOV      r4,r0
000008  468a              MOV      r10,r1
;;;76       GUI_RECT r, rFocus, rSlider, rSlot;
;;;77       int x0, xsize, i, Range, NumTicks;
;;;78       WIDGET__GetClientRect(&pObj->Widget, &rFocus);
00000a  a905              ADD      r1,sp,#0x14
00000c  4620              MOV      r0,r4
00000e  f7fffffe          BL       WIDGET__GetClientRect
;;;79       GUI__ReduceRect(&r, &rFocus, 1);
000012  2201              MOVS     r2,#1
000014  a905              ADD      r1,sp,#0x14
000016  a807              ADD      r0,sp,#0x1c
000018  f7fffffe          BL       GUI__ReduceRect
;;;80       NumTicks = pObj->NumTicks;
00001c  6c65              LDR      r5,[r4,#0x44]
;;;81       xsize    = r.x1 - r.x0  + 1 - pObj->Width;
00001e  f9bd0020          LDRSH    r0,[sp,#0x20]
000022  f9bd101c          LDRSH    r1,[sp,#0x1c]
000026  eba00001          SUB      r0,r0,r1
00002a  f1000001          ADD      r0,r0,#1
00002e  f9b41048          LDRSH    r1,[r4,#0x48]
000032  eba00701          SUB      r7,r0,r1
;;;82       x0       = r.x0 + pObj->Width / 2;
000036  f9b40048          LDRSH    r0,[r4,#0x48]
00003a  eb0071d0          ADD      r1,r0,r0,LSR #31
00003e  f9bd201c          LDRSH    r2,[sp,#0x1c]
000042  eb020661          ADD      r6,r2,r1,ASR #1
;;;83       Range    = pObj->Max - pObj->Min;
000046  e9d4100d          LDRD     r1,r0,[r4,#0x34]
00004a  eba00901          SUB      r9,r0,r1
;;;84       if (Range == 0) {
00004e  f1b90f00          CMP      r9,#0
000052  d101              BNE      |L1.88|
;;;85         Range = 1;
000054  f04f0901          MOV      r9,#1
                  |L1.88|
;;;86       }
;;;87       /* Fill with parents background color */
;;;88       #if !SLIDER_SUPPORT_TRANSPARENCY   /* Not needed any more, since window is transparent*/
;;;89         if (pObj->Props.BkColor == GUI_INVALID_COLOR) {
;;;90           LCD_SetBkColor(WIDGET__GetBkColor(hObj));
;;;91         } else {
;;;92           LCD_SetBkColor(pObj->Props.BkColor);
;;;93         }
;;;94         GUI_Clear();
;;;95       #else
;;;96         if (!WM_GetHasTrans(hObj)) {
000058  4650              MOV      r0,r10
00005a  f7fffffe          BL       WM_GetHasTrans
00005e  b920              CBNZ     r0,|L1.106|
;;;97           LCD_SetBkColor(pObj->Props.BkColor);
000060  6aa0              LDR      r0,[r4,#0x28]
000062  f7fffffe          BL       LCD_SetBkColor
;;;98           GUI_Clear();
000066  f7fffffe          BL       GUI_Clear
                  |L1.106|
;;;99         }
;;;100      #endif
;;;101      /* Calculate Slider position */
;;;102      rSlider    = r;
00006a  e9dd0107          LDRD     r0,r1,[sp,#0x1c]
00006e  e9cd0103          STRD     r0,r1,[sp,#0xc]
;;;103      rSlider.y0 = 5;
000072  f04f0005          MOV      r0,#5
000076  f8ad000e          STRH     r0,[sp,#0xe]
;;;104      rSlider.x0 = x0 + (U32)xsize * (U32)(pObj->v - pObj->Min) / Range - pObj->Width / 2;
00007a  6b62              LDR      r2,[r4,#0x34]
00007c  6be1              LDR      r1,[r4,#0x3c]
00007e  eba10102          SUB      r1,r1,r2
000082  fb01f107          MUL      r1,r1,r7
000086  fbb1f1f9          UDIV     r1,r1,r9
00008a  4431              ADD      r1,r1,r6
00008c  f9b40048          LDRSH    r0,[r4,#0x48]
000090  eb0072d0          ADD      r2,r0,r0,LSR #31
000094  eba10162          SUB      r1,r1,r2,ASR #1
000098  b209              SXTH     r1,r1
00009a  f8ad100c          STRH     r1,[sp,#0xc]
;;;105      rSlider.x1 = rSlider.x0 + pObj->Width;
00009e  f8bd000c          LDRH     r0,[sp,#0xc]
0000a2  f8b41048          LDRH     r1,[r4,#0x48]
0000a6  4408              ADD      r0,r0,r1
0000a8  b200              SXTH     r0,r0
0000aa  f8ad0010          STRH     r0,[sp,#0x10]
;;;106      /* Calculate Slot position */
;;;107      rSlot.x0 = x0;
0000ae  b230              SXTH     r0,r6
0000b0  f8ad0004          STRH     r0,[sp,#4]
;;;108      rSlot.x1 = x0 + xsize;
0000b4  eb060007          ADD      r0,r6,r7
0000b8  b200              SXTH     r0,r0
0000ba  f8ad0008          STRH     r0,[sp,#8]
;;;109      rSlot.y0 = (rSlider.y0 + rSlider.y1) / 2 - 1;
0000be  f9bd100e          LDRSH    r1,[sp,#0xe]
0000c2  f9bd2012          LDRSH    r2,[sp,#0x12]
0000c6  eb010002          ADD      r0,r1,r2
0000ca  eb0071d0          ADD      r1,r0,r0,LSR #31
0000ce  ea4f0161          ASR      r1,r1,#1
0000d2  f1a10101          SUB      r1,r1,#1
0000d6  b209              SXTH     r1,r1
0000d8  f8ad1006          STRH     r1,[sp,#6]
;;;110      rSlot.y1 = rSlot.y0 + 3;
0000dc  f8bd0006          LDRH     r0,[sp,#6]
0000e0  f1000003          ADD      r0,r0,#3
0000e4  b200              SXTH     r0,r0
0000e6  f8ad000a          STRH     r0,[sp,#0xa]
;;;111      WIDGET__EFFECT_DrawDownRect(&pObj->Widget, &rSlot);        /* Draw slot */
0000ea  a901              ADD      r1,sp,#4
0000ec  4620              MOV      r0,r4
0000ee  f7fffffe          BL       WIDGET__EFFECT_DrawDownRect
;;;112      /* Draw the ticks */
;;;113      if (NumTicks < 0) {
0000f2  2d00              CMP      r5,#0
0000f4  da09              BGE      |L1.266|
;;;114        NumTicks = Range + 1;
0000f6  f1090501          ADD      r5,r9,#1
;;;115        if (NumTicks > (xsize / 5)) {
0000fa  f04f0005          MOV      r0,#5
0000fe  fb97f0f0          SDIV     r0,r7,r0
000102  42a8              CMP      r0,r5
000104  da01              BGE      |L1.266|
;;;116          NumTicks = 11;
000106  f04f050b          MOV      r5,#0xb
                  |L1.266|
;;;117        }
;;;118      }
;;;119      if (NumTicks > 1) {
00010a  2d01              CMP      r5,#1
00010c  dd19              BLE      |L1.322|
;;;120        LCD_SetColor(GUI_BLACK);
00010e  2000              MOVS     r0,#0
000110  f7fffffe          BL       LCD_SetColor
;;;121        for (i = 0; i < NumTicks; i++) {
000114  f04f0800          MOV      r8,#0
000118  e011              B        |L1.318|
                  |L1.282|
;;;122          int x = x0 + xsize * i / (NumTicks - 1);
00011a  fb07f008          MUL      r0,r7,r8
00011e  f1a50101          SUB      r1,r5,#1
000122  fb90f0f1          SDIV     r0,r0,r1
000126  eb000b06          ADD      r11,r0,r6
;;;123          WIDGET__DrawVLine(&pObj->Widget, x, 1, 3);
00012a  f04f0303          MOV      r3,#3
00012e  f04f0201          MOV      r2,#1
000132  4659              MOV      r1,r11
000134  4620              MOV      r0,r4
000136  f7fffffe          BL       WIDGET__DrawVLine
00013a  f1080801          ADD      r8,r8,#1              ;121
                  |L1.318|
00013e  45a8              CMP      r8,r5                 ;121
000140  dbeb              BLT      |L1.282|
                  |L1.322|
;;;124        }
;;;125      }
;;;126      /* Draw the slider itself */
;;;127      LCD_SetColor(pObj->Props.Color);
000142  6ae0              LDR      r0,[r4,#0x2c]
000144  f7fffffe          BL       LCD_SetColor
;;;128      WIDGET__FillRectEx(&pObj->Widget, &rSlider);
000148  a903              ADD      r1,sp,#0xc
00014a  4620              MOV      r0,r4
00014c  f7fffffe          BL       WIDGET__FillRectEx
;;;129      LCD_SetColor(GUI_BLACK);
000150  2000              MOVS     r0,#0
000152  f7fffffe          BL       LCD_SetColor
;;;130      WIDGET__EFFECT_DrawUpRect(&pObj->Widget, &rSlider);
000156  a903              ADD      r1,sp,#0xc
000158  4620              MOV      r0,r4
00015a  f7fffffe          BL       WIDGET__EFFECT_DrawUpRect
;;;131      /* Draw focus */
;;;132      if (pObj->Widget.State & WIDGET_STATE_FOCUS) {
00015e  8ce0              LDRH     r0,[r4,#0x26]
000160  f0100f01          TST      r0,#1
000164  d007              BEQ      |L1.374|
;;;133        LCD_SetColor(pObj->Props.FocusColor);
000166  6b20              LDR      r0,[r4,#0x30]
000168  f7fffffe          BL       LCD_SetColor
;;;134        WIDGET__DrawFocusRect(&pObj->Widget, &rFocus, 0);
00016c  2200              MOVS     r2,#0
00016e  a905              ADD      r1,sp,#0x14
000170  4620              MOV      r0,r4
000172  f7fffffe          BL       WIDGET__DrawFocusRect
                  |L1.374|
;;;135      }
;;;136    }
000176  b009              ADD      sp,sp,#0x24
000178  e8bd8ff0          POP      {r4-r11,pc}
;;;137    
                          ENDP

                  _SliderPressed PROC
;;;141    */
;;;142    static void _SliderPressed(SLIDER_Handle hObj, SLIDER_Obj* pObj) {
00017c  b570              PUSH     {r4-r6,lr}
00017e  4605              MOV      r5,r0
000180  460c              MOV      r4,r1
;;;143      WIDGET_OrState(hObj, SLIDER_STATE_PRESSED);
000182  f44f7180          MOV      r1,#0x100
000186  4628              MOV      r0,r5
000188  f7fffffe          BL       WIDGET_OrState
;;;144      if (pObj->Widget.Win.Status & WM_SF_ISVIS) {
00018c  8ba0              LDRH     r0,[r4,#0x1c]
00018e  f0100f02          TST      r0,#2
000192  d003              BEQ      |L1.412|
;;;145        WM_NotifyParent(hObj, WM_NOTIFICATION_CLICKED);
000194  2101              MOVS     r1,#1
000196  4628              MOV      r0,r5
000198  f7fffffe          BL       WM_NotifyParent
                  |L1.412|
;;;146      }
;;;147    }
00019c  bd70              POP      {r4-r6,pc}
;;;148    
                          ENDP

                  _SliderReleased PROC
;;;152    */
;;;153    static void _SliderReleased(SLIDER_Handle hObj, SLIDER_Obj* pObj) {
00019e  b570              PUSH     {r4-r6,lr}
0001a0  4605              MOV      r5,r0
0001a2  460c              MOV      r4,r1
;;;154      WIDGET_AndState(hObj, SLIDER_STATE_PRESSED);
0001a4  f44f7180          MOV      r1,#0x100
0001a8  4628              MOV      r0,r5
0001aa  f7fffffe          BL       WIDGET_AndState
;;;155      if (pObj->Widget.Win.Status & WM_SF_ISVIS) {
0001ae  8ba0              LDRH     r0,[r4,#0x1c]
0001b0  f0100f02          TST      r0,#2
0001b4  d003              BEQ      |L1.446|
;;;156        WM_NotifyParent(hObj, WM_NOTIFICATION_RELEASED);
0001b6  2102              MOVS     r1,#2
0001b8  4628              MOV      r0,r5
0001ba  f7fffffe          BL       WM_NotifyParent
                  |L1.446|
;;;157      }
;;;158    }
0001be  bd70              POP      {r4-r6,pc}
;;;159    
                          ENDP

                  SLIDER_SetValue PROC
;;;391    */
;;;392    void SLIDER_SetValue(SLIDER_Handle hObj, int v) {
0001c0  b570              PUSH     {r4-r6,lr}
0001c2  4606              MOV      r6,r0
0001c4  460d              MOV      r5,r1
;;;393      SLIDER_Obj* pObj;
;;;394      if (hObj) {
0001c6  b1b6              CBZ      r6,|L1.502|
;;;395        WM_LOCK();
;;;396        pObj = SLIDER_H2P(hObj);
0001c8  4630              MOV      r0,r6
0001ca  f7fffffe          BL       GUI_ALLOC_h2p
0001ce  4604              MOV      r4,r0
;;;397        /* Put in min/max range */
;;;398        if (v < pObj->Min) {
0001d0  6b60              LDR      r0,[r4,#0x34]
0001d2  42a8              CMP      r0,r5
0001d4  dd00              BLE      |L1.472|
;;;399          v = pObj->Min;
0001d6  6b65              LDR      r5,[r4,#0x34]
                  |L1.472|
;;;400        }
;;;401        if (v > pObj->Max) {
0001d8  6ba0              LDR      r0,[r4,#0x38]
0001da  42a8              CMP      r0,r5
0001dc  da00              BGE      |L1.480|
;;;402          v = pObj->Max;
0001de  6ba5              LDR      r5,[r4,#0x38]
                  |L1.480|
;;;403        }
;;;404        if (pObj->v != v) {
0001e0  6be0              LDR      r0,[r4,#0x3c]
0001e2  42a8              CMP      r0,r5
0001e4  d007              BEQ      |L1.502|
;;;405          pObj->v = v;
0001e6  63e5              STR      r5,[r4,#0x3c]
;;;406          WM_InvalidateWindow(hObj);
0001e8  4630              MOV      r0,r6
0001ea  f7fffffe          BL       WM_InvalidateWindow
;;;407          WM_NotifyParent(hObj, WM_NOTIFICATION_VALUE_CHANGED);
0001ee  2105              MOVS     r1,#5
0001f0  4630              MOV      r0,r6
0001f2  f7fffffe          BL       WM_NotifyParent
                  |L1.502|
;;;408        }
;;;409        WM_UNLOCK();
;;;410      }
;;;411    }
0001f6  bd70              POP      {r4-r6,pc}
;;;412    
                          ENDP

                  _OnTouch PROC
;;;163    */
;;;164    static void _OnTouch(SLIDER_Handle hObj, SLIDER_Obj* pObj, WM_MESSAGE*pMsg) {
0001f8  e92d4ff7          PUSH     {r0-r2,r4-r11,lr}
0001fc  460c              MOV      r4,r1
0001fe  4617              MOV      r7,r2
;;;165      const GUI_PID_STATE* pState = (const GUI_PID_STATE*)pMsg->Data.p;
000200  f8d78008          LDR      r8,[r7,#8]
;;;166      if (pMsg->Data.p) {  /* Something happened in our area (pressed or released) */
000204  68b8              LDR      r0,[r7,#8]
000206  2800              CMP      r0,#0
000208  d05f              BEQ      |L1.714|
;;;167        if (pState->Pressed) {
00020a  f8980008          LDRB     r0,[r8,#8]
00020e  2800              CMP      r0,#0
000210  d053              BEQ      |L1.698|
;;;168          int x0, xsize, x, Sel, Range;
;;;169          Range = (pObj->Max - pObj->Min);
000212  e9d4100d          LDRD     r1,r0,[r4,#0x34]
000216  eba00b01          SUB      r11,r0,r1
;;;170          x0    = 1 + pObj->Width / 2;  /* 1 pixel focus rectangle + width of actual slider */
00021a  f9b40048          LDRSH    r0,[r4,#0x48]
00021e  eb0071d0          ADD      r1,r0,r0,LSR #31
000222  ea4f0161          ASR      r1,r1,#1
000226  f1010a01          ADD      r10,r1,#1
;;;171          x     = (pObj->Widget.State & WIDGET_STATE_VERTICAL) ? pState->y : pState->x;
00022a  8ce0              LDRH     r0,[r4,#0x26]
00022c  f0100f08          TST      r0,#8
000230  d002              BEQ      |L1.568|
000232  f8d80004          LDR      r0,[r8,#4]
000236  e001              B        |L1.572|
                  |L1.568|
000238  f8d80000          LDR      r0,[r8,#0]
                  |L1.572|
00023c  4605              MOV      r5,r0
;;;172          x    -= x0;
00023e  eba5050a          SUB      r5,r5,r10
;;;173          xsize = WIDGET__GetWindowSizeX(hObj) - 2 * x0;
000242  9800              LDR      r0,[sp,#0]
000244  f7fffffe          BL       WIDGET__GetWindowSizeX
000248  f04f0102          MOV      r1,#2
00024c  fb01091a          MLS      r9,r1,r10,r0
;;;174          if (x <= 0) {
000250  2d00              CMP      r5,#0
000252  dc01              BGT      |L1.600|
;;;175            Sel = pObj->Min;
000254  6b66              LDR      r6,[r4,#0x34]
000256  e018              B        |L1.650|
                  |L1.600|
;;;176          } else if (x >= xsize) {
000258  454d              CMP      r5,r9
00025a  db01              BLT      |L1.608|
;;;177            Sel = pObj->Max;
00025c  6ba6              LDR      r6,[r4,#0x38]
00025e  e014              B        |L1.650|
                  |L1.608|
;;;178          } else {
;;;179            int Div;
;;;180            Div = xsize ? xsize : 1;     /* Make sure we do not divide by 0, even though xsize should never be 0 in this case anyhow */
000260  f1b90f00          CMP      r9,#0
000264  d001              BEQ      |L1.618|
000266  4649              MOV      r1,r9
000268  e001              B        |L1.622|
                  |L1.618|
00026a  f04f0101          MOV      r1,#1
                  |L1.622|
00026e  4608              MOV      r0,r1
;;;181            Sel = pObj->Min + ((U32)Range * (U32)x + Div / 2) / Div;
000270  4601              MOV      r1,r0
000272  eb0072d1          ADD      r2,r0,r1,LSR #31
000276  ea4f0262          ASR      r2,r2,#1
00027a  fb0b2205          MLA      r2,r11,r5,r2
00027e  fbb2f2f0          UDIV     r2,r2,r0
000282  6b63              LDR      r3,[r4,#0x34]
000284  eb020603          ADD      r6,r2,r3
;;;182          }
000288  bf00              NOP      
                  |L1.650|
;;;183          if (WM_IsFocussable(hObj)) {
00028a  9800              LDR      r0,[sp,#0]
00028c  f7fffffe          BL       WM_IsFocussable
000290  b110              CBZ      r0,|L1.664|
;;;184            WM_SetFocus(hObj);
000292  9800              LDR      r0,[sp,#0]
000294  f7fffffe          BL       WM_SetFocus
                  |L1.664|
;;;185          }
;;;186          WM_SetCapture(hObj, 1);
000298  2101              MOVS     r1,#1
00029a  9800              LDR      r0,[sp,#0]
00029c  f7fffffe          BL       WM_SetCapture
;;;187          SLIDER_SetValue(hObj, Sel);
0002a0  4631              MOV      r1,r6
0002a2  9800              LDR      r0,[sp,#0]
0002a4  f7fffffe          BL       SLIDER_SetValue
;;;188          if ((pObj->Widget.State & SLIDER_STATE_PRESSED) == 0){   
0002a8  8ce0              LDRH     r0,[r4,#0x26]
0002aa  f4107f80          TST      r0,#0x100
0002ae  d103              BNE      |L1.696|
;;;189            _SliderPressed(hObj, pObj);
0002b0  4621              MOV      r1,r4
0002b2  9800              LDR      r0,[sp,#0]
0002b4  f7fffffe          BL       _SliderPressed
                  |L1.696|
;;;190          }
;;;191        } else {
0002b8  e007              B        |L1.714|
                  |L1.698|
;;;192          /* React only if button was pressed before ... avoid problems with moving / hiding windows above (such as dropdown) */
;;;193          if (pObj->Widget.State & SLIDER_STATE_PRESSED) {   
0002ba  8ce0              LDRH     r0,[r4,#0x26]
0002bc  f4107f80          TST      r0,#0x100
0002c0  d003              BEQ      |L1.714|
;;;194            _SliderReleased(hObj, pObj);
0002c2  4621              MOV      r1,r4
0002c4  9800              LDR      r0,[sp,#0]
0002c6  f7fffffe          BL       _SliderReleased
                  |L1.714|
;;;195          }
;;;196        }
;;;197      }
;;;198    }
0002ca  e8bd8ffe          POP      {r1-r11,pc}
;;;199    
                          ENDP

                  SLIDER_Dec PROC
;;;338    */
;;;339    void SLIDER_Dec(SLIDER_Handle hObj) {
0002ce  b570              PUSH     {r4-r6,lr}
0002d0  4605              MOV      r5,r0
;;;340      SLIDER_Obj* pObj;
;;;341      if (hObj) {
0002d2  b195              CBZ      r5,|L1.762|
;;;342        WM_LOCK();
;;;343        pObj = SLIDER_H2P(hObj);
0002d4  4628              MOV      r0,r5
0002d6  f7fffffe          BL       GUI_ALLOC_h2p
0002da  4604              MOV      r4,r0
;;;344        if (pObj->v > pObj->Min) {
0002dc  6b61              LDR      r1,[r4,#0x34]
0002de  6be0              LDR      r0,[r4,#0x3c]
0002e0  4288              CMP      r0,r1
0002e2  dd0a              BLE      |L1.762|
;;;345          pObj->v--;
0002e4  6be0              LDR      r0,[r4,#0x3c]
0002e6  f1a00001          SUB      r0,r0,#1
0002ea  63e0              STR      r0,[r4,#0x3c]
;;;346          WM_InvalidateWindow(hObj);
0002ec  4628              MOV      r0,r5
0002ee  f7fffffe          BL       WM_InvalidateWindow
;;;347          WM_NotifyParent(hObj, WM_NOTIFICATION_VALUE_CHANGED);
0002f2  2105              MOVS     r1,#5
0002f4  4628              MOV      r0,r5
0002f6  f7fffffe          BL       WM_NotifyParent
                  |L1.762|
;;;348        }
;;;349        WM_UNLOCK();
;;;350      }
;;;351    }
0002fa  bd70              POP      {r4-r6,pc}
;;;352    
                          ENDP

                  SLIDER_Inc PROC
;;;356    */
;;;357    void SLIDER_Inc(SLIDER_Handle hObj) {
0002fc  b570              PUSH     {r4-r6,lr}
0002fe  4605              MOV      r5,r0
;;;358      SLIDER_Obj* pObj;
;;;359      if (hObj) {
000300  b195              CBZ      r5,|L1.808|
;;;360        WM_LOCK();
;;;361        pObj = SLIDER_H2P(hObj);
000302  4628              MOV      r0,r5
000304  f7fffffe          BL       GUI_ALLOC_h2p
000308  4604              MOV      r4,r0
;;;362        if (pObj->v < pObj->Max) {
00030a  e9d4100e          LDRD     r1,r0,[r4,#0x38]
00030e  4288              CMP      r0,r1
000310  da0a              BGE      |L1.808|
;;;363          pObj->v++;
000312  6be0              LDR      r0,[r4,#0x3c]
000314  f1000001          ADD      r0,r0,#1
000318  63e0              STR      r0,[r4,#0x3c]
;;;364          WM_InvalidateWindow(hObj);
00031a  4628              MOV      r0,r5
00031c  f7fffffe          BL       WM_InvalidateWindow
;;;365          WM_NotifyParent(hObj, WM_NOTIFICATION_VALUE_CHANGED);
000320  2105              MOVS     r1,#5
000322  4628              MOV      r0,r5
000324  f7fffffe          BL       WM_NotifyParent
                  |L1.808|
;;;366        }
;;;367        WM_UNLOCK();
;;;368      }
;;;369    }
000328  bd70              POP      {r4-r6,pc}
;;;370    
                          ENDP

                  _OnKey PROC
;;;203    */
;;;204    static void  _OnKey(SLIDER_Handle hObj, WM_MESSAGE*pMsg) {
00032a  e92d41f0          PUSH     {r4-r8,lr}
00032e  4606              MOV      r6,r0
000330  460c              MOV      r4,r1
;;;205      const WM_KEY_INFO* pKeyInfo;
;;;206      int Key;
;;;207      pKeyInfo = (const WM_KEY_INFO*)(pMsg->Data.p);
000332  68a5              LDR      r5,[r4,#8]
;;;208      Key = pKeyInfo->Key;
000334  682f              LDR      r7,[r5,#0]
;;;209      if (pKeyInfo->PressedCnt > 0) {
000336  6868              LDR      r0,[r5,#4]
000338  2800              CMP      r0,#0
00033a  dd0e              BLE      |L1.858|
;;;210        switch (Key) {
00033c  2f10              CMP      r7,#0x10
00033e  d005              BEQ      |L1.844|
000340  2f12              CMP      r7,#0x12
000342  d107              BNE      |L1.852|
;;;211          case GUI_KEY_RIGHT:
;;;212            SLIDER_Inc(hObj);
000344  4630              MOV      r0,r6
000346  f7fffffe          BL       SLIDER_Inc
;;;213            break;                    /* Send to parent by not doing anything */
00034a  e005              B        |L1.856|
                  |L1.844|
;;;214          case GUI_KEY_LEFT:
;;;215            SLIDER_Dec(hObj);
00034c  4630              MOV      r0,r6
00034e  f7fffffe          BL       SLIDER_Dec
;;;216            break;                    /* Send to parent by not doing anything */
000352  e001              B        |L1.856|
                  |L1.852|
;;;217          default:
;;;218            return;
;;;219        }
;;;220      }
;;;221    }
000354  e8bd81f0          POP      {r4-r8,pc}
                  |L1.856|
000358  bf00              NOP                            ;213
                  |L1.858|
00035a  bf00              NOP      
00035c  e7fa              B        |L1.852|
;;;222    
                          ENDP

                  SLIDER_Callback PROC
;;;255    */
;;;256    void SLIDER_Callback (WM_MESSAGE *pMsg) {
00035e  b570              PUSH     {r4-r6,lr}
000360  4604              MOV      r4,r0
;;;257      SLIDER_Handle hObj;
;;;258      SLIDER_Obj* pObj;
;;;259      hObj = pMsg->hWin;
000362  f9b45004          LDRSH    r5,[r4,#4]
;;;260      pObj = (SLIDER_Obj *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
000366  4628              MOV      r0,r5
000368  f7fffffe          BL       GUI_ALLOC_h2p
00036c  4606              MOV      r6,r0
;;;261      /* Let widget handle the standard messages */
;;;262      if (WIDGET_HandleActive(hObj, pMsg) == 0) {
00036e  4621              MOV      r1,r4
000370  4628              MOV      r0,r5
000372  f7fffffe          BL       WIDGET_HandleActive
000376  b900              CBNZ     r0,|L1.890|
                  |L1.888|
;;;263        return;
;;;264      }
;;;265      switch (pMsg->MsgId) {
;;;266      case WM_PAINT:
;;;267        GUI_DEBUG_LOG("SLIDER: _Callback(WM_PAINT)\n");
;;;268        _Paint(pObj, hObj);
;;;269        return;
;;;270      case WM_TOUCH:
;;;271        _OnTouch(hObj, pObj, pMsg);
;;;272        break;
;;;273      case WM_KEY:
;;;274        _OnKey(hObj, pMsg);
;;;275        break;
;;;276      }
;;;277      WM_DefaultProc(pMsg);
;;;278    }
000378  bd70              POP      {r4-r6,pc}
                  |L1.890|
00037a  6820              LDR      r0,[r4,#0]            ;265
00037c  280c              CMP      r0,#0xc               ;265
00037e  d008              BEQ      |L1.914|
000380  280e              CMP      r0,#0xe               ;265
000382  d00c              BEQ      |L1.926|
000384  280f              CMP      r0,#0xf               ;265
000386  d10f              BNE      |L1.936|
000388  4629              MOV      r1,r5                 ;268
00038a  4630              MOV      r0,r6                 ;268
00038c  f7fffffe          BL       _Paint
000390  e7f2              B        |L1.888|
                  |L1.914|
000392  4622              MOV      r2,r4                 ;271
000394  4631              MOV      r1,r6                 ;271
000396  4628              MOV      r0,r5                 ;271
000398  f7fffffe          BL       _OnTouch
00039c  e004              B        |L1.936|
                  |L1.926|
00039e  4621              MOV      r1,r4                 ;274
0003a0  4628              MOV      r0,r5                 ;274
0003a2  f7fffffe          BL       _OnKey
0003a6  bf00              NOP                            ;275
                  |L1.936|
0003a8  bf00              NOP                            ;272
0003aa  4620              MOV      r0,r4                 ;277
0003ac  f7fffffe          BL       WM_DefaultProc
0003b0  bf00              NOP      
0003b2  e7e1              B        |L1.888|
;;;279    
                          ENDP

                  SLIDER_CreateEx PROC
;;;293    */
;;;294    SLIDER_Handle SLIDER_CreateEx(int x0, int y0, int xsize, int ysize, WM_HWIN hParent,
0003b4  e92d4fff          PUSH     {r0-r11,lr}
;;;295                                  int WinFlags, int ExFlags, int Id)
;;;296    {
0003b8  b085              SUB      sp,sp,#0x14
0003ba  4680              MOV      r8,r0
0003bc  4689              MOV      r9,r1
0003be  4692              MOV      r10,r2
0003c0  e9dd5b13          LDRD     r5,r11,[sp,#0x4c]
;;;297      SLIDER_Handle hObj;
;;;298      /* Create the window */
;;;299      WM_LOCK();
;;;300      #if SLIDER_SUPPORT_TRANSPARENCY
;;;301        WinFlags |= WM_CF_HASTRANS;
0003c4  f0450501          ORR      r5,r5,#1
;;;302      #endif
;;;303      hObj = WM_CreateWindowAsChild(x0, y0, xsize, ysize, hParent, WinFlags, SLIDER_Callback, sizeof(SLIDER_Obj) - sizeof(WM_Obj));
0003c8  f04f022c          MOV      r2,#0x2c
0003cc  f2af0371          ADR      r3,SLIDER_Callback + 1
0003d0  b2a8              UXTH     r0,r5
0003d2  9912              LDR      r1,[sp,#0x48]
0003d4  e9cd3202          STRD     r3,r2,[sp,#8]
0003d8  e9cd1000          STRD     r1,r0,[sp,#0]
0003dc  4652              MOV      r2,r10
0003de  4649              MOV      r1,r9
0003e0  4640              MOV      r0,r8
0003e2  9b08              LDR      r3,[sp,#0x20]
0003e4  f7fffffe          BL       WM_CreateWindowAsChild
0003e8  4606              MOV      r6,r0
;;;304      if (hObj) {
0003ea  b316              CBZ      r6,|L1.1074|
;;;305        SLIDER_Obj * pObj;
;;;306        U16 InitState;
;;;307        pObj = (SLIDER_Obj *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
0003ec  4630              MOV      r0,r6
0003ee  f7fffffe          BL       GUI_ALLOC_h2p
0003f2  4604              MOV      r4,r0
;;;308        /* Handle SpecialFlags */
;;;309        InitState = WIDGET_STATE_FOCUSSABLE;
0003f4  f04f0710          MOV      r7,#0x10
;;;310        if (ExFlags & SLIDER_CF_VERTICAL) {
0003f8  f01b0f08          TST      r11,#8
0003fc  d001              BEQ      |L1.1026|
;;;311          InitState |= WIDGET_CF_VERTICAL;
0003fe  f0470708          ORR      r7,r7,#8
                  |L1.1026|
;;;312        }
;;;313        /* init widget specific variables */
;;;314        WIDGET__Init(&pObj->Widget, Id, InitState);
000402  463a              MOV      r2,r7
000404  4620              MOV      r0,r4
000406  9915              LDR      r1,[sp,#0x54]
000408  f7fffffe          BL       WIDGET__Init
;;;315        /* init member variables */
;;;316        SLIDER_INIT_ID(pObj);
;;;317        pObj->Props = SLIDER__DefaultProps;
00040c  4a3e              LDR      r2,|L1.1288|
00040e  ca07              LDM      r2,{r0-r2}
000410  e9c4120b          STRD     r1,r2,[r4,#0x2c]
000414  62a0              STR      r0,[r4,#0x28]
;;;318        pObj->Width       = 8;
000416  f04f0008          MOV      r0,#8
00041a  f8a40048          STRH     r0,[r4,#0x48]
;;;319        pObj->Max         = 100;
00041e  f04f0064          MOV      r0,#0x64
000422  63a0              STR      r0,[r4,#0x38]
;;;320        pObj->Min         = 0;
000424  f04f0000          MOV      r0,#0
000428  6360              STR      r0,[r4,#0x34]
;;;321        pObj->NumTicks    = -1;
00042a  f04f30ff          MOV      r0,#0xffffffff
00042e  6460              STR      r0,[r4,#0x44]
;;;322      } else {
000430  bf00              NOP      
                  |L1.1074|
;;;323        GUI_DEBUG_ERROROUT_IF(hObj==0, "SLIDER_Create failed")
;;;324      }
;;;325      WM_UNLOCK();
;;;326      return hObj;
000432  4630              MOV      r0,r6
;;;327    }
000434  b009              ADD      sp,sp,#0x24
000436  e8bd8ff0          POP      {r4-r11,pc}
;;;328    
                          ENDP

                  SLIDER_SetWidth PROC
;;;374    */
;;;375    void SLIDER_SetWidth(SLIDER_Handle hObj, int Width) {
00043a  b570              PUSH     {r4-r6,lr}
00043c  4606              MOV      r6,r0
00043e  460d              MOV      r5,r1
;;;376      SLIDER_Obj* pObj;
;;;377      if (hObj) {
000440  b16e              CBZ      r6,|L1.1118|
;;;378        WM_LOCK();
;;;379        pObj = SLIDER_H2P(hObj);
000442  4630              MOV      r0,r6
000444  f7fffffe          BL       GUI_ALLOC_h2p
000448  4604              MOV      r4,r0
;;;380        if (pObj->Width != Width) {
00044a  f9b40048          LDRSH    r0,[r4,#0x48]
00044e  42a8              CMP      r0,r5
000450  d005              BEQ      |L1.1118|
;;;381          pObj->Width = Width;
000452  b228              SXTH     r0,r5
000454  f8a40048          STRH     r0,[r4,#0x48]
;;;382          WM_InvalidateWindow(hObj);
000458  4630              MOV      r0,r6
00045a  f7fffffe          BL       WM_InvalidateWindow
                  |L1.1118|
;;;383        }
;;;384        WM_UNLOCK();
;;;385      }
;;;386    }
00045e  bd70              POP      {r4-r6,pc}
;;;387    
                          ENDP

                  SLIDER_SetRange PROC
;;;416    */
;;;417    void SLIDER_SetRange(SLIDER_Handle hObj, int Min, int Max) {
000460  e92d41f0          PUSH     {r4-r8,lr}
000464  4607              MOV      r7,r0
000466  460c              MOV      r4,r1
000468  4616              MOV      r6,r2
;;;418      if (hObj) {
00046a  b1a7              CBZ      r7,|L1.1174|
;;;419        SLIDER_Obj* pObj;
;;;420        WM_LOCK();
;;;421        pObj = SLIDER_H2P(hObj);
00046c  4638              MOV      r0,r7
00046e  f7fffffe          BL       GUI_ALLOC_h2p
000472  4605              MOV      r5,r0
;;;422        if (Max < Min) {
000474  42a6              CMP      r6,r4
000476  da00              BGE      |L1.1146|
;;;423          Max = Min;
000478  4626              MOV      r6,r4
                  |L1.1146|
;;;424        }
;;;425        pObj->Min = Min;
00047a  636c              STR      r4,[r5,#0x34]
;;;426        pObj->Max = Max;
00047c  63ae              STR      r6,[r5,#0x38]
;;;427        if (pObj->v < Min) {
00047e  6be8              LDR      r0,[r5,#0x3c]
000480  42a0              CMP      r0,r4
000482  da00              BGE      |L1.1158|
;;;428          pObj->v = Min;
000484  63ec              STR      r4,[r5,#0x3c]
                  |L1.1158|
;;;429        }
;;;430        if (pObj->v > Max) {
000486  6be8              LDR      r0,[r5,#0x3c]
000488  42b0              CMP      r0,r6
00048a  dd00              BLE      |L1.1166|
;;;431          pObj->v = Max;
00048c  63ee              STR      r6,[r5,#0x3c]
                  |L1.1166|
;;;432        }
;;;433        WM_InvalidateWindow(hObj);
00048e  4638              MOV      r0,r7
000490  f7fffffe          BL       WM_InvalidateWindow
;;;434        WM_UNLOCK();
;;;435      }
000494  bf00              NOP      
                  |L1.1174|
;;;436    }
000496  e8bd81f0          POP      {r4-r8,pc}
;;;437    
                          ENDP

                  SLIDER_SetNumTicks PROC
;;;441    */
;;;442    void SLIDER_SetNumTicks(SLIDER_Handle hObj, int NumTicks) {
00049a  b570              PUSH     {r4-r6,lr}
00049c  4605              MOV      r5,r0
00049e  460c              MOV      r4,r1
;;;443      if (hObj && (NumTicks >= 0)) {
0004a0  b155              CBZ      r5,|L1.1208|
0004a2  2c00              CMP      r4,#0
0004a4  db08              BLT      |L1.1208|
;;;444        SLIDER_Obj* pObj;
;;;445        WM_LOCK();
;;;446        pObj = SLIDER_H2P(hObj);
0004a6  4628              MOV      r0,r5
0004a8  f7fffffe          BL       GUI_ALLOC_h2p
0004ac  4606              MOV      r6,r0
;;;447        pObj->NumTicks = NumTicks;
0004ae  6474              STR      r4,[r6,#0x44]
;;;448        WM_InvalidateWindow(hObj);
0004b0  4628              MOV      r0,r5
0004b2  f7fffffe          BL       WM_InvalidateWindow
;;;449        WM_UNLOCK();
;;;450      }
0004b6  bf00              NOP      
                  |L1.1208|
;;;451    }
0004b8  bd70              POP      {r4-r6,pc}
;;;452    
                          ENDP

                  SLIDER_SetBkColor PROC
;;;456    */
;;;457    void SLIDER_SetBkColor(SLIDER_Handle hObj, GUI_COLOR Color) {
0004ba  b570              PUSH     {r4-r6,lr}
0004bc  4605              MOV      r5,r0
0004be  460c              MOV      r4,r1
;;;458      if (hObj) {
0004c0  b195              CBZ      r5,|L1.1256|
;;;459        SLIDER_Obj * pObj;
;;;460        WM_LOCK();
;;;461        pObj = SLIDER_H2P(hObj);
0004c2  4628              MOV      r0,r5
0004c4  f7fffffe          BL       GUI_ALLOC_h2p
0004c8  4606              MOV      r6,r0
;;;462        pObj->Props.BkColor = Color;
0004ca  62b4              STR      r4,[r6,#0x28]
;;;463        #if SLIDER_SUPPORT_TRANSPARENCY
;;;464          if (Color <= 0xFFFFFF) {
0004cc  f1b47f80          CMP      r4,#0x1000000
0004d0  d203              BCS      |L1.1242|
;;;465            WM_ClrHasTrans(hObj);
0004d2  4628              MOV      r0,r5
0004d4  f7fffffe          BL       WM_ClrHasTrans
0004d8  e002              B        |L1.1248|
                  |L1.1242|
;;;466          } else {
;;;467            WM_SetHasTrans(hObj);
0004da  4628              MOV      r0,r5
0004dc  f7fffffe          BL       WM_SetHasTrans
                  |L1.1248|
;;;468          }
;;;469        #endif
;;;470        WM_InvalidateWindow(hObj);
0004e0  4628              MOV      r0,r5
0004e2  f7fffffe          BL       WM_InvalidateWindow
;;;471        WM_UNLOCK();
;;;472      }
0004e6  bf00              NOP      
                  |L1.1256|
;;;473    }
0004e8  bd70              POP      {r4-r6,pc}
;;;474    
                          ENDP

                  SLIDER_SetDefaultBkColor PROC
;;;478    */
;;;479    void SLIDER_SetDefaultBkColor(GUI_COLOR Color) {
0004ea  4907              LDR      r1,|L1.1288|
;;;480      SLIDER__DefaultProps.BkColor = Color;
0004ec  6008              STR      r0,[r1,#0]  ; SLIDER__DefaultProps
;;;481    }
0004ee  4770              BX       lr
;;;482    
                          ENDP

                  SLIDER_GetValue PROC
;;;492    */
;;;493    int SLIDER_GetValue(SLIDER_Handle hObj) {
0004f0  b570              PUSH     {r4-r6,lr}
0004f2  4605              MOV      r5,r0
;;;494      int r = 0;
0004f4  f04f0600          MOV      r6,#0
;;;495      SLIDER_Obj* pObj;
;;;496      if (hObj) {
0004f8  b125              CBZ      r5,|L1.1284|
;;;497        WM_LOCK();
;;;498        pObj = SLIDER_H2P(hObj);
0004fa  4628              MOV      r0,r5
0004fc  f7fffffe          BL       GUI_ALLOC_h2p
000500  4604              MOV      r4,r0
;;;499        r = pObj->v;
000502  6be6              LDR      r6,[r4,#0x3c]
                  |L1.1284|
;;;500        WM_UNLOCK();
;;;501      }
;;;502      return r;
000504  4630              MOV      r0,r6
;;;503    }
000506  bd70              POP      {r4-r6,pc}
;;;504    
                          ENDP

                  |L1.1288|
                          DCD      SLIDER__DefaultProps

                          AREA ||.data||, DATA, ALIGN=2

                  SLIDER__DefaultProps
                          DCD      0x00c0c0c0
                          DCD      0x00c0c0c0
                          DCD      0x00000000

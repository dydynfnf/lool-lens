; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\guiuc0.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\guiuc0.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\guiuc0.crf GUI\Core\GUIUC0.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  GUI_UC2DB PROC
;;;37     */
;;;38     void GUI_UC2DB(U16 Code, U8* pOut) {
000000  28ff              CMP      r0,#0xff
;;;39     /* move regular ASCII to (unused) 0xE000-0xE0ff area */
;;;40       if (Code < 0x100) {
000002  dc04              BGT      |L1.14|
;;;41         if (Code !=0)  /* end marker ? */
000004  b158              CBZ      r0,|L1.30|
;;;42           Code += 0xe000;
000006  f5004260          ADD      r2,r0,#0xe000
00000a  b290              UXTH     r0,r2
00000c  e007              B        |L1.30|
                  |L1.14|
;;;43       } else {
;;;44     /* If Low byte 0: Move to (unused) 0xE100-0xE1ff area */
;;;45         if ((Code&0xff) == 0) {
00000e  f0100fff          TST      r0,#0xff
000012  d104              BNE      |L1.30|
;;;46           Code = (Code>>8) +0xe100;
000014  f44f4261          MOV      r2,#0xe100
000018  eb022220          ADD      r2,r2,r0,ASR #8
00001c  b290              UXTH     r0,r2
                  |L1.30|
;;;47         }
;;;48       }
;;;49     /* Convert into double byte, putting msb first*/
;;;50       *pOut++ = Code >> 8;     /* Save msb first */
00001e  ea4f2220          ASR      r2,r0,#8
000022  f8012b01          STRB     r2,[r1],#1
;;;51       *pOut   = Code & 0xff;
000026  7008              STRB     r0,[r1,#0]
;;;52     }
000028  4770              BX       lr
;;;53     
                          ENDP

                  GUI_DB2UC PROC
;;;62     */
;;;63     U16 GUI_DB2UC(U8 Byte0, U8 Byte1) {
00002a  4602              MOV      r2,r0
;;;64       if (Byte0==0)
00002c  b90a              CBNZ     r2,|L1.50|
;;;65         return 0;
00002e  2000              MOVS     r0,#0
                  |L1.48|
;;;66       if ((Byte0&0xfe) == 0xe0) {
;;;67         if (Byte0 == 0xe0)        /* ASCII */
;;;68           return Byte1;
;;;69         return ((U16)Byte1)<<8;   /* low byte was zero */
;;;70       }
;;;71       return Byte1 | (((U16)Byte0)<<8);
;;;72     }
000030  4770              BX       lr
                  |L1.50|
000032  f00200fe          AND      r0,r2,#0xfe           ;66
000036  28e0              CMP      r0,#0xe0              ;66
000038  d105              BNE      |L1.70|
00003a  2ae0              CMP      r2,#0xe0              ;67
00003c  d101              BNE      |L1.66|
00003e  4608              MOV      r0,r1                 ;68
000040  e7f6              B        |L1.48|
                  |L1.66|
000042  0208              LSLS     r0,r1,#8              ;69
000044  e7f4              B        |L1.48|
                  |L1.70|
000046  ea412002          ORR      r0,r1,r2,LSL #8       ;71
00004a  e7f1              B        |L1.48|
;;;73     
                          ENDP


; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\listview.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\listview.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\listview.crf GUI\Widget\LISTVIEW.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  LISTVIEW__GetNumRows PROC
;;;126    */
;;;127    unsigned LISTVIEW__GetNumRows(LISTVIEW_Obj* pObj) {
000000  b510              PUSH     {r4,lr}
000002  4604              MOV      r4,r0
;;;128      return GUI_ARRAY_GetNumItems(&pObj->RowArray);
000004  f104002a          ADD      r0,r4,#0x2a
000008  f7fffffe          BL       GUI_ARRAY_GetNumItems
;;;129    }
00000c  bd10              POP      {r4,pc}
;;;130    
                          ENDP

                  LISTVIEW__GetNumColumns PROC
;;;134    */
;;;135    unsigned LISTVIEW__GetNumColumns(LISTVIEW_Obj* pObj) {
00000e  b510              PUSH     {r4,lr}
000010  4604              MOV      r4,r0
;;;136      return GUI_ARRAY_GetNumItems(&pObj->ColumnArray);
000012  f104002e          ADD      r0,r4,#0x2e
000016  f7fffffe          BL       GUI_ARRAY_GetNumItems
;;;137    }
00001a  bd10              POP      {r4,pc}
;;;138    
                          ENDP

                  LISTVIEW__GetSel PROC
;;;142    */
;;;143    int LISTVIEW__GetSel(LISTVIEW_Obj* pObj) {
00001c  4601              MOV      r1,r0
;;;144      return pObj->Sel;
00001e  6e08              LDR      r0,[r1,#0x60]
;;;145    }
000020  4770              BX       lr
;;;146    
                          ENDP

                  LISTVIEW__GetRowDistY PROC
;;;213    */
;;;214    unsigned LISTVIEW__GetRowDistY(const LISTVIEW_Obj* pObj) {
000022  b570              PUSH     {r4-r6,lr}
000024  4604              MOV      r4,r0
;;;215      unsigned RowDistY;
;;;216      if (pObj->RowDistY) {
000026  6ee0              LDR      r0,[r4,#0x6c]
000028  b108              CBZ      r0,|L1.46|
;;;217        RowDistY = pObj->RowDistY;
00002a  6ee5              LDR      r5,[r4,#0x6c]
00002c  e007              B        |L1.62|
                  |L1.46|
;;;218      } else {
;;;219        RowDistY = GUI_GetYDistOfFont(pObj->Props.pFont);
00002e  6da0              LDR      r0,[r4,#0x58]
000030  f7fffffe          BL       GUI_GetYDistOfFont
000034  4605              MOV      r5,r0
;;;220        if (pObj->ShowGrid) {
000036  6e60              LDR      r0,[r4,#0x64]
000038  b108              CBZ      r0,|L1.62|
;;;221          RowDistY++;
00003a  f1050501          ADD      r5,r5,#1
                  |L1.62|
;;;222        }
;;;223      }
;;;224      return RowDistY;
00003e  4628              MOV      r0,r5
;;;225    }
000040  bd70              POP      {r4-r6,pc}
;;;226    
                          ENDP

                  LISTVIEW__InvalidateRow PROC
;;;435    */
;;;436    void LISTVIEW__InvalidateRow(LISTVIEW_Handle hObj, LISTVIEW_Obj* pObj, int Sel) {
000042  e92d41fc          PUSH     {r2-r8,lr}
000046  4607              MOV      r7,r0
000048  460c              MOV      r4,r1
00004a  4615              MOV      r5,r2
;;;437      if (Sel >= 0) {
00004c  2d00              CMP      r5,#0
00004e  db24              BLT      |L1.154|
;;;438        GUI_RECT Rect;
;;;439        int HeaderHeight, RowDistY;
;;;440        HeaderHeight = HEADER_GetHeight(pObj->hHeader);
000050  f9b40028          LDRSH    r0,[r4,#0x28]
000054  f7fffffe          BL       HEADER_GetHeight
000058  4680              MOV      r8,r0
;;;441        RowDistY     = LISTVIEW__GetRowDistY(pObj);
00005a  4620              MOV      r0,r4
00005c  f7fffffe          BL       LISTVIEW__GetRowDistY
000060  4606              MOV      r6,r0
;;;442        WM_GetInsideRectExScrollbar(hObj, &Rect);
000062  4669              MOV      r1,sp
000064  4638              MOV      r0,r7
000066  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;443        Rect.y0 += HeaderHeight + (Sel - pObj->ScrollStateV.v) * RowDistY;
00006a  f8bd1002          LDRH     r1,[sp,#2]
00006e  6fe0              LDR      r0,[r4,#0x7c]
000070  eba50000          SUB      r0,r5,r0
000074  fb008006          MLA      r0,r0,r6,r8
000078  4408              ADD      r0,r0,r1
00007a  b200              SXTH     r0,r0
00007c  f8ad0002          STRH     r0,[sp,#2]
;;;444        Rect.y1  = Rect.y0 + RowDistY - 1;
000080  f8bd0002          LDRH     r0,[sp,#2]
000084  4430              ADD      r0,r0,r6
000086  f1a00001          SUB      r0,r0,#1
00008a  b200              SXTH     r0,r0
00008c  f8ad0006          STRH     r0,[sp,#6]
;;;445        WM_InvalidateRect(hObj, &Rect);
000090  4669              MOV      r1,sp
000092  4638              MOV      r0,r7
000094  f7fffffe          BL       WM_InvalidateRect
;;;446      }
000098  bf00              NOP      
                  |L1.154|
;;;447    }
00009a  e8bd81fc          POP      {r2-r8,pc}
;;;448    
                          ENDP

                  LISTVIEW__InvalidateInsideArea PROC
;;;422    */
;;;423    void LISTVIEW__InvalidateInsideArea(LISTVIEW_Handle hObj, LISTVIEW_Obj* pObj) {
00009e  b57c              PUSH     {r2-r6,lr}
0000a0  4605              MOV      r5,r0
0000a2  460c              MOV      r4,r1
;;;424      GUI_RECT Rect;
;;;425      int HeaderHeight;
;;;426      HeaderHeight = HEADER_GetHeight(pObj->hHeader);
0000a4  f9b40028          LDRSH    r0,[r4,#0x28]
0000a8  f7fffffe          BL       HEADER_GetHeight
0000ac  4606              MOV      r6,r0
;;;427      WM_GetInsideRectExScrollbar(hObj, &Rect);
0000ae  4669              MOV      r1,sp
0000b0  4628              MOV      r0,r5
0000b2  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;428      Rect.y0 += HeaderHeight;
0000b6  f8bd0002          LDRH     r0,[sp,#2]
0000ba  4430              ADD      r0,r0,r6
0000bc  b200              SXTH     r0,r0
0000be  f8ad0002          STRH     r0,[sp,#2]
;;;429      WM_InvalidateRect(hObj, &Rect);
0000c2  4669              MOV      r1,sp
0000c4  4628              MOV      r0,r5
0000c6  f7fffffe          BL       WM_InvalidateRect
;;;430    }
0000ca  bd7c              POP      {r2-r6,pc}
;;;431    
                          ENDP

                  LISTVIEW__UpdateScrollPos PROC
;;;558    */
;;;559    int LISTVIEW__UpdateScrollPos(LISTVIEW_Handle hObj, LISTVIEW_Obj* pObj) {
0000cc  b570              PUSH     {r4-r6,lr}
0000ce  4605              MOV      r5,r0
0000d0  460c              MOV      r4,r1
;;;560      int PrevScrollStateV;
;;;561      PrevScrollStateV = pObj->ScrollStateV.v;
0000d2  6fe6              LDR      r6,[r4,#0x7c]
;;;562      if (pObj->Sel >= 0) {
0000d4  6e20              LDR      r0,[r4,#0x60]
0000d6  2800              CMP      r0,#0
0000d8  db07              BLT      |L1.234|
;;;563        WM_CheckScrollPos(&pObj->ScrollStateV, pObj->Sel, 0, 0);
0000da  2300              MOVS     r3,#0
0000dc  461a              MOV      r2,r3
0000de  f1040078          ADD      r0,r4,#0x78
0000e2  6e21              LDR      r1,[r4,#0x60]
0000e4  f7fffffe          BL       WM_CheckScrollPos
0000e8  e003              B        |L1.242|
                  |L1.234|
;;;564      } else {
;;;565        WM_CheckScrollBounds(&pObj->ScrollStateV);
0000ea  f1040078          ADD      r0,r4,#0x78
0000ee  f7fffffe          BL       WM_CheckScrollBounds
                  |L1.242|
;;;566      }
;;;567      WM_CheckScrollBounds(&pObj->ScrollStateH);
0000f2  f1040084          ADD      r0,r4,#0x84
0000f6  f7fffffe          BL       WM_CheckScrollBounds
;;;568      WIDGET__SetScrollState(hObj, &pObj->ScrollStateV, &pObj->ScrollStateH);
0000fa  f1040284          ADD      r2,r4,#0x84
0000fe  f1040178          ADD      r1,r4,#0x78
000102  4628              MOV      r0,r5
000104  f7fffffe          BL       WIDGET__SetScrollState
;;;569      return pObj->ScrollStateV.v - PrevScrollStateV;
000108  6fe0              LDR      r0,[r4,#0x7c]
00010a  1b80              SUBS     r0,r0,r6
;;;570    }
00010c  bd70              POP      {r4-r6,pc}
;;;571    
                          ENDP

                  LISTVIEW__SetSel PROC
;;;150    */
;;;151    void LISTVIEW__SetSel(LISTVIEW_Handle hObj, LISTVIEW_Obj* pObj, int NewSel) {
00010e  e92d47f0          PUSH     {r4-r10,lr}
000112  4681              MOV      r9,r0
000114  460c              MOV      r4,r1
000116  4615              MOV      r5,r2
;;;152      int NumRows;
;;;153      NumRows = LISTVIEW__GetNumRows(pObj);
000118  4620              MOV      r0,r4
00011a  f7fffffe          BL       LISTVIEW__GetNumRows
00011e  4607              MOV      r7,r0
;;;154      if (NewSel >= NumRows) {
000120  42bd              CMP      r5,r7
000122  db01              BLT      |L1.296|
;;;155        NewSel = NumRows - 1;
000124  f1a70501          SUB      r5,r7,#1
                  |L1.296|
;;;156      }
;;;157      if (NewSel < 0) {
000128  2d00              CMP      r5,#0
00012a  da01              BGE      |L1.304|
;;;158        NewSel = -1;
00012c  f04f35ff          MOV      r5,#0xffffffff
                  |L1.304|
;;;159      }
;;;160      if (NewSel != pObj->Sel) {
000130  6e20              LDR      r0,[r4,#0x60]
000132  42a8              CMP      r0,r5
000134  d02b              BEQ      |L1.398|
;;;161        char Disabled;
;;;162        LISTVIEW_ROW * pRow;
;;;163        pRow = (LISTVIEW_ROW *)GUI_ARRAY_GetpItem(&pObj->RowArray, NewSel);
000136  4629              MOV      r1,r5
000138  f104002a          ADD      r0,r4,#0x2a
00013c  f7fffffe          BL       GUI_ARRAY_GetpItem
000140  4680              MOV      r8,r0
;;;164        if (pRow) {
000142  f1b80f00          CMP      r8,#0
000146  d002              BEQ      |L1.334|
;;;165          Disabled = pRow->Disabled;
000148  f8986004          LDRB     r6,[r8,#4]
00014c  e001              B        |L1.338|
                  |L1.334|
;;;166        } else {
;;;167          Disabled = 0;
00014e  f04f0600          MOV      r6,#0
                  |L1.338|
;;;168        }
;;;169        if (Disabled == 0) {
000152  b9de              CBNZ     r6,|L1.396|
;;;170          int OldSel;
;;;171          OldSel    = pObj->Sel;
000154  f8d4a060          LDR      r10,[r4,#0x60]
;;;172          pObj->Sel = NewSel;
000158  6625              STR      r5,[r4,#0x60]
;;;173          if (LISTVIEW__UpdateScrollPos(hObj, pObj)) {
00015a  4621              MOV      r1,r4
00015c  4648              MOV      r0,r9
00015e  f7fffffe          BL       LISTVIEW__UpdateScrollPos
000162  b120              CBZ      r0,|L1.366|
;;;174            LISTVIEW__InvalidateInsideArea(hObj, pObj);
000164  4621              MOV      r1,r4
000166  4648              MOV      r0,r9
000168  f7fffffe          BL       LISTVIEW__InvalidateInsideArea
00016c  e009              B        |L1.386|
                  |L1.366|
;;;175          } else {
;;;176            LISTVIEW__InvalidateRow(hObj, pObj, OldSel);
00016e  4652              MOV      r2,r10
000170  4621              MOV      r1,r4
000172  4648              MOV      r0,r9
000174  f7fffffe          BL       LISTVIEW__InvalidateRow
;;;177            LISTVIEW__InvalidateRow(hObj, pObj, NewSel);
000178  462a              MOV      r2,r5
00017a  4621              MOV      r1,r4
00017c  4648              MOV      r0,r9
00017e  f7fffffe          BL       LISTVIEW__InvalidateRow
                  |L1.386|
;;;178          }
;;;179          WM_NotifyParent(hObj, WM_NOTIFICATION_SEL_CHANGED);
000182  2104              MOVS     r1,#4
000184  4648              MOV      r0,r9
000186  f7fffffe          BL       WM_NotifyParent
;;;180        }
00018a  bf00              NOP      
                  |L1.396|
;;;181      }
00018c  bf00              NOP      
                  |L1.398|
;;;182    }
00018e  e8bd87f0          POP      {r4-r10,pc}
;;;183    
                          ENDP

                  LISTVIEW__MoveSel PROC
;;;189    */
;;;190    void LISTVIEW__MoveSel(LISTVIEW_Handle hObj, LISTVIEW_Obj* pObj, int Dir) {
000192  e92d47f0          PUSH     {r4-r10,lr}
000196  4681              MOV      r9,r0
000198  460d              MOV      r5,r1
00019a  4690              MOV      r8,r2
;;;191      int Index, NewSel = -1, NumRows;
00019c  f04f36ff          MOV      r6,#0xffffffff
;;;192      Index   = LISTVIEW__GetSel(pObj);
0001a0  4628              MOV      r0,r5
0001a2  f7fffffe          BL       LISTVIEW__GetSel
0001a6  4604              MOV      r4,r0
;;;193      NumRows = LISTVIEW__GetNumRows(pObj);
0001a8  4628              MOV      r0,r5
0001aa  f7fffffe          BL       LISTVIEW__GetNumRows
0001ae  4682              MOV      r10,r0
;;;194      do {
0001b0  bf00              NOP      
                  |L1.434|
;;;195        LISTVIEW_ROW* pRow;
;;;196        Index += Dir;
0001b2  4444              ADD      r4,r4,r8
;;;197        if ((Index < 0) || (Index >= NumRows)) {
0001b4  2c00              CMP      r4,#0
0001b6  db01              BLT      |L1.444|
0001b8  4554              CMP      r4,r10
0001ba  db00              BLT      |L1.446|
                  |L1.444|
;;;198          break;
0001bc  e00a              B        |L1.468|
                  |L1.446|
;;;199        }
;;;200        pRow = (LISTVIEW_ROW*) GUI_ARRAY_GetpItem(&pObj->RowArray, Index);
0001be  4621              MOV      r1,r4
0001c0  f105002a          ADD      r0,r5,#0x2a
0001c4  f7fffffe          BL       GUI_ARRAY_GetpItem
0001c8  4607              MOV      r7,r0
;;;201        if (pRow->Disabled == 0) {
0001ca  7938              LDRB     r0,[r7,#4]
0001cc  b900              CBNZ     r0,|L1.464|
;;;202          NewSel = Index;
0001ce  4626              MOV      r6,r4
                  |L1.464|
;;;203        }
;;;204      } while (NewSel < 0);
0001d0  2e00              CMP      r6,#0
0001d2  dbee              BLT      |L1.434|
                  |L1.468|
0001d4  bf00              NOP                            ;198
;;;205      if (NewSel >= 0) {
0001d6  2e00              CMP      r6,#0
0001d8  db04              BLT      |L1.484|
;;;206        LISTVIEW__SetSel(hObj, pObj, NewSel);
0001da  4632              MOV      r2,r6
0001dc  4629              MOV      r1,r5
0001de  4648              MOV      r0,r9
0001e0  f7fffffe          BL       LISTVIEW__SetSel
                  |L1.484|
;;;207      }
;;;208    }
0001e4  e8bd87f0          POP      {r4-r10,pc}
;;;209    
                          ENDP

                  _GetNumVisibleRows PROC
;;;238    */
;;;239    static unsigned _GetNumVisibleRows(LISTVIEW_Handle hObj, const LISTVIEW_Obj* pObj) {
0001e8  e92d41fc          PUSH     {r2-r8,lr}
0001ec  4607              MOV      r7,r0
0001ee  460c              MOV      r4,r1
;;;240      unsigned RowDistY, ySize, r = 1;
0001f0  f04f0601          MOV      r6,#1
;;;241      GUI_RECT Rect;
;;;242      WM_GetInsideRectExScrollbar(hObj, &Rect);
0001f4  4669              MOV      r1,sp
0001f6  4638              MOV      r0,r7
0001f8  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;243      ySize    = Rect.y1 - Rect.y0 + 1 - HEADER_GetHeight(pObj->hHeader);
0001fc  f9b40028          LDRSH    r0,[r4,#0x28]
000200  f7fffffe          BL       HEADER_GetHeight
000204  f9bd1006          LDRSH    r1,[sp,#6]
000208  f9bd2002          LDRSH    r2,[sp,#2]
00020c  eba10102          SUB      r1,r1,r2
000210  f1010101          ADD      r1,r1,#1
000214  eba10800          SUB      r8,r1,r0
;;;244      RowDistY = LISTVIEW__GetRowDistY(pObj);
000218  4620              MOV      r0,r4
00021a  f7fffffe          BL       LISTVIEW__GetRowDistY
00021e  4605              MOV      r5,r0
;;;245      if (RowDistY) {
000220  b13d              CBZ      r5,|L1.562|
;;;246        r = ySize / RowDistY;
000222  fbb8f6f5          UDIV     r6,r8,r5
;;;247        r = (r == 0) ? 1 : r;
000226  b916              CBNZ     r6,|L1.558|
000228  f04f0001          MOV      r0,#1
00022c  e000              B        |L1.560|
                  |L1.558|
00022e  4630              MOV      r0,r6
                  |L1.560|
000230  4606              MOV      r6,r0
                  |L1.562|
;;;248      }
;;;249      return r;
000232  4630              MOV      r0,r6
;;;250    }
000234  e8bd81fc          POP      {r2-r8,pc}
;;;251    
                          ENDP

                  _GetpRow PROC
;;;255    */
;;;256    static LISTVIEW_ROW * _GetpRow(LISTVIEW_Obj * pObj, int Index) {
000238  e92d41f0          PUSH     {r4-r8,lr}
00023c  4604              MOV      r4,r0
00023e  460d              MOV      r5,r1
;;;257      if (pObj->hSort && (pObj->SortIndex >= 0)) {
000240  f8b40092          LDRH     r0,[r4,#0x92]
000244  b1c8              CBZ      r0,|L1.634|
000246  6ea0              LDR      r0,[r4,#0x68]
000248  2800              CMP      r0,#0
00024a  db16              BLT      |L1.634|
;;;258        LISTVIEW_SORT * pSort;
;;;259        SORT_TYPE * pData;
;;;260        pSort = (LISTVIEW_SORT *)GUI_ALLOC_h2p(pObj->hSort);
00024c  f9b40092          LDRSH    r0,[r4,#0x92]
000250  f7fffffe          BL       GUI_ALLOC_h2p
000254  4606              MOV      r6,r0
;;;261        pData = (SORT_TYPE *)GUI_ALLOC_h2p(pSort->hSortArray);
000256  f9b60000          LDRSH    r0,[r6,#0]
00025a  f7fffffe          BL       GUI_ALLOC_h2p
00025e  4607              MOV      r7,r0
;;;262        if (Index >= pSort->SortArrayNumItems) {
000260  8870              LDRH     r0,[r6,#2]
000262  42a8              CMP      r0,r5
000264  dc02              BGT      |L1.620|
;;;263          return NULL;
000266  2000              MOVS     r0,#0
                  |L1.616|
;;;264        }
;;;265        return (LISTVIEW_ROW *)GUI_ARRAY_GetpItem(&pObj->RowArray, *(pData + Index));
;;;266      } else {
;;;267        return (LISTVIEW_ROW *)GUI_ARRAY_GetpItem(&pObj->RowArray, Index);
;;;268      }
;;;269    }
000268  e8bd81f0          POP      {r4-r8,pc}
                  |L1.620|
00026c  f8371015          LDRH     r1,[r7,r5,LSL #1]     ;265
000270  f104002a          ADD      r0,r4,#0x2a           ;265
000274  f7fffffe          BL       GUI_ARRAY_GetpItem
000278  e7f6              B        |L1.616|
                  |L1.634|
00027a  4629              MOV      r1,r5                 ;267
00027c  f104002a          ADD      r0,r4,#0x2a           ;267
000280  f7fffffe          BL       GUI_ARRAY_GetpItem
000284  e7f0              B        |L1.616|
;;;270    
                          ENDP

                  _Paint PROC
;;;274    */
;;;275    static void _Paint(LISTVIEW_Handle hObj, LISTVIEW_Obj* pObj, WM_MESSAGE* pMsg) {
000286  e92d4ff7          PUSH     {r0-r2,r4-r11,lr}
00028a  b090              SUB      sp,sp,#0x40
00028c  460c              MOV      r4,r1
;;;276      const LISTVIEW_ROW* pRow;
;;;277      GUI_RECT ClipRect, Rect;
;;;278      int NumRows, NumVisRows, NumColumns;
;;;279      int LBorder, RBorder, EffectSize;
;;;280      int xPos, yPos, Width, RowDistY;
;;;281      int Align, i, j, EndRow;
;;;282      /* Init some values */
;;;283      NumColumns = LISTVIEW__GetNumColumns(pObj);
00028e  4620              MOV      r0,r4
000290  f7fffffe          BL       LISTVIEW__GetNumColumns
000294  9009              STR      r0,[sp,#0x24]
;;;284      NumRows    = LISTVIEW__GetNumRows(pObj);
000296  4620              MOV      r0,r4
000298  f7fffffe          BL       LISTVIEW__GetNumRows
00029c  900b              STR      r0,[sp,#0x2c]
;;;285      NumVisRows = _GetNumVisibleRows(hObj, pObj);
00029e  4621              MOV      r1,r4
0002a0  9810              LDR      r0,[sp,#0x40]
0002a2  f7fffffe          BL       _GetNumVisibleRows
0002a6  900a              STR      r0,[sp,#0x28]
;;;286      RowDistY   = LISTVIEW__GetRowDistY(pObj);
0002a8  4620              MOV      r0,r4
0002aa  f7fffffe          BL       LISTVIEW__GetRowDistY
0002ae  9005              STR      r0,[sp,#0x14]
;;;287      LBorder    = pObj->LBorder;
0002b0  6f20              LDR      r0,[r4,#0x70]
0002b2  9008              STR      r0,[sp,#0x20]
;;;288      RBorder    = pObj->RBorder;
0002b4  6f60              LDR      r0,[r4,#0x74]
0002b6  9007              STR      r0,[sp,#0x1c]
;;;289      EffectSize = pObj->Widget.pEffect->EffectSize;
0002b8  6a20              LDR      r0,[r4,#0x20]
0002ba  f8d0b014          LDR      r11,[r0,#0x14]
;;;290      yPos       = HEADER_GetHeight(pObj->hHeader) + EffectSize;
0002be  f9b40028          LDRSH    r0,[r4,#0x28]
0002c2  f7fffffe          BL       HEADER_GetHeight
0002c6  eb00050b          ADD      r5,r0,r11
;;;291      /* Calculate clipping rectangle */
;;;292      ClipRect = *(const GUI_RECT*)pMsg->Data.p;
0002ca  9812              LDR      r0,[sp,#0x48]
0002cc  6880              LDR      r0,[r0,#8]
0002ce  6801              LDR      r1,[r0,#0]
0002d0  910e              STR      r1,[sp,#0x38]
0002d2  6840              LDR      r0,[r0,#4]
0002d4  900f              STR      r0,[sp,#0x3c]
;;;293      GUI_MoveRect(&ClipRect, -pObj->Widget.Win.Rect.x0, -pObj->Widget.Win.Rect.y0);
0002d6  f9b40002          LDRSH    r0,[r4,#2]
0002da  f1c00200          RSB      r2,r0,#0
0002de  f9b40000          LDRSH    r0,[r4,#0]
0002e2  f1c00100          RSB      r1,r0,#0
0002e6  a80e              ADD      r0,sp,#0x38
0002e8  f7fffffe          BL       GUI_MoveRect
;;;294      WM_GetInsideRectExScrollbar(hObj, &Rect);
0002ec  a90c              ADD      r1,sp,#0x30
0002ee  9810              LDR      r0,[sp,#0x40]
0002f0  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;295      GUI__IntersectRect(&ClipRect, &Rect);
0002f4  a90c              ADD      r1,sp,#0x30
0002f6  a80e              ADD      r0,sp,#0x38
0002f8  f7fffffe          BL       GUI__IntersectRect
;;;296      /* Set drawing color, font and text mode */
;;;297      LCD_SetColor(pObj->Props.aTextColor[0]);
0002fc  6c60              LDR      r0,[r4,#0x44]
0002fe  f7fffffe          BL       LCD_SetColor
;;;298      GUI_SetFont(pObj->Props.pFont);
000302  6da0              LDR      r0,[r4,#0x58]
000304  f7fffffe          BL       GUI_SetFont
;;;299      GUI_SetTextMode(GUI_TM_TRANS);
000308  2002              MOVS     r0,#2
00030a  f7fffffe          BL       GUI_SetTextMode
;;;300      /* Sort before drawing, because scroll position may change */
;;;301      if (pObj->hSort && (pObj->SortIndex >= 0)) {
00030e  f8b40092          LDRH     r0,[r4,#0x92]
000312  b180              CBZ      r0,|L1.822|
000314  6ea0              LDR      r0,[r4,#0x68]
000316  2800              CMP      r0,#0
000318  db0d              BLT      |L1.822|
;;;302        LISTVIEW_SORT * pSort;
;;;303        pSort = (LISTVIEW_SORT *)GUI_ALLOC_h2p(pObj->hSort);
00031a  f9b40092          LDRSH    r0,[r4,#0x92]
00031e  f7fffffe          BL       GUI_ALLOC_h2p
000322  4680              MOV      r8,r0
;;;304        if (pSort->fpSort(hObj)) {
000324  f8d81004          LDR      r1,[r8,#4]
000328  9810              LDR      r0,[sp,#0x40]
00032a  4788              BLX      r1
00032c  b110              CBZ      r0,|L1.820|
                  |L1.814|
;;;305          return; /* Return on error */
;;;306        }
;;;307      }
;;;308      /* Calculate end row after sorting, because scroll position may have changed */
;;;309      EndRow = pObj->ScrollStateV.v + (((NumVisRows + 1) > NumRows) ? NumRows : NumVisRows + 1);
;;;310      /* Do the drawing */
;;;311      for (i = pObj->ScrollStateV.v; i < EndRow; i++) {
;;;312        pRow = _GetpRow(pObj, i);
;;;313        if (pRow) {
;;;314          Rect.y0 = yPos;
;;;315          /* Break when all other rows are outside the drawing area */
;;;316          if (Rect.y0 > ClipRect.y1) {
;;;317            break;
;;;318          }
;;;319          Rect.y1 = yPos + RowDistY - 1;
;;;320          /* Make sure that we draw only when row is in drawing area */
;;;321          if (Rect.y1 >= ClipRect.y0) {
;;;322            int ColorIndex;
;;;323            /* Set background color */
;;;324            if (pRow->Disabled) {
;;;325              ColorIndex = LISTVIEW_CI_DISABLED;
;;;326            } else if (i == pObj->Sel) {
;;;327              ColorIndex = (pObj->Widget.State & WIDGET_STATE_FOCUS) ? LISTVIEW_CI_SELFOCUS : LISTVIEW_CI_SEL;
;;;328            } else {
;;;329              ColorIndex = LISTVIEW_CI_UNSEL;
;;;330            }
;;;331            LCD_SetBkColor(pObj->Props.aBkColor[ColorIndex]);
;;;332            /* Iterate over all columns */
;;;333            if (pObj->ShowGrid) {
;;;334              Rect.y1--;
;;;335            }
;;;336            xPos = EffectSize - pObj->ScrollStateH.v;
;;;337            for (j = 0; j < NumColumns; j++) {
;;;338              Width   = HEADER_GetItemWidth(pObj->hHeader, j);
;;;339              Rect.x0 = xPos;
;;;340              /* Break when all other columns are outside the drawing area */
;;;341              if (Rect.x0 > ClipRect.x1) {
;;;342                break;
;;;343              }
;;;344              Rect.x1 = xPos + Width - 1;
;;;345              /* Make sure that we draw only when column is in drawing area */
;;;346              if (Rect.x1 >= ClipRect.x0) {
;;;347                LISTVIEW_COLUMN* pColumn;
;;;348                LISTVIEW_CELL* pCell;
;;;349                pCell = (LISTVIEW_CELL*)GUI_ARRAY_GetpItem(&pRow->CellArray, j);
;;;350                if (pCell) {
;;;351                  if (pCell->hCellInfo) {
;;;352                    LISTVIEW_CELL_INFO* pCellInfo;
;;;353                    pCellInfo = (LISTVIEW_CELL_INFO*) GUI_ALLOC_h2p(pCell->hCellInfo);
;;;354                    LCD_SetBkColor(pCellInfo->aBkColor[ColorIndex]);
;;;355                    LCD_SetColor(pCellInfo->aTextColor[ColorIndex]);
;;;356                  } else {
;;;357                    LCD_SetColor(pObj->Props.aTextColor[ColorIndex]);
;;;358                  }
;;;359                  /* Clear background */
;;;360                  GUI_ClearRect(Rect.x0, Rect.y0, Rect.x1, Rect.y1);
;;;361                  /* Draw text */
;;;362                  Rect.x0 += LBorder;
;;;363                  Rect.x1 -= RBorder;
;;;364                  pColumn = (LISTVIEW_COLUMN*) GUI_ARRAY_GetpItem(&pObj->ColumnArray, j);
;;;365                  Align = pColumn->Align;
;;;366                  GUI_DispStringInRect(pCell->acText, &Rect, Align);
;;;367                  if (pCell->hCellInfo) {
;;;368                    LCD_SetBkColor(pObj->Props.aBkColor[ColorIndex]);
;;;369                  }
;;;370                }
;;;371              }
;;;372              xPos += Width;
;;;373            }
;;;374            /* Clear unused area to the right of items */
;;;375            if (xPos <= ClipRect.x1) {
;;;376              GUI_ClearRect(xPos, Rect.y0, ClipRect.x1, Rect.y1);
;;;377            }
;;;378          }
;;;379          yPos += RowDistY;
;;;380        }
;;;381      }
;;;382      /* Clear unused area below items */
;;;383      if (yPos <= ClipRect.y1) {
;;;384        LCD_SetBkColor(pObj->Props.aBkColor[0]);
;;;385        GUI_ClearRect(ClipRect.x0, yPos, ClipRect.x1, ClipRect.y1);
;;;386      }
;;;387      /* Draw grid */
;;;388      if (pObj->ShowGrid) {
;;;389        LCD_SetColor(pObj->Props.GridColor);
;;;390        yPos = HEADER_GetHeight(pObj->hHeader) + EffectSize - 1;
;;;391        for (i = 0; i < NumVisRows; i++) {
;;;392          yPos += RowDistY;
;;;393          /* Break when all other rows are outside the drawing area */
;;;394          if (yPos > ClipRect.y1) {
;;;395            break;
;;;396          }
;;;397          /* Make sure that we draw only when row is in drawing area */
;;;398          if (yPos >= ClipRect.y0) {
;;;399            GUI_DrawHLine(yPos, ClipRect.x0, ClipRect.x1);
;;;400          }
;;;401        }
;;;402        xPos = EffectSize - pObj->ScrollStateH.v;
;;;403        for (i = 0; i < NumColumns; i++) {
;;;404          xPos += HEADER_GetItemWidth(pObj->hHeader, i);
;;;405          /* Break when all other columns are outside the drawing area */
;;;406          if (xPos > ClipRect.x1) {
;;;407            break;
;;;408          }
;;;409          /* Make sure that we draw only when column is in drawing area */
;;;410          if (xPos >= ClipRect.x0) {
;;;411            GUI_DrawVLine(xPos, ClipRect.y0, ClipRect.y1);
;;;412          }
;;;413        }
;;;414      }
;;;415      /* Draw the effect */
;;;416      WIDGET__EFFECT_DrawDown(&pObj->Widget);
;;;417    }
00032e  b013              ADD      sp,sp,#0x4c
000330  e8bd8ff0          POP      {r4-r11,pc}
                  |L1.820|
000334  bf00              NOP                            ;307
                  |L1.822|
000336  6fe2              LDR      r2,[r4,#0x7c]         ;309
000338  980a              LDR      r0,[sp,#0x28]         ;309
00033a  1c40              ADDS     r0,r0,#1              ;309
00033c  990b              LDR      r1,[sp,#0x2c]         ;309
00033e  4288              CMP      r0,r1                 ;309
000340  dd01              BLE      |L1.838|
000342  980b              LDR      r0,[sp,#0x2c]         ;309
000344  e002              B        |L1.844|
                  |L1.838|
000346  980a              LDR      r0,[sp,#0x28]         ;309
000348  f1000001          ADD      r0,r0,#1              ;309
                  |L1.844|
00034c  4410              ADD      r0,r0,r2              ;309
00034e  9002              STR      r0,[sp,#8]            ;309
000350  6fe6              LDR      r6,[r4,#0x7c]         ;311
000352  e0dc              B        |L1.1294|
                  |L1.852|
000354  4631              MOV      r1,r6                 ;312
000356  4620              MOV      r0,r4                 ;312
000358  f7fffffe          BL       _GetpRow
00035c  4682              MOV      r10,r0                ;312
00035e  f1ba0f00          CMP      r10,#0                ;313
000362  d07d              BEQ      |L1.1120|
000364  b228              SXTH     r0,r5                 ;314
000366  f8ad0032          STRH     r0,[sp,#0x32]         ;314
00036a  f9bd0032          LDRSH    r0,[sp,#0x32]         ;316
00036e  f9bd103e          LDRSH    r1,[sp,#0x3e]         ;316
000372  4288              CMP      r0,r1                 ;316
000374  dd00              BLE      |L1.888|
000376  e0ce              B        |L1.1302|
                  |L1.888|
000378  9805              LDR      r0,[sp,#0x14]         ;319
00037a  4428              ADD      r0,r0,r5              ;319
00037c  f1a00001          SUB      r0,r0,#1              ;319
000380  b200              SXTH     r0,r0                 ;319
000382  f8ad0036          STRH     r0,[sp,#0x36]         ;319
000386  f9bd0036          LDRSH    r0,[sp,#0x36]         ;321
00038a  f9bd103a          LDRSH    r1,[sp,#0x3a]         ;321
00038e  4288              CMP      r0,r1                 ;321
000390  db67              BLT      |L1.1122|
000392  f89a0004          LDRB     r0,[r10,#4]           ;324
000396  b110              CBZ      r0,|L1.926|
000398  f04f0803          MOV      r8,#3                 ;325
00039c  e00f              B        |L1.958|
                  |L1.926|
00039e  6e20              LDR      r0,[r4,#0x60]         ;326
0003a0  42b0              CMP      r0,r6                 ;326
0003a2  d10a              BNE      |L1.954|
0003a4  8ce0              LDRH     r0,[r4,#0x26]         ;327
0003a6  f0100f01          TST      r0,#1                 ;327
0003aa  d002              BEQ      |L1.946|
0003ac  f04f0002          MOV      r0,#2                 ;327
0003b0  e001              B        |L1.950|
                  |L1.946|
0003b2  f04f0001          MOV      r0,#1                 ;327
                  |L1.950|
0003b6  4680              MOV      r8,r0                 ;327
0003b8  e001              B        |L1.958|
                  |L1.954|
0003ba  f04f0800          MOV      r8,#0                 ;329
                  |L1.958|
0003be  f1040134          ADD      r1,r4,#0x34           ;331
0003c2  f8510028          LDR      r0,[r1,r8,LSL #2]     ;331
0003c6  f7fffffe          BL       LCD_SetBkColor
0003ca  6e60              LDR      r0,[r4,#0x64]         ;333
0003cc  b130              CBZ      r0,|L1.988|
0003ce  f8bd0036          LDRH     r0,[sp,#0x36]         ;334
0003d2  f1a00001          SUB      r0,r0,#1              ;334
0003d6  b200              SXTH     r0,r0                 ;334
0003d8  f8ad0036          STRH     r0,[sp,#0x36]         ;334
                  |L1.988|
0003dc  f04f0088          MOV      r0,#0x88              ;336
0003e0  5900              LDR      r0,[r0,r4]            ;336
0003e2  ebab0700          SUB      r7,r11,r0             ;336
0003e6  f04f0000          MOV      r0,#0                 ;337
0003ea  9003              STR      r0,[sp,#0xc]          ;337
0003ec  e078              B        |L1.1248|
                  |L1.1006|
0003ee  f9b40028          LDRSH    r0,[r4,#0x28]         ;338
0003f2  9903              LDR      r1,[sp,#0xc]          ;338
0003f4  f7fffffe          BL       HEADER_GetItemWidth
0003f8  9006              STR      r0,[sp,#0x18]         ;338
0003fa  b238              SXTH     r0,r7                 ;339
0003fc  f8ad0030          STRH     r0,[sp,#0x30]         ;339
000400  f9bd0030          LDRSH    r0,[sp,#0x30]         ;341
000404  f9bd103c          LDRSH    r1,[sp,#0x3c]         ;341
000408  4288              CMP      r0,r1                 ;341
00040a  dd00              BLE      |L1.1038|
00040c  e06c              B        |L1.1256|
                  |L1.1038|
00040e  9806              LDR      r0,[sp,#0x18]         ;344
000410  4438              ADD      r0,r0,r7              ;344
000412  f1a00001          SUB      r0,r0,#1              ;344
000416  b200              SXTH     r0,r0                 ;344
000418  f8ad0034          STRH     r0,[sp,#0x34]         ;344
00041c  f9bd0034          LDRSH    r0,[sp,#0x34]         ;346
000420  f9bd1038          LDRSH    r1,[sp,#0x38]         ;346
000424  4288              CMP      r0,r1                 ;346
000426  db55              BLT      |L1.1236|
000428  4650              MOV      r0,r10                ;349
00042a  9903              LDR      r1,[sp,#0xc]          ;349
00042c  f7fffffe          BL       GUI_ARRAY_GetpItem
000430  4681              MOV      r9,r0                 ;349
000432  f1b90f00          CMP      r9,#0                 ;350
000436  d04c              BEQ      |L1.1234|
000438  f8b90000          LDRH     r0,[r9,#0]            ;351
00043c  b190              CBZ      r0,|L1.1124|
00043e  f9b90000          LDRSH    r0,[r9,#0]            ;353
000442  f7fffffe          BL       GUI_ALLOC_h2p
000446  9000              STR      r0,[sp,#0]            ;353
000448  9900              LDR      r1,[sp,#0]            ;354
00044a  f8510028          LDR      r0,[r1,r8,LSL #2]     ;354
00044e  f7fffffe          BL       LCD_SetBkColor
000452  9900              LDR      r1,[sp,#0]            ;355
000454  3110              ADDS     r1,r1,#0x10           ;355
000456  f8510028          LDR      r0,[r1,r8,LSL #2]     ;355
00045a  f7fffffe          BL       LCD_SetColor
00045e  e007              B        |L1.1136|
                  |L1.1120|
000460  e053              B        |L1.1290|
                  |L1.1122|
000462  e050              B        |L1.1286|
                  |L1.1124|
000464  f1040144          ADD      r1,r4,#0x44           ;357
000468  f8510028          LDR      r0,[r1,r8,LSL #2]     ;357
00046c  f7fffffe          BL       LCD_SetColor
                  |L1.1136|
000470  f9bd3036          LDRSH    r3,[sp,#0x36]         ;360
000474  f9bd2034          LDRSH    r2,[sp,#0x34]         ;360
000478  f9bd1032          LDRSH    r1,[sp,#0x32]         ;360
00047c  f9bd0030          LDRSH    r0,[sp,#0x30]         ;360
000480  f7fffffe          BL       GUI_ClearRect
000484  f8bd1030          LDRH     r1,[sp,#0x30]         ;362
000488  9808              LDR      r0,[sp,#0x20]         ;362
00048a  4408              ADD      r0,r0,r1              ;362
00048c  b200              SXTH     r0,r0                 ;362
00048e  f8ad0030          STRH     r0,[sp,#0x30]         ;362
000492  f8bd1034          LDRH     r1,[sp,#0x34]         ;363
000496  9807              LDR      r0,[sp,#0x1c]         ;363
000498  eba10000          SUB      r0,r1,r0              ;363
00049c  b200              SXTH     r0,r0                 ;363
00049e  f8ad0034          STRH     r0,[sp,#0x34]         ;363
0004a2  f104002e          ADD      r0,r4,#0x2e           ;364
0004a6  9903              LDR      r1,[sp,#0xc]          ;364
0004a8  f7fffffe          BL       GUI_ARRAY_GetpItem
0004ac  9001              STR      r0,[sp,#4]            ;364
0004ae  9801              LDR      r0,[sp,#4]            ;365
0004b0  7800              LDRB     r0,[r0,#0]            ;365
0004b2  9004              STR      r0,[sp,#0x10]         ;365
0004b4  a90c              ADD      r1,sp,#0x30           ;366
0004b6  f1090002          ADD      r0,r9,#2              ;366
0004ba  9a04              LDR      r2,[sp,#0x10]         ;366
0004bc  f7fffffe          BL       GUI_DispStringInRect
0004c0  f8b90000          LDRH     r0,[r9,#0]            ;367
0004c4  b128              CBZ      r0,|L1.1234|
0004c6  f1040134          ADD      r1,r4,#0x34           ;368
0004ca  f8510028          LDR      r0,[r1,r8,LSL #2]     ;368
0004ce  f7fffffe          BL       LCD_SetBkColor
                  |L1.1234|
0004d2  bf00              NOP                            ;371
                  |L1.1236|
0004d4  9806              LDR      r0,[sp,#0x18]         ;372
0004d6  4407              ADD      r7,r7,r0              ;372
0004d8  9803              LDR      r0,[sp,#0xc]          ;337
0004da  f1000001          ADD      r0,r0,#1              ;337
0004de  9003              STR      r0,[sp,#0xc]          ;337
                  |L1.1248|
0004e0  9909              LDR      r1,[sp,#0x24]         ;337
0004e2  9803              LDR      r0,[sp,#0xc]          ;337
0004e4  4288              CMP      r0,r1                 ;337
0004e6  db82              BLT      |L1.1006|
                  |L1.1256|
0004e8  bf00              NOP                            ;342
0004ea  f9bd003c          LDRSH    r0,[sp,#0x3c]         ;375
0004ee  42b8              CMP      r0,r7                 ;375
0004f0  db08              BLT      |L1.1284|
0004f2  f9bd3036          LDRSH    r3,[sp,#0x36]         ;376
0004f6  f9bd203c          LDRSH    r2,[sp,#0x3c]         ;376
0004fa  f9bd1032          LDRSH    r1,[sp,#0x32]         ;376
0004fe  4638              MOV      r0,r7                 ;376
000500  f7fffffe          BL       GUI_ClearRect
                  |L1.1284|
000504  bf00              NOP                            ;378
                  |L1.1286|
000506  9805              LDR      r0,[sp,#0x14]         ;379
000508  4405              ADD      r5,r5,r0              ;379
                  |L1.1290|
00050a  f1060601          ADD      r6,r6,#1              ;311
                  |L1.1294|
00050e  9802              LDR      r0,[sp,#8]            ;311
000510  4286              CMP      r6,r0                 ;311
000512  f6ffaf1f          BLT      |L1.852|
                  |L1.1302|
000516  bf00              NOP                            ;317
000518  f9bd003e          LDRSH    r0,[sp,#0x3e]         ;383
00051c  42a8              CMP      r0,r5                 ;383
00051e  db0b              BLT      |L1.1336|
000520  6b60              LDR      r0,[r4,#0x34]         ;384
000522  f7fffffe          BL       LCD_SetBkColor
000526  f9bd303e          LDRSH    r3,[sp,#0x3e]         ;385
00052a  f9bd203c          LDRSH    r2,[sp,#0x3c]         ;385
00052e  f9bd0038          LDRSH    r0,[sp,#0x38]         ;385
000532  4629              MOV      r1,r5                 ;385
000534  f7fffffe          BL       GUI_ClearRect
                  |L1.1336|
000538  6e60              LDR      r0,[r4,#0x64]         ;388
00053a  b3b8              CBZ      r0,|L1.1452|
00053c  6d60              LDR      r0,[r4,#0x54]         ;389
00053e  f7fffffe          BL       LCD_SetColor
000542  f9b40028          LDRSH    r0,[r4,#0x28]         ;390
000546  f7fffffe          BL       HEADER_GetHeight
00054a  4458              ADD      r0,r0,r11             ;390
00054c  f1a00501          SUB      r5,r0,#1              ;390
000550  f04f0600          MOV      r6,#0                 ;391
000554  e013              B        |L1.1406|
                  |L1.1366|
000556  9805              LDR      r0,[sp,#0x14]         ;392
000558  4405              ADD      r5,r5,r0              ;392
00055a  f9bd003e          LDRSH    r0,[sp,#0x3e]         ;394
00055e  42a8              CMP      r0,r5                 ;394
000560  da00              BGE      |L1.1380|
000562  e00f              B        |L1.1412|
                  |L1.1380|
000564  f9bd003a          LDRSH    r0,[sp,#0x3a]         ;398
000568  42a8              CMP      r0,r5                 ;398
00056a  dc06              BGT      |L1.1402|
00056c  f9bd203c          LDRSH    r2,[sp,#0x3c]         ;399
000570  f9bd1038          LDRSH    r1,[sp,#0x38]         ;399
000574  4628              MOV      r0,r5                 ;399
000576  f7fffffe          BL       GUI_DrawHLine
                  |L1.1402|
00057a  f1060601          ADD      r6,r6,#1              ;391
                  |L1.1406|
00057e  980a              LDR      r0,[sp,#0x28]         ;391
000580  4286              CMP      r6,r0                 ;391
000582  dbe8              BLT      |L1.1366|
                  |L1.1412|
000584  bf00              NOP                            ;395
000586  f04f0088          MOV      r0,#0x88              ;402
00058a  5900              LDR      r0,[r0,r4]            ;402
00058c  ebab0700          SUB      r7,r11,r0             ;402
000590  f04f0600          MOV      r6,#0                 ;403
000594  e018              B        |L1.1480|
                  |L1.1430|
000596  f9b40028          LDRSH    r0,[r4,#0x28]         ;404
00059a  4631              MOV      r1,r6                 ;404
00059c  f7fffffe          BL       HEADER_GetItemWidth
0005a0  4407              ADD      r7,r7,r0              ;404
0005a2  f9bd003c          LDRSH    r0,[sp,#0x3c]         ;406
0005a6  42b8              CMP      r0,r7                 ;406
0005a8  da01              BGE      |L1.1454|
0005aa  e010              B        |L1.1486|
                  |L1.1452|
0005ac  e010              B        |L1.1488|
                  |L1.1454|
0005ae  f9bd0038          LDRSH    r0,[sp,#0x38]         ;410
0005b2  42b8              CMP      r0,r7                 ;410
0005b4  dc06              BGT      |L1.1476|
0005b6  f9bd203e          LDRSH    r2,[sp,#0x3e]         ;411
0005ba  f9bd103a          LDRSH    r1,[sp,#0x3a]         ;411
0005be  4638              MOV      r0,r7                 ;411
0005c0  f7fffffe          BL       GUI_DrawVLine
                  |L1.1476|
0005c4  f1060601          ADD      r6,r6,#1              ;403
                  |L1.1480|
0005c8  9809              LDR      r0,[sp,#0x24]         ;403
0005ca  4286              CMP      r6,r0                 ;403
0005cc  dbe3              BLT      |L1.1430|
                  |L1.1486|
0005ce  bf00              NOP                            ;407
                  |L1.1488|
0005d0  4620              MOV      r0,r4                 ;416
0005d2  f7fffffe          BL       WIDGET__EFFECT_DrawDown
0005d6  bf00              NOP      
0005d8  e6a9              B        |L1.814|
;;;418    
                          ENDP

                  _SetSelFromPos PROC
;;;452    */
;;;453    static void _SetSelFromPos(LISTVIEW_Handle hObj, LISTVIEW_Obj* pObj, const GUI_PID_STATE* pState) {
0005da  e92d47fc          PUSH     {r2-r10,lr}
0005de  4682              MOV      r10,r0
0005e0  460c              MOV      r4,r1
0005e2  4615              MOV      r5,r2
;;;454      GUI_RECT Rect;
;;;455      int x, y, HeaderHeight;
;;;456      HeaderHeight = HEADER_GetHeight(pObj->hHeader);
0005e4  f9b40028          LDRSH    r0,[r4,#0x28]
0005e8  f7fffffe          BL       HEADER_GetHeight
0005ec  4680              MOV      r8,r0
;;;457      WM_GetInsideRectExScrollbar(hObj, &Rect);
0005ee  4669              MOV      r1,sp
0005f0  4650              MOV      r0,r10
0005f2  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;458      x = pState->x - Rect.x0;
0005f6  f9bd1000          LDRSH    r1,[sp,#0]
0005fa  6828              LDR      r0,[r5,#0]
0005fc  eba00701          SUB      r7,r0,r1
;;;459      y = pState->y - Rect.y0 - HeaderHeight;
000600  f9bd1002          LDRSH    r1,[sp,#2]
000604  6868              LDR      r0,[r5,#4]
000606  eba00001          SUB      r0,r0,r1
00060a  eba00608          SUB      r6,r0,r8
;;;460      Rect.x1 -= Rect.x0;
00060e  f8bd0004          LDRH     r0,[sp,#4]
000612  f8bd1000          LDRH     r1,[sp,#0]
000616  eba00001          SUB      r0,r0,r1
00061a  b200              SXTH     r0,r0
00061c  f8ad0004          STRH     r0,[sp,#4]
;;;461      Rect.y1 -= Rect.y0;
000620  f8bd0006          LDRH     r0,[sp,#6]
000624  f8bd1002          LDRH     r1,[sp,#2]
000628  eba00001          SUB      r0,r0,r1
00062c  b200              SXTH     r0,r0
00062e  f8ad0006          STRH     r0,[sp,#6]
;;;462      if ((x >= 0) && (x <= Rect.x1) && (y >= 0) && (y <= (Rect.y1 - HeaderHeight))) {
000632  2f00              CMP      r7,#0
000634  db1e              BLT      |L1.1652|
000636  f9bd0004          LDRSH    r0,[sp,#4]
00063a  42b8              CMP      r0,r7
00063c  db1a              BLT      |L1.1652|
00063e  2e00              CMP      r6,#0
000640  db18              BLT      |L1.1652|
000642  f9bd0006          LDRSH    r0,[sp,#6]
000646  eba00008          SUB      r0,r0,r8
00064a  42b0              CMP      r0,r6
00064c  db12              BLT      |L1.1652|
;;;463        unsigned Sel;
;;;464        Sel = (y / LISTVIEW__GetRowDistY(pObj)) + pObj->ScrollStateV.v;
00064e  4620              MOV      r0,r4
000650  f7fffffe          BL       LISTVIEW__GetRowDistY
000654  fbb6f1f0          UDIV     r1,r6,r0
000658  6fe0              LDR      r0,[r4,#0x7c]
00065a  eb010900          ADD      r9,r1,r0
;;;465        if (Sel < LISTVIEW__GetNumRows(pObj)) {
00065e  4620              MOV      r0,r4
000660  f7fffffe          BL       LISTVIEW__GetNumRows
000664  4548              CMP      r0,r9
000666  d904              BLS      |L1.1650|
;;;466          LISTVIEW__SetSel(hObj, pObj, Sel);
000668  464a              MOV      r2,r9
00066a  4621              MOV      r1,r4
00066c  4650              MOV      r0,r10
00066e  f7fffffe          BL       LISTVIEW__SetSel
                  |L1.1650|
;;;467        }
;;;468      }
000672  bf00              NOP      
                  |L1.1652|
;;;469    }
000674  e8bd87fc          POP      {r2-r10,pc}
;;;470    
                          ENDP

                  _NotifyOwner PROC
;;;478    */
;;;479    static void _NotifyOwner(WM_HWIN hObj, int Notification) {
000678  b5fe              PUSH     {r1-r7,lr}
00067a  4604              MOV      r4,r0
00067c  460d              MOV      r5,r1
;;;480      WM_MESSAGE Msg = {0};
00067e  f04f0000          MOV      r0,#0
000682  9000              STR      r0,[sp,#0]
000684  9001              STR      r0,[sp,#4]
000686  9002              STR      r0,[sp,#8]
;;;481      WM_HWIN hOwner;
;;;482      LISTVIEW_Obj* pObj    = LISTVIEW_H2P(hObj);
000688  4620              MOV      r0,r4
00068a  f7fffffe          BL       GUI_ALLOC_h2p
00068e  4606              MOV      r6,r0
;;;483      hOwner = pObj->hOwner ? pObj->hOwner : WM_GetParent(hObj);
000690  f8b60090          LDRH     r0,[r6,#0x90]
000694  b110              CBZ      r0,|L1.1692|
000696  f9b60090          LDRSH    r0,[r6,#0x90]
00069a  e002              B        |L1.1698|
                  |L1.1692|
00069c  4620              MOV      r0,r4
00069e  f7fffffe          BL       WM_GetParent
                  |L1.1698|
0006a2  4607              MOV      r7,r0
;;;484      Msg.MsgId   = WM_NOTIFY_PARENT;
0006a4  f04f0026          MOV      r0,#0x26
0006a8  9000              STR      r0,[sp,#0]
;;;485      Msg.Data.v  = Notification;
0006aa  9502              STR      r5,[sp,#8]
;;;486      Msg.hWinSrc = hObj;
0006ac  f8ad4006          STRH     r4,[sp,#6]
;;;487      WM__SendMessage(hOwner, &Msg);
0006b0  4669              MOV      r1,sp
0006b2  4638              MOV      r0,r7
0006b4  f7fffffe          BL       WM__SendMessage
;;;488    }
0006b8  bdfe              POP      {r1-r7,pc}
;;;489    
                          ENDP

                  _OnTouch PROC
;;;493    */
;;;494    static void _OnTouch(LISTVIEW_Handle hObj, LISTVIEW_Obj* pObj, WM_MESSAGE*pMsg) {
0006ba  e92d41f0          PUSH     {r4-r8,lr}
0006be  4680              MOV      r8,r0
0006c0  460e              MOV      r6,r1
0006c2  4615              MOV      r5,r2
;;;495      int Notification;
;;;496      const GUI_PID_STATE* pState = (const GUI_PID_STATE*)pMsg->Data.p;
0006c4  68af              LDR      r7,[r5,#8]
;;;497      GUI_USE_PARA(pObj);
0006c6  bf00              NOP      
;;;498      if (pMsg->Data.p) {  /* Something happened in our area (pressed or released) */
0006c8  68a8              LDR      r0,[r5,#8]
0006ca  b178              CBZ      r0,|L1.1772|
;;;499        if (pState->Pressed) {
0006cc  7a38              LDRB     r0,[r7,#8]
0006ce  b150              CBZ      r0,|L1.1766|
;;;500          _SetSelFromPos(hObj, pObj, pState);
0006d0  463a              MOV      r2,r7
0006d2  4631              MOV      r1,r6
0006d4  4640              MOV      r0,r8
0006d6  f7fffffe          BL       _SetSelFromPos
;;;501          Notification = WM_NOTIFICATION_CLICKED;
0006da  f04f0401          MOV      r4,#1
;;;502          WM_SetFocus(hObj);
0006de  4640              MOV      r0,r8
0006e0  f7fffffe          BL       WM_SetFocus
0006e4  e004              B        |L1.1776|
                  |L1.1766|
;;;503        } else {
;;;504          Notification = WM_NOTIFICATION_RELEASED;
0006e6  f04f0402          MOV      r4,#2
0006ea  e001              B        |L1.1776|
                  |L1.1772|
;;;505        }
;;;506      } else {
;;;507        Notification = WM_NOTIFICATION_MOVED_OUT;
0006ec  f04f0403          MOV      r4,#3
                  |L1.1776|
;;;508      }
;;;509      _NotifyOwner(hObj, Notification);
0006f0  4621              MOV      r1,r4
0006f2  4640              MOV      r0,r8
0006f4  f7fffffe          BL       _NotifyOwner
;;;510    }
0006f8  e8bd81f0          POP      {r4-r8,pc}
;;;511    
                          ENDP

                  _GetXSize PROC
;;;518    */
;;;519    static int _GetXSize(LISTVIEW_Handle hObj) {
0006fc  b51c              PUSH     {r2-r4,lr}
0006fe  4604              MOV      r4,r0
;;;520      GUI_RECT Rect;
;;;521      WM_GetInsideRectExScrollbar(hObj, &Rect);
000700  4669              MOV      r1,sp
000702  4620              MOV      r0,r4
000704  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;522      return Rect.x1 - Rect.x0 + 1;
000708  f9bd0004          LDRSH    r0,[sp,#4]
00070c  f9bd1000          LDRSH    r1,[sp,#0]
000710  1a40              SUBS     r0,r0,r1
000712  1c40              ADDS     r0,r0,#1
;;;523    }
000714  bd1c              POP      {r2-r4,pc}
;;;524    
                          ENDP

                  _GetHeaderWidth PROC
;;;535    */
;;;536    static int _GetHeaderWidth(LISTVIEW_Obj * pObj) {
000716  e92d41f0          PUSH     {r4-r8,lr}
00071a  4605              MOV      r5,r0
;;;537      int NumItems, i, r = 1;
00071c  f04f0701          MOV      r7,#1
;;;538      NumItems = HEADER_GetNumItems(pObj->hHeader);
000720  f9b50028          LDRSH    r0,[r5,#0x28]
000724  f7fffffe          BL       HEADER_GetNumItems
000728  4606              MOV      r6,r0
;;;539      if (NumItems) {
00072a  b16e              CBZ      r6,|L1.1864|
;;;540        for (i = 0, r = 0; i < NumItems; i++) {
00072c  f04f0400          MOV      r4,#0
000730  4627              MOV      r7,r4
000732  e007              B        |L1.1860|
                  |L1.1844|
;;;541          r += HEADER_GetItemWidth(pObj->hHeader, i);
000734  f9b50028          LDRSH    r0,[r5,#0x28]
000738  4621              MOV      r1,r4
00073a  f7fffffe          BL       HEADER_GetItemWidth
00073e  4407              ADD      r7,r7,r0
000740  f1040401          ADD      r4,r4,#1              ;540
                  |L1.1860|
000744  42b4              CMP      r4,r6                 ;540
000746  dbf5              BLT      |L1.1844|
                  |L1.1864|
;;;542        }
;;;543      }
;;;544      return r;
000748  4638              MOV      r0,r7
;;;545    }
00074a  e8bd81f0          POP      {r4-r8,pc}
;;;546    
                          ENDP

                  LISTVIEW__UpdateScrollParas PROC
;;;580    */
;;;581    int LISTVIEW__UpdateScrollParas(LISTVIEW_Handle hObj, LISTVIEW_Obj* pObj) {
00074e  e92d47f0          PUSH     {r4-r10,lr}
000752  4681              MOV      r9,r0
000754  460c              MOV      r4,r1
;;;582      int NumRows, IsRequired;
;;;583      int xSize, xSizeHeader;
;;;584      unsigned NumVisibleRows;
;;;585      NumVisibleRows = _GetNumVisibleRows(hObj, pObj);
000756  4621              MOV      r1,r4
000758  4648              MOV      r0,r9
00075a  f7fffffe          BL       _GetNumVisibleRows
00075e  4680              MOV      r8,r0
;;;586      xSize          = _GetXSize(hObj);
000760  4648              MOV      r0,r9
000762  f7fffffe          BL       _GetXSize
000766  4606              MOV      r6,r0
;;;587      xSizeHeader    = _GetHeaderWidth(pObj);
000768  4620              MOV      r0,r4
00076a  f7fffffe          BL       _GetHeaderWidth
00076e  4607              MOV      r7,r0
;;;588      if (pObj->Flags & LISTVIEW_SF_AUTOSCROLLBAR_V) {
000770  f8940097          LDRB     r0,[r4,#0x97]
000774  f0100f02          TST      r0,#2
000778  d00f              BEQ      |L1.1946|
;;;589        IsRequired = (NumVisibleRows < GUI_ARRAY_GetNumItems(&pObj->RowArray));
00077a  f104002a          ADD      r0,r4,#0x2a
00077e  f7fffffe          BL       GUI_ARRAY_GetNumItems
000782  4540              CMP      r0,r8
000784  d902              BLS      |L1.1932|
000786  f04f0001          MOV      r0,#1
00078a  e001              B        |L1.1936|
                  |L1.1932|
00078c  f04f0000          MOV      r0,#0
                  |L1.1936|
000790  4682              MOV      r10,r0
;;;590        WM_SetScrollbarV(hObj, IsRequired);
000792  4651              MOV      r1,r10
000794  4648              MOV      r0,r9
000796  f7fffffe          BL       WM_SetScrollbarV
                  |L1.1946|
;;;591      }
;;;592      if (pObj->Flags & LISTVIEW_SF_AUTOSCROLLBAR_H) {
00079a  f8940097          LDRB     r0,[r4,#0x97]
00079e  f0100f01          TST      r0,#1
0007a2  d010              BEQ      |L1.1990|
;;;593        IsRequired  = (xSizeHeader > xSize);
0007a4  42b7              CMP      r7,r6
0007a6  dd02              BLE      |L1.1966|
0007a8  f04f0001          MOV      r0,#1
0007ac  e001              B        |L1.1970|
                  |L1.1966|
0007ae  f04f0000          MOV      r0,#0
                  |L1.1970|
0007b2  4682              MOV      r10,r0
;;;594        WM_SetScrollbarH(hObj, IsRequired);
0007b4  4651              MOV      r1,r10
0007b6  4648              MOV      r0,r9
0007b8  f7fffffe          BL       WM_SetScrollbarH
;;;595        NumVisibleRows = _GetNumVisibleRows(hObj, pObj);
0007bc  4621              MOV      r1,r4
0007be  4648              MOV      r0,r9
0007c0  f7fffffe          BL       _GetNumVisibleRows
0007c4  4680              MOV      r8,r0
                  |L1.1990|
;;;596      }
;;;597      NumRows = LISTVIEW__GetNumRows(pObj);
0007c6  4620              MOV      r0,r4
0007c8  f7fffffe          BL       LISTVIEW__GetNumRows
0007cc  4605              MOV      r5,r0
;;;598      /* update vertical scrollbar */
;;;599      pObj->ScrollStateV.PageSize = NumVisibleRows;
0007ce  f8c48080          STR      r8,[r4,#0x80]
;;;600      pObj->ScrollStateV.NumItems = (NumRows) ? NumRows : 1;
0007d2  b10d              CBZ      r5,|L1.2008|
0007d4  4628              MOV      r0,r5
0007d6  e001              B        |L1.2012|
                  |L1.2008|
0007d8  f04f0001          MOV      r0,#1
                  |L1.2012|
0007dc  67a0              STR      r0,[r4,#0x78]
;;;601      /* update horizontal scrollbar */
;;;602      pObj->ScrollStateH.PageSize = xSize;
0007de  f04f008c          MOV      r0,#0x8c
0007e2  5106              STR      r6,[r0,r4]
;;;603      pObj->ScrollStateH.NumItems = xSizeHeader;
0007e4  f8c47084          STR      r7,[r4,#0x84]
;;;604      return LISTVIEW__UpdateScrollPos(hObj, pObj);
0007e8  4621              MOV      r1,r4
0007ea  4648              MOV      r0,r9
0007ec  f7fffffe          BL       LISTVIEW__UpdateScrollPos
;;;605    }
0007f0  e8bd87f0          POP      {r4-r10,pc}
;;;606    
                          ENDP

                  _FreeAttached PROC
;;;613    */
;;;614    static void _FreeAttached(LISTVIEW_Obj * pObj) {
0007f4  e92d47f0          PUSH     {r4-r10,lr}
0007f8  4604              MOV      r4,r0
;;;615      int i, j, NumRows, NumColumns;
;;;616      NumRows    = LISTVIEW__GetNumRows(pObj);
0007fa  4620              MOV      r0,r4
0007fc  f7fffffe          BL       LISTVIEW__GetNumRows
000800  4680              MOV      r8,r0
;;;617      NumColumns = LISTVIEW__GetNumColumns(pObj);
000802  4620              MOV      r0,r4
000804  f7fffffe          BL       LISTVIEW__GetNumColumns
000808  4681              MOV      r9,r0
;;;618      for (i = 0; i < NumRows; i++) {
00080a  f04f0500          MOV      r5,#0
00080e  e01d              B        |L1.2124|
                  |L1.2064|
;;;619        LISTVIEW_ROW* pRow;
;;;620        pRow = (LISTVIEW_ROW*) GUI_ARRAY_GetpItem(&pObj->RowArray, i);
000810  4629              MOV      r1,r5
000812  f104002a          ADD      r0,r4,#0x2a
000816  f7fffffe          BL       GUI_ARRAY_GetpItem
00081a  4682              MOV      r10,r0
;;;621        /* Delete attached info items */
;;;622        for (j = 0; j < NumColumns; j++) {
00081c  f04f0600          MOV      r6,#0
000820  e00d              B        |L1.2110|
                  |L1.2082|
;;;623          LISTVIEW_CELL* pCell;
;;;624          pCell = (LISTVIEW_CELL*) GUI_ARRAY_GetpItem(&pRow->CellArray, j);
000822  4631              MOV      r1,r6
000824  4650              MOV      r0,r10
000826  f7fffffe          BL       GUI_ARRAY_GetpItem
00082a  4607              MOV      r7,r0
;;;625          if (pCell) {
00082c  b12f              CBZ      r7,|L1.2106|
;;;626            if (pCell->hCellInfo) {
00082e  8838              LDRH     r0,[r7,#0]
000830  b118              CBZ      r0,|L1.2106|
;;;627              GUI_ALLOC_Free(pCell->hCellInfo);
000832  f9b70000          LDRSH    r0,[r7,#0]
000836  f7fffffe          BL       GUI_ALLOC_Free
                  |L1.2106|
00083a  f1060601          ADD      r6,r6,#1              ;622
                  |L1.2110|
00083e  454e              CMP      r6,r9                 ;622
000840  dbef              BLT      |L1.2082|
;;;628            }
;;;629          }
;;;630        }
;;;631        /* Delete row */
;;;632        GUI_ARRAY_Delete(&pRow->CellArray);
000842  4650              MOV      r0,r10
000844  f7fffffe          BL       GUI_ARRAY_Delete
000848  f1050501          ADD      r5,r5,#1              ;618
                  |L1.2124|
00084c  4545              CMP      r5,r8                 ;618
00084e  dbdf              BLT      |L1.2064|
;;;633      }
;;;634      /* Delete sort object */
;;;635      if (pObj->hSort) {
000850  f8b40092          LDRH     r0,[r4,#0x92]
000854  b148              CBZ      r0,|L1.2154|
;;;636        ((LISTVIEW_SORT *)GUI_ALLOC_h2p(pObj->hSort))->fpFree(pObj->hSort);
000856  f9b40092          LDRSH    r0,[r4,#0x92]
00085a  f7fffffe          BL       GUI_ALLOC_h2p
00085e  f9b47092          LDRSH    r7,[r4,#0x92]
000862  f8d0a008          LDR      r10,[r0,#8]
000866  4638              MOV      r0,r7
000868  47d0              BLX      r10
                  |L1.2154|
;;;637      }
;;;638      GUI_ARRAY_Delete(&pObj->ColumnArray);
00086a  f104002e          ADD      r0,r4,#0x2e
00086e  f7fffffe          BL       GUI_ARRAY_Delete
;;;639      GUI_ARRAY_Delete(&pObj->RowArray);
000872  f104002a          ADD      r0,r4,#0x2a
000876  f7fffffe          BL       GUI_ARRAY_Delete
;;;640    }
00087a  e8bd87f0          POP      {r4-r10,pc}
;;;641    
                          ENDP

                  _OnPage PROC
;;;658    */
;;;659    static void _OnPage(LISTVIEW_Handle hObj, LISTVIEW_Obj * pObj, int Dir) {
00087e  e92d41f0          PUSH     {r4-r8,lr}
000882  4680              MOV      r8,r0
000884  460c              MOV      r4,r1
000886  4615              MOV      r5,r2
;;;660      if (Dir < 0) {
000888  2d00              CMP      r5,#0
00088a  da1c              BGE      |L1.2246|
;;;661        /* Check if cursor is already on top row of the page */
;;;662        if (pObj->Sel != pObj->ScrollStateV.v) {
00088c  6e21              LDR      r1,[r4,#0x60]
00088e  6fe0              LDR      r0,[r4,#0x7c]
000890  4281              CMP      r1,r0
000892  d005              BEQ      |L1.2208|
;;;663          /* If not, set cursor on top row */
;;;664          LISTVIEW__SetSel(hObj, pObj, pObj->ScrollStateV.v);
000894  4621              MOV      r1,r4
000896  4640              MOV      r0,r8
000898  6fe2              LDR      r2,[r4,#0x7c]
00089a  f7fffffe          BL       LISTVIEW__SetSel
00089e  e03e              B        |L1.2334|
                  |L1.2208|
;;;665        } else {
;;;666          /* Check if current selection is >= one page size */
;;;667          if (pObj->Sel >= pObj->ScrollStateV.PageSize) {
0008a0  2080              MOVS     r0,#0x80
0008a2  5900              LDR      r0,[r0,r4]
0008a4  6e21              LDR      r1,[r4,#0x60]
0008a6  4281              CMP      r1,r0
0008a8  db07              BLT      |L1.2234|
;;;668            /* Move selection one page up */
;;;669            LISTVIEW__MoveSel(hObj, pObj, -pObj->ScrollStateV.PageSize);
0008aa  2080              MOVS     r0,#0x80
0008ac  5900              LDR      r0,[r0,r4]
0008ae  4242              RSBS     r2,r0,#0
0008b0  4621              MOV      r1,r4
0008b2  4640              MOV      r0,r8
0008b4  f7fffffe          BL       LISTVIEW__MoveSel
0008b8  e031              B        |L1.2334|
                  |L1.2234|
;;;670          } else {
;;;671            /* Set selection on top row */
;;;672            LISTVIEW__SetSel(hObj, pObj, 0);
0008ba  2200              MOVS     r2,#0
0008bc  4621              MOV      r1,r4
0008be  4640              MOV      r0,r8
0008c0  f7fffffe          BL       LISTVIEW__SetSel
0008c4  e02b              B        |L1.2334|
                  |L1.2246|
;;;673          }
;;;674        }
;;;675      } else {
;;;676        int Pos;
;;;677        /* Check if cursor is already on bottom row of the page */
;;;678        Pos = pObj->ScrollStateV.v + pObj->ScrollStateV.PageSize - 1;
0008c6  f04f0080          MOV      r0,#0x80
0008ca  5900              LDR      r0,[r0,r4]
0008cc  6fe1              LDR      r1,[r4,#0x7c]
0008ce  4408              ADD      r0,r0,r1
0008d0  f1a00601          SUB      r6,r0,#1
;;;679        if (pObj->Sel != Pos) {
0008d4  6e20              LDR      r0,[r4,#0x60]
0008d6  42b0              CMP      r0,r6
0008d8  d005              BEQ      |L1.2278|
;;;680          /* If not, set cursor on bottom row */
;;;681          LISTVIEW__SetSel(hObj, pObj, Pos);
0008da  4632              MOV      r2,r6
0008dc  4621              MOV      r1,r4
0008de  4640              MOV      r0,r8
0008e0  f7fffffe          BL       LISTVIEW__SetSel
0008e4  e01a              B        |L1.2332|
                  |L1.2278|
;;;682        } else {
;;;683          int NumItems;
;;;684          /* Check if current selection is <= (NumItems - PageSize - 1) */
;;;685          NumItems = LISTVIEW__GetNumRows(pObj);
0008e6  4620              MOV      r0,r4
0008e8  f7fffffe          BL       LISTVIEW__GetNumRows
0008ec  4607              MOV      r7,r0
;;;686          if (pObj->Sel < (NumItems - pObj->ScrollStateV.PageSize - 1)) {
0008ee  f04f0080          MOV      r0,#0x80
0008f2  5900              LDR      r0,[r0,r4]
0008f4  eba70000          SUB      r0,r7,r0
0008f8  f1a00001          SUB      r0,r0,#1
0008fc  6e21              LDR      r1,[r4,#0x60]
0008fe  4281              CMP      r1,r0
000900  da06              BGE      |L1.2320|
;;;687            /* Move selection one page down */
;;;688            LISTVIEW__MoveSel(hObj, pObj, pObj->ScrollStateV.PageSize);
000902  2080              MOVS     r0,#0x80
000904  5902              LDR      r2,[r0,r4]
000906  4621              MOV      r1,r4
000908  4640              MOV      r0,r8
00090a  f7fffffe          BL       LISTVIEW__MoveSel
00090e  e004              B        |L1.2330|
                  |L1.2320|
;;;689          } else {
;;;690            /* Set selection on bottom row */
;;;691            LISTVIEW__SetSel(hObj, pObj, NumItems - 1);
000910  1e7a              SUBS     r2,r7,#1
000912  4621              MOV      r1,r4
000914  4640              MOV      r0,r8
000916  f7fffffe          BL       LISTVIEW__SetSel
                  |L1.2330|
;;;692          }
;;;693        }
00091a  bf00              NOP      
                  |L1.2332|
;;;694      }
00091c  bf00              NOP      
                  |L1.2334|
;;;695    }
00091e  e8bd81f0          POP      {r4-r8,pc}
;;;696    
                          ENDP

                  _AddKey PROC
;;;703    */
;;;704    static int _AddKey(LISTVIEW_Handle hObj, LISTVIEW_Obj* pObj, int Key) {
000922  e92d41f0          PUSH     {r4-r8,lr}
000926  4606              MOV      r6,r0
000928  460c              MOV      r4,r1
00092a  4615              MOV      r5,r2
;;;705      switch (Key) {
00092c  2d17              CMP      r5,#0x17
00092e  d02f              BEQ      |L1.2448|
000930  dc08              BGT      |L1.2372|
000932  2d10              CMP      r5,#0x10
000934  d052              BEQ      |L1.2524|
000936  2d11              CMP      r5,#0x11
000938  d01a              BEQ      |L1.2416|
00093a  2d12              CMP      r5,#0x12
00093c  d03a              BEQ      |L1.2484|
00093e  2d13              CMP      r5,#0x13
000940  d160              BNE      |L1.2564|
000942  e006              B        |L1.2386|
                  |L1.2372|
000944  2d18              CMP      r5,#0x18
000946  d02a              BEQ      |L1.2462|
000948  2d21              CMP      r5,#0x21
00094a  d019              BEQ      |L1.2432|
00094c  2d22              CMP      r5,#0x22
00094e  d159              BNE      |L1.2564|
000950  e007              B        |L1.2402|
                  |L1.2386|
;;;706      case GUI_KEY_DOWN:
;;;707        LISTVIEW__MoveSel(hObj, pObj, 1);
000952  2201              MOVS     r2,#1
000954  4621              MOV      r1,r4
000956  4630              MOV      r0,r6
000958  f7fffffe          BL       LISTVIEW__MoveSel
;;;708        return 1;               /* Key has been consumed */
00095c  2001              MOVS     r0,#1
                  |L1.2398|
;;;709      case GUI_KEY_PGDOWN:
;;;710        _OnPage(hObj, pObj, 1);
;;;711        return 1;               /* Key has been consumed */
;;;712      case GUI_KEY_UP:
;;;713        LISTVIEW__MoveSel(hObj, pObj, -1);
;;;714        return 1;               /* Key has been consumed */
;;;715      case GUI_KEY_PGUP:
;;;716        _OnPage(hObj, pObj, -1);
;;;717        return 1;               /* Key has been consumed */
;;;718      case GUI_KEY_HOME:
;;;719        LISTVIEW__SetSel(hObj, pObj, 0);
;;;720        return 1;               /* Key has been consumed */
;;;721      case GUI_KEY_END:
;;;722        LISTVIEW__SetSel(hObj, pObj, LISTVIEW__GetNumRows(pObj) - 1);
;;;723        return 1;               /* Key has been consumed */
;;;724      case GUI_KEY_RIGHT:
;;;725        if (WM_SetScrollValue(&pObj->ScrollStateH, pObj->ScrollStateH.v + pObj->Props.ScrollStepH)) {
;;;726          LISTVIEW__UpdateScrollPos(hObj, pObj);
;;;727          LISTVIEW__InvalidateInsideArea(hObj, pObj);
;;;728        }
;;;729        return 1;               /* Key has been consumed */
;;;730      case GUI_KEY_LEFT:
;;;731        if (WM_SetScrollValue(&pObj->ScrollStateH, pObj->ScrollStateH.v - pObj->Props.ScrollStepH)) {
;;;732          LISTVIEW__UpdateScrollPos(hObj, pObj);
;;;733          LISTVIEW__InvalidateInsideArea(hObj, pObj);
;;;734        }
;;;735        return 1;               /* Key has been consumed */
;;;736      }
;;;737      return 0;                 /* Key has NOT been consumed */
;;;738    }
00095e  e8bd81f0          POP      {r4-r8,pc}
                  |L1.2402|
000962  2201              MOVS     r2,#1                 ;710
000964  4621              MOV      r1,r4                 ;710
000966  4630              MOV      r0,r6                 ;710
000968  f7fffffe          BL       _OnPage
00096c  2001              MOVS     r0,#1                 ;711
00096e  e7f6              B        |L1.2398|
                  |L1.2416|
000970  f04f32ff          MOV      r2,#0xffffffff        ;713
000974  4621              MOV      r1,r4                 ;713
000976  4630              MOV      r0,r6                 ;713
000978  f7fffffe          BL       LISTVIEW__MoveSel
00097c  2001              MOVS     r0,#1                 ;714
00097e  e7ee              B        |L1.2398|
                  |L1.2432|
000980  f04f32ff          MOV      r2,#0xffffffff        ;716
000984  4621              MOV      r1,r4                 ;716
000986  4630              MOV      r0,r6                 ;716
000988  f7fffffe          BL       _OnPage
00098c  2001              MOVS     r0,#1                 ;717
00098e  e7e6              B        |L1.2398|
                  |L1.2448|
000990  2200              MOVS     r2,#0                 ;719
000992  4621              MOV      r1,r4                 ;719
000994  4630              MOV      r0,r6                 ;719
000996  f7fffffe          BL       LISTVIEW__SetSel
00099a  2001              MOVS     r0,#1                 ;720
00099c  e7df              B        |L1.2398|
                  |L1.2462|
00099e  4620              MOV      r0,r4                 ;722
0009a0  f7fffffe          BL       LISTVIEW__GetNumRows
0009a4  1e47              SUBS     r7,r0,#1              ;722
0009a6  463a              MOV      r2,r7                 ;722
0009a8  4621              MOV      r1,r4                 ;722
0009aa  4630              MOV      r0,r6                 ;722
0009ac  f7fffffe          BL       LISTVIEW__SetSel
0009b0  2001              MOVS     r0,#1                 ;723
0009b2  e7d4              B        |L1.2398|
                  |L1.2484|
0009b4  2088              MOVS     r0,#0x88              ;725
0009b6  5902              LDR      r2,[r0,r4]            ;725
0009b8  205c              MOVS     r0,#0x5c              ;725
0009ba  5b00              LDRH     r0,[r0,r4]            ;725
0009bc  1811              ADDS     r1,r2,r0              ;725
0009be  f1040084          ADD      r0,r4,#0x84           ;725
0009c2  f7fffffe          BL       WM_SetScrollValue
0009c6  b138              CBZ      r0,|L1.2520|
0009c8  4621              MOV      r1,r4                 ;726
0009ca  4630              MOV      r0,r6                 ;726
0009cc  f7fffffe          BL       LISTVIEW__UpdateScrollPos
0009d0  4621              MOV      r1,r4                 ;727
0009d2  4630              MOV      r0,r6                 ;727
0009d4  f7fffffe          BL       LISTVIEW__InvalidateInsideArea
                  |L1.2520|
0009d8  2001              MOVS     r0,#1                 ;729
0009da  e7c0              B        |L1.2398|
                  |L1.2524|
0009dc  2088              MOVS     r0,#0x88              ;731
0009de  5902              LDR      r2,[r0,r4]            ;731
0009e0  205c              MOVS     r0,#0x5c              ;731
0009e2  5b00              LDRH     r0,[r0,r4]            ;731
0009e4  1a11              SUBS     r1,r2,r0              ;731
0009e6  f1040084          ADD      r0,r4,#0x84           ;731
0009ea  f7fffffe          BL       WM_SetScrollValue
0009ee  b138              CBZ      r0,|L1.2560|
0009f0  4621              MOV      r1,r4                 ;732
0009f2  4630              MOV      r0,r6                 ;732
0009f4  f7fffffe          BL       LISTVIEW__UpdateScrollPos
0009f8  4621              MOV      r1,r4                 ;733
0009fa  4630              MOV      r0,r6                 ;733
0009fc  f7fffffe          BL       LISTVIEW__InvalidateInsideArea
                  |L1.2560|
000a00  2001              MOVS     r0,#1                 ;735
000a02  e7ac              B        |L1.2398|
                  |L1.2564|
000a04  2000              MOVS     r0,#0                 ;737
000a06  e7aa              B        |L1.2398|
;;;739    
                          ENDP

                  LISTVIEW_Callback PROC
;;;772    */
;;;773    void LISTVIEW_Callback (WM_MESSAGE *pMsg) {
000a08  e92d43fe          PUSH     {r1-r9,lr}
000a0c  4605              MOV      r5,r0
;;;774      LISTVIEW_Handle hObj;
;;;775      LISTVIEW_Obj* pObj;
;;;776      WM_SCROLL_STATE ScrollState;
;;;777      hObj = pMsg->hWin;
000a0e  f9b59004          LDRSH    r9,[r5,#4]
;;;778      /* Let widget handle the standard messages */
;;;779      if (WIDGET_HandleActive(hObj, pMsg) == 0) {
000a12  4629              MOV      r1,r5
000a14  4648              MOV      r0,r9
000a16  f7fffffe          BL       WIDGET_HandleActive
000a1a  b908              CBNZ     r0,|L1.2592|
                  |L1.2588|
;;;780        return;
;;;781      }
;;;782      pObj = (LISTVIEW_Obj *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
;;;783      switch (pMsg->MsgId) {
;;;784      case WM_NOTIFY_CLIENTCHANGE:
;;;785      case WM_SIZE:
;;;786        if (pMsg->hWinSrc && (pMsg->hWinSrc == pObj->hHeader)) {
;;;787          LISTVIEW__UpdateScrollParas(hObj, pObj);
;;;788        }
;;;789        return;
;;;790      case WM_NOTIFY_PARENT:
;;;791        switch (pMsg->Data.v) {
;;;792        case WM_NOTIFICATION_CHILD_DELETED:
;;;793          /* make sure we do not send any messages to the header child once it has been deleted */
;;;794          if (pMsg->hWinSrc == pObj->hHeader) {
;;;795            pObj->hHeader = 0;
;;;796          }
;;;797          break;
;;;798        case WM_NOTIFICATION_VALUE_CHANGED:
;;;799          if (pMsg->hWinSrc == WM_GetScrollbarV(hObj)) {
;;;800            WM_GetScrollState(pMsg->hWinSrc, &ScrollState);
;;;801            pObj->ScrollStateV.v = ScrollState.v;
;;;802            LISTVIEW__InvalidateInsideArea(hObj, pObj);
;;;803            _NotifyOwner(hObj, WM_NOTIFICATION_SCROLL_CHANGED);
;;;804          } else if (pMsg->hWinSrc == WM_GetScrollbarH(hObj)) {
;;;805            WM_GetScrollState(pMsg->hWinSrc, &ScrollState);
;;;806            pObj->ScrollStateH.v = ScrollState.v;
;;;807            LISTVIEW__UpdateScrollParas(hObj, pObj);
;;;808            HEADER_SetScrollPos(pObj->hHeader, pObj->ScrollStateH.v);
;;;809            _NotifyOwner(hObj, WM_NOTIFICATION_SCROLL_CHANGED);
;;;810          }
;;;811          break;
;;;812        case WM_NOTIFICATION_SCROLLBAR_ADDED:
;;;813          #if WIDGET_USE_PARENT_EFFECT
;;;814            WIDGET_SetEffect(pMsg->hWinSrc, pObj->Widget.pEffect);
;;;815          #endif
;;;816          LISTVIEW__UpdateScrollParas(hObj, pObj);
;;;817          break;
;;;818        case WM_NOTIFICATION_RELEASED:
;;;819          if ((pMsg->hWinSrc == pObj->hHeader) && (pObj->hSort)) {
;;;820            int Column;
;;;821            LISTVIEW_SORT * pSort;
;;;822            LISTVIEW_COLUMN * pColumn;
;;;823            WM_SetFocus(hObj);
;;;824            Column = HEADER_GetSel(pObj->hHeader);
;;;825            if (Column >= 0) {
;;;826              pColumn = (LISTVIEW_COLUMN *)GUI_ARRAY_GetpItem(&pObj->ColumnArray, Column);
;;;827              if (pColumn->fpCompare) {
;;;828                pSort = (LISTVIEW_SORT *)GUI_ALLOC_h2p(pObj->hSort);
;;;829                if (pSort) {
;;;830                  // ReverseSort
;;;831                  if (pObj->SortIndex == Column) {
;;;832                    pSort->Reverse   ^= 1;
;;;833                    pObj->ReverseSort = 1;
;;;834                    pObj->IsSorted    = 0;
;;;835                  } else {
;;;836                    pSort->Reverse    = 0;
;;;837                    pObj->SortIndex   = Column;
;;;838                    pObj->IsPresorted = 0;
;;;839                  }
;;;840                  /*
;;;841                  if (pObj->SortIndex == Column) {
;;;842                    pSort->Reverse ^= 1;
;;;843                  } else {
;;;844                    pSort->Reverse = 0;
;;;845                    pObj->SortIndex = Column;
;;;846                  }
;;;847                  pObj->IsPresorted = 0;
;;;848                  */
;;;849                  LISTVIEW__InvalidateInsideArea(hObj, pObj);
;;;850                }
;;;851              }
;;;852            }
;;;853          }
;;;854          break;
;;;855        }
;;;856        return;
;;;857      case WM_PAINT:
;;;858        _Paint(hObj, pObj, pMsg);
;;;859        return;
;;;860      case WM_TOUCH:
;;;861        _OnTouch(hObj, pObj, pMsg);
;;;862        return;        /* Important: message handled ! */
;;;863      case WM_KEY:
;;;864        if (((const WM_KEY_INFO*)(pMsg->Data.p))->PressedCnt > 0) {
;;;865          int Key;
;;;866          Key = ((const WM_KEY_INFO*)(pMsg->Data.p))->Key;
;;;867          if (_AddKey(hObj, pObj, Key)) {
;;;868            return;
;;;869          }
;;;870        }
;;;871        break;  /* No return here ... WM_DefaultProc needs to be called */
;;;872      case WM_DELETE:
;;;873        _FreeAttached(pObj);
;;;874        break;  /* No return here ... WM_DefaultProc needs to be called */
;;;875      }
;;;876      WM_DefaultProc(pMsg);
;;;877    }
000a1c  e8bd83fe          POP      {r1-r9,pc}
                  |L1.2592|
000a20  4648              MOV      r0,r9                 ;782
000a22  f7fffffe          BL       GUI_ALLOC_h2p
000a26  4604              MOV      r4,r0                 ;782
000a28  6828              LDR      r0,[r5,#0]            ;783
000a2a  280e              CMP      r0,#0xe               ;783
000a2c  d07e              BEQ      |L1.2860|
000a2e  dc06              BGT      |L1.2622|
000a30  2805              CMP      r0,#5                 ;783
000a32  d00c              BEQ      |L1.2638|
000a34  280b              CMP      r0,#0xb               ;783
000a36  d07a              BEQ      |L1.2862|
000a38  280c              CMP      r0,#0xc               ;783
                  |L1.2618|
000a3a  d179              BNE      |L1.2864|
000a3c  e0ad              B        |L1.2970|
                  |L1.2622|
000a3e  280f              CMP      r0,#0xf               ;783
000a40  d077              BEQ      |L1.2866|
000a42  2825              CMP      r0,#0x25              ;783
000a44  d002              BEQ      |L1.2636|
000a46  2826              CMP      r0,#0x26              ;783
000a48  d1f7              BNE      |L1.2618|
000a4a  e00d              B        |L1.2664|
                  |L1.2636|
000a4c  bf00              NOP                            ;785
                  |L1.2638|
000a4e  88e8              LDRH     r0,[r5,#6]            ;786
000a50  b148              CBZ      r0,|L1.2662|
000a52  f9b50006          LDRSH    r0,[r5,#6]            ;786
000a56  f9b41028          LDRSH    r1,[r4,#0x28]         ;786
000a5a  4288              CMP      r0,r1                 ;786
000a5c  d103              BNE      |L1.2662|
000a5e  4621              MOV      r1,r4                 ;787
000a60  4648              MOV      r0,r9                 ;787
000a62  f7fffffe          BL       LISTVIEW__UpdateScrollParas
                  |L1.2662|
000a66  e7d9              B        |L1.2588|
                  |L1.2664|
000a68  68a8              LDR      r0,[r5,#8]            ;791
000a6a  2802              CMP      r0,#2                 ;791
000a6c  d04a              BEQ      |L1.2820|
000a6e  2805              CMP      r0,#5                 ;791
000a70  d00d              BEQ      |L1.2702|
000a72  2806              CMP      r0,#6                 ;791
000a74  d041              BEQ      |L1.2810|
000a76  2807              CMP      r0,#7                 ;791
000a78  d108              BNE      |L1.2700|
000a7a  f9b50006          LDRSH    r0,[r5,#6]            ;794
000a7e  f9b41028          LDRSH    r1,[r4,#0x28]         ;794
000a82  4288              CMP      r0,r1                 ;794
000a84  d102              BNE      |L1.2700|
000a86  f04f0000          MOV      r0,#0                 ;795
000a8a  8520              STRH     r0,[r4,#0x28]         ;795
                  |L1.2700|
000a8c  e07d              B        |L1.2954|
                  |L1.2702|
000a8e  4648              MOV      r0,r9                 ;799
000a90  f7fffffe          BL       WM_GetScrollbarV
000a94  f9b51006          LDRSH    r1,[r5,#6]            ;799
000a98  4288              CMP      r0,r1                 ;799
000a9a  d10f              BNE      |L1.2748|
000a9c  f9b50006          LDRSH    r0,[r5,#6]            ;800
000aa0  4669              MOV      r1,sp                 ;800
000aa2  f7fffffe          BL       WM_GetScrollState
000aa6  9901              LDR      r1,[sp,#4]            ;801
000aa8  67e1              STR      r1,[r4,#0x7c]         ;801
000aaa  4621              MOV      r1,r4                 ;802
000aac  4648              MOV      r0,r9                 ;802
000aae  f7fffffe          BL       LISTVIEW__InvalidateInsideArea
000ab2  210a              MOVS     r1,#0xa               ;803
000ab4  4648              MOV      r0,r9                 ;803
000ab6  f7fffffe          BL       _NotifyOwner
000aba  e01d              B        |L1.2808|
                  |L1.2748|
000abc  4648              MOV      r0,r9                 ;804
000abe  f7fffffe          BL       WM_GetScrollbarH
000ac2  f9b51006          LDRSH    r1,[r5,#6]            ;804
000ac6  4288              CMP      r0,r1                 ;804
000ac8  d116              BNE      |L1.2808|
000aca  f9b50006          LDRSH    r0,[r5,#6]            ;805
000ace  4669              MOV      r1,sp                 ;805
000ad0  f7fffffe          BL       WM_GetScrollState
000ad4  f04f0088          MOV      r0,#0x88              ;806
000ad8  9901              LDR      r1,[sp,#4]            ;806
000ada  5101              STR      r1,[r0,r4]            ;806
000adc  4621              MOV      r1,r4                 ;807
000ade  4648              MOV      r0,r9                 ;807
000ae0  f7fffffe          BL       LISTVIEW__UpdateScrollParas
000ae4  2288              MOVS     r2,#0x88              ;808
000ae6  5911              LDR      r1,[r2,r4]            ;808
000ae8  f9b40028          LDRSH    r0,[r4,#0x28]         ;808
000aec  f7fffffe          BL       HEADER_SetScrollPos
000af0  210a              MOVS     r1,#0xa               ;809
000af2  4648              MOV      r0,r9                 ;809
000af4  f7fffffe          BL       _NotifyOwner
                  |L1.2808|
000af8  e047              B        |L1.2954|
                  |L1.2810|
000afa  4621              MOV      r1,r4                 ;816
000afc  4648              MOV      r0,r9                 ;816
000afe  f7fffffe          BL       LISTVIEW__UpdateScrollParas
000b02  e042              B        |L1.2954|
                  |L1.2820|
000b04  f9b50006          LDRSH    r0,[r5,#6]            ;819
000b08  f9b41028          LDRSH    r1,[r4,#0x28]         ;819
000b0c  4288              CMP      r0,r1                 ;819
000b0e  d13b              BNE      |L1.2952|
000b10  f8b40092          LDRH     r0,[r4,#0x92]         ;819
000b14  b3c0              CBZ      r0,|L1.2952|
000b16  4648              MOV      r0,r9                 ;823
000b18  f7fffffe          BL       WM_SetFocus
000b1c  f9b40028          LDRSH    r0,[r4,#0x28]         ;824
000b20  f7fffffe          BL       HEADER_GetSel
000b24  4607              MOV      r7,r0                 ;824
000b26  2f00              CMP      r7,#0                 ;825
000b28  db2d              BLT      |L1.2950|
000b2a  e003              B        |L1.2868|
                  |L1.2860|
000b2c  e03b              B        |L1.2982|
                  |L1.2862|
000b2e  e049              B        |L1.3012|
                  |L1.2864|
000b30  e04c              B        |L1.3020|
                  |L1.2866|
000b32  e02c              B        |L1.2958|
                  |L1.2868|
000b34  4639              MOV      r1,r7                 ;826
000b36  f104002e          ADD      r0,r4,#0x2e           ;826
000b3a  f7fffffe          BL       GUI_ARRAY_GetpItem
000b3e  4680              MOV      r8,r0                 ;826
000b40  f8d80004          LDR      r0,[r8,#4]            ;827
000b44  b1f8              CBZ      r0,|L1.2950|
000b46  f9b40092          LDRSH    r0,[r4,#0x92]         ;828
000b4a  f7fffffe          BL       GUI_ALLOC_h2p
000b4e  4606              MOV      r6,r0                 ;828
000b50  b1ce              CBZ      r6,|L1.2950|
000b52  6ea0              LDR      r0,[r4,#0x68]         ;831
000b54  42b8              CMP      r0,r7                 ;831
000b56  d10c              BNE      |L1.2930|
000b58  7b30              LDRB     r0,[r6,#0xc]          ;832
000b5a  f0800001          EOR      r0,r0,#1              ;832
000b5e  7330              STRB     r0,[r6,#0xc]          ;832
000b60  f04f0001          MOV      r0,#1                 ;833
000b64  f8840096          STRB     r0,[r4,#0x96]         ;833
000b68  f04f0000          MOV      r0,#0                 ;834
000b6c  f8840094          STRB     r0,[r4,#0x94]         ;834
000b70  e005              B        |L1.2942|
                  |L1.2930|
000b72  f04f0000          MOV      r0,#0                 ;836
000b76  7330              STRB     r0,[r6,#0xc]          ;836
000b78  66a7              STR      r7,[r4,#0x68]         ;837
000b7a  f8840095          STRB     r0,[r4,#0x95]         ;838
                  |L1.2942|
000b7e  4621              MOV      r1,r4                 ;849
000b80  4648              MOV      r0,r9                 ;849
000b82  f7fffffe          BL       LISTVIEW__InvalidateInsideArea
                  |L1.2950|
000b86  bf00              NOP                            ;853
                  |L1.2952|
000b88  bf00              NOP                            ;854
                  |L1.2954|
000b8a  bf00              NOP                            ;797
000b8c  e746              B        |L1.2588|
                  |L1.2958|
000b8e  462a              MOV      r2,r5                 ;858
000b90  4621              MOV      r1,r4                 ;858
000b92  4648              MOV      r0,r9                 ;858
000b94  f7fffffe          BL       _Paint
000b98  e740              B        |L1.2588|
                  |L1.2970|
000b9a  462a              MOV      r2,r5                 ;861
000b9c  4621              MOV      r1,r4                 ;861
000b9e  4648              MOV      r0,r9                 ;861
000ba0  f7fffffe          BL       _OnTouch
000ba4  e73a              B        |L1.2588|
                  |L1.2982|
000ba6  68a8              LDR      r0,[r5,#8]            ;864
000ba8  6840              LDR      r0,[r0,#4]            ;864
000baa  2800              CMP      r0,#0                 ;864
000bac  dd09              BLE      |L1.3010|
000bae  68a8              LDR      r0,[r5,#8]            ;866
000bb0  6806              LDR      r6,[r0,#0]            ;866
000bb2  4632              MOV      r2,r6                 ;867
000bb4  4621              MOV      r1,r4                 ;867
000bb6  4648              MOV      r0,r9                 ;867
000bb8  f7fffffe          BL       _AddKey
000bbc  b100              CBZ      r0,|L1.3008|
000bbe  e72d              B        |L1.2588|
                  |L1.3008|
000bc0  bf00              NOP                            ;870
                  |L1.3010|
000bc2  e003              B        |L1.3020|
                  |L1.3012|
000bc4  4620              MOV      r0,r4                 ;873
000bc6  f7fffffe          BL       _FreeAttached
000bca  bf00              NOP                            ;874
                  |L1.3020|
000bcc  bf00              NOP                            ;871
000bce  4628              MOV      r0,r5                 ;876
000bd0  f7fffffe          BL       WM_DefaultProc
000bd4  bf00              NOP      
000bd6  e721              B        |L1.2588|
;;;878    
                          ENDP

                  LISTVIEW_CreateEx PROC
;;;892    */
;;;893    LISTVIEW_Handle LISTVIEW_CreateEx(int x0, int y0, int xsize, int ysize, WM_HWIN hParent,
000bd8  e92d5fff          PUSH     {r0-r12,lr}
;;;894                                      int WinFlags, int ExFlags, int Id)
;;;895    {
000bdc  4606              MOV      r6,r0
000bde  460f              MOV      r7,r1
000be0  4690              MOV      r8,r2
000be2  4699              MOV      r9,r3
000be4  e9ddab0e          LDRD     r10,r11,[sp,#0x38]
;;;896      LISTVIEW_Handle hObj;
;;;897      GUI_USE_PARA(ExFlags);
000be8  9810              LDR      r0,[sp,#0x40]
000bea  9010              STR      r0,[sp,#0x40]
;;;898      WM_LOCK();
;;;899      /* Create the window */
;;;900      if ((xsize == 0) && (ysize == 0) && (x0 == 0) && (y0 == 0)) {
000bec  f1b80f00          CMP      r8,#0
000bf0  d119              BNE      |L1.3110|
000bf2  f1b90f00          CMP      r9,#0
000bf6  d116              BNE      |L1.3110|
000bf8  b9ae              CBNZ     r6,|L1.3110|
000bfa  b9a7              CBNZ     r7,|L1.3110|
;;;901        GUI_RECT Rect;
;;;902        WM_GetClientRectEx(hParent, &Rect);
000bfc  a902              ADD      r1,sp,#8
000bfe  4650              MOV      r0,r10
000c00  f7fffffe          BL       WM_GetClientRectEx
;;;903        xsize = Rect.x1 - Rect.x0 + 1;
000c04  f9bd000c          LDRSH    r0,[sp,#0xc]
000c08  f9bd1008          LDRSH    r1,[sp,#8]
000c0c  eba00001          SUB      r0,r0,r1
000c10  f1000801          ADD      r8,r0,#1
;;;904        ysize = Rect.y1 - Rect.y0 + 1;
000c14  f9bd000e          LDRSH    r0,[sp,#0xe]
000c18  f9bd100a          LDRSH    r1,[sp,#0xa]
000c1c  eba00001          SUB      r0,r0,r1
000c20  f1000901          ADD      r9,r0,#1
;;;905      }
000c24  bf00              NOP      
                  |L1.3110|
;;;906      hObj = WM_CreateWindowAsChild(x0, y0, xsize, ysize, hParent, WinFlags, &LISTVIEW_Callback,
000c26  2178              MOVS     r1,#0x78
000c28  f2af2223          ADR      r2,LISTVIEW_Callback + 1
000c2c  fa1ff08b          UXTH     r0,r11
000c30  464b              MOV      r3,r9
000c32  e9cda000          STRD     r10,r0,[sp,#0]
000c36  e9cd2102          STRD     r2,r1,[sp,#8]
000c3a  4642              MOV      r2,r8
000c3c  4639              MOV      r1,r7
000c3e  4630              MOV      r0,r6
000c40  f7fffffe          BL       WM_CreateWindowAsChild
000c44  4605              MOV      r5,r0
;;;907                                    sizeof(LISTVIEW_Obj) - sizeof(WM_Obj));
;;;908      if (hObj) {
000c46  b36d              CBZ      r5,|L1.3236|
;;;909        LISTVIEW_Obj* pObj;
;;;910        pObj = (LISTVIEW_Obj *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
000c48  4628              MOV      r0,r5
000c4a  f7fffffe          BL       GUI_ALLOC_h2p
000c4e  4604              MOV      r4,r0
;;;911        /* Init sub-classes */
;;;912        GUI_ARRAY_CREATE(&pObj->RowArray);
;;;913        GUI_ARRAY_CREATE(&pObj->ColumnArray);
;;;914        /* Init widget specific variables */
;;;915        WIDGET__Init(&pObj->Widget, Id, WIDGET_STATE_FOCUSSABLE);
000c50  f04f0210          MOV      r2,#0x10
000c54  4620              MOV      r0,r4
000c56  9911              LDR      r1,[sp,#0x44]
000c58  f7fffffe          BL       WIDGET__Init
;;;916        /* Init member variables */
;;;917        LISTVIEW_INIT_ID(pObj);
;;;918        pObj->Props     = LISTVIEW_DefaultProps;
000c5c  222c              MOVS     r2,#0x2c
000c5e  4990              LDR      r1,|L1.3744|
000c60  f1040034          ADD      r0,r4,#0x34
000c64  f7fffffe          BL       __aeabi_memcpy4
;;;919        pObj->ShowGrid  = 0;
000c68  f04f0000          MOV      r0,#0
000c6c  6660              STR      r0,[r4,#0x64]
;;;920        pObj->RowDistY  = 0;
000c6e  66e0              STR      r0,[r4,#0x6c]
;;;921        pObj->Sel       = -1;
000c70  f04f30ff          MOV      r0,#0xffffffff
000c74  6620              STR      r0,[r4,#0x60]
;;;922        pObj->LBorder   = 1;
000c76  f04f0001          MOV      r0,#1
000c7a  6720              STR      r0,[r4,#0x70]
;;;923        pObj->RBorder   = 1;
000c7c  6760              STR      r0,[r4,#0x74]
;;;924        pObj->hHeader   = HEADER_CreateEx(0, 0, 0, 0, hObj, WM_CF_SHOW, 0, 0);
000c7e  f04f0000          MOV      r0,#0
000c82  f04f0202          MOV      r2,#2
000c86  e9cd2001          STRD     r2,r0,[sp,#4]
000c8a  4603              MOV      r3,r0
000c8c  4602              MOV      r2,r0
000c8e  4601              MOV      r1,r0
000c90  9500              STR      r5,[sp,#0]
000c92  9003              STR      r0,[sp,#0xc]
000c94  f7fffffe          BL       HEADER_CreateEx
000c98  8520              STRH     r0,[r4,#0x28]
;;;925        LISTVIEW__UpdateScrollParas(hObj, pObj);
000c9a  4621              MOV      r1,r4
000c9c  4628              MOV      r0,r5
000c9e  f7fffffe          BL       LISTVIEW__UpdateScrollParas
;;;926      } else {
000ca2  bf00              NOP      
                  |L1.3236|
;;;927        GUI_DEBUG_ERROROUT_IF(hObj==0, "LISTVIEW_Create failed")
;;;928      }
;;;929      WM_UNLOCK();
;;;930      return hObj;
000ca4  4628              MOV      r0,r5
;;;931    }
000ca6  b004              ADD      sp,sp,#0x10
000ca8  e8bd9ff0          POP      {r4-r12,pc}
;;;932    
                          ENDP

                  LISTVIEW_IncSel PROC
;;;942    */
;;;943    void LISTVIEW_IncSel(LISTVIEW_Handle hObj) {
000cac  b570              PUSH     {r4-r6,lr}
000cae  4604              MOV      r4,r0
;;;944      if (hObj) {
000cb0  b154              CBZ      r4,|L1.3272|
;;;945        LISTVIEW_Obj* pObj;
;;;946        WM_LOCK();
;;;947        pObj = LISTVIEW_H2P(hObj);
000cb2  4620              MOV      r0,r4
000cb4  f7fffffe          BL       GUI_ALLOC_h2p
000cb8  4605              MOV      r5,r0
;;;948        LISTVIEW__MoveSel(hObj, pObj, 1);
000cba  f04f0201          MOV      r2,#1
000cbe  4629              MOV      r1,r5
000cc0  4620              MOV      r0,r4
000cc2  f7fffffe          BL       LISTVIEW__MoveSel
;;;949        WM_UNLOCK();
;;;950      }
000cc6  bf00              NOP      
                  |L1.3272|
;;;951    }
000cc8  bd70              POP      {r4-r6,pc}
;;;952    
                          ENDP

                  LISTVIEW_DecSel PROC
;;;956    */
;;;957    void LISTVIEW_DecSel(LISTVIEW_Handle hObj) {
000cca  b570              PUSH     {r4-r6,lr}
000ccc  4604              MOV      r4,r0
;;;958      if (hObj) {
000cce  b154              CBZ      r4,|L1.3302|
;;;959        LISTVIEW_Obj* pObj;
;;;960        WM_LOCK();
;;;961        pObj = LISTVIEW_H2P(hObj);
000cd0  4620              MOV      r0,r4
000cd2  f7fffffe          BL       GUI_ALLOC_h2p
000cd6  4605              MOV      r5,r0
;;;962        LISTVIEW__MoveSel(hObj, pObj, -1);
000cd8  f04f32ff          MOV      r2,#0xffffffff
000cdc  4629              MOV      r1,r5
000cde  4620              MOV      r0,r4
000ce0  f7fffffe          BL       LISTVIEW__MoveSel
;;;963        WM_UNLOCK();
;;;964      }
000ce4  bf00              NOP      
                  |L1.3302|
;;;965    }
000ce6  bd70              POP      {r4-r6,pc}
;;;966    
                          ENDP

                  LISTVIEW_AddColumn PROC
;;;970    */
;;;971    int LISTVIEW_AddColumn(LISTVIEW_Handle hObj, int Width, const char * s, int Align) {
000ce8  e92d4ffe          PUSH     {r1-r11,lr}
000cec  4606              MOV      r6,r0
000cee  4689              MOV      r9,r1
000cf0  4692              MOV      r10,r2
000cf2  461f              MOV      r7,r3
;;;972      int r = 0;
000cf4  f04f0b00          MOV      r11,#0
;;;973      if (hObj) {
000cf8  2e00              CMP      r6,#0
000cfa  d046              BEQ      |L1.3466|
;;;974        LISTVIEW_Obj* pObj;
;;;975        LISTVIEW_COLUMN Column = {0};
000cfc  4658              MOV      r0,r11
000cfe  9001              STR      r0,[sp,#4]
000d00  9002              STR      r0,[sp,#8]
;;;976        unsigned NumRows;
;;;977        WM_LOCK();
;;;978        pObj = LISTVIEW_H2P(hObj);
000d02  4630              MOV      r0,r6
000d04  f7fffffe          BL       GUI_ALLOC_h2p
000d08  4604              MOV      r4,r0
;;;979        HEADER_AddItem(pObj->hHeader, Width, s, Align);
000d0a  f9b40028          LDRSH    r0,[r4,#0x28]
000d0e  463b              MOV      r3,r7
000d10  4652              MOV      r2,r10
000d12  4649              MOV      r1,r9
000d14  f7fffffe          BL       HEADER_AddItem
;;;980        Column.Align = Align;
000d18  b2f8              UXTB     r0,r7
000d1a  f88d0004          STRB     r0,[sp,#4]
;;;981        GUI_ARRAY_AddItem(&pObj->ColumnArray, &Column, sizeof(LISTVIEW_COLUMN));
000d1e  f04f0208          MOV      r2,#8
000d22  a901              ADD      r1,sp,#4
000d24  f104002e          ADD      r0,r4,#0x2e
000d28  f7fffffe          BL       GUI_ARRAY_AddItem
;;;982        pObj = LISTVIEW_H2P(hObj); /* Restore after allocating memory */
000d2c  4630              MOV      r0,r6
000d2e  f7fffffe          BL       GUI_ALLOC_h2p
000d32  4604              MOV      r4,r0
;;;983        NumRows = LISTVIEW__GetNumRows(pObj);
000d34  4620              MOV      r0,r4
000d36  f7fffffe          BL       LISTVIEW__GetNumRows
000d3a  4680              MOV      r8,r0
;;;984        if (NumRows) {
000d3c  f1b80f00          CMP      r8,#0
000d40  d01a              BEQ      |L1.3448|
;;;985          LISTVIEW_ROW* pRow;
;;;986          unsigned i;
;;;987          for (i = 0; i < NumRows; i++) {
000d42  465d              MOV      r5,r11
000d44  e014              B        |L1.3440|
                  |L1.3398|
;;;988            pRow = (LISTVIEW_ROW*) GUI_ARRAY_GetpItem(&pObj->RowArray, i);
000d46  4629              MOV      r1,r5
000d48  f104002a          ADD      r0,r4,#0x2a
000d4c  f7fffffe          BL       GUI_ARRAY_GetpItem
000d50  9000              STR      r0,[sp,#0]
;;;989            if (GUI_ARRAY_AddItem(&pRow->CellArray, NULL, sizeof(LISTVIEW_CELL))) {
000d52  2204              MOVS     r2,#4
000d54  2100              MOVS     r1,#0
000d56  9800              LDR      r0,[sp,#0]
000d58  f7fffffe          BL       GUI_ARRAY_AddItem
000d5c  b110              CBZ      r0,|L1.3428|
;;;990              r = 1;
000d5e  f04f0b01          MOV      r11,#1
;;;991              break;
000d62  e007              B        |L1.3444|
                  |L1.3428|
;;;992            }
;;;993            pObj = LISTVIEW_H2P(hObj); /* Restore after allocating memory */
000d64  4630              MOV      r0,r6
000d66  f7fffffe          BL       GUI_ALLOC_h2p
000d6a  4604              MOV      r4,r0
000d6c  f1050501          ADD      r5,r5,#1              ;987
                  |L1.3440|
000d70  4545              CMP      r5,r8                 ;987
000d72  d3e8              BCC      |L1.3398|
                  |L1.3444|
000d74  bf00              NOP                            ;991
;;;994          }
;;;995        }
000d76  bf00              NOP      
                  |L1.3448|
;;;996        LISTVIEW__UpdateScrollParas(hObj, pObj);
000d78  4621              MOV      r1,r4
000d7a  4630              MOV      r0,r6
000d7c  f7fffffe          BL       LISTVIEW__UpdateScrollParas
;;;997        LISTVIEW__InvalidateInsideArea(hObj, pObj);
000d80  4621              MOV      r1,r4
000d82  4630              MOV      r0,r6
000d84  f7fffffe          BL       LISTVIEW__InvalidateInsideArea
;;;998        WM_UNLOCK();
;;;999      }
000d88  bf00              NOP      
                  |L1.3466|
;;;1000     return r;
000d8a  4658              MOV      r0,r11
;;;1001   }
000d8c  e8bd8ffe          POP      {r1-r11,pc}
;;;1002   
                          ENDP

                  LISTVIEW_AddRow PROC
;;;1006   */
;;;1007   int LISTVIEW_AddRow(LISTVIEW_Handle hObj, const GUI_ConstString* ppText) {
000d90  e92d4ffe          PUSH     {r1-r11,lr}
000d94  4682              MOV      r10,r0
000d96  460d              MOV      r5,r1
;;;1008     int r = 0;
000d98  f04f0000          MOV      r0,#0
000d9c  9002              STR      r0,[sp,#8]
;;;1009     if (hObj) {
000d9e  f1ba0f00          CMP      r10,#0
000da2  d079              BEQ      |L1.3736|
;;;1010       LISTVIEW_Obj* pObj;
;;;1011       WM_LOCK();
;;;1012       pObj = LISTVIEW_H2P(hObj);
000da4  4650              MOV      r0,r10
000da6  f7fffffe          BL       GUI_ALLOC_h2p
000daa  4604              MOV      r4,r0
;;;1013       /* Add row item to the GUI_ARRAY */
;;;1014       if (GUI_ARRAY_AddItem(&pObj->RowArray, NULL, sizeof(LISTVIEW_ROW)) == 0) {
000dac  f04f020c          MOV      r2,#0xc
000db0  f04f0100          MOV      r1,#0
000db4  f104002a          ADD      r0,r4,#0x2a
000db8  f7fffffe          BL       GUI_ARRAY_AddItem
000dbc  2800              CMP      r0,#0
000dbe  d167              BNE      |L1.3728|
;;;1015         LISTVIEW_ROW* pRow;
;;;1016         int i, RowIndex, NumColumns, NumBytes;
;;;1017         const char* s;
;;;1018         pObj       = LISTVIEW_H2P(hObj);                                         /* Restore after allocating memory */
000dc0  4650              MOV      r0,r10
000dc2  f7fffffe          BL       GUI_ALLOC_h2p
000dc6  4604              MOV      r4,r0
;;;1019         RowIndex   = LISTVIEW__GetNumRows(pObj) - 1;
000dc8  4620              MOV      r0,r4
000dca  f7fffffe          BL       LISTVIEW__GetNumRows
000dce  f1a00b01          SUB      r11,r0,#1
;;;1020         NumColumns = LISTVIEW__GetNumColumns(pObj);
000dd2  4620              MOV      r0,r4
000dd4  f7fffffe          BL       LISTVIEW__GetNumColumns
000dd8  9000              STR      r0,[sp,#0]
;;;1021         pRow       = (LISTVIEW_ROW*) GUI_ARRAY_GetpItem(&pObj->RowArray, RowIndex);
000dda  4659              MOV      r1,r11
000ddc  f104002a          ADD      r0,r4,#0x2a
000de0  f7fffffe          BL       GUI_ARRAY_GetpItem
000de4  9001              STR      r0,[sp,#4]
;;;1022         GUI_ARRAY_CREATE(&pRow->CellArray);
;;;1023         /* Add columns for the new row */
;;;1024         for (i = 0; i < NumColumns; i++) {
000de6  f04f0600          MOV      r6,#0
000dea  e033              B        |L1.3668|
                  |L1.3564|
;;;1025           LISTVIEW_CELL* pCell;
;;;1026           s = (ppText) ? *ppText++ : 0;
000dec  b10d              CBZ      r5,|L1.3570|
000dee  cd01              LDM      r5!,{r0}
000df0  e001              B        |L1.3574|
                  |L1.3570|
000df2  f04f0000          MOV      r0,#0
                  |L1.3574|
000df6  4680              MOV      r8,r0
;;;1027           if (s == 0) {
000df8  f1b80f00          CMP      r8,#0
000dfc  d101              BNE      |L1.3586|
;;;1028             ppText = 0;
000dfe  f04f0500          MOV      r5,#0
                  |L1.3586|
;;;1029           }
;;;1030           NumBytes = GUI__strlen(s) + 1;     /* 0 if no string is specified (s == NULL) */
000e02  4640              MOV      r0,r8
000e04  f7fffffe          BL       GUI__strlen
000e08  f1000701          ADD      r7,r0,#1
;;;1031           if (GUI_ARRAY_AddItem(&pRow->CellArray, NULL, sizeof(LISTVIEW_CELL) + NumBytes)) {
000e0c  f1070204          ADD      r2,r7,#4
000e10  f04f0100          MOV      r1,#0
000e14  9801              LDR      r0,[sp,#4]
000e16  f7fffffe          BL       GUI_ARRAY_AddItem
000e1a  b118              CBZ      r0,|L1.3620|
;;;1032             r = 1;
000e1c  f04f0001          MOV      r0,#1
000e20  9002              STR      r0,[sp,#8]
;;;1033             break;
000e22  e01a              B        |L1.3674|
                  |L1.3620|
;;;1034           }
;;;1035           pObj  = LISTVIEW_H2P(hObj);                                            /* Restore after allocating memory */
000e24  4650              MOV      r0,r10
000e26  f7fffffe          BL       GUI_ALLOC_h2p
000e2a  4604              MOV      r4,r0
;;;1036           pRow  = (LISTVIEW_ROW*) GUI_ARRAY_GetpItem(&pObj->RowArray, RowIndex); /* Restore after allocating memory */
000e2c  4659              MOV      r1,r11
000e2e  f104002a          ADD      r0,r4,#0x2a
000e32  f7fffffe          BL       GUI_ARRAY_GetpItem
000e36  9001              STR      r0,[sp,#4]
;;;1037           pCell = (LISTVIEW_CELL*) GUI_ARRAY_GetpItem(&pRow->CellArray, i);
000e38  4631              MOV      r1,r6
000e3a  9801              LDR      r0,[sp,#4]
000e3c  f7fffffe          BL       GUI_ARRAY_GetpItem
000e40  4681              MOV      r9,r0
;;;1038           if (NumBytes > 1) {
000e42  2f01              CMP      r7,#1
000e44  dd04              BLE      |L1.3664|
;;;1039             strcpy(pCell->acText, s);
000e46  4641              MOV      r1,r8
000e48  f1090002          ADD      r0,r9,#2
000e4c  f7fffffe          BL       strcpy
                  |L1.3664|
000e50  f1060601          ADD      r6,r6,#1              ;1024
                  |L1.3668|
000e54  9800              LDR      r0,[sp,#0]            ;1024
000e56  4286              CMP      r6,r0                 ;1024
000e58  dbc8              BLT      |L1.3564|
                  |L1.3674|
000e5a  bf00              NOP                            ;1033
;;;1040           }
;;;1041         }
;;;1042         pObj->IsSorted = 0;
000e5c  f04f0000          MOV      r0,#0
000e60  f8840094          STRB     r0,[r4,#0x94]
;;;1043         LISTVIEW__UpdateScrollParas(hObj, pObj);
000e64  4621              MOV      r1,r4
000e66  4650              MOV      r0,r10
000e68  f7fffffe          BL       LISTVIEW__UpdateScrollParas
;;;1044         if (pObj->hSort && (pObj->SortIndex >= 0)) {
000e6c  f8b40092          LDRH     r0,[r4,#0x92]
000e70  b140              CBZ      r0,|L1.3716|
000e72  6ea0              LDR      r0,[r4,#0x68]
000e74  2800              CMP      r0,#0
000e76  db05              BLT      |L1.3716|
;;;1045           LISTVIEW__InvalidateInsideArea(hObj, pObj);
000e78  4621              MOV      r1,r4
000e7a  4650              MOV      r0,r10
000e7c  f7fffffe          BL       LISTVIEW__InvalidateInsideArea
000e80  e005              B        |L1.3726|
000e82  e009              B        |L1.3736|
                  |L1.3716|
;;;1046         } else {
;;;1047           LISTVIEW__InvalidateRow(hObj, pObj, RowIndex);
000e84  465a              MOV      r2,r11
000e86  4621              MOV      r1,r4
000e88  4650              MOV      r0,r10
000e8a  f7fffffe          BL       LISTVIEW__InvalidateRow
                  |L1.3726|
;;;1048         }
;;;1049       } else {
000e8e  e002              B        |L1.3734|
                  |L1.3728|
;;;1050         r = 1;
000e90  f04f0001          MOV      r0,#1
000e94  9002              STR      r0,[sp,#8]
                  |L1.3734|
;;;1051       }
;;;1052       WM_UNLOCK();
;;;1053     }
000e96  bf00              NOP      
                  |L1.3736|
;;;1054     return r;
000e98  9802              LDR      r0,[sp,#8]
;;;1055   }
000e9a  e8bd8ffe          POP      {r1-r11,pc}
;;;1056   
                          ENDP

000e9e  0000              DCW      0x0000
                  |L1.3744|
                          DCD      LISTVIEW_DefaultProps

                          AREA ||.data||, DATA, ALIGN=2

                  LISTVIEW_DefaultProps
                          DCD      0x00ffffff
                          DCD      0x00808080
                          DCD      0x00ff0000
                          DCD      0x00d3d3d3
                          DCD      0x00000000
                          DCD      0x00ffffff
                          DCD      0x00ffffff
                          DCD      0x00808080
                          DCD      0x00d3d3d3
                          DCD      GUI_Font13_1
000028  000a              DCW      0x000a
00002a  0000              DCB      0x00,0x00

; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\wm_userdata.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\wm_userdata.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\wm_userdata.crf GUI\WM\WM_UserData.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  Min PROC
;;;34     */
;;;35     static int Min(int v0, int v1) {
000000  4602              MOV      r2,r0
;;;36       return (v0 < v1) ? v0 : v1;
000002  428a              CMP      r2,r1
000004  da01              BGE      |L1.10|
000006  4610              MOV      r0,r2
                  |L1.8|
;;;37     }
000008  4770              BX       lr
                  |L1.10|
00000a  4608              MOV      r0,r1                 ;36
00000c  e7fc              B        |L1.8|
;;;38     
                          ENDP

                  _CalcNumBytes PROC
;;;42     */
;;;43     static int _CalcNumBytes(WM_HWIN hWin, int NumBytes) {
00000e  b570              PUSH     {r4-r6,lr}
000010  4604              MOV      r4,r0
000012  460d              MOV      r5,r1
;;;44       return Min(GUI_ALLOC_GetSize(hWin) - sizeof(WM_Obj), NumBytes);
000014  4620              MOV      r0,r4
000016  f7fffffe          BL       GUI_ALLOC_GetSize
00001a  f1a00620          SUB      r6,r0,#0x20
00001e  4629              MOV      r1,r5
000020  4630              MOV      r0,r6
000022  f7fffffe          BL       Min
;;;45     }
000026  bd70              POP      {r4-r6,pc}
;;;46     
                          ENDP

                  WM_GetUserData PROC
;;;63     */
;;;64     int WM_GetUserData(WM_HWIN hWin, void* pDest, int NumBytes) {
000028  e92d41f0          PUSH     {r4-r8,lr}
00002c  4605              MOV      r5,r0
00002e  460e              MOV      r6,r1
000030  4614              MOV      r4,r2
;;;65       if (hWin) {
000032  b17d              CBZ      r5,|L1.84|
;;;66         WM_Obj *pWin;
;;;67         NumBytes = _CalcNumBytes(hWin, NumBytes);
000034  4621              MOV      r1,r4
000036  4628              MOV      r0,r5
000038  f7fffffe          BL       _CalcNumBytes
00003c  4604              MOV      r4,r0
;;;68         WM_LOCK();
;;;69         pWin = WM_H2P(hWin);
00003e  4628              MOV      r0,r5
000040  f7fffffe          BL       GUI_ALLOC_h2p
000044  4607              MOV      r7,r0
;;;70         memcpy(pDest, pWin + 1, NumBytes);
000046  4622              MOV      r2,r4
000048  f1070120          ADD      r1,r7,#0x20
00004c  4630              MOV      r0,r6
00004e  f7fffffe          BL       __aeabi_memcpy
;;;71         WM_UNLOCK();
;;;72       }
000052  bf00              NOP      
                  |L1.84|
;;;73       return NumBytes;
000054  4620              MOV      r0,r4
;;;74     }
000056  e8bd81f0          POP      {r4-r8,pc}
;;;75     
                          ENDP

                  WM_SetUserData PROC
;;;84     */
;;;85     int WM_SetUserData(WM_HWIN hWin, const void* pSrc, int NumBytes) {
00005a  e92d41f0          PUSH     {r4-r8,lr}
00005e  4605              MOV      r5,r0
000060  460e              MOV      r6,r1
000062  4614              MOV      r4,r2
;;;86       if (hWin) {
000064  b17d              CBZ      r5,|L1.134|
;;;87         WM_Obj *pWin;
;;;88         NumBytes = _CalcNumBytes(hWin, NumBytes);
000066  4621              MOV      r1,r4
000068  4628              MOV      r0,r5
00006a  f7fffffe          BL       _CalcNumBytes
00006e  4604              MOV      r4,r0
;;;89         WM_LOCK();
;;;90         pWin = WM_H2P(hWin);
000070  4628              MOV      r0,r5
000072  f7fffffe          BL       GUI_ALLOC_h2p
000076  4607              MOV      r7,r0
;;;91         memcpy(pWin + 1, pSrc, NumBytes);
000078  4622              MOV      r2,r4
00007a  4631              MOV      r1,r6
00007c  f1070020          ADD      r0,r7,#0x20
000080  f7fffffe          BL       __aeabi_memcpy
;;;92         WM_UNLOCK();
;;;93       }
000084  bf00              NOP      
                  |L1.134|
;;;94       return NumBytes;
000086  4620              MOV      r0,r4
;;;95     }
000088  e8bd81f0          POP      {r4-r8,pc}
;;;96     
                          ENDP


; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\edit_getcursorpixelpos.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\edit_getcursorpixelpos.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\edit_getcursorpixelpos.crf GUI\Widget\EDIT_GetCursorPixelPos.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  EDIT_GetCursorPixelPos PROC
;;;33     */
;;;34     void EDIT_GetCursorPixelPos(EDIT_Handle hObj, int * pxPos, int * pyPos) {
000000  e92d47ff          PUSH     {r0-r10,lr}
000004  4605              MOV      r5,r0
000006  460e              MOV      r6,r1
000008  4617              MOV      r7,r2
;;;35       if (hObj) {
00000a  2d00              CMP      r5,#0
00000c  d040              BEQ      |L1.144|
;;;36         int NumChars;
;;;37         EDIT_Obj * pObj;
;;;38         const char GUI_UNI_PTR * pText;
;;;39         GUI_RECT rInside, rText;
;;;40         WM_LOCK();
;;;41         pObj = EDIT_H2P(hObj);
00000e  4628              MOV      r0,r5
000010  f7fffffe          BL       GUI_ALLOC_h2p
000014  4604              MOV      r4,r0
;;;42         if (pObj->hpText) {
000016  8d20              LDRH     r0,[r4,#0x28]
000018  b3c8              CBZ      r0,|L1.142|
;;;43           GUI_SetFont(pObj->Props.pFont);
00001a  6de0              LDR      r0,[r4,#0x5c]
00001c  f7fffffe          BL       GUI_SetFont
;;;44           WIDGET__GetInsideRect(&pObj->Widget, &rInside);
000020  a902              ADD      r1,sp,#8
000022  4620              MOV      r0,r4
000024  f7fffffe          BL       WIDGET__GetInsideRect
;;;45           pText       = (const char*) GUI_ALLOC_h2p(pObj->hpText);
000028  f9b40028          LDRSH    r0,[r4,#0x28]
00002c  f7fffffe          BL       GUI_ALLOC_h2p
000030  4681              MOV      r9,r0
;;;46           NumChars    = GUI__GetNumChars(pText);
000032  4648              MOV      r0,r9
000034  f7fffffe          BL       GUI__GetNumChars
000038  4680              MOV      r8,r0
;;;47           rInside.x0 += pObj->Props.Border + EDIT_XOFF;
00003a  f8bd1008          LDRH     r1,[sp,#8]
00003e  6da0              LDR      r0,[r4,#0x58]
000040  f1000001          ADD      r0,r0,#1
000044  4408              ADD      r0,r0,r1
000046  b200              SXTH     r0,r0
000048  f8ad0008          STRH     r0,[sp,#8]
;;;48           rInside.x1 -= pObj->Props.Border + EDIT_XOFF;
00004c  f8bd100c          LDRH     r1,[sp,#0xc]
000050  6da0              LDR      r0,[r4,#0x58]
000052  f1000001          ADD      r0,r0,#1
000056  eba10000          SUB      r0,r1,r0
00005a  b200              SXTH     r0,r0
00005c  f8ad000c          STRH     r0,[sp,#0xc]
;;;49           GUI__CalcTextRect(pText, &rInside, &rText, pObj->Props.Align);
000060  466a              MOV      r2,sp
000062  a902              ADD      r1,sp,#8
000064  4648              MOV      r0,r9
000066  6d63              LDR      r3,[r4,#0x54]
000068  f7fffffe          BL       GUI__CalcTextRect
;;;50           rText.x0 += GUI__GetCursorPosX(pText, pObj->CursorPos, NumChars);
00006c  4642              MOV      r2,r8
00006e  4648              MOV      r0,r9
000070  6c21              LDR      r1,[r4,#0x40]
000072  f7fffffe          BL       GUI__GetCursorPosX
000076  f8bd1000          LDRH     r1,[sp,#0]
00007a  4408              ADD      r0,r0,r1
00007c  b200              SXTH     r0,r0
00007e  f8ad0000          STRH     r0,[sp,#0]
;;;51           *pxPos = rText.x0;
000082  f9bd0000          LDRSH    r0,[sp,#0]
000086  6030              STR      r0,[r6,#0]
;;;52           *pyPos = rText.y0;
000088  f9bd0002          LDRSH    r0,[sp,#2]
00008c  6038              STR      r0,[r7,#0]
                  |L1.142|
;;;53         }
;;;54         WM_UNLOCK();
;;;55       }
00008e  bf00              NOP      
                  |L1.144|
;;;56     }
000090  e8bd87ff          POP      {r0-r10,pc}
;;;57     
                          ENDP


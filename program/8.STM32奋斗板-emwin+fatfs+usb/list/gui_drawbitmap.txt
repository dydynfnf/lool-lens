; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\gui_drawbitmap.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\gui_drawbitmap.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\gui_drawbitmap.crf GUI\Core\GUI_DrawBitmap.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  GL_DrawBitmap PROC
;;;38     */
;;;39     void GL_DrawBitmap(const GUI_BITMAP GUI_UNI_PTR * pBitmap, int x0, int y0) {
000000  e92d43f0          PUSH     {r4-r9,lr}
000004  b087              SUB      sp,sp,#0x1c
000006  4604              MOV      r4,r0
000008  460e              MOV      r6,r1
00000a  4617              MOV      r7,r2
;;;40       GUI_DRAWMODE PrevDraw;
;;;41       const GUI_LOGPALETTE GUI_UNI_PTR * pPal;
;;;42       pPal = pBitmap->pPal;
00000c  f8d4800c          LDR      r8,[r4,#0xc]
;;;43       PrevDraw = GUI_SetDrawMode(0);  /* No Get... at this point */
000010  f04f0000          MOV      r0,#0
000014  f7fffffe          BL       GUI_SetDrawMode
000018  4605              MOV      r5,r0
;;;44       GUI_SetDrawMode((pPal && pPal->HasTrans) ? (PrevDraw|GUI_DRAWMODE_TRANS) : PrevDraw &(~GUI_DRAWMODE_TRANS));
00001a  f1b80f00          CMP      r8,#0
00001e  d005              BEQ      |L1.44|
000020  f8981004          LDRB     r1,[r8,#4]
000024  b111              CBZ      r1,|L1.44|
000026  f0450102          ORR      r1,r5,#2
00002a  e001              B        |L1.48|
                  |L1.44|
00002c  f0250102          BIC      r1,r5,#2
                  |L1.48|
000030  4608              MOV      r0,r1
000032  f7fffffe          BL       GUI_SetDrawMode
;;;45       if (pBitmap->pMethods) {
000036  6920              LDR      r0,[r4,#0x10]
000038  b170              CBZ      r0,|L1.88|
;;;46         #if GUI_COMPILER_SUPPORTS_FP      /* Do not support this on VERY simple chips and compilers */
;;;47           pBitmap->pMethods->pfDraw(x0, y0, pBitmap->XSize ,pBitmap->YSize, (U8 const *)pBitmap->pData, pBitmap->pPal, 1, 1);
00003a  2201              MOVS     r2,#1
00003c  e9d40102          LDRD     r0,r1,[r4,#8]
000040  e88d0007          STM      sp,{r0-r2}
000044  9203              STR      r2,[sp,#0xc]
000046  8863              LDRH     r3,[r4,#2]
000048  8822              LDRH     r2,[r4,#0]
00004a  6920              LDR      r0,[r4,#0x10]
00004c  4639              MOV      r1,r7
00004e  f8d0c000          LDR      r12,[r0,#0]
000052  4630              MOV      r0,r6
000054  47e0              BLX      r12
000056  e01f              B        |L1.152|
                  |L1.88|
;;;48         #endif
;;;49       } else {
;;;50         const LCD_PIXELINDEX* pTrans;
;;;51         pTrans = LCD_GetpPalConvTable(pBitmap->pPal);
000058  68e0              LDR      r0,[r4,#0xc]
00005a  f7fffffe          BL       LCD_GetpPalConvTable
00005e  4681              MOV      r9,r0
;;;52         if (!pTrans) {
000060  f1b90f00          CMP      r9,#0
000064  d107              BNE      |L1.118|
;;;53           pTrans = (pBitmap->BitsPerPixel != 1) ? NULL : &LCD_BKCOLORINDEX;
000066  88e0              LDRH     r0,[r4,#6]
000068  2801              CMP      r0,#1
00006a  d002              BEQ      |L1.114|
00006c  f04f0000          MOV      r0,#0
000070  e000              B        |L1.116|
                  |L1.114|
000072  4823              LDR      r0,|L1.256|
                  |L1.116|
000074  4681              MOV      r9,r0
                  |L1.118|
;;;54         }
;;;55         LCD_DrawBitmap( x0,y0
000076  88a1              LDRH     r1,[r4,#4]
000078  88e2              LDRH     r2,[r4,#6]
00007a  68a0              LDR      r0,[r4,#8]
00007c  e9cd0904          STRD     r0,r9,[sp,#0x10]
000080  e9cd2102          STRD     r2,r1,[sp,#8]
000084  2001              MOVS     r0,#1
000086  9000              STR      r0,[sp,#0]
000088  9001              STR      r0,[sp,#4]
00008a  8863              LDRH     r3,[r4,#2]
00008c  8822              LDRH     r2,[r4,#0]
00008e  4639              MOV      r1,r7
000090  4630              MOV      r0,r6
000092  f7fffffe          BL       LCD_DrawBitmap
;;;56                         ,pBitmap->XSize ,pBitmap->YSize
;;;57                         ,1,1
;;;58                         ,pBitmap->BitsPerPixel
;;;59                         ,pBitmap->BytesPerLine
;;;60                         ,pBitmap->pData
;;;61                         ,pTrans);
;;;62       }
000096  bf00              NOP      
                  |L1.152|
;;;63       GUI_SetDrawMode(PrevDraw);
000098  4628              MOV      r0,r5
00009a  f7fffffe          BL       GUI_SetDrawMode
;;;64     }
00009e  b007              ADD      sp,sp,#0x1c
0000a0  e8bd83f0          POP      {r4-r9,pc}
;;;65     
                          ENDP

                  GUI_DrawBitmap PROC
;;;69     */
;;;70     void GUI_DrawBitmap(const GUI_BITMAP GUI_UNI_PTR * pBitmap, int x0, int y0) {
0000a4  b57c              PUSH     {r2-r6,lr}
0000a6  4604              MOV      r4,r0
0000a8  460d              MOV      r5,r1
0000aa  4616              MOV      r6,r2
;;;71       #if (GUI_WINSUPPORT)
;;;72         GUI_RECT r;
;;;73       #endif
;;;74       GUI_LOCK();
;;;75       #if (GUI_WINSUPPORT)
;;;76         WM_ADDORG(x0,y0);
0000ac  4814              LDR      r0,|L1.256|
0000ae  6c00              LDR      r0,[r0,#0x40]  ; GUI_Context
0000b0  4405              ADD      r5,r5,r0
0000b2  4813              LDR      r0,|L1.256|
0000b4  6c40              LDR      r0,[r0,#0x44]  ; GUI_Context
0000b6  4406              ADD      r6,r6,r0
;;;77         r.x1 = (r.x0 = x0) + pBitmap->XSize-1;
0000b8  b228              SXTH     r0,r5
0000ba  f8ad0000          STRH     r0,[sp,#0]
0000be  8821              LDRH     r1,[r4,#0]
0000c0  4408              ADD      r0,r0,r1
0000c2  f1a00001          SUB      r0,r0,#1
0000c6  b200              SXTH     r0,r0
0000c8  f8ad0004          STRH     r0,[sp,#4]
;;;78         r.y1 = (r.y0 = y0) + pBitmap->YSize-1;
0000cc  b230              SXTH     r0,r6
0000ce  f8ad0002          STRH     r0,[sp,#2]
0000d2  8861              LDRH     r1,[r4,#2]
0000d4  4408              ADD      r0,r0,r1
0000d6  f1a00001          SUB      r0,r0,#1
0000da  b200              SXTH     r0,r0
0000dc  f8ad0006          STRH     r0,[sp,#6]
;;;79         WM_ITERATE_START(&r) {
0000e0  4668              MOV      r0,sp
0000e2  f7fffffe          BL       WM__InitIVRSearch
0000e6  b148              CBZ      r0,|L1.252|
0000e8  bf00              NOP      
                  |L1.234|
;;;80       #endif
;;;81       GL_DrawBitmap(pBitmap, x0, y0);
0000ea  4632              MOV      r2,r6
0000ec  4629              MOV      r1,r5
0000ee  4620              MOV      r0,r4
0000f0  f7fffffe          BL       GL_DrawBitmap
;;;82       #if (GUI_WINSUPPORT)
;;;83         } WM_ITERATE_END();
0000f4  f7fffffe          BL       WM__GetNextIVR
0000f8  2800              CMP      r0,#0
0000fa  d1f6              BNE      |L1.234|
                  |L1.252|
;;;84       #endif
;;;85       GUI_UNLOCK();
;;;86     }
0000fc  bd7c              POP      {r2-r6,pc}
;;;87     
                          ENDP

0000fe  0000              DCW      0x0000
                  |L1.256|
                          DCD      GUI_Context

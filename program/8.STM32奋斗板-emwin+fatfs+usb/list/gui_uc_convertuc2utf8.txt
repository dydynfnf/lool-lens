; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\gui_uc_convertuc2utf8.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\gui_uc_convertuc2utf8.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\gui_uc_convertuc2utf8.crf GUI\Core\GUI_UC_ConvertUC2UTF8.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  GUI_UC_ConvertUC2UTF8 PROC
;;;31     */
;;;32     int GUI_UC_ConvertUC2UTF8(const U16 GUI_UNI_PTR * s, int Len, char * pBuffer, int BufferSize) {
000000  e92d47f0          PUSH     {r4-r10,lr}
000004  4604              MOV      r4,r0
000006  4688              MOV      r8,r1
000008  4615              MOV      r5,r2
00000a  4699              MOV      r9,r3
;;;33       int LenDest;
;;;34       LenDest = 0;
00000c  f04f0600          MOV      r6,#0
;;;35       GUI_LOCK();
;;;36       while (Len--) {
000010  e00d              B        |L1.46|
                  |L1.18|
;;;37         int NumBytes;
;;;38         NumBytes = GUI_UC_Encode(pBuffer, *s++);
000012  f8341b02          LDRH     r1,[r4],#2
000016  4628              MOV      r0,r5
000018  f7fffffe          BL       GUI_UC_Encode
00001c  4607              MOV      r7,r0
;;;39         if ((LenDest + NumBytes) > BufferSize) {
00001e  eb060007          ADD      r0,r6,r7
000022  4548              CMP      r0,r9
000024  dd00              BLE      |L1.40|
;;;40           break;
000026  e007              B        |L1.56|
                  |L1.40|
;;;41         }
;;;42         pBuffer += NumBytes;
000028  443d              ADD      r5,r5,r7
;;;43         LenDest += NumBytes;
00002a  443e              ADD      r6,r6,r7
;;;44       }
00002c  bf00              NOP      
                  |L1.46|
00002e  ea5f0008          MOVS     r0,r8                 ;36
000032  f1a80801          SUB      r8,r8,#1              ;36
000036  d1ec              BNE      |L1.18|
                  |L1.56|
000038  bf00              NOP                            ;40
;;;45       GUI_UNLOCK();
;;;46       return LenDest;
00003a  4630              MOV      r0,r6
;;;47     }
00003c  e8bd87f0          POP      {r4-r10,pc}
;;;48     
                          ENDP


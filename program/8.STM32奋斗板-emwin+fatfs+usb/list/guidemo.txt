; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\guidemo.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\guidemo.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\FWlib\inc -I.\user -I.\CM3 -I.\MALLOC -I.\TFT -I.\EMWIN\EMWIN_INC -I.\EMWIN\DEMO -I.\PNG -I.\FATFS -I.\SDIO -I.\USB\inc -I.\USBCFG\inc -IE:\material\GUI\8.STM32·Ü¶·°å-emwin+fatfs+usb\RTE -Id:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.0.0 -Id:\Keil_v5\ARM\CMSIS\Include -Id:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.0.0\Device\Include -D__UVISION_VERSION=514 -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\guidemo.crf EMWIN\DEMO\GUIDEMO.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _ClearHalt PROC
;;;93     */
;;;94     static void _ClearHalt(void) {
000000  2000              MOVS     r0,#0
;;;95       _Halt          = 0;
000002  49fa              LDR      r1,|L1.1004|
000004  6008              STR      r0,[r1,#0]  ; _Halt
;;;96       _HaltTime      = 0;
000006  49fa              LDR      r1,|L1.1008|
000008  6008              STR      r0,[r1,#0]  ; _HaltTime
;;;97       _HaltTimeStart = 0;
00000a  49fa              LDR      r1,|L1.1012|
00000c  6008              STR      r0,[r1,#0]  ; _HaltTimeStart
;;;98     }
00000e  4770              BX       lr
;;;99     
                          ENDP

                  _DrawBkSimple PROC
;;;103    */
;;;104    static void _DrawBkSimple(void) {
000010  b510              PUSH     {r4,lr}
;;;105      GUI_SetBkColor(BK_COLOR_1);
000012  f44f0008          MOV      r0,#0x880000
000016  f7fffffe          BL       GUI_SetBkColor
;;;106      GUI_Clear();
00001a  f7fffffe          BL       GUI_Clear
;;;107      if (_DrawLogo) {
00001e  48f6              LDR      r0,|L1.1016|
000020  7800              LDRB     r0,[r0,#0]  ; _DrawLogo
000022  b120              CBZ      r0,|L1.46|
;;;108        GUI_DrawBitmap(&bmSeggerLogo70x35, LOGO_DIST_BORDER, LOGO_DIST_BORDER);
000024  2205              MOVS     r2,#5
000026  4611              MOV      r1,r2
000028  48f4              LDR      r0,|L1.1020|
00002a  f7fffffe          BL       GUI_DrawBitmap
                  |L1.46|
;;;109      }
;;;110    }
00002e  bd10              POP      {r4,pc}
;;;111    
                          ENDP

                  _DrawBk PROC
;;;116    #if GUIDEMO_USE_AUTO_BK
;;;117    static void _DrawBk(void) {
000030  b57c              PUSH     {r2-r6,lr}
;;;118      int xSize;
;;;119      int ySize;
;;;120    
;;;121      xSize = LCD_GetXSize();
000032  f7fffffe          BL       LCD_GetXSize
000036  4604              MOV      r4,r0
;;;122      ySize = LCD_GetYSize();
000038  f7fffffe          BL       LCD_GetYSize
00003c  4605              MOV      r5,r0
;;;123      GUI_DrawGradientV(0, 0, xSize, ySize, BK_COLOR_0, BK_COLOR_1);
00003e  f44f0008          MOV      r0,#0x880000
000042  49ef              LDR      r1,|L1.1024|
000044  462b              MOV      r3,r5
000046  4622              MOV      r2,r4
000048  e9cd1000          STRD     r1,r0,[sp,#0]
00004c  2100              MOVS     r1,#0
00004e  4608              MOV      r0,r1
000050  f7fffffe          BL       GUI_DrawGradientV
;;;124      if (_DrawLogo) {
000054  48e8              LDR      r0,|L1.1016|
000056  7800              LDRB     r0,[r0,#0]  ; _DrawLogo
000058  b120              CBZ      r0,|L1.100|
;;;125        GUI_DrawBitmap(&bmSeggerLogo70x35, LOGO_DIST_BORDER, LOGO_DIST_BORDER);
00005a  2205              MOVS     r2,#5
00005c  4611              MOV      r1,r2
00005e  48e7              LDR      r0,|L1.1020|
000060  f7fffffe          BL       GUI_DrawBitmap
                  |L1.100|
;;;126      }
;;;127    }
000064  bd7c              POP      {r2-r6,pc}
;;;128    #endif
                          ENDP

                  _DrawBkCircle PROC
;;;134    #if GUIDEMO_USE_AUTO_BK
;;;135    static void _DrawBkCircle(void) {
000066  e92d5fff          PUSH     {r0-r12,lr}
;;;136      static GUI_MEMDEV_Handle   hMemStretch;
;;;137      GUI_MEMDEV_Handle          hMemGradient;
;;;138      GUI_MEMDEV_Handle          hMemCircle;
;;;139      GUI_MEMDEV_Handle          hMemOld;
;;;140      int                        CircleWidth;
;;;141      int                        ySizeV;
;;;142      int                        xSize;
;;;143      int                        ySize;
;;;144      int                        i;
;;;145      U32                      * pData;
;;;146    
;;;147      xSize  = LCD_GetXSize();
00006a  f7fffffe          BL       LCD_GetXSize
00006e  4607              MOV      r7,r0
;;;148      ySize  = LCD_GetYSize();
000070  f7fffffe          BL       LCD_GetYSize
000074  4604              MOV      r4,r0
;;;149      ySizeV = LCD_GetVYSize();
000076  f7fffffe          BL       LCD_GetVYSize
00007a  4683              MOV      r11,r0
;;;150      if (ySizeV > ySize) {
00007c  45a3              CMP      r11,r4
00007e  dd0a              BLE      |L1.150|
;;;151        GUI_SetBkColor(BK_COLOR_1);
000080  f44f0008          MOV      r0,#0x880000
000084  f7fffffe          BL       GUI_SetBkColor
;;;152        GUI_ClearRect(0, ySize, xSize - 1, ySizeV - 1);
000088  f1ab0301          SUB      r3,r11,#1
00008c  1e7a              SUBS     r2,r7,#1
00008e  4621              MOV      r1,r4
000090  2000              MOVS     r0,#0
000092  f7fffffe          BL       GUI_ClearRect
                  |L1.150|
;;;153      }
;;;154      if (hMemStretch == 0) {
000096  48db              LDR      r0,|L1.1028|
000098  6800              LDR      r0,[r0,#0]  ; hMemStretch
00009a  2800              CMP      r0,#0
00009c  d169              BNE      |L1.370|
;;;155        CircleWidth  = (CIRCLE_RADIUS << 1) + 1;
00009e  26c9              MOVS     r6,#0xc9
;;;156        hMemCircle   = GUI_MEMDEV_CreateFixed(0, 0, CircleWidth, CircleWidth,   GUI_MEMDEV_NOTRANS, GUI_MEMDEV_APILIST_32, GUI_COLOR_CONV_8888);
0000a0  48d9              LDR      r0,|L1.1032|
0000a2  49da              LDR      r1,|L1.1036|
0000a4  2201              MOVS     r2,#1
0000a6  4633              MOV      r3,r6
0000a8  e9cd2100          STRD     r2,r1,[sp,#0]
0000ac  9002              STR      r0,[sp,#8]
0000ae  4632              MOV      r2,r6
0000b0  2100              MOVS     r1,#0
0000b2  4608              MOV      r0,r1
0000b4  f7fffffe          BL       GUI_MEMDEV_CreateFixed
0000b8  4682              MOV      r10,r0
;;;157        hMemStretch  = GUI_MEMDEV_CreateEx   (0, 0, xSize,       ySize,         GUI_MEMDEV_NOTRANS);
0000ba  2001              MOVS     r0,#1
0000bc  4623              MOV      r3,r4
0000be  463a              MOV      r2,r7
0000c0  2100              MOVS     r1,#0
0000c2  9000              STR      r0,[sp,#0]
0000c4  4608              MOV      r0,r1
0000c6  f7fffffe          BL       GUI_MEMDEV_CreateEx
0000ca  49ce              LDR      r1,|L1.1028|
0000cc  6008              STR      r0,[r1,#0]  ; hMemStretch
;;;158        hMemGradient = GUI_MEMDEV_CreateFixed(0, 0, 1,           CIRCLE_RADIUS, GUI_MEMDEV_NOTRANS, GUI_MEMDEV_APILIST_32, GUI_COLOR_CONV_8888);
0000ce  48ce              LDR      r0,|L1.1032|
0000d0  49ce              LDR      r1,|L1.1036|
0000d2  2201              MOVS     r2,#1
0000d4  2364              MOVS     r3,#0x64
0000d6  e9cd2100          STRD     r2,r1,[sp,#0]
0000da  9002              STR      r0,[sp,#8]
0000dc  2100              MOVS     r1,#0
0000de  4608              MOV      r0,r1
0000e0  f7fffffe          BL       GUI_MEMDEV_CreateFixed
0000e4  4681              MOV      r9,r0
;;;159        //
;;;160        // Initialize background
;;;161        //
;;;162        hMemOld = GUI_MEMDEV_Select(hMemCircle);
0000e6  4650              MOV      r0,r10
0000e8  f7fffffe          BL       GUI_MEMDEV_Select
0000ec  9003              STR      r0,[sp,#0xc]
;;;163        GUI_SetBkColor(BK_COLOR_1);
0000ee  f44f0008          MOV      r0,#0x880000
0000f2  f7fffffe          BL       GUI_SetBkColor
;;;164        GUI_Clear();
0000f6  f7fffffe          BL       GUI_Clear
;;;165        //
;;;166        // Create Gradient
;;;167        //
;;;168        GUI_MEMDEV_Select(hMemGradient);
0000fa  4648              MOV      r0,r9
0000fc  f7fffffe          BL       GUI_MEMDEV_Select
;;;169        GUI_DrawGradientV(0, 0, 0, CIRCLE_RADIUS, BK_COLOR_0, BK_COLOR_1);
000100  f44f0008          MOV      r0,#0x880000
000104  49be              LDR      r1,|L1.1024|
000106  2364              MOVS     r3,#0x64
000108  2200              MOVS     r2,#0
00010a  e9cd1000          STRD     r1,r0,[sp,#0]
00010e  4611              MOV      r1,r2
000110  4610              MOV      r0,r2
000112  f7fffffe          BL       GUI_DrawGradientV
;;;170        //
;;;171        // Get color and draw circles
;;;172        //
;;;173        pData = (U32 *)GUI_MEMDEV_GetDataPtr(hMemGradient);
000116  4648              MOV      r0,r9
000118  f7fffffe          BL       GUI_MEMDEV_GetDataPtr
00011c  4680              MOV      r8,r0
;;;174        GUI_MEMDEV_Select(hMemCircle);
00011e  4650              MOV      r0,r10
000120  f7fffffe          BL       GUI_MEMDEV_Select
;;;175        for (i = 0; i < CIRCLE_RADIUS; i++, pData++) {
000124  2500              MOVS     r5,#0
000126  e00b              B        |L1.320|
                  |L1.296|
;;;176          GUI_SetColor(*pData);
000128  f8d80000          LDR      r0,[r8,#0]
00012c  f7fffffe          BL       GUI_SetColor
;;;177          GUI_DrawCircle(CIRCLE_RADIUS, CIRCLE_RADIUS, i);
000130  462a              MOV      r2,r5
000132  2164              MOVS     r1,#0x64
000134  4608              MOV      r0,r1
000136  f7fffffe          BL       GUI_DrawCircle
00013a  1c6d              ADDS     r5,r5,#1              ;175
00013c  f1080804          ADD      r8,r8,#4              ;175
                  |L1.320|
000140  2d64              CMP      r5,#0x64              ;175
000142  dbf1              BLT      |L1.296|
;;;178        }
;;;179        //
;;;180        // Stretch and display
;;;181        //
;;;182        GUI_MEMDEV_Select(hMemStretch);
000144  48af              LDR      r0,|L1.1028|
000146  6800              LDR      r0,[r0,#0]  ; hMemStretch
000148  f7fffffe          BL       GUI_MEMDEV_Select
;;;183        GUI_MEMDEV_DrawPerspectiveX(hMemCircle, 0, 0, ySize, ySize, xSize, 0);
00014c  2000              MOVS     r0,#0
00014e  4623              MOV      r3,r4
000150  4602              MOV      r2,r0
000152  4601              MOV      r1,r0
000154  e9cd4700          STRD     r4,r7,[sp,#0]
000158  9002              STR      r0,[sp,#8]
00015a  4650              MOV      r0,r10
00015c  f7fffffe          BL       GUI_MEMDEV_DrawPerspectiveX
;;;184        GUI_MEMDEV_Delete(hMemCircle);
000160  4650              MOV      r0,r10
000162  f7fffffe          BL       GUI_MEMDEV_Delete
;;;185        GUI_MEMDEV_Delete(hMemGradient);
000166  4648              MOV      r0,r9
000168  f7fffffe          BL       GUI_MEMDEV_Delete
;;;186        GUI_MEMDEV_Select(hMemOld);
00016c  9803              LDR      r0,[sp,#0xc]
00016e  f7fffffe          BL       GUI_MEMDEV_Select
                  |L1.370|
;;;187      }
;;;188      GUI_MEMDEV_Write(hMemStretch);
000172  48a4              LDR      r0,|L1.1028|
000174  6800              LDR      r0,[r0,#0]  ; hMemStretch
000176  f7fffffe          BL       GUI_MEMDEV_Write
;;;189      if (_DrawLogo) {
00017a  489f              LDR      r0,|L1.1016|
00017c  7800              LDRB     r0,[r0,#0]  ; _DrawLogo
00017e  b120              CBZ      r0,|L1.394|
;;;190        GUI_DrawBitmap(&bmSeggerLogo70x35, LOGO_DIST_BORDER, LOGO_DIST_BORDER);
000180  2205              MOVS     r2,#5
000182  4611              MOV      r1,r2
000184  489d              LDR      r0,|L1.1020|
000186  f7fffffe          BL       GUI_DrawBitmap
                  |L1.394|
;;;191      }
;;;192    }
00018a  e8bd9fff          POP      {r0-r12,pc}
;;;193    #endif
                          ENDP

                  _HideProgress PROC
;;;199    #if GUI_WINSUPPORT
;;;200    static void _HideProgress(void) {
00018e  b510              PUSH     {r4,lr}
;;;201      PROGBAR_Handle hProg;
;;;202    
;;;203      hProg = WM_GetDialogItem(_hDialogControl, GUI_ID_PROGBAR0);
000190  f44f7104          MOV      r1,#0x210
000194  489e              LDR      r0,|L1.1040|
000196  6800              LDR      r0,[r0,#0]  ; _hDialogControl
000198  f7fffffe          BL       WM_GetDialogItem
00019c  4604              MOV      r4,r0
;;;204      WM_HideWindow(hProg);
00019e  4620              MOV      r0,r4
0001a0  f7fffffe          BL       WM_HideWindow
;;;205    }
0001a4  bd10              POP      {r4,pc}
;;;206    #endif
                          ENDP

                  _ShowProgress PROC
;;;212    #if GUI_WINSUPPORT
;;;213    static void _ShowProgress(void) {
0001a6  b510              PUSH     {r4,lr}
;;;214      PROGBAR_Handle hProg;
;;;215    
;;;216      hProg = WM_GetDialogItem(_hDialogControl, GUI_ID_PROGBAR0);
0001a8  f44f7104          MOV      r1,#0x210
0001ac  4898              LDR      r0,|L1.1040|
0001ae  6800              LDR      r0,[r0,#0]  ; _hDialogControl
0001b0  f7fffffe          BL       WM_GetDialogItem
0001b4  4604              MOV      r4,r0
;;;217      WM_ShowWindow(hProg);
0001b6  4620              MOV      r0,r4
0001b8  f7fffffe          BL       WM_ShowWindow
;;;218    }
0001bc  bd10              POP      {r4,pc}
;;;219    #endif
                          ENDP

                  _cbBk PROC
;;;226    #if GUI_WINSUPPORT
;;;227    static void _cbBk(WM_MESSAGE * pMsg) {
0001be  b570              PUSH     {r4-r6,lr}
0001c0  4604              MOV      r4,r0
;;;228      WM_KEY_INFO * pInfo;
;;;229    
;;;230      switch (pMsg->MsgId) {
0001c2  6820              LDR      r0,[r4,#0]
0001c4  280e              CMP      r0,#0xe
0001c6  d00b              BEQ      |L1.480|
0001c8  280f              CMP      r0,#0xf
0001ca  d002              BEQ      |L1.466|
0001cc  281e              CMP      r0,#0x1e
0001ce  d113              BNE      |L1.504|
0001d0  e003              B        |L1.474|
                  |L1.466|
;;;231      case WM_PAINT:
;;;232        _pfDrawBk();
0001d2  4890              LDR      r0,|L1.1044|
0001d4  6800              LDR      r0,[r0,#0]  ; _pfDrawBk
0001d6  4780              BLX      r0
;;;233        break;
0001d8  e012              B        |L1.512|
                  |L1.474|
;;;234      case WM_SET_FOCUS:
;;;235        pMsg->Data.v = 0;
0001da  2000              MOVS     r0,#0
0001dc  60e0              STR      r0,[r4,#0xc]
;;;236        break;
0001de  e00f              B        |L1.512|
                  |L1.480|
;;;237      case WM_KEY:
;;;238        pInfo = (WM_KEY_INFO *)pMsg->Data.p;
0001e0  68e5              LDR      r5,[r4,#0xc]
;;;239        if (pInfo->PressedCnt) {
0001e2  6868              LDR      r0,[r5,#4]
0001e4  b138              CBZ      r0,|L1.502|
;;;240          switch (pInfo->Key) {
0001e6  6828              LDR      r0,[r5,#0]
0001e8  286e              CMP      r0,#0x6e
0001ea  d103              BNE      |L1.500|
;;;241          case 'n':
;;;242            _Next = 1;
0001ec  2001              MOVS     r0,#1
0001ee  498a              LDR      r1,|L1.1048|
0001f0  6008              STR      r0,[r1,#0]  ; _Next
;;;243            break;
0001f2  bf00              NOP      
                  |L1.500|
0001f4  bf00              NOP      
                  |L1.502|
;;;244          }
;;;245        }
;;;246        break;
0001f6  e003              B        |L1.512|
                  |L1.504|
;;;247      default:
;;;248        WM_DefaultProc(pMsg);
0001f8  4620              MOV      r0,r4
0001fa  f7fffffe          BL       WM_DefaultProc
;;;249        break;
0001fe  bf00              NOP      
                  |L1.512|
000200  bf00              NOP                            ;233
;;;250      }
;;;251    }
000202  bd70              POP      {r4-r6,pc}
;;;252    #endif
                          ENDP

                  GUIDEMO_CheckCancel PROC
;;;496    */
;;;497    int GUIDEMO_CheckCancel(void) {
000204  b510              PUSH     {r4,lr}
;;;498      //
;;;499      // Do not return until the button is released
;;;500      //
;;;501      while (_Halt == 1) {
000206  e002              B        |L1.526|
                  |L1.520|
;;;502        GUI_Delay(10);
000208  200a              MOVS     r0,#0xa
00020a  f7fffffe          BL       GUI_Delay
                  |L1.526|
00020e  4877              LDR      r0,|L1.1004|
000210  6800              LDR      r0,[r0,#0]            ;501  ; _Halt
000212  2801              CMP      r0,#1                 ;501
000214  d0f8              BEQ      |L1.520|
;;;503      }
;;;504      //
;;;505      // Check Next Button
;;;506      //
;;;507      if (_Next == 1) {
000216  4880              LDR      r0,|L1.1048|
000218  6800              LDR      r0,[r0,#0]  ; _Next
00021a  2801              CMP      r0,#1
00021c  d104              BNE      |L1.552|
;;;508        _Next = 0;
00021e  2000              MOVS     r0,#0
000220  497d              LDR      r1,|L1.1048|
000222  6008              STR      r0,[r1,#0]  ; _Next
;;;509        return 1;
000224  2001              MOVS     r0,#1
                  |L1.550|
;;;510      }
;;;511      return 0;
;;;512    }
000226  bd10              POP      {r4,pc}
                  |L1.552|
000228  2000              MOVS     r0,#0                 ;511
00022a  e7fc              B        |L1.550|
;;;513    
                          ENDP

                  _cbEffect PROC
;;;257    */
;;;258    static int _cbEffect(int TimeRem, void * pVoid) {
00022c  b5fe              PUSH     {r1-r7,lr}
00022e  4606              MOV      r6,r0
000230  460c              MOV      r4,r1
;;;259      GUI_PID_STATE State;
;;;260      int           Pressed;
;;;261    
;;;262      GUI_USE_PARA(TimeRem);
;;;263      Pressed = *((int *)pVoid);
000232  6825              LDR      r5,[r4,#0]
;;;264      GUI_Exec();
000234  f7fffffe          BL       GUI_Exec
;;;265      GUI_PID_GetState(&State);
000238  4668              MOV      r0,sp
00023a  f7fffffe          BL       GUI_PID_GetState
;;;266      if (State.Pressed) {
00023e  f89d0008          LDRB     r0,[sp,#8]
000242  b118              CBZ      r0,|L1.588|
;;;267        *((int *)pVoid) = 1;
000244  2001              MOVS     r0,#1
000246  6020              STR      r0,[r4,#0]
;;;268        return 0;
000248  2000              MOVS     r0,#0
                  |L1.586|
;;;269      } else {
;;;270        if ((State.Pressed == 0) && (Pressed == 1)) {
;;;271          *((int *)pVoid) = 0;
;;;272          _Next   = 1;
;;;273          return 1;
;;;274        }
;;;275        _Next = GUIDEMO_CheckCancel();
;;;276        return _Next;
;;;277      }
;;;278    }
00024a  bdfe              POP      {r1-r7,pc}
                  |L1.588|
00024c  f89d0008          LDRB     r0,[sp,#8]            ;270
000250  b938              CBNZ     r0,|L1.610|
000252  2d01              CMP      r5,#1                 ;270
000254  d105              BNE      |L1.610|
000256  2000              MOVS     r0,#0                 ;271
000258  6020              STR      r0,[r4,#0]            ;271
00025a  2001              MOVS     r0,#1                 ;272
00025c  496e              LDR      r1,|L1.1048|
00025e  6008              STR      r0,[r1,#0]            ;272  ; _Next
000260  e7f3              B        |L1.586|
                  |L1.610|
000262  f7fffffe          BL       GUIDEMO_CheckCancel
000266  496c              LDR      r1,|L1.1048|
000268  6008              STR      r0,[r1,#0]            ;275  ; _Next
00026a  4608              MOV      r0,r1                 ;276
00026c  6800              LDR      r0,[r0,#0]            ;276  ; _Next
00026e  e7ec              B        |L1.586|
;;;279    
                          ENDP

                  _cbFrameWinControl PROC
;;;284    #if GUI_WINSUPPORT
;;;285    static void _cbFrameWinControl(WM_MESSAGE * pMsg) {
000270  e92d47fc          PUSH     {r2-r10,lr}
000274  4604              MOV      r4,r0
;;;286      WM_HWIN hItem;
;;;287      int     xSize;
;;;288      int     ySize;
;;;289      int     NCode;
;;;290      int     Id;
;;;291    
;;;292      switch (pMsg->MsgId) {
000276  6820              LDR      r0,[r4,#0]
000278  280e              CMP      r0,#0xe
00027a  d006              BEQ      |L1.650|
00027c  280f              CMP      r0,#0xf
00027e  d03c              BEQ      |L1.762|
000280  281d              CMP      r0,#0x1d
000282  d009              BEQ      |L1.664|
000284  2826              CMP      r0,#0x26
000286  d17b              BNE      |L1.896|
000288  e04b              B        |L1.802|
                  |L1.650|
;;;293      case WM_KEY:
;;;294        WM_SendMessage(WM_HBKWIN, pMsg);
00028a  f7fffffe          BL       WM_GetDesktopWindow
00028e  4682              MOV      r10,r0
000290  4621              MOV      r1,r4
000292  f7fffffe          BL       WM_SendMessage
;;;295        break;
000296  e082              B        |L1.926|
                  |L1.664|
;;;296      case WM_INIT_DIALOG:
;;;297        hItem = WM_GetDialogItem(pMsg->hWin, GUI_ID_PROGBAR0);
000298  f44f7104          MOV      r1,#0x210
00029c  6860              LDR      r0,[r4,#4]
00029e  f7fffffe          BL       WM_GetDialogItem
0002a2  4681              MOV      r9,r0
;;;298        PROGBAR_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
0002a4  210e              MOVS     r1,#0xe
0002a6  4648              MOV      r0,r9
0002a8  f7fffffe          BL       PROGBAR_SetTextAlign
;;;299        PROGBAR_SetFont(hItem, &GUI_FontD6x8);
0002ac  495b              LDR      r1,|L1.1052|
0002ae  4648              MOV      r0,r9
0002b0  f7fffffe          BL       PROGBAR_SetFont
;;;300        hItem = WM_GetDialogItem(pMsg->hWin, GUI_ID_HALT);
0002b4  f44f6100          MOV      r1,#0x800
0002b8  6860              LDR      r0,[r4,#4]
0002ba  f7fffffe          BL       WM_GetDialogItem
0002be  4681              MOV      r9,r0
;;;301        BUTTON_SetFocussable(hItem, 0);
0002c0  2100              MOVS     r1,#0
0002c2  4648              MOV      r0,r9
0002c4  f7fffffe          BL       BUTTON_SetFocussable
;;;302        hItem = WM_GetDialogItem(pMsg->hWin, GUI_ID_NEXT);
0002c8  f6400101          MOV      r1,#0x801
0002cc  6860              LDR      r0,[r4,#4]
0002ce  f7fffffe          BL       WM_GetDialogItem
0002d2  4681              MOV      r9,r0
;;;303        BUTTON_SetFocussable(hItem, 0);
0002d4  2100              MOVS     r1,#0
0002d6  4648              MOV      r0,r9
0002d8  f7fffffe          BL       BUTTON_SetFocussable
;;;304        hItem = WM_GetDialogItem(pMsg->hWin, GUI_ID_TEXT0);
0002dc  f44f71b0          MOV      r1,#0x160
0002e0  6860              LDR      r0,[r4,#4]
0002e2  f7fffffe          BL       WM_GetDialogItem
0002e6  4681              MOV      r9,r0
;;;305        TEXT_SetText(hItem, "Intro");
0002e8  a14d              ADR      r1,|L1.1056|
0002ea  4648              MOV      r0,r9
0002ec  f7fffffe          BL       TEXT_SetText
;;;306        TEXT_SetFont(hItem, &GUI_Font8_ASCII);
0002f0  494d              LDR      r1,|L1.1064|
0002f2  4648              MOV      r0,r9
0002f4  f7fffffe          BL       TEXT_SetFont
;;;307        break;
0002f8  e051              B        |L1.926|
                  |L1.762|
;;;308      case WM_PAINT:
;;;309        xSize = WM_GetWindowSizeX(pMsg->hWin);
0002fa  6860              LDR      r0,[r4,#4]
0002fc  f7fffffe          BL       WM_GetWindowSizeX
000300  4606              MOV      r6,r0
;;;310        ySize = WM_GetWindowSizeY(pMsg->hWin);
000302  6860              LDR      r0,[r4,#4]
000304  f7fffffe          BL       WM_GetWindowSizeY
000308  4607              MOV      r7,r0
;;;311        GUI_DrawGradientV(0, 0, xSize - 1, ySize - 1, 0xFFFFFF, 0xDCCEC0);
00030a  4848              LDR      r0,|L1.1068|
00030c  f06f417f          MVN      r1,#0xff000000
000310  1e7b              SUBS     r3,r7,#1
000312  1e72              SUBS     r2,r6,#1
000314  e9cd1000          STRD     r1,r0,[sp,#0]
000318  2100              MOVS     r1,#0
00031a  4608              MOV      r0,r1
00031c  f7fffffe          BL       GUI_DrawGradientV
;;;312        break;
000320  e03d              B        |L1.926|
                  |L1.802|
;;;313      case WM_NOTIFY_PARENT:
;;;314        Id    = WM_GetId(pMsg->hWinSrc);
000322  68a0              LDR      r0,[r4,#8]
000324  f7fffffe          BL       WM_GetId
000328  4605              MOV      r5,r0
;;;315        NCode = pMsg->Data.v;
00032a  f8d4800c          LDR      r8,[r4,#0xc]
;;;316        switch (NCode) {
00032e  f1b80f02          CMP      r8,#2
000332  d12e              BNE      |L1.914|
;;;317        case WM_NOTIFICATION_RELEASED:
;;;318          switch (Id) {
000334  f5b56f00          CMP      r5,#0x800
000338  d003              BEQ      |L1.834|
00033a  f6a50001          SUB      r0,r5,#0x801
00033e  bb30              CBNZ     r0,|L1.910|
000340  e01f              B        |L1.898|
                  |L1.834|
;;;319          case GUI_ID_HALT:
;;;320            if (_Halt) {
000342  482a              LDR      r0,|L1.1004|
000344  6800              LDR      r0,[r0,#0]  ; _Halt
000346  b168              CBZ      r0,|L1.868|
;;;321              _Halt          = 0;
000348  2000              MOVS     r0,#0
00034a  4928              LDR      r1,|L1.1004|
00034c  6008              STR      r0,[r1,#0]  ; _Halt
;;;322              _HaltTime      = GUI_GetTime() - _HaltTimeStart;
00034e  f7fffffe          BL       GUI_GetTime
000352  4928              LDR      r1,|L1.1012|
000354  6809              LDR      r1,[r1,#0]  ; _HaltTimeStart
000356  1a40              SUBS     r0,r0,r1
000358  4925              LDR      r1,|L1.1008|
00035a  6008              STR      r0,[r1,#0]  ; _HaltTime
;;;323              WM_MakeModal(0);
00035c  2000              MOVS     r0,#0
00035e  f7fffffe          BL       WM_MakeModal
000362  e00c              B        |L1.894|
                  |L1.868|
;;;324            } else {
;;;325              _Halt          = 1;
000364  2001              MOVS     r0,#1
000366  4921              LDR      r1,|L1.1004|
000368  6008              STR      r0,[r1,#0]  ; _Halt
;;;326              _HaltTimeStart = GUI_GetTime() - _HaltTime;
00036a  f7fffffe          BL       GUI_GetTime
00036e  4920              LDR      r1,|L1.1008|
000370  6809              LDR      r1,[r1,#0]  ; _HaltTime
000372  1a40              SUBS     r0,r0,r1
000374  491f              LDR      r1,|L1.1012|
000376  6008              STR      r0,[r1,#0]  ; _HaltTimeStart
;;;327              WM_MakeModal(pMsg->hWin);
000378  6860              LDR      r0,[r4,#4]
00037a  f7fffffe          BL       WM_MakeModal
                  |L1.894|
;;;328            }
;;;329            break;
00037e  e006              B        |L1.910|
                  |L1.896|
000380  e009              B        |L1.918|
                  |L1.898|
;;;330          case GUI_ID_NEXT:
;;;331            _Next = 1;    // Will be set to 0 by GUIDEMO_GetNextState()
000382  2001              MOVS     r0,#1
000384  4924              LDR      r1,|L1.1048|
000386  6008              STR      r0,[r1,#0]  ; _Next
;;;332            _ClearHalt(); // Clear _Halt, so the next sample demonstrates immediately
000388  f7fffffe          BL       _ClearHalt
;;;333            break;
00038c  bf00              NOP      
                  |L1.910|
00038e  bf00              NOP                            ;329
;;;334          }
;;;335          break;
000390  bf00              NOP      
                  |L1.914|
000392  bf00              NOP      
;;;336        }
;;;337        break;
000394  e003              B        |L1.926|
                  |L1.918|
;;;338      default:
;;;339        WM_DefaultProc(pMsg);
000396  4620              MOV      r0,r4
000398  f7fffffe          BL       WM_DefaultProc
00039c  bf00              NOP                            ;292
                  |L1.926|
00039e  bf00              NOP                            ;295
;;;340      }
;;;341    }
0003a0  e8bd87fc          POP      {r2-r10,pc}
;;;342    #endif
                          ENDP

                  _cbFrameWinInfo PROC
;;;348    #if GUI_WINSUPPORT
;;;349    static void _cbFrameWinInfo(WM_MESSAGE * pMsg) {
0003a4  e92d41fc          PUSH     {r2-r8,lr}
0003a8  4605              MOV      r5,r0
;;;350      int xSize;
;;;351      int ySize;
;;;352    
;;;353      switch (pMsg->MsgId) {
0003aa  6828              LDR      r0,[r5,#0]
0003ac  2801              CMP      r0,#1
0003ae  d00b              BEQ      |L1.968|
0003b0  280e              CMP      r0,#0xe
0003b2  d002              BEQ      |L1.954|
0003b4  280f              CMP      r0,#0xf
0003b6  d14f              BNE      |L1.1112|
0003b8  e03a              B        |L1.1072|
                  |L1.954|
;;;354      case WM_KEY:
;;;355        WM_SendMessage(WM_HBKWIN, pMsg);
0003ba  f7fffffe          BL       WM_GetDesktopWindow
0003be  4606              MOV      r6,r0
0003c0  4629              MOV      r1,r5
0003c2  f7fffffe          BL       WM_SendMessage
;;;356        break;
0003c6  e04b              B        |L1.1120|
                  |L1.968|
;;;357      case WM_CREATE:
;;;358        xSize = LCD_GetXSize();
0003c8  f7fffffe          BL       LCD_GetXSize
0003cc  4604              MOV      r4,r0
;;;359        WM_SetWindowPos(pMsg->hWin, xSize / 2, 0, xSize / 2, INFO_SIZE_Y);
0003ce  4626              MOV      r6,r4
0003d0  46a0              MOV      r8,r4
0003d2  2041              MOVS     r0,#0x41
0003d4  eb0472d8          ADD      r2,r4,r8,LSR #31
0003d8  1053              ASRS     r3,r2,#1
0003da  eb0472d6          ADD      r2,r4,r6,LSR #31
0003de  1051              ASRS     r1,r2,#1
0003e0  9000              STR      r0,[sp,#0]
0003e2  2200              MOVS     r2,#0
0003e4  6868              LDR      r0,[r5,#4]
0003e6  f7fffffe          BL       WM_SetWindowPos
;;;360        break;
0003ea  e039              B        |L1.1120|
                  |L1.1004|
                          DCD      _Halt
                  |L1.1008|
                          DCD      _HaltTime
                  |L1.1012|
                          DCD      _HaltTimeStart
                  |L1.1016|
                          DCD      _DrawLogo
                  |L1.1020|
                          DCD      bmSeggerLogo70x35
                  |L1.1024|
                          DCD      0x00ff5555
                  |L1.1028|
                          DCD      hMemStretch
                  |L1.1032|
                          DCD      LCD_API_ColorConv_8888
                  |L1.1036|
                          DCD      GUI_MEMDEV_DEVICE_32
                  |L1.1040|
                          DCD      _hDialogControl
                  |L1.1044|
                          DCD      _pfDrawBk
                  |L1.1048|
                          DCD      _Next
                  |L1.1052|
                          DCD      GUI_FontD6x8
                  |L1.1056|
000420  496e7472          DCB      "Intro",0
000424  6f00    
000426  00                DCB      0
000427  00                DCB      0
                  |L1.1064|
                          DCD      GUI_Font8_ASCII
                  |L1.1068|
                          DCD      0x00dccec0
                  |L1.1072|
;;;361      case WM_PAINT:
;;;362        xSize = WM_GetWindowSizeX(pMsg->hWin);
000430  6868              LDR      r0,[r5,#4]
000432  f7fffffe          BL       WM_GetWindowSizeX
000436  4604              MOV      r4,r0
;;;363        ySize = WM_GetWindowSizeY(pMsg->hWin);
000438  6868              LDR      r0,[r5,#4]
00043a  f7fffffe          BL       WM_GetWindowSizeY
00043e  4607              MOV      r7,r0
;;;364        GUI_DrawGradientV(0, 0, xSize - 1, ySize - 1, 0xFFFFFF, 0xDCCEC0);
000440  48fb              LDR      r0,|L1.2096|
000442  f06f417f          MVN      r1,#0xff000000
000446  1e7b              SUBS     r3,r7,#1
000448  1e62              SUBS     r2,r4,#1
00044a  e9cd1000          STRD     r1,r0,[sp,#0]
00044e  2100              MOVS     r1,#0
000450  4608              MOV      r0,r1
000452  f7fffffe          BL       GUI_DrawGradientV
;;;365        break;
000456  e003              B        |L1.1120|
                  |L1.1112|
;;;366      default:
;;;367        WM_DefaultProc(pMsg);
000458  4628              MOV      r0,r5
00045a  f7fffffe          BL       WM_DefaultProc
00045e  bf00              NOP                            ;353
                  |L1.1120|
000460  bf00              NOP                            ;356
;;;368      }
;;;369    }
000462  e8bd81fc          POP      {r2-r8,pc}
;;;370    #endif
                          ENDP

                  _FRAMEWIN_DrawSkinFlex PROC
;;;376    #if GUI_WINSUPPORT
;;;377    static int _FRAMEWIN_DrawSkinFlex(const WIDGET_ITEM_DRAW_INFO * pDrawItemInfo) {
000466  b510              PUSH     {r4,lr}
000468  4604              MOV      r4,r0
;;;378      switch (pDrawItemInfo->Cmd) {
00046a  6860              LDR      r0,[r4,#4]
00046c  b940              CBNZ     r0,|L1.1152|
;;;379      case WIDGET_ITEM_CREATE:
;;;380        FRAMEWIN_SetTextAlign(pDrawItemInfo->hWin, GUI_TA_HCENTER | GUI_TA_VCENTER);
00046e  210e              MOVS     r1,#0xe
000470  6820              LDR      r0,[r4,#0]
000472  f7fffffe          BL       FRAMEWIN_SetTextAlign
;;;381        FRAMEWIN_SetTextColor(pDrawItemInfo->hWin, GUI_BLACK);
000476  2100              MOVS     r1,#0
000478  6820              LDR      r0,[r4,#0]
00047a  f7fffffe          BL       FRAMEWIN_SetTextColor
;;;382        break;
00047e  e003              B        |L1.1160|
                  |L1.1152|
;;;383      default:
;;;384        return FRAMEWIN_DrawSkinFlex(pDrawItemInfo);
000480  4620              MOV      r0,r4
000482  f7fffffe          BL       FRAMEWIN_DrawSkinFlex
                  |L1.1158|
;;;385      }
;;;386      return 0;
;;;387    }
000486  bd10              POP      {r4,pc}
                  |L1.1160|
000488  bf00              NOP                            ;382
00048a  2000              MOVS     r0,#0                 ;386
00048c  e7fb              B        |L1.1158|
;;;388    #endif
                          ENDP

                  GUIDEMO_CursorHide PROC
;;;529    */
;;;530    void GUIDEMO_CursorHide(void) {
00048e  4770              BX       lr
;;;531      #if (GUI_SUPPORT_CURSOR && GUI_SUPPORT_TOUCH)
;;;532        if (GUIDEMO_GetConfFlag(GUIDEMO_CF_SUPPORT_TOUCH)) {
;;;533          GUI_CURSOR_Hide();
;;;534        }
;;;535      #endif
;;;536    }
;;;537    
                          ENDP

                  GUIDEMO_AddIntToString PROC
;;;448    */
;;;449    void GUIDEMO_AddIntToString(char * pText, U32 Number) {
000490  b570              PUSH     {r4-r6,lr}
000492  4602              MOV      r2,r0
;;;450      int TextLen;
;;;451      int LenNum;
;;;452      U32 i;
;;;453    
;;;454      TextLen = 0;
000494  2300              MOVS     r3,#0
;;;455      while (*(pText + TextLen)) {
000496  e000              B        |L1.1178|
                  |L1.1176|
;;;456        TextLen++;
000498  1c5b              ADDS     r3,r3,#1
                  |L1.1178|
00049a  5cd5              LDRB     r5,[r2,r3]            ;455
00049c  2d00              CMP      r5,#0                 ;455
00049e  d1fb              BNE      |L1.1176|
;;;457      }
;;;458      i       = 1;
0004a0  2401              MOVS     r4,#1
;;;459      LenNum  = 1;
0004a2  2001              MOVS     r0,#1
;;;460      while ((Number / i) >= 10) {
0004a4  e003              B        |L1.1198|
                  |L1.1190|
;;;461        i *= 10;
0004a6  eb040584          ADD      r5,r4,r4,LSL #2
0004aa  006c              LSLS     r4,r5,#1
;;;462        LenNum++;
0004ac  1c40              ADDS     r0,r0,#1
                  |L1.1198|
0004ae  fbb1f5f4          UDIV     r5,r1,r4              ;460
0004b2  2d0a              CMP      r5,#0xa               ;460
0004b4  d2f7              BCS      |L1.1190|
;;;463      }
;;;464      *(pText + TextLen + LenNum) = '\0';
0004b6  2500              MOVS     r5,#0
0004b8  18d6              ADDS     r6,r2,r3
0004ba  5435              STRB     r5,[r6,r0]
;;;465      while (LenNum) {
0004bc  e00d              B        |L1.1242|
                  |L1.1214|
;;;466        *(pText + TextLen + LenNum - 1) = '0' + Number % 10;
0004be  250a              MOVS     r5,#0xa
0004c0  fbb1f6f5          UDIV     r6,r1,r5
0004c4  fb051516          MLS      r5,r5,r6,r1
0004c8  3530              ADDS     r5,r5,#0x30
0004ca  18d6              ADDS     r6,r2,r3
0004cc  4406              ADD      r6,r6,r0
0004ce  f8065c01          STRB     r5,[r6,#-1]
;;;467        Number /= 10;
0004d2  250a              MOVS     r5,#0xa
0004d4  fbb1f1f5          UDIV     r1,r1,r5
;;;468        LenNum--;
0004d8  1e40              SUBS     r0,r0,#1
                  |L1.1242|
0004da  2800              CMP      r0,#0                 ;465
0004dc  d1ef              BNE      |L1.1214|
;;;469      }
;;;470    }
0004de  bd70              POP      {r4-r6,pc}
;;;471    
                          ENDP

                  GUIDEMO_AddStringToString PROC
;;;475    */
;;;476    void GUIDEMO_AddStringToString(char * pText, const char * pAdd) {
0004e0  b510              PUSH     {r4,lr}
0004e2  4602              MOV      r2,r0
;;;477      int i;
;;;478      int j;
;;;479    
;;;480      i = 0;
0004e4  2000              MOVS     r0,#0
;;;481      j = 0;
0004e6  2300              MOVS     r3,#0
;;;482      while (*(pText + i)) {
0004e8  e000              B        |L1.1260|
                  |L1.1258|
;;;483        i++;
0004ea  1c40              ADDS     r0,r0,#1
                  |L1.1260|
0004ec  5c14              LDRB     r4,[r2,r0]            ;482
0004ee  2c00              CMP      r4,#0                 ;482
0004f0  d1fb              BNE      |L1.1258|
;;;484      }
;;;485      while (*(pAdd + j)) {
0004f2  e003              B        |L1.1276|
                  |L1.1268|
;;;486        *(pText + i) = *(pAdd + j);
0004f4  5ccc              LDRB     r4,[r1,r3]
0004f6  5414              STRB     r4,[r2,r0]
;;;487        i++;
0004f8  1c40              ADDS     r0,r0,#1
;;;488        j++;
0004fa  1c5b              ADDS     r3,r3,#1
                  |L1.1276|
0004fc  5ccc              LDRB     r4,[r1,r3]            ;485
0004fe  2c00              CMP      r4,#0                 ;485
000500  d1f8              BNE      |L1.1268|
;;;489      }
;;;490      *(pText + i) = '\0';
000502  5414              STRB     r4,[r2,r0]
;;;491    }
000504  bd10              POP      {r4,pc}
;;;492    
                          ENDP

                  GUIDEMO_UpdateControlText PROC
;;;854    */
;;;855    void GUIDEMO_UpdateControlText(void) {
000506  b510              PUSH     {r4,lr}
000508  b086              SUB      sp,sp,#0x18
;;;856    #if GUI_WINSUPPORT
;;;857      TEXT_Handle hText;
;;;858      char        acText[20] = { 0 };
00050a  2114              MOVS     r1,#0x14
00050c  a801              ADD      r0,sp,#4
00050e  f7fffffe          BL       __aeabi_memclr4
;;;859    
;;;860      hText = WM_GetDialogItem(_hDialogControl, GUI_ID_TEXT0);
000512  f44f71b0          MOV      r1,#0x160
000516  48c7              LDR      r0,|L1.2100|
000518  6800              LDR      r0,[r0,#0]  ; _hDialogControl
00051a  f7fffffe          BL       WM_GetDialogItem
00051e  4604              MOV      r4,r0
;;;861      GUIDEMO_AddStringToString(acText, "Demo ");
000520  a1c5              ADR      r1,|L1.2104|
000522  a801              ADD      r0,sp,#4
000524  f7fffffe          BL       GUIDEMO_AddStringToString
;;;862      GUIDEMO_AddIntToString   (acText, _iDemo + 1);
000528  48c5              LDR      r0,|L1.2112|
00052a  6801              LDR      r1,[r0,#0]  ; _iDemo
00052c  1c49              ADDS     r1,r1,#1
00052e  a801              ADD      r0,sp,#4
000530  f7fffffe          BL       GUIDEMO_AddIntToString
;;;863      GUIDEMO_AddStringToString(acText, ".");
000534  a1c3              ADR      r1,|L1.2116|
000536  a801              ADD      r0,sp,#4
000538  f7fffffe          BL       GUIDEMO_AddStringToString
;;;864      GUIDEMO_AddIntToString   (acText, _iDemoMinor);
00053c  48c2              LDR      r0,|L1.2120|
00053e  6801              LDR      r1,[r0,#0]  ; _iDemoMinor
000540  a801              ADD      r0,sp,#4
000542  f7fffffe          BL       GUIDEMO_AddIntToString
;;;865      GUIDEMO_AddStringToString(acText, "/");
000546  a1c1              ADR      r1,|L1.2124|
000548  a801              ADD      r0,sp,#4
00054a  f7fffffe          BL       GUIDEMO_AddStringToString
;;;866      GUIDEMO_AddIntToString   (acText, _GUIDemoConfig.NumDemos - 1);
00054e  48c0              LDR      r0,|L1.2128|
000550  6840              LDR      r0,[r0,#4]  ; _GUIDemoConfig
000552  1e41              SUBS     r1,r0,#1
000554  a801              ADD      r0,sp,#4
000556  f7fffffe          BL       GUIDEMO_AddIntToString
;;;867      TEXT_SetText             (hText,  acText);
00055a  a901              ADD      r1,sp,#4
00055c  4620              MOV      r0,r4
00055e  f7fffffe          BL       TEXT_SetText
;;;868    #endif
;;;869    }
000562  b006              ADD      sp,sp,#0x18
000564  bd10              POP      {r4,pc}
;;;870    
                          ENDP

                  GUIDEMO_CursorShow PROC
;;;544    */
;;;545    void GUIDEMO_CursorShow(void) {
000566  4770              BX       lr
;;;546      #if (GUI_SUPPORT_CURSOR && GUI_SUPPORT_TOUCH)
;;;547        if (GUIDEMO_GetConfFlag(GUIDEMO_CF_SUPPORT_TOUCH)) {
;;;548          GUI_CURSOR_Show();
;;;549        }
;;;550      #endif
;;;551    }
;;;552    
                          ENDP

                  _Main PROC
;;;393    */
;;;394    static void _Main(void) {
000568  e92d41fc          PUSH     {r2-r8,lr}
;;;395      #if GUI_WINSUPPORT
;;;396        int xSize;
;;;397        int ySize;
;;;398    
;;;399        WM_SelectWindow(WM_HBKWIN);
00056c  f7fffffe          BL       WM_GetDesktopWindow
000570  4606              MOV      r6,r0
000572  f7fffffe          BL       WM_SelectWindow
;;;400      #endif
;;;401      GUI_Clear();
000576  f7fffffe          BL       GUI_Clear
;;;402      GUIDEMO_CursorShow();
00057a  f7fffffe          BL       GUIDEMO_CursorShow
;;;403      //
;;;404      // Create and configure Control and Information window
;;;405      //
;;;406      #if GUI_WINSUPPORT
;;;407        xSize           = LCD_GetXSize();
00057e  f7fffffe          BL       LCD_GetXSize
000582  4604              MOV      r4,r0
;;;408        ySize           = LCD_GetYSize();
000584  f7fffffe          BL       LCD_GetYSize
000588  4605              MOV      r5,r0
;;;409        _hDialogControl = GUI_CreateDialogBox(_aFrameWinControl, GUI_COUNTOF(_aFrameWinControl), _cbFrameWinControl, WM_HBKWIN, xSize - CONTROL_SIZE_X, ySize - CONTROL_SIZE_Y);
00058a  f7fffffe          BL       WM_GetDesktopWindow
00058e  4606              MOV      r6,r0
000590  f1a5013d          SUB      r1,r5,#0x3d
000594  f1a40050          SUB      r0,r4,#0x50
000598  4633              MOV      r3,r6
00059a  4aae              LDR      r2,|L1.2132|
00059c  e9cd0100          STRD     r0,r1,[sp,#0]
0005a0  2105              MOVS     r1,#5
0005a2  48ad              LDR      r0,|L1.2136|
0005a4  f7fffffe          BL       GUI_CreateDialogBox
0005a8  49a2              LDR      r1,|L1.2100|
0005aa  6008              STR      r0,[r1,#0]  ; _hDialogControl
;;;410        _hDialogInfo    = GUI_CreateDialogBox(_aFrameWinInfo,    GUI_COUNTOF(_aFrameWinInfo),    _cbFrameWinInfo,    WM_HBKWIN, xSize / 2 - 1,          0                     );
0005ac  f7fffffe          BL       WM_GetDesktopWindow
0005b0  4607              MOV      r7,r0
0005b2  2100              MOVS     r1,#0
0005b4  4626              MOV      r6,r4
0005b6  eb0470d6          ADD      r0,r4,r6,LSR #31
0005ba  1040              ASRS     r0,r0,#1
0005bc  1e40              SUBS     r0,r0,#1
0005be  463b              MOV      r3,r7
0005c0  4aa6              LDR      r2,|L1.2140|
0005c2  e9cd0100          STRD     r0,r1,[sp,#0]
0005c6  2102              MOVS     r1,#2
0005c8  48a5              LDR      r0,|L1.2144|
0005ca  f7fffffe          BL       GUI_CreateDialogBox
0005ce  49a5              LDR      r1,|L1.2148|
0005d0  6008              STR      r0,[r1,#0]  ; _hDialogInfo
;;;411        WM_HideWindow(_hDialogInfo);
0005d2  4608              MOV      r0,r1
0005d4  6800              LDR      r0,[r0,#0]  ; _hDialogInfo
0005d6  f7fffffe          BL       WM_HideWindow
;;;412        //
;;;413        // Show Intro
;;;414        //
;;;415        GUI_Exec();
0005da  f7fffffe          BL       GUI_Exec
;;;416      #endif
;;;417      GUIDEMO_Intro();
0005de  f7fffffe          BL       GUIDEMO_Intro
;;;418      //
;;;419      // Run the demos
;;;420      //
;;;421      for (_iDemo = 0; _GUIDemoConfig.apFunc[_iDemo]; _iDemo++) {
0005e2  2000              MOVS     r0,#0
0005e4  4996              LDR      r1,|L1.2112|
0005e6  6008              STR      r0,[r1,#0]  ; _iDemo
0005e8  e014              B        |L1.1556|
                  |L1.1514|
;;;422        _ClearHalt();
0005ea  f7fffffe          BL       _ClearHalt
;;;423        GUIDEMO_UpdateControlText();
0005ee  f7fffffe          BL       GUIDEMO_UpdateControlText
;;;424        (*_GUIDemoConfig.apFunc[_iDemo])();
0005f2  4997              LDR      r1,|L1.2128|
0005f4  6809              LDR      r1,[r1,#0]  ; _GUIDemoConfig
0005f6  4a92              LDR      r2,|L1.2112|
0005f8  6812              LDR      r2,[r2,#0]  ; _iDemo
0005fa  f8510022          LDR      r0,[r1,r2,LSL #2]
0005fe  4780              BLX      r0
;;;425        _iDemoMinor = 0;
000600  2000              MOVS     r0,#0
000602  4991              LDR      r1,|L1.2120|
000604  6008              STR      r0,[r1,#0]  ; _iDemoMinor
;;;426        _Pressed    = 0;
000606  4998              LDR      r1,|L1.2152|
000608  6008              STR      r0,[r1,#0]  ; _Pressed
00060a  488d              LDR      r0,|L1.2112|
00060c  6800              LDR      r0,[r0,#0]            ;421  ; _iDemo
00060e  1c40              ADDS     r0,r0,#1              ;421
000610  498b              LDR      r1,|L1.2112|
000612  6008              STR      r0,[r1,#0]            ;421  ; _iDemo
                  |L1.1556|
000614  488e              LDR      r0,|L1.2128|
000616  6800              LDR      r0,[r0,#0]            ;421  ; _GUIDemoConfig
000618  4989              LDR      r1,|L1.2112|
00061a  6809              LDR      r1,[r1,#0]            ;421  ; _iDemo
00061c  f8500021          LDR      r0,[r0,r1,LSL #2]     ;421
000620  2800              CMP      r0,#0                 ;421
000622  d1e2              BNE      |L1.1514|
;;;427      }
;;;428      _iDemo = 0;
000624  4986              LDR      r1,|L1.2112|
000626  6008              STR      r0,[r1,#0]  ; _iDemo
;;;429      //
;;;430      // Cleanup
;;;431      //
;;;432      #if GUI_WINSUPPORT
;;;433        WM_DeleteWindow(_hDialogControl);
000628  4882              LDR      r0,|L1.2100|
00062a  6800              LDR      r0,[r0,#0]  ; _hDialogControl
00062c  f7fffffe          BL       WM_DeleteWindow
;;;434        WM_DeleteWindow(_hDialogInfo);
000630  488c              LDR      r0,|L1.2148|
000632  6800              LDR      r0,[r0,#0]  ; _hDialogInfo
000634  f7fffffe          BL       WM_DeleteWindow
;;;435      #endif
;;;436      GUIDEMO_CursorHide();
000638  f7fffffe          BL       GUIDEMO_CursorHide
;;;437    }
00063c  e8bd81fc          POP      {r2-r8,pc}
;;;438    
                          ENDP

                  GUIDEMO_ClearText PROC
;;;518    */
;;;519    void GUIDEMO_ClearText(char * pText) {
000640  2100              MOVS     r1,#0
;;;520      *pText = 0;
000642  7001              STRB     r1,[r0,#0]
;;;521    }
000644  4770              BX       lr
;;;522    
                          ENDP

                  GUIDEMO_GetTime PROC
;;;633    */
;;;634    int GUIDEMO_GetTime(void) {
000646  b510              PUSH     {r4,lr}
;;;635      return _Halt ? _HaltTimeStart : GUI_GetTime() - _HaltTime;
000648  4888              LDR      r0,|L1.2156|
00064a  6800              LDR      r0,[r0,#0]  ; _Halt
00064c  b110              CBZ      r0,|L1.1620|
00064e  4888              LDR      r0,|L1.2160|
000650  6800              LDR      r0,[r0,#0]  ; _HaltTimeStart
                  |L1.1618|
;;;636    }
000652  bd10              POP      {r4,pc}
                  |L1.1620|
000654  f7fffffe          BL       GUI_GetTime
000658  4986              LDR      r1,|L1.2164|
00065a  6809              LDR      r1,[r1,#0]            ;635  ; _HaltTime
00065c  1a40              SUBS     r0,r0,r1              ;635
00065e  e7f8              B        |L1.1618|
;;;637    
                          ENDP

                  GUIDEMO_Delay PROC
;;;559    */
;;;560    void GUIDEMO_Delay(int TimeDelay) {
000660  e92d41f0          PUSH     {r4-r8,lr}
000664  4604              MOV      r4,r0
;;;561    #if GUI_WINSUPPORT
;;;562      PROGBAR_Handle hProg;
;;;563      int            NextState;
;;;564      U32            TimeStart;
;;;565      U32            TimeDiff;
;;;566    
;;;567      hProg = WM_GetDialogItem(_hDialogControl, GUI_ID_PROGBAR0);
000666  f44f7104          MOV      r1,#0x210
00066a  4872              LDR      r0,|L1.2100|
00066c  6800              LDR      r0,[r0,#0]  ; _hDialogControl
00066e  f7fffffe          BL       WM_GetDialogItem
000672  4680              MOV      r8,r0
;;;568      if (TimeDelay > SHOW_PROGBAR_AT) {
000674  2c64              CMP      r4,#0x64
000676  dd01              BLE      |L1.1660|
;;;569        _ShowProgress();
000678  f7fffffe          BL       _ShowProgress
                  |L1.1660|
;;;570      }
;;;571      PROGBAR_SetValue(hProg, 0);
00067c  2100              MOVS     r1,#0
00067e  4640              MOV      r0,r8
000680  f7fffffe          BL       PROGBAR_SetValue
;;;572      PROGBAR_SetMinMax(hProg, 0, TimeDelay);
000684  4622              MOV      r2,r4
000686  2100              MOVS     r1,#0
000688  4640              MOV      r0,r8
00068a  f7fffffe          BL       PROGBAR_SetMinMax
;;;573      TimeStart     = GUI_GetTime();
00068e  f7fffffe          BL       GUI_GetTime
000692  4606              MOV      r6,r0
;;;574      do {
000694  bf00              NOP      
                  |L1.1686|
;;;575        TimeDiff = GUIDEMO_GetTime() - TimeStart;
000696  f7fffffe          BL       GUIDEMO_GetTime
00069a  1b87              SUBS     r7,r0,r6
;;;576        if (TimeDelay > SHOW_PROGBAR_AT) {
00069c  2c64              CMP      r4,#0x64
00069e  dd03              BLE      |L1.1704|
;;;577          PROGBAR_SetValue(hProg, TimeDiff);
0006a0  4639              MOV      r1,r7
0006a2  4640              MOV      r0,r8
0006a4  f7fffffe          BL       PROGBAR_SetValue
                  |L1.1704|
;;;578        }
;;;579        GUI_Delay(5);
0006a8  2005              MOVS     r0,#5
0006aa  f7fffffe          BL       GUI_Delay
;;;580        NextState = GUIDEMO_CheckCancel();
0006ae  f7fffffe          BL       GUIDEMO_CheckCancel
0006b2  4605              MOV      r5,r0
;;;581      } while (TimeDiff < (U32)TimeDelay && !NextState);
0006b4  42a7              CMP      r7,r4
0006b6  d201              BCS      |L1.1724|
0006b8  2d00              CMP      r5,#0
0006ba  d0ec              BEQ      |L1.1686|
                  |L1.1724|
;;;582      if (TimeDelay > SHOW_PROGBAR_AT) {
0006bc  2c64              CMP      r4,#0x64
0006be  dd01              BLE      |L1.1732|
;;;583        _HideProgress();
0006c0  f7fffffe          BL       _HideProgress
                  |L1.1732|
;;;584      }
;;;585      GUI_Exec();
0006c4  f7fffffe          BL       GUI_Exec
;;;586    #else
;;;587      GUI_Delay(TimeDelay);
;;;588    #endif
;;;589    }
0006c8  e8bd81f0          POP      {r4-r8,pc}
;;;590    
                          ENDP

                  GUIDEMO_DispTitle PROC
;;;594    */
;;;595    void GUIDEMO_DispTitle(char * pTitle) {
0006cc  b57c              PUSH     {r2-r6,lr}
0006ce  4605              MOV      r5,r0
;;;596      GUI_RECT RectTitle;
;;;597      int StringLen;
;;;598      int xSize;
;;;599    
;;;600      GUI_SetFont(&GUI_FontRounded22);
0006d0  4869              LDR      r0,|L1.2168|
0006d2  f7fffffe          BL       GUI_SetFont
;;;601      StringLen = GUI_GetStringDistX(pTitle);
0006d6  4628              MOV      r0,r5
0006d8  f7fffffe          BL       GUI_GetStringDistX
0006dc  4606              MOV      r6,r0
;;;602      xSize     = LCD_GetXSize();
0006de  f7fffffe          BL       LCD_GetXSize
0006e2  4604              MOV      r4,r0
;;;603      if ((xSize - StringLen) / 2 < bmSeggerLogo70x35.XSize + LOGO_DIST_BORDER)  {
0006e4  1ba0              SUBS     r0,r4,r6
0006e6  4965              LDR      r1,|L1.2172|
0006e8  8809              LDRH     r1,[r1,#0]  ; bmSeggerLogo70x35
0006ea  1d49              ADDS     r1,r1,#5
0006ec  eb0072d0          ADD      r2,r0,r0,LSR #31
0006f0  ebb10f62          CMP      r1,r2,ASR #1
0006f4  dd06              BLE      |L1.1796|
;;;604        RectTitle.x0 = bmSeggerLogo70x35.XSize + LOGO_DIST_BORDER;
0006f6  4861              LDR      r0,|L1.2172|
0006f8  8800              LDRH     r0,[r0,#0]  ; bmSeggerLogo70x35
0006fa  1d40              ADDS     r0,r0,#5
0006fc  b200              SXTH     r0,r0
0006fe  f8ad0000          STRH     r0,[sp,#0]
000702  e002              B        |L1.1802|
                  |L1.1796|
;;;605      } else {
;;;606        RectTitle.x0 = 0;
000704  2000              MOVS     r0,#0
000706  f8ad0000          STRH     r0,[sp,#0]
                  |L1.1802|
;;;607      }
;;;608      RectTitle.y0 = 0;
00070a  2000              MOVS     r0,#0
00070c  f8ad0002          STRH     r0,[sp,#2]
;;;609      RectTitle.x1 = xSize - 1;
000710  1e60              SUBS     r0,r4,#1
000712  b200              SXTH     r0,r0
000714  f8ad0004          STRH     r0,[sp,#4]
;;;610      RectTitle.y1 = bmSeggerLogo70x35.YSize + 2 * LOGO_DIST_BORDER - 1;
000718  4858              LDR      r0,|L1.2172|
00071a  8840              LDRH     r0,[r0,#2]  ; bmSeggerLogo70x35
00071c  3009              ADDS     r0,r0,#9
00071e  b200              SXTH     r0,r0
000720  f8ad0006          STRH     r0,[sp,#6]
;;;611      GUI_DispStringInRect(pTitle, &RectTitle, GUI_TA_HCENTER | GUI_TA_VCENTER);
000724  220e              MOVS     r2,#0xe
000726  4669              MOV      r1,sp
000728  4628              MOV      r0,r5
00072a  f7fffffe          BL       GUI_DispStringInRect
;;;612    }
00072e  bd7c              POP      {r2-r6,pc}
;;;613                      
                          ENDP

                  GUIDEMO_DrawBk PROC
;;;617    */
;;;618    void GUIDEMO_DrawBk(void) {
000730  b510              PUSH     {r4,lr}
;;;619      _pfDrawBk();
000732  4853              LDR      r0,|L1.2176|
000734  6800              LDR      r0,[r0,#0]  ; _pfDrawBk
000736  4780              BLX      r0
;;;620    }
000738  bd10              POP      {r4,pc}
;;;621    
                          ENDP

                  GUIDEMO_GetConfFlag PROC
;;;625    */
;;;626    U16 GUIDEMO_GetConfFlag(U16 Flag) {
00073a  4601              MOV      r1,r0
;;;627      return (_GUIDemoConfig.Flags & Flag) ? 1 : 0;
00073c  4844              LDR      r0,|L1.2128|
00073e  8900              LDRH     r0,[r0,#8]  ; _GUIDemoConfig
000740  4008              ANDS     r0,r0,r1
000742  b108              CBZ      r0,|L1.1864|
000744  2001              MOVS     r0,#1
                  |L1.1862|
;;;628    }
000746  4770              BX       lr
                  |L1.1864|
000748  2000              MOVS     r0,#0                 ;627
00074a  e7fc              B        |L1.1862|
;;;629    
                          ENDP

                  GUIDEMO_GetTitleSize PROC
;;;641    */
;;;642    int GUIDEMO_GetTitleSize(void) {
00074c  484b              LDR      r0,|L1.2172|
;;;643      return bmSeggerLogo70x35.YSize + 2 * LOGO_DIST_BORDER;
00074e  8840              LDRH     r0,[r0,#2]  ; bmSeggerLogo70x35
000750  300a              ADDS     r0,r0,#0xa
;;;644    }
000752  4770              BX       lr
;;;645    
                          ENDP

                  GUIDEMO_HideControlWin PROC
;;;649    */
;;;650    void GUIDEMO_HideControlWin(void) {
000754  b510              PUSH     {r4,lr}
;;;651    #if GUI_WINSUPPORT
;;;652      WM_HideWindow(_hDialogControl);
000756  4837              LDR      r0,|L1.2100|
000758  6800              LDR      r0,[r0,#0]  ; _hDialogControl
00075a  f7fffffe          BL       WM_HideWindow
;;;653      WM_ValidateWindow(WM_HBKWIN);
00075e  f7fffffe          BL       WM_GetDesktopWindow
000762  4604              MOV      r4,r0
000764  f7fffffe          BL       WM_ValidateWindow
;;;654    #endif
;;;655    }
000768  bd10              POP      {r4,pc}
;;;656    
                          ENDP

                  GUIDEMO_HideInfoWin PROC
;;;660    */
;;;661    void GUIDEMO_HideInfoWin(void) {
00076a  b510              PUSH     {r4,lr}
;;;662    #if GUI_WINSUPPORT
;;;663      WM_HideWindow(_hDialogInfo);
00076c  483d              LDR      r0,|L1.2148|
00076e  6800              LDR      r0,[r0,#0]  ; _hDialogInfo
000770  f7fffffe          BL       WM_HideWindow
;;;664      WM_ValidateWindow(WM_HBKWIN);
000774  f7fffffe          BL       WM_GetDesktopWindow
000778  4604              MOV      r4,r0
00077a  f7fffffe          BL       WM_ValidateWindow
;;;665    #endif
;;;666    }
00077e  bd10              POP      {r4,pc}
;;;667    
                          ENDP

                  GUIDEMO_SetDrawLogo PROC
;;;745    */
;;;746    void GUIDEMO_SetDrawLogo(U8 OnOff) {
000780  b108              CBZ      r0,|L1.1926|
;;;747      _DrawLogo = OnOff ? 1 : 0;
000782  2101              MOVS     r1,#1
000784  e000              B        |L1.1928|
                  |L1.1926|
000786  2100              MOVS     r1,#0
                  |L1.1928|
000788  4a3e              LDR      r2,|L1.2180|
00078a  7011              STRB     r1,[r2,#0]
;;;748    }
00078c  4770              BX       lr
;;;749    
                          ENDP

                  GUIDEMO_Main PROC
;;;671    */
;;;672    void GUIDEMO_Main(void) {
00078e  b08c              SUB      sp,sp,#0x30
;;;673      #if GUI_WINSUPPORT
;;;674        FRAMEWIN_SKINFLEX_PROPS Framewin_Props;
;;;675      #endif
;;;676      #if GUIDEMO_USE_AUTO_BK
;;;677        int                     NumFreeBytes;
;;;678        int                     BitsPerPixel;
;;;679      #endif
;;;680    
;;;681      GUI_MEMDEV_SetAnimationCallback(_cbEffect, (void *)&_Pressed);
000790  4935              LDR      r1,|L1.2152|
000792  483d              LDR      r0,|L1.2184|
000794  f7fffffe          BL       GUI_MEMDEV_SetAnimationCallback
;;;682      #if GUI_WINSUPPORT
;;;683        WM_SetCallback(WM_HBKWIN, _cbBk);
000798  f7fffffe          BL       WM_GetDesktopWindow
00079c  4606              MOV      r6,r0
00079e  493b              LDR      r1,|L1.2188|
0007a0  f7fffffe          BL       WM_SetCallback
;;;684        BUTTON_SetReactOnLevel();
0007a4  f7fffffe          BL       BUTTON_SetReactOnLevel
;;;685        FRAMEWIN_GetSkinFlexProps(&Framewin_Props, FRAMEWIN_SKINFLEX_PI_ACTIVE);
0007a8  2100              MOVS     r1,#0
0007aa  a801              ADD      r0,sp,#4
0007ac  f7fffffe          BL       FRAMEWIN_GetSkinFlexProps
;;;686        Framewin_Props.Radius = 0;
0007b0  2000              MOVS     r0,#0
0007b2  9006              STR      r0,[sp,#0x18]
;;;687        FRAMEWIN_SetSkinFlexProps(&Framewin_Props, FRAMEWIN_SKINFLEX_PI_ACTIVE);
0007b4  2100              MOVS     r1,#0
0007b6  a801              ADD      r0,sp,#4
0007b8  f7fffffe          BL       FRAMEWIN_SetSkinFlexProps
;;;688        FRAMEWIN_GetSkinFlexProps(&Framewin_Props, FRAMEWIN_SKINFLEX_PI_INACTIVE);
0007bc  2101              MOVS     r1,#1
0007be  a801              ADD      r0,sp,#4
0007c0  f7fffffe          BL       FRAMEWIN_GetSkinFlexProps
;;;689        Framewin_Props.Radius = 0;
0007c4  2000              MOVS     r0,#0
0007c6  9006              STR      r0,[sp,#0x18]
;;;690        FRAMEWIN_SetSkinFlexProps(&Framewin_Props, FRAMEWIN_SKINFLEX_PI_INACTIVE);
0007c8  2101              MOVS     r1,#1
0007ca  a801              ADD      r0,sp,#4
0007cc  f7fffffe          BL       FRAMEWIN_SetSkinFlexProps
;;;691        FRAMEWIN_SetDefaultSkin  (_FRAMEWIN_DrawSkinFlex);
0007d0  482f              LDR      r0,|L1.2192|
0007d2  f7fffffe          BL       FRAMEWIN_SetDefaultSkin
;;;692        PROGBAR_SetDefaultSkin   (PROGBAR_SKIN_FLEX);
0007d6  482f              LDR      r0,|L1.2196|
0007d8  f7fffffe          BL       PROGBAR_SetDefaultSkin
;;;693        BUTTON_SetDefaultSkin    (BUTTON_SKIN_FLEX);
0007dc  482e              LDR      r0,|L1.2200|
0007de  f7fffffe          BL       BUTTON_SetDefaultSkin
;;;694        SCROLLBAR_SetDefaultSkin (SCROLLBAR_SKIN_FLEX);
0007e2  482e              LDR      r0,|L1.2204|
0007e4  f7fffffe          BL       SCROLLBAR_SetDefaultSkin
;;;695        SLIDER_SetDefaultSkin    (SLIDER_SKIN_FLEX);
0007e8  482d              LDR      r0,|L1.2208|
0007ea  f7fffffe          BL       SLIDER_SetDefaultSkin
;;;696        HEADER_SetDefaultSkin    (HEADER_SKIN_FLEX);
0007ee  482d              LDR      r0,|L1.2212|
0007f0  f7fffffe          BL       HEADER_SetDefaultSkin
;;;697      #endif
;;;698      LISTVIEW_Delete(4);
0007f4  2004              MOVS     r0,#4
0007f6  f7fffffe          BL       WM_DeleteWindow
;;;699      GUI_SetTextMode(GUI_TM_TRANS);
0007fa  2002              MOVS     r0,#2
0007fc  f7fffffe          BL       GUI_SetTextMode
;;;700      GUIDEMO_Config(&_GUIDemoConfig);
000800  4813              LDR      r0,|L1.2128|
000802  f7fffffe          BL       GUIDEMO_Config
;;;701      #if GUIDEMO_USE_VNC
;;;702        if (GUIDEMO_GetConfFlag(GUIDEMO_CF_USE_VNC)) {
;;;703          _GUIDemoConfig.pGUI_VNC_X_StartServer(0, 0);
;;;704        }
;;;705      #endif
;;;706      #if GUIDEMO_USE_AUTO_BK
;;;707        //
;;;708        // Determine if HW has enough memory to draw the gradient circle as background
;;;709        //
;;;710        BitsPerPixel = LCD_GetBitsPerPixel();
000806  f7fffffe          BL       LCD_GetBitsPerPixel
00080a  4605              MOV      r5,r0
;;;711        if ((BitsPerPixel >= 16) && GUIDEMO_GetConfFlag(GUIDEMO_CF_USE_AUTO_BK)) {
00080c  2d10              CMP      r5,#0x10
00080e  db51              BLT      |L1.2228|
000810  2004              MOVS     r0,#4
000812  f7fffffe          BL       GUIDEMO_GetConfFlag
000816  b148              CBZ      r0,|L1.2092|
;;;712          NumFreeBytes = GUI_ALLOC_GetNumFreeBytes();
000818  f7fffffe          BL       GUI_ALLOC_GetNumFreeBytes
00081c  4604              MOV      r4,r0
;;;713          if (NumFreeBytes > NUMBYTES_NEEDED) {
00081e  f5b41f00          CMP      r4,#0x200000
000822  dd43              BLE      |L1.2220|
;;;714            _pfDrawBk = _DrawBkCircle;
000824  4820              LDR      r0,|L1.2216|
000826  4916              LDR      r1,|L1.2176|
000828  6008              STR      r0,[r1,#0]  ; _pfDrawBk
00082a  e046              B        |L1.2234|
                  |L1.2092|
00082c  e042              B        |L1.2228|
00082e  0000              DCW      0x0000
                  |L1.2096|
                          DCD      0x00dccec0
                  |L1.2100|
                          DCD      _hDialogControl
                  |L1.2104|
000838  44656d6f          DCB      "Demo ",0
00083c  2000    
00083e  00                DCB      0
00083f  00                DCB      0
                  |L1.2112|
                          DCD      _iDemo
                  |L1.2116|
000844  2e00              DCB      ".",0
000846  00                DCB      0
000847  00                DCB      0
                  |L1.2120|
                          DCD      _iDemoMinor
                  |L1.2124|
00084c  2f00              DCB      "/",0
00084e  00                DCB      0
00084f  00                DCB      0
                  |L1.2128|
                          DCD      _GUIDemoConfig
                  |L1.2132|
                          DCD      _cbFrameWinControl
                  |L1.2136|
                          DCD      _aFrameWinControl
                  |L1.2140|
                          DCD      _cbFrameWinInfo
                  |L1.2144|
                          DCD      _aFrameWinInfo
                  |L1.2148|
                          DCD      _hDialogInfo
                  |L1.2152|
                          DCD      _Pressed
                  |L1.2156|
                          DCD      _Halt
                  |L1.2160|
                          DCD      _HaltTimeStart
                  |L1.2164|
                          DCD      _HaltTime
                  |L1.2168|
                          DCD      GUI_FontRounded22
                  |L1.2172|
                          DCD      bmSeggerLogo70x35
                  |L1.2176|
                          DCD      _pfDrawBk
                  |L1.2180|
                          DCD      _DrawLogo
                  |L1.2184|
                          DCD      _cbEffect
                  |L1.2188|
                          DCD      _cbBk
                  |L1.2192|
                          DCD      _FRAMEWIN_DrawSkinFlex
                  |L1.2196|
                          DCD      PROGBAR_DrawSkinFlex
                  |L1.2200|
                          DCD      BUTTON_DrawSkinFlex
                  |L1.2204|
                          DCD      SCROLLBAR_DrawSkinFlex
                  |L1.2208|
                          DCD      SLIDER_DrawSkinFlex
                  |L1.2212|
                          DCD      HEADER_DrawSkinFlex
                  |L1.2216|
                          DCD      _DrawBkCircle
                  |L1.2220|
;;;715          } else {
;;;716            _pfDrawBk = _DrawBk;
0008ac  484c              LDR      r0,|L1.2528|
0008ae  494d              LDR      r1,|L1.2532|
0008b0  6008              STR      r0,[r1,#0]  ; _pfDrawBk
0008b2  e002              B        |L1.2234|
                  |L1.2228|
;;;717          }
;;;718        } else
;;;719      #endif
;;;720        {
;;;721          _pfDrawBk = _DrawBkSimple;
0008b4  484c              LDR      r0,|L1.2536|
0008b6  494b              LDR      r1,|L1.2532|
0008b8  6008              STR      r0,[r1,#0]  ; _pfDrawBk
                  |L1.2234|
;;;722        }
;;;723      GUIDEMO_SetDrawLogo(1);
0008ba  2001              MOVS     r0,#1
0008bc  f7fffffe          BL       GUIDEMO_SetDrawLogo
;;;724      while (1) {
0008c0  e001              B        |L1.2246|
                  |L1.2242|
;;;725        _Main();
0008c2  f7fffffe          BL       _Main
                  |L1.2246|
0008c6  e7fc              B        |L1.2242|
;;;726      }
;;;727    }
;;;728    
                          ENDP

                  GUIDEMO_NotifyStartNext PROC
;;;735    */
;;;736    void GUIDEMO_NotifyStartNext(void) {
0008c8  b510              PUSH     {r4,lr}
;;;737      _iDemoMinor++;
0008ca  4848              LDR      r0,|L1.2540|
0008cc  6800              LDR      r0,[r0,#0]  ; _iDemoMinor
0008ce  1c40              ADDS     r0,r0,#1
0008d0  4946              LDR      r1,|L1.2540|
0008d2  6008              STR      r0,[r1,#0]  ; _iDemoMinor
;;;738      _ClearHalt();
0008d4  f7fffffe          BL       _ClearHalt
;;;739      GUIDEMO_UpdateControlText();
0008d8  f7fffffe          BL       GUIDEMO_UpdateControlText
;;;740    }
0008dc  bd10              POP      {r4,pc}
;;;741    
                          ENDP

                  GUIDEMO_ShiftRight PROC
;;;753    */
;;;754    int GUIDEMO_ShiftRight(int Value, U8 NumBits) {
0008de  b510              PUSH     {r4,lr}
0008e0  4602              MOV      r2,r0
0008e2  460c              MOV      r4,r1
;;;755      int Shift;
;;;756      U8  i;
;;;757    
;;;758      Shift = 2;
0008e4  2102              MOVS     r1,#2
;;;759      for (i = NumBits - 1; i > 0; i--) {
0008e6  1e60              SUBS     r0,r4,#1
0008e8  b2c3              UXTB     r3,r0
0008ea  e002              B        |L1.2290|
                  |L1.2284|
;;;760        Shift *= 2;
0008ec  0049              LSLS     r1,r1,#1
0008ee  1e58              SUBS     r0,r3,#1              ;759
0008f0  b2c3              UXTB     r3,r0                 ;759
                  |L1.2290|
0008f2  2b00              CMP      r3,#0                 ;759
0008f4  dcfa              BGT      |L1.2284|
;;;761      }
;;;762      return Value / Shift;
0008f6  fb92f0f1          SDIV     r0,r2,r1
;;;763    }
0008fa  bd10              POP      {r4,pc}
;;;764    
                          ENDP

                  GUIDEMO_ShowControlWin PROC
;;;768    */
;;;769    void GUIDEMO_ShowControlWin(void) {
0008fc  b510              PUSH     {r4,lr}
;;;770    #if GUI_WINSUPPORT
;;;771      WM_ShowWindow(_hDialogControl);
0008fe  483c              LDR      r0,|L1.2544|
000900  6800              LDR      r0,[r0,#0]  ; _hDialogControl
000902  f7fffffe          BL       WM_ShowWindow
;;;772      GUI_Exec();
000906  f7fffffe          BL       GUI_Exec
;;;773    #endif
;;;774    }
00090a  bd10              POP      {r4,pc}
;;;775    
                          ENDP

                  GUIDEMO_ShowInfo PROC
;;;779    */
;;;780    void GUIDEMO_ShowInfo(const char * pInfo) {
00090c  b570              PUSH     {r4-r6,lr}
00090e  4604              MOV      r4,r0
;;;781    #if GUI_WINSUPPORT
;;;782      TEXT_Handle hText;
;;;783    
;;;784      if (WM_IsVisible(_hDialogInfo)) {
000910  4838              LDR      r0,|L1.2548|
000912  6800              LDR      r0,[r0,#0]  ; _hDialogInfo
000914  f7fffffe          BL       WM_IsVisible
000918  b150              CBZ      r0,|L1.2352|
;;;785        hText = WM_GetDialogItem(_hDialogInfo, GUI_ID_TEXT0);
00091a  f44f71b0          MOV      r1,#0x160
00091e  4835              LDR      r0,|L1.2548|
000920  6800              LDR      r0,[r0,#0]  ; _hDialogInfo
000922  f7fffffe          BL       WM_GetDialogItem
000926  4605              MOV      r5,r0
;;;786        TEXT_SetText(hText, pInfo);
000928  4621              MOV      r1,r4
00092a  4628              MOV      r0,r5
00092c  f7fffffe          BL       TEXT_SetText
                  |L1.2352|
;;;787      }
;;;788    #endif
;;;789    }
000930  bd70              POP      {r4-r6,pc}
;;;790    
                          ENDP

                  GUIDEMO_ShowInfoWin PROC
;;;794    */
;;;795    void GUIDEMO_ShowInfoWin(void) {
000932  b510              PUSH     {r4,lr}
;;;796    #if GUI_WINSUPPORT
;;;797      WM_ShowWindow(_hDialogInfo);
000934  482f              LDR      r0,|L1.2548|
000936  6800              LDR      r0,[r0,#0]  ; _hDialogInfo
000938  f7fffffe          BL       WM_ShowWindow
;;;798    #endif
;;;799    }
00093c  bd10              POP      {r4,pc}
;;;800    
                          ENDP

                  GUIDEMO_Wait PROC
;;;877    */
;;;878    void GUIDEMO_Wait(int TimeWait) {
00093e  b510              PUSH     {r4,lr}
000940  4604              MOV      r4,r0
;;;879      GUIDEMO_Delay(TimeWait);
000942  4620              MOV      r0,r4
000944  f7fffffe          BL       GUIDEMO_Delay
;;;880      GUIDEMO_NotifyStartNext();
000948  f7fffffe          BL       GUIDEMO_NotifyStartNext
;;;881    }
00094c  bd10              POP      {r4,pc}
;;;882    
                          ENDP

                  GUIDEMO_ShowIntro PROC
;;;808    */
;;;809    void GUIDEMO_ShowIntro(const char * pTitle, const char * pDescription) {
00094e  e92d4ff8          PUSH     {r3-r11,lr}
000952  4607              MOV      r7,r0
000954  460c              MOV      r4,r1
;;;810      int FontDistY;
;;;811      int TimeWait;
;;;812      int xCenter;
;;;813      int yCenter;
;;;814      int xSize;
;;;815      int ySize;
;;;816      int i;
;;;817    
;;;818      xSize   = LCD_GetXSize();
000956  f7fffffe          BL       LCD_GetXSize
00095a  4682              MOV      r10,r0
;;;819      ySize   = LCD_GetYSize();
00095c  f7fffffe          BL       LCD_GetYSize
000960  4683              MOV      r11,r0
;;;820      xCenter = xSize / 2;
000962  4650              MOV      r0,r10
000964  eb0a71d0          ADD      r1,r10,r0,LSR #31
000968  1049              ASRS     r1,r1,#1
00096a  9100              STR      r1,[sp,#0]
;;;821      yCenter = ySize / 2;
00096c  4658              MOV      r0,r11
00096e  eb0b71d0          ADD      r1,r11,r0,LSR #31
000972  ea4f0961          ASR      r9,r1,#1
;;;822      GUIDEMO_CursorShow();
000976  f7fffffe          BL       GUIDEMO_CursorShow
;;;823      GUIDEMO_HideInfoWin();
00097a  f7fffffe          BL       GUIDEMO_HideInfoWin
;;;824      GUIDEMO_ShowControlWin();
00097e  f7fffffe          BL       GUIDEMO_ShowControlWin
;;;825      GUI_Exec();      
000982  f7fffffe          BL       GUI_Exec
;;;826      GUIDEMO_DrawBk();
000986  f7fffffe          BL       GUIDEMO_DrawBk
;;;827      GUI_SetColor(GUI_WHITE);
00098a  f06f407f          MVN      r0,#0xff000000
00098e  f7fffffe          BL       GUI_SetColor
;;;828      //
;;;829      // Title
;;;830      //
;;;831      GUI_SetTextMode(GUI_TM_TRANS);
000992  2002              MOVS     r0,#2
000994  f7fffffe          BL       GUI_SetTextMode
;;;832      GUI_SetFont(&GUI_FontRounded22);
000998  4817              LDR      r0,|L1.2552|
00099a  f7fffffe          BL       GUI_SetFont
;;;833      GUI_DispStringHCenterAt(pTitle, xCenter, 60);
00099e  223c              MOVS     r2,#0x3c
0009a0  4638              MOV      r0,r7
0009a2  9900              LDR      r1,[sp,#0]
0009a4  f7fffffe          BL       GUI_DispStringHCenterAt
;;;834      //
;;;835      // Description
;;;836      //
;;;837      GUI_SetFont(&GUI_FontSouvenir18);
0009a8  4814              LDR      r0,|L1.2556|
0009aa  f7fffffe          BL       GUI_SetFont
;;;838      FontDistY = GUI_GetFontDistY();
0009ae  f7fffffe          BL       GUI_GetFontDistY
0009b2  4680              MOV      r8,r0
;;;839      GUI_DispStringHCenterAt(pDescription, xCenter, yCenter - FontDistY + 10);
0009b4  eba90008          SUB      r0,r9,r8
0009b8  f100020a          ADD      r2,r0,#0xa
0009bc  4620              MOV      r0,r4
0009be  9900              LDR      r1,[sp,#0]
0009c0  f7fffffe          BL       GUI_DispStringHCenterAt
;;;840      //
;;;841      // Determine time to wait
;;;842      //
;;;843      i = 0;
0009c4  2500              MOVS     r5,#0
;;;844      while (pDescription[i]) {
0009c6  e000              B        |L1.2506|
                  |L1.2504|
;;;845        i++;
0009c8  1c6d              ADDS     r5,r5,#1
                  |L1.2506|
0009ca  5d60              LDRB     r0,[r4,r5]            ;844
0009cc  2800              CMP      r0,#0                 ;844
0009ce  d1fb              BNE      |L1.2504|
;;;846      }
;;;847      TimeWait = i * CHAR_READING_TIME;
0009d0  eb050085          ADD      r0,r5,r5,LSL #2
0009d4  0106              LSLS     r6,r0,#4
;;;848      GUIDEMO_Wait(TimeWait);
0009d6  4630              MOV      r0,r6
0009d8  f7fffffe          BL       GUIDEMO_Wait
;;;849    }
0009dc  e8bd8ff8          POP      {r3-r11,pc}
;;;850    
                          ENDP

                  |L1.2528|
                          DCD      _DrawBk
                  |L1.2532|
                          DCD      _pfDrawBk
                  |L1.2536|
                          DCD      _DrawBkSimple
                  |L1.2540|
                          DCD      _iDemoMinor
                  |L1.2544|
                          DCD      _hDialogControl
                  |L1.2548|
                          DCD      _hDialogInfo
                  |L1.2552|
                          DCD      GUI_FontRounded22
                  |L1.2556|
                          DCD      GUI_FontSouvenir18

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  _GUIDemoConfig
                          %        12

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  _aFrameWinControl
                          DCD      FRAMEWIN_CreateIndirect
                          DCD      ||.conststring||
000008  00000000          DCW      0x0000,0x0000
00000c  00000050          DCW      0x0000,0x0050
000010  003d0000          DCW      0x003d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
000024  08000002          DCW      0x0800,0x0002
000028  00180020          DCW      0x0018,0x0020
00002c  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x10
000040  08010024          DCW      0x0801,0x0024
000044  00180020          DCW      0x0018,0x0020
000048  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      PROGBAR_CreateIndirect
                          DCD      0x00000000
00005c  02100002          DCW      0x0210,0x0002
000060  000b0042          DCW      0x000b,0x0042
000064  000c0000          DCW      0x000c,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      0x00000000
000078  01600002          DCW      0x0160,0x0002
00007c  00020045          DCW      0x0002,0x0045
000080  00070000          DCW      0x0007,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                  _aFrameWinInfo
                          DCD      FRAMEWIN_CreateIndirect
                          DCD      ||.conststring||+0x18
000094  00000000          DCW      0x0000,0x0000
000098  00000000          DCW      0x0000,0x0000
00009c  00000000          DCW      0x0000,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x24
0000b0  01600003          DCW      0x0160,0x0003
0000b4  00030000          DCW      0x0003,0x0000
0000b8  00000000          DCW      0x0000,0x0000
                          DCD      0x00000000
                          DCD      0x00000000

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=2

000000  436f6e74          DCB      "Control",0
000004  726f6c00
000008  48616c74          DCB      "Halt",0
00000c  00      
00000d  00                DCB      0
00000e  00                DCB      0
00000f  00                DCB      0
000010  4e657874          DCB      "Next",0
000014  00      
000015  00                DCB      0
000016  00                DCB      0
000017  00                DCB      0
000018  656d5769          DCB      "emWin Demo",0
00001c  6e204465
000020  6d6f00  
000023  00                DCB      0
000024  00                DCB      0

                          AREA ||.data||, DATA, ALIGN=2

                  _hDialogControl
                          DCD      0x00000000
                  _hDialogInfo
                          DCD      0x00000000
                  _pfDrawBk
                          DCD      0x00000000
                  _iDemo
                          DCD      0x00000000
                  _iDemoMinor
                          DCD      0x00000000
                  _HaltTime
                          DCD      0x00000000
                  _HaltTimeStart
                          DCD      0x00000000
                  _Halt
                          DCD      0x00000000
                  _Next
                          DCD      0x00000000
                  _Pressed
                          DCD      0x00000000
                  _DrawLogo
000028  00000000          DCB      0x00,0x00,0x00,0x00
                  hMemStretch
                          DCD      0x00000000

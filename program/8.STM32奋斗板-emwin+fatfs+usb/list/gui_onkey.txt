; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\gui_onkey.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\gui_onkey.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\gui_onkey.crf GUI\Core\GUI_OnKey.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  GUI_GetKey PROC
;;;63     */
;;;64     int GUI_GetKey(void) {
000000  4923              LDR      r1,|L1.144|
;;;65       int r = _Key;
000002  6808              LDR      r0,[r1,#0]  ; _Key
;;;66       _Key = 0;
000004  f04f0100          MOV      r1,#0
000008  4a21              LDR      r2,|L1.144|
00000a  6011              STR      r1,[r2,#0]  ; _Key
;;;67       return r;
;;;68     }
00000c  4770              BX       lr
;;;69     
                          ENDP

                  GUI_StoreKey PROC
;;;73     */
;;;74     void GUI_StoreKey(int Key) {
00000e  4920              LDR      r1,|L1.144|
;;;75       if (!_Key) {
000010  6809              LDR      r1,[r1,#0]  ; _Key
000012  b909              CBNZ     r1,|L1.24|
;;;76         _Key = Key;
000014  491e              LDR      r1,|L1.144|
000016  6008              STR      r0,[r1,#0]  ; _Key
                  |L1.24|
;;;77       }
;;;78       GUI_X_SIGNAL_EVENT();
;;;79     }
000018  4770              BX       lr
;;;80     
                          ENDP

                  GUI_ClearKeyBuffer PROC
;;;84     */
;;;85     void GUI_ClearKeyBuffer(void) {
00001a  b500              PUSH     {lr}
;;;86       while (GUI_GetKey());
00001c  bf00              NOP      
                  |L1.30|
00001e  f7fffffe          BL       GUI_GetKey
000022  2800              CMP      r0,#0
000024  d1fb              BNE      |L1.30|
;;;87     }
000026  bd00              POP      {pc}
;;;88     
                          ENDP

                  GUI_StoreKeyMsg PROC
;;;92     */
;;;93     void GUI_StoreKeyMsg(int Key, int PressedCnt) {
000028  4a1a              LDR      r2,|L1.148|
;;;94       #if GUI_WINSUPPORT    /* If 0, WM will not generate any code */
;;;95       _KeyMsg.Key = Key;
00002a  6010              STR      r0,[r2,#0]  ; _KeyMsg
;;;96       _KeyMsg.PressedCnt = PressedCnt;
00002c  6051              STR      r1,[r2,#4]  ; _KeyMsg
;;;97       _KeyMsgCnt = 1;
00002e  f04f0201          MOV      r2,#1
000032  4b19              LDR      r3,|L1.152|
000034  601a              STR      r2,[r3,#0]  ; _KeyMsgCnt
;;;98       #ifdef GUI_X_ON_UNPROCESSED_KEY
;;;99         if (!WM_IsActive) {
;;;100          /* If the WM is deactivated, key messages are not polled by the WM.
;;;101             So call the macro in this case here.
;;;102          */
;;;103          GUI_X_ON_UNPROCESSED_KEY(Key, PressedCnt);
;;;104        }
;;;105      #endif
;;;106      GUI_X_SIGNAL_EVENT();
;;;107      #else
;;;108        GUI_USE_PARA(PressedCnt);
;;;109        GUI_StoreKey(Key);
;;;110        #ifdef GUI_X_ON_UNPROCESSED_KEY
;;;111          GUI_X_ON_UNPROCESSED_KEY(Key, PressedCnt);
;;;112        #endif
;;;113      #endif
;;;114    }
000036  4770              BX       lr
;;;115    
                          ENDP

                  GUI_PollKeyMsg PROC
;;;120    #if GUI_WINSUPPORT    /* If 0, WM will not generate any code */
;;;121    int GUI_PollKeyMsg(void) {
000038  b570              PUSH     {r4-r6,lr}
;;;122      int r = 0;
00003a  f04f0400          MOV      r4,#0
;;;123      GUI_LOCK();
;;;124      if (_KeyMsgCnt) {
00003e  4816              LDR      r0,|L1.152|
000040  6800              LDR      r0,[r0,#0]  ; _KeyMsgCnt
000042  b1a8              CBZ      r0,|L1.112|
;;;125        int Key;
;;;126        _KeyMsgCnt--;
000044  4814              LDR      r0,|L1.152|
000046  6800              LDR      r0,[r0,#0]  ; _KeyMsgCnt
000048  f1a00001          SUB      r0,r0,#1
00004c  4912              LDR      r1,|L1.152|
00004e  6008              STR      r0,[r1,#0]  ; _KeyMsgCnt
;;;127        Key = _KeyMsg.Key;
000050  4810              LDR      r0,|L1.148|
000052  6805              LDR      r5,[r0,#0]  ; _KeyMsg
;;;128        if (!WM_OnKey(Key, _KeyMsg.PressedCnt)) {
000054  6841              LDR      r1,[r0,#4]  ; _KeyMsg
000056  4628              MOV      r0,r5
000058  f7fffffe          BL       WM_OnKey
;;;129          #ifdef GUI_X_ON_UNPROCESSED_KEY
;;;130            GUI_X_ON_UNPROCESSED_KEY(Key, _KeyMsg.PressedCnt);
;;;131          #endif
;;;132        }
;;;133        if (_KeyMsg.PressedCnt == 1) {
00005c  480d              LDR      r0,|L1.148|
00005e  6840              LDR      r0,[r0,#4]  ; _KeyMsg
000060  2801              CMP      r0,#1
000062  d102              BNE      |L1.106|
;;;134          GUI_StoreKey(Key);
000064  4628              MOV      r0,r5
000066  f7fffffe          BL       GUI_StoreKey
                  |L1.106|
;;;135        }
;;;136        r = 1;              /* We have done something */
00006a  f04f0401          MOV      r4,#1
;;;137      }
00006e  bf00              NOP      
                  |L1.112|
;;;138      GUI_UNLOCK();
;;;139      return r;
000070  4620              MOV      r0,r4
;;;140    }
000072  bd70              POP      {r4-r6,pc}
;;;141    #endif
                          ENDP

                  GUI_SendKeyMsg PROC
;;;151    */
;;;152    void GUI_SendKeyMsg(int Key, int PressedCnt) {
000074  b570              PUSH     {r4-r6,lr}
000076  4604              MOV      r4,r0
000078  460d              MOV      r5,r1
;;;153      #if GUI_WINSUPPORT    /* If 0, WM will not generate any code */
;;;154        if (!WM_OnKey(Key, PressedCnt)) {
00007a  4629              MOV      r1,r5
00007c  4620              MOV      r0,r4
00007e  f7fffffe          BL       WM_OnKey
000082  b918              CBNZ     r0,|L1.140|
;;;155          #ifdef GUI_X_ON_UNPROCESSED_KEY
;;;156            GUI_X_ON_UNPROCESSED_KEY(Key, PressedCnt);
;;;157          #endif
;;;158          GUI_StoreKeyMsg(Key, PressedCnt);
000084  4629              MOV      r1,r5
000086  4620              MOV      r0,r4
000088  f7fffffe          BL       GUI_StoreKeyMsg
                  |L1.140|
;;;159        }
;;;160      #else
;;;161        GUI_StoreKeyMsg(Key, PressedCnt);
;;;162      #endif
;;;163    }
00008c  bd70              POP      {r4-r6,pc}
;;;164    
                          ENDP

00008e  0000              DCW      0x0000
                  |L1.144|
                          DCD      _Key
                  |L1.148|
                          DCD      _KeyMsg
                  |L1.152|
                          DCD      _KeyMsgCnt

                          AREA ||.data||, DATA, ALIGN=2

                  _KeyMsgCnt
                          DCD      0x00000000
                  _KeyMsg
                          %        8
                  _Key
                          DCD      0x00000000
                  GUI_pfKeyMsgHook
                          DCD      0x00000000

; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\gui_adddecshift.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\gui_adddecshift.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\gui_adddecshift.crf GUI\Core\GUI_AddDecShift.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _Check_NegLong PROC
;;;45     */
;;;46     static int _Check_NegLong(I32 *pv, char**ps) {
000000  b510              PUSH     {r4,lr}
000002  4602              MOV      r2,r0
;;;47       if (*pv < 0) {
000004  6810              LDR      r0,[r2,#0]
000006  2800              CMP      r0,#0
000008  da0d              BGE      |L1.38|
;;;48         *(*ps)++ = '-';
00000a  f04f032d          MOV      r3,#0x2d
00000e  680c              LDR      r4,[r1,#0]
000010  f1040001          ADD      r0,r4,#1
000014  6008              STR      r0,[r1,#0]
000016  7023              STRB     r3,[r4,#0]
;;;49         *pv = -*pv;
000018  6810              LDR      r0,[r2,#0]
00001a  f1c00000          RSB      r0,r0,#0
00001e  6010              STR      r0,[r2,#0]
;;;50         return 1;
000020  f04f0001          MOV      r0,#1
                  |L1.36|
;;;51       }
;;;52       return 0;
;;;53     }
000024  bd10              POP      {r4,pc}
                  |L1.38|
000026  2000              MOVS     r0,#0                 ;52
000028  e7fc              B        |L1.36|
;;;54     
                          ENDP

                  GUI_Long2Len PROC
;;;64     */
;;;65     int GUI_Long2Len(I32 vSign) {
00002a  4601              MOV      r1,r0
;;;66       int Len = 1;
00002c  f04f0001          MOV      r0,#1
;;;67       I32 v = (vSign > 0) ? vSign : -vSign;
000030  2900              CMP      r1,#0
000032  dd01              BLE      |L1.56|
000034  460b              MOV      r3,r1
000036  e001              B        |L1.60|
                  |L1.56|
000038  f1c10300          RSB      r3,r1,#0
                  |L1.60|
00003c  461a              MOV      r2,r3
;;;68       while (( ((U32)v) >= GUI_Pow10[Len]) && (Len < 9)) {
00003e  e001              B        |L1.68|
                  |L1.64|
;;;69         Len++;
000040  f1000001          ADD      r0,r0,#1
                  |L1.68|
000044  4b31              LDR      r3,|L1.268|
000046  f8533020          LDR      r3,[r3,r0,LSL #2]     ;68
00004a  4293              CMP      r3,r2                 ;68
00004c  d801              BHI      |L1.82|
00004e  2809              CMP      r0,#9                 ;68
000050  dbf6              BLT      |L1.64|
                  |L1.82|
;;;70       }
;;;71       if (vSign < 0) {
000052  2900              CMP      r1,#0
000054  da01              BGE      |L1.90|
;;;72     		Len++;
000056  f1000001          ADD      r0,r0,#1
                  |L1.90|
;;;73       }
;;;74       return Len;
;;;75     }
00005a  4770              BX       lr
;;;76     
                          ENDP

                  GUI_AddSign PROC
;;;80     */
;;;81     long GUI_AddSign(long v, char**ps) {
00005c  b510              PUSH     {r4,lr}
;;;82       char c;
;;;83       if (v < 0) {
00005e  2800              CMP      r0,#0
000060  da04              BGE      |L1.108|
;;;84         c = '-';
000062  f04f022d          MOV      r2,#0x2d
;;;85         v = -v;
000066  f1c00000          RSB      r0,r0,#0
00006a  e001              B        |L1.112|
                  |L1.108|
;;;86       } else {
;;;87         c = '+';
00006c  f04f022b          MOV      r2,#0x2b
                  |L1.112|
;;;88       }
;;;89       *(*ps)++ = c;
000070  680c              LDR      r4,[r1,#0]
000072  f1040301          ADD      r3,r4,#1
000076  600b              STR      r3,[r1,#0]
000078  7022              STRB     r2,[r4,#0]
;;;90       **ps     = '\0';
00007a  f04f0300          MOV      r3,#0
00007e  680c              LDR      r4,[r1,#0]
000080  7023              STRB     r3,[r4,#0]
;;;91       return v;
;;;92     }
000082  bd10              POP      {r4,pc}
;;;93     
                          ENDP

                  GUI_AddDecShift PROC
;;;103    */
;;;104    void GUI_AddDecShift(I32 v, U8 Len, U8 Shift, char**ps) {
000084  e92d41ff          PUSH     {r0-r8,lr}
000088  460d              MOV      r5,r1
00008a  4616              MOV      r6,r2
00008c  461c              MOV      r4,r3
;;;105      char c;
;;;106      long d;
;;;107      #ifndef _CM16C
;;;108        Len -= _Check_NegLong(&v, ps); /* TASKING: Tool internal error S003: asertion failed - please report */
00008e  4621              MOV      r1,r4
000090  4668              MOV      r0,sp
000092  f7fffffe          BL       _Check_NegLong
000096  eba50000          SUB      r0,r5,r0
00009a  b2c5              UXTB     r5,r0
;;;109      #else
;;;110        if (v < 0) {
;;;111          *(*ps)++ = '-';
;;;112          v = -v;
;;;113        }
;;;114      #endif
;;;115      if (Shift) {
00009c  b116              CBZ      r6,|L1.164|
;;;116        Len--;
00009e  f1a50001          SUB      r0,r5,#1
0000a2  b2c5              UXTB     r5,r0
                  |L1.164|
;;;117      }
;;;118    #if GUI_DEBUG_LEVEL >1
;;;119      if (Len > 9) {
;;;120        Len = 9;
;;;121        GUI_DEBUG_ERROROUT("Can not display more than 9 dec. digits");
;;;122      }
;;;123    #endif
;;;124      if ((U32)v >= GUI_Pow10[Len])
0000a4  4819              LDR      r0,|L1.268|
0000a6  f8500025          LDR      r0,[r0,r5,LSL #2]
0000aa  9900              LDR      r1,[sp,#0]
0000ac  4288              CMP      r0,r1
0000ae  d805              BHI      |L1.188|
;;;125    	v = GUI_Pow10[Len] - 1;
0000b0  4816              LDR      r0,|L1.268|
0000b2  f8500025          LDR      r0,[r0,r5,LSL #2]
0000b6  f1a00001          SUB      r0,r0,#1
0000ba  9000              STR      r0,[sp,#0]
                  |L1.188|
;;;126      while (Len) {
0000bc  e01e              B        |L1.252|
                  |L1.190|
;;;127        if (Len-- == Shift)
0000be  4628              MOV      r0,r5
0000c0  1e69              SUBS     r1,r5,#1
0000c2  b2cd              UXTB     r5,r1
0000c4  42b0              CMP      r0,r6
0000c6  d106              BNE      |L1.214|
;;;128          *(*ps)++ = GUI_DecChar;
0000c8  4811              LDR      r0,|L1.272|
0000ca  7801              LDRB     r1,[r0,#0]  ; GUI_DecChar
0000cc  6822              LDR      r2,[r4,#0]
0000ce  f1020001          ADD      r0,r2,#1
0000d2  6020              STR      r0,[r4,#0]
0000d4  7011              STRB     r1,[r2,#0]
                  |L1.214|
;;;129        d = GUI_Pow10[Len];
0000d6  480d              LDR      r0,|L1.268|
0000d8  f8508025          LDR      r8,[r0,r5,LSL #2]
;;;130        c = (char) (v / d);
0000dc  9800              LDR      r0,[sp,#0]
0000de  fb90f0f8          SDIV     r0,r0,r8
0000e2  b2c7              UXTB     r7,r0
;;;131        v -= c * d;
0000e4  9800              LDR      r0,[sp,#0]
0000e6  fb070018          MLS      r0,r7,r8,r0
0000ea  9000              STR      r0,[sp,#0]
;;;132        *(*ps)++ = c + '0';
0000ec  f1070030          ADD      r0,r7,#0x30
0000f0  b2c1              UXTB     r1,r0
0000f2  6822              LDR      r2,[r4,#0]
0000f4  f1020001          ADD      r0,r2,#1
0000f8  6020              STR      r0,[r4,#0]
0000fa  7011              STRB     r1,[r2,#0]
                  |L1.252|
0000fc  2d00              CMP      r5,#0                 ;126
0000fe  d1de              BNE      |L1.190|
;;;133      }
;;;134      **ps = 0;
000100  4628              MOV      r0,r5
000102  6821              LDR      r1,[r4,#0]
000104  7008              STRB     r0,[r1,#0]
;;;135    }
000106  e8bd81ff          POP      {r0-r8,pc}
;;;136    
                          ENDP

00010a  0000              DCW      0x0000
                  |L1.268|
                          DCD      GUI_Pow10
                  |L1.272|
                          DCD      GUI_DecChar

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  GUI_Pow10
                          DCD      0x00000001
                          DCD      0x0000000a
                          DCD      0x00000064
                          DCD      0x000003e8
                          DCD      0x00002710
                          DCD      0x000186a0
                          DCD      0x000f4240
                          DCD      0x00989680
                          DCD      0x05f5e100
                          DCD      0x3b9aca00

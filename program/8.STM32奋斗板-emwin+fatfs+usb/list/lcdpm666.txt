; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\lcdpm666.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\lcdpm666.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\lcdpm666.crf GUI\ConvertColor\LCDPM666.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  LCD_Color2Index_M666 PROC
;;;33     */
;;;34     unsigned LCD_Color2Index_M666(LCD_COLOR Color) {
000000  b510              PUSH     {r4,lr}
000002  4601              MOV      r1,r0
;;;35       unsigned r, g, b;
;;;36       b = (Color >>  2) & 0x3f;
000004  f3c10385          UBFX     r3,r1,#2,#6
;;;37       g = (Color >> 10) & 0x3f;
000008  f3c12285          UBFX     r2,r1,#10,#6
;;;38       r = (Color >> 18) & 0x3f;
00000c  f3c14485          UBFX     r4,r1,#18,#6
;;;39       return r + (g << 6) + (b << 12);
000010  eb041082          ADD      r0,r4,r2,LSL #6
000014  eb003003          ADD      r0,r0,r3,LSL #12
;;;40     }
000018  bd10              POP      {r4,pc}
;;;41     
                          ENDP

                  LCD_Index2Color_M666 PROC
;;;45     */
;;;46     LCD_COLOR LCD_Index2Color_M666(int Index) {
00001a  b510              PUSH     {r4,lr}
00001c  4601              MOV      r1,r0
;;;47       unsigned r, g, b;
;;;48       b = (Index & 0x00003f) <<  2;
00001e  ea4f6081          LSL      r0,r1,#26
000022  ea4f6410          LSR      r4,r0,#24
;;;49       g = (Index & 0x000fc0) >>  4; 
000026  f401607c          AND      r0,r1,#0xfc0
00002a  ea4f1320          ASR      r3,r0,#4
;;;50       r = (Index & 0x03f000) >> 10; 
00002e  f401307c          AND      r0,r1,#0x3f000
000032  ea4f22a0          ASR      r2,r0,#10
;;;51       return r + (g << 8) + (((U32)b) << 16);
000036  eb022003          ADD      r0,r2,r3,LSL #8
00003a  eb004004          ADD      r0,r0,r4,LSL #16
;;;52     }
00003e  bd10              POP      {r4,pc}
;;;53     
                          ENDP

                  LCD_GetIndexMask_M666 PROC
;;;57     */
;;;58     unsigned LCD_GetIndexMask_M666(void) {
000040  4800              LDR      r0,|L1.68|
;;;59       return (unsigned)0x3ffff;
;;;60     }
000042  4770              BX       lr
;;;61     
                          ENDP

                  |L1.68|
                          DCD      0x0003ffff

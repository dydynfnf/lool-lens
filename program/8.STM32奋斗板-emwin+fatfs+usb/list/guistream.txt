; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\guistream.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\guistream.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\guistream.crf GUI\Core\GUIStream.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  GUI_DrawStreamedBitmap PROC
;;;32     */
;;;33     void GUI_DrawStreamedBitmap(const GUI_BITMAP_STREAM *pBitmapHeader, int x, int y) {
000000  b570              PUSH     {r4-r6,lr}
000002  b088              SUB      sp,sp,#0x20
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
000008  4616              MOV      r6,r2
;;;34       GUI_BITMAP Bitmap = {0};
00000a  f04f0114          MOV      r1,#0x14
00000e  a803              ADD      r0,sp,#0xc
000010  f7fffffe          BL       __aeabi_memclr4
;;;35       GUI_LOGPALETTE Palette;
;;;36       Bitmap.BitsPerPixel = pBitmapHeader->BitsPerPixel;
000014  8960              LDRH     r0,[r4,#0xa]
000016  f8ad0012          STRH     r0,[sp,#0x12]
;;;37       Bitmap.BytesPerLine = pBitmapHeader->BytesPerLine;
00001a  8920              LDRH     r0,[r4,#8]
00001c  f8ad0010          STRH     r0,[sp,#0x10]
;;;38       Bitmap.pData        = ((const U8*)pBitmapHeader)+16+4*pBitmapHeader->NumColors;
000020  89a1              LDRH     r1,[r4,#0xc]
000022  f1040010          ADD      r0,r4,#0x10
000026  f04f0204          MOV      r2,#4
00002a  fb020001          MLA      r0,r2,r1,r0
00002e  9005              STR      r0,[sp,#0x14]
;;;39       Bitmap.pPal         = &Palette;
000030  f8cdd018          STR      sp,[sp,#0x18]
;;;40       Bitmap.XSize        = pBitmapHeader->XSize;
000034  88a0              LDRH     r0,[r4,#4]
000036  f8ad000c          STRH     r0,[sp,#0xc]
;;;41       Bitmap.YSize        = pBitmapHeader->YSize;
00003a  88e0              LDRH     r0,[r4,#6]
00003c  f8ad000e          STRH     r0,[sp,#0xe]
;;;42       Palette.HasTrans    = pBitmapHeader->HasTrans;
000040  89e0              LDRH     r0,[r4,#0xe]
000042  b2c0              UXTB     r0,r0
000044  f88d0004          STRB     r0,[sp,#4]
;;;43       Palette.NumEntries  = pBitmapHeader->NumColors;
000048  89a0              LDRH     r0,[r4,#0xc]
00004a  9000              STR      r0,[sp,#0]
;;;44       Palette.pPalEntries = (const LCD_COLOR*)((const U8*)pBitmapHeader+16);
00004c  f1040010          ADD      r0,r4,#0x10
000050  9002              STR      r0,[sp,#8]
;;;45       GUI_DrawBitmap(&Bitmap, x, y);
000052  4632              MOV      r2,r6
000054  4629              MOV      r1,r5
000056  a803              ADD      r0,sp,#0xc
000058  f7fffffe          BL       GUI_DrawBitmap
;;;46     }
00005c  b008              ADD      sp,sp,#0x20
00005e  bd70              POP      {r4-r6,pc}
;;;47     
                          ENDP


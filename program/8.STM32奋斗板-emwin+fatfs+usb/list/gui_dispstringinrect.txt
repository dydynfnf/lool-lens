; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\gui_dispstringinrect.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\gui_dispstringinrect.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\gui_dispstringinrect.crf GUI\Core\GUI_DispStringInRect.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  GUI__DispStringInRect PROC
;;;36     */
;;;37     void GUI__DispStringInRect(const char GUI_UNI_PTR *s, GUI_RECT* pRect, int TextAlign, int MaxNumChars) {
000000  e92d4fff          PUSH     {r0-r11,lr}
000004  b087              SUB      sp,sp,#0x1c
000006  460f              MOV      r7,r1
000008  4615              MOV      r5,r2
00000a  4698              MOV      r8,r3
;;;38       GUI_RECT r;
;;;39       GUI_RECT rLine;
;;;40       int y = 0;
00000c  f04f0900          MOV      r9,#0
;;;41       const char GUI_UNI_PTR *sOrg =s;
000010  9807              LDR      r0,[sp,#0x1c]
000012  9002              STR      r0,[sp,#8]
;;;42       int FontYSize;
;;;43       int xLine = 0;
000014  4648              MOV      r0,r9
000016  9001              STR      r0,[sp,#4]
;;;44       int LineLen;
;;;45       int NumCharsRem;           /* Number of remaining characters */
;;;46       FontYSize = GUI_GetFontDistY();
000018  f7fffffe          BL       GUI_GetFontDistY
00001c  4682              MOV      r10,r0
;;;47       if (pRect) {
00001e  b127              CBZ      r7,|L1.42|
;;;48         r = *pRect;
000020  6838              LDR      r0,[r7,#0]
000022  9005              STR      r0,[sp,#0x14]
000024  6878              LDR      r0,[r7,#4]
000026  9006              STR      r0,[sp,#0x18]
000028  e002              B        |L1.48|
                  |L1.42|
;;;49       } else {
;;;50         GUI_GetClientRect(&r);
00002a  a805              ADD      r0,sp,#0x14
00002c  f7fffffe          BL       GUI_GetClientRect
                  |L1.48|
;;;51       }
;;;52       /* handle vertical alignment */
;;;53       if ((TextAlign & GUI_TA_VERTICAL) == GUI_TA_TOP) {
000030  f0150f0c          TST      r5,#0xc
000034  d102              BNE      |L1.60|
;;;54     		y = r.y0;
000036  f9bd9016          LDRSH    r9,[sp,#0x16]
00003a  e03d              B        |L1.184|
                  |L1.60|
;;;55       } else {
;;;56         int NumLines;
;;;57         /* Count the number of lines */
;;;58         for (NumCharsRem = MaxNumChars, NumLines = 1; NumCharsRem ;NumLines++) {
00003c  4644              MOV      r4,r8
00003e  f04f0b01          MOV      r11,#1
000042  e014              B        |L1.110|
                  |L1.68|
;;;59           LineLen = GUI__GetLineNumChars(s, NumCharsRem);
000044  4621              MOV      r1,r4
000046  9807              LDR      r0,[sp,#0x1c]
000048  f7fffffe          BL       GUI__GetLineNumChars
00004c  4606              MOV      r6,r0
;;;60           NumCharsRem -= LineLen;
00004e  eba40406          SUB      r4,r4,r6
;;;61           s += GUI_UC__NumChars2NumBytes(s, LineLen);
000052  4631              MOV      r1,r6
000054  9807              LDR      r0,[sp,#0x1c]
000056  f7fffffe          BL       GUI_UC__NumChars2NumBytes
00005a  9907              LDR      r1,[sp,#0x1c]
00005c  4408              ADD      r0,r0,r1
00005e  9007              STR      r0,[sp,#0x1c]
;;;62           if (GUI__HandleEOLine(&s))
000060  a807              ADD      r0,sp,#0x1c
000062  f7fffffe          BL       GUI__HandleEOLine
000066  b100              CBZ      r0,|L1.106|
;;;63             break;
000068  e003              B        |L1.114|
                  |L1.106|
00006a  f10b0b01          ADD      r11,r11,#1            ;58
                  |L1.110|
00006e  2c00              CMP      r4,#0                 ;58
000070  d1e8              BNE      |L1.68|
                  |L1.114|
000072  bf00              NOP      
;;;64         }
;;;65         /* Do the vertical alignment */
;;;66         switch (TextAlign & GUI_TA_VERTICAL) {
000074  f005000c          AND      r0,r5,#0xc
000078  2804              CMP      r0,#4
00007a  d005              BEQ      |L1.136|
00007c  2808              CMP      r0,#8
00007e  d002              BEQ      |L1.134|
000080  280c              CMP      r0,#0xc
000082  d117              BNE      |L1.180|
000084  e007              B        |L1.150|
                  |L1.134|
;;;67     	  case GUI_TA_BASELINE:
;;;68     	  case GUI_TA_BOTTOM:
000086  bf00              NOP      
                  |L1.136|
;;;69     	  y = r.y1 -NumLines * FontYSize+1;
000088  f9bd001a          LDRSH    r0,[sp,#0x1a]
00008c  fb0b001a          MLS      r0,r11,r10,r0
000090  f1000901          ADD      r9,r0,#1
;;;70           break;
000094  e00e              B        |L1.180|
                  |L1.150|
;;;71     	  case GUI_TA_VCENTER:
;;;72     		  y = r.y0+(r.y1-r.y0+1 -NumLines * FontYSize) /2;
000096  f9bd101a          LDRSH    r1,[sp,#0x1a]
00009a  f9bd2016          LDRSH    r2,[sp,#0x16]
00009e  eba10102          SUB      r1,r1,r2
0000a2  f1010101          ADD      r1,r1,#1
0000a6  fb0b101a          MLS      r0,r11,r10,r1
0000aa  eb0071d0          ADD      r1,r0,r0,LSR #31
0000ae  eb020961          ADD      r9,r2,r1,ASR #1
;;;73           break;
0000b2  bf00              NOP      
                  |L1.180|
0000b4  bf00              NOP                            ;70
;;;74     	  }
;;;75       }
0000b6  bf00              NOP      
                  |L1.184|
;;;76       /* Output string */
;;;77       for (NumCharsRem = MaxNumChars, s = sOrg; NumCharsRem;) {
0000b8  4644              MOV      r4,r8
0000ba  9802              LDR      r0,[sp,#8]
0000bc  9007              STR      r0,[sp,#0x1c]
0000be  e05c              B        |L1.378|
                  |L1.192|
;;;78         int xLineSize;
;;;79         LineLen = GUI__GetLineNumChars(s, NumCharsRem);
0000c0  4621              MOV      r1,r4
0000c2  9807              LDR      r0,[sp,#0x1c]
0000c4  f7fffffe          BL       GUI__GetLineNumChars
0000c8  4606              MOV      r6,r0
;;;80         NumCharsRem -= LineLen;
0000ca  eba40406          SUB      r4,r4,r6
;;;81         xLineSize = GUI__GetLineDistX(s, LineLen);
0000ce  4631              MOV      r1,r6
0000d0  9807              LDR      r0,[sp,#0x1c]
0000d2  f7fffffe          BL       GUI__GetLineDistX
0000d6  4683              MOV      r11,r0
;;;82         switch (TextAlign & GUI_TA_HORIZONTAL) {
0000d8  f0150003          ANDS     r0,r5,#3
0000dc  d011              BEQ      |L1.258|
0000de  2801              CMP      r0,#1
0000e0  d013              BEQ      |L1.266|
0000e2  2802              CMP      r0,#2
0000e4  d119              BNE      |L1.282|
;;;83         case GUI_TA_HCENTER:
;;;84           xLine = r.x0+(r.x1-r.x0-xLineSize)/2; break;
0000e6  f9bd1018          LDRSH    r1,[sp,#0x18]
0000ea  f9bd2014          LDRSH    r2,[sp,#0x14]
0000ee  eba10102          SUB      r1,r1,r2
0000f2  eba1000b          SUB      r0,r1,r11
0000f6  eb0071d0          ADD      r1,r0,r0,LSR #31
0000fa  eb020161          ADD      r1,r2,r1,ASR #1
0000fe  9101              STR      r1,[sp,#4]
000100  e00b              B        |L1.282|
                  |L1.258|
;;;85         case GUI_TA_LEFT:
;;;86           xLine = r.x0; break;
000102  f9bd0014          LDRSH    r0,[sp,#0x14]
000106  9001              STR      r0,[sp,#4]
000108  e007              B        |L1.282|
                  |L1.266|
;;;87         case GUI_TA_RIGHT:
;;;88           xLine = r.x1 -xLineSize + 1;
00010a  f9bd0018          LDRSH    r0,[sp,#0x18]
00010e  eba0000b          SUB      r0,r0,r11
000112  f1000001          ADD      r0,r0,#1
000116  9001              STR      r0,[sp,#4]
000118  bf00              NOP                            ;82
                  |L1.282|
00011a  bf00              NOP                            ;84
;;;89         }
;;;90         rLine.x0 = GUI_Context.DispPosX = xLine;
00011c  9801              LDR      r0,[sp,#4]
00011e  b200              SXTH     r0,r0
000120  4930              LDR      r1,|L1.484|
000122  8448              STRH     r0,[r1,#0x22]
000124  f8ad000c          STRH     r0,[sp,#0xc]
;;;91         rLine.x1 = rLine.x0 + xLineSize-1;
000128  f8bd000c          LDRH     r0,[sp,#0xc]
00012c  4458              ADD      r0,r0,r11
00012e  f1a00001          SUB      r0,r0,#1
000132  b200              SXTH     r0,r0
000134  f8ad0010          STRH     r0,[sp,#0x10]
;;;92         rLine.y0 = GUI_Context.DispPosY = y;
000138  fa0ff089          SXTH     r0,r9
00013c  8488              STRH     r0,[r1,#0x24]
00013e  f8ad000e          STRH     r0,[sp,#0xe]
;;;93         rLine.y1 = y + FontYSize-1;
000142  eb09000a          ADD      r0,r9,r10
000146  f1a00001          SUB      r0,r0,#1
00014a  b200              SXTH     r0,r0
00014c  f8ad0012          STRH     r0,[sp,#0x12]
;;;94         GUI__DispLine(s, LineLen, &rLine);
000150  aa03              ADD      r2,sp,#0xc
000152  4631              MOV      r1,r6
000154  9807              LDR      r0,[sp,#0x1c]
000156  f7fffffe          BL       GUI__DispLine
;;;95         s += GUI_UC__NumChars2NumBytes(s, LineLen);
00015a  4631              MOV      r1,r6
00015c  9807              LDR      r0,[sp,#0x1c]
00015e  f7fffffe          BL       GUI_UC__NumChars2NumBytes
000162  9907              LDR      r1,[sp,#0x1c]
000164  4408              ADD      r0,r0,r1
000166  9007              STR      r0,[sp,#0x1c]
;;;96         y += GUI_GetFontDistY();
000168  f7fffffe          BL       GUI_GetFontDistY
00016c  4481              ADD      r9,r9,r0
;;;97         if (GUI__HandleEOLine(&s))
00016e  a807              ADD      r0,sp,#0x1c
000170  f7fffffe          BL       GUI__HandleEOLine
000174  b100              CBZ      r0,|L1.376|
;;;98           break;
000176  e002              B        |L1.382|
                  |L1.376|
;;;99       }
000178  bf00              NOP      
                  |L1.378|
00017a  2c00              CMP      r4,#0                 ;77
00017c  d1a0              BNE      |L1.192|
                  |L1.382|
00017e  bf00              NOP                            ;98
;;;100    }
000180  b00b              ADD      sp,sp,#0x2c
000182  e8bd8ff0          POP      {r4-r11,pc}
;;;101    
                          ENDP

                  GUI_DispStringInRectMax PROC
;;;106    #if (GUI_WINSUPPORT)
;;;107    void GUI_DispStringInRectMax(const char GUI_UNI_PTR *s, GUI_RECT* pRect, int TextAlign, int MaxLen) {
000186  e92d41fc          PUSH     {r2-r8,lr}
00018a  4606              MOV      r6,r0
00018c  460c              MOV      r4,r1
00018e  4617              MOV      r7,r2
000190  4698              MOV      r8,r3
;;;108      if (s) {
000192  b1ce              CBZ      r6,|L1.456|
;;;109        const GUI_RECT *pOldClipRect = NULL;
000194  f04f0500          MOV      r5,#0
;;;110        GUI_RECT r;
;;;111        GUI_LOCK();
;;;112        if (pRect) {
000198  b164              CBZ      r4,|L1.436|
;;;113          pOldClipRect = WM_SetUserClipRect(pRect);
00019a  4620              MOV      r0,r4
00019c  f7fffffe          BL       WM_SetUserClipRect
0001a0  4605              MOV      r5,r0
;;;114          if (pOldClipRect) {
0001a2  b13d              CBZ      r5,|L1.436|
;;;115            GUI__IntersectRects(&r, pRect, pOldClipRect);
0001a4  462a              MOV      r2,r5
0001a6  4621              MOV      r1,r4
0001a8  4668              MOV      r0,sp
0001aa  f7fffffe          BL       GUI__IntersectRects
;;;116            WM_SetUserClipRect(&r);
0001ae  4668              MOV      r0,sp
0001b0  f7fffffe          BL       WM_SetUserClipRect
                  |L1.436|
;;;117          }
;;;118        }
;;;119        GUI__DispStringInRect(s, pRect, TextAlign, MaxLen);
0001b4  4643              MOV      r3,r8
0001b6  463a              MOV      r2,r7
0001b8  4621              MOV      r1,r4
0001ba  4630              MOV      r0,r6
0001bc  f7fffffe          BL       GUI__DispStringInRect
;;;120        WM_SetUserClipRect(pOldClipRect);
0001c0  4628              MOV      r0,r5
0001c2  f7fffffe          BL       WM_SetUserClipRect
;;;121        GUI_UNLOCK();
;;;122      }
0001c6  bf00              NOP      
                  |L1.456|
;;;123    }
0001c8  e8bd81fc          POP      {r2-r8,pc}
;;;124    
                          ENDP

                  GUI_DispStringInRect PROC
;;;144    */
;;;145    void GUI_DispStringInRect(const char GUI_UNI_PTR *s, GUI_RECT* pRect, int TextAlign) {
0001cc  b570              PUSH     {r4-r6,lr}
0001ce  4604              MOV      r4,r0
0001d0  460d              MOV      r5,r1
0001d2  4616              MOV      r6,r2
;;;146      GUI_DispStringInRectMax(s, pRect, TextAlign, 0x7fff);
0001d4  f64773ff          MOV      r3,#0x7fff
0001d8  4632              MOV      r2,r6
0001da  4629              MOV      r1,r5
0001dc  4620              MOV      r0,r4
0001de  f7fffffe          BL       GUI_DispStringInRectMax
;;;147    }
0001e2  bd70              POP      {r4-r6,pc}
;;;148    
                          ENDP

                  |L1.484|
                          DCD      GUI_Context

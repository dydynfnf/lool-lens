; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\editbin.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\editbin.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -IC:\Users\Administrator\Desktop\gui\STM32·Ü¶·°å-3.98\RTE -Id:\Keil_v5\ARM\PACK\ARM\CMSIS\4.3.0\CMSIS\Include -Id:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.1.0\Device\Include -D__UVISION_VERSION=515 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\editbin.crf GUI\Widget\EDITBin.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _BinChar2Int PROC
;;;36     */
;;;37     static int _BinChar2Int(int Char) {
000000  4601              MOV      r1,r0
;;;38       if ((Char >= '0') && (Char <= '1'))
000002  2930              CMP      r1,#0x30
000004  db04              BLT      |L1.16|
000006  2931              CMP      r1,#0x31
000008  dc02              BGT      |L1.16|
;;;39         return Char - '0';
00000a  f1a10030          SUB      r0,r1,#0x30
                  |L1.14|
;;;40       return -1;
;;;41     }
00000e  4770              BX       lr
                  |L1.16|
000010  f04f30ff          MOV      r0,#0xffffffff        ;40
000014  e7fb              B        |L1.14|
;;;42     
                          ENDP

                  _GetNumDigits PROC
;;;46     */
;;;47     static int _GetNumDigits(U32 Value) {
000016  4601              MOV      r1,r0
;;;48       int Ret;
;;;49       for (Ret = 0; Value; Value >>= 1, Ret++);
000018  2000              MOVS     r0,#0
00001a  e001              B        |L1.32|
                  |L1.28|
00001c  0849              LSRS     r1,r1,#1
00001e  1c40              ADDS     r0,r0,#1
                  |L1.32|
000020  2900              CMP      r1,#0
000022  d1fb              BNE      |L1.28|
;;;50       return Ret;
;;;51     }
000024  4770              BX       lr
;;;52     
                          ENDP

                  _UpdateBuffer PROC
;;;56     */
;;;57     static void _UpdateBuffer(EDIT_Handle hObj) {
000026  b538              PUSH     {r3-r5,lr}
000028  4605              MOV      r5,r0
;;;58       char * s;
;;;59       EDIT_Obj * pObj;
;;;60       pObj = EDIT_H2P(hObj); /* The GUI needs not to be locked here. This function is called only from EDIT_AddKey which has already locked the GUI */
00002a  4628              MOV      r0,r5
00002c  f7fffffe          BL       GUI_ALLOC_h2p
000030  4604              MOV      r4,r0
;;;61       s = (char*) GUI_ALLOC_h2p(pObj->hpText);
000032  f9b40028          LDRSH    r0,[r4,#0x28]
000036  f7fffffe          BL       GUI_ALLOC_h2p
00003a  9000              STR      r0,[sp,#0]
;;;62       GUI_AddBin(pObj->CurrentValue, pObj->MaxLen, &s);
00003c  f894102a          LDRB     r1,[r4,#0x2a]
000040  466a              MOV      r2,sp
000042  6be0              LDR      r0,[r4,#0x3c]
000044  f7fffffe          BL       GUI_AddBin
;;;63     }
000048  bd38              POP      {r3-r5,pc}
;;;64     
                          ENDP

                  _EditBin PROC
;;;68     */
;;;69     static void _EditBin(U8 Bit, EDIT_Obj* pObj, EDIT_Handle hObj) {
00004a  e92d47f0          PUSH     {r4-r10,lr}
00004e  4605              MOV      r5,r0
000050  460c              MOV      r4,r1
000052  4616              MOV      r6,r2
;;;70       int Pos = pObj->MaxLen - pObj->CursorPos - 1;   /* Bit position */
000054  f9b4002a          LDRSH    r0,[r4,#0x2a]
000058  6c21              LDR      r1,[r4,#0x40]
00005a  1a40              SUBS     r0,r0,r1
00005c  1e47              SUBS     r7,r0,#1
;;;71       U32 AndMask = ~(1   << Pos);
00005e  2001              MOVS     r0,#1
000060  40b8              LSLS     r0,r0,r7
000062  ea6f0900          MVN      r9,r0
;;;72       U32 OrMask  =   Bit << Pos;
000066  fa05fa07          LSL      r10,r5,r7
;;;73       I32 Result  = pObj->CurrentValue & AndMask;
00006a  6be0              LDR      r0,[r4,#0x3c]
00006c  ea000809          AND      r8,r0,r9
;;;74       Result     |= OrMask;
000070  ea48080a          ORR      r8,r8,r10
;;;75       EDIT_SetValue(hObj, Result);
000074  4641              MOV      r1,r8
000076  4630              MOV      r0,r6
000078  f7fffffe          BL       EDIT_SetValue
;;;76     }
00007c  e8bd87f0          POP      {r4-r10,pc}
;;;77     
                          ENDP

                  _GetCurrentBit PROC
;;;81     */
;;;82     static U8 _GetCurrentBit(EDIT_Obj* pObj) {
000080  b530              PUSH     {r4,r5,lr}
000082  4601              MOV      r1,r0
;;;83       int Pos = pObj->MaxLen - pObj->CursorPos - 1;   /* Bit position */
000084  f9b1402a          LDRSH    r4,[r1,#0x2a]
000088  6c0d              LDR      r5,[r1,#0x40]
00008a  1b64              SUBS     r4,r4,r5
00008c  1e62              SUBS     r2,r4,#1
;;;84       U32 AndMask = 1 << Pos;
00008e  2401              MOVS     r4,#1
000090  fa04f302          LSL      r3,r4,r2
;;;85       U8 Bit = (pObj->CurrentValue & AndMask) >> Pos;
000094  6bcc              LDR      r4,[r1,#0x3c]
000096  401c              ANDS     r4,r4,r3
000098  40d4              LSRS     r4,r4,r2
00009a  b2e0              UXTB     r0,r4
;;;86       return Bit;
;;;87     }
00009c  bd30              POP      {r4,r5,pc}
;;;88     
                          ENDP

                  _AddKeyBin PROC
;;;98     */
;;;99     static void _AddKeyBin(EDIT_Handle hObj, int Key) {
00009e  e92d41f0          PUSH     {r4-r8,lr}
0000a2  4606              MOV      r6,r0
0000a4  460d              MOV      r5,r1
;;;100      EDIT_Obj * pObj;
;;;101      pObj = EDIT_H2P(hObj); /* The GUI needs not to be locked here. This function is called only from EDIT_AddKey which has already locked the GUI */
0000a6  4630              MOV      r0,r6
0000a8  f7fffffe          BL       GUI_ALLOC_h2p
0000ac  4604              MOV      r4,r0
;;;102      if (pObj) {
0000ae  2c00              CMP      r4,#0
0000b0  d043              BEQ      |L1.314|
;;;103        switch (Key) {
0000b2  2d10              CMP      r5,#0x10
0000b4  d026              BEQ      |L1.260|
0000b6  2d11              CMP      r5,#0x11
0000b8  d004              BEQ      |L1.196|
0000ba  2d12              CMP      r5,#0x12
0000bc  d01c              BEQ      |L1.248|
0000be  2d13              CMP      r5,#0x13
0000c0  d126              BNE      |L1.272|
0000c2  e00c              B        |L1.222|
                  |L1.196|
;;;104        case GUI_KEY_UP:
;;;105          {
;;;106            int Bit = _GetCurrentBit(pObj) + 1;
0000c4  4620              MOV      r0,r4
0000c6  f7fffffe          BL       _GetCurrentBit
0000ca  1c47              ADDS     r7,r0,#1
;;;107            if (Bit > 1) {
0000cc  2f01              CMP      r7,#1
0000ce  dd00              BLE      |L1.210|
;;;108              Bit = 0;
0000d0  2700              MOVS     r7,#0
                  |L1.210|
;;;109            }
;;;110            _EditBin(Bit, pObj, hObj);
0000d2  b2f8              UXTB     r0,r7
0000d4  4632              MOV      r2,r6
0000d6  4621              MOV      r1,r4
0000d8  f7fffffe          BL       _EditBin
;;;111          }
;;;112          break;
0000dc  e029              B        |L1.306|
                  |L1.222|
;;;113        case GUI_KEY_DOWN:
;;;114          {
;;;115            int Bit = _GetCurrentBit(pObj) - 1;
0000de  4620              MOV      r0,r4
0000e0  f7fffffe          BL       _GetCurrentBit
0000e4  1e47              SUBS     r7,r0,#1
;;;116            if (Bit < 0) {
0000e6  2f00              CMP      r7,#0
0000e8  da00              BGE      |L1.236|
;;;117              Bit = 1;
0000ea  2701              MOVS     r7,#1
                  |L1.236|
;;;118            }
;;;119            _EditBin(Bit, pObj, hObj);
0000ec  b2f8              UXTB     r0,r7
0000ee  4632              MOV      r2,r6
0000f0  4621              MOV      r1,r4
0000f2  f7fffffe          BL       _EditBin
;;;120          }
;;;121          break;
0000f6  e01c              B        |L1.306|
                  |L1.248|
;;;122        case GUI_KEY_RIGHT:
;;;123          EDIT__SetCursorPos(pObj, pObj->CursorPos + 1);
0000f8  6c20              LDR      r0,[r4,#0x40]
0000fa  1c41              ADDS     r1,r0,#1
0000fc  4620              MOV      r0,r4
0000fe  f7fffffe          BL       EDIT__SetCursorPos
;;;124          break;
000102  e016              B        |L1.306|
                  |L1.260|
;;;125        case GUI_KEY_LEFT:
;;;126          EDIT__SetCursorPos(pObj, pObj->CursorPos - 1);
000104  6c20              LDR      r0,[r4,#0x40]
000106  1e41              SUBS     r1,r0,#1
000108  4620              MOV      r0,r4
00010a  f7fffffe          BL       EDIT__SetCursorPos
;;;127          break;
00010e  e010              B        |L1.306|
                  |L1.272|
;;;128        default:
;;;129          {
;;;130            int Bit = _BinChar2Int(Key);
000110  4628              MOV      r0,r5
000112  f7fffffe          BL       _BinChar2Int
000116  4607              MOV      r7,r0
;;;131            if (Bit >= 0) {
000118  2f00              CMP      r7,#0
00011a  db09              BLT      |L1.304|
;;;132              _EditBin(Bit, pObj, hObj);
00011c  b2f8              UXTB     r0,r7
00011e  4632              MOV      r2,r6
000120  4621              MOV      r1,r4
000122  f7fffffe          BL       _EditBin
;;;133              EDIT__SetCursorPos(pObj, pObj->CursorPos + 1);
000126  6c20              LDR      r0,[r4,#0x40]
000128  1c41              ADDS     r1,r0,#1
00012a  4620              MOV      r0,r4
00012c  f7fffffe          BL       EDIT__SetCursorPos
                  |L1.304|
;;;134            }
;;;135          }
;;;136          break;
000130  bf00              NOP      
                  |L1.306|
000132  bf00              NOP                            ;112
;;;137        }
;;;138        _UpdateBuffer(hObj);
000134  4630              MOV      r0,r6
000136  f7fffffe          BL       _UpdateBuffer
                  |L1.314|
;;;139      }
;;;140    }
00013a  e8bd81f0          POP      {r4-r8,pc}
;;;141    
                          ENDP

                  EDIT_SetBinMode PROC
;;;151    */
;;;152    void EDIT_SetBinMode(EDIT_Handle hEdit, U32 Value, U32 Min, U32 Max) {
00013e  e92d47f0          PUSH     {r4-r10,lr}
000142  4607              MOV      r7,r0
000144  4688              MOV      r8,r1
000146  4691              MOV      r9,r2
000148  461e              MOV      r6,r3
;;;153      EDIT_Obj* pObj;
;;;154      int MaxLen;
;;;155      WM_LOCK();
;;;156      if (hEdit) {
00014a  b357              CBZ      r7,|L1.418|
;;;157        pObj = EDIT_H2P(hEdit);
00014c  4638              MOV      r0,r7
00014e  f7fffffe          BL       GUI_ALLOC_h2p
000152  4604              MOV      r4,r0
;;;158        pObj->pfAddKeyEx    = _AddKeyBin;
000154  4814              LDR      r0,|L1.424|
000156  64e0              STR      r0,[r4,#0x4c]
;;;159        pObj->pfUpdateBuffer = _UpdateBuffer;
000158  4814              LDR      r0,|L1.428|
00015a  6520              STR      r0,[r4,#0x50]
;;;160        pObj->CurrentValue = Value;
00015c  f8c4803c          STR      r8,[r4,#0x3c]
;;;161        pObj->CursorPos = 0;
000160  2000              MOVS     r0,#0
000162  6420              STR      r0,[r4,#0x40]
;;;162        MaxLen = pObj->MaxLen;
000164  f9b4502a          LDRSH    r5,[r4,#0x2a]
;;;163        if (MaxLen <= 0 ) {
000168  2d00              CMP      r5,#0
00016a  dc03              BGT      |L1.372|
;;;164          MaxLen = _GetNumDigits(Max);
00016c  4630              MOV      r0,r6
00016e  f7fffffe          BL       _GetNumDigits
000172  4605              MOV      r5,r0
                  |L1.372|
;;;165        }
;;;166        if (MaxLen > 32) {
000174  2d20              CMP      r5,#0x20
000176  dd00              BLE      |L1.378|
;;;167          MaxLen = 32;
000178  2520              MOVS     r5,#0x20
                  |L1.378|
;;;168        }
;;;169        if (MaxLen != pObj->MaxLen) {
00017a  f9b4002a          LDRSH    r0,[r4,#0x2a]
00017e  42a8              CMP      r0,r5
000180  d003              BEQ      |L1.394|
;;;170          EDIT_SetMaxLen(hEdit, MaxLen);
000182  4629              MOV      r1,r5
000184  4638              MOV      r0,r7
000186  f7fffffe          BL       EDIT_SetMaxLen
                  |L1.394|
;;;171        }
;;;172        pObj->Min = Min;
00018a  f8c49030          STR      r9,[r4,#0x30]
;;;173        pObj->Max = Max;
00018e  6366              STR      r6,[r4,#0x34]
;;;174        pObj->EditMode = GUI_EDIT_MODE_OVERWRITE;
000190  2001              MOVS     r0,#1
000192  f8840048          STRB     r0,[r4,#0x48]
;;;175        _UpdateBuffer(hEdit);
000196  4638              MOV      r0,r7
000198  f7fffffe          BL       _UpdateBuffer
;;;176        WM_Invalidate(hEdit);
00019c  4638              MOV      r0,r7
00019e  f7fffffe          BL       WM_InvalidateWindow
                  |L1.418|
;;;177      }
;;;178      WM_UNLOCK();
;;;179    }
0001a2  e8bd87f0          POP      {r4-r10,pc}
;;;180    
                          ENDP

0001a6  0000              DCW      0x0000
                  |L1.424|
                          DCD      _AddKeyBin
                  |L1.428|
                          DCD      _UpdateBuffer

; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\gui_adddecshift.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\gui_adddecshift.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -IC:\Users\Administrator\Desktop\gui\STM32·Ü¶·°å-3.98\RTE -Id:\Keil_v5\ARM\PACK\ARM\CMSIS\4.3.0\CMSIS\Include -Id:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.1.0\Device\Include -D__UVISION_VERSION=515 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\gui_adddecshift.crf GUI\Core\GUI_AddDecShift.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _Check_NegLong PROC
;;;45     */
;;;46     static int _Check_NegLong(I32 *pv, char**ps) {
000000  b510              PUSH     {r4,lr}
000002  4602              MOV      r2,r0
;;;47       if (*pv < 0) {
000004  6810              LDR      r0,[r2,#0]
000006  2800              CMP      r0,#0
000008  da09              BGE      |L1.30|
;;;48         *(*ps)++ = '-';
00000a  232d              MOVS     r3,#0x2d
00000c  680c              LDR      r4,[r1,#0]
00000e  1c60              ADDS     r0,r4,#1
000010  6008              STR      r0,[r1,#0]
000012  7023              STRB     r3,[r4,#0]
;;;49         *pv = -*pv;
000014  6810              LDR      r0,[r2,#0]
000016  4240              RSBS     r0,r0,#0
000018  6010              STR      r0,[r2,#0]
;;;50         return 1;
00001a  2001              MOVS     r0,#1
                  |L1.28|
;;;51       }
;;;52       return 0;
;;;53     }
00001c  bd10              POP      {r4,pc}
                  |L1.30|
00001e  2000              MOVS     r0,#0                 ;52
000020  e7fc              B        |L1.28|
;;;54     
                          ENDP

                  GUI_Long2Len PROC
;;;64     */
;;;65     int GUI_Long2Len(I32 vSign) {
000022  4601              MOV      r1,r0
;;;66       int Len = 1;
000024  2001              MOVS     r0,#1
;;;67       I32 v = (vSign > 0) ? vSign : -vSign;
000026  2900              CMP      r1,#0
000028  dd01              BLE      |L1.46|
00002a  460b              MOV      r3,r1
00002c  e000              B        |L1.48|
                  |L1.46|
00002e  424b              RSBS     r3,r1,#0
                  |L1.48|
000030  461a              MOV      r2,r3
;;;68       while (( ((U32)v) >= GUI_Pow10[Len]) && (Len < 9)) {
000032  e000              B        |L1.54|
                  |L1.52|
;;;69         Len++;
000034  1c40              ADDS     r0,r0,#1
                  |L1.54|
000036  4b2c              LDR      r3,|L1.232|
000038  f8533020          LDR      r3,[r3,r0,LSL #2]     ;68
00003c  4293              CMP      r3,r2                 ;68
00003e  d801              BHI      |L1.68|
000040  2809              CMP      r0,#9                 ;68
000042  dbf7              BLT      |L1.52|
                  |L1.68|
;;;70       }
;;;71       if (vSign < 0) {
000044  2900              CMP      r1,#0
000046  da00              BGE      |L1.74|
;;;72     		Len++;
000048  1c40              ADDS     r0,r0,#1
                  |L1.74|
;;;73       }
;;;74       return Len;
;;;75     }
00004a  4770              BX       lr
;;;76     
                          ENDP

                  GUI_AddSign PROC
;;;80     */
;;;81     long GUI_AddSign(long v, char**ps) {
00004c  b510              PUSH     {r4,lr}
;;;82       char c;
;;;83       if (v < 0) {
00004e  2800              CMP      r0,#0
000050  da02              BGE      |L1.88|
;;;84         c = '-';
000052  222d              MOVS     r2,#0x2d
;;;85         v = -v;
000054  4240              RSBS     r0,r0,#0
000056  e000              B        |L1.90|
                  |L1.88|
;;;86       } else {
;;;87         c = '+';
000058  222b              MOVS     r2,#0x2b
                  |L1.90|
;;;88       }
;;;89       *(*ps)++ = c;
00005a  680c              LDR      r4,[r1,#0]
00005c  1c63              ADDS     r3,r4,#1
00005e  600b              STR      r3,[r1,#0]
000060  7022              STRB     r2,[r4,#0]
;;;90       **ps     = '\0';
000062  2300              MOVS     r3,#0
000064  680c              LDR      r4,[r1,#0]
000066  7023              STRB     r3,[r4,#0]
;;;91       return v;
;;;92     }
000068  bd10              POP      {r4,pc}
;;;93     
                          ENDP

                  GUI_AddDecShift PROC
;;;103    */
;;;104    void GUI_AddDecShift(I32 v, U8 Len, U8 Shift, char**ps) {
00006a  e92d41ff          PUSH     {r0-r8,lr}
00006e  460d              MOV      r5,r1
000070  4616              MOV      r6,r2
000072  461c              MOV      r4,r3
;;;105      char c;
;;;106      long d;
;;;107      #ifndef _CM16C
;;;108        Len -= _Check_NegLong(&v, ps); /* TASKING: Tool internal error S003: asertion failed - please report */
000074  4621              MOV      r1,r4
000076  4668              MOV      r0,sp
000078  f7fffffe          BL       _Check_NegLong
00007c  1a28              SUBS     r0,r5,r0
00007e  b2c5              UXTB     r5,r0
;;;109      #else
;;;110        if (v < 0) {
;;;111          *(*ps)++ = '-';
;;;112          v = -v;
;;;113        }
;;;114      #endif
;;;115      if (Shift) {
000080  b10e              CBZ      r6,|L1.134|
;;;116        Len--;
000082  1e68              SUBS     r0,r5,#1
000084  b2c5              UXTB     r5,r0
                  |L1.134|
;;;117      }
;;;118    #if GUI_DEBUG_LEVEL >1
;;;119      if (Len > 9) {
;;;120        Len = 9;
;;;121        GUI_DEBUG_ERROROUT("Can not display more than 9 dec. digits");
;;;122      }
;;;123    #endif
;;;124      if ((U32)v >= GUI_Pow10[Len])
000086  4818              LDR      r0,|L1.232|
000088  f8500025          LDR      r0,[r0,r5,LSL #2]
00008c  9900              LDR      r1,[sp,#0]
00008e  4288              CMP      r0,r1
000090  d804              BHI      |L1.156|
;;;125    	v = GUI_Pow10[Len] - 1;
000092  4815              LDR      r0,|L1.232|
000094  f8500025          LDR      r0,[r0,r5,LSL #2]
000098  1e40              SUBS     r0,r0,#1
00009a  9000              STR      r0,[sp,#0]
                  |L1.156|
;;;126      while (Len) {
00009c  e01c              B        |L1.216|
                  |L1.158|
;;;127        if (Len-- == Shift)
00009e  4628              MOV      r0,r5
0000a0  1e69              SUBS     r1,r5,#1
0000a2  b2cd              UXTB     r5,r1
0000a4  42b0              CMP      r0,r6
0000a6  d105              BNE      |L1.180|
;;;128          *(*ps)++ = GUI_DecChar;
0000a8  4810              LDR      r0,|L1.236|
0000aa  7801              LDRB     r1,[r0,#0]  ; GUI_DecChar
0000ac  6822              LDR      r2,[r4,#0]
0000ae  1c50              ADDS     r0,r2,#1
0000b0  6020              STR      r0,[r4,#0]
0000b2  7011              STRB     r1,[r2,#0]
                  |L1.180|
;;;129        d = GUI_Pow10[Len];
0000b4  480c              LDR      r0,|L1.232|
0000b6  f8508025          LDR      r8,[r0,r5,LSL #2]
;;;130        c = (char) (v / d);
0000ba  9800              LDR      r0,[sp,#0]
0000bc  fb90f0f8          SDIV     r0,r0,r8
0000c0  b2c7              UXTB     r7,r0
;;;131        v -= c * d;
0000c2  9800              LDR      r0,[sp,#0]
0000c4  fb070018          MLS      r0,r7,r8,r0
0000c8  9000              STR      r0,[sp,#0]
;;;132        *(*ps)++ = c + '0';
0000ca  f1070030          ADD      r0,r7,#0x30
0000ce  b2c1              UXTB     r1,r0
0000d0  6822              LDR      r2,[r4,#0]
0000d2  1c50              ADDS     r0,r2,#1
0000d4  6020              STR      r0,[r4,#0]
0000d6  7011              STRB     r1,[r2,#0]
                  |L1.216|
0000d8  2d00              CMP      r5,#0                 ;126
0000da  d1e0              BNE      |L1.158|
;;;133      }
;;;134      **ps = 0;
0000dc  2000              MOVS     r0,#0
0000de  6821              LDR      r1,[r4,#0]
0000e0  7008              STRB     r0,[r1,#0]
;;;135    }
0000e2  e8bd81ff          POP      {r0-r8,pc}
;;;136    
                          ENDP

0000e6  0000              DCW      0x0000
                  |L1.232|
                          DCD      GUI_Pow10
                  |L1.236|
                          DCD      GUI_DecChar

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  GUI_Pow10
                          DCD      0x00000001
                          DCD      0x0000000a
                          DCD      0x00000064
                          DCD      0x000003e8
                          DCD      0x00002710
                          DCD      0x000186a0
                          DCD      0x000f4240
                          DCD      0x00989680
                          DCD      0x05f5e100
                          DCD      0x3b9aca00

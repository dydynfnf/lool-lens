; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\guiarc.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\guiarc.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -IC:\Users\Administrator\Desktop\gui\STM32·Ü¶·°å-3.98\RTE -Id:\Keil_v5\ARM\PACK\ARM\CMSIS\4.3.0\CMSIS\Include -Id:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.1.0\Device\Include -D__UVISION_VERSION=515 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\guiarc.crf GUI\Core\GUIArc.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _CalcX PROC
;;;45     */
;;;46     static void _CalcX(int*px, int y, U32 r2) {
000000  b5f0              PUSH     {r4-r7,lr}
000002  460b              MOV      r3,r1
;;;47       int x =*px;
000004  6801              LDR      r1,[r0,#0]
;;;48       U32 y2 = (U32)y*(U32)y;
000006  fb03f403          MUL      r4,r3,r3
;;;49       U32 r2y2 = r2-y2;
00000a  1b16              SUBS     r6,r2,r4
;;;50       U32 x2;
;;;51       if (y2>=r2) {
00000c  4294              CMP      r4,r2
00000e  d302              BCC      |L1.22|
;;;52         *px=0;
000010  2700              MOVS     r7,#0
000012  6007              STR      r7,[r0,#0]
                  |L1.20|
;;;53     		return;
;;;54     	}
;;;55       /* x2 = r2-y2 */
;;;56       do {
;;;57         x++;
;;;58         x2 =(U32)x*(U32)x;
;;;59     	} while (x2 < r2y2);
;;;60     	*px = x-1;
;;;61     }
000014  bdf0              POP      {r4-r7,pc}
                  |L1.22|
000016  bf00              NOP                            ;56
                  |L1.24|
000018  1c49              ADDS     r1,r1,#1              ;57
00001a  fb01f501          MUL      r5,r1,r1              ;58
00001e  42b5              CMP      r5,r6                 ;59
000020  d3fa              BCC      |L1.24|
000022  1e4f              SUBS     r7,r1,#1              ;60
000024  6007              STR      r7,[r0,#0]            ;60
000026  bf00              NOP      
000028  e7f4              B        |L1.20|
;;;62     
                          ENDP

                  _CalcInterSectLin PROC
;;;66     */
;;;67     static float _CalcInterSectLin(float y, float y0, float y1, float x0, float x1) {
00002a  e92d5ff0          PUSH     {r4-r12,lr}
00002e  4607              MOV      r7,r0
000030  460c              MOV      r4,r1
000032  4615              MOV      r5,r2
000034  461e              MOV      r6,r3
000036  f8dd8028          LDR      r8,[sp,#0x28]
;;;68       if (y1==y0) {
00003a  4621              MOV      r1,r4
00003c  4628              MOV      r0,r5
00003e  f7fffffe          BL       __aeabi_cfcmpeq
000042  d102              BNE      |L1.74|
;;;69     	  return y0;
000044  4620              MOV      r0,r4
                  |L1.70|
;;;70     	} else {
;;;71         float Slope = (x1-x0)/(y1-y0);
;;;72        return (y-y0)*Slope+x0;
;;;73     	}
;;;74     }
000046  e8bd9ff0          POP      {r4-r12,pc}
                  |L1.74|
00004a  4621              MOV      r1,r4                 ;71
00004c  4628              MOV      r0,r5                 ;71
00004e  f7fffffe          BL       __aeabi_fsub
000052  4682              MOV      r10,r0                ;71
000054  4631              MOV      r1,r6                 ;71
000056  4640              MOV      r0,r8                 ;71
000058  f7fffffe          BL       __aeabi_fsub
00005c  4683              MOV      r11,r0                ;71
00005e  4651              MOV      r1,r10                ;71
000060  f7fffffe          BL       __aeabi_fdiv
000064  4681              MOV      r9,r0                 ;71
000066  4621              MOV      r1,r4                 ;72
000068  4638              MOV      r0,r7                 ;72
00006a  f7fffffe          BL       __aeabi_fsub
00006e  4683              MOV      r11,r0                ;72
000070  4649              MOV      r1,r9                 ;72
000072  f7fffffe          BL       __aeabi_fmul
000076  4682              MOV      r10,r0                ;72
000078  4631              MOV      r1,r6                 ;72
00007a  f7fffffe          BL       __aeabi_fadd
00007e  e7e2              B        |L1.70|
;;;75     
                          ENDP

                  _DrawArc PROC
;;;79     */
;;;80     static void _DrawArc(int x0, int y0, int rx, int ry, int Angle0, int Angle1, int xMul, int yMul) {
000080  e92d4fff          PUSH     {r0-r11,lr}
000084  b09d              SUB      sp,sp,#0x74
000086  4606              MOV      r6,r0
000088  460c              MOV      r4,r1
00008a  4692              MOV      r10,r2
00008c  9f2d              LDR      r7,[sp,#0xb4]
;;;81       float afx[4];
;;;82       float afy[4];
;;;83     	float ri = rx-(GUI_Context.PenSize+1.5)/2;
00008e  49f7              LDR      r1,|L1.1132|
000090  7e08              LDRB     r0,[r1,#0x18]  ; GUI_Context
000092  f7fffffe          BL       __aeabi_ui2d
000096  2200              MOVS     r2,#0
000098  4bf5              LDR      r3,|L1.1136|
00009a  e9cd0100          STRD     r0,r1,[sp,#0]
00009e  f7fffffe          BL       __aeabi_dadd
0000a2  2200              MOVS     r2,#0
0000a4  f04f4380          MOV      r3,#0x40000000
0000a8  e9cd0102          STRD     r0,r1,[sp,#8]
0000ac  f7fffffe          BL       __aeabi_ddiv
0000b0  e9cd0106          STRD     r0,r1,[sp,#0x18]
0000b4  4650              MOV      r0,r10
0000b6  f7fffffe          BL       __aeabi_i2d
0000ba  e9cd0104          STRD     r0,r1,[sp,#0x10]
0000be  e9dd2306          LDRD     r2,r3,[sp,#0x18]
0000c2  f7fffffe          BL       __aeabi_dsub
0000c6  e9cd0108          STRD     r0,r1,[sp,#0x20]
0000ca  f7fffffe          BL       __aeabi_d2f
0000ce  9013              STR      r0,[sp,#0x4c]
;;;84     	float ro = rx+(GUI_Context.PenSize+1.5)/2;
0000d0  49e6              LDR      r1,|L1.1132|
0000d2  7e08              LDRB     r0,[r1,#0x18]  ; GUI_Context
0000d4  f7fffffe          BL       __aeabi_ui2d
0000d8  2200              MOVS     r2,#0
0000da  4be5              LDR      r3,|L1.1136|
0000dc  e9cd0100          STRD     r0,r1,[sp,#0]
0000e0  f7fffffe          BL       __aeabi_dadd
0000e4  2200              MOVS     r2,#0
0000e6  f04f4380          MOV      r3,#0x40000000
0000ea  e9cd0102          STRD     r0,r1,[sp,#8]
0000ee  f7fffffe          BL       __aeabi_ddiv
0000f2  e9cd0106          STRD     r0,r1,[sp,#0x18]
0000f6  4650              MOV      r0,r10
0000f8  f7fffffe          BL       __aeabi_i2d
0000fc  e9cd0104          STRD     r0,r1,[sp,#0x10]
000100  e9dd2306          LDRD     r2,r3,[sp,#0x18]
000104  f7fffffe          BL       __aeabi_dadd
000108  e9cd0108          STRD     r0,r1,[sp,#0x20]
00010c  f7fffffe          BL       __aeabi_d2f
000110  9012              STR      r0,[sp,#0x48]
;;;85       float fAngle0 = Angle0*3.1415926/180;
000112  982a              LDR      r0,[sp,#0xa8]
000114  f7fffffe          BL       __aeabi_i2d
000118  4ad6              LDR      r2,|L1.1140|
00011a  4bd7              LDR      r3,|L1.1144|
00011c  e9cd0104          STRD     r0,r1,[sp,#0x10]
000120  f7fffffe          BL       __aeabi_dmul
000124  2200              MOVS     r2,#0
000126  4bd5              LDR      r3,|L1.1148|
000128  e9cd0106          STRD     r0,r1,[sp,#0x18]
00012c  f7fffffe          BL       __aeabi_ddiv
000130  e9cd0108          STRD     r0,r1,[sp,#0x20]
000134  f7fffffe          BL       __aeabi_d2f
000138  9011              STR      r0,[sp,#0x44]
;;;86       float fAngle1 = Angle1*3.1415926/180;
00013a  982b              LDR      r0,[sp,#0xac]
00013c  f7fffffe          BL       __aeabi_i2d
000140  4acc              LDR      r2,|L1.1140|
000142  4bcd              LDR      r3,|L1.1144|
000144  e9cd0104          STRD     r0,r1,[sp,#0x10]
000148  f7fffffe          BL       __aeabi_dmul
00014c  2200              MOVS     r2,#0
00014e  4bcb              LDR      r3,|L1.1148|
000150  e9cd0106          STRD     r0,r1,[sp,#0x18]
000154  f7fffffe          BL       __aeabi_ddiv
000158  e9cd0108          STRD     r0,r1,[sp,#0x20]
00015c  f7fffffe          BL       __aeabi_d2f
000160  9010              STR      r0,[sp,#0x40]
;;;87       float sin0 = sin(fAngle0); 
000162  9811              LDR      r0,[sp,#0x44]
000164  f7fffffe          BL       __aeabi_f2d
000168  e9cd0106          STRD     r0,r1,[sp,#0x18]
00016c  f7fffffe          BL       ||sin||
000170  e9cd0108          STRD     r0,r1,[sp,#0x20]
000174  f7fffffe          BL       __aeabi_d2f
000178  900f              STR      r0,[sp,#0x3c]
;;;88       float sin1 = sin(fAngle1); 
00017a  9810              LDR      r0,[sp,#0x40]
00017c  f7fffffe          BL       __aeabi_f2d
000180  e9cd0106          STRD     r0,r1,[sp,#0x18]
000184  f7fffffe          BL       ||sin||
000188  e9cd0108          STRD     r0,r1,[sp,#0x20]
00018c  f7fffffe          BL       __aeabi_d2f
000190  900e              STR      r0,[sp,#0x38]
;;;89       float cos0 = cos(fAngle0); 
000192  9811              LDR      r0,[sp,#0x44]
000194  f7fffffe          BL       __aeabi_f2d
000198  e9cd0106          STRD     r0,r1,[sp,#0x18]
00019c  f7fffffe          BL       ||cos||
0001a0  e9cd0108          STRD     r0,r1,[sp,#0x20]
0001a4  f7fffffe          BL       __aeabi_d2f
0001a8  900d              STR      r0,[sp,#0x34]
;;;90       float cos1 = cos(fAngle1); 
0001aa  9810              LDR      r0,[sp,#0x40]
0001ac  f7fffffe          BL       __aeabi_f2d
0001b0  e9cd0106          STRD     r0,r1,[sp,#0x18]
0001b4  f7fffffe          BL       ||cos||
0001b8  e9cd0108          STRD     r0,r1,[sp,#0x20]
0001bc  f7fffffe          BL       __aeabi_d2f
0001c0  900c              STR      r0,[sp,#0x30]
;;;91       U32   ri2 = ri*ri;
0001c2  9913              LDR      r1,[sp,#0x4c]
0001c4  4608              MOV      r0,r1
0001c6  f7fffffe          BL       __aeabi_fmul
0001ca  4683              MOV      r11,r0
0001cc  f7fffffe          BL       __aeabi_f2uiz
0001d0  900b              STR      r0,[sp,#0x2c]
;;;92       U32   ro2 = ro*ro;
0001d2  9912              LDR      r1,[sp,#0x48]
0001d4  4608              MOV      r0,r1
0001d6  f7fffffe          BL       __aeabi_fmul
0001da  4683              MOV      r11,r0
0001dc  f7fffffe          BL       __aeabi_f2uiz
0001e0  900a              STR      r0,[sp,#0x28]
;;;93     	int y, yMax, yMin;
;;;94     	afy[0] = ri*sin0;
0001e2  990f              LDR      r1,[sp,#0x3c]
0001e4  9813              LDR      r0,[sp,#0x4c]
0001e6  f7fffffe          BL       __aeabi_fmul
0001ea  9014              STR      r0,[sp,#0x50]
;;;95     	afy[1] = ro*sin0;
0001ec  990f              LDR      r1,[sp,#0x3c]
0001ee  9812              LDR      r0,[sp,#0x48]
0001f0  f7fffffe          BL       __aeabi_fmul
0001f4  9015              STR      r0,[sp,#0x54]
;;;96     	afy[2] = ri*sin1;
0001f6  990e              LDR      r1,[sp,#0x38]
0001f8  9813              LDR      r0,[sp,#0x4c]
0001fa  f7fffffe          BL       __aeabi_fmul
0001fe  9016              STR      r0,[sp,#0x58]
;;;97     	afy[3] = ro*sin1;
000200  990e              LDR      r1,[sp,#0x38]
000202  9812              LDR      r0,[sp,#0x48]
000204  f7fffffe          BL       __aeabi_fmul
000208  9017              STR      r0,[sp,#0x5c]
;;;98     	afx[0] = ri*cos0;
00020a  990d              LDR      r1,[sp,#0x34]
00020c  9813              LDR      r0,[sp,#0x4c]
00020e  f7fffffe          BL       __aeabi_fmul
000212  9018              STR      r0,[sp,#0x60]
;;;99     	afx[1] = ro*cos0;
000214  990d              LDR      r1,[sp,#0x34]
000216  9812              LDR      r0,[sp,#0x48]
000218  f7fffffe          BL       __aeabi_fmul
00021c  9019              STR      r0,[sp,#0x64]
;;;100    	afx[2] = ri*cos1;
00021e  990c              LDR      r1,[sp,#0x30]
000220  9813              LDR      r0,[sp,#0x4c]
000222  f7fffffe          BL       __aeabi_fmul
000226  901a              STR      r0,[sp,#0x68]
;;;101    	afx[3] = ro*cos1;
000228  990c              LDR      r1,[sp,#0x30]
00022a  9812              LDR      r0,[sp,#0x48]
00022c  f7fffffe          BL       __aeabi_fmul
000230  901b              STR      r0,[sp,#0x6c]
;;;102    	yMin = ceil(afy[0]);
000232  9814              LDR      r0,[sp,#0x50]
000234  f7fffffe          BL       __aeabi_f2d
000238  e9cd0106          STRD     r0,r1,[sp,#0x18]
00023c  f7fffffe          BL       ceil
000240  e9cd0108          STRD     r0,r1,[sp,#0x20]
000244  f7fffffe          BL       __aeabi_d2iz
000248  4681              MOV      r9,r0
;;;103      yMax = floor(afy[3]);
00024a  9817              LDR      r0,[sp,#0x5c]
00024c  f7fffffe          BL       __aeabi_f2d
000250  e9cd0106          STRD     r0,r1,[sp,#0x18]
000254  f7fffffe          BL       floor
000258  e9cd0108          STRD     r0,r1,[sp,#0x20]
00025c  f7fffffe          BL       __aeabi_d2iz
000260  4680              MOV      r8,r0
;;;104      /* Use Clipping rect to reduce calculation (if possible) */
;;;105      if (GUI_Context.pClipRect_HL) {
000262  4882              LDR      r0,|L1.1132|
000264  6940              LDR      r0,[r0,#0x14]  ; GUI_Context
000266  b3b8              CBZ      r0,|L1.728|
;;;106        if (yMul ==1) {
000268  2f01              CMP      r7,#1
00026a  d119              BNE      |L1.672|
;;;107          if (yMax > (GUI_Context.pClipRect_HL->y1 -y0))
00026c  487f              LDR      r0,|L1.1132|
00026e  6940              LDR      r0,[r0,#0x14]  ; GUI_Context
000270  f9b00006          LDRSH    r0,[r0,#6]
000274  1b00              SUBS     r0,r0,r4
000276  4540              CMP      r0,r8
000278  da05              BGE      |L1.646|
;;;108            yMax = (GUI_Context.pClipRect_HL->y1 -y0);
00027a  487c              LDR      r0,|L1.1132|
00027c  6940              LDR      r0,[r0,#0x14]  ; GUI_Context
00027e  f9b00006          LDRSH    r0,[r0,#6]
000282  eba00804          SUB      r8,r0,r4
                  |L1.646|
;;;109          if (yMin < (GUI_Context.pClipRect_HL->y0 -y0))
000286  4879              LDR      r0,|L1.1132|
000288  6940              LDR      r0,[r0,#0x14]  ; GUI_Context
00028a  f9b00002          LDRSH    r0,[r0,#2]
00028e  1b00              SUBS     r0,r0,r4
000290  4548              CMP      r0,r9
000292  dd05              BLE      |L1.672|
;;;110            yMin = (GUI_Context.pClipRect_HL->y0 -y0);
000294  4875              LDR      r0,|L1.1132|
000296  6940              LDR      r0,[r0,#0x14]  ; GUI_Context
000298  f9b00002          LDRSH    r0,[r0,#2]
00029c  eba00904          SUB      r9,r0,r4
                  |L1.672|
;;;111        }
;;;112        if (yMul == -1) {
0002a0  1c78              ADDS     r0,r7,#1
0002a2  b9c8              CBNZ     r0,|L1.728|
;;;113          if (yMin > (GUI_Context.pClipRect_HL->y1 -y0))
0002a4  4871              LDR      r0,|L1.1132|
0002a6  6940              LDR      r0,[r0,#0x14]  ; GUI_Context
0002a8  f9b00006          LDRSH    r0,[r0,#6]
0002ac  1b00              SUBS     r0,r0,r4
0002ae  4548              CMP      r0,r9
0002b0  da05              BGE      |L1.702|
;;;114            yMin = (GUI_Context.pClipRect_HL->y1 -y0);
0002b2  486e              LDR      r0,|L1.1132|
0002b4  6940              LDR      r0,[r0,#0x14]  ; GUI_Context
0002b6  f9b00006          LDRSH    r0,[r0,#6]
0002ba  eba00904          SUB      r9,r0,r4
                  |L1.702|
;;;115          if (yMax < (GUI_Context.pClipRect_HL->y0 -y0))
0002be  486b              LDR      r0,|L1.1132|
0002c0  6940              LDR      r0,[r0,#0x14]  ; GUI_Context
0002c2  f9b00002          LDRSH    r0,[r0,#2]
0002c6  1b00              SUBS     r0,r0,r4
0002c8  4540              CMP      r0,r8
0002ca  dd05              BLE      |L1.728|
;;;116            yMax = (GUI_Context.pClipRect_HL->y0 -y0);
0002cc  4867              LDR      r0,|L1.1132|
0002ce  6940              LDR      r0,[r0,#0x14]  ; GUI_Context
0002d0  f9b00002          LDRSH    r0,[r0,#2]
0002d4  eba00804          SUB      r8,r0,r4
                  |L1.728|
;;;117        }
;;;118      }
;;;119      /* Start drawing lines ... */
;;;120      {
;;;121      int xMinDisp, xMaxDisp, xMin=0,xMax=0;
0002d8  2000              MOVS     r0,#0
0002da  9008              STR      r0,[sp,#0x20]
0002dc  9007              STR      r0,[sp,#0x1c]
;;;122        for (y=yMax; y>=yMin; y--) {
0002de  4645              MOV      r5,r8
0002e0  e066              B        |L1.944|
                  |L1.738|
;;;123          _CalcX(&xMin, y, ri2);
0002e2  4629              MOV      r1,r5
0002e4  a808              ADD      r0,sp,#0x20
0002e6  9a0b              LDR      r2,[sp,#0x2c]
0002e8  f7fffffe          BL       _CalcX
;;;124          _CalcX(&xMax, y, ro2);
0002ec  4629              MOV      r1,r5
0002ee  a807              ADD      r0,sp,#0x1c
0002f0  9a0a              LDR      r2,[sp,#0x28]
0002f2  f7fffffe          BL       _CalcX
;;;125          if ((float)y< afy[1]) {
0002f6  4628              MOV      r0,r5
0002f8  f7fffffe          BL       __aeabi_i2f
0002fc  9006              STR      r0,[sp,#0x18]
0002fe  9915              LDR      r1,[sp,#0x54]
000300  f7fffffe          BL       __aeabi_cfcmple
000304  d210              BCS      |L1.808|
;;;126            xMaxDisp = _CalcInterSectLin(y,afy[0], afy[1], afx[0], afx[1]);
000306  4628              MOV      r0,r5
000308  f7fffffe          BL       __aeabi_i2f
00030c  9005              STR      r0,[sp,#0x14]
00030e  9819              LDR      r0,[sp,#0x64]
000310  9000              STR      r0,[sp,#0]
000312  9b18              LDR      r3,[sp,#0x60]
000314  e9dd1214          LDRD     r1,r2,[sp,#0x50]
000318  9805              LDR      r0,[sp,#0x14]
00031a  f7fffffe          BL       _CalcInterSectLin
00031e  9006              STR      r0,[sp,#0x18]
000320  f7fffffe          BL       __aeabi_f2iz
000324  9009              STR      r0,[sp,#0x24]
000326  e001              B        |L1.812|
                  |L1.808|
;;;127    			} else {
;;;128            xMaxDisp = xMax;			
000328  9807              LDR      r0,[sp,#0x1c]
00032a  9009              STR      r0,[sp,#0x24]
                  |L1.812|
;;;129    			}
;;;130          if ((float)y > afy[2]) {
00032c  4628              MOV      r0,r5
00032e  f7fffffe          BL       __aeabi_i2f
000332  9006              STR      r0,[sp,#0x18]
000334  9916              LDR      r1,[sp,#0x58]
000336  f7fffffe          BL       __aeabi_cfrcmple
00033a  d210              BCS      |L1.862|
;;;131            xMinDisp = _CalcInterSectLin(y,afy[2], afy[3], afx[2], afx[3]);
00033c  4628              MOV      r0,r5
00033e  f7fffffe          BL       __aeabi_i2f
000342  9005              STR      r0,[sp,#0x14]
000344  981b              LDR      r0,[sp,#0x6c]
000346  9000              STR      r0,[sp,#0]
000348  9b1a              LDR      r3,[sp,#0x68]
00034a  e9dd1216          LDRD     r1,r2,[sp,#0x58]
00034e  9805              LDR      r0,[sp,#0x14]
000350  f7fffffe          BL       _CalcInterSectLin
000354  9006              STR      r0,[sp,#0x18]
000356  f7fffffe          BL       __aeabi_f2iz
00035a  4683              MOV      r11,r0
00035c  e001              B        |L1.866|
                  |L1.862|
;;;132    			} else {
;;;133            xMinDisp = xMin;			
00035e  f8ddb020          LDR      r11,[sp,#0x20]
                  |L1.866|
;;;134    			}
;;;135          if (xMul>0)
000362  982c              LDR      r0,[sp,#0xb0]
000364  2800              CMP      r0,#0
000366  dd0f              BLE      |L1.904|
;;;136            LCD_HL_DrawHLine(xMinDisp+x0, yMul*y+y0, xMaxDisp+x0);
000368  f8ddc024          LDR      r12,[sp,#0x24]
00036c  eb0c0206          ADD      r2,r12,r6
000370  fb074105          MLA      r1,r7,r5,r4
000374  eb0b0006          ADD      r0,r11,r6
000378  f8dfc0f0          LDR      r12,|L1.1132|
00037c  f8dcc058          LDR      r12,[r12,#0x58]  ; GUI_Context
000380  f8dc3000          LDR      r3,[r12,#0]
000384  4798              BLX      r3
000386  e012              B        |L1.942|
                  |L1.904|
;;;137          else
;;;138            LCD_HL_DrawHLine(-xMaxDisp+x0, yMul*y+y0, -xMinDisp+x0);
000388  f1cb0c00          RSB      r12,r11,#0
00038c  eb0c0206          ADD      r2,r12,r6
000390  fb074105          MLA      r1,r7,r5,r4
000394  f8ddc024          LDR      r12,[sp,#0x24]
000398  f1cc0c00          RSB      r12,r12,#0
00039c  eb0c0006          ADD      r0,r12,r6
0003a0  f8dfc0c8          LDR      r12,|L1.1132|
0003a4  f8dcc058          LDR      r12,[r12,#0x58]  ; GUI_Context
0003a8  f8dc3000          LDR      r3,[r12,#0]
0003ac  4798              BLX      r3
                  |L1.942|
0003ae  1e6d              SUBS     r5,r5,#1              ;122
                  |L1.944|
0003b0  454d              CMP      r5,r9                 ;122
0003b2  da96              BGE      |L1.738|
;;;139        }
;;;140    	}
;;;141    #if 0  /* Test code */
;;;142    {
;;;143      int i;
;;;144      GUI_SetColor( GUI_WHITE ); 
;;;145    	for (i=0; i<4; i++)
;;;146        LCD_HL_DrawPixel(afx[i]+x0, afy[i]+y0);
;;;147    }
;;;148    #endif
;;;149      GUI_USE_PARA(ry);
0003b4  9820              LDR      r0,[sp,#0x80]
0003b6  9020              STR      r0,[sp,#0x80]
;;;150    }
0003b8  b021              ADD      sp,sp,#0x84
0003ba  e8bd8ff0          POP      {r4-r11,pc}
;;;151    
                          ENDP

                  GL_DrawArc PROC
;;;161    */
;;;162    void GL_DrawArc(int x0, int y0, int rx, int ry, int a0, int a1) {
0003be  e92d47ff          PUSH     {r0-r10,lr}
0003c2  4607              MOV      r7,r0
0003c4  4688              MOV      r8,r1
0003c6  4691              MOV      r9,r2
0003c8  469a              MOV      r10,r3
0003ca  e9dd450c          LDRD     r4,r5,[sp,#0x30]
;;;163      int aEnd;
;;;164      a0+=360;
0003ce  f50474b4          ADD      r4,r4,#0x168
;;;165    	a1+=360;
0003d2  f50575b4          ADD      r5,r5,#0x168
;;;166    	while (a0>=360) {
0003d6  e003              B        |L1.992|
                  |L1.984|
;;;167        a0 -= 360;
0003d8  f5a474b4          SUB      r4,r4,#0x168
;;;168        a1 -= 360;
0003dc  f5a575b4          SUB      r5,r5,#0x168
                  |L1.992|
0003e0  f5b47fb4          CMP      r4,#0x168             ;166
0003e4  daf8              BGE      |L1.984|
;;;169    	}
;;;170    /* Do first quadrant 0-90 degree */
;;;171    DoFirst:
0003e6  bf00              NOP      
                  |L1.1000|
;;;172      if (a1<=0)
0003e8  2d00              CMP      r5,#0
0003ea  dc01              BGT      |L1.1008|
                  |L1.1004|
;;;173    	  return;
;;;174    	if (a0<90) {
;;;175        if (a0<0)
;;;176    		  a0=0;
;;;177        aEnd = (a1<90) ? a1 : 90;
;;;178        _DrawArc(x0,y0,rx,ry,a0,aEnd, 1, -1);
;;;179    	}
;;;180      a1-=90;
;;;181    	a0-=90;
;;;182    /* Do second quadrant 90-180 degree */
;;;183      if (a1<=0)
;;;184    	  return;
;;;185    	if (a0<90) {
;;;186        if (a0<0)
;;;187    		  a0=0;
;;;188        aEnd = (a1<90) ? a1 : 90;
;;;189        _DrawArc(x0,y0,rx,ry,90-aEnd, 90-a0,-1,-1);
;;;190    	}
;;;191      a1-=90;
;;;192    	a0-=90;
;;;193    /* Do third quadrant 180-270 degree */
;;;194      if (a1<=0)
;;;195    	  return;
;;;196    	if (a0<90) {
;;;197        if (a0<0)
;;;198    		  a0=0;
;;;199        aEnd = (a1<90) ? a1 : 90;
;;;200        _DrawArc(x0,y0,rx,ry,a0,aEnd, -1, 1);
;;;201    	}
;;;202      a1-=90;
;;;203    	a0-=90;
;;;204    /* Do last quadrant 270-360 degree */
;;;205      if (a1<=0)
;;;206    	  return;
;;;207    	if (a0<90) {
;;;208        if (a0<0)
;;;209    		  a0=0;
;;;210        aEnd = (a1<90) ? a1 : 90;
;;;211        _DrawArc(x0,y0,rx,ry,90-aEnd, 90-a0,1,1);
;;;212    	}
;;;213      a1-=90;
;;;214    	a0-=90;
;;;215    goto DoFirst;
;;;216    }
0003ec  e8bd87ff          POP      {r0-r10,pc}
                  |L1.1008|
0003f0  2c5a              CMP      r4,#0x5a              ;174
0003f2  da15              BGE      |L1.1056|
0003f4  2c00              CMP      r4,#0                 ;175
0003f6  da00              BGE      |L1.1018|
0003f8  2400              MOVS     r4,#0                 ;176
                  |L1.1018|
0003fa  2d5a              CMP      r5,#0x5a              ;177
0003fc  da01              BGE      |L1.1026|
0003fe  4628              MOV      r0,r5                 ;177
000400  e000              B        |L1.1028|
                  |L1.1026|
000402  205a              MOVS     r0,#0x5a              ;177
                  |L1.1028|
000404  4606              MOV      r6,r0                 ;177
000406  f04f30ff          MOV      r0,#0xffffffff        ;178
00040a  2101              MOVS     r1,#1                 ;178
00040c  4653              MOV      r3,r10                ;178
00040e  464a              MOV      r2,r9                 ;178
000410  e9cd4600          STRD     r4,r6,[sp,#0]         ;178
000414  e9cd1002          STRD     r1,r0,[sp,#8]         ;178
000418  4641              MOV      r1,r8                 ;178
00041a  4638              MOV      r0,r7                 ;178
00041c  f7fffffe          BL       _DrawArc
                  |L1.1056|
000420  3d5a              SUBS     r5,r5,#0x5a           ;180
000422  3c5a              SUBS     r4,r4,#0x5a           ;181
000424  2d00              CMP      r5,#0                 ;183
000426  dc00              BGT      |L1.1066|
000428  e7e0              B        |L1.1004|
                  |L1.1066|
00042a  2c5a              CMP      r4,#0x5a              ;185
00042c  da18              BGE      |L1.1120|
00042e  2c00              CMP      r4,#0                 ;186
000430  da00              BGE      |L1.1076|
000432  2400              MOVS     r4,#0                 ;187
                  |L1.1076|
000434  2d5a              CMP      r5,#0x5a              ;188
000436  da01              BGE      |L1.1084|
000438  4628              MOV      r0,r5                 ;188
00043a  e000              B        |L1.1086|
                  |L1.1084|
00043c  205a              MOVS     r0,#0x5a              ;188
                  |L1.1086|
00043e  4606              MOV      r6,r0                 ;188
000440  f04f32ff          MOV      r2,#0xffffffff        ;189
000444  f1c4005a          RSB      r0,r4,#0x5a           ;189
000448  f1c6015a          RSB      r1,r6,#0x5a           ;189
00044c  e9cd0201          STRD     r0,r2,[sp,#4]         ;189
000450  4653              MOV      r3,r10                ;189
000452  9203              STR      r2,[sp,#0xc]          ;189
000454  9100              STR      r1,[sp,#0]            ;189
000456  464a              MOV      r2,r9                 ;189
000458  4641              MOV      r1,r8                 ;189
00045a  4638              MOV      r0,r7                 ;189
00045c  f7fffffe          BL       _DrawArc
                  |L1.1120|
000460  3d5a              SUBS     r5,r5,#0x5a           ;191
000462  3c5a              SUBS     r4,r4,#0x5a           ;192
000464  2d00              CMP      r5,#0                 ;194
000466  dc0b              BGT      |L1.1152|
000468  e7c0              B        |L1.1004|
00046a  0000              DCW      0x0000
                  |L1.1132|
                          DCD      GUI_Context
                  |L1.1136|
                          DCD      0x3ff80000
                  |L1.1140|
                          DCD      0x4d12d84a
                  |L1.1144|
                          DCD      0x400921fb
                  |L1.1148|
                          DCD      0x40668000
                  |L1.1152|
000480  2c5a              CMP      r4,#0x5a              ;196
000482  da14              BGE      |L1.1198|
000484  2c00              CMP      r4,#0                 ;197
000486  da00              BGE      |L1.1162|
000488  2400              MOVS     r4,#0                 ;198
                  |L1.1162|
00048a  2d5a              CMP      r5,#0x5a              ;199
00048c  da01              BGE      |L1.1170|
00048e  4628              MOV      r0,r5                 ;199
000490  e000              B        |L1.1172|
                  |L1.1170|
000492  205a              MOVS     r0,#0x5a              ;199
                  |L1.1172|
000494  4606              MOV      r6,r0                 ;199
000496  2001              MOVS     r0,#1                 ;200
000498  1e81              SUBS     r1,r0,#2              ;200
00049a  4653              MOV      r3,r10                ;200
00049c  464a              MOV      r2,r9                 ;200
00049e  e9cd4600          STRD     r4,r6,[sp,#0]         ;200
0004a2  e9cd1002          STRD     r1,r0,[sp,#8]         ;200
0004a6  4641              MOV      r1,r8                 ;200
0004a8  4638              MOV      r0,r7                 ;200
0004aa  f7fffffe          BL       _DrawArc
                  |L1.1198|
0004ae  3d5a              SUBS     r5,r5,#0x5a           ;202
0004b0  3c5a              SUBS     r4,r4,#0x5a           ;203
0004b2  2d00              CMP      r5,#0                 ;205
0004b4  dc00              BGT      |L1.1208|
0004b6  e799              B        |L1.1004|
                  |L1.1208|
0004b8  2c5a              CMP      r4,#0x5a              ;207
0004ba  da17              BGE      |L1.1260|
0004bc  2c00              CMP      r4,#0                 ;208
0004be  da00              BGE      |L1.1218|
0004c0  2400              MOVS     r4,#0                 ;209
                  |L1.1218|
0004c2  2d5a              CMP      r5,#0x5a              ;210
0004c4  da01              BGE      |L1.1226|
0004c6  4628              MOV      r0,r5                 ;210
0004c8  e000              B        |L1.1228|
                  |L1.1226|
0004ca  205a              MOVS     r0,#0x5a              ;210
                  |L1.1228|
0004cc  4606              MOV      r6,r0                 ;210
0004ce  2201              MOVS     r2,#1                 ;211
0004d0  f1c4005a          RSB      r0,r4,#0x5a           ;211
0004d4  f1c6015a          RSB      r1,r6,#0x5a           ;211
0004d8  e9cd0201          STRD     r0,r2,[sp,#4]         ;211
0004dc  4653              MOV      r3,r10                ;211
0004de  9203              STR      r2,[sp,#0xc]          ;211
0004e0  9100              STR      r1,[sp,#0]            ;211
0004e2  464a              MOV      r2,r9                 ;211
0004e4  4641              MOV      r1,r8                 ;211
0004e6  4638              MOV      r0,r7                 ;211
0004e8  f7fffffe          BL       _DrawArc
                  |L1.1260|
0004ec  3d5a              SUBS     r5,r5,#0x5a           ;213
0004ee  3c5a              SUBS     r4,r4,#0x5a           ;214
0004f0  e77a              B        |L1.1000|
;;;217    
                          ENDP

                  GUI_DrawArc PROC
;;;221    */
;;;222    void GUI_DrawArc(int x0, int y0, int rx, int ry, int a0, int a1) {
0004f2  e92d47fc          PUSH     {r2-r10,lr}
0004f6  4604              MOV      r4,r0
0004f8  460d              MOV      r5,r1
0004fa  4616              MOV      r6,r2
0004fc  461f              MOV      r7,r3
0004fe  e9dd890a          LDRD     r8,r9,[sp,#0x28]
;;;223      GUI_LOCK();
;;;224      #if (GUI_WINSUPPORT)
;;;225        WM_ADDORG(x0,y0);
000502  480c              LDR      r0,|L1.1332|
000504  6c00              LDR      r0,[r0,#0x40]  ; GUI_Context
000506  4404              ADD      r4,r4,r0
000508  480a              LDR      r0,|L1.1332|
00050a  6c40              LDR      r0,[r0,#0x44]  ; GUI_Context
00050c  4405              ADD      r5,r5,r0
;;;226        WM_ITERATE_START(NULL) {
00050e  2000              MOVS     r0,#0
000510  f7fffffe          BL       WM__InitIVRSearch
000514  b160              CBZ      r0,|L1.1328|
000516  bf00              NOP      
                  |L1.1304|
;;;227      #endif
;;;228      GL_DrawArc( x0, y0, rx, ry, a0, a1);
000518  463b              MOV      r3,r7
00051a  4632              MOV      r2,r6
00051c  4629              MOV      r1,r5
00051e  4620              MOV      r0,r4
000520  e9cd8900          STRD     r8,r9,[sp,#0]
000524  f7fffffe          BL       GL_DrawArc
;;;229      #if (GUI_WINSUPPORT)
;;;230        } WM_ITERATE_END();
000528  f7fffffe          BL       WM__GetNextIVR
00052c  2800              CMP      r0,#0
00052e  d1f3              BNE      |L1.1304|
                  |L1.1328|
;;;231      #endif
;;;232      GUI_UNLOCK();
;;;233    }
000530  e8bd87fc          POP      {r2-r10,pc}
;;;234    
                          ENDP

                  |L1.1332|
                          DCD      GUI_Context

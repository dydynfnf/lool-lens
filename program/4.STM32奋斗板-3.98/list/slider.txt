; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\slider.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\slider.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -IC:\Users\Administrator\Desktop\gui\STM32·Ü¶·°å-3.98\RTE -Id:\Keil_v5\ARM\PACK\ARM\CMSIS\4.3.0\CMSIS\Include -Id:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.1.0\Device\Include -D__UVISION_VERSION=515 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\slider.crf GUI\Widget\SLIDER.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _Paint PROC
;;;74     */
;;;75     static void _Paint(SLIDER_Obj* pObj, WM_HWIN hObj) {
000000  e92d4ff0          PUSH     {r4-r11,lr}
000004  b089              SUB      sp,sp,#0x24
000006  4604              MOV      r4,r0
000008  468a              MOV      r10,r1
;;;76       GUI_RECT r, rFocus, rSlider, rSlot;
;;;77       int x0, xsize, i, Range, NumTicks;
;;;78       WIDGET__GetClientRect(&pObj->Widget, &rFocus);
00000a  a905              ADD      r1,sp,#0x14
00000c  4620              MOV      r0,r4
00000e  f7fffffe          BL       WIDGET__GetClientRect
;;;79       GUI__ReduceRect(&r, &rFocus, 1);
000012  2201              MOVS     r2,#1
000014  a905              ADD      r1,sp,#0x14
000016  a807              ADD      r0,sp,#0x1c
000018  f7fffffe          BL       GUI__ReduceRect
;;;80       NumTicks = pObj->NumTicks;
00001c  6c65              LDR      r5,[r4,#0x44]
;;;81       xsize    = r.x1 - r.x0  + 1 - pObj->Width;
00001e  f9bd0020          LDRSH    r0,[sp,#0x20]
000022  f9bd101c          LDRSH    r1,[sp,#0x1c]
000026  1a40              SUBS     r0,r0,r1
000028  1c40              ADDS     r0,r0,#1
00002a  f9b41048          LDRSH    r1,[r4,#0x48]
00002e  1a47              SUBS     r7,r0,r1
;;;82       x0       = r.x0 + pObj->Width / 2;
000030  f9b40048          LDRSH    r0,[r4,#0x48]
000034  eb0071d0          ADD      r1,r0,r0,LSR #31
000038  f9bd201c          LDRSH    r2,[sp,#0x1c]
00003c  eb020661          ADD      r6,r2,r1,ASR #1
;;;83       Range    = pObj->Max - pObj->Min;
000040  e9d4100d          LDRD     r1,r0,[r4,#0x34]
000044  eba00901          SUB      r9,r0,r1
;;;84       if (Range == 0) {
000048  f1b90f00          CMP      r9,#0
00004c  d101              BNE      |L1.82|
;;;85         Range = 1;
00004e  f04f0901          MOV      r9,#1
                  |L1.82|
;;;86       }
;;;87       /* Fill with parents background color */
;;;88       #if !SLIDER_SUPPORT_TRANSPARENCY   /* Not needed any more, since window is transparent*/
;;;89         if (pObj->Props.BkColor == GUI_INVALID_COLOR) {
;;;90           LCD_SetBkColor(WIDGET__GetBkColor(hObj));
;;;91         } else {
;;;92           LCD_SetBkColor(pObj->Props.BkColor);
;;;93         }
;;;94         GUI_Clear();
;;;95       #else
;;;96         if (!WM_GetHasTrans(hObj)) {
000052  4650              MOV      r0,r10
000054  f7fffffe          BL       WM_GetHasTrans
000058  b920              CBNZ     r0,|L1.100|
;;;97           LCD_SetBkColor(pObj->Props.BkColor);
00005a  6aa0              LDR      r0,[r4,#0x28]
00005c  f7fffffe          BL       LCD_SetBkColor
;;;98           GUI_Clear();
000060  f7fffffe          BL       GUI_Clear
                  |L1.100|
;;;99         }
;;;100      #endif
;;;101      /* Calculate Slider position */
;;;102      rSlider    = r;
000064  e9dd0107          LDRD     r0,r1,[sp,#0x1c]
000068  e9cd0103          STRD     r0,r1,[sp,#0xc]
;;;103      rSlider.y0 = 5;
00006c  2005              MOVS     r0,#5
00006e  f8ad000e          STRH     r0,[sp,#0xe]
;;;104      rSlider.x0 = x0 + (U32)xsize * (U32)(pObj->v - pObj->Min) / Range - pObj->Width / 2;
000072  6b62              LDR      r2,[r4,#0x34]
000074  6be1              LDR      r1,[r4,#0x3c]
000076  1a89              SUBS     r1,r1,r2
000078  4379              MULS     r1,r7,r1
00007a  fbb1f1f9          UDIV     r1,r1,r9
00007e  4431              ADD      r1,r1,r6
000080  f9b40048          LDRSH    r0,[r4,#0x48]
000084  eb0072d0          ADD      r2,r0,r0,LSR #31
000088  eba10162          SUB      r1,r1,r2,ASR #1
00008c  b209              SXTH     r1,r1
00008e  f8ad100c          STRH     r1,[sp,#0xc]
;;;105      rSlider.x1 = rSlider.x0 + pObj->Width;
000092  f8bd000c          LDRH     r0,[sp,#0xc]
000096  f8b41048          LDRH     r1,[r4,#0x48]
00009a  4408              ADD      r0,r0,r1
00009c  b200              SXTH     r0,r0
00009e  f8ad0010          STRH     r0,[sp,#0x10]
;;;106      /* Calculate Slot position */
;;;107      rSlot.x0 = x0;
0000a2  b230              SXTH     r0,r6
0000a4  f8ad0004          STRH     r0,[sp,#4]
;;;108      rSlot.x1 = x0 + xsize;
0000a8  19f0              ADDS     r0,r6,r7
0000aa  b200              SXTH     r0,r0
0000ac  f8ad0008          STRH     r0,[sp,#8]
;;;109      rSlot.y0 = (rSlider.y0 + rSlider.y1) / 2 - 1;
0000b0  f9bd100e          LDRSH    r1,[sp,#0xe]
0000b4  f9bd2012          LDRSH    r2,[sp,#0x12]
0000b8  1888              ADDS     r0,r1,r2
0000ba  eb0071d0          ADD      r1,r0,r0,LSR #31
0000be  1049              ASRS     r1,r1,#1
0000c0  1e49              SUBS     r1,r1,#1
0000c2  b209              SXTH     r1,r1
0000c4  f8ad1006          STRH     r1,[sp,#6]
;;;110      rSlot.y1 = rSlot.y0 + 3;
0000c8  f8bd0006          LDRH     r0,[sp,#6]
0000cc  1cc0              ADDS     r0,r0,#3
0000ce  b200              SXTH     r0,r0
0000d0  f8ad000a          STRH     r0,[sp,#0xa]
;;;111      WIDGET__EFFECT_DrawDownRect(&pObj->Widget, &rSlot);        /* Draw slot */
0000d4  a901              ADD      r1,sp,#4
0000d6  4620              MOV      r0,r4
0000d8  f7fffffe          BL       WIDGET__EFFECT_DrawDownRect
;;;112      /* Draw the ticks */
;;;113      if (NumTicks < 0) {
0000dc  2d00              CMP      r5,#0
0000de  da07              BGE      |L1.240|
;;;114        NumTicks = Range + 1;
0000e0  f1090501          ADD      r5,r9,#1
;;;115        if (NumTicks > (xsize / 5)) {
0000e4  2005              MOVS     r0,#5
0000e6  fb97f0f0          SDIV     r0,r7,r0
0000ea  42a8              CMP      r0,r5
0000ec  da00              BGE      |L1.240|
;;;116          NumTicks = 11;
0000ee  250b              MOVS     r5,#0xb
                  |L1.240|
;;;117        }
;;;118      }
;;;119      if (NumTicks > 1) {
0000f0  2d01              CMP      r5,#1
0000f2  dd16              BLE      |L1.290|
;;;120        LCD_SetColor(GUI_BLACK);
0000f4  2000              MOVS     r0,#0
0000f6  f7fffffe          BL       LCD_SetColor
;;;121        for (i = 0; i < NumTicks; i++) {
0000fa  f04f0800          MOV      r8,#0
0000fe  e00e              B        |L1.286|
                  |L1.256|
;;;122          int x = x0 + xsize * i / (NumTicks - 1);
000100  fb07f008          MUL      r0,r7,r8
000104  1e69              SUBS     r1,r5,#1
000106  fb90f0f1          SDIV     r0,r0,r1
00010a  eb000b06          ADD      r11,r0,r6
;;;123          WIDGET__DrawVLine(&pObj->Widget, x, 1, 3);
00010e  2303              MOVS     r3,#3
000110  2201              MOVS     r2,#1
000112  4659              MOV      r1,r11
000114  4620              MOV      r0,r4
000116  f7fffffe          BL       WIDGET__DrawVLine
00011a  f1080801          ADD      r8,r8,#1              ;121
                  |L1.286|
00011e  45a8              CMP      r8,r5                 ;121
000120  dbee              BLT      |L1.256|
                  |L1.290|
;;;124        }
;;;125      }
;;;126      /* Draw the slider itself */
;;;127      LCD_SetColor(pObj->Props.Color);
000122  6ae0              LDR      r0,[r4,#0x2c]
000124  f7fffffe          BL       LCD_SetColor
;;;128      WIDGET__FillRectEx(&pObj->Widget, &rSlider);
000128  a903              ADD      r1,sp,#0xc
00012a  4620              MOV      r0,r4
00012c  f7fffffe          BL       WIDGET__FillRectEx
;;;129      LCD_SetColor(GUI_BLACK);
000130  2000              MOVS     r0,#0
000132  f7fffffe          BL       LCD_SetColor
;;;130      WIDGET__EFFECT_DrawUpRect(&pObj->Widget, &rSlider);
000136  a903              ADD      r1,sp,#0xc
000138  4620              MOV      r0,r4
00013a  f7fffffe          BL       WIDGET__EFFECT_DrawUpRect
;;;131      /* Draw focus */
;;;132      if (pObj->Widget.State & WIDGET_STATE_FOCUS) {
00013e  f8940026          LDRB     r0,[r4,#0x26]
000142  f0000001          AND      r0,r0,#1
000146  b138              CBZ      r0,|L1.344|
;;;133        LCD_SetColor(pObj->Props.FocusColor);
000148  6b20              LDR      r0,[r4,#0x30]
00014a  f7fffffe          BL       LCD_SetColor
;;;134        WIDGET__DrawFocusRect(&pObj->Widget, &rFocus, 0);
00014e  2200              MOVS     r2,#0
000150  a905              ADD      r1,sp,#0x14
000152  4620              MOV      r0,r4
000154  f7fffffe          BL       WIDGET__DrawFocusRect
                  |L1.344|
;;;135      }
;;;136    }
000158  b009              ADD      sp,sp,#0x24
00015a  e8bd8ff0          POP      {r4-r11,pc}
;;;137    
                          ENDP

                  _SliderPressed PROC
;;;141    */
;;;142    static void _SliderPressed(SLIDER_Handle hObj, SLIDER_Obj* pObj) {
00015e  b570              PUSH     {r4-r6,lr}
000160  4605              MOV      r5,r0
000162  460c              MOV      r4,r1
;;;143      WIDGET_OrState(hObj, SLIDER_STATE_PRESSED);
000164  f44f7180          MOV      r1,#0x100
000168  4628              MOV      r0,r5
00016a  f7fffffe          BL       WIDGET_OrState
;;;144      if (pObj->Widget.Win.Status & WM_SF_ISVIS) {
00016e  7f20              LDRB     r0,[r4,#0x1c]
000170  f0000002          AND      r0,r0,#2
000174  b118              CBZ      r0,|L1.382|
;;;145        WM_NotifyParent(hObj, WM_NOTIFICATION_CLICKED);
000176  2101              MOVS     r1,#1
000178  4628              MOV      r0,r5
00017a  f7fffffe          BL       WM_NotifyParent
                  |L1.382|
;;;146      }
;;;147    }
00017e  bd70              POP      {r4-r6,pc}
;;;148    
                          ENDP

                  _SliderReleased PROC
;;;152    */
;;;153    static void _SliderReleased(SLIDER_Handle hObj, SLIDER_Obj* pObj) {
000180  b570              PUSH     {r4-r6,lr}
000182  4605              MOV      r5,r0
000184  460c              MOV      r4,r1
;;;154      WIDGET_AndState(hObj, SLIDER_STATE_PRESSED);
000186  f44f7180          MOV      r1,#0x100
00018a  4628              MOV      r0,r5
00018c  f7fffffe          BL       WIDGET_AndState
;;;155      if (pObj->Widget.Win.Status & WM_SF_ISVIS) {
000190  7f20              LDRB     r0,[r4,#0x1c]
000192  f0000002          AND      r0,r0,#2
000196  b118              CBZ      r0,|L1.416|
;;;156        WM_NotifyParent(hObj, WM_NOTIFICATION_RELEASED);
000198  2102              MOVS     r1,#2
00019a  4628              MOV      r0,r5
00019c  f7fffffe          BL       WM_NotifyParent
                  |L1.416|
;;;157      }
;;;158    }
0001a0  bd70              POP      {r4-r6,pc}
;;;159    
                          ENDP

                  SLIDER_SetValue PROC
;;;391    */
;;;392    void SLIDER_SetValue(SLIDER_Handle hObj, int v) {
0001a2  b570              PUSH     {r4-r6,lr}
0001a4  4606              MOV      r6,r0
0001a6  460d              MOV      r5,r1
;;;393      SLIDER_Obj* pObj;
;;;394      if (hObj) {
0001a8  b1b6              CBZ      r6,|L1.472|
;;;395        WM_LOCK();
;;;396        pObj = SLIDER_H2P(hObj);
0001aa  4630              MOV      r0,r6
0001ac  f7fffffe          BL       GUI_ALLOC_h2p
0001b0  4604              MOV      r4,r0
;;;397        /* Put in min/max range */
;;;398        if (v < pObj->Min) {
0001b2  6b60              LDR      r0,[r4,#0x34]
0001b4  42a8              CMP      r0,r5
0001b6  dd00              BLE      |L1.442|
;;;399          v = pObj->Min;
0001b8  6b65              LDR      r5,[r4,#0x34]
                  |L1.442|
;;;400        }
;;;401        if (v > pObj->Max) {
0001ba  6ba0              LDR      r0,[r4,#0x38]
0001bc  42a8              CMP      r0,r5
0001be  da00              BGE      |L1.450|
;;;402          v = pObj->Max;
0001c0  6ba5              LDR      r5,[r4,#0x38]
                  |L1.450|
;;;403        }
;;;404        if (pObj->v != v) {
0001c2  6be0              LDR      r0,[r4,#0x3c]
0001c4  42a8              CMP      r0,r5
0001c6  d007              BEQ      |L1.472|
;;;405          pObj->v = v;
0001c8  63e5              STR      r5,[r4,#0x3c]
;;;406          WM_InvalidateWindow(hObj);
0001ca  4630              MOV      r0,r6
0001cc  f7fffffe          BL       WM_InvalidateWindow
;;;407          WM_NotifyParent(hObj, WM_NOTIFICATION_VALUE_CHANGED);
0001d0  2105              MOVS     r1,#5
0001d2  4630              MOV      r0,r6
0001d4  f7fffffe          BL       WM_NotifyParent
                  |L1.472|
;;;408        }
;;;409        WM_UNLOCK();
;;;410      }
;;;411    }
0001d8  bd70              POP      {r4-r6,pc}
;;;412    
                          ENDP

                  _OnTouch PROC
;;;163    */
;;;164    static void _OnTouch(SLIDER_Handle hObj, SLIDER_Obj* pObj, WM_MESSAGE*pMsg) {
0001da  e92d4ff7          PUSH     {r0-r2,r4-r11,lr}
0001de  460c              MOV      r4,r1
0001e0  4617              MOV      r7,r2
;;;165      const GUI_PID_STATE* pState = (const GUI_PID_STATE*)pMsg->Data.p;
0001e2  f8d78008          LDR      r8,[r7,#8]
;;;166      if (pMsg->Data.p) {  /* Something happened in our area (pressed or released) */
0001e6  68b8              LDR      r0,[r7,#8]
0001e8  2800              CMP      r0,#0
0001ea  d05b              BEQ      |L1.676|
;;;167        if (pState->Pressed) {
0001ec  f8980008          LDRB     r0,[r8,#8]
0001f0  2800              CMP      r0,#0
0001f2  d04f              BEQ      |L1.660|
;;;168          int x0, xsize, x, Sel, Range;
;;;169          Range = (pObj->Max - pObj->Min);
0001f4  e9d4100d          LDRD     r1,r0,[r4,#0x34]
0001f8  eba00b01          SUB      r11,r0,r1
;;;170          x0    = 1 + pObj->Width / 2;  /* 1 pixel focus rectangle + width of actual slider */
0001fc  f9b40048          LDRSH    r0,[r4,#0x48]
000200  eb0071d0          ADD      r1,r0,r0,LSR #31
000204  1049              ASRS     r1,r1,#1
000206  f1010a01          ADD      r10,r1,#1
;;;171          x     = (pObj->Widget.State & WIDGET_STATE_VERTICAL) ? pState->y : pState->x;
00020a  f8940026          LDRB     r0,[r4,#0x26]
00020e  f0000008          AND      r0,r0,#8
000212  b110              CBZ      r0,|L1.538|
000214  f8d80004          LDR      r0,[r8,#4]
000218  e001              B        |L1.542|
                  |L1.538|
00021a  f8d80000          LDR      r0,[r8,#0]
                  |L1.542|
00021e  4605              MOV      r5,r0
;;;172          x    -= x0;
000220  eba5050a          SUB      r5,r5,r10
;;;173          xsize = WIDGET__GetWindowSizeX(hObj) - 2 * x0;
000224  9800              LDR      r0,[sp,#0]
000226  f7fffffe          BL       WIDGET__GetWindowSizeX
00022a  2102              MOVS     r1,#2
00022c  fb01091a          MLS      r9,r1,r10,r0
;;;174          if (x <= 0) {
000230  2d00              CMP      r5,#0
000232  dc01              BGT      |L1.568|
;;;175            Sel = pObj->Min;
000234  6b66              LDR      r6,[r4,#0x34]
000236  e015              B        |L1.612|
                  |L1.568|
;;;176          } else if (x >= xsize) {
000238  454d              CMP      r5,r9
00023a  db01              BLT      |L1.576|
;;;177            Sel = pObj->Max;
00023c  6ba6              LDR      r6,[r4,#0x38]
00023e  e011              B        |L1.612|
                  |L1.576|
;;;178          } else {
;;;179            int Div;
;;;180            Div = xsize ? xsize : 1;     /* Make sure we do not divide by 0, even though xsize should never be 0 in this case anyhow */
000240  f1b90f00          CMP      r9,#0
000244  d001              BEQ      |L1.586|
000246  4649              MOV      r1,r9
000248  e000              B        |L1.588|
                  |L1.586|
00024a  2101              MOVS     r1,#1
                  |L1.588|
00024c  4608              MOV      r0,r1
;;;181            Sel = pObj->Min + ((U32)Range * (U32)x + Div / 2) / Div;
00024e  4601              MOV      r1,r0
000250  eb0072d1          ADD      r2,r0,r1,LSR #31
000254  1052              ASRS     r2,r2,#1
000256  fb0b2205          MLA      r2,r11,r5,r2
00025a  fbb2f2f0          UDIV     r2,r2,r0
00025e  6b63              LDR      r3,[r4,#0x34]
000260  18d6              ADDS     r6,r2,r3
;;;182          }
000262  bf00              NOP      
                  |L1.612|
;;;183          if (WM_IsFocussable(hObj)) {
000264  9800              LDR      r0,[sp,#0]
000266  f7fffffe          BL       WM_IsFocussable
00026a  b110              CBZ      r0,|L1.626|
;;;184            WM_SetFocus(hObj);
00026c  9800              LDR      r0,[sp,#0]
00026e  f7fffffe          BL       WM_SetFocus
                  |L1.626|
;;;185          }
;;;186          WM_SetCapture(hObj, 1);
000272  2101              MOVS     r1,#1
000274  9800              LDR      r0,[sp,#0]
000276  f7fffffe          BL       WM_SetCapture
;;;187          SLIDER_SetValue(hObj, Sel);
00027a  4631              MOV      r1,r6
00027c  9800              LDR      r0,[sp,#0]
00027e  f7fffffe          BL       SLIDER_SetValue
;;;188          if ((pObj->Widget.State & SLIDER_STATE_PRESSED) == 0){   
000282  8ce0              LDRH     r0,[r4,#0x26]
000284  f4007080          AND      r0,r0,#0x100
000288  b918              CBNZ     r0,|L1.658|
;;;189            _SliderPressed(hObj, pObj);
00028a  4621              MOV      r1,r4
00028c  9800              LDR      r0,[sp,#0]
00028e  f7fffffe          BL       _SliderPressed
                  |L1.658|
;;;190          }
;;;191        } else {
000292  e007              B        |L1.676|
                  |L1.660|
;;;192          /* React only if button was pressed before ... avoid problems with moving / hiding windows above (such as dropdown) */
;;;193          if (pObj->Widget.State & SLIDER_STATE_PRESSED) {   
000294  8ce0              LDRH     r0,[r4,#0x26]
000296  f4007080          AND      r0,r0,#0x100
00029a  b118              CBZ      r0,|L1.676|
;;;194            _SliderReleased(hObj, pObj);
00029c  4621              MOV      r1,r4
00029e  9800              LDR      r0,[sp,#0]
0002a0  f7fffffe          BL       _SliderReleased
                  |L1.676|
;;;195          }
;;;196        }
;;;197      }
;;;198    }
0002a4  e8bd8ffe          POP      {r1-r11,pc}
;;;199    
                          ENDP

                  SLIDER_Dec PROC
;;;338    */
;;;339    void SLIDER_Dec(SLIDER_Handle hObj) {
0002a8  b570              PUSH     {r4-r6,lr}
0002aa  4605              MOV      r5,r0
;;;340      SLIDER_Obj* pObj;
;;;341      if (hObj) {
0002ac  b18d              CBZ      r5,|L1.722|
;;;342        WM_LOCK();
;;;343        pObj = SLIDER_H2P(hObj);
0002ae  4628              MOV      r0,r5
0002b0  f7fffffe          BL       GUI_ALLOC_h2p
0002b4  4604              MOV      r4,r0
;;;344        if (pObj->v > pObj->Min) {
0002b6  6b61              LDR      r1,[r4,#0x34]
0002b8  6be0              LDR      r0,[r4,#0x3c]
0002ba  4288              CMP      r0,r1
0002bc  dd09              BLE      |L1.722|
;;;345          pObj->v--;
0002be  6be0              LDR      r0,[r4,#0x3c]
0002c0  1e40              SUBS     r0,r0,#1
0002c2  63e0              STR      r0,[r4,#0x3c]
;;;346          WM_InvalidateWindow(hObj);
0002c4  4628              MOV      r0,r5
0002c6  f7fffffe          BL       WM_InvalidateWindow
;;;347          WM_NotifyParent(hObj, WM_NOTIFICATION_VALUE_CHANGED);
0002ca  2105              MOVS     r1,#5
0002cc  4628              MOV      r0,r5
0002ce  f7fffffe          BL       WM_NotifyParent
                  |L1.722|
;;;348        }
;;;349        WM_UNLOCK();
;;;350      }
;;;351    }
0002d2  bd70              POP      {r4-r6,pc}
;;;352    
                          ENDP

                  SLIDER_Inc PROC
;;;356    */
;;;357    void SLIDER_Inc(SLIDER_Handle hObj) {
0002d4  b570              PUSH     {r4-r6,lr}
0002d6  4605              MOV      r5,r0
;;;358      SLIDER_Obj* pObj;
;;;359      if (hObj) {
0002d8  b18d              CBZ      r5,|L1.766|
;;;360        WM_LOCK();
;;;361        pObj = SLIDER_H2P(hObj);
0002da  4628              MOV      r0,r5
0002dc  f7fffffe          BL       GUI_ALLOC_h2p
0002e0  4604              MOV      r4,r0
;;;362        if (pObj->v < pObj->Max) {
0002e2  e9d4100e          LDRD     r1,r0,[r4,#0x38]
0002e6  4288              CMP      r0,r1
0002e8  da09              BGE      |L1.766|
;;;363          pObj->v++;
0002ea  6be0              LDR      r0,[r4,#0x3c]
0002ec  1c40              ADDS     r0,r0,#1
0002ee  63e0              STR      r0,[r4,#0x3c]
;;;364          WM_InvalidateWindow(hObj);
0002f0  4628              MOV      r0,r5
0002f2  f7fffffe          BL       WM_InvalidateWindow
;;;365          WM_NotifyParent(hObj, WM_NOTIFICATION_VALUE_CHANGED);
0002f6  2105              MOVS     r1,#5
0002f8  4628              MOV      r0,r5
0002fa  f7fffffe          BL       WM_NotifyParent
                  |L1.766|
;;;366        }
;;;367        WM_UNLOCK();
;;;368      }
;;;369    }
0002fe  bd70              POP      {r4-r6,pc}
;;;370    
                          ENDP

                  _OnKey PROC
;;;203    */
;;;204    static void  _OnKey(SLIDER_Handle hObj, WM_MESSAGE*pMsg) {
000300  e92d41f0          PUSH     {r4-r8,lr}
000304  4606              MOV      r6,r0
000306  460c              MOV      r4,r1
;;;205      const WM_KEY_INFO* pKeyInfo;
;;;206      int Key;
;;;207      pKeyInfo = (const WM_KEY_INFO*)(pMsg->Data.p);
000308  68a5              LDR      r5,[r4,#8]
;;;208      Key = pKeyInfo->Key;
00030a  682f              LDR      r7,[r5,#0]
;;;209      if (pKeyInfo->PressedCnt > 0) {
00030c  6868              LDR      r0,[r5,#4]
00030e  2800              CMP      r0,#0
000310  dd0e              BLE      |L1.816|
;;;210        switch (Key) {
000312  2f10              CMP      r7,#0x10
000314  d005              BEQ      |L1.802|
000316  2f12              CMP      r7,#0x12
000318  d107              BNE      |L1.810|
;;;211          case GUI_KEY_RIGHT:
;;;212            SLIDER_Inc(hObj);
00031a  4630              MOV      r0,r6
00031c  f7fffffe          BL       SLIDER_Inc
;;;213            break;                    /* Send to parent by not doing anything */
000320  e005              B        |L1.814|
                  |L1.802|
;;;214          case GUI_KEY_LEFT:
;;;215            SLIDER_Dec(hObj);
000322  4630              MOV      r0,r6
000324  f7fffffe          BL       SLIDER_Dec
;;;216            break;                    /* Send to parent by not doing anything */
000328  e001              B        |L1.814|
                  |L1.810|
;;;217          default:
;;;218            return;
;;;219        }
;;;220      }
;;;221    }
00032a  e8bd81f0          POP      {r4-r8,pc}
                  |L1.814|
00032e  bf00              NOP                            ;213
                  |L1.816|
000330  bf00              NOP      
000332  e7fa              B        |L1.810|
;;;222    
                          ENDP

                  SLIDER_Callback PROC
;;;255    */
;;;256    void SLIDER_Callback (WM_MESSAGE *pMsg) {
000334  b570              PUSH     {r4-r6,lr}
000336  4604              MOV      r4,r0
;;;257      SLIDER_Handle hObj;
;;;258      SLIDER_Obj* pObj;
;;;259      hObj = pMsg->hWin;
000338  f9b45004          LDRSH    r5,[r4,#4]
;;;260      pObj = (SLIDER_Obj *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
00033c  4628              MOV      r0,r5
00033e  f7fffffe          BL       GUI_ALLOC_h2p
000342  4606              MOV      r6,r0
;;;261      /* Let widget handle the standard messages */
;;;262      if (WIDGET_HandleActive(hObj, pMsg) == 0) {
000344  4621              MOV      r1,r4
000346  4628              MOV      r0,r5
000348  f7fffffe          BL       WIDGET_HandleActive
00034c  b900              CBNZ     r0,|L1.848|
                  |L1.846|
;;;263        return;
;;;264      }
;;;265      switch (pMsg->MsgId) {
;;;266      case WM_PAINT:
;;;267        GUI_DEBUG_LOG("SLIDER: _Callback(WM_PAINT)\n");
;;;268        _Paint(pObj, hObj);
;;;269        return;
;;;270      case WM_TOUCH:
;;;271        _OnTouch(hObj, pObj, pMsg);
;;;272        break;
;;;273      case WM_KEY:
;;;274        _OnKey(hObj, pMsg);
;;;275        break;
;;;276      }
;;;277      WM_DefaultProc(pMsg);
;;;278    }
00034e  bd70              POP      {r4-r6,pc}
                  |L1.848|
000350  6820              LDR      r0,[r4,#0]            ;265
000352  280c              CMP      r0,#0xc               ;265
000354  d008              BEQ      |L1.872|
000356  280e              CMP      r0,#0xe               ;265
000358  d00c              BEQ      |L1.884|
00035a  280f              CMP      r0,#0xf               ;265
00035c  d10f              BNE      |L1.894|
00035e  4629              MOV      r1,r5                 ;268
000360  4630              MOV      r0,r6                 ;268
000362  f7fffffe          BL       _Paint
000366  e7f2              B        |L1.846|
                  |L1.872|
000368  4622              MOV      r2,r4                 ;271
00036a  4631              MOV      r1,r6                 ;271
00036c  4628              MOV      r0,r5                 ;271
00036e  f7fffffe          BL       _OnTouch
000372  e004              B        |L1.894|
                  |L1.884|
000374  4621              MOV      r1,r4                 ;274
000376  4628              MOV      r0,r5                 ;274
000378  f7fffffe          BL       _OnKey
00037c  bf00              NOP                            ;275
                  |L1.894|
00037e  bf00              NOP                            ;272
000380  4620              MOV      r0,r4                 ;277
000382  f7fffffe          BL       WM_DefaultProc
000386  bf00              NOP      
000388  e7e1              B        |L1.846|
;;;279    
                          ENDP

                  SLIDER_CreateEx PROC
;;;293    */
;;;294    SLIDER_Handle SLIDER_CreateEx(int x0, int y0, int xsize, int ysize, WM_HWIN hParent,
00038a  e92d4fff          PUSH     {r0-r11,lr}
;;;295                                  int WinFlags, int ExFlags, int Id)
;;;296    {
00038e  b085              SUB      sp,sp,#0x14
000390  4680              MOV      r8,r0
000392  4689              MOV      r9,r1
000394  4692              MOV      r10,r2
000396  e9dd5b13          LDRD     r5,r11,[sp,#0x4c]
;;;297      SLIDER_Handle hObj;
;;;298      /* Create the window */
;;;299      WM_LOCK();
;;;300      #if SLIDER_SUPPORT_TRANSPARENCY
;;;301        WinFlags |= WM_CF_HASTRANS;
00039a  f0450501          ORR      r5,r5,#1
;;;302      #endif
;;;303      hObj = WM_CreateWindowAsChild(x0, y0, xsize, ysize, hParent, WinFlags, SLIDER_Callback, sizeof(SLIDER_Obj) - sizeof(WM_Obj));
00039e  222c              MOVS     r2,#0x2c
0003a0  f2af036f          ADR      r3,SLIDER_Callback + 1
0003a4  b2a8              UXTH     r0,r5
0003a6  9912              LDR      r1,[sp,#0x48]
0003a8  e9cd3202          STRD     r3,r2,[sp,#8]
0003ac  e9cd1000          STRD     r1,r0,[sp,#0]
0003b0  4652              MOV      r2,r10
0003b2  4649              MOV      r1,r9
0003b4  4640              MOV      r0,r8
0003b6  9b08              LDR      r3,[sp,#0x20]
0003b8  f7fffffe          BL       WM_CreateWindowAsChild
0003bc  4606              MOV      r6,r0
;;;304      if (hObj) {
0003be  b1ee              CBZ      r6,|L1.1020|
;;;305        SLIDER_Obj * pObj;
;;;306        U16 InitState;
;;;307        pObj = (SLIDER_Obj *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
0003c0  4630              MOV      r0,r6
0003c2  f7fffffe          BL       GUI_ALLOC_h2p
0003c6  4604              MOV      r4,r0
;;;308        /* Handle SpecialFlags */
;;;309        InitState = WIDGET_STATE_FOCUSSABLE;
0003c8  2710              MOVS     r7,#0x10
;;;310        if (ExFlags & SLIDER_CF_VERTICAL) {
0003ca  f00b0008          AND      r0,r11,#8
0003ce  b108              CBZ      r0,|L1.980|
;;;311          InitState |= WIDGET_CF_VERTICAL;
0003d0  f0470708          ORR      r7,r7,#8
                  |L1.980|
;;;312        }
;;;313        /* init widget specific variables */
;;;314        WIDGET__Init(&pObj->Widget, Id, InitState);
0003d4  463a              MOV      r2,r7
0003d6  4620              MOV      r0,r4
0003d8  9915              LDR      r1,[sp,#0x54]
0003da  f7fffffe          BL       WIDGET__Init
;;;315        /* init member variables */
;;;316        SLIDER_INIT_ID(pObj);
;;;317        pObj->Props = SLIDER__DefaultProps;
0003de  4a3c              LDR      r2,|L1.1232|
0003e0  ca07              LDM      r2,{r0-r2}
0003e2  e9c4120b          STRD     r1,r2,[r4,#0x2c]
0003e6  62a0              STR      r0,[r4,#0x28]
;;;318        pObj->Width       = 8;
0003e8  2008              MOVS     r0,#8
0003ea  f8a40048          STRH     r0,[r4,#0x48]
;;;319        pObj->Max         = 100;
0003ee  2064              MOVS     r0,#0x64
0003f0  63a0              STR      r0,[r4,#0x38]
;;;320        pObj->Min         = 0;
0003f2  2000              MOVS     r0,#0
0003f4  6360              STR      r0,[r4,#0x34]
;;;321        pObj->NumTicks    = -1;
0003f6  1e40              SUBS     r0,r0,#1
0003f8  6460              STR      r0,[r4,#0x44]
;;;322      } else {
0003fa  bf00              NOP      
                  |L1.1020|
;;;323        GUI_DEBUG_ERROROUT_IF(hObj==0, "SLIDER_Create failed")
;;;324      }
;;;325      WM_UNLOCK();
;;;326      return hObj;
0003fc  4630              MOV      r0,r6
;;;327    }
0003fe  b009              ADD      sp,sp,#0x24
000400  e8bd8ff0          POP      {r4-r11,pc}
;;;328    
                          ENDP

                  SLIDER_SetWidth PROC
;;;374    */
;;;375    void SLIDER_SetWidth(SLIDER_Handle hObj, int Width) {
000404  b570              PUSH     {r4-r6,lr}
000406  4606              MOV      r6,r0
000408  460d              MOV      r5,r1
;;;376      SLIDER_Obj* pObj;
;;;377      if (hObj) {
00040a  b16e              CBZ      r6,|L1.1064|
;;;378        WM_LOCK();
;;;379        pObj = SLIDER_H2P(hObj);
00040c  4630              MOV      r0,r6
00040e  f7fffffe          BL       GUI_ALLOC_h2p
000412  4604              MOV      r4,r0
;;;380        if (pObj->Width != Width) {
000414  f9b40048          LDRSH    r0,[r4,#0x48]
000418  42a8              CMP      r0,r5
00041a  d005              BEQ      |L1.1064|
;;;381          pObj->Width = Width;
00041c  b228              SXTH     r0,r5
00041e  f8a40048          STRH     r0,[r4,#0x48]
;;;382          WM_InvalidateWindow(hObj);
000422  4630              MOV      r0,r6
000424  f7fffffe          BL       WM_InvalidateWindow
                  |L1.1064|
;;;383        }
;;;384        WM_UNLOCK();
;;;385      }
;;;386    }
000428  bd70              POP      {r4-r6,pc}
;;;387    
                          ENDP

                  SLIDER_SetRange PROC
;;;416    */
;;;417    void SLIDER_SetRange(SLIDER_Handle hObj, int Min, int Max) {
00042a  e92d41f0          PUSH     {r4-r8,lr}
00042e  4607              MOV      r7,r0
000430  460c              MOV      r4,r1
000432  4616              MOV      r6,r2
;;;418      if (hObj) {
000434  b1a7              CBZ      r7,|L1.1120|
;;;419        SLIDER_Obj* pObj;
;;;420        WM_LOCK();
;;;421        pObj = SLIDER_H2P(hObj);
000436  4638              MOV      r0,r7
000438  f7fffffe          BL       GUI_ALLOC_h2p
00043c  4605              MOV      r5,r0
;;;422        if (Max < Min) {
00043e  42a6              CMP      r6,r4
000440  da00              BGE      |L1.1092|
;;;423          Max = Min;
000442  4626              MOV      r6,r4
                  |L1.1092|
;;;424        }
;;;425        pObj->Min = Min;
000444  636c              STR      r4,[r5,#0x34]
;;;426        pObj->Max = Max;
000446  63ae              STR      r6,[r5,#0x38]
;;;427        if (pObj->v < Min) {
000448  6be8              LDR      r0,[r5,#0x3c]
00044a  42a0              CMP      r0,r4
00044c  da00              BGE      |L1.1104|
;;;428          pObj->v = Min;
00044e  63ec              STR      r4,[r5,#0x3c]
                  |L1.1104|
;;;429        }
;;;430        if (pObj->v > Max) {
000450  6be8              LDR      r0,[r5,#0x3c]
000452  42b0              CMP      r0,r6
000454  dd00              BLE      |L1.1112|
;;;431          pObj->v = Max;
000456  63ee              STR      r6,[r5,#0x3c]
                  |L1.1112|
;;;432        }
;;;433        WM_InvalidateWindow(hObj);
000458  4638              MOV      r0,r7
00045a  f7fffffe          BL       WM_InvalidateWindow
;;;434        WM_UNLOCK();
;;;435      }
00045e  bf00              NOP      
                  |L1.1120|
;;;436    }
000460  e8bd81f0          POP      {r4-r8,pc}
;;;437    
                          ENDP

                  SLIDER_SetNumTicks PROC
;;;441    */
;;;442    void SLIDER_SetNumTicks(SLIDER_Handle hObj, int NumTicks) {
000464  b570              PUSH     {r4-r6,lr}
000466  4605              MOV      r5,r0
000468  460c              MOV      r4,r1
;;;443      if (hObj && (NumTicks >= 0)) {
00046a  b155              CBZ      r5,|L1.1154|
00046c  2c00              CMP      r4,#0
00046e  db08              BLT      |L1.1154|
;;;444        SLIDER_Obj* pObj;
;;;445        WM_LOCK();
;;;446        pObj = SLIDER_H2P(hObj);
000470  4628              MOV      r0,r5
000472  f7fffffe          BL       GUI_ALLOC_h2p
000476  4606              MOV      r6,r0
;;;447        pObj->NumTicks = NumTicks;
000478  6474              STR      r4,[r6,#0x44]
;;;448        WM_InvalidateWindow(hObj);
00047a  4628              MOV      r0,r5
00047c  f7fffffe          BL       WM_InvalidateWindow
;;;449        WM_UNLOCK();
;;;450      }
000480  bf00              NOP      
                  |L1.1154|
;;;451    }
000482  bd70              POP      {r4-r6,pc}
;;;452    
                          ENDP

                  SLIDER_SetBkColor PROC
;;;456    */
;;;457    void SLIDER_SetBkColor(SLIDER_Handle hObj, GUI_COLOR Color) {
000484  b570              PUSH     {r4-r6,lr}
000486  4605              MOV      r5,r0
000488  460c              MOV      r4,r1
;;;458      if (hObj) {
00048a  b195              CBZ      r5,|L1.1202|
;;;459        SLIDER_Obj * pObj;
;;;460        WM_LOCK();
;;;461        pObj = SLIDER_H2P(hObj);
00048c  4628              MOV      r0,r5
00048e  f7fffffe          BL       GUI_ALLOC_h2p
000492  4606              MOV      r6,r0
;;;462        pObj->Props.BkColor = Color;
000494  62b4              STR      r4,[r6,#0x28]
;;;463        #if SLIDER_SUPPORT_TRANSPARENCY
;;;464          if (Color <= 0xFFFFFF) {
000496  f1b47f80          CMP      r4,#0x1000000
00049a  d203              BCS      |L1.1188|
;;;465            WM_ClrHasTrans(hObj);
00049c  4628              MOV      r0,r5
00049e  f7fffffe          BL       WM_ClrHasTrans
0004a2  e002              B        |L1.1194|
                  |L1.1188|
;;;466          } else {
;;;467            WM_SetHasTrans(hObj);
0004a4  4628              MOV      r0,r5
0004a6  f7fffffe          BL       WM_SetHasTrans
                  |L1.1194|
;;;468          }
;;;469        #endif
;;;470        WM_InvalidateWindow(hObj);
0004aa  4628              MOV      r0,r5
0004ac  f7fffffe          BL       WM_InvalidateWindow
;;;471        WM_UNLOCK();
;;;472      }
0004b0  bf00              NOP      
                  |L1.1202|
;;;473    }
0004b2  bd70              POP      {r4-r6,pc}
;;;474    
                          ENDP

                  SLIDER_SetDefaultBkColor PROC
;;;478    */
;;;479    void SLIDER_SetDefaultBkColor(GUI_COLOR Color) {
0004b4  4906              LDR      r1,|L1.1232|
;;;480      SLIDER__DefaultProps.BkColor = Color;
0004b6  6008              STR      r0,[r1,#0]  ; SLIDER__DefaultProps
;;;481    }
0004b8  4770              BX       lr
;;;482    
                          ENDP

                  SLIDER_GetValue PROC
;;;492    */
;;;493    int SLIDER_GetValue(SLIDER_Handle hObj) {
0004ba  b570              PUSH     {r4-r6,lr}
0004bc  4605              MOV      r5,r0
;;;494      int r = 0;
0004be  2600              MOVS     r6,#0
;;;495      SLIDER_Obj* pObj;
;;;496      if (hObj) {
0004c0  b125              CBZ      r5,|L1.1228|
;;;497        WM_LOCK();
;;;498        pObj = SLIDER_H2P(hObj);
0004c2  4628              MOV      r0,r5
0004c4  f7fffffe          BL       GUI_ALLOC_h2p
0004c8  4604              MOV      r4,r0
;;;499        r = pObj->v;
0004ca  6be6              LDR      r6,[r4,#0x3c]
                  |L1.1228|
;;;500        WM_UNLOCK();
;;;501      }
;;;502      return r;
0004cc  4630              MOV      r0,r6
;;;503    }
0004ce  bd70              POP      {r4-r6,pc}
;;;504    
                          ENDP

                  |L1.1232|
                          DCD      SLIDER__DefaultProps

                          AREA ||.data||, DATA, ALIGN=2

                  SLIDER__DefaultProps
                          DCD      0x00c0c0c0
                          DCD      0x00c0c0c0
                          DCD      0x00000000

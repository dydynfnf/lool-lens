; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\gui__memset16.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\gui__memset16.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -IC:\Users\Administrator\Desktop\gui\STM32·Ü¶·°å-3.98\RTE -Id:\Keil_v5\ARM\PACK\ARM\CMSIS\4.3.0\CMSIS\Include -Id:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.1.0\Device\Include -D__UVISION_VERSION=515 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\gui__memset16.crf GUI\Core\GUI__memset16.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  GUI__memset16 PROC
;;;35     */
;;;36     void GUI__memset16(U16 * p, U16 Fill, int NumWords) {
000000  b570              PUSH     {r4-r6,lr}
000002  4603              MOV      r3,r0
000004  460c              MOV      r4,r1
000006  4615              MOV      r5,r2
;;;37       /* Code for 16 bit CPUs */
;;;38       if (sizeof(int) == 2) { /* May some compilers generate a warning at this line: Condition is alwaws true/false */
;;;39         if (NumWords >= 8) {  /* May some compilers generate a warning at this line: Unreachable code */
;;;40           *p++ = Fill;
;;;41           *p++ = Fill;
;;;42           *p++ = Fill;
;;;43           *p++ = Fill;
;;;44           *p++ = Fill;
;;;45           *p++ = Fill;
;;;46           *p++ = Fill;
;;;47           *p++ = Fill;
;;;48           NumWords -= 8;
;;;49         }
;;;50         while (NumWords) {
;;;51           *p++ = Fill;
;;;52           NumWords--;
;;;53         }
;;;54       } else {
;;;55         int NumInts;          /* May some compilers generate a warning at this line: Unreachable code */
;;;56         /* Write 16 bit until we are done or have reached an int boundary */
;;;57         if (2 & (U32)p) {
000008  f0030002          AND      r0,r3,#2
00000c  b110              CBZ      r0,|L1.20|
;;;58           *p++ = Fill;
00000e  f8234b02          STRH     r4,[r3],#2
;;;59           NumWords--;
000012  1e6d              SUBS     r5,r5,#1
                  |L1.20|
;;;60         }
;;;61         /* Write Ints */
;;;62         NumInts = (unsigned)NumWords / (sizeof(int) / 2);
000014  0869              LSRS     r1,r5,#1
;;;63         if (NumInts) {
000016  b1a9              CBZ      r1,|L1.68|
;;;64           int FillInt;
;;;65           int *pInt;
;;;66           FillInt = Fill * 0x10001;
000018  eb044204          ADD      r2,r4,r4,LSL #16
;;;67     
;;;68           pInt = (int*)p;
00001c  4618              MOV      r0,r3
;;;69           /* Fill large amount of data at a time */
;;;70           if (NumInts >= 4) {
00001e  2904              CMP      r1,#4
000020  db09              BLT      |L1.54|
;;;71             do {
000022  bf00              NOP      
                  |L1.36|
;;;72               *pInt       = FillInt;
000024  6002              STR      r2,[r0,#0]
;;;73               *(pInt + 1) = FillInt;
000026  6042              STR      r2,[r0,#4]
;;;74               *(pInt + 2) = FillInt;
000028  6082              STR      r2,[r0,#8]
;;;75               *(pInt + 3) = FillInt;
00002a  60c2              STR      r2,[r0,#0xc]
;;;76               pInt += 4;
00002c  3010              ADDS     r0,r0,#0x10
;;;77             } while ((NumInts -= 4) >= 4);
00002e  1f0e              SUBS     r6,r1,#4
000030  4631              MOV      r1,r6
000032  2e04              CMP      r6,#4
000034  daf6              BGE      |L1.36|
                  |L1.54|
;;;78           }
;;;79           /* Fill one int at a time */
;;;80           while (NumInts) {
000036  e001              B        |L1.60|
                  |L1.56|
;;;81             *pInt++ = FillInt;
000038  c004              STM      r0!,{r2}
;;;82             NumInts--;
00003a  1e49              SUBS     r1,r1,#1
                  |L1.60|
00003c  2900              CMP      r1,#0                 ;80
00003e  d1fb              BNE      |L1.56|
;;;83           }
;;;84           p = (U16*)pInt;
000040  4603              MOV      r3,r0
;;;85         }
000042  bf00              NOP      
                  |L1.68|
;;;86         /* Fill the remainder */
;;;87         if (NumWords & 1) {
000044  f0050001          AND      r0,r5,#1
000048  b100              CBZ      r0,|L1.76|
;;;88           *p = Fill;
00004a  801c              STRH     r4,[r3,#0]
                  |L1.76|
;;;89         }
;;;90       }
;;;91     }
00004c  bd70              POP      {r4-r6,pc}
;;;92     
                          ENDP


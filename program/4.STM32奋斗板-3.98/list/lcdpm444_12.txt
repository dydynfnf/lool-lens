; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\lcdpm444_12.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\lcdpm444_12.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -IC:\Users\Administrator\Desktop\gui\STM32·Ü¶·°å-3.98\RTE -Id:\Keil_v5\ARM\PACK\ARM\CMSIS\4.3.0\CMSIS\Include -Id:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.1.0\Device\Include -D__UVISION_VERSION=515 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\lcdpm444_12.crf GUI\ConvertColor\LCDPM444_12.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  LCD_Color2Index_M444_12 PROC
;;;33     */
;;;34     unsigned LCD_Color2Index_M444_12(LCD_COLOR Color) {
000000  b530              PUSH     {r4,r5,lr}
000002  4601              MOV      r1,r0
;;;35       unsigned int r,g,b;
;;;36       r = Color         & 255;
000004  b2ca              UXTB     r2,r1
;;;37       g = (Color >> 8)  & 255;
000006  f3c12307          UBFX     r3,r1,#8,#8
;;;38       b = (Color >> 16) & 255;
00000a  f3c14407          UBFX     r4,r1,#16,#8
;;;39       r = (r + 8) / 17;
00000e  f1020008          ADD      r0,r2,#8
000012  2511              MOVS     r5,#0x11
000014  fbb0f2f5          UDIV     r2,r0,r5
;;;40       g = (g + 8) / 17;
000018  f1030008          ADD      r0,r3,#8
00001c  fbb0f3f5          UDIV     r3,r0,r5
;;;41       b = (b + 8) / 17;
000020  f1040008          ADD      r0,r4,#8
000024  fbb0f4f5          UDIV     r4,r0,r5
;;;42       return b + (g << 4) + (r << 8);
000028  eb041003          ADD      r0,r4,r3,LSL #4
00002c  eb002002          ADD      r0,r0,r2,LSL #8
;;;43     }
000030  bd30              POP      {r4,r5,pc}
;;;44     
                          ENDP

                  LCD_Index2Color_M444_12 PROC
;;;48     */
;;;49     LCD_COLOR LCD_Index2Color_M444_12(int Index) {
000032  b510              PUSH     {r4,lr}
000034  4601              MOV      r1,r0
;;;50       unsigned int r,g,b;
;;;51       /* Seperate the color masks */
;;;52       b = Index & 0xf;
000036  f001030f          AND      r3,r1,#0xf
;;;53       g = (Index >> 4) & 0xf;
00003a  f3c11203          UBFX     r2,r1,#4,#4
;;;54       r = ((unsigned)Index >> 8) & 0xf;
00003e  f3c12403          UBFX     r4,r1,#8,#4
;;;55       /* Convert the color masks */
;;;56       r = r * 17;
000042  eb041404          ADD      r4,r4,r4,LSL #4
;;;57       g = g * 17;
000046  eb021202          ADD      r2,r2,r2,LSL #4
;;;58       b = b * 17;
00004a  eb031303          ADD      r3,r3,r3,LSL #4
;;;59       return r + (g<<8) + (((U32)b)<<16);
00004e  eb042002          ADD      r0,r4,r2,LSL #8
000052  eb004003          ADD      r0,r0,r3,LSL #16
;;;60     }
000056  bd10              POP      {r4,pc}
;;;61     
                          ENDP

                  LCD_GetIndexMask_M444_12 PROC
;;;65     */
;;;66     unsigned LCD_GetIndexMask_M444_12(void) {
000058  f64070ff          MOV      r0,#0xfff
;;;67       return 0x0fff;
;;;68     }
00005c  4770              BX       lr
;;;69     
                          ENDP


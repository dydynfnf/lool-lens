; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\lcdpm565_index2color.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\lcdpm565_index2color.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -IC:\Users\Administrator\Desktop\gui\STM32·Ü¶·°å-3.98\RTE -Id:\Keil_v5\ARM\PACK\ARM\CMSIS\4.3.0\CMSIS\Include -Id:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.1.0\Device\Include -D__UVISION_VERSION=515 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\lcdpm565_index2color.crf GUI\Core\LCDPM565_Index2Color.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  LCD_Index2Color_M565 PROC
;;;48     */
;;;49     LCD_COLOR LCD_Index2Color_M565(int Index) {
000000  b530              PUSH     {r4,r5,lr}
000002  4601              MOV      r1,r0
;;;50       unsigned int r,g,b;
;;;51       /* Seperate the color masks */
;;;52       b = Index                                  & B_MASK;
000004  f001031f          AND      r3,r1,#0x1f
;;;53       g = (Index >> B_BITS)                      & G_MASK;
000008  f3c11245          UBFX     r2,r1,#5,#6
;;;54       r = ((unsigned)Index >> (B_BITS + G_BITS)) & R_MASK;
00000c  f3c124c4          UBFX     r4,r1,#11,#5
;;;55       /* Convert the color masks */
;;;56       r = r * 255 / R_MASK;
000010  ebc42004          RSB      r0,r4,r4,LSL #8
000014  251f              MOVS     r5,#0x1f
000016  fbb0f4f5          UDIV     r4,r0,r5
;;;57       g = g * 255 / G_MASK;
00001a  ebc22002          RSB      r0,r2,r2,LSL #8
00001e  253f              MOVS     r5,#0x3f
000020  fbb0f2f5          UDIV     r2,r0,r5
;;;58       b = b * 255 / B_MASK;
000024  ebc32003          RSB      r0,r3,r3,LSL #8
000028  251f              MOVS     r5,#0x1f
00002a  fbb0f3f5          UDIV     r3,r0,r5
;;;59       return r + (g<<8) + (((U32)b)<<16);
00002e  eb042002          ADD      r0,r4,r2,LSL #8
000032  eb004003          ADD      r0,r0,r3,LSL #16
;;;60     }
000036  bd30              POP      {r4,r5,pc}
;;;61     
                          ENDP


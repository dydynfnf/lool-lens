; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\gui_log.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\gui_log.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -IC:\Users\Administrator\Desktop\gui\STM32·Ü¶·°å-3.98\RTE -Id:\Keil_v5\ARM\PACK\ARM\CMSIS\4.3.0\CMSIS\Include -Id:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.1.0\Device\Include -D__UVISION_VERSION=515 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\gui_log.crf GUI\Core\GUI_Log.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  _CopyString PROC
;;;43     */
;;;44     static void _CopyString(char* d, const char* s, int MaxLen) {
000000  e004              B        |L1.12|
                  |L1.2|
;;;45       while ((MaxLen > 0) && *s) {
;;;46         *d++ = *s++;
000002  f8113b01          LDRB     r3,[r1],#1
000006  f8003b01          STRB     r3,[r0],#1
;;;47         MaxLen--;
00000a  1e52              SUBS     r2,r2,#1
                  |L1.12|
00000c  2a00              CMP      r2,#0                 ;45
00000e  dd02              BLE      |L1.22|
000010  780b              LDRB     r3,[r1,#0]            ;45
000012  2b00              CMP      r3,#0                 ;45
000014  d1f5              BNE      |L1.2|
                  |L1.22|
;;;48       }
;;;49       *d = 0;
000016  2300              MOVS     r3,#0
000018  7003              STRB     r3,[r0,#0]
;;;50     }
00001a  4770              BX       lr
;;;51     
                          ENDP

                  GUI_Log PROC
;;;63     */
;;;64     void GUI_Log(const char *s) {
00001c  b510              PUSH     {r4,lr}
00001e  4604              MOV      r4,r0
;;;65       GUI_X_Log(s);
000020  4620              MOV      r0,r4
000022  f7fffffe          BL       GUI_X_Log
;;;66     }
000026  bd10              POP      {r4,pc}
;;;67     
                          ENDP

                  GUI_Log1 PROC
;;;71     */
;;;72     void GUI_Log1(const char *s, int p0) {
000028  b530              PUSH     {r4,r5,lr}
00002a  b091              SUB      sp,sp,#0x44
00002c  4604              MOV      r4,r0
00002e  460d              MOV      r5,r1
;;;73       char ac[MAXLEN + 10];
;;;74       char* sOut = ac;
000030  a802              ADD      r0,sp,#8
000032  9001              STR      r0,[sp,#4]
;;;75       _CopyString(ac, s, MAXLEN);
000034  2232              MOVS     r2,#0x32
000036  4621              MOV      r1,r4
000038  f7fffffe          BL       _CopyString
;;;76       sOut += strlen(sOut);
00003c  9801              LDR      r0,[sp,#4]
00003e  f7fffffe          BL       strlen
000042  9901              LDR      r1,[sp,#4]
000044  4408              ADD      r0,r0,r1
000046  9001              STR      r0,[sp,#4]
;;;77       GUI__AddSpaceHex(p0, 8, &sOut);
000048  aa01              ADD      r2,sp,#4
00004a  2108              MOVS     r1,#8
00004c  4628              MOV      r0,r5
00004e  f7fffffe          BL       GUI__AddSpaceHex
;;;78       GUI_Log(ac);
000052  a802              ADD      r0,sp,#8
000054  f7fffffe          BL       GUI_Log
;;;79     }
000058  b011              ADD      sp,sp,#0x44
00005a  bd30              POP      {r4,r5,pc}
;;;80     
                          ENDP

                  GUI_Log2 PROC
;;;84     */
;;;85     void GUI_Log2(const char *s, int p0, int p1) {
00005c  b570              PUSH     {r4-r6,lr}
00005e  b094              SUB      sp,sp,#0x50
000060  4604              MOV      r4,r0
000062  460d              MOV      r5,r1
000064  4616              MOV      r6,r2
;;;86       char ac[MAXLEN + 20];
;;;87       char* sOut = ac;
000066  a802              ADD      r0,sp,#8
000068  9001              STR      r0,[sp,#4]
;;;88       _CopyString(ac, s, MAXLEN);
00006a  2232              MOVS     r2,#0x32
00006c  4621              MOV      r1,r4
00006e  f7fffffe          BL       _CopyString
;;;89       sOut += strlen(sOut);
000072  9801              LDR      r0,[sp,#4]
000074  f7fffffe          BL       strlen
000078  9901              LDR      r1,[sp,#4]
00007a  4408              ADD      r0,r0,r1
00007c  9001              STR      r0,[sp,#4]
;;;90       GUI__AddSpaceHex(p0, 8, &sOut);
00007e  aa01              ADD      r2,sp,#4
000080  2108              MOVS     r1,#8
000082  4628              MOV      r0,r5
000084  f7fffffe          BL       GUI__AddSpaceHex
;;;91       GUI__AddSpaceHex(p1, 8, &sOut);
000088  aa01              ADD      r2,sp,#4
00008a  2108              MOVS     r1,#8
00008c  4630              MOV      r0,r6
00008e  f7fffffe          BL       GUI__AddSpaceHex
;;;92       GUI_Log(ac);
000092  a802              ADD      r0,sp,#8
000094  f7fffffe          BL       GUI_Log
;;;93     }
000098  b014              ADD      sp,sp,#0x50
00009a  bd70              POP      {r4-r6,pc}
;;;94     
                          ENDP

                  GUI_Log3 PROC
;;;98     */
;;;99     void GUI_Log3(const char *s, int p0, int p1, int p2) {
00009c  b5f0              PUSH     {r4-r7,lr}
00009e  b095              SUB      sp,sp,#0x54
0000a0  4604              MOV      r4,r0
0000a2  460d              MOV      r5,r1
0000a4  4616              MOV      r6,r2
0000a6  461f              MOV      r7,r3
;;;100      char ac[MAXLEN + 30];
;;;101      char* sOut = ac;
0000a8  a801              ADD      r0,sp,#4
0000aa  9000              STR      r0,[sp,#0]
;;;102      _CopyString(ac, s, MAXLEN);
0000ac  2232              MOVS     r2,#0x32
0000ae  4621              MOV      r1,r4
0000b0  f7fffffe          BL       _CopyString
;;;103      sOut += strlen(sOut);
0000b4  9800              LDR      r0,[sp,#0]
0000b6  f7fffffe          BL       strlen
0000ba  9900              LDR      r1,[sp,#0]
0000bc  4408              ADD      r0,r0,r1
0000be  9000              STR      r0,[sp,#0]
;;;104      GUI__AddSpaceHex(p0, 8, &sOut);
0000c0  466a              MOV      r2,sp
0000c2  2108              MOVS     r1,#8
0000c4  4628              MOV      r0,r5
0000c6  f7fffffe          BL       GUI__AddSpaceHex
;;;105      GUI__AddSpaceHex(p1, 8, &sOut);
0000ca  466a              MOV      r2,sp
0000cc  2108              MOVS     r1,#8
0000ce  4630              MOV      r0,r6
0000d0  f7fffffe          BL       GUI__AddSpaceHex
;;;106      GUI__AddSpaceHex(p2, 8, &sOut);
0000d4  466a              MOV      r2,sp
0000d6  2108              MOVS     r1,#8
0000d8  4638              MOV      r0,r7
0000da  f7fffffe          BL       GUI__AddSpaceHex
;;;107      GUI_Log(ac);
0000de  a801              ADD      r0,sp,#4
0000e0  f7fffffe          BL       GUI_Log
;;;108    }
0000e4  b015              ADD      sp,sp,#0x54
0000e6  bdf0              POP      {r4-r7,pc}
;;;109    
                          ENDP

                  GUI_Log4 PROC
;;;113    */
;;;114    void GUI_Log4(const char *s, int p0, int p1, int p2, int p3) {
0000e8  e92d41f0          PUSH     {r4-r8,lr}
0000ec  b098              SUB      sp,sp,#0x60
0000ee  4604              MOV      r4,r0
0000f0  460d              MOV      r5,r1
0000f2  4616              MOV      r6,r2
0000f4  461f              MOV      r7,r3
0000f6  f8dd8078          LDR      r8,[sp,#0x78]
;;;115      char ac[MAXLEN + 40];
;;;116      char* sOut = ac;
0000fa  a801              ADD      r0,sp,#4
0000fc  9000              STR      r0,[sp,#0]
;;;117      _CopyString(ac, s, MAXLEN);
0000fe  2232              MOVS     r2,#0x32
000100  4621              MOV      r1,r4
000102  f7fffffe          BL       _CopyString
;;;118      sOut += strlen(sOut);
000106  9800              LDR      r0,[sp,#0]
000108  f7fffffe          BL       strlen
00010c  9900              LDR      r1,[sp,#0]
00010e  4408              ADD      r0,r0,r1
000110  9000              STR      r0,[sp,#0]
;;;119      GUI__AddSpaceHex(p0, 8, &sOut);
000112  466a              MOV      r2,sp
000114  2108              MOVS     r1,#8
000116  4628              MOV      r0,r5
000118  f7fffffe          BL       GUI__AddSpaceHex
;;;120      GUI__AddSpaceHex(p1, 8, &sOut);
00011c  466a              MOV      r2,sp
00011e  2108              MOVS     r1,#8
000120  4630              MOV      r0,r6
000122  f7fffffe          BL       GUI__AddSpaceHex
;;;121      GUI__AddSpaceHex(p2, 8, &sOut);
000126  466a              MOV      r2,sp
000128  2108              MOVS     r1,#8
00012a  4638              MOV      r0,r7
00012c  f7fffffe          BL       GUI__AddSpaceHex
;;;122      GUI__AddSpaceHex(p3, 8, &sOut);
000130  466a              MOV      r2,sp
000132  2108              MOVS     r1,#8
000134  4640              MOV      r0,r8
000136  f7fffffe          BL       GUI__AddSpaceHex
;;;123      GUI_Log(ac);
00013a  a801              ADD      r0,sp,#4
00013c  f7fffffe          BL       GUI_Log
;;;124    }
000140  b018              ADD      sp,sp,#0x60
000142  e8bd81f0          POP      {r4-r8,pc}
;;;125    
                          ENDP


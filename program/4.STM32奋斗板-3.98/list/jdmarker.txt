; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\jdmarker.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\jdmarker.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -IC:\Users\Administrator\Desktop\gui\STM32·Ü¶·°å-3.98\RTE -Id:\Keil_v5\ARM\PACK\ARM\CMSIS\4.3.0\CMSIS\Include -Id:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.1.0\Device\Include -D__UVISION_VERSION=515 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\jdmarker.crf GUI\JPEG\jdmarker.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  get_soi PROC
;;;196    LOCAL(boolean)
;;;197    get_soi (j_decompress_ptr cinfo)
000000  b570              PUSH     {r4-r6,lr}
;;;198    /* Process an SOI marker */
;;;199    {
000002  4604              MOV      r4,r0
;;;200      int i;
;;;201      
;;;202      TRACEMS(cinfo, 1, JTRC_SOI);
000004  2066              MOVS     r0,#0x66
000006  6821              LDR      r1,[r4,#0]
000008  6148              STR      r0,[r1,#0x14]
00000a  6820              LDR      r0,[r4,#0]
00000c  2101              MOVS     r1,#1
00000e  6842              LDR      r2,[r0,#4]
000010  4620              MOV      r0,r4
000012  4790              BLX      r2
;;;203    
;;;204      if (cinfo->marker->saw_SOI)
000014  f8d401b8          LDR      r0,[r4,#0x1b8]
000018  68c0              LDR      r0,[r0,#0xc]
00001a  b130              CBZ      r0,|L1.42|
;;;205        ERREXIT(cinfo, JERR_SOI_DUPLICATE);
00001c  203d              MOVS     r0,#0x3d
00001e  6821              LDR      r1,[r4,#0]
000020  6148              STR      r0,[r1,#0x14]
000022  6820              LDR      r0,[r4,#0]
000024  6801              LDR      r1,[r0,#0]
000026  4620              MOV      r0,r4
000028  4788              BLX      r1
                  |L1.42|
;;;206    
;;;207      /* Reset all parameters that are defined to be reset by SOI */
;;;208    
;;;209      for (i = 0; i < NUM_ARITH_TBLS; i++) {
00002a  2500              MOVS     r5,#0
00002c  e00a              B        |L1.68|
                  |L1.46|
;;;210        cinfo->arith_dc_L[i] = 0;
00002e  2100              MOVS     r1,#0
000030  f10400e4          ADD      r0,r4,#0xe4
000034  5541              STRB     r1,[r0,r5]
;;;211        cinfo->arith_dc_U[i] = 1;
000036  2101              MOVS     r1,#1
000038  3010              ADDS     r0,r0,#0x10
00003a  5541              STRB     r1,[r0,r5]
;;;212        cinfo->arith_ac_K[i] = 5;
00003c  2105              MOVS     r1,#5
00003e  3010              ADDS     r0,r0,#0x10
000040  5541              STRB     r1,[r0,r5]
000042  1c6d              ADDS     r5,r5,#1              ;209
                  |L1.68|
000044  2d10              CMP      r5,#0x10              ;209
000046  dbf2              BLT      |L1.46|
;;;213      }
;;;214      cinfo->restart_interval = 0;
000048  2000              MOVS     r0,#0
00004a  f504748a          ADD      r4,r4,#0x114
00004e  6020              STR      r0,[r4,#0]
;;;215    
;;;216      /* Set initial assumptions for colorspace etc */
;;;217    
;;;218      cinfo->jpeg_color_space = JCS_UNKNOWN;
000050  f8040cec          STRB     r0,[r4,#-0xec]
;;;219      cinfo->CCIR601_sampling = FALSE; /* Assume non-CCIR sampling??? */
000054  61a0              STR      r0,[r4,#0x18]
;;;220    
;;;221      cinfo->saw_JFIF_marker = FALSE;
000056  6060              STR      r0,[r4,#4]
;;;222      cinfo->JFIF_major_version = 1; /* set default JFIF APP0 values */
000058  2001              MOVS     r0,#1
00005a  7220              STRB     r0,[r4,#8]
;;;223      cinfo->JFIF_minor_version = 1;
00005c  7260              STRB     r0,[r4,#9]
;;;224      cinfo->density_unit = 0;
00005e  2000              MOVS     r0,#0
000060  72a0              STRB     r0,[r4,#0xa]
;;;225      cinfo->X_density = 1;
000062  2001              MOVS     r0,#1
000064  81a0              STRH     r0,[r4,#0xc]
;;;226      cinfo->Y_density = 1;
000066  81e0              STRH     r0,[r4,#0xe]
;;;227      cinfo->saw_Adobe_marker = FALSE;
000068  2000              MOVS     r0,#0
00006a  6120              STR      r0,[r4,#0x10]
;;;228      cinfo->Adobe_transform = 0;
00006c  7520              STRB     r0,[r4,#0x14]
;;;229    
;;;230      cinfo->marker->saw_SOI = TRUE;
00006e  2001              MOVS     r0,#1
000070  f8d410a4          LDR      r1,[r4,#0xa4]
000074  f5a4748a          SUB      r4,r4,#0x114
000078  60c8              STR      r0,[r1,#0xc]
;;;231    
;;;232      return TRUE;
;;;233    }
00007a  bd70              POP      {r4-r6,pc}
;;;234    
                          ENDP

                  get_sof PROC
;;;236    LOCAL(boolean)
;;;237    get_sof (j_decompress_ptr cinfo, boolean is_prog, boolean is_arith)
00007c  e92d4ff7          PUSH     {r0-r2,r4-r11,lr}
;;;238    /* Process a SOFn marker */
;;;239    {
000080  b082              SUB      sp,sp,#8
000082  4604              MOV      r4,r0
;;;240      INT32 length;
;;;241      int c, ci;
;;;242      jpeg_component_info * compptr;
;;;243      INPUT_VARS(cinfo);
000084  69a5              LDR      r5,[r4,#0x18]
000086  682e              LDR      r6,[r5,#0]
000088  686f              LDR      r7,[r5,#4]
;;;244    
;;;245      cinfo->progressive_mode = is_prog;
00008a  9803              LDR      r0,[sp,#0xc]
00008c  f8c400dc          STR      r0,[r4,#0xdc]
;;;246      cinfo->arith_code = is_arith;
000090  9804              LDR      r0,[sp,#0x10]
000092  f8c400e0          STR      r0,[r4,#0xe0]
;;;247    
;;;248      INPUT_2BYTES(cinfo, length, return FALSE);
000096  bf00              NOP      
000098  b94f              CBNZ     r7,|L1.174|
00009a  4620              MOV      r0,r4
00009c  68e9              LDR      r1,[r5,#0xc]
00009e  4788              BLX      r1
0000a0  b918              CBNZ     r0,|L1.170|
0000a2  2000              MOVS     r0,#0
                  |L1.164|
;;;249    
;;;250      INPUT_BYTE(cinfo, cinfo->data_precision, return FALSE);
;;;251      INPUT_2BYTES(cinfo, cinfo->image_height, return FALSE);
;;;252      INPUT_2BYTES(cinfo, cinfo->image_width, return FALSE);
;;;253      INPUT_BYTE(cinfo, cinfo->num_components, return FALSE);
;;;254    
;;;255      length -= 8;
;;;256    
;;;257      TRACEMS4(cinfo, 1, JTRC_SOF, cinfo->unread_marker,
;;;258    	   (int) cinfo->image_width, (int) cinfo->image_height,
;;;259    	   cinfo->num_components);
;;;260    
;;;261      if (cinfo->marker->saw_SOF)
;;;262        ERREXIT(cinfo, JERR_SOF_DUPLICATE);
;;;263    
;;;264      /* We don't support files in which the image height is initially specified */
;;;265      /* as 0 and is later redefined by DNL.  As long as we have to check that,  */
;;;266      /* might as well have a general sanity check. */
;;;267      if (cinfo->image_height <= 0 || cinfo->image_width <= 0
;;;268          || cinfo->num_components <= 0)
;;;269        ERREXIT(cinfo, JERR_EMPTY_IMAGE);
;;;270    
;;;271      if (length != (cinfo->num_components * 3))
;;;272        ERREXIT(cinfo, JERR_BAD_LENGTH);
;;;273    
;;;274      if (cinfo->comp_info == NULL)	/* do only once, even if suspend */
;;;275        cinfo->comp_info = (jpeg_component_info *) (*cinfo->mem->alloc_small)
;;;276    			((j_common_ptr) cinfo, JPOOL_IMAGE,
;;;277    			 cinfo->num_components * SIZEOF(jpeg_component_info));
;;;278      
;;;279      for (ci = 0, compptr = cinfo->comp_info; ci < cinfo->num_components;
;;;280           ci++, compptr++) {
;;;281        compptr->component_index = ci;
;;;282        INPUT_BYTE(cinfo, compptr->component_id, return FALSE);
;;;283        INPUT_BYTE(cinfo, c, return FALSE);
;;;284        compptr->h_samp_factor = (c >> 4) & 15;
;;;285        compptr->v_samp_factor = (c     ) & 15;
;;;286        INPUT_BYTE(cinfo, compptr->quant_tbl_no, return FALSE);
;;;287    
;;;288        TRACEMS4(cinfo, 1, JTRC_SOF_COMPONENT,
;;;289    	     compptr->component_id, compptr->h_samp_factor,
;;;290    	     compptr->v_samp_factor, compptr->quant_tbl_no);
;;;291      }
;;;292    
;;;293      cinfo->marker->saw_SOF = TRUE;
;;;294    
;;;295      INPUT_SYNC(cinfo);
;;;296      return TRUE;
;;;297    }
0000a4  b005              ADD      sp,sp,#0x14
0000a6  e8bd8ff0          POP      {r4-r11,pc}
                  |L1.170|
0000aa  682e              LDR      r6,[r5,#0]            ;248
0000ac  686f              LDR      r7,[r5,#4]            ;248
                  |L1.174|
0000ae  1e7f              SUBS     r7,r7,#1              ;248
0000b0  f8161b01          LDRB     r1,[r6],#1            ;248
0000b4  ea4f2901          LSL      r9,r1,#8              ;248
0000b8  b93f              CBNZ     r7,|L1.202|
0000ba  4620              MOV      r0,r4                 ;248
0000bc  68e9              LDR      r1,[r5,#0xc]          ;248
0000be  4788              BLX      r1                    ;248
0000c0  b908              CBNZ     r0,|L1.198|
0000c2  2000              MOVS     r0,#0                 ;248
0000c4  e7ee              B        |L1.164|
                  |L1.198|
0000c6  682e              LDR      r6,[r5,#0]            ;248
0000c8  686f              LDR      r7,[r5,#4]            ;248
                  |L1.202|
0000ca  1e7f              SUBS     r7,r7,#1              ;248
0000cc  f8161b01          LDRB     r1,[r6],#1            ;248
0000d0  4489              ADD      r9,r9,r1              ;248
0000d2  bf00              NOP                            ;248
0000d4  bf00              NOP                            ;250
0000d6  b93f              CBNZ     r7,|L1.232|
0000d8  4620              MOV      r0,r4                 ;250
0000da  68e9              LDR      r1,[r5,#0xc]          ;250
0000dc  4788              BLX      r1                    ;250
0000de  b908              CBNZ     r0,|L1.228|
0000e0  2000              MOVS     r0,#0                 ;250
0000e2  e7df              B        |L1.164|
                  |L1.228|
0000e4  682e              LDR      r6,[r5,#0]            ;250
0000e6  686f              LDR      r7,[r5,#4]            ;250
                  |L1.232|
0000e8  1e7f              SUBS     r7,r7,#1              ;250
0000ea  f8160b01          LDRB     r0,[r6],#1            ;250
0000ee  f8c400d4          STR      r0,[r4,#0xd4]         ;250
0000f2  bf00              NOP                            ;250
0000f4  bf00              NOP                            ;251
0000f6  b93f              CBNZ     r7,|L1.264|
0000f8  4620              MOV      r0,r4                 ;251
0000fa  68e9              LDR      r1,[r5,#0xc]          ;251
0000fc  4788              BLX      r1                    ;251
0000fe  b908              CBNZ     r0,|L1.260|
000100  2000              MOVS     r0,#0                 ;251
000102  e7cf              B        |L1.164|
                  |L1.260|
000104  682e              LDR      r6,[r5,#0]            ;251
000106  686f              LDR      r7,[r5,#4]            ;251
                  |L1.264|
000108  1e7f              SUBS     r7,r7,#1              ;251
00010a  f8161b01          LDRB     r1,[r6],#1            ;251
00010e  0208              LSLS     r0,r1,#8              ;251
000110  6220              STR      r0,[r4,#0x20]         ;251
000112  b93f              CBNZ     r7,|L1.292|
000114  4620              MOV      r0,r4                 ;251
000116  68e9              LDR      r1,[r5,#0xc]          ;251
000118  4788              BLX      r1                    ;251
00011a  b908              CBNZ     r0,|L1.288|
00011c  2000              MOVS     r0,#0                 ;251
00011e  e7c1              B        |L1.164|
                  |L1.288|
000120  682e              LDR      r6,[r5,#0]            ;251
000122  686f              LDR      r7,[r5,#4]            ;251
                  |L1.292|
000124  1e7f              SUBS     r7,r7,#1              ;251
000126  f8161b01          LDRB     r1,[r6],#1            ;251
00012a  6a20              LDR      r0,[r4,#0x20]         ;251
00012c  4408              ADD      r0,r0,r1              ;251
00012e  6220              STR      r0,[r4,#0x20]         ;251
000130  bf00              NOP                            ;251
000132  bf00              NOP                            ;252
000134  b93f              CBNZ     r7,|L1.326|
000136  4620              MOV      r0,r4                 ;252
000138  68e9              LDR      r1,[r5,#0xc]          ;252
00013a  4788              BLX      r1                    ;252
00013c  b908              CBNZ     r0,|L1.322|
00013e  2000              MOVS     r0,#0                 ;252
000140  e7b0              B        |L1.164|
                  |L1.322|
000142  682e              LDR      r6,[r5,#0]            ;252
000144  686f              LDR      r7,[r5,#4]            ;252
                  |L1.326|
000146  1e7f              SUBS     r7,r7,#1              ;252
000148  f8161b01          LDRB     r1,[r6],#1            ;252
00014c  0208              LSLS     r0,r1,#8              ;252
00014e  61e0              STR      r0,[r4,#0x1c]         ;252
000150  b93f              CBNZ     r7,|L1.354|
000152  4620              MOV      r0,r4                 ;252
000154  68e9              LDR      r1,[r5,#0xc]          ;252
000156  4788              BLX      r1                    ;252
000158  b908              CBNZ     r0,|L1.350|
00015a  2000              MOVS     r0,#0                 ;252
00015c  e7a2              B        |L1.164|
                  |L1.350|
00015e  682e              LDR      r6,[r5,#0]            ;252
000160  686f              LDR      r7,[r5,#4]            ;252
                  |L1.354|
000162  1e7f              SUBS     r7,r7,#1              ;252
000164  f8161b01          LDRB     r1,[r6],#1            ;252
000168  69e0              LDR      r0,[r4,#0x1c]         ;252
00016a  4408              ADD      r0,r0,r1              ;252
00016c  61e0              STR      r0,[r4,#0x1c]         ;252
00016e  bf00              NOP                            ;252
000170  bf00              NOP                            ;253
000172  b93f              CBNZ     r7,|L1.388|
000174  4620              MOV      r0,r4                 ;253
000176  68e9              LDR      r1,[r5,#0xc]          ;253
000178  4788              BLX      r1                    ;253
00017a  b908              CBNZ     r0,|L1.384|
00017c  2000              MOVS     r0,#0                 ;253
00017e  e791              B        |L1.164|
                  |L1.384|
000180  682e              LDR      r6,[r5,#0]            ;253
000182  686f              LDR      r7,[r5,#4]            ;253
                  |L1.388|
000184  1e7f              SUBS     r7,r7,#1              ;253
000186  f8160b01          LDRB     r0,[r6],#1            ;253
00018a  6260              STR      r0,[r4,#0x24]         ;253
00018c  bf00              NOP                            ;253
00018e  f1a90908          SUB      r9,r9,#8              ;255
000192  bf00              NOP                            ;257
000194  6820              LDR      r0,[r4,#0]            ;257
000196  f1000b18          ADD      r11,r0,#0x18          ;257
00019a  f8d401a0          LDR      r0,[r4,#0x1a0]        ;257
00019e  f8cb0000          STR      r0,[r11,#0]           ;257
0001a2  69e0              LDR      r0,[r4,#0x1c]         ;257
0001a4  f8cb0004          STR      r0,[r11,#4]           ;257
0001a8  6a20              LDR      r0,[r4,#0x20]         ;257
0001aa  f8cb0008          STR      r0,[r11,#8]           ;257
0001ae  6a60              LDR      r0,[r4,#0x24]         ;257
0001b0  f8cb000c          STR      r0,[r11,#0xc]         ;257
0001b4  2064              MOVS     r0,#0x64              ;257
0001b6  6821              LDR      r1,[r4,#0]            ;257
0001b8  6148              STR      r0,[r1,#0x14]         ;257
0001ba  6820              LDR      r0,[r4,#0]            ;257
0001bc  2101              MOVS     r1,#1                 ;257
0001be  6842              LDR      r2,[r0,#4]            ;257
0001c0  4620              MOV      r0,r4                 ;257
0001c2  4790              BLX      r2                    ;257
0001c4  bf00              NOP                            ;257
0001c6  f8d401b8          LDR      r0,[r4,#0x1b8]        ;261
0001ca  6900              LDR      r0,[r0,#0x10]         ;261
0001cc  b130              CBZ      r0,|L1.476|
0001ce  203a              MOVS     r0,#0x3a              ;262
0001d0  6821              LDR      r1,[r4,#0]            ;262
0001d2  6148              STR      r0,[r1,#0x14]         ;262
0001d4  6820              LDR      r0,[r4,#0]            ;262
0001d6  6801              LDR      r1,[r0,#0]            ;262
0001d8  4620              MOV      r0,r4                 ;262
0001da  4788              BLX      r1                    ;262
                  |L1.476|
0001dc  6a20              LDR      r0,[r4,#0x20]         ;267
0001de  b120              CBZ      r0,|L1.490|
0001e0  69e0              LDR      r0,[r4,#0x1c]         ;267
0001e2  b110              CBZ      r0,|L1.490|
0001e4  6a60              LDR      r0,[r4,#0x24]         ;268
0001e6  2800              CMP      r0,#0                 ;268
0001e8  dc06              BGT      |L1.504|
                  |L1.490|
0001ea  2020              MOVS     r0,#0x20              ;269
0001ec  6821              LDR      r1,[r4,#0]            ;269
0001ee  6148              STR      r0,[r1,#0x14]         ;269
0001f0  6820              LDR      r0,[r4,#0]            ;269
0001f2  6801              LDR      r1,[r0,#0]            ;269
0001f4  4620              MOV      r0,r4                 ;269
0001f6  4788              BLX      r1                    ;269
                  |L1.504|
0001f8  6a60              LDR      r0,[r4,#0x24]         ;271
0001fa  eb000040          ADD      r0,r0,r0,LSL #1       ;271
0001fe  4548              CMP      r0,r9                 ;271
000200  d006              BEQ      |L1.528|
000202  200b              MOVS     r0,#0xb               ;272
000204  6821              LDR      r1,[r4,#0]            ;272
000206  6148              STR      r0,[r1,#0x14]         ;272
000208  6820              LDR      r0,[r4,#0]            ;272
00020a  6801              LDR      r1,[r0,#0]            ;272
00020c  4620              MOV      r0,r4                 ;272
00020e  4788              BLX      r1                    ;272
                  |L1.528|
000210  f8d400d8          LDR      r0,[r4,#0xd8]         ;274
000214  b950              CBNZ     r0,|L1.556|
000216  2154              MOVS     r1,#0x54              ;275
000218  6a60              LDR      r0,[r4,#0x24]         ;275
00021a  fb00f201          MUL      r2,r0,r1              ;275
00021e  6860              LDR      r0,[r4,#4]            ;275
000220  2101              MOVS     r1,#1                 ;275
000222  6803              LDR      r3,[r0,#0]            ;275
000224  4620              MOV      r0,r4                 ;275
000226  4798              BLX      r3                    ;275
000228  f8c400d8          STR      r0,[r4,#0xd8]         ;275
                  |L1.556|
00022c  f04f0a00          MOV      r10,#0                ;279
000230  f8d480d8          LDR      r8,[r4,#0xd8]         ;279
000234  e05b              B        |L1.750|
                  |L1.566|
000236  f8c8a004          STR      r10,[r8,#4]           ;281
00023a  bf00              NOP                            ;282
00023c  b93f              CBNZ     r7,|L1.590|
00023e  4620              MOV      r0,r4                 ;282
000240  68e9              LDR      r1,[r5,#0xc]          ;282
000242  4788              BLX      r1                    ;282
000244  b908              CBNZ     r0,|L1.586|
000246  2000              MOVS     r0,#0                 ;282
000248  e72c              B        |L1.164|
                  |L1.586|
00024a  682e              LDR      r6,[r5,#0]            ;282
00024c  686f              LDR      r7,[r5,#4]            ;282
                  |L1.590|
00024e  1e7f              SUBS     r7,r7,#1              ;282
000250  f8160b01          LDRB     r0,[r6],#1            ;282
000254  f8c80000          STR      r0,[r8,#0]            ;282
000258  bf00              NOP                            ;282
00025a  bf00              NOP                            ;283
00025c  b93f              CBNZ     r7,|L1.622|
00025e  4620              MOV      r0,r4                 ;283
000260  68e9              LDR      r1,[r5,#0xc]          ;283
000262  4788              BLX      r1                    ;283
000264  b908              CBNZ     r0,|L1.618|
000266  2000              MOVS     r0,#0                 ;283
000268  e71c              B        |L1.164|
                  |L1.618|
00026a  682e              LDR      r6,[r5,#0]            ;283
00026c  686f              LDR      r7,[r5,#4]            ;283
                  |L1.622|
00026e  1e7f              SUBS     r7,r7,#1              ;283
000270  f8160b01          LDRB     r0,[r6],#1            ;283
000274  9001              STR      r0,[sp,#4]            ;283
000276  bf00              NOP                            ;283
000278  9801              LDR      r0,[sp,#4]            ;284
00027a  f3c01003          UBFX     r0,r0,#4,#4           ;284
00027e  f8c80008          STR      r0,[r8,#8]            ;284
000282  9801              LDR      r0,[sp,#4]            ;285
000284  f000000f          AND      r0,r0,#0xf            ;285
000288  f8c8000c          STR      r0,[r8,#0xc]          ;285
00028c  bf00              NOP                            ;286
00028e  b93f              CBNZ     r7,|L1.672|
000290  4620              MOV      r0,r4                 ;286
000292  68e9              LDR      r1,[r5,#0xc]          ;286
000294  4788              BLX      r1                    ;286
000296  b908              CBNZ     r0,|L1.668|
000298  2000              MOVS     r0,#0                 ;286
00029a  e703              B        |L1.164|
                  |L1.668|
00029c  682e              LDR      r6,[r5,#0]            ;286
00029e  686f              LDR      r7,[r5,#4]            ;286
                  |L1.672|
0002a0  1e7f              SUBS     r7,r7,#1              ;286
0002a2  f8160b01          LDRB     r0,[r6],#1            ;286
0002a6  f8c80010          STR      r0,[r8,#0x10]         ;286
0002aa  bf00              NOP                            ;286
0002ac  bf00              NOP                            ;288
0002ae  6820              LDR      r0,[r4,#0]            ;288
0002b0  f1000b18          ADD      r11,r0,#0x18          ;288
0002b4  f8d80000          LDR      r0,[r8,#0]            ;288
0002b8  f8cb0000          STR      r0,[r11,#0]           ;288
0002bc  f8d80008          LDR      r0,[r8,#8]            ;288
0002c0  f8cb0004          STR      r0,[r11,#4]           ;288
0002c4  f8d8000c          LDR      r0,[r8,#0xc]          ;288
0002c8  f8cb0008          STR      r0,[r11,#8]           ;288
0002cc  f8d80010          LDR      r0,[r8,#0x10]         ;288
0002d0  f8cb000c          STR      r0,[r11,#0xc]         ;288
0002d4  2065              MOVS     r0,#0x65              ;288
0002d6  6821              LDR      r1,[r4,#0]            ;288
0002d8  6148              STR      r0,[r1,#0x14]         ;288
0002da  6820              LDR      r0,[r4,#0]            ;288
0002dc  2101              MOVS     r1,#1                 ;288
0002de  6842              LDR      r2,[r0,#4]            ;288
0002e0  4620              MOV      r0,r4                 ;288
0002e2  4790              BLX      r2                    ;288
0002e4  bf00              NOP                            ;288
0002e6  f10a0a01          ADD      r10,r10,#1            ;280
0002ea  f1080854          ADD      r8,r8,#0x54           ;280
                  |L1.750|
0002ee  6a60              LDR      r0,[r4,#0x24]         ;279
0002f0  4550              CMP      r0,r10                ;279
0002f2  dca0              BGT      |L1.566|
0002f4  2001              MOVS     r0,#1                 ;293
0002f6  f8d411b8          LDR      r1,[r4,#0x1b8]        ;293
0002fa  6108              STR      r0,[r1,#0x10]         ;293
0002fc  602e              STR      r6,[r5,#0]            ;295
0002fe  606f              STR      r7,[r5,#4]            ;295
000300  bf00              NOP                            ;296
000302  e6cf              B        |L1.164|
;;;298    
                          ENDP

                  get_sos PROC
;;;300    LOCAL(boolean)
;;;301    get_sos (j_decompress_ptr cinfo)
000304  e92d5fff          PUSH     {r0-r12,lr}
;;;302    /* Process a SOS marker */
;;;303    {
000308  4604              MOV      r4,r0
;;;304      INT32 length;
;;;305      int i, ci, n, c, cc;
;;;306      jpeg_component_info * compptr;
;;;307      INPUT_VARS(cinfo);
00030a  69a5              LDR      r5,[r4,#0x18]
00030c  682e              LDR      r6,[r5,#0]
00030e  686f              LDR      r7,[r5,#4]
;;;308    
;;;309      if (! cinfo->marker->saw_SOF)
000310  f8d401b8          LDR      r0,[r4,#0x1b8]
000314  6900              LDR      r0,[r0,#0x10]
000316  b930              CBNZ     r0,|L1.806|
;;;310        ERREXIT(cinfo, JERR_SOS_NO_SOF);
000318  203e              MOVS     r0,#0x3e
00031a  6821              LDR      r1,[r4,#0]
00031c  6148              STR      r0,[r1,#0x14]
00031e  6820              LDR      r0,[r4,#0]
000320  6801              LDR      r1,[r0,#0]
000322  4620              MOV      r0,r4
000324  4788              BLX      r1
                  |L1.806|
;;;311    
;;;312      INPUT_2BYTES(cinfo, length, return FALSE);
000326  bf00              NOP      
000328  b94f              CBNZ     r7,|L1.830|
00032a  4620              MOV      r0,r4
00032c  68e9              LDR      r1,[r5,#0xc]
00032e  4788              BLX      r1
000330  b918              CBNZ     r0,|L1.826|
000332  2000              MOVS     r0,#0
                  |L1.820|
;;;313    
;;;314      INPUT_BYTE(cinfo, n, return FALSE); /* Number of components */
;;;315    
;;;316      TRACEMS1(cinfo, 1, JTRC_SOS, n);
;;;317    
;;;318      if (length != (n * 2 + 6) || n < 1 || n > MAX_COMPS_IN_SCAN)
;;;319        ERREXIT(cinfo, JERR_BAD_LENGTH);
;;;320    
;;;321      cinfo->comps_in_scan = n;
;;;322    
;;;323      /* Collect the component-spec parameters */
;;;324    
;;;325      for (i = 0; i < n; i++) {
;;;326        INPUT_BYTE(cinfo, cc, return FALSE);
;;;327        INPUT_BYTE(cinfo, c, return FALSE);
;;;328        
;;;329        for (ci = 0, compptr = cinfo->comp_info; ci < cinfo->num_components;
;;;330    	 ci++, compptr++) {
;;;331          if (cc == compptr->component_id)
;;;332    	goto id_found;
;;;333        }
;;;334    
;;;335        ERREXIT1(cinfo, JERR_BAD_COMPONENT_ID, cc);
;;;336    
;;;337      id_found:
;;;338    
;;;339        cinfo->cur_comp_info[i] = compptr;
;;;340        compptr->dc_tbl_no = (c >> 4) & 15;
;;;341        compptr->ac_tbl_no = (c     ) & 15;
;;;342        
;;;343        TRACEMS3(cinfo, 1, JTRC_SOS_COMPONENT, cc,
;;;344    	     compptr->dc_tbl_no, compptr->ac_tbl_no);
;;;345      }
;;;346    
;;;347      /* Collect the additional scan parameters Ss, Se, Ah/Al. */
;;;348      INPUT_BYTE(cinfo, c, return FALSE);
;;;349      cinfo->Ss = c;
;;;350      INPUT_BYTE(cinfo, c, return FALSE);
;;;351      cinfo->Se = c;
;;;352      INPUT_BYTE(cinfo, c, return FALSE);
;;;353      cinfo->Ah = (c >> 4) & 15;
;;;354      cinfo->Al = (c     ) & 15;
;;;355    
;;;356      TRACEMS4(cinfo, 1, JTRC_SOS_PARAMS, cinfo->Ss, cinfo->Se,
;;;357    	   cinfo->Ah, cinfo->Al);
;;;358    
;;;359      /* Prepare to scan data & restart markers */
;;;360      cinfo->marker->next_restart_num = 0;
;;;361    
;;;362      /* Count another SOS marker */
;;;363      cinfo->input_scan_number++;
;;;364    
;;;365      INPUT_SYNC(cinfo);
;;;366      return TRUE;
;;;367    }
000334  b004              ADD      sp,sp,#0x10
000336  e8bd9ff0          POP      {r4-r12,pc}
                  |L1.826|
00033a  682e              LDR      r6,[r5,#0]            ;312
00033c  686f              LDR      r7,[r5,#4]            ;312
                  |L1.830|
00033e  1e7f              SUBS     r7,r7,#1              ;312
000340  f8161b01          LDRB     r1,[r6],#1            ;312
000344  0208              LSLS     r0,r1,#8              ;312
000346  9003              STR      r0,[sp,#0xc]          ;312
000348  b93f              CBNZ     r7,|L1.858|
00034a  4620              MOV      r0,r4                 ;312
00034c  68e9              LDR      r1,[r5,#0xc]          ;312
00034e  4788              BLX      r1                    ;312
000350  b908              CBNZ     r0,|L1.854|
000352  2000              MOVS     r0,#0                 ;312
000354  e7ee              B        |L1.820|
                  |L1.854|
000356  682e              LDR      r6,[r5,#0]            ;312
000358  686f              LDR      r7,[r5,#4]            ;312
                  |L1.858|
00035a  1e7f              SUBS     r7,r7,#1              ;312
00035c  f8161b01          LDRB     r1,[r6],#1            ;312
000360  9803              LDR      r0,[sp,#0xc]          ;312
000362  4408              ADD      r0,r0,r1              ;312
000364  9003              STR      r0,[sp,#0xc]          ;312
000366  bf00              NOP                            ;312
000368  bf00              NOP                            ;314
00036a  b93f              CBNZ     r7,|L1.892|
00036c  4620              MOV      r0,r4                 ;314
00036e  68e9              LDR      r1,[r5,#0xc]          ;314
000370  4788              BLX      r1                    ;314
000372  b908              CBNZ     r0,|L1.888|
000374  2000              MOVS     r0,#0                 ;314
000376  e7dd              B        |L1.820|
                  |L1.888|
000378  682e              LDR      r6,[r5,#0]            ;314
00037a  686f              LDR      r7,[r5,#4]            ;314
                  |L1.892|
00037c  1e7f              SUBS     r7,r7,#1              ;314
00037e  f8168b01          LDRB     r8,[r6],#1            ;314
000382  bf00              NOP                            ;314
000384  2067              MOVS     r0,#0x67              ;316
000386  6821              LDR      r1,[r4,#0]            ;316
000388  6148              STR      r0,[r1,#0x14]         ;316
00038a  6820              LDR      r0,[r4,#0]            ;316
00038c  f8c08018          STR      r8,[r0,#0x18]         ;316
000390  6820              LDR      r0,[r4,#0]            ;316
000392  2101              MOVS     r1,#1                 ;316
000394  6842              LDR      r2,[r0,#4]            ;316
000396  4620              MOV      r0,r4                 ;316
000398  4790              BLX      r2                    ;316
00039a  2006              MOVS     r0,#6                 ;318
00039c  eb000148          ADD      r1,r0,r8,LSL #1       ;318
0003a0  9803              LDR      r0,[sp,#0xc]          ;318
0003a2  4281              CMP      r1,r0                 ;318
0003a4  d105              BNE      |L1.946|
0003a6  f1b80f01          CMP      r8,#1                 ;318
0003aa  db02              BLT      |L1.946|
0003ac  f1b80f04          CMP      r8,#4                 ;318
0003b0  dd06              BLE      |L1.960|
                  |L1.946|
0003b2  200b              MOVS     r0,#0xb               ;319
0003b4  6821              LDR      r1,[r4,#0]            ;319
0003b6  6148              STR      r0,[r1,#0x14]         ;319
0003b8  6820              LDR      r0,[r4,#0]            ;319
0003ba  6801              LDR      r1,[r0,#0]            ;319
0003bc  4620              MOV      r0,r4                 ;319
0003be  4788              BLX      r1                    ;319
                  |L1.960|
0003c0  f8c48148          STR      r8,[r4,#0x148]        ;321
0003c4  f04f0b00          MOV      r11,#0                ;325
0003c8  e061              B        |L1.1166|
                  |L1.970|
0003ca  bf00              NOP                            ;326
0003cc  b93f              CBNZ     r7,|L1.990|
0003ce  4620              MOV      r0,r4                 ;326
0003d0  68e9              LDR      r1,[r5,#0xc]          ;326
0003d2  4788              BLX      r1                    ;326
0003d4  b908              CBNZ     r0,|L1.986|
0003d6  2000              MOVS     r0,#0                 ;326
0003d8  e7ac              B        |L1.820|
                  |L1.986|
0003da  682e              LDR      r6,[r5,#0]            ;326
0003dc  686f              LDR      r7,[r5,#4]            ;326
                  |L1.990|
0003de  1e7f              SUBS     r7,r7,#1              ;326
0003e0  f8160b01          LDRB     r0,[r6],#1            ;326
0003e4  9001              STR      r0,[sp,#4]            ;326
0003e6  bf00              NOP                            ;326
0003e8  bf00              NOP                            ;327
0003ea  b93f              CBNZ     r7,|L1.1020|
0003ec  4620              MOV      r0,r4                 ;327
0003ee  68e9              LDR      r1,[r5,#0xc]          ;327
0003f0  4788              BLX      r1                    ;327
0003f2  b908              CBNZ     r0,|L1.1016|
0003f4  2000              MOVS     r0,#0                 ;327
0003f6  e79d              B        |L1.820|
                  |L1.1016|
0003f8  682e              LDR      r6,[r5,#0]            ;327
0003fa  686f              LDR      r7,[r5,#4]            ;327
                  |L1.1020|
0003fc  1e7f              SUBS     r7,r7,#1              ;327
0003fe  f8169b01          LDRB     r9,[r6],#1            ;327
000402  bf00              NOP                            ;327
000404  2000              MOVS     r0,#0                 ;329
000406  9002              STR      r0,[sp,#8]            ;329
000408  f8d4a0d8          LDR      r10,[r4,#0xd8]        ;329
00040c  e00a              B        |L1.1060|
                  |L1.1038|
00040e  f8da1000          LDR      r1,[r10,#0]           ;331
000412  9801              LDR      r0,[sp,#4]            ;331
000414  4281              CMP      r1,r0                 ;331
000416  d100              BNE      |L1.1050|
000418  e013              B        |L1.1090|
                  |L1.1050|
00041a  9802              LDR      r0,[sp,#8]            ;330
00041c  1c40              ADDS     r0,r0,#1              ;330
00041e  9002              STR      r0,[sp,#8]            ;330
000420  f10a0a54          ADD      r10,r10,#0x54         ;330
                  |L1.1060|
000424  6a61              LDR      r1,[r4,#0x24]         ;329
000426  9802              LDR      r0,[sp,#8]            ;329
000428  4281              CMP      r1,r0                 ;329
00042a  dcf0              BGT      |L1.1038|
00042c  2005              MOVS     r0,#5                 ;335
00042e  6821              LDR      r1,[r4,#0]            ;335
000430  6148              STR      r0,[r1,#0x14]         ;335
000432  9801              LDR      r0,[sp,#4]            ;335
000434  6821              LDR      r1,[r4,#0]            ;335
000436  6188              STR      r0,[r1,#0x18]         ;335
000438  6820              LDR      r0,[r4,#0]            ;335
00043a  6801              LDR      r1,[r0,#0]            ;335
00043c  4620              MOV      r0,r4                 ;335
00043e  4788              BLX      r1                    ;335
000440  bf00              NOP                            ;337
                  |L1.1090|
000442  f50470a6          ADD      r0,r4,#0x14c          ;339
000446  f840a02b          STR      r10,[r0,r11,LSL #2]   ;339
00044a  f3c91003          UBFX     r0,r9,#4,#4           ;340
00044e  f8ca0014          STR      r0,[r10,#0x14]        ;340
000452  f009000f          AND      r0,r9,#0xf            ;341
000456  f8ca0018          STR      r0,[r10,#0x18]        ;341
00045a  bf00              NOP                            ;343
00045c  6820              LDR      r0,[r4,#0]            ;343
00045e  3018              ADDS     r0,r0,#0x18           ;343
000460  9000              STR      r0,[sp,#0]            ;343
000462  e9dd1000          LDRD     r1,r0,[sp,#0]         ;343
000466  6008              STR      r0,[r1,#0]            ;343
000468  f8da1014          LDR      r1,[r10,#0x14]        ;343
00046c  9800              LDR      r0,[sp,#0]            ;343
00046e  6041              STR      r1,[r0,#4]            ;343
000470  f8da1018          LDR      r1,[r10,#0x18]        ;343
000474  9800              LDR      r0,[sp,#0]            ;343
000476  6081              STR      r1,[r0,#8]            ;343
000478  2068              MOVS     r0,#0x68              ;343
00047a  6821              LDR      r1,[r4,#0]            ;343
00047c  6148              STR      r0,[r1,#0x14]         ;343
00047e  6820              LDR      r0,[r4,#0]            ;343
000480  2101              MOVS     r1,#1                 ;343
000482  6842              LDR      r2,[r0,#4]            ;343
000484  4620              MOV      r0,r4                 ;343
000486  4790              BLX      r2                    ;343
000488  bf00              NOP                            ;343
00048a  f10b0b01          ADD      r11,r11,#1            ;325
                  |L1.1166|
00048e  45c3              CMP      r11,r8                ;325
000490  db9b              BLT      |L1.970|
000492  bf00              NOP                            ;348
000494  b93f              CBNZ     r7,|L1.1190|
000496  4620              MOV      r0,r4                 ;348
000498  68e9              LDR      r1,[r5,#0xc]          ;348
00049a  4788              BLX      r1                    ;348
00049c  b908              CBNZ     r0,|L1.1186|
00049e  2000              MOVS     r0,#0                 ;348
0004a0  e748              B        |L1.820|
                  |L1.1186|
0004a2  682e              LDR      r6,[r5,#0]            ;348
0004a4  686f              LDR      r7,[r5,#4]            ;348
                  |L1.1190|
0004a6  1e7f              SUBS     r7,r7,#1              ;348
0004a8  f8169b01          LDRB     r9,[r6],#1            ;348
0004ac  bf00              NOP                            ;348
0004ae  f8c49190          STR      r9,[r4,#0x190]        ;349
0004b2  bf00              NOP                            ;350
0004b4  b93f              CBNZ     r7,|L1.1222|
0004b6  4620              MOV      r0,r4                 ;350
0004b8  68e9              LDR      r1,[r5,#0xc]          ;350
0004ba  4788              BLX      r1                    ;350
0004bc  b908              CBNZ     r0,|L1.1218|
0004be  2000              MOVS     r0,#0                 ;350
0004c0  e738              B        |L1.820|
                  |L1.1218|
0004c2  682e              LDR      r6,[r5,#0]            ;350
0004c4  686f              LDR      r7,[r5,#4]            ;350
                  |L1.1222|
0004c6  1e7f              SUBS     r7,r7,#1              ;350
0004c8  f8169b01          LDRB     r9,[r6],#1            ;350
0004cc  bf00              NOP                            ;350
0004ce  f8c49194          STR      r9,[r4,#0x194]        ;351
0004d2  bf00              NOP                            ;352
0004d4  b93f              CBNZ     r7,|L1.1254|
0004d6  4620              MOV      r0,r4                 ;352
0004d8  68e9              LDR      r1,[r5,#0xc]          ;352
0004da  4788              BLX      r1                    ;352
0004dc  b908              CBNZ     r0,|L1.1250|
0004de  2000              MOVS     r0,#0                 ;352
0004e0  e728              B        |L1.820|
                  |L1.1250|
0004e2  682e              LDR      r6,[r5,#0]            ;352
0004e4  686f              LDR      r7,[r5,#4]            ;352
                  |L1.1254|
0004e6  1e7f              SUBS     r7,r7,#1              ;352
0004e8  f8169b01          LDRB     r9,[r6],#1            ;352
0004ec  bf00              NOP                            ;352
0004ee  f3c91003          UBFX     r0,r9,#4,#4           ;353
0004f2  f8c40198          STR      r0,[r4,#0x198]        ;353
0004f6  f009000f          AND      r0,r9,#0xf            ;354
0004fa  f8c4019c          STR      r0,[r4,#0x19c]        ;354
0004fe  bf00              NOP                            ;356
000500  6820              LDR      r0,[r4,#0]            ;356
000502  3018              ADDS     r0,r0,#0x18           ;356
000504  9000              STR      r0,[sp,#0]            ;356
000506  f8d41190          LDR      r1,[r4,#0x190]        ;356
00050a  9800              LDR      r0,[sp,#0]            ;356
00050c  6001              STR      r1,[r0,#0]            ;356
00050e  f8d41194          LDR      r1,[r4,#0x194]        ;356
000512  9800              LDR      r0,[sp,#0]            ;356
000514  6041              STR      r1,[r0,#4]            ;356
000516  f8d41198          LDR      r1,[r4,#0x198]        ;356
00051a  9800              LDR      r0,[sp,#0]            ;356
00051c  6081              STR      r1,[r0,#8]            ;356
00051e  f8d4119c          LDR      r1,[r4,#0x19c]        ;356
000522  9800              LDR      r0,[sp,#0]            ;356
000524  60c1              STR      r1,[r0,#0xc]          ;356
000526  2069              MOVS     r0,#0x69              ;356
000528  6821              LDR      r1,[r4,#0]            ;356
00052a  6148              STR      r0,[r1,#0x14]         ;356
00052c  6820              LDR      r0,[r4,#0]            ;356
00052e  2101              MOVS     r1,#1                 ;356
000530  6842              LDR      r2,[r0,#4]            ;356
000532  4620              MOV      r0,r4                 ;356
000534  4790              BLX      r2                    ;356
000536  bf00              NOP                            ;356
000538  2000              MOVS     r0,#0                 ;360
00053a  f8d411b8          LDR      r1,[r4,#0x1b8]        ;360
00053e  6148              STR      r0,[r1,#0x14]         ;360
000540  f8d40090          LDR      r0,[r4,#0x90]         ;363
000544  1c40              ADDS     r0,r0,#1              ;363
000546  f8c40090          STR      r0,[r4,#0x90]         ;363
00054a  602e              STR      r6,[r5,#0]            ;365
00054c  606f              STR      r7,[r5,#4]            ;365
00054e  2001              MOVS     r0,#1                 ;366
000550  e6f0              B        |L1.820|
;;;368    
                          ENDP

                  get_dht PROC
;;;418    LOCAL(boolean)
;;;419    get_dht (j_decompress_ptr cinfo)
000552  e92d4ff0          PUSH     {r4-r11,lr}
;;;420    /* Process a DHT marker */
;;;421    {
000556  b0c7              SUB      sp,sp,#0x11c
000558  4604              MOV      r4,r0
;;;422      INT32 length;
;;;423      UINT8 bits[17];
;;;424      UINT8 huffval[256];
;;;425      int i, index, count;
;;;426      JHUFF_TBL **htblptr;
;;;427      INPUT_VARS(cinfo);
00055a  69a5              LDR      r5,[r4,#0x18]
00055c  682e              LDR      r6,[r5,#0]
00055e  686f              LDR      r7,[r5,#4]
;;;428    
;;;429      INPUT_2BYTES(cinfo, length, return FALSE);
000560  bf00              NOP      
000562  b94f              CBNZ     r7,|L1.1400|
000564  4620              MOV      r0,r4
000566  68e9              LDR      r1,[r5,#0xc]
000568  4788              BLX      r1
00056a  b918              CBNZ     r0,|L1.1396|
00056c  2000              MOVS     r0,#0
                  |L1.1390|
;;;430      length -= 2;
;;;431      
;;;432      while (length > 16) {
;;;433        INPUT_BYTE(cinfo, index, return FALSE);
;;;434    
;;;435        TRACEMS1(cinfo, 1, JTRC_DHT, index);
;;;436          
;;;437        bits[0] = 0;
;;;438        count = 0;
;;;439        for (i = 1; i <= 16; i++) {
;;;440          INPUT_BYTE(cinfo, bits[i], return FALSE);
;;;441          count += bits[i];
;;;442        }
;;;443    
;;;444        length -= 1 + 16;
;;;445    
;;;446        TRACEMS8(cinfo, 2, JTRC_HUFFBITS,
;;;447    	     bits[1], bits[2], bits[3], bits[4],
;;;448    	     bits[5], bits[6], bits[7], bits[8]);
;;;449        TRACEMS8(cinfo, 2, JTRC_HUFFBITS,
;;;450    	     bits[9], bits[10], bits[11], bits[12],
;;;451    	     bits[13], bits[14], bits[15], bits[16]);
;;;452    
;;;453        /* Here we just do minimal validation of the counts to avoid walking
;;;454         * off the end of our table space.  jdhuff.c will check more carefully.
;;;455         */
;;;456        if (count > 256 || ((INT32) count) > length)
;;;457          ERREXIT(cinfo, JERR_BAD_HUFF_TABLE);
;;;458    
;;;459        for (i = 0; i < count; i++)
;;;460          INPUT_BYTE(cinfo, huffval[i], return FALSE);
;;;461    
;;;462        length -= count;
;;;463    
;;;464        if (index & 0x10) {		/* AC table definition */
;;;465          index -= 0x10;
;;;466          htblptr = &cinfo->ac_huff_tbl_ptrs[index];
;;;467        } else {			/* DC table definition */
;;;468          htblptr = &cinfo->dc_huff_tbl_ptrs[index];
;;;469        }
;;;470    
;;;471        if (index < 0 || index >= NUM_HUFF_TBLS)
;;;472          ERREXIT1(cinfo, JERR_DHT_INDEX, index);
;;;473    
;;;474        if (*htblptr == NULL)
;;;475          *htblptr = jpeg_alloc_huff_table((j_common_ptr) cinfo);
;;;476      
;;;477        MEMCOPY((*htblptr)->bits, bits, SIZEOF((*htblptr)->bits));
;;;478        MEMCOPY((*htblptr)->huffval, huffval, SIZEOF((*htblptr)->huffval));
;;;479      }
;;;480    
;;;481      if (length != 0)
;;;482        ERREXIT(cinfo, JERR_BAD_LENGTH);
;;;483    
;;;484      INPUT_SYNC(cinfo);
;;;485      return TRUE;
;;;486    }
00056e  b047              ADD      sp,sp,#0x11c
000570  e8bd8ff0          POP      {r4-r11,pc}
                  |L1.1396|
000574  682e              LDR      r6,[r5,#0]            ;429
000576  686f              LDR      r7,[r5,#4]            ;429
                  |L1.1400|
000578  1e7f              SUBS     r7,r7,#1              ;429
00057a  f8161b01          LDRB     r1,[r6],#1            ;429
00057e  ea4f2801          LSL      r8,r1,#8              ;429
000582  b93f              CBNZ     r7,|L1.1428|
000584  4620              MOV      r0,r4                 ;429
000586  68e9              LDR      r1,[r5,#0xc]          ;429
000588  4788              BLX      r1                    ;429
00058a  b908              CBNZ     r0,|L1.1424|
00058c  2000              MOVS     r0,#0                 ;429
00058e  e7ee              B        |L1.1390|
                  |L1.1424|
000590  682e              LDR      r6,[r5,#0]            ;429
000592  686f              LDR      r7,[r5,#4]            ;429
                  |L1.1428|
000594  1e7f              SUBS     r7,r7,#1              ;429
000596  f8161b01          LDRB     r1,[r6],#1            ;429
00059a  4488              ADD      r8,r8,r1              ;429
00059c  bf00              NOP                            ;429
00059e  f1a80802          SUB      r8,r8,#2              ;430
0005a2  e0f8              B        |L1.1942|
                  |L1.1444|
0005a4  bf00              NOP                            ;433
0005a6  b93f              CBNZ     r7,|L1.1464|
0005a8  4620              MOV      r0,r4                 ;433
0005aa  68e9              LDR      r1,[r5,#0xc]          ;433
0005ac  4788              BLX      r1                    ;433
0005ae  b908              CBNZ     r0,|L1.1460|
0005b0  2000              MOVS     r0,#0                 ;433
0005b2  e7dc              B        |L1.1390|
                  |L1.1460|
0005b4  682e              LDR      r6,[r5,#0]            ;433
0005b6  686f              LDR      r7,[r5,#4]            ;433
                  |L1.1464|
0005b8  1e7f              SUBS     r7,r7,#1              ;433
0005ba  f8169b01          LDRB     r9,[r6],#1            ;433
0005be  bf00              NOP                            ;433
0005c0  2050              MOVS     r0,#0x50              ;435
0005c2  6821              LDR      r1,[r4,#0]            ;435
0005c4  6148              STR      r0,[r1,#0x14]         ;435
0005c6  6820              LDR      r0,[r4,#0]            ;435
0005c8  f8c09018          STR      r9,[r0,#0x18]         ;435
0005cc  6820              LDR      r0,[r4,#0]            ;435
0005ce  2101              MOVS     r1,#1                 ;435
0005d0  6842              LDR      r2,[r0,#4]            ;435
0005d2  4620              MOV      r0,r4                 ;435
0005d4  4790              BLX      r2                    ;435
0005d6  2000              MOVS     r0,#0                 ;437
0005d8  f88d0108          STRB     r0,[sp,#0x108]        ;437
0005dc  9001              STR      r0,[sp,#4]            ;438
0005de  f04f0b01          MOV      r11,#1                ;439
0005e2  e018              B        |L1.1558|
                  |L1.1508|
0005e4  bf00              NOP                            ;440
0005e6  b93f              CBNZ     r7,|L1.1528|
0005e8  4620              MOV      r0,r4                 ;440
0005ea  68e9              LDR      r1,[r5,#0xc]          ;440
0005ec  4788              BLX      r1                    ;440
0005ee  b908              CBNZ     r0,|L1.1524|
0005f0  2000              MOVS     r0,#0                 ;440
0005f2  e7bc              B        |L1.1390|
                  |L1.1524|
0005f4  682e              LDR      r6,[r5,#0]            ;440
0005f6  686f              LDR      r7,[r5,#4]            ;440
                  |L1.1528|
0005f8  1e7f              SUBS     r7,r7,#1              ;440
0005fa  f8160b01          LDRB     r0,[r6],#1            ;440
0005fe  a942              ADD      r1,sp,#0x108          ;440
000600  f801000b          STRB     r0,[r1,r11]           ;440
000604  bf00              NOP                            ;440
000606  a842              ADD      r0,sp,#0x108          ;441
000608  f810100b          LDRB     r1,[r0,r11]           ;441
00060c  9801              LDR      r0,[sp,#4]            ;441
00060e  4408              ADD      r0,r0,r1              ;441
000610  9001              STR      r0,[sp,#4]            ;441
000612  f10b0b01          ADD      r11,r11,#1            ;439
                  |L1.1558|
000616  f1bb0f10          CMP      r11,#0x10             ;439
00061a  dde3              BLE      |L1.1508|
00061c  f1a80811          SUB      r8,r8,#0x11           ;444
000620  bf00              NOP                            ;446
000622  6820              LDR      r0,[r4,#0]            ;446
000624  f1000a18          ADD      r10,r0,#0x18          ;446
000628  f89d0109          LDRB     r0,[sp,#0x109]        ;446
00062c  f8ca0000          STR      r0,[r10,#0]           ;446
000630  f89d010a          LDRB     r0,[sp,#0x10a]        ;446
000634  f8ca0004          STR      r0,[r10,#4]           ;446
000638  f89d010b          LDRB     r0,[sp,#0x10b]        ;446
00063c  f8ca0008          STR      r0,[r10,#8]           ;446
000640  f89d010c          LDRB     r0,[sp,#0x10c]        ;446
000644  f8ca000c          STR      r0,[r10,#0xc]         ;446
000648  f89d010d          LDRB     r0,[sp,#0x10d]        ;446
00064c  f8ca0010          STR      r0,[r10,#0x10]        ;446
000650  f89d010e          LDRB     r0,[sp,#0x10e]        ;446
000654  f8ca0014          STR      r0,[r10,#0x14]        ;446
000658  f89d010f          LDRB     r0,[sp,#0x10f]        ;446
00065c  f8ca0018          STR      r0,[r10,#0x18]        ;446
000660  f89d0110          LDRB     r0,[sp,#0x110]        ;446
000664  f8ca001c          STR      r0,[r10,#0x1c]        ;446
000668  2056              MOVS     r0,#0x56              ;446
00066a  6821              LDR      r1,[r4,#0]            ;446
00066c  6148              STR      r0,[r1,#0x14]         ;446
00066e  6820              LDR      r0,[r4,#0]            ;446
000670  2102              MOVS     r1,#2                 ;446
000672  6842              LDR      r2,[r0,#4]            ;446
000674  4620              MOV      r0,r4                 ;446
000676  4790              BLX      r2                    ;446
000678  bf00              NOP                            ;446
00067a  bf00              NOP                            ;449
00067c  6820              LDR      r0,[r4,#0]            ;449
00067e  f1000a18          ADD      r10,r0,#0x18          ;449
000682  f89d0111          LDRB     r0,[sp,#0x111]        ;449
000686  f8ca0000          STR      r0,[r10,#0]           ;449
00068a  f89d0112          LDRB     r0,[sp,#0x112]        ;449
00068e  f8ca0004          STR      r0,[r10,#4]           ;449
000692  f89d0113          LDRB     r0,[sp,#0x113]        ;449
000696  f8ca0008          STR      r0,[r10,#8]           ;449
00069a  f89d0114          LDRB     r0,[sp,#0x114]        ;449
00069e  f8ca000c          STR      r0,[r10,#0xc]         ;449
0006a2  f89d0115          LDRB     r0,[sp,#0x115]        ;449
0006a6  f8ca0010          STR      r0,[r10,#0x10]        ;449
0006aa  f89d0116          LDRB     r0,[sp,#0x116]        ;449
0006ae  f8ca0014          STR      r0,[r10,#0x14]        ;449
0006b2  f89d0117          LDRB     r0,[sp,#0x117]        ;449
0006b6  f8ca0018          STR      r0,[r10,#0x18]        ;449
0006ba  f89d0118          LDRB     r0,[sp,#0x118]        ;449
0006be  f8ca001c          STR      r0,[r10,#0x1c]        ;449
0006c2  2056              MOVS     r0,#0x56              ;449
0006c4  6821              LDR      r1,[r4,#0]            ;449
0006c6  6148              STR      r0,[r1,#0x14]         ;449
0006c8  6820              LDR      r0,[r4,#0]            ;449
0006ca  2102              MOVS     r1,#2                 ;449
0006cc  6842              LDR      r2,[r0,#4]            ;449
0006ce  4620              MOV      r0,r4                 ;449
0006d0  4790              BLX      r2                    ;449
0006d2  bf00              NOP                            ;449
0006d4  9801              LDR      r0,[sp,#4]            ;456
0006d6  f5b07f80          CMP      r0,#0x100             ;456
0006da  dc02              BGT      |L1.1762|
0006dc  9801              LDR      r0,[sp,#4]            ;456
0006de  4540              CMP      r0,r8                 ;456
0006e0  dd06              BLE      |L1.1776|
                  |L1.1762|
0006e2  2008              MOVS     r0,#8                 ;457
0006e4  6821              LDR      r1,[r4,#0]            ;457
0006e6  6148              STR      r0,[r1,#0x14]         ;457
0006e8  6820              LDR      r0,[r4,#0]            ;457
0006ea  6801              LDR      r1,[r0,#0]            ;457
0006ec  4620              MOV      r0,r4                 ;457
0006ee  4788              BLX      r1                    ;457
                  |L1.1776|
0006f0  f04f0b00          MOV      r11,#0                ;459
0006f4  e012              B        |L1.1820|
                  |L1.1782|
0006f6  bf00              NOP                            ;460
0006f8  b93f              CBNZ     r7,|L1.1802|
0006fa  4620              MOV      r0,r4                 ;460
0006fc  68e9              LDR      r1,[r5,#0xc]          ;460
0006fe  4788              BLX      r1                    ;460
000700  b908              CBNZ     r0,|L1.1798|
000702  2000              MOVS     r0,#0                 ;460
000704  e733              B        |L1.1390|
                  |L1.1798|
000706  682e              LDR      r6,[r5,#0]            ;460
000708  686f              LDR      r7,[r5,#4]            ;460
                  |L1.1802|
00070a  1e7f              SUBS     r7,r7,#1              ;460
00070c  f8160b01          LDRB     r0,[r6],#1            ;460
000710  a902              ADD      r1,sp,#8              ;460
000712  f801000b          STRB     r0,[r1,r11]           ;460
000716  bf00              NOP                            ;460
000718  f10b0b01          ADD      r11,r11,#1            ;459
                  |L1.1820|
00071c  9801              LDR      r0,[sp,#4]            ;459
00071e  4583              CMP      r11,r0                ;459
000720  dbe9              BLT      |L1.1782|
000722  9801              LDR      r0,[sp,#4]            ;462
000724  eba80800          SUB      r8,r8,r0              ;462
000728  f0090010          AND      r0,r9,#0x10           ;464
00072c  b138              CBZ      r0,|L1.1854|
00072e  f1a90910          SUB      r9,r9,#0x10           ;465
000732  f10400c4          ADD      r0,r4,#0xc4           ;466
000736  eb000089          ADD      r0,r0,r9,LSL #2       ;466
00073a  9000              STR      r0,[sp,#0]            ;466
00073c  e004              B        |L1.1864|
                  |L1.1854|
00073e  f10400b4          ADD      r0,r4,#0xb4           ;468
000742  eb000089          ADD      r0,r0,r9,LSL #2       ;468
000746  9000              STR      r0,[sp,#0]            ;468
                  |L1.1864|
000748  f1b90f00          CMP      r9,#0                 ;471
00074c  db02              BLT      |L1.1876|
00074e  f1b90f04          CMP      r9,#4                 ;471
000752  db09              BLT      |L1.1896|
                  |L1.1876|
000754  201e              MOVS     r0,#0x1e              ;472
000756  6821              LDR      r1,[r4,#0]            ;472
000758  6148              STR      r0,[r1,#0x14]         ;472
00075a  6820              LDR      r0,[r4,#0]            ;472
00075c  f8c09018          STR      r9,[r0,#0x18]         ;472
000760  6820              LDR      r0,[r4,#0]            ;472
000762  6801              LDR      r1,[r0,#0]            ;472
000764  4620              MOV      r0,r4                 ;472
000766  4788              BLX      r1                    ;472
                  |L1.1896|
000768  9800              LDR      r0,[sp,#0]            ;474
00076a  6800              LDR      r0,[r0,#0]            ;474
00076c  b920              CBNZ     r0,|L1.1912|
00076e  4620              MOV      r0,r4                 ;475
000770  f7fffffe          BL       jpeg_alloc_huff_table
000774  9900              LDR      r1,[sp,#0]            ;475
000776  6008              STR      r0,[r1,#0]            ;475
                  |L1.1912|
000778  9900              LDR      r1,[sp,#0]            ;477
00077a  2211              MOVS     r2,#0x11              ;477
00077c  6808              LDR      r0,[r1,#0]            ;477
00077e  a942              ADD      r1,sp,#0x108          ;477
000780  f7fffffe          BL       __aeabi_memcpy4
000784  9900              LDR      r1,[sp,#0]            ;478
000786  6809              LDR      r1,[r1,#0]            ;478
000788  f1010011          ADD      r0,r1,#0x11           ;478
00078c  f44f7280          MOV      r2,#0x100             ;478
000790  a902              ADD      r1,sp,#8              ;478
000792  f7fffffe          BL       __aeabi_memcpy
                  |L1.1942|
000796  f1b80f10          CMP      r8,#0x10              ;432
00079a  f73faf03          BGT      |L1.1444|
00079e  f1b80f00          CMP      r8,#0                 ;481
0007a2  d006              BEQ      |L1.1970|
0007a4  200b              MOVS     r0,#0xb               ;482
0007a6  6821              LDR      r1,[r4,#0]            ;482
0007a8  6148              STR      r0,[r1,#0x14]         ;482
0007aa  6820              LDR      r0,[r4,#0]            ;482
0007ac  6801              LDR      r1,[r0,#0]            ;482
0007ae  4620              MOV      r0,r4                 ;482
0007b0  4788              BLX      r1                    ;482
                  |L1.1970|
0007b2  602e              STR      r6,[r5,#0]            ;484
0007b4  606f              STR      r7,[r5,#4]            ;484
0007b6  2001              MOVS     r0,#1                 ;485
0007b8  e6d9              B        |L1.1390|
;;;487    
                          ENDP

                  get_dqt PROC
;;;489    LOCAL(boolean)
;;;490    get_dqt (j_decompress_ptr cinfo)
0007ba  e92d4ffe          PUSH     {r1-r11,lr}
;;;491    /* Process a DQT marker */
;;;492    {
0007be  4605              MOV      r5,r0
;;;493      INT32 length;
;;;494      int n, i, prec;
;;;495      unsigned int tmp;
;;;496      JQUANT_TBL *quant_ptr;
;;;497      INPUT_VARS(cinfo);
0007c0  69ac              LDR      r4,[r5,#0x18]
0007c2  6827              LDR      r7,[r4,#0]
0007c4  f8d48004          LDR      r8,[r4,#4]
;;;498    
;;;499      INPUT_2BYTES(cinfo, length, return FALSE);
0007c8  bf00              NOP      
0007ca  f1b80f00          CMP      r8,#0
0007ce  d109              BNE      |L1.2020|
0007d0  4628              MOV      r0,r5
0007d2  68e1              LDR      r1,[r4,#0xc]
0007d4  4788              BLX      r1
0007d6  b910              CBNZ     r0,|L1.2014|
0007d8  2000              MOVS     r0,#0
                  |L1.2010|
;;;500      length -= 2;
;;;501    
;;;502      while (length > 0) {
;;;503        INPUT_BYTE(cinfo, n, return FALSE);
;;;504        prec = n >> 4;
;;;505        n &= 0x0F;
;;;506    
;;;507        TRACEMS2(cinfo, 1, JTRC_DQT, n, prec);
;;;508    
;;;509        if (n >= NUM_QUANT_TBLS)
;;;510          ERREXIT1(cinfo, JERR_DQT_INDEX, n);
;;;511          
;;;512        if (cinfo->quant_tbl_ptrs[n] == NULL)
;;;513          cinfo->quant_tbl_ptrs[n] = jpeg_alloc_quant_table((j_common_ptr) cinfo);
;;;514        quant_ptr = cinfo->quant_tbl_ptrs[n];
;;;515    
;;;516        for (i = 0; i < DCTSIZE2; i++) {
;;;517          if (prec)
;;;518    	INPUT_2BYTES(cinfo, tmp, return FALSE);
;;;519          else
;;;520    	INPUT_BYTE(cinfo, tmp, return FALSE);
;;;521          /* We convert the zigzag-order table to natural array order. */
;;;522          quant_ptr->quantval[jpeg_natural_order[i]] = (UINT16) tmp;
;;;523        }
;;;524    
;;;525        if (cinfo->err->trace_level >= 2) {
;;;526          for (i = 0; i < DCTSIZE2; i += 8) {
;;;527    	TRACEMS8(cinfo, 2, JTRC_QUANTVALS,
;;;528    		 quant_ptr->quantval[i],   quant_ptr->quantval[i+1],
;;;529    		 quant_ptr->quantval[i+2], quant_ptr->quantval[i+3],
;;;530    		 quant_ptr->quantval[i+4], quant_ptr->quantval[i+5],
;;;531    		 quant_ptr->quantval[i+6], quant_ptr->quantval[i+7]);
;;;532          }
;;;533        }
;;;534    
;;;535        length -= DCTSIZE2+1;
;;;536        if (prec) length -= DCTSIZE2;
;;;537      }
;;;538    
;;;539      if (length != 0)
;;;540        ERREXIT(cinfo, JERR_BAD_LENGTH);
;;;541    
;;;542      INPUT_SYNC(cinfo);
;;;543      return TRUE;
;;;544    }
0007da  e8bd8ffe          POP      {r1-r11,pc}
                  |L1.2014|
0007de  6827              LDR      r7,[r4,#0]            ;499
0007e0  f8d48004          LDR      r8,[r4,#4]            ;499
                  |L1.2020|
0007e4  f1a80801          SUB      r8,r8,#1              ;499
0007e8  f8171b01          LDRB     r1,[r7],#1            ;499
0007ec  0208              LSLS     r0,r1,#8              ;499
0007ee  9002              STR      r0,[sp,#8]            ;499
0007f0  f1b80f00          CMP      r8,#0                 ;499
0007f4  d108              BNE      |L1.2056|
0007f6  4628              MOV      r0,r5                 ;499
0007f8  68e1              LDR      r1,[r4,#0xc]          ;499
0007fa  4788              BLX      r1                    ;499
0007fc  b908              CBNZ     r0,|L1.2050|
0007fe  2000              MOVS     r0,#0                 ;499
000800  e7eb              B        |L1.2010|
                  |L1.2050|
000802  6827              LDR      r7,[r4,#0]            ;499
000804  f8d48004          LDR      r8,[r4,#4]            ;499
                  |L1.2056|
000808  f1a80801          SUB      r8,r8,#1              ;499
00080c  f8171b01          LDRB     r1,[r7],#1            ;499
000810  9802              LDR      r0,[sp,#8]            ;499
000812  4408              ADD      r0,r0,r1              ;499
000814  9002              STR      r0,[sp,#8]            ;499
000816  bf00              NOP                            ;499
000818  9802              LDR      r0,[sp,#8]            ;500
00081a  1e80              SUBS     r0,r0,#2              ;500
00081c  9002              STR      r0,[sp,#8]            ;500
00081e  e0cd              B        |L1.2492|
                  |L1.2080|
000820  bf00              NOP                            ;503
000822  f1b80f00          CMP      r8,#0                 ;503
000826  d108              BNE      |L1.2106|
000828  4628              MOV      r0,r5                 ;503
00082a  68e1              LDR      r1,[r4,#0xc]          ;503
00082c  4788              BLX      r1                    ;503
00082e  b908              CBNZ     r0,|L1.2100|
000830  2000              MOVS     r0,#0                 ;503
000832  e7d2              B        |L1.2010|
                  |L1.2100|
000834  6827              LDR      r7,[r4,#0]            ;503
000836  f8d48004          LDR      r8,[r4,#4]            ;503
                  |L1.2106|
00083a  f1a80801          SUB      r8,r8,#1              ;503
00083e  f817ab01          LDRB     r10,[r7],#1           ;503
000842  bf00              NOP                            ;503
000844  ea4f102a          ASR      r0,r10,#4             ;504
000848  9001              STR      r0,[sp,#4]            ;504
00084a  f00a0a0f          AND      r10,r10,#0xf          ;505
00084e  2051              MOVS     r0,#0x51              ;507
000850  6829              LDR      r1,[r5,#0]            ;507
000852  6148              STR      r0,[r1,#0x14]         ;507
000854  6828              LDR      r0,[r5,#0]            ;507
000856  f8c0a018          STR      r10,[r0,#0x18]        ;507
00085a  9801              LDR      r0,[sp,#4]            ;507
00085c  6829              LDR      r1,[r5,#0]            ;507
00085e  61c8              STR      r0,[r1,#0x1c]         ;507
000860  6828              LDR      r0,[r5,#0]            ;507
000862  2101              MOVS     r1,#1                 ;507
000864  6842              LDR      r2,[r0,#4]            ;507
000866  4628              MOV      r0,r5                 ;507
000868  4790              BLX      r2                    ;507
00086a  f1ba0f04          CMP      r10,#4                ;509
00086e  db09              BLT      |L1.2180|
000870  201f              MOVS     r0,#0x1f              ;510
000872  6829              LDR      r1,[r5,#0]            ;510
000874  6148              STR      r0,[r1,#0x14]         ;510
000876  6828              LDR      r0,[r5,#0]            ;510
000878  f8c0a018          STR      r10,[r0,#0x18]        ;510
00087c  6828              LDR      r0,[r5,#0]            ;510
00087e  6801              LDR      r1,[r0,#0]            ;510
000880  4628              MOV      r0,r5                 ;510
000882  4788              BLX      r1                    ;510
                  |L1.2180|
000884  f10500a4          ADD      r0,r5,#0xa4           ;512
000888  f850002a          LDR      r0,[r0,r10,LSL #2]    ;512
00088c  b930              CBNZ     r0,|L1.2204|
00088e  4628              MOV      r0,r5                 ;513
000890  f7fffffe          BL       jpeg_alloc_quant_table
000894  f10501a4          ADD      r1,r5,#0xa4           ;513
000898  f841002a          STR      r0,[r1,r10,LSL #2]    ;513
                  |L1.2204|
00089c  f10500a4          ADD      r0,r5,#0xa4           ;514
0008a0  f850902a          LDR      r9,[r0,r10,LSL #2]    ;514
0008a4  2600              MOVS     r6,#0                 ;516
0008a6  e042              B        |L1.2350|
                  |L1.2216|
0008a8  9801              LDR      r0,[sp,#4]            ;517
0008aa  b330              CBZ      r0,|L1.2298|
0008ac  bf00              NOP                            ;518
0008ae  f1b80f00          CMP      r8,#0                 ;518
0008b2  d108              BNE      |L1.2246|
0008b4  4628              MOV      r0,r5                 ;518
0008b6  68e1              LDR      r1,[r4,#0xc]          ;518
0008b8  4788              BLX      r1                    ;518
0008ba  b908              CBNZ     r0,|L1.2240|
0008bc  2000              MOVS     r0,#0                 ;518
0008be  e78c              B        |L1.2010|
                  |L1.2240|
0008c0  6827              LDR      r7,[r4,#0]            ;518
0008c2  f8d48004          LDR      r8,[r4,#4]            ;518
                  |L1.2246|
0008c6  f1a80801          SUB      r8,r8,#1              ;518
0008ca  f8171b01          LDRB     r1,[r7],#1            ;518
0008ce  0208              LSLS     r0,r1,#8              ;518
0008d0  9000              STR      r0,[sp,#0]            ;518
0008d2  f1b80f00          CMP      r8,#0                 ;518
0008d6  d108              BNE      |L1.2282|
0008d8  4628              MOV      r0,r5                 ;518
0008da  68e1              LDR      r1,[r4,#0xc]          ;518
0008dc  4788              BLX      r1                    ;518
0008de  b908              CBNZ     r0,|L1.2276|
0008e0  2000              MOVS     r0,#0                 ;518
0008e2  e77a              B        |L1.2010|
                  |L1.2276|
0008e4  6827              LDR      r7,[r4,#0]            ;518
0008e6  f8d48004          LDR      r8,[r4,#4]            ;518
                  |L1.2282|
0008ea  f1a80801          SUB      r8,r8,#1              ;518
0008ee  f8171b01          LDRB     r1,[r7],#1            ;518
0008f2  9800              LDR      r0,[sp,#0]            ;518
0008f4  4408              ADD      r0,r0,r1              ;518
0008f6  9000              STR      r0,[sp,#0]            ;518
0008f8  e012              B        |L1.2336|
                  |L1.2298|
0008fa  bf00              NOP                            ;520
0008fc  f1b80f00          CMP      r8,#0                 ;520
000900  d108              BNE      |L1.2324|
000902  4628              MOV      r0,r5                 ;520
000904  68e1              LDR      r1,[r4,#0xc]          ;520
000906  4788              BLX      r1                    ;520
000908  b908              CBNZ     r0,|L1.2318|
00090a  2000              MOVS     r0,#0                 ;520
00090c  e765              B        |L1.2010|
                  |L1.2318|
00090e  6827              LDR      r7,[r4,#0]            ;520
000910  f8d48004          LDR      r8,[r4,#4]            ;520
                  |L1.2324|
000914  f1a80801          SUB      r8,r8,#1              ;520
000918  f8170b01          LDRB     r0,[r7],#1            ;520
00091c  9000              STR      r0,[sp,#0]            ;520
00091e  bf00              NOP                            ;520
                  |L1.2336|
000920  49fb              LDR      r1,|L1.3344|
000922  f8511026          LDR      r1,[r1,r6,LSL #2]     ;522
000926  9800              LDR      r0,[sp,#0]            ;522
000928  f8290011          STRH     r0,[r9,r1,LSL #1]     ;522
00092c  1c76              ADDS     r6,r6,#1              ;516
                  |L1.2350|
00092e  2e40              CMP      r6,#0x40              ;516
000930  dbba              BLT      |L1.2216|
000932  6828              LDR      r0,[r5,#0]            ;525
000934  6e80              LDR      r0,[r0,#0x68]         ;525
000936  2802              CMP      r0,#2                 ;525
000938  db38              BLT      |L1.2476|
00093a  2600              MOVS     r6,#0                 ;526
00093c  e034              B        |L1.2472|
                  |L1.2366|
00093e  bf00              NOP                            ;527
000940  6828              LDR      r0,[r5,#0]            ;527
000942  f1000b18          ADD      r11,r0,#0x18          ;527
000946  f8390016          LDRH     r0,[r9,r6,LSL #1]     ;527
00094a  f8cb0000          STR      r0,[r11,#0]           ;527
00094e  1c70              ADDS     r0,r6,#1              ;527
000950  f8390010          LDRH     r0,[r9,r0,LSL #1]     ;527
000954  f8cb0004          STR      r0,[r11,#4]           ;527
000958  1cb0              ADDS     r0,r6,#2              ;527
00095a  f8390010          LDRH     r0,[r9,r0,LSL #1]     ;527
00095e  f8cb0008          STR      r0,[r11,#8]           ;527
000962  1cf0              ADDS     r0,r6,#3              ;527
000964  f8390010          LDRH     r0,[r9,r0,LSL #1]     ;527
000968  f8cb000c          STR      r0,[r11,#0xc]         ;527
00096c  1d30              ADDS     r0,r6,#4              ;527
00096e  f8390010          LDRH     r0,[r9,r0,LSL #1]     ;527
000972  f8cb0010          STR      r0,[r11,#0x10]        ;527
000976  1d70              ADDS     r0,r6,#5              ;527
000978  f8390010          LDRH     r0,[r9,r0,LSL #1]     ;527
00097c  f8cb0014          STR      r0,[r11,#0x14]        ;527
000980  1db0              ADDS     r0,r6,#6              ;527
000982  f8390010          LDRH     r0,[r9,r0,LSL #1]     ;527
000986  f8cb0018          STR      r0,[r11,#0x18]        ;527
00098a  1df0              ADDS     r0,r6,#7              ;527
00098c  f8390010          LDRH     r0,[r9,r0,LSL #1]     ;527
000990  f8cb001c          STR      r0,[r11,#0x1c]        ;527
000994  205d              MOVS     r0,#0x5d              ;527
000996  6829              LDR      r1,[r5,#0]            ;527
000998  6148              STR      r0,[r1,#0x14]         ;527
00099a  6828              LDR      r0,[r5,#0]            ;527
00099c  2102              MOVS     r1,#2                 ;527
00099e  6842              LDR      r2,[r0,#4]            ;527
0009a0  4628              MOV      r0,r5                 ;527
0009a2  4790              BLX      r2                    ;527
0009a4  bf00              NOP                            ;527
0009a6  3608              ADDS     r6,r6,#8              ;526
                  |L1.2472|
0009a8  2e40              CMP      r6,#0x40              ;526
0009aa  dbc8              BLT      |L1.2366|
                  |L1.2476|
0009ac  9802              LDR      r0,[sp,#8]            ;535
0009ae  3841              SUBS     r0,r0,#0x41           ;535
0009b0  9002              STR      r0,[sp,#8]            ;535
0009b2  9801              LDR      r0,[sp,#4]            ;536
0009b4  b110              CBZ      r0,|L1.2492|
0009b6  9802              LDR      r0,[sp,#8]            ;536
0009b8  3840              SUBS     r0,r0,#0x40           ;536
0009ba  9002              STR      r0,[sp,#8]            ;536
                  |L1.2492|
0009bc  9802              LDR      r0,[sp,#8]            ;502
0009be  2800              CMP      r0,#0                 ;502
0009c0  f73faf2e          BGT      |L1.2080|
0009c4  9802              LDR      r0,[sp,#8]            ;539
0009c6  b130              CBZ      r0,|L1.2518|
0009c8  200b              MOVS     r0,#0xb               ;540
0009ca  6829              LDR      r1,[r5,#0]            ;540
0009cc  6148              STR      r0,[r1,#0x14]         ;540
0009ce  6828              LDR      r0,[r5,#0]            ;540
0009d0  6801              LDR      r1,[r0,#0]            ;540
0009d2  4628              MOV      r0,r5                 ;540
0009d4  4788              BLX      r1                    ;540
                  |L1.2518|
0009d6  6027              STR      r7,[r4,#0]            ;542
0009d8  f8c48004          STR      r8,[r4,#4]            ;542
0009dc  2001              MOVS     r0,#1                 ;543
0009de  e6fc              B        |L1.2010|
;;;545    
                          ENDP

                  get_dri PROC
;;;547    LOCAL(boolean)
;;;548    get_dri (j_decompress_ptr cinfo)
0009e0  e92d47f0          PUSH     {r4-r10,lr}
;;;549    /* Process a DRI marker */
;;;550    {
0009e4  4607              MOV      r7,r0
;;;551      INT32 length;
;;;552      unsigned int tmp;
;;;553      INPUT_VARS(cinfo);
0009e6  69bc              LDR      r4,[r7,#0x18]
0009e8  6825              LDR      r5,[r4,#0]
0009ea  6866              LDR      r6,[r4,#4]
;;;554    
;;;555      INPUT_2BYTES(cinfo, length, return FALSE);
0009ec  bf00              NOP      
0009ee  b946              CBNZ     r6,|L1.2562|
0009f0  4638              MOV      r0,r7
0009f2  68e1              LDR      r1,[r4,#0xc]
0009f4  4788              BLX      r1
0009f6  b910              CBNZ     r0,|L1.2558|
0009f8  2000              MOVS     r0,#0
                  |L1.2554|
;;;556      
;;;557      if (length != 4)
;;;558        ERREXIT(cinfo, JERR_BAD_LENGTH);
;;;559    
;;;560      INPUT_2BYTES(cinfo, tmp, return FALSE);
;;;561    
;;;562      TRACEMS1(cinfo, 1, JTRC_DRI, tmp);
;;;563    
;;;564      cinfo->restart_interval = tmp;
;;;565    
;;;566      INPUT_SYNC(cinfo);
;;;567      return TRUE;
;;;568    }
0009fa  e8bd87f0          POP      {r4-r10,pc}
                  |L1.2558|
0009fe  6825              LDR      r5,[r4,#0]            ;555
000a00  6866              LDR      r6,[r4,#4]            ;555
                  |L1.2562|
000a02  1e76              SUBS     r6,r6,#1              ;555
000a04  f8151b01          LDRB     r1,[r5],#1            ;555
000a08  ea4f2901          LSL      r9,r1,#8              ;555
000a0c  b93e              CBNZ     r6,|L1.2590|
000a0e  4638              MOV      r0,r7                 ;555
000a10  68e1              LDR      r1,[r4,#0xc]          ;555
000a12  4788              BLX      r1                    ;555
000a14  b908              CBNZ     r0,|L1.2586|
000a16  2000              MOVS     r0,#0                 ;555
000a18  e7ef              B        |L1.2554|
                  |L1.2586|
000a1a  6825              LDR      r5,[r4,#0]            ;555
000a1c  6866              LDR      r6,[r4,#4]            ;555
                  |L1.2590|
000a1e  1e76              SUBS     r6,r6,#1              ;555
000a20  f8151b01          LDRB     r1,[r5],#1            ;555
000a24  4489              ADD      r9,r9,r1              ;555
000a26  bf00              NOP                            ;555
000a28  f1b90f04          CMP      r9,#4                 ;557
000a2c  d006              BEQ      |L1.2620|
000a2e  200b              MOVS     r0,#0xb               ;558
000a30  6839              LDR      r1,[r7,#0]            ;558
000a32  6148              STR      r0,[r1,#0x14]         ;558
000a34  6838              LDR      r0,[r7,#0]            ;558
000a36  6801              LDR      r1,[r0,#0]            ;558
000a38  4638              MOV      r0,r7                 ;558
000a3a  4788              BLX      r1                    ;558
                  |L1.2620|
000a3c  bf00              NOP                            ;560
000a3e  b93e              CBNZ     r6,|L1.2640|
000a40  4638              MOV      r0,r7                 ;560
000a42  68e1              LDR      r1,[r4,#0xc]          ;560
000a44  4788              BLX      r1                    ;560
000a46  b908              CBNZ     r0,|L1.2636|
000a48  2000              MOVS     r0,#0                 ;560
000a4a  e7d6              B        |L1.2554|
                  |L1.2636|
000a4c  6825              LDR      r5,[r4,#0]            ;560
000a4e  6866              LDR      r6,[r4,#4]            ;560
                  |L1.2640|
000a50  1e76              SUBS     r6,r6,#1              ;560
000a52  f8151b01          LDRB     r1,[r5],#1            ;560
000a56  ea4f2801          LSL      r8,r1,#8              ;560
000a5a  b93e              CBNZ     r6,|L1.2668|
000a5c  4638              MOV      r0,r7                 ;560
000a5e  68e1              LDR      r1,[r4,#0xc]          ;560
000a60  4788              BLX      r1                    ;560
000a62  b908              CBNZ     r0,|L1.2664|
000a64  2000              MOVS     r0,#0                 ;560
000a66  e7c8              B        |L1.2554|
                  |L1.2664|
000a68  6825              LDR      r5,[r4,#0]            ;560
000a6a  6866              LDR      r6,[r4,#4]            ;560
                  |L1.2668|
000a6c  1e76              SUBS     r6,r6,#1              ;560
000a6e  f8151b01          LDRB     r1,[r5],#1            ;560
000a72  4488              ADD      r8,r8,r1              ;560
000a74  bf00              NOP                            ;560
000a76  2052              MOVS     r0,#0x52              ;562
000a78  6839              LDR      r1,[r7,#0]            ;562
000a7a  6148              STR      r0,[r1,#0x14]         ;562
000a7c  6838              LDR      r0,[r7,#0]            ;562
000a7e  f8c08018          STR      r8,[r0,#0x18]         ;562
000a82  6838              LDR      r0,[r7,#0]            ;562
000a84  2101              MOVS     r1,#1                 ;562
000a86  6842              LDR      r2,[r0,#4]            ;562
000a88  4638              MOV      r0,r7                 ;562
000a8a  4790              BLX      r2                    ;562
000a8c  f8c78114          STR      r8,[r7,#0x114]        ;564
000a90  6025              STR      r5,[r4,#0]            ;566
000a92  6066              STR      r6,[r4,#4]            ;566
000a94  2001              MOVS     r0,#1                 ;567
000a96  e7b0              B        |L1.2554|
;;;569    
                          ENDP

                  examine_app0 PROC
;;;583    LOCAL(void)
;;;584    examine_app0 (j_decompress_ptr cinfo, JOCTET FAR * data,
000a98  e92d47f0          PUSH     {r4-r10,lr}
;;;585    	      unsigned int datalen, INT32 remaining)
;;;586    /* Examine first few bytes from an APP0.
;;;587     * Take appropriate action if it is a JFIF marker.
;;;588     * datalen is # of bytes at data[], remaining is length of rest of marker data.
;;;589     */
;;;590    {
000a9c  4604              MOV      r4,r0
000a9e  460d              MOV      r5,r1
000aa0  4690              MOV      r8,r2
000aa2  4699              MOV      r9,r3
;;;591      INT32 totallen = (INT32) datalen + remaining;
000aa4  eb080609          ADD      r6,r8,r9
;;;592    
;;;593      if (datalen >= APP0_DATA_LEN &&
000aa8  f1b80f0e          CMP      r8,#0xe
000aac  d37a              BCC      |L1.2980|
;;;594          GETJOCTET(data[0]) == 0x4A &&
000aae  7828              LDRB     r0,[r5,#0]
000ab0  284a              CMP      r0,#0x4a
000ab2  d177              BNE      |L1.2980|
;;;595          GETJOCTET(data[1]) == 0x46 &&
000ab4  7868              LDRB     r0,[r5,#1]
000ab6  2846              CMP      r0,#0x46
000ab8  d174              BNE      |L1.2980|
;;;596          GETJOCTET(data[2]) == 0x49 &&
000aba  78a8              LDRB     r0,[r5,#2]
000abc  2849              CMP      r0,#0x49
000abe  d171              BNE      |L1.2980|
;;;597          GETJOCTET(data[3]) == 0x46 &&
000ac0  78e8              LDRB     r0,[r5,#3]
000ac2  2846              CMP      r0,#0x46
000ac4  d16e              BNE      |L1.2980|
;;;598          GETJOCTET(data[4]) == 0) {
000ac6  7928              LDRB     r0,[r5,#4]
000ac8  2800              CMP      r0,#0
000aca  d16b              BNE      |L1.2980|
;;;599        /* Found JFIF APP0 marker: save info */
;;;600        cinfo->saw_JFIF_marker = TRUE;
000acc  2001              MOVS     r0,#1
000ace  f504748c          ADD      r4,r4,#0x118
000ad2  6020              STR      r0,[r4,#0]
;;;601        cinfo->JFIF_major_version = GETJOCTET(data[5]);
000ad4  7968              LDRB     r0,[r5,#5]
000ad6  7120              STRB     r0,[r4,#4]
;;;602        cinfo->JFIF_minor_version = GETJOCTET(data[6]);
000ad8  79a8              LDRB     r0,[r5,#6]
000ada  7160              STRB     r0,[r4,#5]
;;;603        cinfo->density_unit = GETJOCTET(data[7]);
000adc  79e8              LDRB     r0,[r5,#7]
000ade  71a0              STRB     r0,[r4,#6]
;;;604        cinfo->X_density = (GETJOCTET(data[8]) << 8) + GETJOCTET(data[9]);
000ae0  7a68              LDRB     r0,[r5,#9]
000ae2  7a29              LDRB     r1,[r5,#8]
000ae4  eb002001          ADD      r0,r0,r1,LSL #8
000ae8  8120              STRH     r0,[r4,#8]
;;;605        cinfo->Y_density = (GETJOCTET(data[10]) << 8) + GETJOCTET(data[11]);
000aea  7ae8              LDRB     r0,[r5,#0xb]
000aec  7aa9              LDRB     r1,[r5,#0xa]
000aee  eb002001          ADD      r0,r0,r1,LSL #8
000af2  8160              STRH     r0,[r4,#0xa]
;;;606        /* Check version.
;;;607         * Major version must be 1, anything else signals an incompatible change.
;;;608         * (We used to treat this as an error, but now it's a nonfatal warning,
;;;609         * because some bozo at Hijaak couldn't read the spec.)
;;;610         * Minor version should be 0..2, but process anyway if newer.
;;;611         */
;;;612        if (cinfo->JFIF_major_version != 1)
000af4  7920              LDRB     r0,[r4,#4]
000af6  f5a4748c          SUB      r4,r4,#0x118
000afa  2801              CMP      r0,#1
000afc  d010              BEQ      |L1.2848|
;;;613          WARNMS2(cinfo, JWRN_JFIF_MAJOR,
000afe  2077              MOVS     r0,#0x77
000b00  6821              LDR      r1,[r4,#0]
000b02  6148              STR      r0,[r1,#0x14]
000b04  f894011c          LDRB     r0,[r4,#0x11c]
000b08  6821              LDR      r1,[r4,#0]
000b0a  6188              STR      r0,[r1,#0x18]
000b0c  f894111d          LDRB     r1,[r4,#0x11d]
000b10  6820              LDR      r0,[r4,#0]
000b12  61c1              STR      r1,[r0,#0x1c]
000b14  6820              LDR      r0,[r4,#0]
000b16  f04f31ff          MOV      r1,#0xffffffff
000b1a  6842              LDR      r2,[r0,#4]
000b1c  4620              MOV      r0,r4
000b1e  4790              BLX      r2
                  |L1.2848|
;;;614    	      cinfo->JFIF_major_version, cinfo->JFIF_minor_version);
;;;615        /* Generate trace messages */
;;;616        TRACEMS5(cinfo, 1, JTRC_JFIF,
000b20  bf00              NOP      
000b22  6820              LDR      r0,[r4,#0]
000b24  f1000718          ADD      r7,r0,#0x18
000b28  f894011c          LDRB     r0,[r4,#0x11c]
000b2c  6038              STR      r0,[r7,#0]
000b2e  f894011d          LDRB     r0,[r4,#0x11d]
000b32  6078              STR      r0,[r7,#4]
000b34  f8b40120          LDRH     r0,[r4,#0x120]
000b38  60b8              STR      r0,[r7,#8]
000b3a  f8b40122          LDRH     r0,[r4,#0x122]
000b3e  60f8              STR      r0,[r7,#0xc]
000b40  f894011e          LDRB     r0,[r4,#0x11e]
000b44  6138              STR      r0,[r7,#0x10]
000b46  2057              MOVS     r0,#0x57
000b48  6821              LDR      r1,[r4,#0]
000b4a  6148              STR      r0,[r1,#0x14]
000b4c  6820              LDR      r0,[r4,#0]
000b4e  2101              MOVS     r1,#1
000b50  6842              LDR      r2,[r0,#4]
000b52  4620              MOV      r0,r4
000b54  4790              BLX      r2
000b56  bf00              NOP      
;;;617    	     cinfo->JFIF_major_version, cinfo->JFIF_minor_version,
;;;618    	     cinfo->X_density, cinfo->Y_density, cinfo->density_unit);
;;;619        /* Validate thumbnail dimensions and issue appropriate messages */
;;;620        if (GETJOCTET(data[12]) | GETJOCTET(data[13]))
000b58  7b28              LDRB     r0,[r5,#0xc]
000b5a  7b69              LDRB     r1,[r5,#0xd]
000b5c  4308              ORRS     r0,r0,r1
000b5e  b168              CBZ      r0,|L1.2940|
;;;621          TRACEMS2(cinfo, 1, JTRC_JFIF_THUMBNAIL,
000b60  205a              MOVS     r0,#0x5a
000b62  6821              LDR      r1,[r4,#0]
000b64  6148              STR      r0,[r1,#0x14]
000b66  7b28              LDRB     r0,[r5,#0xc]
000b68  6821              LDR      r1,[r4,#0]
000b6a  6188              STR      r0,[r1,#0x18]
000b6c  7b69              LDRB     r1,[r5,#0xd]
000b6e  6820              LDR      r0,[r4,#0]
000b70  61c1              STR      r1,[r0,#0x1c]
000b72  6820              LDR      r0,[r4,#0]
000b74  2101              MOVS     r1,#1
000b76  6842              LDR      r2,[r0,#4]
000b78  4620              MOV      r0,r4
000b7a  4790              BLX      r2
                  |L1.2940|
;;;622    	       GETJOCTET(data[12]), GETJOCTET(data[13]));
;;;623        totallen -= APP0_DATA_LEN;
000b7c  3e0e              SUBS     r6,r6,#0xe
;;;624        if (totallen !=
000b7e  7b28              LDRB     r0,[r5,#0xc]
000b80  7b69              LDRB     r1,[r5,#0xd]
000b82  4348              MULS     r0,r1,r0
000b84  eb000040          ADD      r0,r0,r0,LSL #1
000b88  42b0              CMP      r0,r6
000b8a  d05f              BEQ      |L1.3148|
;;;625    	((INT32)GETJOCTET(data[12]) * (INT32)GETJOCTET(data[13]) * (INT32) 3))
;;;626          TRACEMS1(cinfo, 1, JTRC_JFIF_BADTHUMBNAILSIZE, (int) totallen);
000b8c  2058              MOVS     r0,#0x58
000b8e  6821              LDR      r1,[r4,#0]
000b90  6148              STR      r0,[r1,#0x14]
000b92  6820              LDR      r0,[r4,#0]
000b94  6186              STR      r6,[r0,#0x18]
000b96  6820              LDR      r0,[r4,#0]
000b98  2101              MOVS     r1,#1
000b9a  6842              LDR      r2,[r0,#4]
000b9c  4620              MOV      r0,r4
000b9e  4790              BLX      r2
000ba0  e054              B        |L1.3148|
000ba2  e7ff              B        |L1.2980|
                  |L1.2980|
;;;627      } else if (datalen >= 6 &&
000ba4  f1b80f06          CMP      r8,#6
000ba8  d346              BCC      |L1.3128|
;;;628          GETJOCTET(data[0]) == 0x4A &&
000baa  7828              LDRB     r0,[r5,#0]
000bac  284a              CMP      r0,#0x4a
000bae  d143              BNE      |L1.3128|
;;;629          GETJOCTET(data[1]) == 0x46 &&
000bb0  7868              LDRB     r0,[r5,#1]
000bb2  2846              CMP      r0,#0x46
000bb4  d140              BNE      |L1.3128|
;;;630          GETJOCTET(data[2]) == 0x58 &&
000bb6  78a8              LDRB     r0,[r5,#2]
000bb8  2858              CMP      r0,#0x58
000bba  d13d              BNE      |L1.3128|
;;;631          GETJOCTET(data[3]) == 0x58 &&
000bbc  78e8              LDRB     r0,[r5,#3]
000bbe  2858              CMP      r0,#0x58
000bc0  d13a              BNE      |L1.3128|
;;;632          GETJOCTET(data[4]) == 0) {
000bc2  7928              LDRB     r0,[r5,#4]
000bc4  bbb8              CBNZ     r0,|L1.3126|
;;;633        /* Found JFIF "JFXX" extension APP0 marker */
;;;634        /* The library doesn't actually do anything with these,
;;;635         * but we try to produce a helpful trace message.
;;;636         */
;;;637        switch (GETJOCTET(data[5])) {
000bc6  7968              LDRB     r0,[r5,#5]
000bc8  2810              CMP      r0,#0x10
000bca  d004              BEQ      |L1.3030|
000bcc  2811              CMP      r0,#0x11
000bce  d00d              BEQ      |L1.3052|
000bd0  2813              CMP      r0,#0x13
000bd2  d121              BNE      |L1.3096|
000bd4  e015              B        |L1.3074|
                  |L1.3030|
;;;638        case 0x10:
;;;639          TRACEMS1(cinfo, 1, JTRC_THUMB_JPEG, (int) totallen);
000bd6  206c              MOVS     r0,#0x6c
000bd8  6821              LDR      r1,[r4,#0]
000bda  6148              STR      r0,[r1,#0x14]
000bdc  6820              LDR      r0,[r4,#0]
000bde  6186              STR      r6,[r0,#0x18]
000be0  6820              LDR      r0,[r4,#0]
000be2  2101              MOVS     r1,#1
000be4  6842              LDR      r2,[r0,#4]
000be6  4620              MOV      r0,r4
000be8  4790              BLX      r2
;;;640          break;
000bea  e023              B        |L1.3124|
                  |L1.3052|
;;;641        case 0x11:
;;;642          TRACEMS1(cinfo, 1, JTRC_THUMB_PALETTE, (int) totallen);
000bec  206d              MOVS     r0,#0x6d
000bee  6821              LDR      r1,[r4,#0]
000bf0  6148              STR      r0,[r1,#0x14]
000bf2  6820              LDR      r0,[r4,#0]
000bf4  6186              STR      r6,[r0,#0x18]
000bf6  6820              LDR      r0,[r4,#0]
000bf8  2101              MOVS     r1,#1
000bfa  6842              LDR      r2,[r0,#4]
000bfc  4620              MOV      r0,r4
000bfe  4790              BLX      r2
;;;643          break;
000c00  e018              B        |L1.3124|
                  |L1.3074|
;;;644        case 0x13:
;;;645          TRACEMS1(cinfo, 1, JTRC_THUMB_RGB, (int) totallen);
000c02  206e              MOVS     r0,#0x6e
000c04  6821              LDR      r1,[r4,#0]
000c06  6148              STR      r0,[r1,#0x14]
000c08  6820              LDR      r0,[r4,#0]
000c0a  6186              STR      r6,[r0,#0x18]
000c0c  6820              LDR      r0,[r4,#0]
000c0e  2101              MOVS     r1,#1
000c10  6842              LDR      r2,[r0,#4]
000c12  4620              MOV      r0,r4
000c14  4790              BLX      r2
;;;646          break;
000c16  e00d              B        |L1.3124|
                  |L1.3096|
;;;647        default:
;;;648          TRACEMS2(cinfo, 1, JTRC_JFIF_EXTENSION,
000c18  2059              MOVS     r0,#0x59
000c1a  6821              LDR      r1,[r4,#0]
000c1c  6148              STR      r0,[r1,#0x14]
000c1e  7968              LDRB     r0,[r5,#5]
000c20  6821              LDR      r1,[r4,#0]
000c22  6188              STR      r0,[r1,#0x18]
000c24  6820              LDR      r0,[r4,#0]
000c26  61c6              STR      r6,[r0,#0x1c]
000c28  6820              LDR      r0,[r4,#0]
000c2a  2101              MOVS     r1,#1
000c2c  6842              LDR      r2,[r0,#4]
000c2e  4620              MOV      r0,r4
000c30  4790              BLX      r2
;;;649    	       GETJOCTET(data[5]), (int) totallen);
;;;650          break;
000c32  bf00              NOP      
                  |L1.3124|
000c34  e00a              B        |L1.3148|
                  |L1.3126|
000c36  e7ff              B        |L1.3128|
                  |L1.3128|
;;;651        }
;;;652      } else {
;;;653        /* Start of APP0 does not match "JFIF" or "JFXX", or too short */
;;;654        TRACEMS1(cinfo, 1, JTRC_APP0, (int) totallen);
000c38  204d              MOVS     r0,#0x4d
000c3a  6821              LDR      r1,[r4,#0]
000c3c  6148              STR      r0,[r1,#0x14]
000c3e  6820              LDR      r0,[r4,#0]
000c40  6186              STR      r6,[r0,#0x18]
000c42  6820              LDR      r0,[r4,#0]
000c44  2101              MOVS     r1,#1
000c46  6842              LDR      r2,[r0,#4]
000c48  4620              MOV      r0,r4
000c4a  4790              BLX      r2
                  |L1.3148|
;;;655      }
;;;656    }
000c4c  e8bd87f0          POP      {r4-r10,pc}
;;;657    
                          ENDP

                  examine_app14 PROC
;;;659    LOCAL(void)
;;;660    examine_app14 (j_decompress_ptr cinfo, JOCTET FAR * data,
000c50  e92d5fff          PUSH     {r0-r12,lr}
;;;661    	       unsigned int datalen, INT32 remaining)
;;;662    /* Examine first few bytes from an APP14.
;;;663     * Take appropriate action if it is an Adobe marker.
;;;664     * datalen is # of bytes at data[], remaining is length of rest of marker data.
;;;665     */
;;;666    {
000c54  4605              MOV      r5,r0
000c56  460c              MOV      r4,r1
000c58  4617              MOV      r7,r2
;;;667      unsigned int version, flags0, flags1, transform;
;;;668    
;;;669      if (datalen >= APP14_DATA_LEN &&
000c5a  2f0c              CMP      r7,#0xc
000c5c  d337              BCC      |L1.3278|
;;;670          GETJOCTET(data[0]) == 0x41 &&
000c5e  7820              LDRB     r0,[r4,#0]
000c60  2841              CMP      r0,#0x41
000c62  d134              BNE      |L1.3278|
;;;671          GETJOCTET(data[1]) == 0x64 &&
000c64  7860              LDRB     r0,[r4,#1]
000c66  2864              CMP      r0,#0x64
000c68  d131              BNE      |L1.3278|
;;;672          GETJOCTET(data[2]) == 0x6F &&
000c6a  78a0              LDRB     r0,[r4,#2]
000c6c  286f              CMP      r0,#0x6f
000c6e  d12e              BNE      |L1.3278|
;;;673          GETJOCTET(data[3]) == 0x62 &&
000c70  78e0              LDRB     r0,[r4,#3]
000c72  2862              CMP      r0,#0x62
000c74  d12b              BNE      |L1.3278|
;;;674          GETJOCTET(data[4]) == 0x65) {
000c76  7920              LDRB     r0,[r4,#4]
000c78  2865              CMP      r0,#0x65
000c7a  d128              BNE      |L1.3278|
;;;675        /* Found Adobe APP14 marker */
;;;676        version = (GETJOCTET(data[5]) << 8) + GETJOCTET(data[6]);
000c7c  79a0              LDRB     r0,[r4,#6]
000c7e  7961              LDRB     r1,[r4,#5]
000c80  eb002901          ADD      r9,r0,r1,LSL #8
;;;677        flags0 = (GETJOCTET(data[7]) << 8) + GETJOCTET(data[8]);
000c84  7a20              LDRB     r0,[r4,#8]
000c86  79e1              LDRB     r1,[r4,#7]
000c88  eb002a01          ADD      r10,r0,r1,LSL #8
;;;678        flags1 = (GETJOCTET(data[9]) << 8) + GETJOCTET(data[10]);
000c8c  7aa0              LDRB     r0,[r4,#0xa]
000c8e  7a61              LDRB     r1,[r4,#9]
000c90  eb002b01          ADD      r11,r0,r1,LSL #8
;;;679        transform = GETJOCTET(data[11]);
000c94  f894800b          LDRB     r8,[r4,#0xb]
;;;680        TRACEMS4(cinfo, 1, JTRC_ADOBE, version, flags0, flags1, transform);
000c98  bf00              NOP      
000c9a  6828              LDR      r0,[r5,#0]
000c9c  f1000618          ADD      r6,r0,#0x18
000ca0  f8c69000          STR      r9,[r6,#0]
000ca4  f8c6a004          STR      r10,[r6,#4]
000ca8  f8c6b008          STR      r11,[r6,#8]
000cac  f8c6800c          STR      r8,[r6,#0xc]
000cb0  204c              MOVS     r0,#0x4c
000cb2  6829              LDR      r1,[r5,#0]
000cb4  6148              STR      r0,[r1,#0x14]
000cb6  6828              LDR      r0,[r5,#0]
000cb8  2101              MOVS     r1,#1
000cba  6842              LDR      r2,[r0,#4]
000cbc  4628              MOV      r0,r5
000cbe  4790              BLX      r2
000cc0  bf00              NOP      
;;;681        cinfo->saw_Adobe_marker = TRUE;
000cc2  2001              MOVS     r0,#1
000cc4  f8c50124          STR      r0,[r5,#0x124]
;;;682        cinfo->Adobe_transform = (UINT8) transform;
000cc8  f8858128          STRB     r8,[r5,#0x128]
000ccc  e00b              B        |L1.3302|
                  |L1.3278|
;;;683      } else {
;;;684        /* Start of APP14 does not match "Adobe", or too short */
;;;685        TRACEMS1(cinfo, 1, JTRC_APP14, (int) (datalen + remaining));
000cce  204e              MOVS     r0,#0x4e
000cd0  6829              LDR      r1,[r5,#0]
000cd2  6148              STR      r0,[r1,#0x14]
000cd4  9803              LDR      r0,[sp,#0xc]
000cd6  4438              ADD      r0,r0,r7
000cd8  6829              LDR      r1,[r5,#0]
000cda  6188              STR      r0,[r1,#0x18]
000cdc  6828              LDR      r0,[r5,#0]
000cde  2101              MOVS     r1,#1
000ce0  6842              LDR      r2,[r0,#4]
000ce2  4628              MOV      r0,r5
000ce4  4790              BLX      r2
                  |L1.3302|
;;;686      }
;;;687    }
000ce6  e8bd9fff          POP      {r0-r12,pc}
;;;688    
                          ENDP

                  get_interesting_appn PROC
;;;690    METHODDEF(boolean)
;;;691    get_interesting_appn (j_decompress_ptr cinfo)
000cea  e92d47ff          PUSH     {r0-r10,lr}
;;;692    /* Process an APP0 or APP14 marker without saving it */
;;;693    {
000cee  4606              MOV      r6,r0
;;;694      INT32 length;
;;;695      JOCTET b[APPN_DATA_LEN];
;;;696      unsigned int i, numtoread;
;;;697      INPUT_VARS(cinfo);
000cf0  69b4              LDR      r4,[r6,#0x18]
000cf2  6827              LDR      r7,[r4,#0]
000cf4  f8d48004          LDR      r8,[r4,#4]
;;;698    
;;;699      INPUT_2BYTES(cinfo, length, return FALSE);
000cf8  bf00              NOP      
000cfa  f1b80f00          CMP      r8,#0
000cfe  d10c              BNE      |L1.3354|
000d00  4630              MOV      r0,r6
000d02  68e1              LDR      r1,[r4,#0xc]
000d04  4788              BLX      r1
000d06  b928              CBNZ     r0,|L1.3348|
000d08  2000              MOVS     r0,#0
                  |L1.3338|
;;;700      length -= 2;
;;;701    
;;;702      /* get the interesting part of the marker data */
;;;703      if (length >= APPN_DATA_LEN)
;;;704        numtoread = APPN_DATA_LEN;
;;;705      else if (length > 0)
;;;706        numtoread = (unsigned int) length;
;;;707      else
;;;708        numtoread = 0;
;;;709      for (i = 0; i < numtoread; i++)
;;;710        INPUT_BYTE(cinfo, b[i], return FALSE);
;;;711      length -= numtoread;
;;;712    
;;;713      /* process it */
;;;714      switch (cinfo->unread_marker) {
;;;715      case M_APP0:
;;;716        examine_app0(cinfo, (JOCTET FAR *) b, numtoread, length);
;;;717        break;
;;;718      case M_APP14:
;;;719        examine_app14(cinfo, (JOCTET FAR *) b, numtoread, length);
;;;720        break;
;;;721      default:
;;;722        /* can't get here unless jpeg_save_markers chooses wrong processor */
;;;723        ERREXIT1(cinfo, JERR_UNKNOWN_MARKER, cinfo->unread_marker);
;;;724        break;
;;;725      }
;;;726    
;;;727      /* skip any remaining data -- could be lots */
;;;728      INPUT_SYNC(cinfo);
;;;729      if (length > 0)
;;;730        (*cinfo->src->skip_input_data) (cinfo, (long) length);
;;;731    
;;;732      return TRUE;
;;;733    }
000d0a  b004              ADD      sp,sp,#0x10
000d0c  e8bd87f0          POP      {r4-r10,pc}
                  |L1.3344|
                          DCD      jpeg_natural_order
                  |L1.3348|
000d14  6827              LDR      r7,[r4,#0]            ;699
000d16  f8d48004          LDR      r8,[r4,#4]            ;699
                  |L1.3354|
000d1a  f1a80801          SUB      r8,r8,#1              ;699
000d1e  f8171b01          LDRB     r1,[r7],#1            ;699
000d22  020d              LSLS     r5,r1,#8              ;699
000d24  f1b80f00          CMP      r8,#0                 ;699
000d28  d108              BNE      |L1.3388|
000d2a  4630              MOV      r0,r6                 ;699
000d2c  68e1              LDR      r1,[r4,#0xc]          ;699
000d2e  4788              BLX      r1                    ;699
000d30  b908              CBNZ     r0,|L1.3382|
000d32  2000              MOVS     r0,#0                 ;699
000d34  e7e9              B        |L1.3338|
                  |L1.3382|
000d36  6827              LDR      r7,[r4,#0]            ;699
000d38  f8d48004          LDR      r8,[r4,#4]            ;699
                  |L1.3388|
000d3c  f1a80801          SUB      r8,r8,#1              ;699
000d40  f8171b01          LDRB     r1,[r7],#1            ;699
000d44  440d              ADD      r5,r5,r1              ;699
000d46  bf00              NOP                            ;699
000d48  1ead              SUBS     r5,r5,#2              ;700
000d4a  2d0e              CMP      r5,#0xe               ;703
000d4c  db02              BLT      |L1.3412|
000d4e  f04f090e          MOV      r9,#0xe               ;704
000d52  e005              B        |L1.3424|
                  |L1.3412|
000d54  2d00              CMP      r5,#0                 ;705
000d56  dd01              BLE      |L1.3420|
000d58  46a9              MOV      r9,r5                 ;706
000d5a  e001              B        |L1.3424|
                  |L1.3420|
000d5c  f04f0900          MOV      r9,#0                 ;708
                  |L1.3424|
000d60  f04f0a00          MOV      r10,#0                ;709
000d64  e015              B        |L1.3474|
                  |L1.3430|
000d66  bf00              NOP                            ;710
000d68  f1b80f00          CMP      r8,#0                 ;710
000d6c  d108              BNE      |L1.3456|
000d6e  4630              MOV      r0,r6                 ;710
000d70  68e1              LDR      r1,[r4,#0xc]          ;710
000d72  4788              BLX      r1                    ;710
000d74  b908              CBNZ     r0,|L1.3450|
000d76  2000              MOVS     r0,#0                 ;710
000d78  e7c7              B        |L1.3338|
                  |L1.3450|
000d7a  6827              LDR      r7,[r4,#0]            ;710
000d7c  f8d48004          LDR      r8,[r4,#4]            ;710
                  |L1.3456|
000d80  f1a80801          SUB      r8,r8,#1              ;710
000d84  f8170b01          LDRB     r0,[r7],#1            ;710
000d88  f80d000a          STRB     r0,[sp,r10]           ;710
000d8c  bf00              NOP                            ;710
000d8e  f10a0a01          ADD      r10,r10,#1            ;709
                  |L1.3474|
000d92  45ca              CMP      r10,r9                ;709
000d94  d3e7              BCC      |L1.3430|
000d96  eba50509          SUB      r5,r5,r9              ;711
000d9a  f8d601a0          LDR      r0,[r6,#0x1a0]        ;714
000d9e  28e0              CMP      r0,#0xe0              ;714
000da0  d002              BEQ      |L1.3496|
000da2  28ee              CMP      r0,#0xee              ;714
000da4  d10e              BNE      |L1.3524|
000da6  e006              B        |L1.3510|
                  |L1.3496|
000da8  462b              MOV      r3,r5                 ;716
000daa  464a              MOV      r2,r9                 ;716
000dac  4669              MOV      r1,sp                 ;716
000dae  4630              MOV      r0,r6                 ;716
000db0  f7fffffe          BL       examine_app0
000db4  e012              B        |L1.3548|
                  |L1.3510|
000db6  462b              MOV      r3,r5                 ;719
000db8  464a              MOV      r2,r9                 ;719
000dba  4669              MOV      r1,sp                 ;719
000dbc  4630              MOV      r0,r6                 ;719
000dbe  f7fffffe          BL       examine_app14
000dc2  e00b              B        |L1.3548|
                  |L1.3524|
000dc4  2044              MOVS     r0,#0x44              ;723
000dc6  6831              LDR      r1,[r6,#0]            ;723
000dc8  6148              STR      r0,[r1,#0x14]         ;723
000dca  6831              LDR      r1,[r6,#0]            ;723
000dcc  f8d601a0          LDR      r0,[r6,#0x1a0]        ;723
000dd0  6188              STR      r0,[r1,#0x18]         ;723
000dd2  6830              LDR      r0,[r6,#0]            ;723
000dd4  6801              LDR      r1,[r0,#0]            ;723
000dd6  4630              MOV      r0,r6                 ;723
000dd8  4788              BLX      r1                    ;723
000dda  bf00              NOP                            ;724
                  |L1.3548|
000ddc  bf00              NOP                            ;717
000dde  6027              STR      r7,[r4,#0]            ;728
000de0  f8c48004          STR      r8,[r4,#4]            ;728
000de4  2d00              CMP      r5,#0                 ;729
000de6  dd04              BLE      |L1.3570|
000de8  69b0              LDR      r0,[r6,#0x18]         ;730
000dea  4629              MOV      r1,r5                 ;730
000dec  6902              LDR      r2,[r0,#0x10]         ;730
000dee  4630              MOV      r0,r6                 ;730
000df0  4790              BLX      r2                    ;730
                  |L1.3570|
000df2  2001              MOVS     r0,#1                 ;732
000df4  e789              B        |L1.3338|
;;;734    
                          ENDP

                  skip_variable PROC
;;;844    METHODDEF(boolean)
;;;845    skip_variable (j_decompress_ptr cinfo)
000df6  e92d41f0          PUSH     {r4-r8,lr}
;;;846    /* Skip over an unknown or uninteresting variable-length marker */
;;;847    {
000dfa  4605              MOV      r5,r0
;;;848      INT32 length;
;;;849      INPUT_VARS(cinfo);
000dfc  69ac              LDR      r4,[r5,#0x18]
000dfe  6827              LDR      r7,[r4,#0]
000e00  f8d48004          LDR      r8,[r4,#4]
;;;850    
;;;851      INPUT_2BYTES(cinfo, length, return FALSE);
000e04  bf00              NOP      
000e06  f1b80f00          CMP      r8,#0
000e0a  d109              BNE      |L1.3616|
000e0c  4628              MOV      r0,r5
000e0e  68e1              LDR      r1,[r4,#0xc]
000e10  4788              BLX      r1
000e12  b910              CBNZ     r0,|L1.3610|
000e14  2000              MOVS     r0,#0
                  |L1.3606|
;;;852      length -= 2;
;;;853      
;;;854      TRACEMS2(cinfo, 1, JTRC_MISC_MARKER, cinfo->unread_marker, (int) length);
;;;855    
;;;856      INPUT_SYNC(cinfo);		/* do before skip_input_data */
;;;857      if (length > 0)
;;;858        (*cinfo->src->skip_input_data) (cinfo, (long) length);
;;;859    
;;;860      return TRUE;
;;;861    }
000e16  e8bd81f0          POP      {r4-r8,pc}
                  |L1.3610|
000e1a  6827              LDR      r7,[r4,#0]            ;851
000e1c  f8d48004          LDR      r8,[r4,#4]            ;851
                  |L1.3616|
000e20  f1a80801          SUB      r8,r8,#1              ;851
000e24  f8171b01          LDRB     r1,[r7],#1            ;851
000e28  020e              LSLS     r6,r1,#8              ;851
000e2a  f1b80f00          CMP      r8,#0                 ;851
000e2e  d108              BNE      |L1.3650|
000e30  4628              MOV      r0,r5                 ;851
000e32  68e1              LDR      r1,[r4,#0xc]          ;851
000e34  4788              BLX      r1                    ;851
000e36  b908              CBNZ     r0,|L1.3644|
000e38  2000              MOVS     r0,#0                 ;851
000e3a  e7ec              B        |L1.3606|
                  |L1.3644|
000e3c  6827              LDR      r7,[r4,#0]            ;851
000e3e  f8d48004          LDR      r8,[r4,#4]            ;851
                  |L1.3650|
000e42  f1a80801          SUB      r8,r8,#1              ;851
000e46  f8171b01          LDRB     r1,[r7],#1            ;851
000e4a  440e              ADD      r6,r6,r1              ;851
000e4c  bf00              NOP                            ;851
000e4e  1eb6              SUBS     r6,r6,#2              ;852
000e50  205b              MOVS     r0,#0x5b              ;854
000e52  6829              LDR      r1,[r5,#0]            ;854
000e54  6148              STR      r0,[r1,#0x14]         ;854
000e56  6829              LDR      r1,[r5,#0]            ;854
000e58  f8d501a0          LDR      r0,[r5,#0x1a0]        ;854
000e5c  6188              STR      r0,[r1,#0x18]         ;854
000e5e  6828              LDR      r0,[r5,#0]            ;854
000e60  61c6              STR      r6,[r0,#0x1c]         ;854
000e62  6828              LDR      r0,[r5,#0]            ;854
000e64  2101              MOVS     r1,#1                 ;854
000e66  6842              LDR      r2,[r0,#4]            ;854
000e68  4628              MOV      r0,r5                 ;854
000e6a  4790              BLX      r2                    ;854
000e6c  6027              STR      r7,[r4,#0]            ;856
000e6e  f8c48004          STR      r8,[r4,#4]            ;856
000e72  2e00              CMP      r6,#0                 ;857
000e74  dd04              BLE      |L1.3712|
000e76  69a8              LDR      r0,[r5,#0x18]         ;858
000e78  4631              MOV      r1,r6                 ;858
000e7a  6902              LDR      r2,[r0,#0x10]         ;858
000e7c  4628              MOV      r0,r5                 ;858
000e7e  4790              BLX      r2                    ;858
                  |L1.3712|
000e80  2001              MOVS     r0,#1                 ;860
000e82  e7c8              B        |L1.3606|
;;;862    
                          ENDP

                  next_marker PROC
;;;873    LOCAL(boolean)
;;;874    next_marker (j_decompress_ptr cinfo)
000e84  e92d41f0          PUSH     {r4-r8,lr}
;;;875    {
000e88  4605              MOV      r5,r0
;;;876      int c;
;;;877      INPUT_VARS(cinfo);
000e8a  69ac              LDR      r4,[r5,#0x18]
000e8c  6826              LDR      r6,[r4,#0]
000e8e  6867              LDR      r7,[r4,#4]
;;;878    
;;;879      while(1) {
000e90  e048              B        |L1.3876|
                  |L1.3730|
;;;880        INPUT_BYTE(cinfo, c, return FALSE);
000e92  bf00              NOP      
000e94  b947              CBNZ     r7,|L1.3752|
000e96  4628              MOV      r0,r5
000e98  68e1              LDR      r1,[r4,#0xc]
000e9a  4788              BLX      r1
000e9c  b910              CBNZ     r0,|L1.3748|
000e9e  2000              MOVS     r0,#0
                  |L1.3744|
;;;881        /* Skip any non-FF bytes.
;;;882         * This may look a bit inefficient, but it will not occur in a valid file.
;;;883         * We sync after each discarded byte so that a suspending data source
;;;884         * can discard the byte from its buffer.
;;;885         */
;;;886        while (c != 0xFF) {
;;;887          cinfo->marker->discarded_bytes++;
;;;888          INPUT_SYNC(cinfo);
;;;889          INPUT_BYTE(cinfo, c, return FALSE);
;;;890        }
;;;891        /* This loop swallows any duplicate FF bytes.  Extra FFs are legal as
;;;892         * pad bytes, so don't count them in discarded_bytes.  We assume there
;;;893         * will not be so many consecutive FF bytes as to overflow a suspending
;;;894         * data source's input buffer.
;;;895         */
;;;896        do {
;;;897          INPUT_BYTE(cinfo, c, return FALSE);
;;;898        } while (c == 0xFF);
;;;899        if (c != 0)
;;;900          break;			/* found a valid marker, exit loop */
;;;901        /* Reach here if we found a stuffed-zero data sequence (FF/00).
;;;902         * Discard it and loop back to try again.
;;;903         */
;;;904        cinfo->marker->discarded_bytes += 2;
;;;905        INPUT_SYNC(cinfo);
;;;906      }
;;;907    
;;;908      if (cinfo->marker->discarded_bytes != 0) {
;;;909        WARNMS2(cinfo, JWRN_EXTRANEOUS_DATA, cinfo->marker->discarded_bytes, c);
;;;910        cinfo->marker->discarded_bytes = 0;
;;;911      }
;;;912    
;;;913      cinfo->unread_marker = c;
;;;914    
;;;915      INPUT_SYNC(cinfo);
;;;916      return TRUE;
;;;917    }
000ea0  e8bd81f0          POP      {r4-r8,pc}
                  |L1.3748|
000ea4  6826              LDR      r6,[r4,#0]            ;880
000ea6  6867              LDR      r7,[r4,#4]            ;880
                  |L1.3752|
000ea8  1e7f              SUBS     r7,r7,#1              ;880
000eaa  f8168b01          LDRB     r8,[r6],#1            ;880
000eae  bf00              NOP                            ;880
000eb0  e016              B        |L1.3808|
                  |L1.3762|
000eb2  f8d501b8          LDR      r0,[r5,#0x1b8]        ;887
000eb6  6980              LDR      r0,[r0,#0x18]         ;887
000eb8  1c40              ADDS     r0,r0,#1              ;887
000eba  f8d511b8          LDR      r1,[r5,#0x1b8]        ;887
000ebe  6188              STR      r0,[r1,#0x18]         ;887
000ec0  6026              STR      r6,[r4,#0]            ;888
000ec2  6067              STR      r7,[r4,#4]            ;888
000ec4  bf00              NOP                            ;889
000ec6  b93f              CBNZ     r7,|L1.3800|
000ec8  4628              MOV      r0,r5                 ;889
000eca  68e1              LDR      r1,[r4,#0xc]          ;889
000ecc  4788              BLX      r1                    ;889
000ece  b908              CBNZ     r0,|L1.3796|
000ed0  2000              MOVS     r0,#0                 ;889
000ed2  e7e5              B        |L1.3744|
                  |L1.3796|
000ed4  6826              LDR      r6,[r4,#0]            ;889
000ed6  6867              LDR      r7,[r4,#4]            ;889
                  |L1.3800|
000ed8  1e7f              SUBS     r7,r7,#1              ;889
000eda  f8168b01          LDRB     r8,[r6],#1            ;889
000ede  bf00              NOP                            ;889
                  |L1.3808|
000ee0  f1b80fff          CMP      r8,#0xff              ;886
000ee4  d1e5              BNE      |L1.3762|
000ee6  bf00              NOP                            ;896
                  |L1.3816|
000ee8  bf00              NOP                            ;897
000eea  b93f              CBNZ     r7,|L1.3836|
000eec  4628              MOV      r0,r5                 ;897
000eee  68e1              LDR      r1,[r4,#0xc]          ;897
000ef0  4788              BLX      r1                    ;897
000ef2  b908              CBNZ     r0,|L1.3832|
000ef4  2000              MOVS     r0,#0                 ;897
000ef6  e7d3              B        |L1.3744|
                  |L1.3832|
000ef8  6826              LDR      r6,[r4,#0]            ;897
000efa  6867              LDR      r7,[r4,#4]            ;897
                  |L1.3836|
000efc  1e7f              SUBS     r7,r7,#1              ;897
000efe  f8168b01          LDRB     r8,[r6],#1            ;897
000f02  bf00              NOP                            ;897
000f04  f1b80fff          CMP      r8,#0xff              ;898
000f08  d0ee              BEQ      |L1.3816|
000f0a  f1b80f00          CMP      r8,#0                 ;899
000f0e  d000              BEQ      |L1.3858|
000f10  e009              B        |L1.3878|
                  |L1.3858|
000f12  f8d501b8          LDR      r0,[r5,#0x1b8]        ;904
000f16  6980              LDR      r0,[r0,#0x18]         ;904
000f18  1c80              ADDS     r0,r0,#2              ;904
000f1a  f8d511b8          LDR      r1,[r5,#0x1b8]        ;904
000f1e  6188              STR      r0,[r1,#0x18]         ;904
000f20  6026              STR      r6,[r4,#0]            ;905
000f22  6067              STR      r7,[r4,#4]            ;905
                  |L1.3876|
000f24  e7b5              B        |L1.3730|
                  |L1.3878|
000f26  bf00              NOP                            ;900
000f28  f8d501b8          LDR      r0,[r5,#0x1b8]        ;908
000f2c  6980              LDR      r0,[r0,#0x18]         ;908
000f2e  b1a0              CBZ      r0,|L1.3930|
000f30  2074              MOVS     r0,#0x74              ;909
000f32  6829              LDR      r1,[r5,#0]            ;909
000f34  6148              STR      r0,[r1,#0x14]         ;909
000f36  f8d501b8          LDR      r0,[r5,#0x1b8]        ;909
000f3a  6980              LDR      r0,[r0,#0x18]         ;909
000f3c  6829              LDR      r1,[r5,#0]            ;909
000f3e  6188              STR      r0,[r1,#0x18]         ;909
000f40  6828              LDR      r0,[r5,#0]            ;909
000f42  f8c0801c          STR      r8,[r0,#0x1c]         ;909
000f46  6828              LDR      r0,[r5,#0]            ;909
000f48  f04f31ff          MOV      r1,#0xffffffff        ;909
000f4c  6842              LDR      r2,[r0,#4]            ;909
000f4e  4628              MOV      r0,r5                 ;909
000f50  4790              BLX      r2                    ;909
000f52  2000              MOVS     r0,#0                 ;910
000f54  f8d511b8          LDR      r1,[r5,#0x1b8]        ;910
000f58  6188              STR      r0,[r1,#0x18]         ;910
                  |L1.3930|
000f5a  f8c581a0          STR      r8,[r5,#0x1a0]        ;913
000f5e  6026              STR      r6,[r4,#0]            ;915
000f60  6067              STR      r7,[r4,#4]            ;915
000f62  2001              MOVS     r0,#1                 ;916
000f64  e79c              B        |L1.3744|
;;;918    
                          ENDP

                  first_marker PROC
;;;920    LOCAL(boolean)
;;;921    first_marker (j_decompress_ptr cinfo)
000f66  e92d47f0          PUSH     {r4-r10,lr}
;;;922    /* Like next_marker, but used to obtain the initial SOI marker. */
;;;923    /* For this marker, we do not allow preceding garbage or fill; otherwise,
;;;924     * we might well scan an entire input file before realizing it ain't JPEG.
;;;925     * If an application wants to process non-JFIF files, it must seek to the
;;;926     * SOI before calling the JPEG library.
;;;927     */
;;;928    {
000f6a  4605              MOV      r5,r0
;;;929      int c, c2;
;;;930      INPUT_VARS(cinfo);
000f6c  69ac              LDR      r4,[r5,#0x18]
000f6e  6826              LDR      r6,[r4,#0]
000f70  6867              LDR      r7,[r4,#4]
;;;931    
;;;932      INPUT_BYTE(cinfo, c, return FALSE);
000f72  bf00              NOP      
000f74  b947              CBNZ     r7,|L1.3976|
000f76  4628              MOV      r0,r5
000f78  68e1              LDR      r1,[r4,#0xc]
000f7a  4788              BLX      r1
000f7c  b910              CBNZ     r0,|L1.3972|
000f7e  2000              MOVS     r0,#0
                  |L1.3968|
;;;933      INPUT_BYTE(cinfo, c2, return FALSE);
;;;934      if (c != 0xFF || c2 != (int) M_SOI)
;;;935        ERREXIT2(cinfo, JERR_NO_SOI, c, c2);
;;;936    
;;;937      cinfo->unread_marker = c2;
;;;938    
;;;939      INPUT_SYNC(cinfo);
;;;940      return TRUE;
;;;941    }
000f80  e8bd87f0          POP      {r4-r10,pc}
                  |L1.3972|
000f84  6826              LDR      r6,[r4,#0]            ;932
000f86  6867              LDR      r7,[r4,#4]            ;932
                  |L1.3976|
000f88  1e7f              SUBS     r7,r7,#1              ;932
000f8a  f8169b01          LDRB     r9,[r6],#1            ;932
000f8e  bf00              NOP                            ;932
000f90  bf00              NOP                            ;933
000f92  b93f              CBNZ     r7,|L1.4004|
000f94  4628              MOV      r0,r5                 ;933
000f96  68e1              LDR      r1,[r4,#0xc]          ;933
000f98  4788              BLX      r1                    ;933
000f9a  b908              CBNZ     r0,|L1.4000|
000f9c  2000              MOVS     r0,#0                 ;933
000f9e  e7ef              B        |L1.3968|
                  |L1.4000|
000fa0  6826              LDR      r6,[r4,#0]            ;933
000fa2  6867              LDR      r7,[r4,#4]            ;933
                  |L1.4004|
000fa4  1e7f              SUBS     r7,r7,#1              ;933
000fa6  f8168b01          LDRB     r8,[r6],#1            ;933
000faa  bf00              NOP                            ;933
000fac  f1b90fff          CMP      r9,#0xff              ;934
000fb0  d102              BNE      |L1.4024|
000fb2  f1b80fd8          CMP      r8,#0xd8              ;934
000fb6  d00c              BEQ      |L1.4050|
                  |L1.4024|
000fb8  2035              MOVS     r0,#0x35              ;935
000fba  6829              LDR      r1,[r5,#0]            ;935
000fbc  6148              STR      r0,[r1,#0x14]         ;935
000fbe  6828              LDR      r0,[r5,#0]            ;935
000fc0  f8c09018          STR      r9,[r0,#0x18]         ;935
000fc4  6828              LDR      r0,[r5,#0]            ;935
000fc6  f8c0801c          STR      r8,[r0,#0x1c]         ;935
000fca  6828              LDR      r0,[r5,#0]            ;935
000fcc  6801              LDR      r1,[r0,#0]            ;935
000fce  4628              MOV      r0,r5                 ;935
000fd0  4788              BLX      r1                    ;935
                  |L1.4050|
000fd2  f8c581a0          STR      r8,[r5,#0x1a0]        ;937
000fd6  6026              STR      r6,[r4,#0]            ;939
000fd8  6067              STR      r7,[r4,#4]            ;939
000fda  2001              MOVS     r0,#1                 ;940
000fdc  e7d0              B        |L1.3968|
;;;942    
                          ENDP

                  read_markers PROC
;;;951    METHODDEF(int)
;;;952    read_markers (j_decompress_ptr cinfo)
000fde  b510              PUSH     {r4,lr}
;;;953    {
000fe0  4604              MOV      r4,r0
;;;954      /* Outer loop repeats once for each marker. */
;;;955      while(1) {
000fe2  e122              B        |L1.4650|
                  |L1.4068|
;;;956        /* Collect the marker proper, unless we already did. */
;;;957        /* NB: first_marker() enforces the requirement that SOI appear first. */
;;;958        if (cinfo->unread_marker == 0) {
000fe4  f8d401a0          LDR      r0,[r4,#0x1a0]
000fe8  b978              CBNZ     r0,|L1.4106|
;;;959          if (! cinfo->marker->saw_SOI) {
000fea  f8d401b8          LDR      r0,[r4,#0x1b8]
000fee  68c0              LDR      r0,[r0,#0xc]
000ff0  b928              CBNZ     r0,|L1.4094|
;;;960    	if (! first_marker(cinfo))
000ff2  4620              MOV      r0,r4
000ff4  f7fffffe          BL       first_marker
000ff8  b938              CBNZ     r0,|L1.4106|
;;;961    	  return JPEG_SUSPENDED;
000ffa  2000              MOVS     r0,#0
                  |L1.4092|
;;;962          } else {
;;;963    	if (! next_marker(cinfo))
;;;964    	  return JPEG_SUSPENDED;
;;;965          }
;;;966        }
;;;967        /* At this point cinfo->unread_marker contains the marker code and the
;;;968         * input point is just past the marker proper, but before any parameters.
;;;969         * A suspension will cause us to return with this state still true.
;;;970         */
;;;971        switch (cinfo->unread_marker) {
;;;972        case M_SOI:
;;;973          if (! get_soi(cinfo))
;;;974    	return JPEG_SUSPENDED;
;;;975          break;
;;;976    
;;;977        case M_SOF0:		/* Baseline */
;;;978        case M_SOF1:		/* Extended sequential, Huffman */
;;;979          if (! get_sof(cinfo, FALSE, FALSE))
;;;980    	return JPEG_SUSPENDED;
;;;981          break;
;;;982    
;;;983        case M_SOF2:		/* Progressive, Huffman */
;;;984          if (! get_sof(cinfo, TRUE, FALSE))
;;;985    	return JPEG_SUSPENDED;
;;;986          break;
;;;987    
;;;988        case M_SOF9:		/* Extended sequential, arithmetic */
;;;989          if (! get_sof(cinfo, FALSE, TRUE))
;;;990    	return JPEG_SUSPENDED;
;;;991          break;
;;;992    
;;;993        case M_SOF10:		/* Progressive, arithmetic */
;;;994          if (! get_sof(cinfo, TRUE, TRUE))
;;;995    	return JPEG_SUSPENDED;
;;;996          break;
;;;997    
;;;998        /* Currently unsupported SOFn types */
;;;999        case M_SOF3:		/* Lossless, Huffman */
;;;1000       case M_SOF5:		/* Differential sequential, Huffman */
;;;1001       case M_SOF6:		/* Differential progressive, Huffman */
;;;1002       case M_SOF7:		/* Differential lossless, Huffman */
;;;1003       case M_JPG:			/* Reserved for JPEG extensions */
;;;1004       case M_SOF11:		/* Lossless, arithmetic */
;;;1005       case M_SOF13:		/* Differential sequential, arithmetic */
;;;1006       case M_SOF14:		/* Differential progressive, arithmetic */
;;;1007       case M_SOF15:		/* Differential lossless, arithmetic */
;;;1008         ERREXIT1(cinfo, JERR_SOF_UNSUPPORTED, cinfo->unread_marker);
;;;1009         break;
;;;1010   
;;;1011       case M_SOS:
;;;1012         if (! get_sos(cinfo))
;;;1013   	return JPEG_SUSPENDED;
;;;1014         cinfo->unread_marker = 0;	/* processed the marker */
;;;1015         return JPEG_REACHED_SOS;
;;;1016       
;;;1017       case M_EOI:
;;;1018         TRACEMS(cinfo, 1, JTRC_EOI);
;;;1019         cinfo->unread_marker = 0;	/* processed the marker */
;;;1020         return JPEG_REACHED_EOI;
;;;1021         
;;;1022       case M_DAC:
;;;1023         if (! get_dac(cinfo))
;;;1024   	return JPEG_SUSPENDED;
;;;1025         break;
;;;1026         
;;;1027       case M_DHT:
;;;1028         if (! get_dht(cinfo))
;;;1029   	return JPEG_SUSPENDED;
;;;1030         break;
;;;1031         
;;;1032       case M_DQT:
;;;1033         if (! get_dqt(cinfo))
;;;1034   	return JPEG_SUSPENDED;
;;;1035         break;
;;;1036         
;;;1037       case M_DRI:
;;;1038         if (! get_dri(cinfo))
;;;1039   	return JPEG_SUSPENDED;
;;;1040         break;
;;;1041         
;;;1042       case M_APP0:
;;;1043       case M_APP1:
;;;1044       case M_APP2:
;;;1045       case M_APP3:
;;;1046       case M_APP4:
;;;1047       case M_APP5:
;;;1048       case M_APP6:
;;;1049       case M_APP7:
;;;1050       case M_APP8:
;;;1051       case M_APP9:
;;;1052       case M_APP10:
;;;1053       case M_APP11:
;;;1054       case M_APP12:
;;;1055       case M_APP13:
;;;1056       case M_APP14:
;;;1057       case M_APP15:
;;;1058         if (! (*((my_marker_ptr) cinfo->marker)->process_APPn[
;;;1059   		cinfo->unread_marker - (int) M_APP0]) (cinfo))
;;;1060   	return JPEG_SUSPENDED;
;;;1061         break;
;;;1062         
;;;1063       case M_COM:
;;;1064         if (! (*((my_marker_ptr) cinfo->marker)->process_COM) (cinfo))
;;;1065   	return JPEG_SUSPENDED;
;;;1066         break;
;;;1067   
;;;1068       case M_RST0:		/* these are all parameterless */
;;;1069       case M_RST1:
;;;1070       case M_RST2:
;;;1071       case M_RST3:
;;;1072       case M_RST4:
;;;1073       case M_RST5:
;;;1074       case M_RST6:
;;;1075       case M_RST7:
;;;1076       case M_TEM:
;;;1077         TRACEMS1(cinfo, 1, JTRC_PARMLESS_MARKER, cinfo->unread_marker);
;;;1078         break;
;;;1079   
;;;1080       case M_DNL:			/* Ignore DNL ... perhaps the wrong thing */
;;;1081         if (! skip_variable(cinfo))
;;;1082   	return JPEG_SUSPENDED;
;;;1083         break;
;;;1084   
;;;1085       default:			/* must be DHP, EXP, JPGn, or RESn */
;;;1086         /* For now, we treat the reserved markers as fatal errors since they are
;;;1087          * likely to be used to signal incompatible JPEG Part 3 extensions.
;;;1088          * Once the JPEG 3 version-number marker is well defined, this code
;;;1089          * ought to change!
;;;1090          */
;;;1091         ERREXIT1(cinfo, JERR_UNKNOWN_MARKER, cinfo->unread_marker);
;;;1092         break;
;;;1093       }
;;;1094       /* Successfully processed marker, so reset state variable */
;;;1095       cinfo->unread_marker = 0;
;;;1096     } /* end loop */
;;;1097   }
000ffc  bd10              POP      {r4,pc}
                  |L1.4094|
000ffe  4620              MOV      r0,r4                 ;963
001000  f7fffffe          BL       next_marker
001004  b908              CBNZ     r0,|L1.4106|
001006  2000              MOVS     r0,#0                 ;964
001008  e7f8              B        |L1.4092|
                  |L1.4106|
00100a  f8d401a0          LDR      r0,[r4,#0x1a0]        ;971
00100e  28d7              CMP      r0,#0xd7              ;971
001010  d07e              BEQ      |L1.4368|
001012  dc27              BGT      |L1.4196|
001014  28cb              CMP      r0,#0xcb              ;971
001016  d06f              BEQ      |L1.4344|
001018  dc19              BGT      |L1.4174|
00101a  28c5              CMP      r0,#0xc5              ;971
00101c  d068              BEQ      |L1.4336|
00101e  dc0e              BGT      |L1.4158|
001020  28c2              CMP      r0,#0xc2              ;971
001022  d049              BEQ      |L1.4280|
001024  dc06              BGT      |L1.4148|
001026  2801              CMP      r0,#1                 ;971
001028  d073              BEQ      |L1.4370|
00102a  28c0              CMP      r0,#0xc0              ;971
00102c  d03a              BEQ      |L1.4260|
00102e  28c1              CMP      r0,#0xc1              ;971
                  |L1.4144|
001030  d170              BNE      |L1.4372|
001032  e038              B        |L1.4262|
                  |L1.4148|
001034  28c3              CMP      r0,#0xc3              ;971
001036  d05a              BEQ      |L1.4334|
001038  28c4              CMP      r0,#0xc4              ;971
00103a  d1f9              BNE      |L1.4144|
00103c  e08e              B        |L1.4444|
                  |L1.4158|
00103e  38c6              SUBS     r0,r0,#0xc6           ;971
001040  2805              CMP      r0,#5                 ;971
                  |L1.4162|
001042  d267              BCS      |L1.4372|
001044  e8dff000          TBB      [pc,r0]               ;971
001048  55565741          DCB      0x55,0x56,0x57,0x41
00104c  4a00              DCB      0x4a,0x00
                  |L1.4174|
00104e  38cc              SUBS     r0,r0,#0xcc           ;971
001050  280b              CMP      r0,#0xb               ;971
001052  d2f6              BCS      |L1.4162|
001054  e8dff000          TBB      [pc,r0]               ;971
001058  7b515253          DCB      0x7b,0x51,0x52,0x53
00105c  bdbebfc0          DCB      0xbd,0xbe,0xbf,0xc0
001060  c1c2c300          DCB      0xc1,0xc2,0xc3,0x00
                  |L1.4196|
001064  38d8              SUBS     r0,r0,#0xd8           ;971
001066  2827              CMP      r0,#0x27              ;971
001068  d2eb              BCS      |L1.4162|
00106a  e8dff000          TBB      [pc,r0]               ;971
00106e  1463              DCB      0x14,0x63
001070  587ec785          DCB      0x58,0x7e,0xc7,0x85
001074  cece8c8d          DCB      0xce,0xce,0x8c,0x8d
001078  8e8f9091          DCB      0x8e,0x8f,0x90,0x91
00107c  92939495          DCB      0x92,0x93,0x94,0x95
001080  96979899          DCB      0x96,0x97,0x98,0x99
001084  9a9bcece          DCB      0x9a,0x9b,0xce,0xce
001088  cececece          DCB      0xce,0xce,0xce,0xce
00108c  cececece          DCB      0xce,0xce,0xce,0xce
001090  cececece          DCB      0xce,0xce,0xce,0xce
001094  a900              DCB      0xa9,0x00
001096  4620              MOV      r0,r4                 ;973
001098  f7fffffe          BL       get_soi
00109c  b908              CBNZ     r0,|L1.4258|
00109e  2000              MOVS     r0,#0                 ;974
0010a0  e7ac              B        |L1.4092|
                  |L1.4258|
0010a2  e0be              B        |L1.4642|
                  |L1.4260|
0010a4  bf00              NOP                            ;978
                  |L1.4262|
0010a6  2200              MOVS     r2,#0                 ;979
0010a8  4611              MOV      r1,r2                 ;979
0010aa  4620              MOV      r0,r4                 ;979
0010ac  f7fffffe          BL       get_sof
0010b0  b908              CBNZ     r0,|L1.4278|
0010b2  2000              MOVS     r0,#0                 ;980
0010b4  e7a2              B        |L1.4092|
                  |L1.4278|
0010b6  e0b4              B        |L1.4642|
                  |L1.4280|
0010b8  2200              MOVS     r2,#0                 ;984
0010ba  2101              MOVS     r1,#1                 ;984
0010bc  4620              MOV      r0,r4                 ;984
0010be  f7fffffe          BL       get_sof
0010c2  b908              CBNZ     r0,|L1.4296|
0010c4  2000              MOVS     r0,#0                 ;985
0010c6  e799              B        |L1.4092|
                  |L1.4296|
0010c8  e0ab              B        |L1.4642|
0010ca  2201              MOVS     r2,#1                 ;989
0010cc  2100              MOVS     r1,#0                 ;989
0010ce  4620              MOV      r0,r4                 ;989
0010d0  f7fffffe          BL       get_sof
0010d4  b908              CBNZ     r0,|L1.4314|
0010d6  2000              MOVS     r0,#0                 ;990
0010d8  e790              B        |L1.4092|
                  |L1.4314|
0010da  e0a2              B        |L1.4642|
0010dc  2201              MOVS     r2,#1                 ;994
0010de  4611              MOV      r1,r2                 ;994
0010e0  4620              MOV      r0,r4                 ;994
0010e2  f7fffffe          BL       get_sof
0010e6  b908              CBNZ     r0,|L1.4332|
0010e8  2000              MOVS     r0,#0                 ;995
0010ea  e787              B        |L1.4092|
                  |L1.4332|
0010ec  e099              B        |L1.4642|
                  |L1.4334|
0010ee  bf00              NOP                            ;1000
                  |L1.4336|
0010f0  bf00              NOP                            ;1001
0010f2  bf00              NOP                            ;1002
0010f4  bf00              NOP                            ;1003
0010f6  bf00              NOP                            ;1004
                  |L1.4344|
0010f8  bf00              NOP                            ;1005
0010fa  bf00              NOP                            ;1006
0010fc  bf00              NOP                            ;1007
0010fe  203c              MOVS     r0,#0x3c              ;1008
001100  6821              LDR      r1,[r4,#0]            ;1008
001102  6148              STR      r0,[r1,#0x14]         ;1008
001104  6821              LDR      r1,[r4,#0]            ;1008
001106  f8d401a0          LDR      r0,[r4,#0x1a0]        ;1008
00110a  6188              STR      r0,[r1,#0x18]         ;1008
00110c  6820              LDR      r0,[r4,#0]            ;1008
00110e  e002              B        |L1.4374|
                  |L1.4368|
001110  e066              B        |L1.4576|
                  |L1.4370|
001112  e066              B        |L1.4578|
                  |L1.4372|
001114  e079              B        |L1.4618|
                  |L1.4374|
001116  6801              LDR      r1,[r0,#0]            ;1008
001118  4620              MOV      r0,r4                 ;1008
00111a  4788              BLX      r1                    ;1008
00111c  e081              B        |L1.4642|
00111e  4620              MOV      r0,r4                 ;1012
001120  f7fffffe          BL       get_sos
001124  b908              CBNZ     r0,|L1.4394|
001126  2000              MOVS     r0,#0                 ;1013
001128  e768              B        |L1.4092|
                  |L1.4394|
00112a  2000              MOVS     r0,#0                 ;1014
00112c  f8c401a0          STR      r0,[r4,#0x1a0]        ;1014
001130  2001              MOVS     r0,#1                 ;1015
001132  e763              B        |L1.4092|
001134  2055              MOVS     r0,#0x55              ;1018
001136  6821              LDR      r1,[r4,#0]            ;1018
001138  6148              STR      r0,[r1,#0x14]         ;1018
00113a  6820              LDR      r0,[r4,#0]            ;1018
00113c  2101              MOVS     r1,#1                 ;1018
00113e  6842              LDR      r2,[r0,#4]            ;1018
001140  4620              MOV      r0,r4                 ;1018
001142  4790              BLX      r2                    ;1018
001144  2000              MOVS     r0,#0                 ;1019
001146  f8c401a0          STR      r0,[r4,#0x1a0]        ;1019
00114a  2002              MOVS     r0,#2                 ;1020
00114c  e756              B        |L1.4092|
00114e  4620              MOV      r0,r4                 ;1023
001150  f7fffffe          BL       skip_variable
001154  b908              CBNZ     r0,|L1.4442|
001156  2000              MOVS     r0,#0                 ;1024
001158  e750              B        |L1.4092|
                  |L1.4442|
00115a  e062              B        |L1.4642|
                  |L1.4444|
00115c  4620              MOV      r0,r4                 ;1028
00115e  f7fffffe          BL       get_dht
001162  b908              CBNZ     r0,|L1.4456|
001164  2000              MOVS     r0,#0                 ;1029
001166  e749              B        |L1.4092|
                  |L1.4456|
001168  e05b              B        |L1.4642|
00116a  4620              MOV      r0,r4                 ;1033
00116c  f7fffffe          BL       get_dqt
001170  b908              CBNZ     r0,|L1.4470|
001172  2000              MOVS     r0,#0                 ;1034
001174  e742              B        |L1.4092|
                  |L1.4470|
001176  e054              B        |L1.4642|
001178  4620              MOV      r0,r4                 ;1038
00117a  f7fffffe          BL       get_dri
00117e  b908              CBNZ     r0,|L1.4484|
001180  2000              MOVS     r0,#0                 ;1039
001182  e73b              B        |L1.4092|
                  |L1.4484|
001184  e04d              B        |L1.4642|
001186  bf00              NOP                            ;1043
001188  bf00              NOP                            ;1044
00118a  bf00              NOP                            ;1045
00118c  bf00              NOP                            ;1046
00118e  bf00              NOP                            ;1047
001190  bf00              NOP                            ;1048
001192  bf00              NOP                            ;1049
001194  bf00              NOP                            ;1050
001196  bf00              NOP                            ;1051
001198  bf00              NOP                            ;1052
00119a  bf00              NOP                            ;1053
00119c  bf00              NOP                            ;1054
00119e  bf00              NOP                            ;1055
0011a0  bf00              NOP                            ;1056
0011a2  bf00              NOP                            ;1057
0011a4  f8d401b8          LDR      r0,[r4,#0x1b8]        ;1058
0011a8  3020              ADDS     r0,r0,#0x20           ;1058
0011aa  f8d421a0          LDR      r2,[r4,#0x1a0]        ;1058
0011ae  3ae0              SUBS     r2,r2,#0xe0           ;1058
0011b0  f8501022          LDR      r1,[r0,r2,LSL #2]     ;1058
0011b4  4620              MOV      r0,r4                 ;1058
0011b6  4788              BLX      r1                    ;1058
0011b8  b908              CBNZ     r0,|L1.4542|
0011ba  2000              MOVS     r0,#0                 ;1060
0011bc  e71e              B        |L1.4092|
                  |L1.4542|
0011be  e030              B        |L1.4642|
0011c0  f8d401b8          LDR      r0,[r4,#0x1b8]        ;1064
0011c4  69c1              LDR      r1,[r0,#0x1c]         ;1064
0011c6  4620              MOV      r0,r4                 ;1064
0011c8  4788              BLX      r1                    ;1064
0011ca  b908              CBNZ     r0,|L1.4560|
0011cc  2000              MOVS     r0,#0                 ;1065
0011ce  e715              B        |L1.4092|
                  |L1.4560|
0011d0  e027              B        |L1.4642|
0011d2  bf00              NOP                            ;1069
0011d4  bf00              NOP                            ;1070
0011d6  bf00              NOP                            ;1071
0011d8  bf00              NOP                            ;1072
0011da  bf00              NOP                            ;1073
0011dc  bf00              NOP                            ;1074
0011de  bf00              NOP                            ;1075
                  |L1.4576|
0011e0  bf00              NOP                            ;1076
                  |L1.4578|
0011e2  205c              MOVS     r0,#0x5c              ;1077
0011e4  6821              LDR      r1,[r4,#0]            ;1077
0011e6  6148              STR      r0,[r1,#0x14]         ;1077
0011e8  6821              LDR      r1,[r4,#0]            ;1077
0011ea  f8d401a0          LDR      r0,[r4,#0x1a0]        ;1077
0011ee  6188              STR      r0,[r1,#0x18]         ;1077
0011f0  6820              LDR      r0,[r4,#0]            ;1077
0011f2  2101              MOVS     r1,#1                 ;1077
0011f4  6842              LDR      r2,[r0,#4]            ;1077
0011f6  4620              MOV      r0,r4                 ;1077
0011f8  4790              BLX      r2                    ;1077
0011fa  e012              B        |L1.4642|
0011fc  4620              MOV      r0,r4                 ;1081
0011fe  f7fffffe          BL       skip_variable
001202  b908              CBNZ     r0,|L1.4616|
001204  2000              MOVS     r0,#0                 ;1082
001206  e6f9              B        |L1.4092|
                  |L1.4616|
001208  e00b              B        |L1.4642|
                  |L1.4618|
00120a  2044              MOVS     r0,#0x44              ;1091
00120c  6821              LDR      r1,[r4,#0]            ;1091
00120e  6148              STR      r0,[r1,#0x14]         ;1091
001210  6821              LDR      r1,[r4,#0]            ;1091
001212  f8d401a0          LDR      r0,[r4,#0x1a0]        ;1091
001216  6188              STR      r0,[r1,#0x18]         ;1091
001218  6820              LDR      r0,[r4,#0]            ;1091
00121a  6801              LDR      r1,[r0,#0]            ;1091
00121c  4620              MOV      r0,r4                 ;1091
00121e  4788              BLX      r1                    ;1091
001220  bf00              NOP                            ;1092
                  |L1.4642|
001222  bf00              NOP                            ;975
001224  2000              MOVS     r0,#0                 ;1095
001226  f8c401a0          STR      r0,[r4,#0x1a0]        ;1095
                  |L1.4650|
00122a  e6db              B        |L1.4068|
;;;1098   
                          ENDP

                  read_restart_marker PROC
;;;1112   METHODDEF(boolean)
;;;1113   read_restart_marker (j_decompress_ptr cinfo)
00122c  b510              PUSH     {r4,lr}
;;;1114   {
00122e  4604              MOV      r4,r0
;;;1115     /* Obtain a marker unless we already did. */
;;;1116     /* Note that next_marker will complain if it skips any data. */
;;;1117     if (cinfo->unread_marker == 0) {
001230  f8d401a0          LDR      r0,[r4,#0x1a0]
001234  b928              CBNZ     r0,|L1.4674|
;;;1118       if (! next_marker(cinfo))
001236  4620              MOV      r0,r4
001238  f7fffffe          BL       next_marker
00123c  b908              CBNZ     r0,|L1.4674|
;;;1119         return FALSE;
00123e  2000              MOVS     r0,#0
                  |L1.4672|
;;;1120     }
;;;1121   
;;;1122     if (cinfo->unread_marker ==
;;;1123         ((int) M_RST0 + cinfo->marker->next_restart_num)) {
;;;1124       /* Normal case --- swallow the marker and let entropy decoder continue */
;;;1125       TRACEMS1(cinfo, 3, JTRC_RST, cinfo->marker->next_restart_num);
;;;1126       cinfo->unread_marker = 0;
;;;1127     } else {
;;;1128       /* Uh-oh, the restart markers have been messed up. */
;;;1129       /* Let the data source manager determine how to resync. */
;;;1130       if (! (*cinfo->src->resync_to_restart) (cinfo,
;;;1131   					    cinfo->marker->next_restart_num))
;;;1132         return FALSE;
;;;1133     }
;;;1134   
;;;1135     /* Update next-restart state */
;;;1136     cinfo->marker->next_restart_num = (cinfo->marker->next_restart_num + 1) & 7;
;;;1137   
;;;1138     return TRUE;
;;;1139   }
001240  bd10              POP      {r4,pc}
                  |L1.4674|
001242  f8d411a0          LDR      r1,[r4,#0x1a0]        ;1122
001246  f8d401b8          LDR      r0,[r4,#0x1b8]        ;1122
00124a  6940              LDR      r0,[r0,#0x14]         ;1122
00124c  30d0              ADDS     r0,r0,#0xd0           ;1122
00124e  4281              CMP      r1,r0                 ;1122
001250  d110              BNE      |L1.4724|
001252  2062              MOVS     r0,#0x62              ;1125
001254  6821              LDR      r1,[r4,#0]            ;1125
001256  6148              STR      r0,[r1,#0x14]         ;1125
001258  f8d401b8          LDR      r0,[r4,#0x1b8]        ;1125
00125c  6940              LDR      r0,[r0,#0x14]         ;1125
00125e  6821              LDR      r1,[r4,#0]            ;1125
001260  6188              STR      r0,[r1,#0x18]         ;1125
001262  6820              LDR      r0,[r4,#0]            ;1125
001264  2103              MOVS     r1,#3                 ;1125
001266  6842              LDR      r2,[r0,#4]            ;1125
001268  4620              MOV      r0,r4                 ;1125
00126a  4790              BLX      r2                    ;1125
00126c  2000              MOVS     r0,#0                 ;1126
00126e  f8c401a0          STR      r0,[r4,#0x1a0]        ;1126
001272  e009              B        |L1.4744|
                  |L1.4724|
001274  f8d401b8          LDR      r0,[r4,#0x1b8]        ;1130
001278  6941              LDR      r1,[r0,#0x14]         ;1130
00127a  69a0              LDR      r0,[r4,#0x18]         ;1130
00127c  6942              LDR      r2,[r0,#0x14]         ;1130
00127e  4620              MOV      r0,r4                 ;1130
001280  4790              BLX      r2                    ;1130
001282  b908              CBNZ     r0,|L1.4744|
001284  2000              MOVS     r0,#0                 ;1132
001286  e7db              B        |L1.4672|
                  |L1.4744|
001288  f8d401b8          LDR      r0,[r4,#0x1b8]        ;1136
00128c  7d00              LDRB     r0,[r0,#0x14]         ;1136
00128e  1c40              ADDS     r0,r0,#1              ;1136
001290  f0000007          AND      r0,r0,#7              ;1136
001294  f8d411b8          LDR      r1,[r4,#0x1b8]        ;1136
001298  6148              STR      r0,[r1,#0x14]         ;1136
00129a  2001              MOVS     r0,#1                 ;1138
00129c  e7d0              B        |L1.4672|
;;;1140   
                          ENDP

                  jpeg_resync_to_restart PROC
;;;1191   GLOBAL(boolean)
;;;1192   jpeg_resync_to_restart (j_decompress_ptr cinfo, int desired)
00129e  e92d41f0          PUSH     {r4-r8,lr}
;;;1193   {
0012a2  4604              MOV      r4,r0
0012a4  460e              MOV      r6,r1
;;;1194     int marker = cinfo->unread_marker;
0012a6  f8d451a0          LDR      r5,[r4,#0x1a0]
;;;1195     int action;
;;;1196     
;;;1197     /* Always put up a warning. */
;;;1198     WARNMS2(cinfo, JWRN_MUST_RESYNC, marker, desired);
0012aa  2079              MOVS     r0,#0x79
0012ac  6821              LDR      r1,[r4,#0]
0012ae  6148              STR      r0,[r1,#0x14]
0012b0  6820              LDR      r0,[r4,#0]
0012b2  6185              STR      r5,[r0,#0x18]
0012b4  6820              LDR      r0,[r4,#0]
0012b6  61c6              STR      r6,[r0,#0x1c]
0012b8  6820              LDR      r0,[r4,#0]
0012ba  f04f31ff          MOV      r1,#0xffffffff
0012be  6842              LDR      r2,[r0,#4]
0012c0  4620              MOV      r0,r4
0012c2  4790              BLX      r2
;;;1199     
;;;1200     /* Outer loop handles repeated decision after scanning forward. */
;;;1201     while(1) {
0012c4  e04b              B        |L1.4958|
                  |L1.4806|
;;;1202       if (marker < (int) M_SOF0)
0012c6  2dc0              CMP      r5,#0xc0
0012c8  da01              BGE      |L1.4814|
;;;1203         action = 2;		/* invalid marker */
0012ca  2702              MOVS     r7,#2
0012cc  e022              B        |L1.4884|
                  |L1.4814|
;;;1204       else if (marker < (int) M_RST0 || marker > (int) M_RST7)
0012ce  2dd0              CMP      r5,#0xd0
0012d0  db01              BLT      |L1.4822|
0012d2  2dd7              CMP      r5,#0xd7
0012d4  dd01              BLE      |L1.4826|
                  |L1.4822|
;;;1205         action = 3;		/* valid non-restart marker */
0012d6  2703              MOVS     r7,#3
0012d8  e01c              B        |L1.4884|
                  |L1.4826|
;;;1206       else {
;;;1207         if (marker == ((int) M_RST0 + ((desired+1) & 7)) ||
0012da  1c70              ADDS     r0,r6,#1
0012dc  f0000007          AND      r0,r0,#7
0012e0  30d0              ADDS     r0,r0,#0xd0
0012e2  42a8              CMP      r0,r5
0012e4  d005              BEQ      |L1.4850|
;;;1208   	  marker == ((int) M_RST0 + ((desired+2) & 7)))
0012e6  1cb0              ADDS     r0,r6,#2
0012e8  f0000007          AND      r0,r0,#7
0012ec  30d0              ADDS     r0,r0,#0xd0
0012ee  42a8              CMP      r0,r5
0012f0  d101              BNE      |L1.4854|
                  |L1.4850|
;;;1209   	action = 3;		/* one of the next two expected restarts */
0012f2  2703              MOVS     r7,#3
0012f4  e00e              B        |L1.4884|
                  |L1.4854|
;;;1210         else if (marker == ((int) M_RST0 + ((desired-1) & 7)) ||
0012f6  1e70              SUBS     r0,r6,#1
0012f8  f0000007          AND      r0,r0,#7
0012fc  30d0              ADDS     r0,r0,#0xd0
0012fe  42a8              CMP      r0,r5
001300  d005              BEQ      |L1.4878|
;;;1211   	       marker == ((int) M_RST0 + ((desired-2) & 7)))
001302  1eb0              SUBS     r0,r6,#2
001304  f0000007          AND      r0,r0,#7
001308  30d0              ADDS     r0,r0,#0xd0
00130a  42a8              CMP      r0,r5
00130c  d101              BNE      |L1.4882|
                  |L1.4878|
;;;1212   	action = 2;		/* a prior restart, so advance */
00130e  2702              MOVS     r7,#2
001310  e000              B        |L1.4884|
                  |L1.4882|
;;;1213         else
;;;1214   	action = 1;		/* desired restart or too far away */
001312  2701              MOVS     r7,#1
                  |L1.4884|
;;;1215       }
;;;1216       TRACEMS2(cinfo, 4, JTRC_RECOVERY_ACTION, marker, action);
001314  2061              MOVS     r0,#0x61
001316  6821              LDR      r1,[r4,#0]
001318  6148              STR      r0,[r1,#0x14]
00131a  6820              LDR      r0,[r4,#0]
00131c  6185              STR      r5,[r0,#0x18]
00131e  6820              LDR      r0,[r4,#0]
001320  61c7              STR      r7,[r0,#0x1c]
001322  6820              LDR      r0,[r4,#0]
001324  2104              MOVS     r1,#4
001326  6842              LDR      r2,[r0,#4]
001328  4620              MOV      r0,r4
00132a  4790              BLX      r2
;;;1217       switch (action) {
00132c  2f01              CMP      r7,#1
00132e  d004              BEQ      |L1.4922|
001330  2f02              CMP      r7,#2
001332  d008              BEQ      |L1.4934|
001334  2f03              CMP      r7,#3
001336  d111              BNE      |L1.4956|
001338  e00e              B        |L1.4952|
                  |L1.4922|
;;;1218       case 1:
;;;1219         /* Discard marker and let entropy decoder resume processing. */
;;;1220         cinfo->unread_marker = 0;
00133a  2000              MOVS     r0,#0
00133c  f8c401a0          STR      r0,[r4,#0x1a0]
;;;1221         return TRUE;
001340  2001              MOVS     r0,#1
                  |L1.4930|
;;;1222       case 2:
;;;1223         /* Scan to the next marker, and repeat the decision loop. */
;;;1224         if (! next_marker(cinfo))
;;;1225   	return FALSE;
;;;1226         marker = cinfo->unread_marker;
;;;1227         break;
;;;1228       case 3:
;;;1229         /* Return without advancing past this marker. */
;;;1230         /* Entropy decoder will be forced to process an empty segment. */
;;;1231         return TRUE;
;;;1232       }
;;;1233     } /* end loop */
;;;1234   }
001342  e8bd81f0          POP      {r4-r8,pc}
                  |L1.4934|
001346  4620              MOV      r0,r4                 ;1224
001348  f7fffffe          BL       next_marker
00134c  b908              CBNZ     r0,|L1.4946|
00134e  2000              MOVS     r0,#0                 ;1225
001350  e7f7              B        |L1.4930|
                  |L1.4946|
001352  f8d451a0          LDR      r5,[r4,#0x1a0]        ;1226
001356  e001              B        |L1.4956|
                  |L1.4952|
001358  2001              MOVS     r0,#1                 ;1231
00135a  e7f2              B        |L1.4930|
                  |L1.4956|
00135c  bf00              NOP                            ;1227
                  |L1.4958|
00135e  e7b2              B        |L1.4806|
;;;1235   
                          ENDP

                  reset_marker_reader PROC
;;;1241   METHODDEF(void)
;;;1242   reset_marker_reader (j_decompress_ptr cinfo)
001360  f8d011b8          LDR      r1,[r0,#0x1b8]
;;;1243   {
;;;1244     my_marker_ptr marker = (my_marker_ptr) cinfo->marker;
;;;1245   
;;;1246     cinfo->comp_info = NULL;		/* until allocated by get_sof */
001364  2200              MOVS     r2,#0
001366  f8c020d8          STR      r2,[r0,#0xd8]
;;;1247     cinfo->input_scan_number = 0;		/* no SOS seen yet */
00136a  f8c02090          STR      r2,[r0,#0x90]
;;;1248     cinfo->unread_marker = 0;		/* no pending marker */
00136e  f8c021a0          STR      r2,[r0,#0x1a0]
;;;1249     marker->pub.saw_SOI = FALSE;		/* set internal state too */
001372  60ca              STR      r2,[r1,#0xc]
;;;1250     marker->pub.saw_SOF = FALSE;
001374  610a              STR      r2,[r1,#0x10]
;;;1251     marker->pub.discarded_bytes = 0;
001376  618a              STR      r2,[r1,#0x18]
;;;1252     marker->cur_marker = NULL;
001378  f8c120a4          STR      r2,[r1,#0xa4]
;;;1253   }
00137c  4770              BX       lr
;;;1254   
                          ENDP

                  jinit_marker_reader PROC
;;;1261   GLOBAL(void)
;;;1262   jinit_marker_reader (j_decompress_ptr cinfo)
00137e  b570              PUSH     {r4-r6,lr}
;;;1263   {
001380  4606              MOV      r6,r0
;;;1264     my_marker_ptr marker;
;;;1265     int i;
;;;1266   
;;;1267     /* Create subobject in permanent pool */
;;;1268     marker = (my_marker_ptr)
001382  6870              LDR      r0,[r6,#4]
001384  22ac              MOVS     r2,#0xac
001386  2100              MOVS     r1,#0
001388  6803              LDR      r3,[r0,#0]
00138a  4630              MOV      r0,r6
00138c  4798              BLX      r3
00138e  4604              MOV      r4,r0
;;;1269       (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_PERMANENT,
;;;1270   				SIZEOF(my_marker_reader));
;;;1271     cinfo->marker = (struct jpeg_marker_reader *) marker;
001390  f8c641b8          STR      r4,[r6,#0x1b8]
;;;1272     /* Initialize public method pointers */
;;;1273     marker->pub.reset_marker_reader = reset_marker_reader;
001394  4820              LDR      r0,|L1.5144|
001396  6020              STR      r0,[r4,#0]
;;;1274     marker->pub.read_markers = read_markers;
001398  4820              LDR      r0,|L1.5148|
00139a  6060              STR      r0,[r4,#4]
;;;1275     marker->pub.read_restart_marker = read_restart_marker;
00139c  4820              LDR      r0,|L1.5152|
00139e  60a0              STR      r0,[r4,#8]
;;;1276     /* Initialize COM/APPn processing.
;;;1277      * By default, we examine and then discard APP0 and APP14,
;;;1278      * but simply discard COM and all other APPn.
;;;1279      */
;;;1280     marker->process_COM = skip_variable;
0013a0  4820              LDR      r0,|L1.5156|
0013a2  61e0              STR      r0,[r4,#0x1c]
;;;1281     marker->length_limit_COM = 0;
0013a4  2000              MOVS     r0,#0
0013a6  6620              STR      r0,[r4,#0x60]
;;;1282     for (i = 0; i < 16; i++) {
0013a8  2500              MOVS     r5,#0
0013aa  e009              B        |L1.5056|
                  |L1.5036|
;;;1283       marker->process_APPn[i] = skip_variable;
0013ac  491d              LDR      r1,|L1.5156|
0013ae  f1040020          ADD      r0,r4,#0x20
0013b2  f8401025          STR      r1,[r0,r5,LSL #2]
;;;1284       marker->length_limit_APPn[i] = 0;
0013b6  2100              MOVS     r1,#0
0013b8  3044              ADDS     r0,r0,#0x44
0013ba  f8401025          STR      r1,[r0,r5,LSL #2]
0013be  1c6d              ADDS     r5,r5,#1              ;1282
                  |L1.5056|
0013c0  2d10              CMP      r5,#0x10              ;1282
0013c2  dbf3              BLT      |L1.5036|
;;;1285     }
;;;1286     marker->process_APPn[0] = get_interesting_appn;
0013c4  4818              LDR      r0,|L1.5160|
0013c6  6220              STR      r0,[r4,#0x20]
;;;1287     marker->process_APPn[14] = get_interesting_appn;
0013c8  4601              MOV      r1,r0
0013ca  65a1              STR      r1,[r4,#0x58]
;;;1288     /* Reset marker processing state */
;;;1289     reset_marker_reader(cinfo);
0013cc  4630              MOV      r0,r6
0013ce  f7fffffe          BL       reset_marker_reader
;;;1290   }
0013d2  bd70              POP      {r4-r6,pc}
;;;1291   
                          ENDP

                  jpeg_set_marker_processor PROC
;;;1348   GLOBAL(void)
;;;1349   jpeg_set_marker_processor (j_decompress_ptr cinfo, int marker_code,
0013d4  e92d41f0          PUSH     {r4-r8,lr}
;;;1350   			   jpeg_marker_parser_method routine)
;;;1351   {
0013d8  4605              MOV      r5,r0
0013da  460c              MOV      r4,r1
0013dc  4616              MOV      r6,r2
;;;1352     my_marker_ptr marker = (my_marker_ptr) cinfo->marker;
0013de  f8d571b8          LDR      r7,[r5,#0x1b8]
;;;1353   
;;;1354     if (marker_code == (int) M_COM)
0013e2  2cfe              CMP      r4,#0xfe
0013e4  d101              BNE      |L1.5098|
;;;1355       marker->process_COM = routine;
0013e6  61fe              STR      r6,[r7,#0x1c]
0013e8  e013              B        |L1.5138|
                  |L1.5098|
;;;1356     else if (marker_code >= (int) M_APP0 && marker_code <= (int) M_APP15)
0013ea  2ce0              CMP      r4,#0xe0
0013ec  db08              BLT      |L1.5120|
0013ee  2cef              CMP      r4,#0xef
0013f0  dc06              BGT      |L1.5120|
;;;1357       marker->process_APPn[marker_code - (int) M_APP0] = routine;
0013f2  f1a400e0          SUB      r0,r4,#0xe0
0013f6  f1070120          ADD      r1,r7,#0x20
0013fa  f8416020          STR      r6,[r1,r0,LSL #2]
0013fe  e008              B        |L1.5138|
                  |L1.5120|
;;;1358     else
;;;1359       ERREXIT1(cinfo, JERR_UNKNOWN_MARKER, marker_code);
001400  2044              MOVS     r0,#0x44
001402  6829              LDR      r1,[r5,#0]
001404  6148              STR      r0,[r1,#0x14]
001406  6828              LDR      r0,[r5,#0]
001408  6184              STR      r4,[r0,#0x18]
00140a  6828              LDR      r0,[r5,#0]
00140c  6801              LDR      r1,[r0,#0]
00140e  4628              MOV      r0,r5
001410  4788              BLX      r1
                  |L1.5138|
;;;1360   }
001412  e8bd81f0          POP      {r4-r8,pc}
                          ENDP

001416  0000              DCW      0x0000
                  |L1.5144|
                          DCD      reset_marker_reader
                  |L1.5148|
                          DCD      read_markers
                  |L1.5152|
                          DCD      read_restart_marker
                  |L1.5156|
                          DCD      skip_variable
                  |L1.5160|
                          DCD      get_interesting_appn

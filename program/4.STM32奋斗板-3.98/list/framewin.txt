; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\framewin.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\framewin.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -IC:\Users\Administrator\Desktop\gui\STM32·Ü¶·°å-3.98\RTE -Id:\Keil_v5\ARM\PACK\ARM\CMSIS\4.3.0\CMSIS\Include -Id:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.1.0\Device\Include -D__UVISION_VERSION=515 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\framewin.crf GUI\Widget\FRAMEWIN.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _SetActive PROC
;;;135    */
;;;136    static void _SetActive(FRAMEWIN_Handle hObj, int State) {
000000  b570              PUSH     {r4-r6,lr}
000002  4606              MOV      r6,r0
000004  460d              MOV      r5,r1
;;;137      FRAMEWIN_Obj* pObj;
;;;138      pObj = FRAMEWIN_H2P(hObj);
000006  4630              MOV      r0,r6
000008  f7fffffe          BL       GUI_ALLOC_h2p
00000c  4604              MOV      r4,r0
;;;139      if        (State && !(pObj->Flags & FRAMEWIN_SF_ACTIVE)) {
00000e  b175              CBZ      r5,|L1.46|
000010  f894005a          LDRB     r0,[r4,#0x5a]
000014  f0000008          AND      r0,r0,#8
000018  b948              CBNZ     r0,|L1.46|
;;;140        pObj->Flags |= FRAMEWIN_CF_ACTIVE;
00001a  f8b4005a          LDRH     r0,[r4,#0x5a]
00001e  f0400008          ORR      r0,r0,#8
000022  f8a4005a          STRH     r0,[r4,#0x5a]
;;;141        FRAMEWIN_Invalidate(hObj);
000026  4630              MOV      r0,r6
000028  f7fffffe          BL       WM_InvalidateWindow
00002c  e00e              B        |L1.76|
                  |L1.46|
;;;142      } else if (!State && (pObj->Flags & FRAMEWIN_SF_ACTIVE)) {
00002e  b96d              CBNZ     r5,|L1.76|
000030  f894005a          LDRB     r0,[r4,#0x5a]
000034  f0000008          AND      r0,r0,#8
000038  b140              CBZ      r0,|L1.76|
;;;143        pObj->Flags &= ~FRAMEWIN_CF_ACTIVE;
00003a  f8b4005a          LDRH     r0,[r4,#0x5a]
00003e  f0200008          BIC      r0,r0,#8
000042  f8a4005a          STRH     r0,[r4,#0x5a]
;;;144        FRAMEWIN_Invalidate(hObj);
000046  4630              MOV      r0,r6
000048  f7fffffe          BL       WM_InvalidateWindow
                  |L1.76|
;;;145      }
;;;146    }
00004c  bd70              POP      {r4-r6,pc}
;;;147    
                          ENDP

                  _OnTouch PROC
;;;151    */
;;;152    static void _OnTouch(FRAMEWIN_Handle hWin, FRAMEWIN_Obj* pObj, WM_MESSAGE* pMsg) {
00004e  e92d41f0          PUSH     {r4-r8,lr}
000052  4607              MOV      r7,r0
000054  460c              MOV      r4,r1
000056  4615              MOV      r5,r2
;;;153      const GUI_PID_STATE* pState;
;;;154      pState = (const GUI_PID_STATE*)pMsg->Data.p;
000058  68ae              LDR      r6,[r5,#8]
;;;155      if (pMsg->Data.p) {  /* Something happened in our area (pressed or released) */
00005a  68a8              LDR      r0,[r5,#8]
00005c  b308              CBZ      r0,|L1.162|
;;;156        if (pState->Pressed) {
00005e  7a30              LDRB     r0,[r6,#8]
000060  b1f8              CBZ      r0,|L1.162|
;;;157          if (!(pObj->Flags & FRAMEWIN_SF_ACTIVE)) {
000062  f894005a          LDRB     r0,[r4,#0x5a]
000066  f0000008          AND      r0,r0,#8
00006a  b910              CBNZ     r0,|L1.114|
;;;158            WM_SetFocus(hWin);
00006c  4638              MOV      r0,r7
00006e  f7fffffe          BL       WM_SetFocus
                  |L1.114|
;;;159          }
;;;160          WM_BringToTop(hWin);
000072  4638              MOV      r0,r7
000074  f7fffffe          BL       WM_BringToTop
;;;161          if (pObj->Flags & FRAMEWIN_SF_MOVEABLE) {
000078  f894005a          LDRB     r0,[r4,#0x5a]
00007c  f0000010          AND      r0,r0,#0x10
000080  b178              CBZ      r0,|L1.162|
;;;162            int LimitTop;
;;;163            #if (FRAMEWIN_ALLOW_DRAG_ON_FRAME)
;;;164            LimitTop = 0;
000082  f04f0800          MOV      r8,#0
;;;165            #else
;;;166            POSITIONS Pos;
;;;167            FRAMEWIN__CalcPositions(pObj, &Pos);
;;;168            LimitTop = pObj->Props.BorderSize + Pos.TitleHeight - 1 + pObj->Props.IBorderSize;
;;;169            if ((pState->y <= LimitTop) || WM_HasCaptured(hWin))
;;;170            #endif
;;;171            {
;;;172              if ((pObj->Flags & FRAMEWIN_SF_MAXIMIZED) == 0) {
000086  f894005a          LDRB     r0,[r4,#0x5a]
00008a  f0000080          AND      r0,r0,#0x80
00008e  b938              CBNZ     r0,|L1.160|
;;;173                WM_SetCaptureMove(hWin, pState, FRAMEWIN__MinVisibility, LimitTop);
000090  4643              MOV      r3,r8
000092  48f7              LDR      r0,|L1.1136|
000094  f9b02000          LDRSH    r2,[r0,#0]  ; FRAMEWIN__MinVisibility
000098  4631              MOV      r1,r6
00009a  4638              MOV      r0,r7
00009c  f7fffffe          BL       WM_SetCaptureMove
                  |L1.160|
;;;174              }
;;;175            }
;;;176          }
0000a0  bf00              NOP      
                  |L1.162|
;;;177        }
;;;178      }
;;;179    }
0000a2  e8bd81f0          POP      {r4-r8,pc}
;;;180    
                          ENDP

                  FRAMEWIN__CalcTitleHeight PROC
;;;366    */
;;;367    int FRAMEWIN__CalcTitleHeight(FRAMEWIN_Obj* pObj) {
0000a6  b570              PUSH     {r4-r6,lr}
0000a8  4604              MOV      r4,r0
;;;368      int r = 0;
0000aa  2500              MOVS     r5,#0
;;;369      if (pObj->Widget.State & FRAMEWIN_SF_TITLEVIS) {
0000ac  f8940026          LDRB     r0,[r4,#0x26]
0000b0  f0000020          AND      r0,r0,#0x20
0000b4  b130              CBZ      r0,|L1.196|
;;;370        r = pObj->Props.TitleHeight;
0000b6  f9b45040          LDRSH    r5,[r4,#0x40]
;;;371        if (r == 0) {
0000ba  b91d              CBNZ     r5,|L1.196|
;;;372          r = 2 + GUI_GetYSizeOfFont(pObj->Props.pFont);
0000bc  6aa0              LDR      r0,[r4,#0x28]
0000be  f7fffffe          BL       GUI_GetYSizeOfFont
0000c2  1c85              ADDS     r5,r0,#2
                  |L1.196|
;;;373        }
;;;374      }
;;;375      return r;
0000c4  4628              MOV      r0,r5
;;;376    }
0000c6  bd70              POP      {r4-r6,pc}
;;;377    
                          ENDP

                  FRAMEWIN__CalcPositions PROC
;;;381    */
;;;382    void FRAMEWIN__CalcPositions(FRAMEWIN_Obj* pObj, POSITIONS* pPos) {
0000c8  e92d4ff0          PUSH     {r4-r11,lr}
0000cc  b085              SUB      sp,sp,#0x14
0000ce  4605              MOV      r5,r0
0000d0  460c              MOV      r4,r1
;;;383      WM_HWIN hChild;
;;;384      WM_Obj* pChild;
;;;385      int TitleHeight;
;;;386      int MenuHeight = 0;
0000d2  2000              MOVS     r0,#0
0000d4  9004              STR      r0,[sp,#0x10]
;;;387      int IBorderSize = 0;
0000d6  9003              STR      r0,[sp,#0xc]
;;;388      int BorderSize;
;;;389      int xsize, ysize;
;;;390      int x0, x1, y0;
;;;391      BorderSize = pObj->Props.BorderSize;
0000d8  f9b56042          LDRSH    r6,[r5,#0x42]
;;;392      xsize = WM__GetWindowSizeX(&pObj->Widget.Win);
0000dc  4628              MOV      r0,r5
0000de  f7fffffe          BL       WM__GetWindowSizeX
0000e2  9002              STR      r0,[sp,#8]
;;;393      ysize = WM__GetWindowSizeY(&pObj->Widget.Win);
0000e4  4628              MOV      r0,r5
0000e6  f7fffffe          BL       WM__GetWindowSizeY
0000ea  9001              STR      r0,[sp,#4]
;;;394      if (pObj->Widget.State & FRAMEWIN_SF_TITLEVIS) {
0000ec  f8950026          LDRB     r0,[r5,#0x26]
0000f0  f0000020          AND      r0,r0,#0x20
0000f4  b110              CBZ      r0,|L1.252|
;;;395        IBorderSize = pObj->Props.IBorderSize;
0000f6  f9b50044          LDRSH    r0,[r5,#0x44]
0000fa  9003              STR      r0,[sp,#0xc]
                  |L1.252|
;;;396      }
;;;397      TitleHeight = FRAMEWIN__CalcTitleHeight(pObj);
0000fc  4628              MOV      r0,r5
0000fe  f7fffffe          BL       FRAMEWIN__CalcTitleHeight
000102  4680              MOV      r8,r0
;;;398      if (pObj->hMenu) {
000104  f8b5004e          LDRH     r0,[r5,#0x4e]
000108  b120              CBZ      r0,|L1.276|
;;;399        MenuHeight = WM_GetWindowSizeY(pObj->hMenu);
00010a  f9b5004e          LDRSH    r0,[r5,#0x4e]
00010e  f7fffffe          BL       WM_GetWindowSizeY
000112  9004              STR      r0,[sp,#0x10]
                  |L1.276|
;;;400      }
;;;401      pPos->TitleHeight = TitleHeight;
000114  fa0ff088          SXTH     r0,r8
000118  8020              STRH     r0,[r4,#0]
;;;402      pPos->MenuHeight  = MenuHeight;
00011a  9804              LDR      r0,[sp,#0x10]
00011c  b200              SXTH     r0,r0
00011e  8060              STRH     r0,[r4,#2]
;;;403      /* Set object properties accordingly */
;;;404      pPos->rClient.x0  =         BorderSize;
000120  b230              SXTH     r0,r6
000122  80a0              STRH     r0,[r4,#4]
;;;405      pPos->rClient.x1  = xsize - BorderSize - 1;
000124  9802              LDR      r0,[sp,#8]
000126  1b80              SUBS     r0,r0,r6
000128  1e40              SUBS     r0,r0,#1
00012a  b201              SXTH     r1,r0
00012c  8121              STRH     r1,[r4,#8]
;;;406      pPos->rClient.y0  =         BorderSize + IBorderSize + TitleHeight + MenuHeight;
00012e  9803              LDR      r0,[sp,#0xc]
000130  4430              ADD      r0,r0,r6
000132  eb000108          ADD      r1,r0,r8
000136  9804              LDR      r0,[sp,#0x10]
000138  4408              ADD      r0,r0,r1
00013a  b201              SXTH     r1,r0
00013c  80e1              STRH     r1,[r4,#6]
;;;407      pPos->rClient.y1  = ysize - BorderSize - 1;
00013e  9801              LDR      r0,[sp,#4]
000140  1b80              SUBS     r0,r0,r6
000142  1e40              SUBS     r0,r0,#1
000144  b201              SXTH     r1,r0
000146  8161              STRH     r1,[r4,#0xa]
;;;408      /* Calculate title rect */
;;;409      pPos->rTitleText.x0 =         BorderSize;
000148  b230              SXTH     r0,r6
00014a  81a0              STRH     r0,[r4,#0xc]
;;;410      pPos->rTitleText.x1 = xsize - BorderSize - 1;
00014c  9802              LDR      r0,[sp,#8]
00014e  1b80              SUBS     r0,r0,r6
000150  1e40              SUBS     r0,r0,#1
000152  b201              SXTH     r1,r0
000154  8221              STRH     r1,[r4,#0x10]
;;;411      pPos->rTitleText.y0 =         BorderSize;
000156  b231              SXTH     r1,r6
000158  81e1              STRH     r1,[r4,#0xe]
;;;412      pPos->rTitleText.y1 =         BorderSize + TitleHeight - 1;
00015a  eb060008          ADD      r0,r6,r8
00015e  1e40              SUBS     r0,r0,#1
000160  b201              SXTH     r1,r0
000162  8261              STRH     r1,[r4,#0x12]
;;;413      /* Iterate over all children */
;;;414      for (hChild = pObj->Widget.Win.hFirstChild; hChild; hChild = pChild->hNext) {
000164  f9b59018          LDRSH    r9,[r5,#0x18]
000168  e02f              B        |L1.458|
                  |L1.362|
;;;415        pChild = WM_H2P(hChild);
00016a  4648              MOV      r0,r9
00016c  f7fffffe          BL       GUI_ALLOC_h2p
000170  4607              MOV      r7,r0
;;;416        x0 = pChild->Rect.x0 - pObj->Widget.Win.Rect.x0;
000172  f9b70000          LDRSH    r0,[r7,#0]
000176  f9b51000          LDRSH    r1,[r5,#0]
00017a  eba00a01          SUB      r10,r0,r1
;;;417        x1 = pChild->Rect.x1 - pObj->Widget.Win.Rect.x0;
00017e  f9b70004          LDRSH    r0,[r7,#4]
000182  f9b51000          LDRSH    r1,[r5,#0]
000186  eba00b01          SUB      r11,r0,r1
;;;418        y0 = pChild->Rect.y0 - pObj->Widget.Win.Rect.y0;
00018a  f9b70002          LDRSH    r0,[r7,#2]
00018e  f9b51002          LDRSH    r1,[r5,#2]
000192  1a40              SUBS     r0,r0,r1
000194  9000              STR      r0,[sp,#0]
;;;419        if (y0 == BorderSize) {
000196  9800              LDR      r0,[sp,#0]
000198  42b0              CMP      r0,r6
00019a  d114              BNE      |L1.454|
;;;420          if (pChild->Status & WM_SF_ANCHOR_RIGHT) {
00019c  7f38              LDRB     r0,[r7,#0x1c]
00019e  f0000080          AND      r0,r0,#0x80
0001a2  b140              CBZ      r0,|L1.438|
;;;421            if (x0 <= pPos->rTitleText.x1) {
0001a4  f9b40010          LDRSH    r0,[r4,#0x10]
0001a8  4550              CMP      r0,r10
0001aa  db0c              BLT      |L1.454|
;;;422              pPos->rTitleText.x1 = x0 - 1;
0001ac  f1aa0001          SUB      r0,r10,#1
0001b0  b201              SXTH     r1,r0
0001b2  8221              STRH     r1,[r4,#0x10]
0001b4  e007              B        |L1.454|
                  |L1.438|
;;;423            }
;;;424          } else {
;;;425            if (x1 >= pPos->rTitleText.x0) {
0001b6  f9b4000c          LDRSH    r0,[r4,#0xc]
0001ba  4558              CMP      r0,r11
0001bc  dc03              BGT      |L1.454|
;;;426              pPos->rTitleText.x0 = x1 + 1;
0001be  f10b0001          ADD      r0,r11,#1
0001c2  b200              SXTH     r0,r0
0001c4  81a0              STRH     r0,[r4,#0xc]
                  |L1.454|
0001c6  f9b7901a          LDRSH    r9,[r7,#0x1a]         ;414
                  |L1.458|
0001ca  f1b90f00          CMP      r9,#0                 ;414
0001ce  d1cc              BNE      |L1.362|
;;;427            }
;;;428          }
;;;429        }
;;;430      }
;;;431    }
0001d0  b005              ADD      sp,sp,#0x14
0001d2  e8bd8ff0          POP      {r4-r11,pc}
;;;432    
                          ENDP

                  _Paint PROC
;;;185    */
;;;186    static void _Paint(FRAMEWIN_Obj* pObj) {
0001d6  e92d4ff0          PUSH     {r4-r11,lr}
0001da  b089              SUB      sp,sp,#0x24
0001dc  4604              MOV      r4,r0
;;;187      WM_HWIN hWin = WM_GetActiveWindow();
0001de  f7fffffe          BL       WM_GetActiveWindow
0001e2  4683              MOV      r11,r0
;;;188      const char* pText = NULL;
0001e4  f04f0a00          MOV      r10,#0
;;;189      int xsize = WM_GetWindowSizeX(hWin);
0001e8  4658              MOV      r0,r11
0001ea  f7fffffe          BL       WM_GetWindowSizeX
0001ee  4605              MOV      r5,r0
;;;190      int ysize = WM_GetWindowSizeY(hWin);
0001f0  4658              MOV      r0,r11
0001f2  f7fffffe          BL       WM_GetWindowSizeY
0001f6  4606              MOV      r6,r0
;;;191      int BorderSize = pObj->Props.BorderSize;
0001f8  f9b48042          LDRSH    r8,[r4,#0x42]
;;;192      int y0, Index;
;;;193      POSITIONS Pos;
;;;194      GUI_RECT r, rText;
;;;195    
;;;196      /* Perform computations */
;;;197      FRAMEWIN__CalcPositions(pObj, &Pos);
0001fc  a904              ADD      r1,sp,#0x10
0001fe  4620              MOV      r0,r4
000200  f7fffffe          BL       FRAMEWIN__CalcPositions
;;;198      Index = (pObj->Flags & FRAMEWIN_SF_ACTIVE) ? 1 : 0;
000204  f894005a          LDRB     r0,[r4,#0x5a]
000208  f3c009c0          UBFX     r9,r0,#3,#1
;;;199    
;;;200      if (pObj->hText) {
00020c  f8b40050          LDRH     r0,[r4,#0x50]
000210  b120              CBZ      r0,|L1.540|
;;;201        pText = (const char*) GUI_ALLOC_h2p(pObj->hText);
000212  f9b40050          LDRSH    r0,[r4,#0x50]
000216  f7fffffe          BL       GUI_ALLOC_h2p
00021a  4682              MOV      r10,r0
                  |L1.540|
;;;202      }
;;;203      r.x0 = Pos.rClient.x0;
00021c  f8bd0014          LDRH     r0,[sp,#0x14]
000220  f8ad0008          STRH     r0,[sp,#8]
;;;204      r.x1 = Pos.rClient.x1;
000224  f8bd0018          LDRH     r0,[sp,#0x18]
000228  f8ad000c          STRH     r0,[sp,#0xc]
;;;205      r.y0 = Pos.rTitleText.y0;
00022c  f8bd001e          LDRH     r0,[sp,#0x1e]
000230  f8ad000a          STRH     r0,[sp,#0xa]
;;;206      r.y1 = Pos.rTitleText.y1;
000234  f8bd0022          LDRH     r0,[sp,#0x22]
000238  f8ad000e          STRH     r0,[sp,#0xe]
;;;207      Pos.rTitleText.y0++;
00023c  f8bd001e          LDRH     r0,[sp,#0x1e]
000240  1c40              ADDS     r0,r0,#1
000242  b201              SXTH     r1,r0
000244  f8ad101e          STRH     r1,[sp,#0x1e]
;;;208      Pos.rTitleText.x0++;
000248  f8bd001c          LDRH     r0,[sp,#0x1c]
00024c  1c40              ADDS     r0,r0,#1
00024e  b200              SXTH     r0,r0
000250  f8ad001c          STRH     r0,[sp,#0x1c]
;;;209      Pos.rTitleText.x1--;
000254  f8bd0020          LDRH     r0,[sp,#0x20]
000258  1e40              SUBS     r0,r0,#1
00025a  b201              SXTH     r1,r0
00025c  f8ad1020          STRH     r1,[sp,#0x20]
;;;210      GUI_SetFont(pObj->Props.pFont);
000260  6aa0              LDR      r0,[r4,#0x28]
000262  f7fffffe          BL       GUI_SetFont
;;;211      GUI__CalcTextRect(pText, &Pos.rTitleText, &rText, pObj->Props.TextAlign);
000266  f9b43046          LDRSH    r3,[r4,#0x46]
00026a  466a              MOV      r2,sp
00026c  a907              ADD      r1,sp,#0x1c
00026e  4650              MOV      r0,r10
000270  f7fffffe          BL       GUI__CalcTextRect
;;;212      y0 = Pos.TitleHeight + BorderSize;
000274  f9bd0010          LDRSH    r0,[sp,#0x10]
000278  eb000708          ADD      r7,r0,r8
;;;213    
;;;214      /* Perform drawing operations */
;;;215      WM_ITERATE_START(NULL) {
00027c  2000              MOVS     r0,#0
00027e  f7fffffe          BL       WM__InitIVRSearch
000282  2800              CMP      r0,#0
000284  d047              BEQ      |L1.790|
000286  bf00              NOP      
                  |L1.648|
;;;216        /* Draw Title */
;;;217        LCD_SetBkColor(pObj->Props.aBarColor[Index]);
000288  f104012c          ADD      r1,r4,#0x2c
00028c  f8510029          LDR      r0,[r1,r9,LSL #2]
000290  f7fffffe          BL       LCD_SetBkColor
;;;218        LCD_SetColor(pObj->Props.aTextColor[Index]);
000294  f1040134          ADD      r1,r4,#0x34
000298  f8510029          LDR      r0,[r1,r9,LSL #2]
00029c  f7fffffe          BL       LCD_SetColor
;;;219        WIDGET__FillStringInRect(pText, &r, &Pos.rTitleText, &rText);
0002a0  466b              MOV      r3,sp
0002a2  aa07              ADD      r2,sp,#0x1c
0002a4  a902              ADD      r1,sp,#8
0002a6  4650              MOV      r0,r10
0002a8  f7fffffe          BL       WIDGET__FillStringInRect
;;;220        /* Draw Frame */
;;;221        LCD_SetColor(FRAMEWIN_FRAMECOLOR_DEFAULT);
0002ac  4871              LDR      r0,|L1.1140|
0002ae  f7fffffe          BL       LCD_SetColor
;;;222        GUI_FillRect(0, 0, xsize-1, BorderSize-1);
0002b2  f1a80301          SUB      r3,r8,#1
0002b6  1e6a              SUBS     r2,r5,#1
0002b8  2100              MOVS     r1,#0
0002ba  4608              MOV      r0,r1
0002bc  f7fffffe          BL       GUI_FillRect
;;;223    	  GUI_FillRect(0, 0, Pos.rClient.x0-1, ysize-1);
0002c0  1e73              SUBS     r3,r6,#1
0002c2  f9bd0014          LDRSH    r0,[sp,#0x14]
0002c6  1e42              SUBS     r2,r0,#1
0002c8  2100              MOVS     r1,#0
0002ca  4608              MOV      r0,r1
0002cc  f7fffffe          BL       GUI_FillRect
;;;224    	  GUI_FillRect(Pos.rClient.x1+1, 0, xsize-1, ysize-1);
0002d0  1e73              SUBS     r3,r6,#1
0002d2  1e6a              SUBS     r2,r5,#1
0002d4  f9bd1018          LDRSH    r1,[sp,#0x18]
0002d8  1c48              ADDS     r0,r1,#1
0002da  2100              MOVS     r1,#0
0002dc  f7fffffe          BL       GUI_FillRect
;;;225        GUI_FillRect(0, Pos.rClient.y1+1, xsize-1, ysize-1);
0002e0  1e73              SUBS     r3,r6,#1
0002e2  1e6a              SUBS     r2,r5,#1
0002e4  f9bd001a          LDRSH    r0,[sp,#0x1a]
0002e8  1c41              ADDS     r1,r0,#1
0002ea  2000              MOVS     r0,#0
0002ec  f7fffffe          BL       GUI_FillRect
;;;226        GUI_FillRect(0, y0, xsize - 1, y0 + pObj->Props.IBorderSize - 1);
0002f0  f9b40044          LDRSH    r0,[r4,#0x44]
0002f4  4438              ADD      r0,r0,r7
0002f6  1e43              SUBS     r3,r0,#1
0002f8  1e6a              SUBS     r2,r5,#1
0002fa  4639              MOV      r1,r7
0002fc  2000              MOVS     r0,#0
0002fe  f7fffffe          BL       GUI_FillRect
;;;227        /* Draw the 3D effect (if configured) */
;;;228        if (pObj->Props.BorderSize >= 2) {
000302  f9b40042          LDRSH    r0,[r4,#0x42]
000306  2802              CMP      r0,#2
000308  db01              BLT      |L1.782|
;;;229          WIDGET_EFFECT_3D_DrawUp();  /* pObj->Widget.pEffect->pfDrawUp(); */
00030a  f7fffffe          BL       WIDGET_EFFECT_3D_DrawUp
                  |L1.782|
;;;230        }
;;;231    
;;;232      } WM_ITERATE_END();
00030e  f7fffffe          BL       WM__GetNextIVR
000312  2800              CMP      r0,#0
000314  d1b8              BNE      |L1.648|
                  |L1.790|
;;;233    
;;;234    
;;;235    }
000316  b009              ADD      sp,sp,#0x24
000318  e8bd8ff0          POP      {r4-r11,pc}
;;;236    
                          ENDP

                  _OnChildHasFocus PROC
;;;250    */
;;;251    static void _OnChildHasFocus(FRAMEWIN_Handle hWin, FRAMEWIN_Obj* pObj, WM_MESSAGE *pMsg) {
00031c  e92d41f0          PUSH     {r4-r8,lr}
000320  4606              MOV      r6,r0
000322  460f              MOV      r7,r1
000324  4614              MOV      r4,r2
;;;252      if (pMsg->Data.p) {
000326  68a0              LDR      r0,[r4,#8]
000328  b1e0              CBZ      r0,|L1.868|
;;;253        const WM_NOTIFY_CHILD_HAS_FOCUS_INFO * pInfo = (const WM_NOTIFY_CHILD_HAS_FOCUS_INFO *)pMsg->Data.p;
00032a  68a5              LDR      r5,[r4,#8]
;;;254        int IsDesc = WM__IsAncestorOrSelf(pInfo->hNew, hWin);
00032c  f9b50002          LDRSH    r0,[r5,#2]
000330  4631              MOV      r1,r6
000332  f7fffffe          BL       WM__IsAncestorOrSelf
000336  4680              MOV      r8,r0
;;;255        if (IsDesc) {                         /* A child has received the focus, Framewindow needs to be activated */
000338  f1b80f00          CMP      r8,#0
00033c  d004              BEQ      |L1.840|
;;;256          _SetActive(hWin, 1);
00033e  2101              MOVS     r1,#1
000340  4630              MOV      r0,r6
000342  f7fffffe          BL       _SetActive
000346  e00c              B        |L1.866|
                  |L1.840|
;;;257        } else {                  /* A child has lost the focus, we need to deactivate */
;;;258          _SetActive(hWin, 0);
000348  2100              MOVS     r1,#0
00034a  4630              MOV      r0,r6
00034c  f7fffffe          BL       _SetActive
;;;259          /* Remember the child which had the focus so we can reactive this child */
;;;260          if (WM__IsAncestor(pInfo->hOld, hWin)) {
000350  f9b50000          LDRSH    r0,[r5,#0]
000354  4631              MOV      r1,r6
000356  f7fffffe          BL       WM__IsAncestor
00035a  b110              CBZ      r0,|L1.866|
;;;261            pObj->hFocussedChild = pInfo->hOld;
00035c  8828              LDRH     r0,[r5,#0]
00035e  f8a7005c          STRH     r0,[r7,#0x5c]
                  |L1.866|
;;;262          }
;;;263        }
;;;264      }
000362  bf00              NOP      
                  |L1.868|
;;;265    }
000364  e8bd81f0          POP      {r4-r8,pc}
;;;266    
                          ENDP

                  FRAMEWIN__cbClient PROC
;;;270    */
;;;271    static void FRAMEWIN__cbClient(WM_MESSAGE* pMsg) {
000368  e92d43fe          PUSH     {r1-r9,lr}
00036c  4604              MOV      r4,r0
;;;272      WM_HWIN hWin, hParent;
;;;273      FRAMEWIN_Obj * pObj;
;;;274      WM_CALLBACK * cb;
;;;275    
;;;276      hWin    = pMsg->hWin;
00036e  f9b47004          LDRSH    r7,[r4,#4]
;;;277      hParent = WM_GetParent(pMsg->hWin);
000372  f9b40004          LDRSH    r0,[r4,#4]
000376  f7fffffe          BL       WM_GetParent
00037a  4680              MOV      r8,r0
;;;278      pObj = (FRAMEWIN_Obj *)GUI_ALLOC_h2p(hParent); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
00037c  4640              MOV      r0,r8
00037e  f7fffffe          BL       GUI_ALLOC_h2p
000382  4605              MOV      r5,r0
;;;279      cb = pObj->cb;
000384  6cae              LDR      r6,[r5,#0x48]
;;;280      switch (pMsg->MsgId) {
000386  6820              LDR      r0,[r4,#0]
000388  2817              CMP      r0,#0x17
00038a  d061              BEQ      |L1.1104|
00038c  dc08              BGT      |L1.928|
00038e  280e              CMP      r0,#0xe
000390  d03e              BEQ      |L1.1040|
000392  280f              CMP      r0,#0xf
000394  d00b              BEQ      |L1.942|
000396  2814              CMP      r0,#0x14
000398  d058              BEQ      |L1.1100|
00039a  2815              CMP      r0,#0x15
00039c  d15c              BNE      |L1.1112|
00039e  e056              B        |L1.1102|
                  |L1.928|
0003a0  281e              CMP      r0,#0x1e
0003a2  d01a              BEQ      |L1.986|
0003a4  281f              CMP      r0,#0x1f
0003a6  d02e              BEQ      |L1.1030|
0003a8  2822              CMP      r0,#0x22
0003aa  d155              BNE      |L1.1112|
0003ac  e04b              B        |L1.1094|
                  |L1.942|
;;;281      case WM_PAINT:
;;;282        if (pObj->Props.ClientColor != GUI_INVALID_COLOR) {
0003ae  f06f4170          MVN      r1,#0xf0000000
0003b2  6be8              LDR      r0,[r5,#0x3c]
0003b4  4288              CMP      r0,r1
0003b6  d004              BEQ      |L1.962|
;;;283          LCD_SetBkColor(pObj->Props.ClientColor);
0003b8  6be8              LDR      r0,[r5,#0x3c]
0003ba  f7fffffe          BL       LCD_SetBkColor
;;;284          GUI_Clear();
0003be  f7fffffe          BL       GUI_Clear
                  |L1.962|
;;;285        }
;;;286        /* Give the user callback  a chance to draw.
;;;287         * Note that we can not run into the bottom part, as this passes the parents handle
;;;288         */
;;;289        if (cb) {
0003c2  b146              CBZ      r6,|L1.982|
;;;290    	    WM_MESSAGE Msg;
;;;291          Msg      = *pMsg;
0003c4  e8940007          LDM      r4,{r0-r2}
0003c8  e88d0007          STM      sp,{r0-r2}
;;;292          Msg.hWin = hWin;
0003cc  f8ad7004          STRH     r7,[sp,#4]
;;;293          (*cb)(&Msg);
0003d0  4668              MOV      r0,sp
0003d2  47b0              BLX      r6
;;;294        }
0003d4  bf00              NOP      
                  |L1.982|
;;;295        return;
;;;296      case WM_SET_FOCUS:
;;;297        if (pMsg->Data.v) {     /* Focus received */
;;;298          if (pObj->hFocussedChild && (pObj->hFocussedChild != hWin)) {
;;;299            WM_SetFocus(pObj->hFocussedChild);
;;;300          } else {
;;;301            pObj->hFocussedChild = WM_SetFocusOnNextChild(hWin);
;;;302          }
;;;303          pMsg->Data.v = 0;     /* Focus change accepted */
;;;304        }
;;;305        return;
;;;306      case WM_GET_ACCEPT_FOCUS:
;;;307        WIDGET_HandleActive(hParent, pMsg);
;;;308        return;
;;;309      case WM_KEY:
;;;310        if (((const WM_KEY_INFO*)(pMsg->Data.p))->PressedCnt > 0) {
;;;311          int Key = ((const WM_KEY_INFO*)(pMsg->Data.p))->Key;
;;;312          switch (Key) {
;;;313          case GUI_KEY_BACKTAB:
;;;314            pObj->hFocussedChild = WM_SetFocusOnPrevChild(hWin);
;;;315            return;
;;;316          case GUI_KEY_TAB:
;;;317            pObj->hFocussedChild = WM_SetFocusOnNextChild(hWin);
;;;318            return;
;;;319          }
;;;320        }
;;;321        break;	                       /* Send to parent by not doing anything */
;;;322      case WM_GET_BKCOLOR:
;;;323        pMsg->Data.Color = pObj->Props.ClientColor;
;;;324        return;                       /* Message handled */
;;;325      case WM_GET_INSIDE_RECT:        /* This should not be passed to parent ... (We do not want parents coordinates)*/
;;;326      case WM_GET_ID:                 /* This should not be passed to parent ... (Possible recursion problem)*/
;;;327      case WM_GET_CLIENT_WINDOW:      /* return handle to client window. For most windows, there is no seperate client window, so it is the same handle */
;;;328        WM_DefaultProc(pMsg);
;;;329        return;                       /* We are done ! */
;;;330      }
;;;331      /* Call user callback. Note that the user callback gets the handle of the Framewindow itself, NOT the Client. */
;;;332      if (cb) {
;;;333        pMsg->hWin = hParent;
;;;334        (*cb)(pMsg);
;;;335      } else {
;;;336        WM_DefaultProc(pMsg);
;;;337      }
;;;338    }
0003d6  e8bd83fe          POP      {r1-r9,pc}
                  |L1.986|
0003da  68a0              LDR      r0,[r4,#8]            ;297
0003dc  b190              CBZ      r0,|L1.1028|
0003de  f8b5005c          LDRH     r0,[r5,#0x5c]         ;298
0003e2  b140              CBZ      r0,|L1.1014|
0003e4  f9b5005c          LDRSH    r0,[r5,#0x5c]         ;298
0003e8  42b8              CMP      r0,r7                 ;298
0003ea  d004              BEQ      |L1.1014|
0003ec  f9b5005c          LDRSH    r0,[r5,#0x5c]         ;299
0003f0  f7fffffe          BL       WM_SetFocus
0003f4  e004              B        |L1.1024|
                  |L1.1014|
0003f6  4638              MOV      r0,r7                 ;301
0003f8  f7fffffe          BL       WM_SetFocusOnNextChild
0003fc  f8a5005c          STRH     r0,[r5,#0x5c]         ;301
                  |L1.1024|
000400  2000              MOVS     r0,#0                 ;303
000402  60a0              STR      r0,[r4,#8]            ;303
                  |L1.1028|
000404  e7e7              B        |L1.982|
                  |L1.1030|
000406  4621              MOV      r1,r4                 ;307
000408  4640              MOV      r0,r8                 ;307
00040a  f7fffffe          BL       WIDGET_HandleActive
00040e  e7e2              B        |L1.982|
                  |L1.1040|
000410  68a0              LDR      r0,[r4,#8]            ;310
000412  6840              LDR      r0,[r0,#4]            ;310
000414  2800              CMP      r0,#0                 ;310
000416  dd15              BLE      |L1.1092|
000418  68a0              LDR      r0,[r4,#8]            ;311
00041a  f8d09000          LDR      r9,[r0,#0]            ;311
00041e  f1b90f09          CMP      r9,#9                 ;312
000422  d008              BEQ      |L1.1078|
000424  f1b90f0a          CMP      r9,#0xa               ;312
000428  d10b              BNE      |L1.1090|
00042a  4638              MOV      r0,r7                 ;314
00042c  f7fffffe          BL       WM_SetFocusOnPrevChild
000430  f8a5005c          STRH     r0,[r5,#0x5c]         ;314
000434  e7cf              B        |L1.982|
                  |L1.1078|
000436  4638              MOV      r0,r7                 ;317
000438  f7fffffe          BL       WM_SetFocusOnNextChild
00043c  f8a5005c          STRH     r0,[r5,#0x5c]         ;317
000440  e7c9              B        |L1.982|
                  |L1.1090|
000442  bf00              NOP                            ;320
                  |L1.1092|
000444  e008              B        |L1.1112|
                  |L1.1094|
000446  6be8              LDR      r0,[r5,#0x3c]         ;323
000448  60a0              STR      r0,[r4,#8]            ;323
00044a  e7c4              B        |L1.982|
                  |L1.1100|
00044c  bf00              NOP                            ;326
                  |L1.1102|
00044e  bf00              NOP                            ;327
                  |L1.1104|
000450  4620              MOV      r0,r4                 ;328
000452  f7fffffe          BL       WM_DefaultProc
000456  e7be              B        |L1.982|
                  |L1.1112|
000458  bf00              NOP                            ;321
00045a  b126              CBZ      r6,|L1.1126|
00045c  f8a48004          STRH     r8,[r4,#4]            ;333
000460  4620              MOV      r0,r4                 ;334
000462  47b0              BLX      r6                    ;334
000464  e002              B        |L1.1132|
                  |L1.1126|
000466  4620              MOV      r0,r4                 ;336
000468  f7fffffe          BL       WM_DefaultProc
                  |L1.1132|
00046c  bf00              NOP      
00046e  e7b2              B        |L1.982|
                  |L1.1136|
                          DCD      FRAMEWIN__MinVisibility
                  |L1.1140|
                          DCD      0x00aaaaaa
                          ENDP

                  FRAMEWIN__UpdatePositions PROC
;;;436    */
;;;437    void FRAMEWIN__UpdatePositions(FRAMEWIN_Obj* pObj) {
000478  b530              PUSH     {r4,r5,lr}
00047a  b085              SUB      sp,sp,#0x14
00047c  4604              MOV      r4,r0
;;;438      /* Move client window accordingly */
;;;439      if (pObj->hClient || pObj->hMenu) {
00047e  f8b4004c          LDRH     r0,[r4,#0x4c]
000482  b910              CBNZ     r0,|L1.1162|
000484  f8b4004e          LDRH     r0,[r4,#0x4e]
000488  b368              CBZ      r0,|L1.1254|
                  |L1.1162|
;;;440        POSITIONS Pos;
;;;441        FRAMEWIN__CalcPositions(pObj, &Pos);
00048a  4669              MOV      r1,sp
00048c  4620              MOV      r0,r4
00048e  f7fffffe          BL       FRAMEWIN__CalcPositions
;;;442        if (pObj->hClient) {
000492  f8b4004c          LDRH     r0,[r4,#0x4c]
000496  b1b8              CBZ      r0,|L1.1224|
;;;443          WM_MoveChildTo(pObj->hClient, Pos.rClient.x0, Pos.rClient.y0);
000498  f9bd2006          LDRSH    r2,[sp,#6]
00049c  f9bd1004          LDRSH    r1,[sp,#4]
0004a0  f9b4004c          LDRSH    r0,[r4,#0x4c]
0004a4  f7fffffe          BL       WM_MoveChildTo
;;;444          WM_SetSize(pObj->hClient, 
0004a8  f9bd500a          LDRSH    r5,[sp,#0xa]
0004ac  f9bd3006          LDRSH    r3,[sp,#6]
0004b0  1aeb              SUBS     r3,r5,r3
0004b2  1c5a              ADDS     r2,r3,#1
0004b4  f9bd3008          LDRSH    r3,[sp,#8]
0004b8  f9bd5004          LDRSH    r5,[sp,#4]
0004bc  1b5b              SUBS     r3,r3,r5
0004be  1c59              ADDS     r1,r3,#1
0004c0  f9b4004c          LDRSH    r0,[r4,#0x4c]
0004c4  f7fffffe          BL       WM_SetSize
                  |L1.1224|
;;;445                     Pos.rClient.x1 - Pos.rClient.x0 + 1, 
;;;446                     Pos.rClient.y1 - Pos.rClient.y0 + 1);
;;;447        }
;;;448        if (pObj->hMenu) {
0004c8  f8b4004e          LDRH     r0,[r4,#0x4e]
0004cc  b150              CBZ      r0,|L1.1252|
;;;449          WM_MoveChildTo(pObj->hMenu, Pos.rClient.x0, Pos.rClient.y0 - Pos.MenuHeight);
0004ce  f9bd3006          LDRSH    r3,[sp,#6]
0004d2  f9bd5002          LDRSH    r5,[sp,#2]
0004d6  1b5a              SUBS     r2,r3,r5
0004d8  f9bd1004          LDRSH    r1,[sp,#4]
0004dc  f9b4004e          LDRSH    r0,[r4,#0x4e]
0004e0  f7fffffe          BL       WM_MoveChildTo
                  |L1.1252|
;;;450        }
;;;451      }
0004e4  bf00              NOP      
                  |L1.1254|
;;;452    }
0004e6  b005              ADD      sp,sp,#0x14
0004e8  bd30              POP      {r4,r5,pc}
;;;453    
                          ENDP

                  FRAMEWIN_SetActive PROC
;;;668    */
;;;669    void FRAMEWIN_SetActive(FRAMEWIN_Handle hObj, int State) {
0004ea  b570              PUSH     {r4-r6,lr}
0004ec  4604              MOV      r4,r0
0004ee  460d              MOV      r5,r1
;;;670      if (hObj) {
0004f0  b11c              CBZ      r4,|L1.1274|
;;;671        WM_LOCK();
;;;672        _SetActive(hObj, State);
0004f2  4629              MOV      r1,r5
0004f4  4620              MOV      r0,r4
0004f6  f7fffffe          BL       _SetActive
                  |L1.1274|
;;;673        WM_UNLOCK();
;;;674      }
;;;675    }
0004fa  bd70              POP      {r4-r6,pc}
;;;676    
                          ENDP

                  FRAMEWIN_Callback PROC
;;;463    */
;;;464    void FRAMEWIN_Callback (WM_MESSAGE *pMsg) {
0004fc  e92d47f0          PUSH     {r4-r10,lr}
000500  b088              SUB      sp,sp,#0x20
000502  4604              MOV      r4,r0
;;;465      FRAMEWIN_Handle hWin;
;;;466      FRAMEWIN_Obj * pObj;
;;;467      GUI_RECT * pRect;
;;;468      POSITIONS Pos;
;;;469      GUI_HOOK * pHook;
;;;470      hWin = (FRAMEWIN_Handle)(pMsg->hWin);
000504  f9b47004          LDRSH    r7,[r4,#4]
;;;471      pObj = (FRAMEWIN_Obj *)GUI_ALLOC_h2p(hWin); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
000508  4638              MOV      r0,r7
00050a  f7fffffe          BL       GUI_ALLOC_h2p
00050e  4605              MOV      r5,r0
;;;472      pRect = (GUI_RECT*)(pMsg->Data.p);
000510  f8d49008          LDR      r9,[r4,#8]
;;;473      /* Call hook functions */
;;;474      for (pHook = pObj->pFirstHook; pHook; pHook = pHook->pNext) {
000514  6e6e              LDR      r6,[r5,#0x64]
000516  e00a              B        |L1.1326|
                  |L1.1304|
;;;475        int r;
;;;476        r = (*pHook->pHookFunc)(pMsg);
000518  4620              MOV      r0,r4
00051a  6871              LDR      r1,[r6,#4]
00051c  4788              BLX      r1
00051e  4680              MOV      r8,r0
;;;477        if (r) {
000520  f1b80f00          CMP      r8,#0
000524  d002              BEQ      |L1.1324|
                  |L1.1318|
;;;478          return;   /* Message handled */
;;;479        }
;;;480      }
;;;481      switch (pMsg->MsgId) {
;;;482      case WM_HANDLE_DIALOG_STATUS:
;;;483        if (pMsg->Data.p) {                           /* set pointer to Dialog status */
;;;484          pObj->pDialogStatus = (WM_DIALOG_STATUS*)pMsg->Data.p;
;;;485        } else {                                      /* return pointer to Dialog status */
;;;486          pMsg->Data.p = pObj->pDialogStatus;      
;;;487        }
;;;488        return;
;;;489      case WM_PAINT:
;;;490        _Paint(pObj);
;;;491        break;
;;;492      case WM_TOUCH:
;;;493        _OnTouch(hWin, pObj, pMsg);
;;;494        return;                       /* Return here ... Message handled */
;;;495      case WM_GET_INSIDE_RECT:
;;;496        FRAMEWIN__CalcPositions(pObj, &Pos);
;;;497    		*pRect = Pos.rClient;
;;;498        return;                       /* Return here ... Message handled */
;;;499      case WM_GET_CLIENT_WINDOW:      /* return handle to client window. For most windows, there is no seperate client window, so it is the same handle */
;;;500        pMsg->Data.v = (int)pObj->hClient;
;;;501        return;                       /* Return here ... Message handled */
;;;502      case WM_NOTIFY_PARENT:
;;;503        if (pMsg->Data.v == WM_NOTIFICATION_RELEASED) {
;;;504          WM_MESSAGE Msg;
;;;505          Msg.hWinSrc = hWin;
;;;506          Msg.Data    = pMsg->Data;
;;;507          Msg.MsgId   = WM_NOTIFY_PARENT_REFLECTION;
;;;508          WM__SendMessage(pMsg->hWinSrc, &Msg);
;;;509        }
;;;510        return;
;;;511      case WM_SET_FOCUS:                 /* We have received or lost focus */
;;;512        if (pMsg->Data.v == 1) {
;;;513          if (WM_IsWindow(pObj->hFocussedChild)) {
;;;514            WM_SetFocus(pObj->hFocussedChild);
;;;515          } else {
;;;516            pObj->hFocussedChild = WM_SetFocusOnNextChild(pObj->hClient);
;;;517          }
;;;518          FRAMEWIN_SetActive(hWin, 1);
;;;519          pMsg->Data.v = 0;              /* Focus could be accepted */
;;;520        } else {
;;;521          FRAMEWIN_SetActive(hWin, 0);
;;;522        }
;;;523        return;
;;;524      case WM_TOUCH_CHILD:
;;;525        /* If a child of this framewindow has been touched and the frame window was not active,
;;;526           the framewindow will receive the focus.
;;;527         */
;;;528        if (!(pObj->Flags & FRAMEWIN_SF_ACTIVE)) {
;;;529          const WM_MESSAGE * pMsgOrg;
;;;530          const GUI_PID_STATE * pState;
;;;531          pMsgOrg = (const WM_MESSAGE*)pMsg->Data.p;      /* The original touch message */
;;;532          pState = (const GUI_PID_STATE*)pMsgOrg->Data.p;
;;;533          if (pState) {          /* Message may not have a valid pointer (moved out) ! */
;;;534            if (pState->Pressed) {
;;;535              WM_SetFocus(hWin);
;;;536            }
;;;537          }
;;;538        }
;;;539        break;
;;;540      case WM_NOTIFY_CHILD_HAS_FOCUS:
;;;541        _OnChildHasFocus(hWin, pObj, pMsg);
;;;542        break;
;;;543      case WM_DELETE:
;;;544        GUI_DEBUG_LOG("FRAMEWIN: FRAMEWIN_Callback(WM_DELETE)\n");
;;;545        GUI_ALLOC_FreePtr(&pObj->hText);
;;;546        break;
;;;547      }
;;;548      /* Let widget handle the standard messages */
;;;549      if (WIDGET_HandleActive(hWin, pMsg) == 0) {
;;;550        return;
;;;551      }
;;;552      WM_DefaultProc(pMsg);
;;;553    }
000526  b008              ADD      sp,sp,#0x20
000528  e8bd87f0          POP      {r4-r10,pc}
                  |L1.1324|
00052c  6836              LDR      r6,[r6,#0]            ;474
                  |L1.1326|
00052e  2e00              CMP      r6,#0                 ;474
000530  d1f2              BNE      |L1.1304|
000532  6820              LDR      r0,[r4,#0]            ;481
000534  2817              CMP      r0,#0x17              ;481
000536  d032              BEQ      |L1.1438|
000538  dc0c              BGT      |L1.1364|
00053a  280d              CMP      r0,#0xd               ;481
00053c  d062              BEQ      |L1.1540|
00053e  dc04              BGT      |L1.1354|
000540  280b              CMP      r0,#0xb               ;481
000542  d07b              BEQ      |L1.1596|
000544  280c              CMP      r0,#0xc               ;481
000546  d17e              BNE      |L1.1606|
000548  e018              B        |L1.1404|
                  |L1.1354|
00054a  280f              CMP      r0,#0xf               ;481
00054c  d012              BEQ      |L1.1396|
00054e  2814              CMP      r0,#0x14              ;481
000550  d179              BNE      |L1.1606|
000552  e019              B        |L1.1416|
                  |L1.1364|
000554  281e              CMP      r0,#0x1e              ;481
000556  d036              BEQ      |L1.1478|
000558  2820              CMP      r0,#0x20              ;481
00055a  d069              BEQ      |L1.1584|
00055c  2826              CMP      r0,#0x26              ;481
00055e  d022              BEQ      |L1.1446|
000560  282a              CMP      r0,#0x2a              ;481
000562  d170              BNE      |L1.1606|
000564  68a0              LDR      r0,[r4,#8]            ;483
000566  b110              CBZ      r0,|L1.1390|
000568  68a0              LDR      r0,[r4,#8]            ;484
00056a  6628              STR      r0,[r5,#0x60]         ;484
00056c  e001              B        |L1.1394|
                  |L1.1390|
00056e  6e28              LDR      r0,[r5,#0x60]         ;486
000570  60a0              STR      r0,[r4,#8]            ;486
                  |L1.1394|
000572  e7d8              B        |L1.1318|
                  |L1.1396|
000574  4628              MOV      r0,r5                 ;490
000576  f7fffffe          BL       _Paint
00057a  e064              B        |L1.1606|
                  |L1.1404|
00057c  4622              MOV      r2,r4                 ;493
00057e  4629              MOV      r1,r5                 ;493
000580  4638              MOV      r0,r7                 ;493
000582  f7fffffe          BL       _OnTouch
000586  e7ce              B        |L1.1318|
                  |L1.1416|
000588  a903              ADD      r1,sp,#0xc            ;496
00058a  4628              MOV      r0,r5                 ;496
00058c  f7fffffe          BL       FRAMEWIN__CalcPositions
000590  9804              LDR      r0,[sp,#0x10]         ;497
000592  f8c90000          STR      r0,[r9,#0]            ;497
000596  9805              LDR      r0,[sp,#0x14]         ;497
000598  f8c90004          STR      r0,[r9,#4]            ;497
00059c  e7c3              B        |L1.1318|
                  |L1.1438|
00059e  f9b5004c          LDRSH    r0,[r5,#0x4c]         ;500
0005a2  60a0              STR      r0,[r4,#8]            ;500
0005a4  e7bf              B        |L1.1318|
                  |L1.1446|
0005a6  68a0              LDR      r0,[r4,#8]            ;503
0005a8  2802              CMP      r0,#2                 ;503
0005aa  d10b              BNE      |L1.1476|
0005ac  f8ad7006          STRH     r7,[sp,#6]            ;505
0005b0  68a0              LDR      r0,[r4,#8]            ;506
0005b2  9002              STR      r0,[sp,#8]            ;506
0005b4  2027              MOVS     r0,#0x27              ;507
0005b6  9000              STR      r0,[sp,#0]            ;507
0005b8  f9b40006          LDRSH    r0,[r4,#6]            ;508
0005bc  4669              MOV      r1,sp                 ;508
0005be  f7fffffe          BL       WM__SendMessage
0005c2  bf00              NOP                            ;509
                  |L1.1476|
0005c4  e7af              B        |L1.1318|
                  |L1.1478|
0005c6  68a0              LDR      r0,[r4,#8]            ;512
0005c8  2801              CMP      r0,#1                 ;512
0005ca  d116              BNE      |L1.1530|
0005cc  f9b5005c          LDRSH    r0,[r5,#0x5c]         ;513
0005d0  f7fffffe          BL       WM_IsWindow
0005d4  b120              CBZ      r0,|L1.1504|
0005d6  f9b5005c          LDRSH    r0,[r5,#0x5c]         ;514
0005da  f7fffffe          BL       WM_SetFocus
0005de  e005              B        |L1.1516|
                  |L1.1504|
0005e0  f9b5004c          LDRSH    r0,[r5,#0x4c]         ;516
0005e4  f7fffffe          BL       WM_SetFocusOnNextChild
0005e8  f8a5005c          STRH     r0,[r5,#0x5c]         ;516
                  |L1.1516|
0005ec  2101              MOVS     r1,#1                 ;518
0005ee  4638              MOV      r0,r7                 ;518
0005f0  f7fffffe          BL       FRAMEWIN_SetActive
0005f4  2000              MOVS     r0,#0                 ;519
0005f6  60a0              STR      r0,[r4,#8]            ;519
0005f8  e003              B        |L1.1538|
                  |L1.1530|
0005fa  2100              MOVS     r1,#0                 ;521
0005fc  4638              MOV      r0,r7                 ;521
0005fe  f7fffffe          BL       FRAMEWIN_SetActive
                  |L1.1538|
000602  e790              B        |L1.1318|
                  |L1.1540|
000604  f895005a          LDRB     r0,[r5,#0x5a]         ;528
000608  f0000008          AND      r0,r0,#8              ;528
00060c  b968              CBNZ     r0,|L1.1578|
00060e  f8d4a008          LDR      r10,[r4,#8]           ;531
000612  f8da8008          LDR      r8,[r10,#8]           ;532
000616  f1b80f00          CMP      r8,#0                 ;533
00061a  d005              BEQ      |L1.1576|
00061c  f8980008          LDRB     r0,[r8,#8]            ;534
000620  b110              CBZ      r0,|L1.1576|
000622  4638              MOV      r0,r7                 ;535
000624  f7fffffe          BL       WM_SetFocus
                  |L1.1576|
000628  bf00              NOP                            ;538
                  |L1.1578|
00062a  e00c              B        |L1.1606|
00062c  e006              B        |L1.1596|
00062e  e7ff              B        |L1.1584|
                  |L1.1584|
000630  4622              MOV      r2,r4                 ;541
000632  4629              MOV      r1,r5                 ;541
000634  4638              MOV      r0,r7                 ;541
000636  f7fffffe          BL       _OnChildHasFocus
00063a  e004              B        |L1.1606|
                  |L1.1596|
00063c  f1050050          ADD      r0,r5,#0x50           ;545
000640  f7fffffe          BL       GUI_ALLOC_FreePtr
000644  bf00              NOP                            ;546
                  |L1.1606|
000646  bf00              NOP                            ;491
000648  4621              MOV      r1,r4                 ;549
00064a  4638              MOV      r0,r7                 ;549
00064c  f7fffffe          BL       WIDGET_HandleActive
000650  b900              CBNZ     r0,|L1.1620|
000652  e768              B        |L1.1318|
                  |L1.1620|
000654  4620              MOV      r0,r4                 ;552
000656  f7fffffe          BL       WM_DefaultProc
00065a  bf00              NOP      
00065c  e763              B        |L1.1318|
;;;554    
                          ENDP

                  FRAMEWIN_SetText PROC
;;;617    */
;;;618    void FRAMEWIN_SetText(FRAMEWIN_Handle hObj, const char* s) {
00065e  b570              PUSH     {r4-r6,lr}
000660  4604              MOV      r4,r0
000662  460d              MOV      r5,r1
;;;619      if (hObj) {
000664  b16c              CBZ      r4,|L1.1666|
;;;620        FRAMEWIN_Obj* pObj;
;;;621        GUI_LOCK();
;;;622        pObj = FRAMEWIN_H2P(hObj);
000666  4620              MOV      r0,r4
000668  f7fffffe          BL       GUI_ALLOC_h2p
00066c  4606              MOV      r6,r0
;;;623        if (GUI__SetText(&pObj->hText, s)) {
00066e  4629              MOV      r1,r5
000670  f1060050          ADD      r0,r6,#0x50
000674  f7fffffe          BL       GUI__SetText
000678  b110              CBZ      r0,|L1.1664|
;;;624          FRAMEWIN_Invalidate(hObj);
00067a  4620              MOV      r0,r4
00067c  f7fffffe          BL       WM_InvalidateWindow
                  |L1.1664|
;;;625        }
;;;626        GUI_UNLOCK();
;;;627      }
000680  bf00              NOP      
                  |L1.1666|
;;;628    }
000682  bd70              POP      {r4-r6,pc}
;;;629    
                          ENDP

                  FRAMEWIN_CreateEx PROC
;;;564    */
;;;565    FRAMEWIN_Handle FRAMEWIN_CreateEx(int x0, int y0, int xsize, int ysize, WM_HWIN hParent,
000684  e92d4ff0          PUSH     {r4-r11,lr}
;;;566                                      int WinFlags, int ExFlags, int Id, const char* pTitle, WM_CALLBACK* cb)
;;;567    {
000688  b089              SUB      sp,sp,#0x24
00068a  4607              MOV      r7,r0
00068c  4688              MOV      r8,r1
00068e  4691              MOV      r9,r2
000690  469b              MOV      r11,r3
000692  e9dd5a13          LDRD     r5,r10,[sp,#0x4c]
;;;568      FRAMEWIN_Handle hObj;
;;;569      /* Create the window */
;;;570      GUI_LOCK();
;;;571      WinFlags |= WM_CF_LATE_CLIP;    /* Always use late clipping since widget is optimized for it. */
000696  f4455580          ORR      r5,r5,#0x1000
;;;572      hObj = WM_CreateWindowAsChild(x0, y0, xsize, ysize, hParent, WinFlags, FRAMEWIN_Callback,
00069a  2248              MOVS     r2,#0x48
00069c  f2af13a3          ADR      r3,FRAMEWIN_Callback + 1
0006a0  b2a8              UXTH     r0,r5
0006a2  9912              LDR      r1,[sp,#0x48]
0006a4  e9cd3202          STRD     r3,r2,[sp,#8]
0006a8  e9cd1000          STRD     r1,r0,[sp,#0]
0006ac  465b              MOV      r3,r11
0006ae  464a              MOV      r2,r9
0006b0  4641              MOV      r1,r8
0006b2  4638              MOV      r0,r7
0006b4  f7fffffe          BL       WM_CreateWindowAsChild
0006b8  4606              MOV      r6,r0
;;;573                                    sizeof(FRAMEWIN_Obj) - sizeof(WM_Obj));
;;;574      if (hObj) {
0006ba  2e00              CMP      r6,#0
0006bc  d047              BEQ      |L1.1870|
;;;575        FRAMEWIN_Obj* pObj;
;;;576        POSITIONS Pos;
;;;577        pObj = (FRAMEWIN_Obj *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
0006be  4630              MOV      r0,r6
0006c0  f7fffffe          BL       GUI_ALLOC_h2p
0006c4  4604              MOV      r4,r0
;;;578        /* init widget specific variables */
;;;579        WIDGET__Init(&pObj->Widget, Id, WIDGET_STATE_FOCUSSABLE | FRAMEWIN_SF_TITLEVIS);
0006c6  2230              MOVS     r2,#0x30
0006c8  4620              MOV      r0,r4
0006ca  9915              LDR      r1,[sp,#0x54]
0006cc  f7fffffe          BL       WIDGET__Init
;;;580        /* init member variables */
;;;581        FRAMEWIN_INIT_ID(pObj);
;;;582        pObj->Props = FRAMEWIN__DefaultProps;
0006d0  2220              MOVS     r2,#0x20
0006d2  4937              LDR      r1,|L1.1968|
0006d4  f1040028          ADD      r0,r4,#0x28
0006d8  f7fffffe          BL       __aeabi_memcpy4
;;;583        pObj->cb             = cb;
0006dc  9817              LDR      r0,[sp,#0x5c]
0006de  f8440f48          STR      r0,[r4,#0x48]!
;;;584        pObj->Flags          = ExFlags;
0006e2  f8a4a012          STRH     r10,[r4,#0x12]
;;;585        pObj->hFocussedChild = 0;
0006e6  2000              MOVS     r0,#0
0006e8  82a0              STRH     r0,[r4,#0x14]
;;;586        pObj->hMenu          = 0;
0006ea  80e0              STRH     r0,[r4,#6]
;;;587        pObj->pFirstHook     = NULL;
0006ec  61e0              STR      r0,[r4,#0x1c]
0006ee  3c48              SUBS     r4,r4,#0x48
;;;588        FRAMEWIN__CalcPositions(pObj, &Pos);
0006f0  a904              ADD      r1,sp,#0x10
0006f2  4620              MOV      r0,r4
0006f4  f7fffffe          BL       FRAMEWIN__CalcPositions
;;;589        pObj->hClient = WM_CreateWindowAsChild(Pos.rClient.x0,Pos.rClient.y0,
0006f8  2000              MOVS     r0,#0
0006fa  492e              LDR      r1,|L1.1972|
0006fc  f2417282          MOV      r2,#0x1782
000700  e9cd6200          STRD     r6,r2,[sp,#0]
000704  e9cd1002          STRD     r1,r0,[sp,#8]
000708  f9bde01a          LDRSH    lr,[sp,#0x1a]
00070c  f9bdc016          LDRSH    r12,[sp,#0x16]
000710  ebae0c0c          SUB      r12,lr,r12
000714  f10c0301          ADD      r3,r12,#1
000718  f9bdc018          LDRSH    r12,[sp,#0x18]
00071c  f9bde014          LDRSH    lr,[sp,#0x14]
000720  ebac0c0e          SUB      r12,r12,lr
000724  f10c0201          ADD      r2,r12,#1
000728  f9bd1016          LDRSH    r1,[sp,#0x16]
00072c  4670              MOV      r0,lr
00072e  f7fffffe          BL       WM_CreateWindowAsChild
000732  f8a4004c          STRH     r0,[r4,#0x4c]
;;;590                                               Pos.rClient.x1 - Pos.rClient.x0 +1,
;;;591                                               Pos.rClient.y1 - Pos.rClient.y0 +1,
;;;592                                               hObj, 
;;;593                                               WM_CF_ANCHOR_RIGHT | WM_CF_ANCHOR_LEFT | WM_CF_ANCHOR_TOP | WM_CF_ANCHOR_BOTTOM | WM_CF_SHOW | WM_CF_LATE_CLIP, 
;;;594                                               FRAMEWIN__cbClient, 0);
;;;595        /* Normally we disable memory devices for the frame window:
;;;596         * The frame window does not flicker, and not using memory devices is usually faster.
;;;597         * You can still use memory by explicitly specifying the flag
;;;598         */
;;;599        if ((WinFlags & (WM_CF_MEMDEV | (WM_CF_MEMDEV_ON_REDRAW))) == 0) {
000736  f2420004          MOV      r0,#0x2004
00073a  4028              ANDS     r0,r0,r5
00073c  b910              CBNZ     r0,|L1.1860|
;;;600          WM_DisableMemdev(hObj);
00073e  4630              MOV      r0,r6
000740  f7fffffe          BL       WM_DisableMemdev
                  |L1.1860|
;;;601        }
;;;602        FRAMEWIN_SetText(hObj, pTitle);
000744  4630              MOV      r0,r6
000746  9916              LDR      r1,[sp,#0x58]
000748  f7fffffe          BL       FRAMEWIN_SetText
;;;603      }
00074c  bf00              NOP      
                  |L1.1870|
;;;604      GUI_UNLOCK();
;;;605      return hObj;
00074e  4630              MOV      r0,r6
;;;606    }
000750  b009              ADD      sp,sp,#0x24
000752  e8bd8ff0          POP      {r4-r11,pc}
;;;607    
                          ENDP

                  FRAMEWIN_SetTextAlign PROC
;;;633    */
;;;634    void FRAMEWIN_SetTextAlign(FRAMEWIN_Handle hObj, int Align) {
000756  b570              PUSH     {r4-r6,lr}
000758  4605              MOV      r5,r0
00075a  460c              MOV      r4,r1
;;;635      if (hObj) {
00075c  b175              CBZ      r5,|L1.1916|
;;;636        FRAMEWIN_Obj* pObj;
;;;637        GUI_LOCK();
;;;638        pObj = FRAMEWIN_H2P(hObj);
00075e  4628              MOV      r0,r5
000760  f7fffffe          BL       GUI_ALLOC_h2p
000764  4606              MOV      r6,r0
;;;639        if (pObj->Props.TextAlign != Align) {
000766  f9b60046          LDRSH    r0,[r6,#0x46]
00076a  42a0              CMP      r0,r4
00076c  d005              BEQ      |L1.1914|
;;;640          pObj->Props.TextAlign = Align;
00076e  b221              SXTH     r1,r4
000770  2046              MOVS     r0,#0x46
000772  5381              STRH     r1,[r0,r6]
;;;641          FRAMEWIN_Invalidate(hObj);
000774  4628              MOV      r0,r5
000776  f7fffffe          BL       WM_InvalidateWindow
                  |L1.1914|
;;;642        }
;;;643        GUI_UNLOCK();
;;;644      }
00077a  bf00              NOP      
                  |L1.1916|
;;;645    }
00077c  bd70              POP      {r4-r6,pc}
;;;646    
                          ENDP

                  FRAMEWIN_SetMoveable PROC
;;;650    */
;;;651    void FRAMEWIN_SetMoveable(FRAMEWIN_Handle hObj, int State) {
00077e  b570              PUSH     {r4-r6,lr}
000780  4605              MOV      r5,r0
000782  460e              MOV      r6,r1
;;;652      if (hObj) {
000784  b195              CBZ      r5,|L1.1964|
;;;653        FRAMEWIN_Obj* pObj;
;;;654        GUI_LOCK();
;;;655        pObj = FRAMEWIN_H2P(hObj);
000786  4628              MOV      r0,r5
000788  f7fffffe          BL       GUI_ALLOC_h2p
00078c  4604              MOV      r4,r0
;;;656        if (State) {
00078e  b136              CBZ      r6,|L1.1950|
;;;657          pObj->Flags |= FRAMEWIN_CF_MOVEABLE;
000790  f8b4005a          LDRH     r0,[r4,#0x5a]
000794  f0400010          ORR      r0,r0,#0x10
000798  f8a4005a          STRH     r0,[r4,#0x5a]
00079c  e005              B        |L1.1962|
                  |L1.1950|
;;;658        } else {
;;;659          pObj->Flags &= ~FRAMEWIN_CF_MOVEABLE;
00079e  f8b4005a          LDRH     r0,[r4,#0x5a]
0007a2  f0200010          BIC      r0,r0,#0x10
0007a6  f8a4005a          STRH     r0,[r4,#0x5a]
                  |L1.1962|
;;;660        }
;;;661        GUI_UNLOCK();
;;;662      }
0007aa  bf00              NOP      
                  |L1.1964|
;;;663    }
0007ac  bd70              POP      {r4-r6,pc}
;;;664    
                          ENDP

0007ae  0000              DCW      0x0000
                  |L1.1968|
                          DCD      FRAMEWIN__DefaultProps
                  |L1.1972|
                          DCD      FRAMEWIN__cbClient

                          AREA ||.data||, DATA, ALIGN=2

                  FRAMEWIN__DefaultProps
                          DCD      GUI_Font8_1
                          DCD      0x00404040
                          DCD      0x00ff0000
                          DCD      0x00ffffff
                          DCD      0x00ffffff
                          DCD      0x00c0c0c0
000018  00000003          DCW      0x0000,0x0003
00001c  00010000          DCW      0x0001,0x0000
                  FRAMEWIN__MinVisibility
000020  0005              DCW      0x0005

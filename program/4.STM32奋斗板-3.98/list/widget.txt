; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\widget.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\widget.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -IC:\Users\Administrator\Desktop\gui\STM32·Ü¶·°å-3.98\RTE -Id:\Keil_v5\ARM\PACK\ARM\CMSIS\4.3.0\CMSIS\Include -Id:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.1.0\Device\Include -D__UVISION_VERSION=515 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\widget.crf GUI\Widget\WIDGET.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _UpdateChildPostions PROC
;;;49     */
;;;50     static void _UpdateChildPostions(WM_HWIN hObj, int Diff) {
000000  b5f8              PUSH     {r3-r7,lr}
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;51       WM_Obj* pObj;
;;;52       WM_LOCK();
;;;53       pObj = (WM_Obj*)WM_H2P(hObj);
000006  4628              MOV      r0,r5
000008  f7fffffe          BL       GUI_ALLOC_h2p
00000c  4606              MOV      r6,r0
;;;54       WM__UpdateChildPositions(pObj, -Diff, -Diff, Diff, Diff);
00000e  4623              MOV      r3,r4
000010  4262              RSBS     r2,r4,#0
000012  4261              RSBS     r1,r4,#0
000014  4630              MOV      r0,r6
000016  9400              STR      r4,[sp,#0]
000018  f7fffffe          BL       WM__UpdateChildPositions
;;;55       WM_UNLOCK();
;;;56     }
00001c  bdf8              POP      {r3-r7,pc}
;;;57     
                          ENDP

                  _EffectRequiresRedraw PROC
;;;67     */
;;;68     static int _EffectRequiresRedraw(const WIDGET* pWidget, const GUI_RECT * pRect) {
00001e  b57c              PUSH     {r2-r6,lr}
000020  4606              MOV      r6,r0
000022  460c              MOV      r4,r1
;;;69       int EffectSize = pWidget->pEffect->EffectSize;
000024  6a30              LDR      r0,[r6,#0x20]
000026  6945              LDR      r5,[r0,#0x14]
;;;70       GUI_RECT InvalidRect;
;;;71       InvalidRect = pWidget->Win.InvalidRect;
000028  68b0              LDR      r0,[r6,#8]
00002a  9000              STR      r0,[sp,#0]
00002c  68f0              LDR      r0,[r6,#0xc]
00002e  9001              STR      r0,[sp,#4]
;;;72       WM__Screen2Client(&pWidget->Win, &InvalidRect);
000030  4669              MOV      r1,sp
000032  4630              MOV      r0,r6
000034  f7fffffe          BL       WM__Screen2Client
;;;73       /* Check if there a part of the effect is inside the invalid rectangle */
;;;74       if ((pRect->x0 + EffectSize) > InvalidRect.x0) {
000038  f9b40000          LDRSH    r0,[r4,#0]
00003c  4428              ADD      r0,r0,r5
00003e  f9bd1000          LDRSH    r1,[sp,#0]
000042  4288              CMP      r0,r1
000044  dd01              BLE      |L1.74|
;;;75         return 1;               /* Overlap ... Drawing required */
000046  2001              MOVS     r0,#1
                  |L1.72|
;;;76       }
;;;77       if ((pRect->x1 - EffectSize) < InvalidRect.x1) {
;;;78         return 1;               /* Overlap ... Drawing required */
;;;79       }
;;;80       if ((pRect->y0 + EffectSize) > InvalidRect.y0) {
;;;81         return 1;               /* Overlap ... Drawing required */
;;;82       }
;;;83       if ((pRect->y1 - EffectSize) < InvalidRect.y1) {
;;;84         return 1;               /* Overlap ... Drawing required */
;;;85       }
;;;86       return 0;                 /* No overlap ! */
;;;87     }
000048  bd7c              POP      {r2-r6,pc}
                  |L1.74|
00004a  f9b40004          LDRSH    r0,[r4,#4]            ;77
00004e  1b40              SUBS     r0,r0,r5              ;77
000050  f9bd1004          LDRSH    r1,[sp,#4]            ;77
000054  4288              CMP      r0,r1                 ;77
000056  da01              BGE      |L1.92|
000058  2001              MOVS     r0,#1                 ;78
00005a  e7f5              B        |L1.72|
                  |L1.92|
00005c  f9b40002          LDRSH    r0,[r4,#2]            ;80
000060  4428              ADD      r0,r0,r5              ;80
000062  f9bd1002          LDRSH    r1,[sp,#2]            ;80
000066  4288              CMP      r0,r1                 ;80
000068  dd01              BLE      |L1.110|
00006a  2001              MOVS     r0,#1                 ;81
00006c  e7ec              B        |L1.72|
                  |L1.110|
00006e  f9b40006          LDRSH    r0,[r4,#6]            ;83
000072  1b40              SUBS     r0,r0,r5              ;83
000074  f9bd1006          LDRSH    r1,[sp,#6]            ;83
000078  4288              CMP      r0,r1                 ;83
00007a  da01              BGE      |L1.128|
00007c  2001              MOVS     r0,#1                 ;84
00007e  e7e3              B        |L1.72|
                  |L1.128|
000080  2000              MOVS     r0,#0                 ;86
000082  e7e1              B        |L1.72|
;;;88     
                          ENDP

                  WIDGET__RotateRect90 PROC
;;;99     */
;;;100    void WIDGET__RotateRect90(WIDGET* pWidget, GUI_RECT* pDest, const GUI_RECT* pRect) {
000084  b5f0              PUSH     {r4-r7,lr}
;;;101      int x0, x1, XSize;
;;;102      x0 = pRect->x0;
000086  f9b25000          LDRSH    r5,[r2,#0]
;;;103      x1 = pRect->x1;
00008a  f9b23004          LDRSH    r3,[r2,#4]
;;;104      XSize = pWidget->Win.Rect.x1 - pWidget->Win.Rect.x0;
00008e  f9b06004          LDRSH    r6,[r0,#4]
000092  f9b07000          LDRSH    r7,[r0,#0]
000096  1bf4              SUBS     r4,r6,r7
;;;105      pDest->x0 = XSize - pRect->y1;
000098  88d6              LDRH     r6,[r2,#6]
00009a  1ba6              SUBS     r6,r4,r6
00009c  b236              SXTH     r6,r6
00009e  800e              STRH     r6,[r1,#0]
;;;106      pDest->x1 = XSize - pRect->y0;
0000a0  8856              LDRH     r6,[r2,#2]
0000a2  1ba6              SUBS     r6,r4,r6
0000a4  b236              SXTH     r6,r6
0000a6  808e              STRH     r6,[r1,#4]
;;;107      pDest->y0 = x0;
0000a8  804d              STRH     r5,[r1,#2]
;;;108      pDest->y1 = x1;
0000aa  80cb              STRH     r3,[r1,#6]
;;;109    
;;;110    }
0000ac  bdf0              POP      {r4-r7,pc}
;;;111    
                          ENDP

                  WIDGET__GetClientRect PROC
;;;119    */
;;;120    void WIDGET__GetClientRect(WIDGET* pWidget, GUI_RECT* pRect) {
0000ae  b57c              PUSH     {r2-r6,lr}
0000b0  4605              MOV      r5,r0
0000b2  460c              MOV      r4,r1
;;;121      if (pWidget->State & WIDGET_STATE_VERTICAL) {
0000b4  f8950026          LDRB     r0,[r5,#0x26]
0000b8  f0000008          AND      r0,r0,#8
0000bc  b178              CBZ      r0,|L1.222|
;;;122        GUI_RECT Rect;
;;;123        WM_GetClientRect(&Rect);
0000be  4668              MOV      r0,sp
0000c0  f7fffffe          BL       WM_GetClientRect
;;;124        pRect->x0 = Rect.y0;
0000c4  f8bd0002          LDRH     r0,[sp,#2]
0000c8  8020              STRH     r0,[r4,#0]
;;;125        pRect->x1 = Rect.y1;
0000ca  f8bd0006          LDRH     r0,[sp,#6]
0000ce  80a0              STRH     r0,[r4,#4]
;;;126        pRect->y0 = Rect.x0;
0000d0  f8bd0000          LDRH     r0,[sp,#0]
0000d4  8060              STRH     r0,[r4,#2]
;;;127        pRect->y1 = Rect.x1;
0000d6  f8bd0004          LDRH     r0,[sp,#4]
0000da  80e0              STRH     r0,[r4,#6]
;;;128      } else {
0000dc  e002              B        |L1.228|
                  |L1.222|
;;;129        WM_GetClientRect(pRect);
0000de  4620              MOV      r0,r4
0000e0  f7fffffe          BL       WM_GetClientRect
                  |L1.228|
;;;130      }
;;;131    }
0000e4  bd7c              POP      {r2-r6,pc}
;;;132    
                          ENDP

                  WIDGET__GetBkColor PROC
;;;136    */
;;;137    GUI_COLOR WIDGET__GetBkColor(WM_HWIN hObj) {
0000e6  b570              PUSH     {r4-r6,lr}
0000e8  4605              MOV      r5,r0
;;;138      GUI_COLOR BkColor = WM_GetBkColor(WM_GetParent(hObj));
0000ea  4628              MOV      r0,r5
0000ec  f7fffffe          BL       WM_GetParent
0000f0  4606              MOV      r6,r0
0000f2  f7fffffe          BL       WM_GetBkColor
0000f6  4604              MOV      r4,r0
;;;139      if (BkColor == GUI_INVALID_COLOR) {
0000f8  f06f4070          MVN      r0,#0xf0000000
0000fc  4284              CMP      r4,r0
0000fe  d102              BNE      |L1.262|
;;;140        BkColor = DIALOG_GetBkColor();
000100  f7fffffe          BL       DIALOG_GetBkColor
000104  4604              MOV      r4,r0
                  |L1.262|
;;;141      }
;;;142      return BkColor;
000106  4620              MOV      r0,r4
;;;143    }
000108  bd70              POP      {r4-r6,pc}
;;;144    
                          ENDP

                  WIDGET__GetInsideRect PROC
;;;148    */
;;;149    void WIDGET__GetInsideRect(WIDGET* pWidget, GUI_RECT* pRect) {
00010a  b570              PUSH     {r4-r6,lr}
00010c  4604              MOV      r4,r0
00010e  460d              MOV      r5,r1
;;;150      WM__GetClientRectWin(&pWidget->Win, pRect);
000110  4629              MOV      r1,r5
000112  4620              MOV      r0,r4
000114  f7fffffe          BL       WM__GetClientRectWin
;;;151      GUI__ReduceRect(pRect, pRect, pWidget->pEffect->EffectSize);
000118  6a20              LDR      r0,[r4,#0x20]
00011a  4629              MOV      r1,r5
00011c  6942              LDR      r2,[r0,#0x14]
00011e  4628              MOV      r0,r5
000120  f7fffffe          BL       GUI__ReduceRect
;;;152    }
000124  bd70              POP      {r4-r6,pc}
;;;153    
                          ENDP

                  WIDGET__GetXSize PROC
;;;157    */
;;;158    int WIDGET__GetXSize(const WIDGET* pWidget) {
000126  4601              MOV      r1,r0
;;;159      int r;
;;;160      if (pWidget->State & WIDGET_STATE_VERTICAL) {
000128  f8910026          LDRB     r0,[r1,#0x26]
00012c  f0000008          AND      r0,r0,#8
000130  b128              CBZ      r0,|L1.318|
;;;161        r = pWidget->Win.Rect.y1 - pWidget->Win.Rect.y0;
000132  f9b10006          LDRSH    r0,[r1,#6]
000136  f9b13002          LDRSH    r3,[r1,#2]
00013a  1ac2              SUBS     r2,r0,r3
00013c  e004              B        |L1.328|
                  |L1.318|
;;;162      } else {
;;;163        r = pWidget->Win.Rect.x1 - pWidget->Win.Rect.x0;
00013e  f9b10004          LDRSH    r0,[r1,#4]
000142  f9b13000          LDRSH    r3,[r1,#0]
000146  1ac2              SUBS     r2,r0,r3
                  |L1.328|
;;;164      }
;;;165      return r + 1;
000148  1c50              ADDS     r0,r2,#1
;;;166    }
00014a  4770              BX       lr
;;;167    
                          ENDP

                  WIDGET__GetYSize PROC
;;;171    */
;;;172    int WIDGET__GetYSize(const WIDGET* pWidget) {
00014c  4601              MOV      r1,r0
;;;173      int r;
;;;174      if (pWidget->State & WIDGET_STATE_VERTICAL) {
00014e  f8910026          LDRB     r0,[r1,#0x26]
000152  f0000008          AND      r0,r0,#8
000156  b128              CBZ      r0,|L1.356|
;;;175        r = pWidget->Win.Rect.x1 - pWidget->Win.Rect.x0;
000158  f9b10004          LDRSH    r0,[r1,#4]
00015c  f9b13000          LDRSH    r3,[r1,#0]
000160  1ac2              SUBS     r2,r0,r3
000162  e004              B        |L1.366|
                  |L1.356|
;;;176      } else {
;;;177        r = pWidget->Win.Rect.y1 - pWidget->Win.Rect.y0;
000164  f9b10006          LDRSH    r0,[r1,#6]
000168  f9b13002          LDRSH    r3,[r1,#2]
00016c  1ac2              SUBS     r2,r0,r3
                  |L1.366|
;;;178      }
;;;179      return r + 1;
00016e  1c50              ADDS     r0,r2,#1
;;;180    }
000170  4770              BX       lr
;;;181    
                          ENDP

                  WIDGET__GetWindowSizeX PROC
;;;187    */
;;;188    int WIDGET__GetWindowSizeX(WM_HWIN hWin) {
000172  b570              PUSH     {r4-r6,lr}
000174  4604              MOV      r4,r0
;;;189      WIDGET* pWidget = WIDGET_H2P(hWin);
000176  4620              MOV      r0,r4
000178  f7fffffe          BL       GUI_ALLOC_h2p
00017c  4605              MOV      r5,r0
;;;190      if (pWidget->State & WIDGET_STATE_VERTICAL) {
00017e  f8950026          LDRB     r0,[r5,#0x26]
000182  f0000008          AND      r0,r0,#8
000186  b118              CBZ      r0,|L1.400|
;;;191        return WM_GetWindowSizeY(hWin);
000188  4620              MOV      r0,r4
00018a  f7fffffe          BL       WM_GetWindowSizeY
                  |L1.398|
;;;192      } else {
;;;193        return WM_GetWindowSizeX(hWin);
;;;194      }
;;;195    }
00018e  bd70              POP      {r4-r6,pc}
                  |L1.400|
000190  4620              MOV      r0,r4                 ;193
000192  f7fffffe          BL       WM_GetWindowSizeX
000196  e7fa              B        |L1.398|
;;;196    
                          ENDP

                  WIDGET_SetState PROC
;;;200    */
;;;201    void WIDGET_SetState(WM_HWIN hObj, int State) {
000198  b570              PUSH     {r4-r6,lr}
00019a  4606              MOV      r6,r0
00019c  460c              MOV      r4,r1
;;;202      WIDGET* pWidget;
;;;203      WM_LOCK();
;;;204      pWidget = WIDGET_H2P(hObj);
00019e  4630              MOV      r0,r6
0001a0  f7fffffe          BL       GUI_ALLOC_h2p
0001a4  4605              MOV      r5,r0
;;;205      if (State != pWidget->State) {
0001a6  8ce8              LDRH     r0,[r5,#0x26]
0001a8  42a0              CMP      r0,r4
0001aa  d003              BEQ      |L1.436|
;;;206        pWidget->State = State;
0001ac  84ec              STRH     r4,[r5,#0x26]
;;;207        WM_Invalidate(hObj);
0001ae  4630              MOV      r0,r6
0001b0  f7fffffe          BL       WM_InvalidateWindow
                  |L1.436|
;;;208      }
;;;209      WM_UNLOCK();
;;;210    }
0001b4  bd70              POP      {r4-r6,pc}
;;;211    
                          ENDP

                  WIDGET_GetState PROC
;;;215    */
;;;216    int WIDGET_GetState(WM_HWIN hObj) {
0001b6  b570              PUSH     {r4-r6,lr}
0001b8  4605              MOV      r5,r0
;;;217      int Ret = 0;
0001ba  2600              MOVS     r6,#0
;;;218      WIDGET * pWidget;
;;;219      if (hObj) {
0001bc  b125              CBZ      r5,|L1.456|
;;;220        WM_LOCK();
;;;221        pWidget = WIDGET_H2P(hObj);
0001be  4628              MOV      r0,r5
0001c0  f7fffffe          BL       GUI_ALLOC_h2p
0001c4  4604              MOV      r4,r0
;;;222        Ret = pWidget->State;
0001c6  8ce6              LDRH     r6,[r4,#0x26]
                  |L1.456|
;;;223        WM_UNLOCK();
;;;224      }
;;;225      return Ret;
0001c8  4630              MOV      r0,r6
;;;226    }
0001ca  bd70              POP      {r4-r6,pc}
;;;227    
                          ENDP

                  WIDGET_OrState PROC
;;;231    */
;;;232    void WIDGET_OrState(WM_HWIN hObj, int State) {
0001cc  b570              PUSH     {r4-r6,lr}
0001ce  4606              MOV      r6,r0
0001d0  460c              MOV      r4,r1
;;;233      if (hObj) {
0001d2  b176              CBZ      r6,|L1.498|
;;;234        WIDGET* pWidget;
;;;235        WM_LOCK();
;;;236        pWidget = WIDGET_H2P(hObj);
0001d4  4630              MOV      r0,r6
0001d6  f7fffffe          BL       GUI_ALLOC_h2p
0001da  4605              MOV      r5,r0
;;;237        if (State != (pWidget->State & State)) {
0001dc  8ce8              LDRH     r0,[r5,#0x26]
0001de  4020              ANDS     r0,r0,r4
0001e0  42a0              CMP      r0,r4
0001e2  d005              BEQ      |L1.496|
;;;238          pWidget->State |= State;
0001e4  8ce8              LDRH     r0,[r5,#0x26]
0001e6  4320              ORRS     r0,r0,r4
0001e8  84e8              STRH     r0,[r5,#0x26]
;;;239          WM_Invalidate(hObj);
0001ea  4630              MOV      r0,r6
0001ec  f7fffffe          BL       WM_InvalidateWindow
                  |L1.496|
;;;240        }
;;;241        WM_UNLOCK();
;;;242      }
0001f0  bf00              NOP      
                  |L1.498|
;;;243    }
0001f2  bd70              POP      {r4-r6,pc}
;;;244    
                          ENDP

                  WIDGET_AndState PROC
;;;255    */
;;;256    void WIDGET_AndState(WM_HWIN hObj, int Mask) {
0001f4  e92d41f0          PUSH     {r4-r8,lr}
0001f8  4606              MOV      r6,r0
0001fa  460f              MOV      r7,r1
;;;257      U16 StateNew;
;;;258      if (hObj) {
0001fc  b176              CBZ      r6,|L1.540|
;;;259        WIDGET* pWidget;
;;;260        WM_LOCK();
;;;261        pWidget = WIDGET_H2P(hObj);
0001fe  4630              MOV      r0,r6
000200  f7fffffe          BL       GUI_ALLOC_h2p
000204  4605              MOV      r5,r0
;;;262        StateNew = pWidget->State & (~Mask);
000206  8ce8              LDRH     r0,[r5,#0x26]
000208  ea200407          BIC      r4,r0,r7
;;;263        if (pWidget->State != StateNew) {
00020c  8ce8              LDRH     r0,[r5,#0x26]
00020e  42a0              CMP      r0,r4
000210  d003              BEQ      |L1.538|
;;;264          pWidget->State = StateNew;
000212  84ec              STRH     r4,[r5,#0x26]
;;;265          WM_Invalidate(hObj);
000214  4630              MOV      r0,r6
000216  f7fffffe          BL       WM_InvalidateWindow
                  |L1.538|
;;;266        }
;;;267        WM_UNLOCK();
;;;268      }
00021a  bf00              NOP      
                  |L1.540|
;;;269    }
00021c  e8bd81f0          POP      {r4-r8,pc}
;;;270    
                          ENDP

                  WIDGET__Init PROC
;;;274    */
;;;275    void WIDGET__Init(WIDGET* pWidget, int Id, U16 State) {
000220  4b9a              LDR      r3,|L1.1164|
;;;276      pWidget->pEffect       = _pEffectDefault;
000222  681b              LDR      r3,[r3,#0]  ; _pEffectDefault
000224  6203              STR      r3,[r0,#0x20]
;;;277      pWidget->State         = State;
000226  84c2              STRH     r2,[r0,#0x26]
;;;278      pWidget->Id            = Id;
000228  b20b              SXTH     r3,r1
00022a  8483              STRH     r3,[r0,#0x24]
;;;279    }
00022c  4770              BX       lr
;;;280    
                          ENDP

                  WIDGET_HandleActive PROC
;;;285    */
;;;286    int WIDGET_HandleActive(WM_HWIN hObj, WM_MESSAGE* pMsg) {
00022e  e92d47f0          PUSH     {r4-r10,lr}
000232  4681              MOV      r9,r0
000234  460c              MOV      r4,r1
;;;287      int Diff, Notification;
;;;288      WIDGET* pWidget = WIDGET_H2P(hObj);
000236  4648              MOV      r0,r9
000238  f7fffffe          BL       GUI_ALLOC_h2p
00023c  4605              MOV      r5,r0
;;;289      switch (pMsg->MsgId) {
00023e  6820              LDR      r0,[r4,#0]
000240  2816              CMP      r0,#0x16
000242  d045              BEQ      |L1.720|
000244  dc08              BGT      |L1.600|
000246  280d              CMP      r0,#0xd
000248  d032              BEQ      |L1.688|
00024a  2811              CMP      r0,#0x11
00024c  d021              BEQ      |L1.658|
00024e  2814              CMP      r0,#0x14
000250  d063              BEQ      |L1.794|
000252  2815              CMP      r0,#0x15
000254  d167              BNE      |L1.806|
000256  e017              B        |L1.648|
                  |L1.600|
000258  281e              CMP      r0,#0x1e
00025a  d03e              BEQ      |L1.730|
00025c  281f              CMP      r0,#0x1f
00025e  d055              BEQ      |L1.780|
000260  f5b07f40          CMP      r0,#0x300
000264  d15f              BNE      |L1.806|
;;;290      case WM_WIDGET_SET_EFFECT:
;;;291        Diff = pWidget->pEffect->EffectSize;
000266  6a28              LDR      r0,[r5,#0x20]
000268  6947              LDR      r7,[r0,#0x14]
;;;292        pWidget->pEffect = (const WIDGET_EFFECT*)pMsg->Data.p;
00026a  68a0              LDR      r0,[r4,#8]
00026c  6228              STR      r0,[r5,#0x20]
;;;293        Diff -= pWidget->pEffect->EffectSize;
00026e  6a28              LDR      r0,[r5,#0x20]
000270  6940              LDR      r0,[r0,#0x14]
000272  1a3f              SUBS     r7,r7,r0
;;;294        _UpdateChildPostions(hObj, Diff);
000274  4639              MOV      r1,r7
000276  4648              MOV      r0,r9
000278  f7fffffe          BL       _UpdateChildPostions
;;;295        WM_InvalidateWindow(hObj);
00027c  4648              MOV      r0,r9
00027e  f7fffffe          BL       WM_InvalidateWindow
;;;296        return 0;                        /* Message handled -> Return */
000282  2000              MOVS     r0,#0
                  |L1.644|
;;;297      case WM_GET_ID:
;;;298        pMsg->Data.v = pWidget->Id;
;;;299        return 0;                        /* Message handled -> Return */
;;;300      case WM_PID_STATE_CHANGED:
;;;301        if (pWidget->State & WIDGET_STATE_FOCUSSABLE) {
;;;302          const WM_PID_STATE_CHANGED_INFO * pInfo = (const WM_PID_STATE_CHANGED_INFO*)pMsg->Data.p;
;;;303          if (pInfo->State) {
;;;304            WM_SetFocus(hObj);
;;;305          }
;;;306        }
;;;307        break;
;;;308      case WM_TOUCH_CHILD:
;;;309        /* A descendent (child) has been touched or released.
;;;310           If it has been touched, we need to get to top.
;;;311         */
;;;312        {
;;;313          const WM_MESSAGE * pMsgOrg;
;;;314          const GUI_PID_STATE * pState;
;;;315          pMsgOrg = (const WM_MESSAGE*)pMsg->Data.p;      /* The original touch message */
;;;316          pState = (const GUI_PID_STATE*)pMsgOrg->Data.p;
;;;317          if (pState) {          /* Message may not have a valid pointer (moved out) ! */
;;;318            if (pState->Pressed) {
;;;319              WM_BringToTop(hObj);
;;;320              return 0;                    /* Message handled -> Return */
;;;321            }
;;;322          }
;;;323        }
;;;324        break;
;;;325      case WM_SET_ID:
;;;326        pWidget->Id = pMsg->Data.v;
;;;327        return 0;                        /* Message handled -> Return */
;;;328      case WM_SET_FOCUS:
;;;329        if (pMsg->Data.v == 1) {
;;;330          WIDGET_SetState(hObj, pWidget->State |  WIDGET_STATE_FOCUS);
;;;331          Notification = WM_NOTIFICATION_GOT_FOCUS;
;;;332        } else {
;;;333          WIDGET_SetState(hObj, pWidget->State & ~WIDGET_STATE_FOCUS);
;;;334          Notification = WM_NOTIFICATION_LOST_FOCUS;
;;;335        }
;;;336        WM_NotifyParent(hObj, Notification);
;;;337        pMsg->Data.v = 0;   /* Focus change accepted */
;;;338        return 0;
;;;339      case WM_GET_ACCEPT_FOCUS:
;;;340        pMsg->Data.v = (pWidget->State & WIDGET_STATE_FOCUSSABLE) ? 1 : 0;               /* Can handle focus */
;;;341        return 0;                         /* Message handled */
;;;342      case WM_GET_INSIDE_RECT:
;;;343        WIDGET__GetInsideRect(pWidget, (GUI_RECT*)pMsg->Data.p);
;;;344        return 0;                         /* Message handled */
;;;345      }
;;;346      return 1;                           /* Message NOT handled */
;;;347    }
000284  e8bd87f0          POP      {r4-r10,pc}
                  |L1.648|
000288  f9b50024          LDRSH    r0,[r5,#0x24]         ;298
00028c  60a0              STR      r0,[r4,#8]            ;298
00028e  2000              MOVS     r0,#0                 ;299
000290  e7f8              B        |L1.644|
                  |L1.658|
000292  f8950026          LDRB     r0,[r5,#0x26]         ;301
000296  f0000010          AND      r0,r0,#0x10           ;301
00029a  b140              CBZ      r0,|L1.686|
00029c  f8d48008          LDR      r8,[r4,#8]            ;302
0002a0  f8980008          LDRB     r0,[r8,#8]            ;303
0002a4  b110              CBZ      r0,|L1.684|
0002a6  4648              MOV      r0,r9                 ;304
0002a8  f7fffffe          BL       WM_SetFocus
                  |L1.684|
0002ac  bf00              NOP                            ;306
                  |L1.686|
0002ae  e03a              B        |L1.806|
                  |L1.688|
0002b0  f8d4a008          LDR      r10,[r4,#8]           ;315
0002b4  f8da8008          LDR      r8,[r10,#8]           ;316
0002b8  f1b80f00          CMP      r8,#0                 ;317
0002bc  d007              BEQ      |L1.718|
0002be  f8980008          LDRB     r0,[r8,#8]            ;318
0002c2  b120              CBZ      r0,|L1.718|
0002c4  4648              MOV      r0,r9                 ;319
0002c6  f7fffffe          BL       WM_BringToTop
0002ca  2000              MOVS     r0,#0                 ;320
0002cc  e7da              B        |L1.644|
                  |L1.718|
0002ce  e02a              B        |L1.806|
                  |L1.720|
0002d0  8920              LDRH     r0,[r4,#8]            ;326
0002d2  b200              SXTH     r0,r0                 ;326
0002d4  84a8              STRH     r0,[r5,#0x24]         ;326
0002d6  2000              MOVS     r0,#0                 ;327
0002d8  e7d4              B        |L1.644|
                  |L1.730|
0002da  68a0              LDR      r0,[r4,#8]            ;329
0002dc  2801              CMP      r0,#1                 ;329
0002de  d107              BNE      |L1.752|
0002e0  8ce8              LDRH     r0,[r5,#0x26]         ;330
0002e2  f0400101          ORR      r1,r0,#1              ;330
0002e6  4648              MOV      r0,r9                 ;330
0002e8  f7fffffe          BL       WIDGET_SetState
0002ec  2608              MOVS     r6,#8                 ;331
0002ee  e006              B        |L1.766|
                  |L1.752|
0002f0  8ce8              LDRH     r0,[r5,#0x26]         ;333
0002f2  f0200101          BIC      r1,r0,#1              ;333
0002f6  4648              MOV      r0,r9                 ;333
0002f8  f7fffffe          BL       WIDGET_SetState
0002fc  2609              MOVS     r6,#9                 ;334
                  |L1.766|
0002fe  4631              MOV      r1,r6                 ;336
000300  4648              MOV      r0,r9                 ;336
000302  f7fffffe          BL       WM_NotifyParent
000306  2000              MOVS     r0,#0                 ;337
000308  60a0              STR      r0,[r4,#8]            ;337
00030a  e7bb              B        |L1.644|
                  |L1.780|
00030c  f8950026          LDRB     r0,[r5,#0x26]         ;340
000310  f3c01000          UBFX     r0,r0,#4,#1           ;340
000314  60a0              STR      r0,[r4,#8]            ;340
000316  2000              MOVS     r0,#0                 ;341
000318  e7b4              B        |L1.644|
                  |L1.794|
00031a  4628              MOV      r0,r5                 ;343
00031c  68a1              LDR      r1,[r4,#8]            ;343
00031e  f7fffffe          BL       WIDGET__GetInsideRect
000322  2000              MOVS     r0,#0                 ;344
000324  e7ae              B        |L1.644|
                  |L1.806|
000326  bf00              NOP                            ;307
000328  2001              MOVS     r0,#1                 ;346
00032a  e7ab              B        |L1.644|
;;;348    
                          ENDP

                  WIDGET__SetScrollState PROC
;;;352    */
;;;353    void WIDGET__SetScrollState(WM_HWIN hWin, const WM_SCROLL_STATE* pVState, const WM_SCROLL_STATE* pHState) {
00032c  e92d41f0          PUSH     {r4-r8,lr}
000330  4605              MOV      r5,r0
000332  460e              MOV      r6,r1
000334  4614              MOV      r4,r2
;;;354      WM_HWIN hScroll;
;;;355      /* vertical scrollbar */
;;;356      hScroll = WM_GetDialogItem(hWin, GUI_ID_VSCROLL);
000336  21fe              MOVS     r1,#0xfe
000338  4628              MOV      r0,r5
00033a  f7fffffe          BL       WM_GetDialogItem
00033e  4607              MOV      r7,r0
;;;357      WM_SetScrollState(hScroll, pVState);
000340  4631              MOV      r1,r6
000342  4638              MOV      r0,r7
000344  f7fffffe          BL       WM_SetScrollState
;;;358      /* horizontal scrollbar */
;;;359      hScroll = WM_GetDialogItem(hWin, GUI_ID_HSCROLL);
000348  21ff              MOVS     r1,#0xff
00034a  4628              MOV      r0,r5
00034c  f7fffffe          BL       WM_GetDialogItem
000350  4607              MOV      r7,r0
;;;360      WM_SetScrollState(hScroll, pHState);
000352  4621              MOV      r1,r4
000354  4638              MOV      r0,r7
000356  f7fffffe          BL       WM_SetScrollState
;;;361    }
00035a  e8bd81f0          POP      {r4-r8,pc}
;;;362    
                          ENDP

                  WIDGET__DrawFocusRect PROC
;;;366    */
;;;367    void WIDGET__DrawFocusRect(WIDGET* pWidget, const GUI_RECT* pRect, int Dist) {
00035e  b57c              PUSH     {r2-r6,lr}
000360  4606              MOV      r6,r0
000362  460c              MOV      r4,r1
000364  4615              MOV      r5,r2
;;;368      GUI_RECT Rect;
;;;369      if (pWidget->State & WIDGET_STATE_VERTICAL) {
000366  f8960026          LDRB     r0,[r6,#0x26]
00036a  f0000008          AND      r0,r0,#8
00036e  b128              CBZ      r0,|L1.892|
;;;370        WIDGET__RotateRect90(pWidget, &Rect, pRect);
000370  4622              MOV      r2,r4
000372  4669              MOV      r1,sp
000374  4630              MOV      r0,r6
000376  f7fffffe          BL       WIDGET__RotateRect90
;;;371        pRect = &Rect;
00037a  466c              MOV      r4,sp
                  |L1.892|
;;;372      }
;;;373      GUI_DrawFocusRect(pRect, Dist);
00037c  4629              MOV      r1,r5
00037e  4620              MOV      r0,r4
000380  f7fffffe          BL       GUI_DrawFocusRect
;;;374    }
000384  bd7c              POP      {r2-r6,pc}
;;;375    
                          ENDP

                  WIDGET__DrawVLine PROC
;;;379    */
;;;380    void WIDGET__DrawVLine(WIDGET* pWidget, int x, int y0, int y1) {
000386  e92d41ff          PUSH     {r0-r8,lr}
00038a  4607              MOV      r7,r0
00038c  460c              MOV      r4,r1
00038e  4615              MOV      r5,r2
000390  461e              MOV      r6,r3
;;;381      if (pWidget->State & WIDGET_STATE_VERTICAL) {
000392  f8970026          LDRB     r0,[r7,#0x26]
000396  f0000008          AND      r0,r0,#8
00039a  b1c8              CBZ      r0,|L1.976|
;;;382        GUI_RECT r0, r1;
;;;383        r0.x0 = x;
00039c  b220              SXTH     r0,r4
00039e  f8ad0008          STRH     r0,[sp,#8]
;;;384        r0.x1 = x;
0003a2  b220              SXTH     r0,r4
0003a4  f8ad000c          STRH     r0,[sp,#0xc]
;;;385        r0.y0 = y0;
0003a8  b228              SXTH     r0,r5
0003aa  f8ad000a          STRH     r0,[sp,#0xa]
;;;386        r0.y1 = y1;
0003ae  b230              SXTH     r0,r6
0003b0  f8ad000e          STRH     r0,[sp,#0xe]
;;;387        WIDGET__RotateRect90(pWidget, &r1, &r0);
0003b4  aa02              ADD      r2,sp,#8
0003b6  4669              MOV      r1,sp
0003b8  4638              MOV      r0,r7
0003ba  f7fffffe          BL       WIDGET__RotateRect90
;;;388        GUI_DrawHLine(r1.y0, r1.x0, r1.x1);
0003be  f9bd2004          LDRSH    r2,[sp,#4]
0003c2  f9bd1000          LDRSH    r1,[sp,#0]
0003c6  f9bd0002          LDRSH    r0,[sp,#2]
0003ca  f7fffffe          BL       GUI_DrawHLine
;;;389      } else {
0003ce  e004              B        |L1.986|
                  |L1.976|
;;;390        GUI_DrawVLine(x, y0, y1);
0003d0  4632              MOV      r2,r6
0003d2  4629              MOV      r1,r5
0003d4  4620              MOV      r0,r4
0003d6  f7fffffe          BL       GUI_DrawVLine
                  |L1.986|
;;;391      }
;;;392    }
0003da  e8bd81ff          POP      {r0-r8,pc}
;;;393    
                          ENDP

                  WIDGET__FillRectEx PROC
;;;397    */
;;;398    void WIDGET__FillRectEx(WIDGET* pWidget, const GUI_RECT* pRect) {
0003de  b57c              PUSH     {r2-r6,lr}
0003e0  4605              MOV      r5,r0
0003e2  460c              MOV      r4,r1
;;;399      if (pWidget->State & WIDGET_STATE_VERTICAL) {
0003e4  f8950026          LDRB     r0,[r5,#0x26]
0003e8  f0000008          AND      r0,r0,#8
0003ec  b130              CBZ      r0,|L1.1020|
;;;400        GUI_RECT r;
;;;401        WIDGET__RotateRect90(pWidget, &r, pRect);
0003ee  4622              MOV      r2,r4
0003f0  4669              MOV      r1,sp
0003f2  4628              MOV      r0,r5
0003f4  f7fffffe          BL       WIDGET__RotateRect90
;;;402        pRect = &r;
0003f8  466c              MOV      r4,sp
;;;403      }
0003fa  bf00              NOP      
                  |L1.1020|
;;;404      GUI_FillRectEx(pRect);
0003fc  4620              MOV      r0,r4
0003fe  f7fffffe          BL       GUI_FillRectEx
;;;405    }
000402  bd7c              POP      {r2-r6,pc}
;;;406    
                          ENDP

                  WIDGET__EFFECT_DrawDownRect PROC
;;;410    */
;;;411    void WIDGET__EFFECT_DrawDownRect(WIDGET* pWidget, GUI_RECT* pRect) {
000404  b57c              PUSH     {r2-r6,lr}
000406  4605              MOV      r5,r0
000408  460c              MOV      r4,r1
;;;412      GUI_RECT Rect;
;;;413      if (pRect == NULL) {
00040a  b91c              CBNZ     r4,|L1.1044|
;;;414        WM_GetClientRect(&Rect);
00040c  4668              MOV      r0,sp
00040e  f7fffffe          BL       WM_GetClientRect
;;;415        pRect = &Rect;
000412  466c              MOV      r4,sp
                  |L1.1044|
;;;416      }
;;;417      if (pWidget->State & WIDGET_STATE_VERTICAL) {
000414  f8950026          LDRB     r0,[r5,#0x26]
000418  f0000008          AND      r0,r0,#8
00041c  b128              CBZ      r0,|L1.1066|
;;;418        WIDGET__RotateRect90(pWidget, &Rect, pRect);
00041e  4622              MOV      r2,r4
000420  4669              MOV      r1,sp
000422  4628              MOV      r0,r5
000424  f7fffffe          BL       WIDGET__RotateRect90
;;;419        pRect = &Rect;
000428  466c              MOV      r4,sp
                  |L1.1066|
;;;420      }
;;;421      if (_EffectRequiresRedraw(pWidget, pRect)) {
00042a  4621              MOV      r1,r4
00042c  4628              MOV      r0,r5
00042e  f7fffffe          BL       _EffectRequiresRedraw
000432  b118              CBZ      r0,|L1.1084|
;;;422        pWidget->pEffect->pfDrawDownRect(pRect);
000434  6a28              LDR      r0,[r5,#0x20]
000436  68c1              LDR      r1,[r0,#0xc]
000438  4620              MOV      r0,r4
00043a  4788              BLX      r1
                  |L1.1084|
;;;423      }
;;;424    }
00043c  bd7c              POP      {r2-r6,pc}
;;;425    
                          ENDP

                  WIDGET__EFFECT_DrawDown PROC
;;;429    */
;;;430    void WIDGET__EFFECT_DrawDown(WIDGET* pWidget) {
00043e  b510              PUSH     {r4,lr}
000440  4604              MOV      r4,r0
;;;431      WIDGET__EFFECT_DrawDownRect(pWidget, NULL);
000442  2100              MOVS     r1,#0
000444  4620              MOV      r0,r4
000446  f7fffffe          BL       WIDGET__EFFECT_DrawDownRect
;;;432    }
00044a  bd10              POP      {r4,pc}
;;;433    
                          ENDP

                  WIDGET__EFFECT_DrawUpRect PROC
;;;437    */
;;;438    void WIDGET__EFFECT_DrawUpRect(WIDGET* pWidget, GUI_RECT* pRect) {
00044c  b57c              PUSH     {r2-r6,lr}
00044e  4604              MOV      r4,r0
000450  460d              MOV      r5,r1
;;;439      GUI_RECT Rect;
;;;440      if (pWidget->State & WIDGET_STATE_VERTICAL) {
000452  f8940026          LDRB     r0,[r4,#0x26]
000456  f0000008          AND      r0,r0,#8
00045a  b128              CBZ      r0,|L1.1128|
;;;441        WIDGET__RotateRect90(pWidget, &Rect, pRect);
00045c  462a              MOV      r2,r5
00045e  4669              MOV      r1,sp
000460  4620              MOV      r0,r4
000462  f7fffffe          BL       WIDGET__RotateRect90
;;;442        pRect = &Rect;
000466  466d              MOV      r5,sp
                  |L1.1128|
;;;443      }
;;;444      if (_EffectRequiresRedraw(pWidget, pRect)) {
000468  4629              MOV      r1,r5
00046a  4620              MOV      r0,r4
00046c  f7fffffe          BL       _EffectRequiresRedraw
000470  b118              CBZ      r0,|L1.1146|
;;;445        pWidget->pEffect->pfDrawUpRect(pRect);
000472  6a20              LDR      r0,[r4,#0x20]
000474  6881              LDR      r1,[r0,#8]
000476  4628              MOV      r0,r5
000478  4788              BLX      r1
                  |L1.1146|
;;;446      }
;;;447    }
00047a  bd7c              POP      {r2-r6,pc}
;;;448    
                          ENDP

                  WIDGET_SetDefaultEffect PROC
;;;452    */
;;;453    const WIDGET_EFFECT* WIDGET_SetDefaultEffect(const WIDGET_EFFECT* pEffect) {
00047c  4601              MOV      r1,r0
;;;454      const WIDGET_EFFECT* r;
;;;455      r = _pEffectDefault;
00047e  4a03              LDR      r2,|L1.1164|
000480  6810              LDR      r0,[r2,#0]  ; _pEffectDefault
;;;456      _pEffectDefault = pEffect;
000482  6011              STR      r1,[r2,#0]  ; _pEffectDefault
;;;457      return r;
;;;458    }
000484  4770              BX       lr
;;;459    
                          ENDP

                  WIDGET_GetDefaultEffect PROC
;;;463    */
;;;464    const WIDGET_EFFECT*  WIDGET_GetDefaultEffect(void) {
000486  4801              LDR      r0,|L1.1164|
;;;465      return _pEffectDefault;
000488  6800              LDR      r0,[r0,#0]  ; _pEffectDefault
;;;466    }
00048a  4770              BX       lr
;;;467    
                          ENDP

                  |L1.1164|
                          DCD      _pEffectDefault

                          AREA ||.data||, DATA, ALIGN=2

                  _pEffectDefault
                          DCD      WIDGET_Effect_3D

; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\text.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\text.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -IC:\Users\Administrator\Desktop\gui\STM32·Ü¶·°å-3.98\RTE -Id:\Keil_v5\ARM\PACK\ARM\CMSIS\4.3.0\CMSIS\Include -Id:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.1.0\Device\Include -D__UVISION_VERSION=515 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\text.crf GUI\Widget\TEXT.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _FreeAttached PROC
;;;79     */
;;;80     static void _FreeAttached(TEXT_Obj* pObj) {
000000  b510              PUSH     {r4,lr}
000002  4604              MOV      r4,r0
;;;81       GUI_ALLOC_FreePtr(&pObj->hpText);
000004  f1040038          ADD      r0,r4,#0x38
000008  f7fffffe          BL       GUI_ALLOC_FreePtr
;;;82     }
00000c  bd10              POP      {r4,pc}
;;;83     
                          ENDP

                  _Paint PROC
;;;87     */
;;;88     static void _Paint(TEXT_Handle hObj, TEXT_Obj* pObj) {
00000e  b57c              PUSH     {r2-r6,lr}
000010  4605              MOV      r5,r0
000012  460c              MOV      r4,r1
;;;89       const char * s;
;;;90       GUI_RECT Rect;
;;;91       GUI_USE_PARA(hObj);
000014  bf00              NOP      
;;;92       LCD_SetColor(pObj->Props.TextColor);
000016  6ae0              LDR      r0,[r4,#0x2c]
000018  f7fffffe          BL       LCD_SetColor
;;;93       GUI_SetFont    (pObj->Props.pFont);
00001c  6aa0              LDR      r0,[r4,#0x28]
00001e  f7fffffe          BL       GUI_SetFont
;;;94       /* Fill with parents background color */
;;;95       #if !TEXT_SUPPORT_TRANSPARENCY   /* Not needed any more, since window is transparent*/
;;;96         if (pObj->Props.BkColor == GUI_INVALID_COLOR) {
;;;97           LCD_SetBkColor(WIDGET__GetBkColor(hObj));
;;;98         } else {
;;;99           LCD_SetBkColor(pObj->Props.BkColor);
;;;100        }
;;;101        GUI_Clear();
;;;102      #else
;;;103        if (!WM_GetHasTrans(hObj)) {
000022  4628              MOV      r0,r5
000024  f7fffffe          BL       WM_GetHasTrans
000028  b920              CBNZ     r0,|L1.52|
;;;104          LCD_SetBkColor(pObj->Props.BkColor);
00002a  6b20              LDR      r0,[r4,#0x30]
00002c  f7fffffe          BL       LCD_SetBkColor
;;;105          GUI_Clear();
000030  f7fffffe          BL       GUI_Clear
                  |L1.52|
;;;106        }
;;;107      #endif
;;;108      /* Show the text */
;;;109      if (pObj->hpText) {
000034  8f20              LDRH     r0,[r4,#0x38]
000036  b190              CBZ      r0,|L1.94|
;;;110        s = (const char*) GUI_ALLOC_h2p(pObj->hpText);
000038  f9b40038          LDRSH    r0,[r4,#0x38]
00003c  f7fffffe          BL       GUI_ALLOC_h2p
000040  4606              MOV      r6,r0
;;;111        GUI_SetTextMode(GUI_TM_TRANS);
000042  2002              MOVS     r0,#2
000044  f7fffffe          BL       GUI_SetTextMode
;;;112        WM_GetClientRect(&Rect);
000048  4668              MOV      r0,sp
00004a  f7fffffe          BL       WM_GetClientRect
;;;113        GUI_DispStringInRectWrap(s, &Rect, pObj->Align, pObj->Props.WrapMode);
00004e  2034              MOVS     r0,#0x34
000050  5d03              LDRB     r3,[r0,r4]
000052  f9b4203a          LDRSH    r2,[r4,#0x3a]
000056  4669              MOV      r1,sp
000058  4630              MOV      r0,r6
00005a  f7fffffe          BL       GUI_DispStringInRectWrap
                  |L1.94|
;;;114      }
;;;115    }
00005e  bd7c              POP      {r2-r6,pc}
;;;116    
                          ENDP

                  _Delete PROC
;;;120    */
;;;121    static void _Delete(TEXT_Obj* pObj) {
000060  b510              PUSH     {r4,lr}
000062  4604              MOV      r4,r0
;;;122      /* Delete attached objects (if any) */
;;;123      GUI_DEBUG_LOG("TEXT: Delete() Deleting attached items");
;;;124      _FreeAttached(pObj);
000064  4620              MOV      r0,r4
000066  f7fffffe          BL       _FreeAttached
;;;125    }
00006a  bd10              POP      {r4,pc}
;;;126    
                          ENDP

                  TEXT_Callback PROC
;;;159    */
;;;160    void TEXT_Callback (WM_MESSAGE*pMsg) {
00006c  b570              PUSH     {r4-r6,lr}
00006e  4604              MOV      r4,r0
;;;161      TEXT_Handle hObj;
;;;162      TEXT_Obj * pObj;
;;;163      hObj = pMsg->hWin;
000070  f9b45004          LDRSH    r5,[r4,#4]
;;;164      pObj = (TEXT_Obj *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
000074  4628              MOV      r0,r5
000076  f7fffffe          BL       GUI_ALLOC_h2p
00007a  4606              MOV      r6,r0
;;;165      /* Let widget handle the standard messages */
;;;166      if (WIDGET_HandleActive(hObj, pMsg) == 0) {
00007c  4621              MOV      r1,r4
00007e  4628              MOV      r0,r5
000080  f7fffffe          BL       WIDGET_HandleActive
000084  b900              CBNZ     r0,|L1.136|
                  |L1.134|
;;;167        return;
;;;168      }
;;;169      switch (pMsg->MsgId) {
;;;170      case WM_PAINT:
;;;171        GUI_DEBUG_LOG("TEXT: _Callback(WM_PAINT)\n");
;;;172        _Paint(hObj, pObj);
;;;173        return;
;;;174      case WM_DELETE:
;;;175        GUI_DEBUG_LOG("TEXT: _Callback(WM_DELETE)\n");
;;;176        _Delete(pObj);
;;;177        break;       /* No return here ... WM_DefaultProc needs to be called */
;;;178      }
;;;179      WM_DefaultProc(pMsg);
;;;180    }
000086  bd70              POP      {r4-r6,pc}
                  |L1.136|
000088  6820              LDR      r0,[r4,#0]            ;169
00008a  280b              CMP      r0,#0xb               ;169
00008c  d006              BEQ      |L1.156|
00008e  280f              CMP      r0,#0xf               ;169
000090  d108              BNE      |L1.164|
000092  4631              MOV      r1,r6                 ;172
000094  4628              MOV      r0,r5                 ;172
000096  f7fffffe          BL       _Paint
00009a  e7f4              B        |L1.134|
                  |L1.156|
00009c  4630              MOV      r0,r6                 ;176
00009e  f7fffffe          BL       _Delete
0000a2  bf00              NOP                            ;177
                  |L1.164|
0000a4  bf00              NOP                            ;177
0000a6  4620              MOV      r0,r4                 ;179
0000a8  f7fffffe          BL       WM_DefaultProc
0000ac  bf00              NOP      
0000ae  e7ea              B        |L1.134|
;;;181    
                          ENDP

                  TEXT_CreateEx PROC
;;;195    */
;;;196    TEXT_Handle TEXT_CreateEx(int x0, int y0, int xsize, int ysize, WM_HWIN hParent,
0000b0  e92d4fff          PUSH     {r0-r11,lr}
;;;197                              int WinFlags, int ExFlags, int Id, const char* pText)
;;;198    {
0000b4  b085              SUB      sp,sp,#0x14
0000b6  4681              MOV      r9,r0
0000b8  468a              MOV      r10,r1
0000ba  9f13              LDR      r7,[sp,#0x4c]
0000bc  9d16              LDR      r5,[sp,#0x58]
;;;199      TEXT_Handle hObj;
;;;200      /* Create the window */
;;;201      #if TEXT_SUPPORT_TRANSPARENCY
;;;202        WinFlags |= WM_CF_HASTRANS;
0000be  f0470701          ORR      r7,r7,#1
;;;203      #endif
;;;204      WM_LOCK();
;;;205      hObj = WM_CreateWindowAsChild(x0, y0, xsize, ysize, hParent, WinFlags, TEXT_Callback,
0000c2  221c              MOVS     r2,#0x1c
0000c4  f2af035b          ADR      r3,TEXT_Callback + 1
0000c8  b2b8              UXTH     r0,r7
0000ca  9912              LDR      r1,[sp,#0x48]
0000cc  e9cd3202          STRD     r3,r2,[sp,#8]
0000d0  e9cd1000          STRD     r1,r0,[sp,#0]
0000d4  4651              MOV      r1,r10
0000d6  4648              MOV      r0,r9
0000d8  e9dd2307          LDRD     r2,r3,[sp,#0x1c]
0000dc  f7fffffe          BL       WM_CreateWindowAsChild
0000e0  4680              MOV      r8,r0
;;;206                                    sizeof(TEXT_Obj) - sizeof(WM_Obj));
;;;207      if (hObj) {
0000e2  f1b80f00          CMP      r8,#0
0000e6  d026              BEQ      |L1.310|
;;;208        TEXT_Obj* pObj;
;;;209        WM_HMEM hMem = 0;
0000e8  2600              MOVS     r6,#0
;;;210        pObj = (TEXT_Obj *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
0000ea  4640              MOV      r0,r8
0000ec  f7fffffe          BL       GUI_ALLOC_h2p
0000f0  4604              MOV      r4,r0
;;;211        /* init widget specific variables */
;;;212        WIDGET__Init(&pObj->Widget, Id, 0);
0000f2  2200              MOVS     r2,#0
0000f4  4620              MOV      r0,r4
0000f6  9915              LDR      r1,[sp,#0x54]
0000f8  f7fffffe          BL       WIDGET__Init
;;;213        /* init member variables */
;;;214        TEXT_INIT_ID(pObj);
;;;215        if (pText) {
0000fc  b18d              CBZ      r5,|L1.290|
;;;216          hMem = GUI_ALLOC_AllocZero(strlen(pText) + 1);
0000fe  4628              MOV      r0,r5
000100  f7fffffe          BL       strlen
000104  1c40              ADDS     r0,r0,#1
000106  fa0ffb80          SXTH     r11,r0
00010a  4658              MOV      r0,r11
00010c  f7fffffe          BL       GUI_ALLOC_AllocZero
000110  4606              MOV      r6,r0
;;;217          if (hMem) {
000112  b136              CBZ      r6,|L1.290|
;;;218            strcpy((char*) GUI_ALLOC_h2p(hMem), pText);
000114  4630              MOV      r0,r6
000116  f7fffffe          BL       GUI_ALLOC_h2p
00011a  4683              MOV      r11,r0
00011c  4629              MOV      r1,r5
00011e  f7fffffe          BL       strcpy
                  |L1.290|
;;;219          }
;;;220        }
;;;221        pObj->hpText = hMem;
000122  8726              STRH     r6,[r4,#0x38]
;;;222        pObj->Align  = ExFlags;
000124  9814              LDR      r0,[sp,#0x50]
000126  b200              SXTH     r0,r0
000128  8760              STRH     r0,[r4,#0x3a]
;;;223        pObj->Props  = TEXT__DefaultProps;
00012a  4b05              LDR      r3,|L1.320|
00012c  cb0f              LDM      r3,{r0-r3}
00012e  3428              ADDS     r4,r4,#0x28
000130  c40f              STM      r4!,{r0-r3}
000132  3c38              SUBS     r4,r4,#0x38
;;;224      } else {
000134  bf00              NOP      
                  |L1.310|
;;;225        GUI_DEBUG_ERROROUT_IF(hObj==0, "TEXT_Create failed")
;;;226      }
;;;227      WM_UNLOCK();
;;;228      return hObj;
000136  4640              MOV      r0,r8
;;;229    }
000138  b009              ADD      sp,sp,#0x24
00013a  e8bd8ff0          POP      {r4-r11,pc}
;;;230    
                          ENDP

00013e  0000              DCW      0x0000
                  |L1.320|
                          DCD      TEXT__DefaultProps

                          AREA ||.data||, DATA, ALIGN=2

                  TEXT__DefaultProps
                          DCD      GUI_Font13_1
                          DCD      0x00000000
                          DCD      0x0fffffff
00000c  00000000          DCB      0x00,0x00,0x00,0x00

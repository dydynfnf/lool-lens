; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\gui_drawgraphex.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\gui_drawgraphex.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -IC:\Users\Administrator\Desktop\gui\STM32·Ü¶·°å-3.98\RTE -Id:\Keil_v5\ARM\PACK\ARM\CMSIS\4.3.0\CMSIS\Include -Id:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.1.0\Device\Include -D__UVISION_VERSION=515 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\gui_drawgraphex.crf GUI\Core\GUI_DrawGraphEx.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _DrawGraph PROC
;;;44     */
;;;45     static void _DrawGraph(I16 * pay, int NumPoints, int xOff, int yOff, int Numerator, int Denominator) {
000000  e92d4fff          PUSH     {r0-r11,lr}
000004  b085              SUB      sp,sp,#0x14
000006  4605              MOV      r5,r0
000008  4692              MOV      r10,r2
00000a  461e              MOV      r6,r3
00000c  e9ddb812          LDRD     r11,r8,[sp,#0x48]
;;;46       int i;
;;;47       int y0, y1;
;;;48       int yClip0, yClip1;
;;;49       int Method;
;;;50       /* Perform high level clipping in x */
;;;51       yClip0 = GUI_Context.pClipRect_HL->y0;
000010  4891              LDR      r0,|L1.600|
000012  6940              LDR      r0,[r0,#0x14]  ; GUI_Context
000014  f9b00002          LDRSH    r0,[r0,#2]
000018  9003              STR      r0,[sp,#0xc]
;;;52       yClip1 = GUI_Context.pClipRect_HL->y1;
00001a  488f              LDR      r0,|L1.600|
00001c  6940              LDR      r0,[r0,#0x14]  ; GUI_Context
00001e  f9b00006          LDRSH    r0,[r0,#6]
000022  9002              STR      r0,[sp,#8]
;;;53       if ((Numerator == 0) || (Denominator == 0) || (NumPoints <= 0)) {
000024  f1bb0f00          CMP      r11,#0
000028  d005              BEQ      |L1.54|
00002a  f1b80f00          CMP      r8,#0
00002e  d002              BEQ      |L1.54|
000030  9806              LDR      r0,[sp,#0x18]
000032  2800              CMP      r0,#0
000034  dc02              BGT      |L1.60|
                  |L1.54|
;;;54         return;
;;;55       }
;;;56       if (Numerator == -1) {
;;;57         if (Denominator == 1) {
;;;58           Method = SWAPSIGN;
;;;59         } else {
;;;60           Method = SWAPSIGN_DIVIDE;
;;;61         }
;;;62       } else if (Numerator == 1) {
;;;63         if (Denominator == 1) {
;;;64           Method = 0;
;;;65         } else {
;;;66           Method = DIVIDE;
;;;67         }
;;;68       } else {
;;;69         if (Denominator == 1) {
;;;70           Method = MULTIPLY;
;;;71         } else {
;;;72           Method = MULTIPLY_DIVIDE;
;;;73         }
;;;74       }
;;;75       i = 0;
;;;76       if (GUI_Context.pClipRect_HL) {
;;;77         if (xOff < GUI_Context.pClipRect_HL->x0) {
;;;78           i = GUI_Context.pClipRect_HL->x0 - xOff;
;;;79         }
;;;80         if (xOff + NumPoints - 1 > GUI_Context.pClipRect_HL->x1) {
;;;81           NumPoints = GUI_Context.pClipRect_HL->x1 - xOff + 1;
;;;82         }
;;;83       }
;;;84       /* Start drawing if there is something left to do after x-clipping */
;;;85       if (i < NumPoints) {
;;;86         switch (Method) {
;;;87         case SWAPSIGN:
;;;88           y0 = -*(pay + i++) + yOff;
;;;89           break;
;;;90         case SWAPSIGN_DIVIDE:
;;;91           y0 = (U32)(-*(pay + i++) + yOff) / (U32)Denominator;
;;;92           break;
;;;93         case DIVIDE:
;;;94           y0 = (U32)(*(pay + i++) + yOff) / (U32)Denominator;
;;;95           break;
;;;96         case MULTIPLY:
;;;97           y0 = (U32)(*(pay + i++) + yOff) * (U32)Numerator;
;;;98           break;
;;;99         case MULTIPLY_DIVIDE:
;;;100          y0 = (U32)(*(pay + i++) + yOff) * (U32)Numerator / (U32)Denominator;
;;;101          break;
;;;102        default:
;;;103          y0 = *(pay + i++) + yOff;
;;;104        }
;;;105        /* Iterate */
;;;106        for (; i < NumPoints; i++) {
;;;107          /* Perform high level clipping in y */
;;;108          switch (Method) {
;;;109          case SWAPSIGN:
;;;110            y1 = -*(pay + i) + yOff;
;;;111            break;
;;;112          case SWAPSIGN_DIVIDE:
;;;113            y1 = (U32)(-*(pay + i) + yOff) / (U32)Denominator;
;;;114            break;
;;;115          case DIVIDE:
;;;116            y1 = (U32)(*(pay + i) + yOff) / (U32)Denominator;
;;;117            break;
;;;118          case MULTIPLY:
;;;119            y1 = (U32)(*(pay + i) + yOff) * (U32)Numerator;
;;;120            break;
;;;121          case MULTIPLY_DIVIDE:
;;;122            y1 = (U32)(*(pay + i) + yOff) * (U32)Numerator / (U32)Denominator;
;;;123            break;
;;;124          default:
;;;125            y1 = *(pay + i) + yOff;
;;;126          }
;;;127          if ((y0 >= yClip0) || (y1 >= yClip0)) {
;;;128            if ((y0 <= yClip1) || (y1 <= yClip1)) {
;;;129              int y01;
;;;130              y01 = (y1 + y0) / 2;
;;;131              if (y0 <= y1) {
;;;132                LCD_DrawVLine(i + xOff - 1, y0, y01);
;;;133                LCD_DrawVLine(i + xOff, y01, y1);
;;;134              } else {
;;;135                LCD_DrawVLine(i + xOff - 1, y01, y0);
;;;136                LCD_DrawVLine(i + xOff, y1, y01);
;;;137              }
;;;138            }
;;;139          }
;;;140          y0 = y1;
;;;141        }
;;;142      }
;;;143    }
000036  b009              ADD      sp,sp,#0x24
000038  e8bd8ff0          POP      {r4-r11,pc}
                  |L1.60|
00003c  f10b0001          ADD      r0,r11,#1             ;56
000040  b940              CBNZ     r0,|L1.84|
000042  f1b80f01          CMP      r8,#1                 ;57
000046  d102              BNE      |L1.78|
000048  f04f0901          MOV      r9,#1                 ;58
00004c  e016              B        |L1.124|
                  |L1.78|
00004e  f04f0902          MOV      r9,#2                 ;60
000052  e013              B        |L1.124|
                  |L1.84|
000054  f1bb0f01          CMP      r11,#1                ;62
000058  d108              BNE      |L1.108|
00005a  f1b80f01          CMP      r8,#1                 ;63
00005e  d102              BNE      |L1.102|
000060  f04f0900          MOV      r9,#0                 ;64
000064  e00a              B        |L1.124|
                  |L1.102|
000066  f04f0903          MOV      r9,#3                 ;66
00006a  e007              B        |L1.124|
                  |L1.108|
00006c  f1b80f01          CMP      r8,#1                 ;69
000070  d102              BNE      |L1.120|
000072  f04f0904          MOV      r9,#4                 ;70
000076  e001              B        |L1.124|
                  |L1.120|
000078  f04f0905          MOV      r9,#5                 ;72
                  |L1.124|
00007c  2400              MOVS     r4,#0                 ;75
00007e  4876              LDR      r0,|L1.600|
000080  6940              LDR      r0,[r0,#0x14]         ;76  ; GUI_Context
000082  b1e0              CBZ      r0,|L1.190|
000084  4874              LDR      r0,|L1.600|
000086  6940              LDR      r0,[r0,#0x14]         ;77  ; GUI_Context
000088  f9b00000          LDRSH    r0,[r0,#0]            ;77
00008c  4550              CMP      r0,r10                ;77
00008e  dd05              BLE      |L1.156|
000090  4871              LDR      r0,|L1.600|
000092  6940              LDR      r0,[r0,#0x14]         ;78  ; GUI_Context
000094  f9b00000          LDRSH    r0,[r0,#0]            ;78
000098  eba0040a          SUB      r4,r0,r10             ;78
                  |L1.156|
00009c  9806              LDR      r0,[sp,#0x18]         ;80
00009e  4450              ADD      r0,r0,r10             ;80
0000a0  1e40              SUBS     r0,r0,#1              ;80
0000a2  496d              LDR      r1,|L1.600|
0000a4  6949              LDR      r1,[r1,#0x14]         ;80  ; GUI_Context
0000a6  f9b11004          LDRSH    r1,[r1,#4]            ;80
0000aa  4288              CMP      r0,r1                 ;80
0000ac  dd07              BLE      |L1.190|
0000ae  486a              LDR      r0,|L1.600|
0000b0  6940              LDR      r0,[r0,#0x14]         ;81  ; GUI_Context
0000b2  f9b00004          LDRSH    r0,[r0,#4]            ;81
0000b6  eba0000a          SUB      r0,r0,r10             ;81
0000ba  1c40              ADDS     r0,r0,#1              ;81
0000bc  9006              STR      r0,[sp,#0x18]         ;81
                  |L1.190|
0000be  9806              LDR      r0,[sp,#0x18]         ;85
0000c0  4284              CMP      r4,r0                 ;85
0000c2  da7d              BGE      |L1.448|
0000c4  f1b90f06          CMP      r9,#6                 ;86
0000c8  d22e              BCS      |L1.296|
0000ca  e8dff009          TBB      [pc,r9]               ;86
0000ce  2d03              DCB      0x2d,0x03
0000d0  0a131b23          DCB      0x0a,0x13,0x1b,0x23
0000d4  4620              MOV      r0,r4                 ;88
0000d6  1c64              ADDS     r4,r4,#1              ;88
0000d8  f9350010          LDRSH    r0,[r5,r0,LSL #1]     ;88
0000dc  4240              RSBS     r0,r0,#0              ;88
0000de  1987              ADDS     r7,r0,r6              ;88
0000e0  e028              B        |L1.308|
0000e2  4620              MOV      r0,r4                 ;91
0000e4  1c64              ADDS     r4,r4,#1              ;91
0000e6  f9350010          LDRSH    r0,[r5,r0,LSL #1]     ;91
0000ea  4240              RSBS     r0,r0,#0              ;91
0000ec  4430              ADD      r0,r0,r6              ;91
0000ee  fbb0f7f8          UDIV     r7,r0,r8              ;91
0000f2  e01f              B        |L1.308|
0000f4  4620              MOV      r0,r4                 ;94
0000f6  1c64              ADDS     r4,r4,#1              ;94
0000f8  f9350010          LDRSH    r0,[r5,r0,LSL #1]     ;94
0000fc  4430              ADD      r0,r0,r6              ;94
0000fe  fbb0f7f8          UDIV     r7,r0,r8              ;94
000102  e017              B        |L1.308|
000104  4620              MOV      r0,r4                 ;97
000106  1c64              ADDS     r4,r4,#1              ;97
000108  f9350010          LDRSH    r0,[r5,r0,LSL #1]     ;97
00010c  4430              ADD      r0,r0,r6              ;97
00010e  fb00f70b          MUL      r7,r0,r11             ;97
000112  e00f              B        |L1.308|
000114  4620              MOV      r0,r4                 ;100
000116  1c64              ADDS     r4,r4,#1              ;100
000118  f9350010          LDRSH    r0,[r5,r0,LSL #1]     ;100
00011c  4430              ADD      r0,r0,r6              ;100
00011e  fb00f00b          MUL      r0,r0,r11             ;100
000122  fbb0f7f8          UDIV     r7,r0,r8              ;100
000126  e005              B        |L1.308|
                  |L1.296|
000128  4620              MOV      r0,r4                 ;103
00012a  1c64              ADDS     r4,r4,#1              ;103
00012c  f9350010          LDRSH    r0,[r5,r0,LSL #1]     ;103
000130  1987              ADDS     r7,r0,r6              ;103
000132  bf00              NOP                            ;86
                  |L1.308|
000134  bf00              NOP                            ;89
000136  e069              B        |L1.524|
                  |L1.312|
000138  f1b90f06          CMP      r9,#6                 ;108
00013c  d229              BCS      |L1.402|
00013e  e8dff009          TBB      [pc,r9]               ;108
000142  2803              DCB      0x28,0x03
000144  0911181f          DCB      0x09,0x11,0x18,0x1f
000148  f9350014          LDRSH    r0,[r5,r4,LSL #1]     ;110
00014c  4240              RSBS     r0,r0,#0              ;110
00014e  4430              ADD      r0,r0,r6              ;110
000150  9004              STR      r0,[sp,#0x10]         ;110
000152  e023              B        |L1.412|
000154  f9350014          LDRSH    r0,[r5,r4,LSL #1]     ;113
000158  4240              RSBS     r0,r0,#0              ;113
00015a  4430              ADD      r0,r0,r6              ;113
00015c  fbb0f0f8          UDIV     r0,r0,r8              ;113
000160  9004              STR      r0,[sp,#0x10]         ;113
000162  e01b              B        |L1.412|
000164  f9350014          LDRSH    r0,[r5,r4,LSL #1]     ;116
000168  4430              ADD      r0,r0,r6              ;116
00016a  fbb0f0f8          UDIV     r0,r0,r8              ;116
00016e  9004              STR      r0,[sp,#0x10]         ;116
000170  e014              B        |L1.412|
000172  f9350014          LDRSH    r0,[r5,r4,LSL #1]     ;119
000176  4430              ADD      r0,r0,r6              ;119
000178  fb00f00b          MUL      r0,r0,r11             ;119
00017c  9004              STR      r0,[sp,#0x10]         ;119
00017e  e00d              B        |L1.412|
000180  f9350014          LDRSH    r0,[r5,r4,LSL #1]     ;122
000184  4430              ADD      r0,r0,r6              ;122
000186  fb00f00b          MUL      r0,r0,r11             ;122
00018a  fbb0f0f8          UDIV     r0,r0,r8              ;122
00018e  9004              STR      r0,[sp,#0x10]         ;122
000190  e004              B        |L1.412|
                  |L1.402|
000192  f9350014          LDRSH    r0,[r5,r4,LSL #1]     ;125
000196  4430              ADD      r0,r0,r6              ;125
000198  9004              STR      r0,[sp,#0x10]         ;125
00019a  bf00              NOP                            ;108
                  |L1.412|
00019c  bf00              NOP                            ;111
00019e  9803              LDR      r0,[sp,#0xc]          ;127
0001a0  4287              CMP      r7,r0                 ;127
0001a2  da03              BGE      |L1.428|
0001a4  e9dd1003          LDRD     r1,r0,[sp,#0xc]       ;127
0001a8  4288              CMP      r0,r1                 ;127
0001aa  db2d              BLT      |L1.520|
                  |L1.428|
0001ac  9802              LDR      r0,[sp,#8]            ;128
0001ae  4287              CMP      r7,r0                 ;128
0001b0  dd03              BLE      |L1.442|
0001b2  9902              LDR      r1,[sp,#8]            ;128
0001b4  9804              LDR      r0,[sp,#0x10]         ;128
0001b6  4288              CMP      r0,r1                 ;128
0001b8  dc26              BGT      |L1.520|
                  |L1.442|
0001ba  9904              LDR      r1,[sp,#0x10]         ;130
0001bc  19c8              ADDS     r0,r1,r7              ;130
0001be  e000              B        |L1.450|
                  |L1.448|
0001c0  e027              B        |L1.530|
                  |L1.450|
0001c2  eb0071d0          ADD      r1,r0,r0,LSR #31      ;130
0001c6  1049              ASRS     r1,r1,#1              ;130
0001c8  9101              STR      r1,[sp,#4]            ;130
0001ca  9804              LDR      r0,[sp,#0x10]         ;131
0001cc  4287              CMP      r7,r0                 ;131
0001ce  dc0d              BGT      |L1.492|
0001d0  eb04010a          ADD      r1,r4,r10             ;132
0001d4  1e48              SUBS     r0,r1,#1              ;132
0001d6  4639              MOV      r1,r7                 ;132
0001d8  9a01              LDR      r2,[sp,#4]            ;132
0001da  f7fffffe          BL       LCD_DrawVLine
0001de  eb04000a          ADD      r0,r4,r10             ;133
0001e2  9a04              LDR      r2,[sp,#0x10]         ;133
0001e4  9901              LDR      r1,[sp,#4]            ;133
0001e6  f7fffffe          BL       LCD_DrawVLine
0001ea  e00c              B        |L1.518|
                  |L1.492|
0001ec  eb04010a          ADD      r1,r4,r10             ;135
0001f0  1e48              SUBS     r0,r1,#1              ;135
0001f2  463a              MOV      r2,r7                 ;135
0001f4  9901              LDR      r1,[sp,#4]            ;135
0001f6  f7fffffe          BL       LCD_DrawVLine
0001fa  eb04000a          ADD      r0,r4,r10             ;136
0001fe  9a01              LDR      r2,[sp,#4]            ;136
000200  9904              LDR      r1,[sp,#0x10]         ;136
000202  f7fffffe          BL       LCD_DrawVLine
                  |L1.518|
000206  bf00              NOP                            ;138
                  |L1.520|
000208  9f04              LDR      r7,[sp,#0x10]         ;140
00020a  1c64              ADDS     r4,r4,#1              ;106
                  |L1.524|
00020c  9806              LDR      r0,[sp,#0x18]         ;106
00020e  4284              CMP      r4,r0                 ;106
000210  db92              BLT      |L1.312|
                  |L1.530|
000212  bf00              NOP      
000214  e70f              B        |L1.54|
;;;144    
                          ENDP

                  GUI_DrawGraphEx PROC
;;;154    */  
;;;155    void GUI_DrawGraphEx(I16 *pay, int NumPoints, int x0, int y0, int Numerator, int Denominator) {
000216  e92d47fc          PUSH     {r2-r10,lr}
00021a  4606              MOV      r6,r0
00021c  460f              MOV      r7,r1
00021e  4614              MOV      r4,r2
000220  461d              MOV      r5,r3
000222  e9dd890a          LDRD     r8,r9,[sp,#0x28]
;;;156      GUI_LOCK();
;;;157      #if (GUI_WINSUPPORT)
;;;158        WM_ADDORG(x0,y0);
000226  480c              LDR      r0,|L1.600|
000228  6c00              LDR      r0,[r0,#0x40]  ; GUI_Context
00022a  4404              ADD      r4,r4,r0
00022c  480a              LDR      r0,|L1.600|
00022e  6c40              LDR      r0,[r0,#0x44]  ; GUI_Context
000230  4405              ADD      r5,r5,r0
;;;159        WM_ITERATE_START(NULL); {
000232  2000              MOVS     r0,#0
000234  f7fffffe          BL       WM__InitIVRSearch
000238  b160              CBZ      r0,|L1.596|
00023a  bf00              NOP      
                  |L1.572|
;;;160      #endif
;;;161      _DrawGraph(pay, NumPoints, x0, y0, Numerator, Denominator);
00023c  462b              MOV      r3,r5
00023e  4622              MOV      r2,r4
000240  4639              MOV      r1,r7
000242  4630              MOV      r0,r6
000244  e9cd8900          STRD     r8,r9,[sp,#0]
000248  f7fffffe          BL       _DrawGraph
;;;162      #if (GUI_WINSUPPORT)
;;;163        } WM_ITERATE_END();
00024c  f7fffffe          BL       WM__GetNextIVR
000250  2800              CMP      r0,#0
000252  d1f3              BNE      |L1.572|
                  |L1.596|
;;;164      #endif
;;;165      GUI_UNLOCK();
;;;166    }
000254  e8bd87fc          POP      {r2-r10,pc}
;;;167    
                          ENDP

                  |L1.600|
                          DCD      GUI_Context

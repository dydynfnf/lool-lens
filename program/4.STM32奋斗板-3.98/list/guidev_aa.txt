; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\guidev_aa.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\guidev_aa.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -IC:\Users\Administrator\Desktop\gui\STM32·Ü¶·°å-3.98\RTE -Id:\Keil_v5\ARM\PACK\ARM\CMSIS\4.3.0\CMSIS\Include -Id:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.1.0\Device\Include -D__UVISION_VERSION=515 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\guidev_aa.crf GUI\MemDev\GUIDEV_AA.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  GUI_MEMDEV_CopyToLCDAA PROC
;;;58     */
;;;59     void GUI_MEMDEV_CopyToLCDAA(GUI_MEMDEV_Handle hMem) {
000000  e92d4ff0          PUSH     {r4-r11,lr}
000004  b089              SUB      sp,sp,#0x24
000006  4682              MOV      r10,r0
;;;60       GUI_LOCK();
;;;61       /* Make sure memory handle is valid */
;;;62       if (hMem) {
000008  f1ba0f00          CMP      r10,#0
00000c  d07e              BEQ      |L1.268|
;;;63         GUI_MEMDEV_Handle hMemPrev;
;;;64       #if GUI_NUM_LAYERS > 1
;;;65         int PrevLayer;
;;;66       #endif
;;;67         int x, y;
;;;68         GUI_MEMDEV* pDev = (GUI_MEMDEV*)GUI_ALLOC_h2p(hMem);  /* Convert to pointer */
00000e  4650              MOV      r0,r10
000010  f7fffffe          BL       GUI_ALLOC_h2p
000014  4605              MOV      r5,r0
;;;69         LCD_PIXELINDEX* pData0 = (LCD_PIXELINDEX*)(pDev+1);
000016  f1050b2c          ADD      r11,r5,#0x2c
;;;70         int LineOff = pDev->XSize;
00001a  f9b59004          LDRSH    r9,[r5,#4]
;;;71         int x0 = pDev->x0;
00001e  f9b50000          LDRSH    r0,[r5,#0]
000022  9007              STR      r0,[sp,#0x1c]
;;;72         int y0 = pDev->y0;
000024  f9b50002          LDRSH    r0,[r5,#2]
000028  9006              STR      r0,[sp,#0x18]
;;;73         int XMax = pDev->XSize / 2;
00002a  f9b50004          LDRSH    r0,[r5,#4]
00002e  eb0071d0          ADD      r1,r0,r0,LSR #31
000032  1049              ASRS     r1,r1,#1
000034  9105              STR      r1,[sp,#0x14]
;;;74         int YMax = pDev->YSize / 2;
000036  f9b50006          LDRSH    r0,[r5,#6]
00003a  eb0071d0          ADD      r1,r0,r0,LSR #31
00003e  1049              ASRS     r1,r1,#1
000040  9104              STR      r1,[sp,#0x10]
;;;75         hMemPrev = GUI_Context.hDevData;
000042  4874              LDR      r0,|L1.532|
000044  f9b0004c          LDRSH    r0,[r0,#0x4c]  ; GUI_Context
000048  9008              STR      r0,[sp,#0x20]
;;;76       #if GUI_NUM_LAYERS > 1
;;;77         PrevLayer = GUI_SelectLayer(pDev->LayerIndex);   /* Should not we switch back to the orig. layer when done ? */
;;;78       #else
;;;79         GUI_SelectLCD();  /* Activate LCD */
00004a  f7fffffe          BL       GUI_SelectLCD
;;;80       #endif
;;;81         for (y = 0; y < YMax; y++) {
00004e  f04f0800          MOV      r8,#0
000052  e06c              B        |L1.302|
                  |L1.84|
;;;82           LCD_PIXELINDEX* pData = pData0;
000054  465e              MOV      r6,r11
;;;83           for (x = 0; x < XMax; x++) {
000056  2700              MOVS     r7,#0
000058  e062              B        |L1.288|
                  |L1.90|
;;;84             LCD_PIXELINDEX PixelIndex;
;;;85             int ColorSep[3];
;;;86             U32 Color = LCD_Index2Color(*pData);
00005a  8830              LDRH     r0,[r6,#0]
00005c  f7fffffe          BL       LCD_Index2Color
000060  4604              MOV      r4,r0
;;;87             ColorSep[0] = Color&255;
000062  b2e0              UXTB     r0,r4
000064  9000              STR      r0,[sp,#0]
;;;88             ColorSep[1] = (Color>>8)  &255;
000066  f3c42007          UBFX     r0,r4,#8,#8
00006a  9001              STR      r0,[sp,#4]
;;;89             ColorSep[2] = (Color>>16) &255;
00006c  f3c44007          UBFX     r0,r4,#16,#8
000070  9002              STR      r0,[sp,#8]
;;;90             Color = LCD_Index2Color(*(pData+1));
000072  8870              LDRH     r0,[r6,#2]
000074  f7fffffe          BL       LCD_Index2Color
000078  4604              MOV      r4,r0
;;;91             ColorSep[0] += Color&255;
00007a  b2e1              UXTB     r1,r4
00007c  9800              LDR      r0,[sp,#0]
00007e  4408              ADD      r0,r0,r1
000080  9000              STR      r0,[sp,#0]
;;;92             ColorSep[1] += (Color>>8)  &255;
000082  f3c42107          UBFX     r1,r4,#8,#8
000086  9801              LDR      r0,[sp,#4]
000088  4408              ADD      r0,r0,r1
00008a  9001              STR      r0,[sp,#4]
;;;93             ColorSep[2] += (Color>>16) &255;
00008c  f3c44107          UBFX     r1,r4,#16,#8
000090  9802              LDR      r0,[sp,#8]
000092  4408              ADD      r0,r0,r1
000094  9002              STR      r0,[sp,#8]
;;;94             Color = LCD_Index2Color(*(pData+LineOff));
000096  f8360019          LDRH     r0,[r6,r9,LSL #1]
00009a  f7fffffe          BL       LCD_Index2Color
00009e  4604              MOV      r4,r0
;;;95             ColorSep[0] += Color&255;
0000a0  b2e1              UXTB     r1,r4
0000a2  9800              LDR      r0,[sp,#0]
0000a4  4408              ADD      r0,r0,r1
0000a6  9000              STR      r0,[sp,#0]
;;;96             ColorSep[1] += (Color>>8)  &255;
0000a8  f3c42107          UBFX     r1,r4,#8,#8
0000ac  9801              LDR      r0,[sp,#4]
0000ae  4408              ADD      r0,r0,r1
0000b0  9001              STR      r0,[sp,#4]
;;;97             ColorSep[2] += (Color>>16) &255;
0000b2  f3c44107          UBFX     r1,r4,#16,#8
0000b6  9802              LDR      r0,[sp,#8]
0000b8  4408              ADD      r0,r0,r1
0000ba  9002              STR      r0,[sp,#8]
;;;98             Color = LCD_Index2Color(*(pData+LineOff+1));
0000bc  eb060149          ADD      r1,r6,r9,LSL #1
0000c0  8848              LDRH     r0,[r1,#2]
0000c2  f7fffffe          BL       LCD_Index2Color
0000c6  4604              MOV      r4,r0
;;;99             ColorSep[0] += Color&255;
0000c8  b2e1              UXTB     r1,r4
0000ca  9800              LDR      r0,[sp,#0]
0000cc  4408              ADD      r0,r0,r1
0000ce  9000              STR      r0,[sp,#0]
;;;100            ColorSep[1] += (Color>>8)  &255;
0000d0  f3c42107          UBFX     r1,r4,#8,#8
0000d4  9801              LDR      r0,[sp,#4]
0000d6  4408              ADD      r0,r0,r1
0000d8  9001              STR      r0,[sp,#4]
;;;101            ColorSep[2] += (Color>>16) &255;
0000da  f3c44107          UBFX     r1,r4,#16,#8
0000de  9802              LDR      r0,[sp,#8]
0000e0  4408              ADD      r0,r0,r1
0000e2  9002              STR      r0,[sp,#8]
;;;102            Color  = (ColorSep[0]+2)>>2;
0000e4  9800              LDR      r0,[sp,#0]
0000e6  1c80              ADDS     r0,r0,#2
0000e8  1084              ASRS     r4,r0,#2
;;;103            Color |= ((ColorSep[1]+2)>>2)<<8;
0000ea  9801              LDR      r0,[sp,#4]
0000ec  1c80              ADDS     r0,r0,#2
0000ee  1080              ASRS     r0,r0,#2
0000f0  ea442400          ORR      r4,r4,r0,LSL #8
;;;104            Color |= ((U32)((ColorSep[2]+2)>>2))<<16;
0000f4  9802              LDR      r0,[sp,#8]
0000f6  1c80              ADDS     r0,r0,#2
0000f8  1080              ASRS     r0,r0,#2
0000fa  ea444400          ORR      r4,r4,r0,LSL #16
;;;105            PixelIndex = LCD_Color2Index(Color);
0000fe  4620              MOV      r0,r4
000100  f7fffffe          BL       LCD_Color2Index
000104  b280              UXTH     r0,r0
000106  9003              STR      r0,[sp,#0xc]
;;;106            LCD_SetPixelIndex(x+x0, y+y0, PixelIndex);
000108  9a06              LDR      r2,[sp,#0x18]
00010a  e000              B        |L1.270|
                  |L1.268|
00010c  e016              B        |L1.316|
                  |L1.270|
00010e  eb080102          ADD      r1,r8,r2
000112  9a07              LDR      r2,[sp,#0x1c]
000114  18b8              ADDS     r0,r7,r2
000116  9a03              LDR      r2,[sp,#0xc]
000118  f7fffffe          BL       LCD_SetPixelIndex
;;;107            pData += 2;
00011c  1d36              ADDS     r6,r6,#4
00011e  1c7f              ADDS     r7,r7,#1              ;83
                  |L1.288|
000120  9805              LDR      r0,[sp,#0x14]         ;83
000122  4287              CMP      r7,r0                 ;83
000124  db99              BLT      |L1.90|
;;;108          }
;;;109          pData0 += 2 * LineOff;
000126  eb0b0b89          ADD      r11,r11,r9,LSL #2
00012a  f1080801          ADD      r8,r8,#1              ;81
                  |L1.302|
00012e  9804              LDR      r0,[sp,#0x10]         ;81
000130  4580              CMP      r8,r0                 ;81
000132  db8f              BLT      |L1.84|
;;;110        }
;;;111      #if GUI_NUM_LAYERS > 1
;;;112        GUI_SelectLayer(PrevLayer);
;;;113      #endif
;;;114        /* Reactivate previously used device */
;;;115        GUI_MEMDEV_Select(hMemPrev);
000134  9808              LDR      r0,[sp,#0x20]
000136  f7fffffe          BL       GUI_MEMDEV_Select
;;;116      }
00013a  bf00              NOP      
                  |L1.316|
;;;117      GUI_UNLOCK();
;;;118    }
00013c  b009              ADD      sp,sp,#0x24
00013e  e8bd8ff0          POP      {r4-r11,pc}
;;;119    
                          ENDP

                  GUI_MEMDEV_CopyFromLCDAA PROC
;;;123    */
;;;124    void GUI_MEMDEV_CopyFromLCDAA(GUI_MEMDEV_Handle hMem) {
000142  e92d4ffe          PUSH     {r1-r11,lr}
000146  4680              MOV      r8,r0
;;;125      /* Make sure memory handle is valid */
;;;126      if (!hMem) {
000148  f1b80f00          CMP      r8,#0
00014c  d102              BNE      |L1.340|
;;;127        hMem = GUI_Context.hDevData;
00014e  4831              LDR      r0,|L1.532|
000150  f9b0804c          LDRSH    r8,[r0,#0x4c]  ; GUI_Context
                  |L1.340|
;;;128      }
;;;129      if (hMem) {
000154  f1b80f00          CMP      r8,#0
000158  d059              BEQ      |L1.526|
;;;130        int x, y;
;;;131        GUI_MEMDEV* pDevData = (GUI_MEMDEV*) GUI_ALLOC_h2p(hMem);  /* Convert to pointer */
00015a  4640              MOV      r0,r8
00015c  f7fffffe          BL       GUI_ALLOC_h2p
000160  4604              MOV      r4,r0
;;;132        GUI_USAGE* pUsage = 0;
000162  2700              MOVS     r7,#0
;;;133        int x0 = pDevData->x0;
000164  f9b4b000          LDRSH    r11,[r4,#0]
;;;134        int y0 = pDevData->y0;
000168  f9b40002          LDRSH    r0,[r4,#2]
00016c  9002              STR      r0,[sp,#8]
;;;135        int XMax = pDevData->XSize/2;
00016e  f9b40004          LDRSH    r0,[r4,#4]
000172  eb0071d0          ADD      r1,r0,r0,LSR #31
000176  1049              ASRS     r1,r1,#1
000178  9101              STR      r1,[sp,#4]
;;;136        int YMax = pDevData->YSize/2;
00017a  f9b40006          LDRSH    r0,[r4,#6]
00017e  eb0071d0          ADD      r1,r0,r0,LSR #31
000182  1049              ASRS     r1,r1,#1
000184  9100              STR      r1,[sp,#0]
;;;137        LCD_PIXELINDEX* pData = (LCD_PIXELINDEX*)(pDevData+1);
000186  f104062c          ADD      r6,r4,#0x2c
;;;138        int LineOff = pDevData->BytesPerLine;
00018a  f8d4a00c          LDR      r10,[r4,#0xc]
;;;139        if (pDevData->hUsage) 
00018e  8b20              LDRH     r0,[r4,#0x18]
000190  b120              CBZ      r0,|L1.412|
;;;140          pUsage = GUI_USAGE_H2P(pDevData->hUsage);
000192  f9b40018          LDRSH    r0,[r4,#0x18]
000196  f7fffffe          BL       GUI_ALLOC_h2p
00019a  4607              MOV      r7,r0
                  |L1.412|
;;;141        for (y=0; y< YMax; y++) {
00019c  2500              MOVS     r5,#0
00019e  e032              B        |L1.518|
                  |L1.416|
;;;142          if (pUsage) {
0001a0  b19f              CBZ      r7,|L1.458|
;;;143            GUI_USAGE_AddHLine(pUsage, 0, y*2, pDevData->XSize);
0001a2  f9b43004          LDRSH    r3,[r4,#4]
0001a6  006a              LSLS     r2,r5,#1
0001a8  68b8              LDR      r0,[r7,#8]
0001aa  2100              MOVS     r1,#0
0001ac  f8d0c004          LDR      r12,[r0,#4]
0001b0  4638              MOV      r0,r7
0001b2  47e0              BLX      r12
;;;144            GUI_USAGE_AddHLine(pUsage, 0, y*2+1, pDevData->XSize);
0001b4  f9b43004          LDRSH    r3,[r4,#4]
0001b8  2001              MOVS     r0,#1
0001ba  eb000245          ADD      r2,r0,r5,LSL #1
0001be  68b8              LDR      r0,[r7,#8]
0001c0  2100              MOVS     r1,#0
0001c2  f8d0c004          LDR      r12,[r0,#4]
0001c6  4638              MOV      r0,r7
0001c8  47e0              BLX      r12
                  |L1.458|
;;;145          }
;;;146          for (x=0; x< XMax; x++) {
0001ca  f04f0900          MOV      r9,#0
0001ce  e010              B        |L1.498|
                  |L1.464|
;;;147            *pData = *(pData+1) = *(pData+LineOff) = *(pData+LineOff+1) = LCD_GetPixelIndex(x+x0,y+y0);
0001d0  9a02              LDR      r2,[sp,#8]
0001d2  18a9              ADDS     r1,r5,r2
0001d4  eb09000b          ADD      r0,r9,r11
0001d8  f7fffffe          BL       LCD_GetPixelIndex
0001dc  b280              UXTH     r0,r0
0001de  eb06014a          ADD      r1,r6,r10,LSL #1
0001e2  8048              STRH     r0,[r1,#2]
0001e4  f826001a          STRH     r0,[r6,r10,LSL #1]
0001e8  8070              STRH     r0,[r6,#2]
0001ea  8030              STRH     r0,[r6,#0]
;;;148            pData+=2;
0001ec  1d36              ADDS     r6,r6,#4
0001ee  f1090901          ADD      r9,r9,#1              ;146
                  |L1.498|
0001f2  9801              LDR      r0,[sp,#4]            ;146
0001f4  4581              CMP      r9,r0                 ;146
0001f6  dbeb              BLT      |L1.464|
;;;149          }
;;;150          pData += LineOff + (pDevData->XSize&1);
0001f8  7920              LDRB     r0,[r4,#4]
0001fa  f0000001          AND      r0,r0,#1
0001fe  4450              ADD      r0,r0,r10
000200  eb060640          ADD      r6,r6,r0,LSL #1
000204  1c6d              ADDS     r5,r5,#1              ;141
                  |L1.518|
000206  9800              LDR      r0,[sp,#0]            ;141
000208  4285              CMP      r5,r0                 ;141
00020a  dbc9              BLT      |L1.416|
;;;151        }
;;;152      }
00020c  bf00              NOP      
                  |L1.526|
;;;153    }
00020e  e8bd8ffe          POP      {r1-r11,pc}
;;;154    
                          ENDP

000212  0000              DCW      0x0000
                  |L1.532|
                          DCD      GUI_Context

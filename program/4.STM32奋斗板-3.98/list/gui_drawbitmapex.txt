; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\gui_drawbitmapex.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\gui_drawbitmapex.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -IC:\Users\Administrator\Desktop\gui\STM32·Ü¶·°å-3.98\RTE -Id:\Keil_v5\ARM\PACK\ARM\CMSIS\4.3.0\CMSIS\Include -Id:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.1.0\Device\Include -D__UVISION_VERSION=515 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\gui_drawbitmapex.crf GUI\Core\GUI_DrawBitmapEx.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  GL_DrawBitmapEx PROC
;;;35     */
;;;36     static void GL_DrawBitmapEx(const GUI_BITMAP GUI_UNI_PTR * pBitmap, int x0, int y0,
000000  e92d4fff          PUSH     {r0-r11,lr}
;;;37                                 int xCenter, int yCenter, int xMag, int yMag) {
000004  b08f              SUB      sp,sp,#0x3c
000006  4604              MOV      r4,r0
000008  460d              MOV      r5,r1
;;;38       LCD_PIXELINDEX Index, IndexPrev = 0;
00000a  2000              MOVS     r0,#0
00000c  900e              STR      r0,[sp,#0x38]
;;;39       LCD_COLOR Color;
;;;40       int x, y, xi, yi, xSize, ySize, xAct, xStart, xMagAbs, xiMag, yMin, yMax, yEnd, yPrev, yStep;
;;;41       char Cached, HasTrans = 0;
00000e  9001              STR      r0,[sp,#4]
;;;42       /* Use clipping rect to reduce calculation */
;;;43       yMin = GUI_Context.ClipRect.y0;
000010  48cf              LDR      r0,|L1.848|
000012  f9b0000a          LDRSH    r0,[r0,#0xa]
000016  9006              STR      r0,[sp,#0x18]
;;;44       yMax = GUI_Context.ClipRect.y1;
000018  48cd              LDR      r0,|L1.848|
00001a  f9b0000e          LDRSH    r0,[r0,#0xe]
00001e  9005              STR      r0,[sp,#0x14]
;;;45       /* Init some values */
;;;46       xSize    = pBitmap->XSize;
000020  8820              LDRH     r0,[r4,#0]
000022  900b              STR      r0,[sp,#0x2c]
;;;47       ySize    = pBitmap->YSize;
000024  8860              LDRH     r0,[r4,#2]
000026  900a              STR      r0,[sp,#0x28]
;;;48       xMagAbs  = ((xMag < 0) ? -xMag : xMag);
000028  981d              LDR      r0,[sp,#0x74]
00002a  2800              CMP      r0,#0
00002c  da02              BGE      |L1.52|
00002e  981d              LDR      r0,[sp,#0x74]
000030  4240              RSBS     r0,r0,#0
000032  e000              B        |L1.54|
                  |L1.52|
000034  981d              LDR      r0,[sp,#0x74]
                  |L1.54|
000036  9008              STR      r0,[sp,#0x20]
;;;49       x0      -= (I32)((xMag < 0) ? xSize - xCenter - 1 : xCenter) * (I32)(xMagAbs) / (I32)(1000);
000038  981d              LDR      r0,[sp,#0x74]
00003a  2800              CMP      r0,#0
00003c  da04              BGE      |L1.72|
00003e  9912              LDR      r1,[sp,#0x48]
000040  980b              LDR      r0,[sp,#0x2c]
000042  1a40              SUBS     r0,r0,r1
000044  1e40              SUBS     r0,r0,#1
000046  e000              B        |L1.74|
                  |L1.72|
000048  9812              LDR      r0,[sp,#0x48]
                  |L1.74|
00004a  9908              LDR      r1,[sp,#0x20]
00004c  4348              MULS     r0,r1,r0
00004e  f44f717a          MOV      r1,#0x3e8
000052  fb90f0f1          SDIV     r0,r0,r1
000056  1a2d              SUBS     r5,r5,r0
;;;50       yEnd     = y0 + GUI__DivideRound32(((I32)(-yCenter) * (I32)(yMag)), 1000);
000058  991c              LDR      r1,[sp,#0x70]
00005a  4249              RSBS     r1,r1,#0
00005c  9a1e              LDR      r2,[sp,#0x78]
00005e  fb01f002          MUL      r0,r1,r2
000062  f44f717a          MOV      r1,#0x3e8
000066  f7fffffe          BL       GUI__DivideRound32
00006a  9911              LDR      r1,[sp,#0x44]
00006c  eb000b01          ADD      r11,r0,r1
;;;51       yPrev    = yEnd + 1;
000070  f10b0001          ADD      r0,r11,#1
000074  9004              STR      r0,[sp,#0x10]
;;;52       yStep = (yMag < 0) ? -1 : 1;
000076  981e              LDR      r0,[sp,#0x78]
000078  2800              CMP      r0,#0
00007a  da02              BGE      |L1.130|
00007c  f04f30ff          MOV      r0,#0xffffffff
000080  e000              B        |L1.132|
                  |L1.130|
000082  2001              MOVS     r0,#1
                  |L1.132|
000084  9003              STR      r0,[sp,#0xc]
;;;53       if (pBitmap->pPal) {
000086  68e0              LDR      r0,[r4,#0xc]
000088  b120              CBZ      r0,|L1.148|
;;;54         if (pBitmap->pPal->HasTrans) {
00008a  68e0              LDR      r0,[r4,#0xc]
00008c  7900              LDRB     r0,[r0,#4]
00008e  b108              CBZ      r0,|L1.148|
;;;55           HasTrans = 1;
000090  2001              MOVS     r0,#1
000092  9001              STR      r0,[sp,#4]
                  |L1.148|
;;;56         }
;;;57       }
;;;58       for (yi = 0; yi < ySize; yi++) {
000094  f04f0900          MOV      r9,#0
000098  e0b5              B        |L1.518|
                  |L1.154|
;;;59         y = yEnd;
00009a  465e              MOV      r6,r11
;;;60         yEnd = y0 + GUI__DivideRound32(((I32)(yi + 1 - yCenter) * (I32)(yMag)), 1000);
00009c  f1090101          ADD      r1,r9,#1
0000a0  9a1c              LDR      r2,[sp,#0x70]
0000a2  1a89              SUBS     r1,r1,r2
0000a4  9a1e              LDR      r2,[sp,#0x78]
0000a6  fb01f002          MUL      r0,r1,r2
0000aa  f44f717a          MOV      r1,#0x3e8
0000ae  f7fffffe          BL       GUI__DivideRound32
0000b2  9911              LDR      r1,[sp,#0x44]
0000b4  eb000b01          ADD      r11,r0,r1
;;;61         if (y != yPrev) {
0000b8  9804              LDR      r0,[sp,#0x10]
0000ba  4286              CMP      r6,r0
0000bc  d07e              BEQ      |L1.444|
;;;62           yPrev = y;
0000be  9604              STR      r6,[sp,#0x10]
;;;63           do {
0000c0  bf00              NOP      
                  |L1.194|
;;;64             if ((y >= yMin) && (y <= yMax)) {
0000c2  9806              LDR      r0,[sp,#0x18]
0000c4  4286              CMP      r6,r0
0000c6  db7a              BLT      |L1.446|
0000c8  9805              LDR      r0,[sp,#0x14]
0000ca  4286              CMP      r6,r0
0000cc  dc77              BGT      |L1.446|
;;;65               xStart = -1;
0000ce  f04f3aff          MOV      r10,#0xffffffff
;;;66               x      =  0;
0000d2  f04f0800          MOV      r8,#0
;;;67               xiMag  =  0;
0000d6  2000              MOVS     r0,#0
0000d8  9007              STR      r0,[sp,#0x1c]
;;;68               Cached =  0;
0000da  9002              STR      r0,[sp,#8]
;;;69               for (xi = 0; xi < xSize; xi++) {
0000dc  900c              STR      r0,[sp,#0x30]
0000de  e06c              B        |L1.442|
                  |L1.224|
;;;70                 xiMag += xMagAbs;
0000e0  e9dd0107          LDRD     r0,r1,[sp,#0x1c]
0000e4  4408              ADD      r0,r0,r1
0000e6  9007              STR      r0,[sp,#0x1c]
;;;71                 if (xiMag >= 1000) {
0000e8  9807              LDR      r0,[sp,#0x1c]
0000ea  f5b07f7a          CMP      r0,#0x3e8
0000ee  db61              BLT      |L1.436|
;;;72                   xAct  = (xMag > 0) ? xi : xSize - xi - 1;
0000f0  981d              LDR      r0,[sp,#0x74]
0000f2  2800              CMP      r0,#0
0000f4  dd01              BLE      |L1.250|
0000f6  980c              LDR      r0,[sp,#0x30]
0000f8  e003              B        |L1.258|
                  |L1.250|
0000fa  e9dd010b          LDRD     r0,r1,[sp,#0x2c]
0000fe  1a40              SUBS     r0,r0,r1
000100  1e40              SUBS     r0,r0,#1
                  |L1.258|
000102  9009              STR      r0,[sp,#0x24]
;;;73                   Index = GUI_GetBitmapPixelIndex(pBitmap, xAct, yi);
000104  464a              MOV      r2,r9
000106  4620              MOV      r0,r4
000108  9909              LDR      r1,[sp,#0x24]
00010a  f7fffffe          BL       GUI_GetBitmapPixelIndex
00010e  b287              UXTH     r7,r0
;;;74                   if (Index != IndexPrev || xStart == -1) {
000110  980e              LDR      r0,[sp,#0x38]
000112  4287              CMP      r7,r0
000114  d103              BNE      |L1.286|
000116  f10a0001          ADD      r0,r10,#1
00011a  2800              CMP      r0,#0
00011c  d13f              BNE      |L1.414|
                  |L1.286|
;;;75                     if ((Index == 0) && HasTrans) {
00011e  b977              CBNZ     r7,|L1.318|
000120  9801              LDR      r0,[sp,#4]
000122  b160              CBZ      r0,|L1.318|
;;;76                       /* Transparent color ... clear cache */
;;;77                       if (Cached) {
000124  9802              LDR      r0,[sp,#8]
000126  b3c8              CBZ      r0,|L1.412|
;;;78                         LCD_DrawHLine(x0 + xStart, y, x0 + x - 1);
000128  eb050108          ADD      r1,r5,r8
00012c  1e4a              SUBS     r2,r1,#1
00012e  eb05000a          ADD      r0,r5,r10
000132  4631              MOV      r1,r6
000134  f7fffffe          BL       LCD_DrawHLine
;;;79                         Cached = 0;
000138  2000              MOVS     r0,#0
00013a  9002              STR      r0,[sp,#8]
00013c  e02e              B        |L1.412|
                  |L1.318|
;;;80                       }
;;;81                     } else {
;;;82                       /* Another color ... draw contents of cache */
;;;83                       if (Cached && xStart != -1) {
00013e  9802              LDR      r0,[sp,#8]
000140  b150              CBZ      r0,|L1.344|
000142  f10a0001          ADD      r0,r10,#1
000146  b138              CBZ      r0,|L1.344|
;;;84                         LCD_DrawHLine(x0 + xStart, y, x0 + x - 1);
000148  eb050108          ADD      r1,r5,r8
00014c  1e4a              SUBS     r2,r1,#1
00014e  eb05000a          ADD      r0,r5,r10
000152  4631              MOV      r1,r6
000154  f7fffffe          BL       LCD_DrawHLine
                  |L1.344|
;;;85                       }
;;;86                       xStart    = x;
000158  46c2              MOV      r10,r8
;;;87                       Cached    = 1;
00015a  2001              MOVS     r0,#1
00015c  9002              STR      r0,[sp,#8]
;;;88                       if (pBitmap->pMethods) {
00015e  6920              LDR      r0,[r4,#0x10]
000160  b128              CBZ      r0,|L1.366|
;;;89                         Color = pBitmap->pMethods->pfIndex2Color(Index);
000162  6920              LDR      r0,[r4,#0x10]
000164  6841              LDR      r1,[r0,#4]
000166  4638              MOV      r0,r7
000168  4788              BLX      r1
00016a  900d              STR      r0,[sp,#0x34]
00016c  e00e              B        |L1.396|
                  |L1.366|
;;;90                       } else {
;;;91                         if (pBitmap->pPal->pPalEntries) {
00016e  68e0              LDR      r0,[r4,#0xc]
000170  6880              LDR      r0,[r0,#8]
000172  b128              CBZ      r0,|L1.384|
;;;92                           Color = pBitmap->pPal->pPalEntries[Index];
000174  68e0              LDR      r0,[r4,#0xc]
000176  6880              LDR      r0,[r0,#8]
000178  f8500027          LDR      r0,[r0,r7,LSL #2]
00017c  900d              STR      r0,[sp,#0x34]
00017e  e005              B        |L1.396|
                  |L1.384|
;;;93                         } else {
;;;94                           Color = LCDDEV_L0_Index2Color(Index);
000180  4873              LDR      r0,|L1.848|
000182  6c80              LDR      r0,[r0,#0x48]  ; GUI_Context
000184  6841              LDR      r1,[r0,#4]
000186  4638              MOV      r0,r7
000188  4788              BLX      r1
00018a  900d              STR      r0,[sp,#0x34]
                  |L1.396|
;;;95                         }
;;;96                       }
;;;97                       LCD_SetColorIndex(LCDDEV_L0_Color2Index(Color));
00018c  4870              LDR      r0,|L1.848|
00018e  6c80              LDR      r0,[r0,#0x48]  ; GUI_Context
000190  6801              LDR      r1,[r0,#0]
000192  980d              LDR      r0,[sp,#0x34]
000194  4788              BLX      r1
000196  9000              STR      r0,[sp,#0]
000198  f7fffffe          BL       LCD_SetColorIndex
                  |L1.412|
;;;98                     }
;;;99                     IndexPrev = Index;
00019c  970e              STR      r7,[sp,#0x38]
                  |L1.414|
;;;100                  }
;;;101                  do {
00019e  bf00              NOP      
                  |L1.416|
;;;102                    x++;
0001a0  f1080801          ADD      r8,r8,#1
;;;103                    xiMag -= 1000;
0001a4  9807              LDR      r0,[sp,#0x1c]
0001a6  f5a0707a          SUB      r0,r0,#0x3e8
0001aa  9007              STR      r0,[sp,#0x1c]
;;;104                  } while (xiMag >= 1000);
0001ac  9807              LDR      r0,[sp,#0x1c]
0001ae  f5b07f7a          CMP      r0,#0x3e8
0001b2  daf5              BGE      |L1.416|
                  |L1.436|
0001b4  980c              LDR      r0,[sp,#0x30]         ;69
0001b6  1c40              ADDS     r0,r0,#1              ;69
0001b8  900c              STR      r0,[sp,#0x30]         ;69
                  |L1.442|
0001ba  e001              B        |L1.448|
                  |L1.444|
0001bc  e021              B        |L1.514|
                  |L1.446|
0001be  e00d              B        |L1.476|
                  |L1.448|
0001c0  e9dd100b          LDRD     r1,r0,[sp,#0x2c]      ;69
0001c4  4288              CMP      r0,r1                 ;69
0001c6  db8b              BLT      |L1.224|
;;;105                }
;;;106              }
;;;107              /* Clear cache */
;;;108              if (Cached) {
0001c8  9802              LDR      r0,[sp,#8]
0001ca  b138              CBZ      r0,|L1.476|
;;;109                LCD_DrawHLine(x0 + xStart, y, x0 + x - 1);
0001cc  eb050108          ADD      r1,r5,r8
0001d0  1e4a              SUBS     r2,r1,#1
0001d2  eb05000a          ADD      r0,r5,r10
0001d6  4631              MOV      r1,r6
0001d8  f7fffffe          BL       LCD_DrawHLine
                  |L1.476|
;;;110              }
;;;111            }
;;;112            y += yStep;
0001dc  9803              LDR      r0,[sp,#0xc]
0001de  4406              ADD      r6,r6,r0
;;;113          } while ((yMag < 0) ? (y > yEnd) : (y < yEnd));
0001e0  981e              LDR      r0,[sp,#0x78]
0001e2  2800              CMP      r0,#0
0001e4  da05              BGE      |L1.498|
0001e6  455e              CMP      r6,r11
0001e8  dd01              BLE      |L1.494|
0001ea  2001              MOVS     r0,#1
0001ec  e006              B        |L1.508|
                  |L1.494|
0001ee  2000              MOVS     r0,#0
0001f0  e004              B        |L1.508|
                  |L1.498|
0001f2  455e              CMP      r6,r11
0001f4  da01              BGE      |L1.506|
0001f6  2001              MOVS     r0,#1
0001f8  e000              B        |L1.508|
                  |L1.506|
0001fa  2000              MOVS     r0,#0
                  |L1.508|
0001fc  2800              CMP      r0,#0
0001fe  f47faf60          BNE      |L1.194|
                  |L1.514|
000202  f1090901          ADD      r9,r9,#1              ;58
                  |L1.518|
000206  980a              LDR      r0,[sp,#0x28]         ;58
000208  4581              CMP      r9,r0                 ;58
00020a  f6ffaf46          BLT      |L1.154|
;;;114        }
;;;115      }
;;;116    }
00020e  b013              ADD      sp,sp,#0x4c
000210  e8bd8ff0          POP      {r4-r11,pc}
;;;117    
                          ENDP

                  GUI_DrawBitmapEx PROC
;;;127    */
;;;128    void GUI_DrawBitmapEx(const GUI_BITMAP GUI_UNI_PTR * pBitmap, int x0, int y0,
000214  e92d4ff0          PUSH     {r4-r11,lr}
;;;129                          int xCenter, int yCenter, int xMag, int yMag) {
000218  b085              SUB      sp,sp,#0x14
00021a  4680              MOV      r8,r0
00021c  460c              MOV      r4,r1
00021e  4615              MOV      r5,r2
000220  4699              MOV      r9,r3
000222  e9dda60e          LDRD     r10,r6,[sp,#0x38]
000226  9f10              LDR      r7,[sp,#0x40]
;;;130      int OldIndex;
;;;131      #if (GUI_WINSUPPORT)
;;;132        GUI_RECT r;
;;;133      #endif
;;;134      GUI_LOCK();
;;;135      OldIndex = LCD_GetColorIndex();
000228  f7fffffe          BL       LCD_GetColorIndex
00022c  4683              MOV      r11,r0
;;;136      #if (GUI_WINSUPPORT)
;;;137        WM_ADDORG(x0, y0);
00022e  4848              LDR      r0,|L1.848|
000230  6c00              LDR      r0,[r0,#0x40]  ; GUI_Context
000232  4404              ADD      r4,r4,r0
000234  4846              LDR      r0,|L1.848|
000236  6c40              LDR      r0,[r0,#0x44]  ; GUI_Context
000238  4405              ADD      r5,r5,r0
;;;138        if (xMag >= 0) {
00023a  2e00              CMP      r6,#0
00023c  db1b              BLT      |L1.630|
;;;139          r.x0 = x0 + GUI__DivideRound32(((I32)(-xCenter) * (I32)(xMag)), 1000);
00023e  f1c90100          RSB      r1,r9,#0
000242  fb01f006          MUL      r0,r1,r6
000246  f44f717a          MOV      r1,#0x3e8
00024a  f7fffffe          BL       GUI__DivideRound32
00024e  4420              ADD      r0,r0,r4
000250  b200              SXTH     r0,r0
000252  f8ad000c          STRH     r0,[sp,#0xc]
;;;140          r.x1 = x0 + GUI__DivideRound32(((I32)(pBitmap->XSize - xCenter - 1) * (I32)(xMag)), 1000);
000256  f8b81000          LDRH     r1,[r8,#0]
00025a  eba10109          SUB      r1,r1,r9
00025e  1e49              SUBS     r1,r1,#1
000260  fb01f006          MUL      r0,r1,r6
000264  f44f717a          MOV      r1,#0x3e8
000268  f7fffffe          BL       GUI__DivideRound32
00026c  4420              ADD      r0,r0,r4
00026e  b200              SXTH     r0,r0
000270  f8ad0010          STRH     r0,[sp,#0x10]
000274  e01a              B        |L1.684|
                  |L1.630|
;;;141        } else {
;;;142          r.x1 = x0 + GUI__DivideRound32(((I32)(-xCenter) * (I32)(xMag)), 1000);
000276  f1c90100          RSB      r1,r9,#0
00027a  fb01f006          MUL      r0,r1,r6
00027e  f44f717a          MOV      r1,#0x3e8
000282  f7fffffe          BL       GUI__DivideRound32
000286  4420              ADD      r0,r0,r4
000288  b200              SXTH     r0,r0
00028a  f8ad0010          STRH     r0,[sp,#0x10]
;;;143          r.x0 = x0 + GUI__DivideRound32(((I32)(pBitmap->XSize - xCenter - 1) * (I32)(xMag)), 1000);
00028e  f8b81000          LDRH     r1,[r8,#0]
000292  eba10109          SUB      r1,r1,r9
000296  1e49              SUBS     r1,r1,#1
000298  fb01f006          MUL      r0,r1,r6
00029c  f44f717a          MOV      r1,#0x3e8
0002a0  f7fffffe          BL       GUI__DivideRound32
0002a4  4420              ADD      r0,r0,r4
0002a6  b200              SXTH     r0,r0
0002a8  f8ad000c          STRH     r0,[sp,#0xc]
                  |L1.684|
;;;144        }
;;;145        if (yMag >= 0) {
0002ac  2f00              CMP      r7,#0
0002ae  db1b              BLT      |L1.744|
;;;146          r.y0 = y0 + GUI__DivideRound32(((I32)(-yCenter) * (I32)(yMag)), 1000);
0002b0  f1ca0100          RSB      r1,r10,#0
0002b4  fb01f007          MUL      r0,r1,r7
0002b8  f44f717a          MOV      r1,#0x3e8
0002bc  f7fffffe          BL       GUI__DivideRound32
0002c0  4428              ADD      r0,r0,r5
0002c2  b200              SXTH     r0,r0
0002c4  f8ad000e          STRH     r0,[sp,#0xe]
;;;147          r.y1 = y0 + GUI__DivideRound32(((I32)(pBitmap->YSize - yCenter - 1) * (I32)(yMag)), 1000);
0002c8  f8b81002          LDRH     r1,[r8,#2]
0002cc  eba1010a          SUB      r1,r1,r10
0002d0  1e49              SUBS     r1,r1,#1
0002d2  fb01f007          MUL      r0,r1,r7
0002d6  f44f717a          MOV      r1,#0x3e8
0002da  f7fffffe          BL       GUI__DivideRound32
0002de  4428              ADD      r0,r0,r5
0002e0  b200              SXTH     r0,r0
0002e2  f8ad0012          STRH     r0,[sp,#0x12]
0002e6  e01a              B        |L1.798|
                  |L1.744|
;;;148        } else {
;;;149          r.y1 = y0 + GUI__DivideRound32(((I32)(-yCenter) * (I32)(yMag)), 1000);
0002e8  f1ca0100          RSB      r1,r10,#0
0002ec  fb01f007          MUL      r0,r1,r7
0002f0  f44f717a          MOV      r1,#0x3e8
0002f4  f7fffffe          BL       GUI__DivideRound32
0002f8  4428              ADD      r0,r0,r5
0002fa  b200              SXTH     r0,r0
0002fc  f8ad0012          STRH     r0,[sp,#0x12]
;;;150          r.y0 = y0 + GUI__DivideRound32(((I32)(pBitmap->YSize - yCenter - 1) * (I32)(yMag)), 1000);
000300  f8b81002          LDRH     r1,[r8,#2]
000304  eba1010a          SUB      r1,r1,r10
000308  1e49              SUBS     r1,r1,#1
00030a  fb01f007          MUL      r0,r1,r7
00030e  f44f717a          MOV      r1,#0x3e8
000312  f7fffffe          BL       GUI__DivideRound32
000316  4428              ADD      r0,r0,r5
000318  b200              SXTH     r0,r0
00031a  f8ad000e          STRH     r0,[sp,#0xe]
                  |L1.798|
;;;151        }
;;;152        WM_ITERATE_START(&r) {
00031e  a803              ADD      r0,sp,#0xc
000320  f7fffffe          BL       WM__InitIVRSearch
000324  b168              CBZ      r0,|L1.834|
000326  bf00              NOP      
                  |L1.808|
;;;153      #endif
;;;154      GL_DrawBitmapEx(pBitmap, x0, y0, xCenter, yCenter, xMag, yMag);
000328  464b              MOV      r3,r9
00032a  462a              MOV      r2,r5
00032c  4621              MOV      r1,r4
00032e  4640              MOV      r0,r8
000330  e9cda600          STRD     r10,r6,[sp,#0]
000334  9702              STR      r7,[sp,#8]
000336  f7fffffe          BL       GL_DrawBitmapEx
;;;155      #if (GUI_WINSUPPORT)
;;;156        } WM_ITERATE_END();
00033a  f7fffffe          BL       WM__GetNextIVR
00033e  2800              CMP      r0,#0
000340  d1f2              BNE      |L1.808|
                  |L1.834|
;;;157      #endif
;;;158      LCD_SetColorIndex(OldIndex);
000342  4658              MOV      r0,r11
000344  f7fffffe          BL       LCD_SetColorIndex
;;;159      GUI_UNLOCK();
;;;160    }
000348  b005              ADD      sp,sp,#0x14
00034a  e8bd8ff0          POP      {r4-r11,pc}
;;;161    
                          ENDP

00034e  0000              DCW      0x0000
                  |L1.848|
                          DCD      GUI_Context

; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\edit_getnumchars.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\edit_getnumchars.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -IC:\Users\Administrator\Desktop\gui\STM32·Ü¶·°å-3.98\RTE -Id:\Keil_v5\ARM\PACK\ARM\CMSIS\4.3.0\CMSIS\Include -Id:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.1.0\Device\Include -D__UVISION_VERSION=515 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\edit_getnumchars.crf GUI\Widget\EDIT_GetNumChars.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  EDIT_GetNumChars PROC
;;;34     */
;;;35     int EDIT_GetNumChars(EDIT_Handle hObj) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4604              MOV      r4,r0
;;;36       int NumChars = 0;
000006  2600              MOVS     r6,#0
;;;37       if (hObj) {
000008  b184              CBZ      r4,|L1.44|
;;;38         EDIT_Obj* pObj;
;;;39         WM_LOCK();
;;;40         pObj = EDIT_H2P(hObj);
00000a  4620              MOV      r0,r4
00000c  f7fffffe          BL       GUI_ALLOC_h2p
000010  4605              MOV      r5,r0
;;;41         if (pObj->hpText) {
000012  8d28              LDRH     r0,[r5,#0x28]
000014  b148              CBZ      r0,|L1.42|
;;;42           char * pText;
;;;43           pText    = (char*) GUI_ALLOC_h2p(pObj->hpText);
000016  f9b50028          LDRSH    r0,[r5,#0x28]
00001a  f7fffffe          BL       GUI_ALLOC_h2p
00001e  4607              MOV      r7,r0
;;;44           NumChars = GUI__GetNumChars(pText);
000020  4638              MOV      r0,r7
000022  f7fffffe          BL       GUI__GetNumChars
000026  4606              MOV      r6,r0
;;;45         }
000028  bf00              NOP      
                  |L1.42|
;;;46         WM_UNLOCK();
;;;47       }
00002a  bf00              NOP      
                  |L1.44|
;;;48       return NumChars;
00002c  4630              MOV      r0,r6
;;;49     }
00002e  e8bd81f0          POP      {r4-r8,pc}
;;;50     
                          ENDP


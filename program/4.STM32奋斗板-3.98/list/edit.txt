; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\edit.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\edit.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -IC:\Users\Administrator\Desktop\gui\STM32·Ü¶·°å-3.98\RTE -Id:\Keil_v5\ARM\PACK\ARM\CMSIS\4.3.0\CMSIS\Include -Id:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.1.0\Device\Include -D__UVISION_VERSION=515 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\edit.crf GUI\Widget\EDIT.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _Paint PROC
;;;100    */
;;;101    static void _Paint(EDIT_Obj* pObj, EDIT_Handle hObj) {
000000  e92d4ff0          PUSH     {r4-r11,lr}
000004  b089              SUB      sp,sp,#0x24
000006  4604              MOV      r4,r0
000008  4688              MOV      r8,r1
;;;102      GUI_RECT rFillRect, rInside, rText, rInvert;
;;;103      const char GUI_UNI_PTR * pText = NULL;
00000a  f04f0900          MOV      r9,#0
;;;104      int IsEnabled, CursorWidth;
;;;105      IsEnabled = WM__IsEnabled(hObj);
00000e  4640              MOV      r0,r8
000010  f7fffffe          BL       WM__IsEnabled
000014  4682              MOV      r10,r0
;;;106      /* Set colors and font */
;;;107      LCD_SetBkColor(pObj->Props.aBkColor[IsEnabled]);
000016  f1040168          ADD      r1,r4,#0x68
00001a  f851002a          LDR      r0,[r1,r10,LSL #2]
00001e  f7fffffe          BL       LCD_SetBkColor
;;;108      LCD_SetColor(pObj->Props.aTextColor[0]);
000022  6e20              LDR      r0,[r4,#0x60]
000024  f7fffffe          BL       LCD_SetColor
;;;109      GUI_SetFont(pObj->Props.pFont);
000028  6de0              LDR      r0,[r4,#0x5c]
00002a  f7fffffe          BL       GUI_SetFont
;;;110      /* Calculate size */
;;;111      WIDGET__GetInsideRect(&pObj->Widget, &rFillRect);
00002e  a907              ADD      r1,sp,#0x1c
000030  4620              MOV      r0,r4
000032  f7fffffe          BL       WIDGET__GetInsideRect
;;;112      if (pObj->hpText) {
000036  8d20              LDRH     r0,[r4,#0x28]
000038  b120              CBZ      r0,|L1.68|
;;;113        pText = (const char*) GUI_ALLOC_h2p(pObj->hpText);
00003a  f9b40028          LDRSH    r0,[r4,#0x28]
00003e  f7fffffe          BL       GUI_ALLOC_h2p
000042  4681              MOV      r9,r0
                  |L1.68|
;;;114      }
;;;115      rInside = rFillRect;
000044  e9dd0107          LDRD     r0,r1,[sp,#0x1c]
000048  e9cd0105          STRD     r0,r1,[sp,#0x14]
;;;116      rInside.x0 += pObj->Props.Border + EDIT_XOFF;
00004c  f8bd1014          LDRH     r1,[sp,#0x14]
000050  2058              MOVS     r0,#0x58
000052  5b00              LDRH     r0,[r0,r4]
000054  1c40              ADDS     r0,r0,#1
000056  4408              ADD      r0,r0,r1
000058  b200              SXTH     r0,r0
00005a  f8ad0014          STRH     r0,[sp,#0x14]
;;;117      rInside.x1 -= pObj->Props.Border + EDIT_XOFF;
00005e  f8bd1018          LDRH     r1,[sp,#0x18]
000062  2058              MOVS     r0,#0x58
000064  5b00              LDRH     r0,[r0,r4]
000066  1c40              ADDS     r0,r0,#1
000068  1a08              SUBS     r0,r1,r0
00006a  b200              SXTH     r0,r0
00006c  f8ad0018          STRH     r0,[sp,#0x18]
;;;118      GUI__CalcTextRect(pText, &rInside, &rText, pObj->Props.Align);
000070  aa03              ADD      r2,sp,#0xc
000072  a905              ADD      r1,sp,#0x14
000074  4648              MOV      r0,r9
000076  6d63              LDR      r3,[r4,#0x54]
000078  f7fffffe          BL       GUI__CalcTextRect
;;;119      /* Calculate position and size of cursor */
;;;120      if (pObj->Widget.State & WIDGET_STATE_FOCUS) {
00007c  f8940026          LDRB     r0,[r4,#0x26]
000080  f0000001          AND      r0,r0,#1
000084  2800              CMP      r0,#0
000086  d056              BEQ      |L1.310|
;;;121        int NumChars;
;;;122        CursorWidth = ((pObj->XSizeCursor > 0) ? (pObj->XSizeCursor) : (1));
000088  f8940049          LDRB     r0,[r4,#0x49]
00008c  2800              CMP      r0,#0
00008e  dd02              BLE      |L1.150|
000090  f8940049          LDRB     r0,[r4,#0x49]
000094  e000              B        |L1.152|
                  |L1.150|
000096  2001              MOVS     r0,#1
                  |L1.152|
000098  4605              MOV      r5,r0
;;;123        NumChars    = GUI__GetNumChars(pText);
00009a  4648              MOV      r0,r9
00009c  f7fffffe          BL       GUI__GetNumChars
0000a0  4606              MOV      r6,r0
;;;124        if (pText) {
0000a2  f1b90f00          CMP      r9,#0
0000a6  d045              BEQ      |L1.308|
;;;125          U16 Char;
;;;126          int i, IsRTL = 0;
0000a8  2000              MOVS     r0,#0
0000aa  9000              STR      r0,[sp,#0]
;;;127          if ((pObj->EditMode != GUI_EDIT_MODE_INSERT) || (pObj->SelSize)) {
0000ac  f8940048          LDRB     r0,[r4,#0x48]
0000b0  b908              CBNZ     r0,|L1.182|
0000b2  6c60              LDR      r0,[r4,#0x44]
0000b4  b330              CBZ      r0,|L1.260|
                  |L1.182|
;;;128            if (pObj->CursorPos < NumChars) {
0000b6  6c20              LDR      r0,[r4,#0x40]
0000b8  42b0              CMP      r0,r6
0000ba  da23              BGE      |L1.260|
;;;129              if (pObj->SelSize) {
0000bc  6c60              LDR      r0,[r4,#0x44]
0000be  b1b0              CBZ      r0,|L1.238|
;;;130                CursorWidth = 0;
0000c0  2500              MOVS     r5,#0
;;;131                for (i = pObj->CursorPos; i < (int)(pObj->CursorPos + pObj->SelSize); i++) {
0000c2  6c27              LDR      r7,[r4,#0x40]
0000c4  e00b              B        |L1.222|
                  |L1.198|
;;;132                  Char = GUI__GetCursorCharacter(pText, i, NumChars, 0);
0000c6  2300              MOVS     r3,#0
0000c8  4632              MOV      r2,r6
0000ca  4639              MOV      r1,r7
0000cc  4648              MOV      r0,r9
0000ce  f7fffffe          BL       GUI__GetCursorCharacter
0000d2  4683              MOV      r11,r0
;;;133                  CursorWidth += GUI_GetCharDistX(Char);
0000d4  4658              MOV      r0,r11
0000d6  f7fffffe          BL       GUI_GetCharDistX
0000da  4405              ADD      r5,r5,r0
0000dc  1c7f              ADDS     r7,r7,#1              ;131
                  |L1.222|
0000de  e9d40110          LDRD     r0,r1,[r4,#0x40]      ;131
0000e2  4408              ADD      r0,r0,r1              ;131
0000e4  42b8              CMP      r0,r7                 ;131
0000e6  dcee              BGT      |L1.198|
;;;134                }
;;;135                if (!CursorWidth) {
0000e8  b965              CBNZ     r5,|L1.260|
;;;136                  CursorWidth = 1;
0000ea  2501              MOVS     r5,#1
0000ec  e00a              B        |L1.260|
                  |L1.238|
;;;137                }
;;;138              } else {
;;;139                Char = GUI__GetCursorCharacter(pText, pObj->CursorPos, NumChars, &IsRTL);
0000ee  466b              MOV      r3,sp
0000f0  4632              MOV      r2,r6
0000f2  4648              MOV      r0,r9
0000f4  6c21              LDR      r1,[r4,#0x40]
0000f6  f7fffffe          BL       GUI__GetCursorCharacter
0000fa  4683              MOV      r11,r0
;;;140                CursorWidth = GUI_GetCharDistX(Char);
0000fc  4658              MOV      r0,r11
0000fe  f7fffffe          BL       GUI_GetCharDistX
000102  4605              MOV      r5,r0
                  |L1.260|
;;;141              }
;;;142            }
;;;143          }
;;;144          rInvert = rText;
000104  e9dd0103          LDRD     r0,r1,[sp,#0xc]
000108  e9cd0101          STRD     r0,r1,[sp,#4]
;;;145          if (IsRTL) {
00010c  9800              LDR      r0,[sp,#0]
00010e  b128              CBZ      r0,|L1.284|
;;;146            rInvert.x0 -= CursorWidth;
000110  f8bd0004          LDRH     r0,[sp,#4]
000114  1b40              SUBS     r0,r0,r5
000116  b200              SXTH     r0,r0
000118  f8ad0004          STRH     r0,[sp,#4]
                  |L1.284|
;;;147          }
;;;148          rInvert.x0 += GUI__GetCursorPosX(pText, pObj->CursorPos, NumChars);
00011c  4632              MOV      r2,r6
00011e  4648              MOV      r0,r9
000120  6c21              LDR      r1,[r4,#0x40]
000122  f7fffffe          BL       GUI__GetCursorPosX
000126  f8bd1004          LDRH     r1,[sp,#4]
00012a  4408              ADD      r0,r0,r1
00012c  b200              SXTH     r0,r0
00012e  f8ad0004          STRH     r0,[sp,#4]
;;;149        }
000132  bf00              NOP      
                  |L1.308|
;;;150      }
000134  bf00              NOP      
                  |L1.310|
;;;151      /* WM loop */
;;;152      WM_ITERATE_START(NULL) {
000136  2000              MOVS     r0,#0
000138  f7fffffe          BL       WM__InitIVRSearch
00013c  b320              CBZ      r0,|L1.392|
00013e  bf00              NOP      
                  |L1.320|
;;;153        /* Set clipping rectangle */
;;;154        WM_SetUserClipRect(&rFillRect);
000140  a807              ADD      r0,sp,#0x1c
000142  f7fffffe          BL       WM_SetUserClipRect
;;;155        /* Display text */
;;;156        WIDGET__FillStringInRect(pText, &rFillRect, &rInside, &rText);
000146  ab03              ADD      r3,sp,#0xc
000148  aa05              ADD      r2,sp,#0x14
00014a  a907              ADD      r1,sp,#0x1c
00014c  4648              MOV      r0,r9
00014e  f7fffffe          BL       WIDGET__FillStringInRect
;;;157        /* Display cursor if needed */
;;;158        if (pObj->Widget.State & WIDGET_STATE_FOCUS) {
000152  f8940026          LDRB     r0,[r4,#0x26]
000156  f0000001          AND      r0,r0,#1
00015a  b158              CBZ      r0,|L1.372|
;;;159          GUI_InvertRect(rInvert.x0, rInvert.y0, rInvert.x0 + CursorWidth - 1, rInvert.y1);
00015c  f9bd300a          LDRSH    r3,[sp,#0xa]
000160  f9bd6004          LDRSH    r6,[sp,#4]
000164  442e              ADD      r6,r6,r5
000166  1e72              SUBS     r2,r6,#1
000168  f9bd1006          LDRSH    r1,[sp,#6]
00016c  f9bd0004          LDRSH    r0,[sp,#4]
000170  f7fffffe          BL       GUI_InvertRect
                  |L1.372|
;;;160        }
;;;161        WM_SetUserClipRect(NULL);
000174  2000              MOVS     r0,#0
000176  f7fffffe          BL       WM_SetUserClipRect
;;;162        /* Draw the 3D effect (if configured) */
;;;163        WIDGET__EFFECT_DrawDown(&pObj->Widget);
00017a  4620              MOV      r0,r4
00017c  f7fffffe          BL       WIDGET__EFFECT_DrawDown
;;;164      } WM_ITERATE_END();
000180  f7fffffe          BL       WM__GetNextIVR
000184  2800              CMP      r0,#0
000186  d1db              BNE      |L1.320|
                  |L1.392|
;;;165    }
000188  b009              ADD      sp,sp,#0x24
00018a  e8bd8ff0          POP      {r4-r11,pc}
;;;166    
                          ENDP

                  _Delete PROC
;;;170    */
;;;171    static void _Delete(EDIT_Obj* pObj) {
00018e  b510              PUSH     {r4,lr}
000190  4604              MOV      r4,r0
;;;172      GUI_ALLOC_FreePtr(&pObj->hpText);
000192  f1040028          ADD      r0,r4,#0x28
000196  f7fffffe          BL       GUI_ALLOC_FreePtr
;;;173    }
00019a  bd10              POP      {r4,pc}
;;;174    
                          ENDP

                  _IncrementBuffer PROC
;;;180    */
;;;181    static int _IncrementBuffer(EDIT_Obj* pObj, unsigned AddBytes) {
00019c  e92d41f0          PUSH     {r4-r8,lr}
0001a0  4604              MOV      r4,r0
0001a2  460e              MOV      r6,r1
;;;182      WM_HMEM hNew;
;;;183      int NewSize;
;;;184      NewSize = pObj->BufferSize + AddBytes;
0001a4  8da0              LDRH     r0,[r4,#0x2c]
0001a6  1987              ADDS     r7,r0,r6
;;;185      hNew    = GUI_ALLOC_Realloc(pObj->hpText, NewSize);
0001a8  f9b40028          LDRSH    r0,[r4,#0x28]
0001ac  4639              MOV      r1,r7
0001ae  f7fffffe          BL       GUI_ALLOC_Realloc
0001b2  4605              MOV      r5,r0
;;;186      if (hNew) {
0001b4  b175              CBZ      r5,|L1.468|
;;;187        if (!(pObj->hpText)) {
0001b6  8d20              LDRH     r0,[r4,#0x28]
0001b8  b938              CBNZ     r0,|L1.458|
;;;188          char* pText;
;;;189          pText  = (char*) GUI_ALLOC_h2p(hNew);
0001ba  4628              MOV      r0,r5
0001bc  f7fffffe          BL       GUI_ALLOC_h2p
0001c0  4680              MOV      r8,r0
;;;190          *pText = 0;
0001c2  2000              MOVS     r0,#0
0001c4  f8880000          STRB     r0,[r8,#0]
;;;191        }
0001c8  bf00              NOP      
                  |L1.458|
;;;192        pObj->BufferSize = NewSize;
0001ca  85a7              STRH     r7,[r4,#0x2c]
;;;193        pObj->hpText     = hNew;
0001cc  8525              STRH     r5,[r4,#0x28]
;;;194        return 1;
0001ce  2001              MOVS     r0,#1
                  |L1.464|
;;;195      }
;;;196      return 0;
;;;197    }
0001d0  e8bd81f0          POP      {r4-r8,pc}
                  |L1.468|
0001d4  2000              MOVS     r0,#0                 ;196
0001d6  e7fb              B        |L1.464|
;;;198    
                          ENDP

                  _IsSpaceInBuffer PROC
;;;209    */
;;;210    static int _IsSpaceInBuffer(EDIT_Obj* pObj, int BytesNeeded) {
0001d8  e92d41f0          PUSH     {r4-r8,lr}
0001dc  4604              MOV      r4,r0
0001de  460d              MOV      r5,r1
;;;211      int NumBytes = 0;
0001e0  2600              MOVS     r6,#0
;;;212      if (pObj->hpText) {
0001e2  8d20              LDRH     r0,[r4,#0x28]
0001e4  b138              CBZ      r0,|L1.502|
;;;213        NumBytes = strlen((char*)GUI_ALLOC_h2p(pObj->hpText));
0001e6  f9b40028          LDRSH    r0,[r4,#0x28]
0001ea  f7fffffe          BL       GUI_ALLOC_h2p
0001ee  4607              MOV      r7,r0
0001f0  f7fffffe          BL       strlen
0001f4  4606              MOV      r6,r0
                  |L1.502|
;;;214      }
;;;215      BytesNeeded = (BytesNeeded + NumBytes + 1) - pObj->BufferSize;
0001f6  19a8              ADDS     r0,r5,r6
0001f8  1c40              ADDS     r0,r0,#1
0001fa  8da1              LDRH     r1,[r4,#0x2c]
0001fc  1a45              SUBS     r5,r0,r1
;;;216      if (BytesNeeded > 0) {
0001fe  2d00              CMP      r5,#0
000200  dd08              BLE      |L1.532|
;;;217        if (!_IncrementBuffer(pObj, BytesNeeded + EDIT_REALLOC_SIZE)) {
000202  f1050110          ADD      r1,r5,#0x10
000206  4620              MOV      r0,r4
000208  f7fffffe          BL       _IncrementBuffer
00020c  b910              CBNZ     r0,|L1.532|
;;;218          return 0;
00020e  2000              MOVS     r0,#0
                  |L1.528|
;;;219        }
;;;220      }
;;;221      return 1;
;;;222    }
000210  e8bd81f0          POP      {r4-r8,pc}
                  |L1.532|
000214  2001              MOVS     r0,#1                 ;221
000216  e7fb              B        |L1.528|
;;;223    
                          ENDP

                  _IsCharsAvailable PROC
;;;233    */
;;;234    static int _IsCharsAvailable(EDIT_Obj* pObj, int CharsNeeded) {
000218  e92d41f0          PUSH     {r4-r8,lr}
00021c  4604              MOV      r4,r0
00021e  460d              MOV      r5,r1
;;;235      if ((CharsNeeded > 0) && (pObj->MaxLen > 0)) {
000220  2d00              CMP      r5,#0
000222  dd17              BLE      |L1.596|
000224  f9b4002a          LDRSH    r0,[r4,#0x2a]
000228  2800              CMP      r0,#0
00022a  dd13              BLE      |L1.596|
;;;236        int NumChars = 0;
00022c  2600              MOVS     r6,#0
;;;237        if (pObj->hpText) {
00022e  8d20              LDRH     r0,[r4,#0x28]
000230  b138              CBZ      r0,|L1.578|
;;;238          NumChars = GUI__GetNumChars((char*)GUI_ALLOC_h2p(pObj->hpText));
000232  f9b40028          LDRSH    r0,[r4,#0x28]
000236  f7fffffe          BL       GUI_ALLOC_h2p
00023a  4607              MOV      r7,r0
00023c  f7fffffe          BL       GUI__GetNumChars
000240  4606              MOV      r6,r0
                  |L1.578|
;;;239        }
;;;240        if ((CharsNeeded + NumChars) > pObj->MaxLen) {
000242  19a8              ADDS     r0,r5,r6
000244  f9b4102a          LDRSH    r1,[r4,#0x2a]
000248  4288              CMP      r0,r1
00024a  dd02              BLE      |L1.594|
;;;241          return 0;
00024c  2000              MOVS     r0,#0
                  |L1.590|
;;;242        }
;;;243      }
;;;244      return 1;
;;;245    }
00024e  e8bd81f0          POP      {r4-r8,pc}
                  |L1.594|
000252  bf00              NOP                            ;243
                  |L1.596|
000254  2001              MOVS     r0,#1                 ;244
000256  e7fa              B        |L1.590|
;;;246    
                          ENDP

                  _DeleteChar PROC
;;;253    */
;;;254    static void _DeleteChar(EDIT_Handle hObj, EDIT_Obj* pObj) {
000258  e92d41f0          PUSH     {r4-r8,lr}
00025c  4607              MOV      r7,r0
00025e  460c              MOV      r4,r1
;;;255      if (pObj->hpText) {
000260  8d20              LDRH     r0,[r4,#0x28]
000262  b1f0              CBZ      r0,|L1.674|
;;;256        unsigned CursorOffset;
;;;257        char* pText;
;;;258        pText = (char*) GUI_ALLOC_h2p(pObj->hpText);
000264  f9b40028          LDRSH    r0,[r4,#0x28]
000268  f7fffffe          BL       GUI_ALLOC_h2p
00026c  4605              MOV      r5,r0
;;;259        CursorOffset = GUI_UC__NumChars2NumBytes(pText, pObj->CursorPos);
00026e  4628              MOV      r0,r5
000270  6c21              LDR      r1,[r4,#0x40]
000272  f7fffffe          BL       GUI_UC__NumChars2NumBytes
000276  4606              MOV      r6,r0
;;;260        if (CursorOffset < strlen(pText)) {
000278  4628              MOV      r0,r5
00027a  f7fffffe          BL       strlen
00027e  42b0              CMP      r0,r6
000280  d90e              BLS      |L1.672|
;;;261          int NumBytes;
;;;262          pText += CursorOffset;
000282  4435              ADD      r5,r5,r6
;;;263          NumBytes = GUI_UC_GetCharSize(pText);
000284  4628              MOV      r0,r5
000286  f7fffffe          BL       GUI_UC_GetCharSize
00028a  4680              MOV      r8,r0
;;;264          strcpy(pText, pText + NumBytes);
00028c  eb050108          ADD      r1,r5,r8
000290  4628              MOV      r0,r5
000292  f7fffffe          BL       strcpy
;;;265          WM_NotifyParent(hObj, WM_NOTIFICATION_VALUE_CHANGED);
000296  2105              MOVS     r1,#5
000298  4638              MOV      r0,r7
00029a  f7fffffe          BL       WM_NotifyParent
;;;266        }
00029e  bf00              NOP      
                  |L1.672|
;;;267      }
0002a0  bf00              NOP      
                  |L1.674|
;;;268    }
0002a2  e8bd81f0          POP      {r4-r8,pc}
;;;269    
                          ENDP

                  _InsertChar PROC
;;;275    */
;;;276    static int _InsertChar(EDIT_Handle hObj, EDIT_Obj* pObj, U16 Char) {
0002a6  e92d47f0          PUSH     {r4-r10,lr}
0002aa  4680              MOV      r8,r0
0002ac  460c              MOV      r4,r1
0002ae  4616              MOV      r6,r2
;;;277      if (_IsCharsAvailable(pObj, 1)) {
0002b0  2101              MOVS     r1,#1
0002b2  4620              MOV      r0,r4
0002b4  f7fffffe          BL       _IsCharsAvailable
0002b8  b348              CBZ      r0,|L1.782|
;;;278        int BytesNeeded;
;;;279        BytesNeeded = GUI_UC__CalcSizeOfChar(Char);
0002ba  4630              MOV      r0,r6
0002bc  f7fffffe          BL       GUI_UC__CalcSizeOfChar
0002c0  4607              MOV      r7,r0
;;;280        if (_IsSpaceInBuffer(pObj, BytesNeeded)) {
0002c2  4639              MOV      r1,r7
0002c4  4620              MOV      r0,r4
0002c6  f7fffffe          BL       _IsSpaceInBuffer
0002ca  b1f8              CBZ      r0,|L1.780|
;;;281          int CursorOffset;
;;;282          char* pText;
;;;283          pText = (char*) GUI_ALLOC_h2p(pObj->hpText);
0002cc  f9b40028          LDRSH    r0,[r4,#0x28]
0002d0  f7fffffe          BL       GUI_ALLOC_h2p
0002d4  4605              MOV      r5,r0
;;;284          CursorOffset = GUI_UC__NumChars2NumBytes(pText, pObj->CursorPos);
0002d6  4628              MOV      r0,r5
0002d8  6c21              LDR      r1,[r4,#0x40]
0002da  f7fffffe          BL       GUI_UC__NumChars2NumBytes
0002de  4681              MOV      r9,r0
;;;285          pText += CursorOffset;
0002e0  444d              ADD      r5,r5,r9
;;;286          memmove(pText + BytesNeeded, pText, strlen(pText) + 1);
0002e2  4628              MOV      r0,r5
0002e4  f7fffffe          BL       strlen
0002e8  f1000a01          ADD      r10,r0,#1
0002ec  19e8              ADDS     r0,r5,r7
0002ee  4652              MOV      r2,r10
0002f0  4629              MOV      r1,r5
0002f2  f7fffffe          BL       __aeabi_memmove
;;;287          GUI_UC_Encode(pText, Char);
0002f6  4631              MOV      r1,r6
0002f8  4628              MOV      r0,r5
0002fa  f7fffffe          BL       GUI_UC_Encode
;;;288          WM_NotifyParent(hObj, WM_NOTIFICATION_VALUE_CHANGED);
0002fe  2105              MOVS     r1,#5
000300  4640              MOV      r0,r8
000302  f7fffffe          BL       WM_NotifyParent
;;;289          return 1;
000306  2001              MOVS     r0,#1
                  |L1.776|
;;;290        }
;;;291      }
;;;292      return 0;
;;;293    }
000308  e8bd87f0          POP      {r4-r10,pc}
                  |L1.780|
00030c  bf00              NOP                            ;291
                  |L1.782|
00030e  2000              MOVS     r0,#0                 ;292
000310  e7fa              B        |L1.776|
;;;294    
                          ENDP

                  EDIT__SetCursorPos PROC
;;;397    */
;;;398    void EDIT__SetCursorPos(EDIT_Obj* pObj, int CursorPos) {
000312  e92d41f0          PUSH     {r4-r8,lr}
000316  4604              MOV      r4,r0
000318  460d              MOV      r5,r1
;;;399      if (pObj->hpText) {
00031a  8d20              LDRH     r0,[r4,#0x28]
00031c  b320              CBZ      r0,|L1.872|
;;;400        char* pText;
;;;401        int NumChars, Offset;
;;;402        pText    = (char*) GUI_ALLOC_h2p(pObj->hpText);
00031e  f9b40028          LDRSH    r0,[r4,#0x28]
000322  f7fffffe          BL       GUI_ALLOC_h2p
000326  4680              MOV      r8,r0
;;;403        NumChars = GUI__GetNumChars(pText);
000328  4640              MOV      r0,r8
00032a  f7fffffe          BL       GUI__GetNumChars
00032e  4606              MOV      r6,r0
;;;404        Offset   = (pObj->EditMode == GUI_EDIT_MODE_INSERT) ? 0 : 1;
000330  f8940048          LDRB     r0,[r4,#0x48]
000334  b108              CBZ      r0,|L1.826|
000336  2001              MOVS     r0,#1
000338  e000              B        |L1.828|
                  |L1.826|
00033a  2000              MOVS     r0,#0
                  |L1.828|
00033c  4607              MOV      r7,r0
;;;405        if (CursorPos < 0) {
00033e  2d00              CMP      r5,#0
000340  da00              BGE      |L1.836|
;;;406          CursorPos = 0;
000342  2500              MOVS     r5,#0
                  |L1.836|
;;;407        }
;;;408        if (CursorPos > NumChars) {
000344  42b5              CMP      r5,r6
000346  dd00              BLE      |L1.842|
;;;409          CursorPos = NumChars;
000348  4635              MOV      r5,r6
                  |L1.842|
;;;410        }
;;;411        if (CursorPos > (pObj->MaxLen - Offset)) {
00034a  f9b4002a          LDRSH    r0,[r4,#0x2a]
00034e  1bc0              SUBS     r0,r0,r7
000350  42a8              CMP      r0,r5
000352  da02              BGE      |L1.858|
;;;412          CursorPos = pObj->MaxLen - Offset;
000354  f9b4002a          LDRSH    r0,[r4,#0x2a]
000358  1bc5              SUBS     r5,r0,r7
                  |L1.858|
;;;413        }
;;;414        if (pObj->CursorPos != CursorPos) {
00035a  6c20              LDR      r0,[r4,#0x40]
00035c  42a8              CMP      r0,r5
00035e  d000              BEQ      |L1.866|
;;;415          pObj->CursorPos = CursorPos;
000360  6425              STR      r5,[r4,#0x40]
                  |L1.866|
;;;416        }
;;;417        pObj->SelSize = 0;
000362  2000              MOVS     r0,#0
000364  6460              STR      r0,[r4,#0x44]
;;;418      }
000366  bf00              NOP      
                  |L1.872|
;;;419    }
000368  e8bd81f0          POP      {r4-r8,pc}
;;;420    
                          ENDP

                  EDIT_SetCursorAtPixel PROC
;;;534    */
;;;535    void EDIT_SetCursorAtPixel(EDIT_Handle hObj, int xPos) {
00036c  e92d4ff8          PUSH     {r3-r11,lr}
000370  4607              MOV      r7,r0
000372  460d              MOV      r5,r1
;;;536      if (hObj) {
000374  2f00              CMP      r7,#0
000376  d05a              BEQ      |L1.1070|
;;;537        EDIT_Obj* pObj;
;;;538        WM_LOCK();
;;;539        pObj = EDIT_H2P(hObj);
000378  4638              MOV      r0,r7
00037a  f7fffffe          BL       GUI_ALLOC_h2p
00037e  4604              MOV      r4,r0
;;;540        if (pObj->hpText) {    
000380  8d20              LDRH     r0,[r4,#0x28]
000382  2800              CMP      r0,#0
000384  d052              BEQ      |L1.1068|
;;;541          const GUI_FONT GUI_UNI_PTR *pOldFont;
;;;542          int xSize, TextWidth, NumChars;
;;;543          const char GUI_UNI_PTR * pText;
;;;544          pText = (char*) GUI_ALLOC_h2p(pObj->hpText);
000386  f9b40028          LDRSH    r0,[r4,#0x28]
00038a  f7fffffe          BL       GUI_ALLOC_h2p
00038e  9000              STR      r0,[sp,#0]
;;;545          pOldFont = GUI_SetFont(pObj->Props.pFont);
000390  6de0              LDR      r0,[r4,#0x5c]
000392  f7fffffe          BL       GUI_SetFont
000396  4682              MOV      r10,r0
;;;546          xSize = WM_GetWindowSizeX(hObj);
000398  4638              MOV      r0,r7
00039a  f7fffffe          BL       WM_GetWindowSizeX
00039e  4680              MOV      r8,r0
;;;547          TextWidth = GUI_GetStringDistX(pText);
0003a0  9800              LDR      r0,[sp,#0]
0003a2  f7fffffe          BL       GUI_GetStringDistX
0003a6  4606              MOV      r6,r0
;;;548          switch (pObj->Props.Align & GUI_TA_HORIZONTAL) {
0003a8  f8940054          LDRB     r0,[r4,#0x54]
0003ac  f0000003          AND      r0,r0,#3
0003b0  2801              CMP      r0,#1
0003b2  d009              BEQ      |L1.968|
0003b4  2802              CMP      r0,#2
0003b6  d10e              BNE      |L1.982|
;;;549          case GUI_TA_HCENTER:
;;;550            xPos -= (xSize - TextWidth + 1) / 2;
0003b8  eba80106          SUB      r1,r8,r6
0003bc  1c48              ADDS     r0,r1,#1
0003be  eb0071d0          ADD      r1,r0,r0,LSR #31
0003c2  eba50561          SUB      r5,r5,r1,ASR #1
;;;551            break;
0003c6  e00d              B        |L1.996|
                  |L1.968|
;;;552          case GUI_TA_RIGHT:
;;;553            xPos -= xSize - TextWidth - (pObj->Props.Border + EDIT_XOFF);
0003c8  eba80106          SUB      r1,r8,r6
0003cc  6da0              LDR      r0,[r4,#0x58]
0003ce  1c40              ADDS     r0,r0,#1
0003d0  1a08              SUBS     r0,r1,r0
0003d2  1a2d              SUBS     r5,r5,r0
;;;554            break;
0003d4  e006              B        |L1.996|
                  |L1.982|
;;;555          default:
;;;556            xPos -= (pObj->Props.Border + EDIT_XOFF) + pObj->Widget.pEffect->EffectSize;
0003d6  6da0              LDR      r0,[r4,#0x58]
0003d8  1c40              ADDS     r0,r0,#1
0003da  6a21              LDR      r1,[r4,#0x20]
0003dc  6949              LDR      r1,[r1,#0x14]
0003de  4408              ADD      r0,r0,r1
0003e0  1a2d              SUBS     r5,r5,r0
0003e2  bf00              NOP                            ;548
                  |L1.996|
0003e4  bf00              NOP                            ;551
;;;557          }
;;;558          NumChars = GUI__GetNumChars(pText);
0003e6  9800              LDR      r0,[sp,#0]
0003e8  f7fffffe          BL       GUI__GetNumChars
0003ec  4681              MOV      r9,r0
;;;559          if (xPos < 0) {
0003ee  2d00              CMP      r5,#0
0003f0  da04              BGE      |L1.1020|
;;;560            EDIT__SetCursorPos(pObj, 0);
0003f2  2100              MOVS     r1,#0
0003f4  4620              MOV      r0,r4
0003f6  f7fffffe          BL       EDIT__SetCursorPos
0003fa  e010              B        |L1.1054|
                  |L1.1020|
;;;561          } else if (xPos > TextWidth) {
0003fc  42b5              CMP      r5,r6
0003fe  dd04              BLE      |L1.1034|
;;;562            EDIT__SetCursorPos(pObj, NumChars);
000400  4649              MOV      r1,r9
000402  4620              MOV      r0,r4
000404  f7fffffe          BL       EDIT__SetCursorPos
000408  e009              B        |L1.1054|
                  |L1.1034|
;;;563          } else {
;;;564            EDIT__SetCursorPos(pObj, GUI__GetCursorPosChar(pText, xPos, NumChars));
00040a  464a              MOV      r2,r9
00040c  4629              MOV      r1,r5
00040e  9800              LDR      r0,[sp,#0]
000410  f7fffffe          BL       GUI__GetCursorPosChar
000414  4683              MOV      r11,r0
000416  4659              MOV      r1,r11
000418  4620              MOV      r0,r4
00041a  f7fffffe          BL       EDIT__SetCursorPos
                  |L1.1054|
;;;565          }
;;;566          GUI_SetFont(pOldFont);
00041e  4650              MOV      r0,r10
000420  f7fffffe          BL       GUI_SetFont
;;;567          EDIT_Invalidate(hObj);
000424  4638              MOV      r0,r7
000426  f7fffffe          BL       WM_InvalidateWindow
;;;568        }
00042a  bf00              NOP      
                  |L1.1068|
;;;569        WM_UNLOCK();
;;;570      }
00042c  bf00              NOP      
                  |L1.1070|
;;;571    }
00042e  e8bd8ff8          POP      {r3-r11,pc}
;;;572    
                          ENDP

                  _OnTouch PROC
;;;298    */
;;;299    static void _OnTouch(EDIT_Handle hObj, EDIT_Obj* pObj, WM_MESSAGE*pMsg) {
000432  e92d41f0          PUSH     {r4-r8,lr}
000436  4607              MOV      r7,r0
000438  460d              MOV      r5,r1
00043a  4614              MOV      r4,r2
;;;300      const GUI_PID_STATE* pState = (const GUI_PID_STATE*)pMsg->Data.p;
00043c  68a6              LDR      r6,[r4,#8]
;;;301      GUI_USE_PARA(pObj);
00043e  bf00              NOP      
;;;302      if (pMsg->Data.p) {  /* Something happened in our area (pressed or released) */
000440  68a0              LDR      r0,[r4,#8]
000442  b178              CBZ      r0,|L1.1124|
;;;303        if (pState->Pressed) {
000444  7a30              LDRB     r0,[r6,#8]
000446  b140              CBZ      r0,|L1.1114|
;;;304          GUI_DEBUG_LOG1("EDIT_Callback(WM_TOUCH, Pressed, Handle %d)\n",1);
;;;305          EDIT_SetCursorAtPixel(hObj, pState->x);
000448  4638              MOV      r0,r7
00044a  6831              LDR      r1,[r6,#0]
00044c  f7fffffe          BL       EDIT_SetCursorAtPixel
;;;306          WM_NotifyParent(hObj, WM_NOTIFICATION_CLICKED);
000450  2101              MOVS     r1,#1
000452  4638              MOV      r0,r7
000454  f7fffffe          BL       WM_NotifyParent
000458  e008              B        |L1.1132|
                  |L1.1114|
;;;307        } else {
;;;308          GUI_DEBUG_LOG1("EDIT_Callback(WM_TOUCH, Released, Handle %d)\n",1);
;;;309          WM_NotifyParent(hObj, WM_NOTIFICATION_RELEASED);
00045a  2102              MOVS     r1,#2
00045c  4638              MOV      r0,r7
00045e  f7fffffe          BL       WM_NotifyParent
000462  e003              B        |L1.1132|
                  |L1.1124|
;;;310        }
;;;311      } else {
;;;312        GUI_DEBUG_LOG1("EDIT_Callback(WM_TOUCH, Moved out, Handle %d)\n",1);
;;;313        WM_NotifyParent(hObj, WM_NOTIFICATION_MOVED_OUT);
000464  2103              MOVS     r1,#3
000466  4638              MOV      r0,r7
000468  f7fffffe          BL       WM_NotifyParent
                  |L1.1132|
;;;314      }
;;;315    }
00046c  e8bd81f0          POP      {r4-r8,pc}
;;;316    
                          ENDP

                  _SetValue PROC
;;;320    */
;;;321    static void _SetValue(EDIT_Handle hObj, I32 Value, int Unsigned) {
000470  e92d41f0          PUSH     {r4-r8,lr}
000474  4606              MOV      r6,r0
000476  460d              MOV      r5,r1
000478  4617              MOV      r7,r2
;;;322      EDIT_Obj* pObj;
;;;323      if (hObj) {
00047a  b32e              CBZ      r6,|L1.1224|
;;;324        WM_LOCK();
;;;325        pObj = EDIT_H2P(hObj);
00047c  4630              MOV      r0,r6
00047e  f7fffffe          BL       GUI_ALLOC_h2p
000482  4604              MOV      r4,r0
;;;326        /* Put in min/max range */
;;;327        if (Unsigned) {
000484  b147              CBZ      r7,|L1.1176|
;;;328          if ((unsigned)Value < (unsigned)pObj->Min) {
000486  6b20              LDR      r0,[r4,#0x30]
000488  42a8              CMP      r0,r5
00048a  d900              BLS      |L1.1166|
;;;329            Value = pObj->Min;
00048c  6b25              LDR      r5,[r4,#0x30]
                  |L1.1166|
;;;330          }
;;;331          if ((unsigned)Value > (unsigned)pObj->Max) {
00048e  6b60              LDR      r0,[r4,#0x34]
000490  42a8              CMP      r0,r5
000492  d209              BCS      |L1.1192|
;;;332            Value = pObj->Max;
000494  6b65              LDR      r5,[r4,#0x34]
000496  e007              B        |L1.1192|
                  |L1.1176|
;;;333          }
;;;334        } else {
;;;335          if (Value < pObj->Min) {
000498  6b20              LDR      r0,[r4,#0x30]
00049a  42a8              CMP      r0,r5
00049c  dd00              BLE      |L1.1184|
;;;336            Value = pObj->Min;
00049e  6b25              LDR      r5,[r4,#0x30]
                  |L1.1184|
;;;337          }
;;;338          if (Value > pObj->Max) {
0004a0  6b60              LDR      r0,[r4,#0x34]
0004a2  42a8              CMP      r0,r5
0004a4  da00              BGE      |L1.1192|
;;;339            Value = pObj->Max;
0004a6  6b65              LDR      r5,[r4,#0x34]
                  |L1.1192|
;;;340          }
;;;341        }
;;;342        if (pObj->CurrentValue != (U32)Value) {
0004a8  6be0              LDR      r0,[r4,#0x3c]
0004aa  42a8              CMP      r0,r5
0004ac  d00c              BEQ      |L1.1224|
;;;343          pObj->CurrentValue = Value;
0004ae  63e5              STR      r5,[r4,#0x3c]
;;;344          if (pObj->pfUpdateBuffer) {
0004b0  6d20              LDR      r0,[r4,#0x50]
0004b2  b110              CBZ      r0,|L1.1210|
;;;345            pObj->pfUpdateBuffer(hObj);
0004b4  4630              MOV      r0,r6
0004b6  6d21              LDR      r1,[r4,#0x50]
0004b8  4788              BLX      r1
                  |L1.1210|
;;;346          }
;;;347          WM_InvalidateWindow(hObj);
0004ba  4630              MOV      r0,r6
0004bc  f7fffffe          BL       WM_InvalidateWindow
;;;348          WM_NotifyParent(hObj, WM_NOTIFICATION_VALUE_CHANGED);
0004c0  2105              MOVS     r1,#5
0004c2  4630              MOV      r0,r6
0004c4  f7fffffe          BL       WM_NotifyParent
                  |L1.1224|
;;;349        }
;;;350        WM_UNLOCK();
;;;351      }
;;;352    }
0004c8  e8bd81f0          POP      {r4-r8,pc}
;;;353    
                          ENDP

                  EDIT__GetCurrentChar PROC
;;;380    */
;;;381    U16 EDIT__GetCurrentChar(EDIT_Obj* pObj) {
0004cc  b570              PUSH     {r4-r6,lr}
0004ce  4604              MOV      r4,r0
;;;382      U16 Char = 0;
0004d0  2600              MOVS     r6,#0
;;;383      if (pObj->hpText) {
0004d2  8d20              LDRH     r0,[r4,#0x28]
0004d4  b170              CBZ      r0,|L1.1268|
;;;384        const char* pText;
;;;385        pText  = (const char*) GUI_ALLOC_h2p(pObj->hpText);
0004d6  f9b40028          LDRSH    r0,[r4,#0x28]
0004da  f7fffffe          BL       GUI_ALLOC_h2p
0004de  4605              MOV      r5,r0
;;;386        pText += GUI_UC__NumChars2NumBytes(pText, pObj->CursorPos);
0004e0  4628              MOV      r0,r5
0004e2  6c21              LDR      r1,[r4,#0x40]
0004e4  f7fffffe          BL       GUI_UC__NumChars2NumBytes
0004e8  4405              ADD      r5,r5,r0
;;;387        Char   = GUI_UC_GetCharCode(pText);
0004ea  4628              MOV      r0,r5
0004ec  f7fffffe          BL       GUI_UC_GetCharCode
0004f0  4606              MOV      r6,r0
;;;388      }
0004f2  bf00              NOP      
                  |L1.1268|
;;;389      return Char;
0004f4  4630              MOV      r0,r6
;;;390    }
0004f6  bd70              POP      {r4-r6,pc}
;;;391    
                          ENDP

                  EDIT__SetValueUnsigned PROC
;;;424    */
;;;425    void EDIT__SetValueUnsigned(EDIT_Handle hObj, I32 Value) {
0004f8  b570              PUSH     {r4-r6,lr}
0004fa  4604              MOV      r4,r0
0004fc  460d              MOV      r5,r1
;;;426      _SetValue(hObj, Value, 1);
0004fe  2201              MOVS     r2,#1
000500  4629              MOV      r1,r5
000502  4620              MOV      r0,r4
000504  f7fffffe          BL       _SetValue
;;;427    }
000508  bd70              POP      {r4-r6,pc}
;;;428    
                          ENDP

                  EDIT_AddKey PROC
;;;576    */
;;;577    void EDIT_AddKey(EDIT_Handle hObj, int Key) {
00050a  e92d41f0          PUSH     {r4-r8,lr}
00050e  4607              MOV      r7,r0
000510  460d              MOV      r5,r1
;;;578      if (hObj) {
000512  2f00              CMP      r7,#0
000514  d070              BEQ      |L1.1528|
;;;579        EDIT_Obj* pObj;
;;;580        WM_LOCK();
;;;581        pObj = EDIT_H2P(hObj);
000516  4638              MOV      r0,r7
000518  f7fffffe          BL       GUI_ALLOC_h2p
00051c  4604              MOV      r4,r0
;;;582        if (pObj) {
00051e  2c00              CMP      r4,#0
000520  d06b              BEQ      |L1.1530|
;;;583          if (pObj->pfAddKeyEx) {
000522  6ce0              LDR      r0,[r4,#0x4c]
000524  b120              CBZ      r0,|L1.1328|
;;;584            pObj->pfAddKeyEx(hObj, Key);
000526  4629              MOV      r1,r5
000528  4638              MOV      r0,r7
00052a  6ce2              LDR      r2,[r4,#0x4c]
00052c  4790              BLX      r2
00052e  e08b              B        |L1.1608|
                  |L1.1328|
;;;585          } else {
;;;586            switch (Key) {
000530  2d12              CMP      r5,#0x12
000532  d046              BEQ      |L1.1474|
000534  dc06              BGT      |L1.1348|
000536  2d08              CMP      r5,#8
000538  d04f              BEQ      |L1.1498|
00053a  2d10              CMP      r5,#0x10
00053c  d047              BEQ      |L1.1486|
00053e  2d11              CMP      r5,#0x11
000540  d16c              BNE      |L1.1564|
000542  e006              B        |L1.1362|
                  |L1.1348|
000544  2d13              CMP      r5,#0x13
000546  d020              BEQ      |L1.1418|
000548  2d1d              CMP      r5,#0x1d
00054a  d057              BEQ      |L1.1532|
00054c  2d1e              CMP      r5,#0x1e
00054e  d165              BNE      |L1.1564|
000550  e04d              B        |L1.1518|
                  |L1.1362|
;;;587            case GUI_KEY_UP:
;;;588              if (pObj->hpText) {
000552  8d20              LDRH     r0,[r4,#0x28]
000554  b1c0              CBZ      r0,|L1.1416|
;;;589                char* pText;
;;;590                U16 Char;
;;;591                pText  = (char*) GUI_ALLOC_h2p(pObj->hpText);
000556  f9b40028          LDRSH    r0,[r4,#0x28]
00055a  f7fffffe          BL       GUI_ALLOC_h2p
00055e  4606              MOV      r6,r0
;;;592                pText += GUI_UC__NumChars2NumBytes(pText, pObj->CursorPos);
000560  4630              MOV      r0,r6
000562  6c21              LDR      r1,[r4,#0x40]
000564  f7fffffe          BL       GUI_UC__NumChars2NumBytes
000568  4406              ADD      r6,r6,r0
;;;593                Char   = GUI_UC_GetCharCode(pText);
00056a  4630              MOV      r0,r6
00056c  f7fffffe          BL       GUI_UC_GetCharCode
000570  4680              MOV      r8,r0
;;;594                if (Char < 0x7f) {  
000572  f1b80f7f          CMP      r8,#0x7f
000576  da06              BGE      |L1.1414|
;;;595                  *pText = Char + 1;
000578  f1080001          ADD      r0,r8,#1
00057c  7030              STRB     r0,[r6,#0]
;;;596                  WM_NotifyParent(hObj, WM_NOTIFICATION_VALUE_CHANGED);
00057e  2105              MOVS     r1,#5
000580  4638              MOV      r0,r7
000582  f7fffffe          BL       WM_NotifyParent
                  |L1.1414|
;;;597                }
;;;598              }
000586  bf00              NOP      
                  |L1.1416|
;;;599              break;
000588  e05d              B        |L1.1606|
                  |L1.1418|
;;;600            case GUI_KEY_DOWN:
;;;601              if (pObj->hpText) {
00058a  8d20              LDRH     r0,[r4,#0x28]
00058c  b1c0              CBZ      r0,|L1.1472|
;;;602                char* pText;
;;;603                U16 Char;
;;;604                pText  = (char*) GUI_ALLOC_h2p(pObj->hpText);
00058e  f9b40028          LDRSH    r0,[r4,#0x28]
000592  f7fffffe          BL       GUI_ALLOC_h2p
000596  4606              MOV      r6,r0
;;;605                pText += GUI_UC__NumChars2NumBytes(pText, pObj->CursorPos);
000598  4630              MOV      r0,r6
00059a  6c21              LDR      r1,[r4,#0x40]
00059c  f7fffffe          BL       GUI_UC__NumChars2NumBytes
0005a0  4406              ADD      r6,r6,r0
;;;606                Char   = GUI_UC_GetCharCode(pText);
0005a2  4630              MOV      r0,r6
0005a4  f7fffffe          BL       GUI_UC_GetCharCode
0005a8  4680              MOV      r8,r0
;;;607                if (Char > 0x20) {  
0005aa  f1b80f20          CMP      r8,#0x20
0005ae  dd06              BLE      |L1.1470|
;;;608                  *pText = Char - 1;
0005b0  f1a80001          SUB      r0,r8,#1
0005b4  7030              STRB     r0,[r6,#0]
;;;609                  WM_NotifyParent(hObj, WM_NOTIFICATION_VALUE_CHANGED);
0005b6  2105              MOVS     r1,#5
0005b8  4638              MOV      r0,r7
0005ba  f7fffffe          BL       WM_NotifyParent
                  |L1.1470|
;;;610                }
;;;611              }
0005be  bf00              NOP      
                  |L1.1472|
;;;612              break;
0005c0  e041              B        |L1.1606|
                  |L1.1474|
;;;613            case GUI_KEY_RIGHT:
;;;614              EDIT__SetCursorPos(pObj, pObj->CursorPos + 1);
0005c2  6c20              LDR      r0,[r4,#0x40]
0005c4  1c41              ADDS     r1,r0,#1
0005c6  4620              MOV      r0,r4
0005c8  f7fffffe          BL       EDIT__SetCursorPos
;;;615              break;
0005cc  e03b              B        |L1.1606|
                  |L1.1486|
;;;616            case GUI_KEY_LEFT:
;;;617              EDIT__SetCursorPos(pObj, pObj->CursorPos - 1);
0005ce  6c20              LDR      r0,[r4,#0x40]
0005d0  1e41              SUBS     r1,r0,#1
0005d2  4620              MOV      r0,r4
0005d4  f7fffffe          BL       EDIT__SetCursorPos
;;;618              break;
0005d8  e035              B        |L1.1606|
                  |L1.1498|
;;;619            case GUI_KEY_BACKSPACE:
;;;620              EDIT__SetCursorPos(pObj, pObj->CursorPos - 1);
0005da  6c20              LDR      r0,[r4,#0x40]
0005dc  1e41              SUBS     r1,r0,#1
0005de  4620              MOV      r0,r4
0005e0  f7fffffe          BL       EDIT__SetCursorPos
;;;621              _DeleteChar(hObj, pObj);
0005e4  4621              MOV      r1,r4
0005e6  4638              MOV      r0,r7
0005e8  f7fffffe          BL       _DeleteChar
;;;622              break;
0005ec  e02b              B        |L1.1606|
                  |L1.1518|
;;;623            case GUI_KEY_DELETE:
;;;624              _DeleteChar(hObj, pObj);
0005ee  4621              MOV      r1,r4
0005f0  4638              MOV      r0,r7
0005f2  f7fffffe          BL       _DeleteChar
;;;625              break;
0005f6  e026              B        |L1.1606|
                  |L1.1528|
0005f8  e02a              B        |L1.1616|
                  |L1.1530|
0005fa  e028              B        |L1.1614|
                  |L1.1532|
;;;626            case GUI_KEY_INSERT:
;;;627              if (pObj->EditMode == GUI_EDIT_MODE_OVERWRITE) {
0005fc  f8940048          LDRB     r0,[r4,#0x48]
000600  2801              CMP      r0,#1
000602  d103              BNE      |L1.1548|
;;;628                pObj->EditMode = GUI_EDIT_MODE_INSERT;
000604  2000              MOVS     r0,#0
000606  f8840048          STRB     r0,[r4,#0x48]
00060a  e006              B        |L1.1562|
                  |L1.1548|
;;;629              } else {
;;;630                pObj->EditMode = GUI_EDIT_MODE_OVERWRITE;
00060c  2001              MOVS     r0,#1
00060e  f8840048          STRB     r0,[r4,#0x48]
;;;631                EDIT__SetCursorPos(pObj, pObj->CursorPos);
000612  4620              MOV      r0,r4
000614  6c21              LDR      r1,[r4,#0x40]
000616  f7fffffe          BL       EDIT__SetCursorPos
                  |L1.1562|
;;;632              }
;;;633              break;
00061a  e014              B        |L1.1606|
                  |L1.1564|
;;;634            default:
;;;635              if (Key >= 0x20) {
00061c  2d20              CMP      r5,#0x20
00061e  db11              BLT      |L1.1604|
;;;636                if (pObj->EditMode != GUI_EDIT_MODE_INSERT) {
000620  f8940048          LDRB     r0,[r4,#0x48]
000624  b118              CBZ      r0,|L1.1582|
;;;637                  _DeleteChar(hObj, pObj);
000626  4621              MOV      r1,r4
000628  4638              MOV      r0,r7
00062a  f7fffffe          BL       _DeleteChar
                  |L1.1582|
;;;638                }
;;;639                if (_InsertChar(hObj, pObj, Key)) {
00062e  b2aa              UXTH     r2,r5
000630  4621              MOV      r1,r4
000632  4638              MOV      r0,r7
000634  f7fffffe          BL       _InsertChar
000638  b120              CBZ      r0,|L1.1604|
;;;640                  EDIT__SetCursorPos(pObj, pObj->CursorPos + 1);
00063a  6c20              LDR      r0,[r4,#0x40]
00063c  1c41              ADDS     r1,r0,#1
00063e  4620              MOV      r0,r4
000640  f7fffffe          BL       EDIT__SetCursorPos
                  |L1.1604|
000644  bf00              NOP                            ;586
                  |L1.1606|
000646  bf00              NOP                            ;599
                  |L1.1608|
;;;641                }
;;;642              }
;;;643            }
;;;644          }
;;;645          EDIT_Invalidate(hObj);
000648  4638              MOV      r0,r7
00064a  f7fffffe          BL       WM_InvalidateWindow
                  |L1.1614|
;;;646        }
;;;647        WM_UNLOCK();
;;;648      }
00064e  bf00              NOP      
                  |L1.1616|
;;;649    }
000650  e8bd81f0          POP      {r4-r8,pc}
;;;650    
                          ENDP

                  EDIT_Callback PROC
;;;438    */
;;;439    void EDIT_Callback (WM_MESSAGE * pMsg) {
000654  e92d41f0          PUSH     {r4-r8,lr}
000658  4604              MOV      r4,r0
;;;440      int IsEnabled;
;;;441      EDIT_Handle hObj;
;;;442      EDIT_Obj*   pObj;
;;;443      hObj = (EDIT_Handle) pMsg->hWin;       
00065a  f9b45004          LDRSH    r5,[r4,#4]
;;;444      pObj = (EDIT_Obj *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
00065e  4628              MOV      r0,r5
000660  f7fffffe          BL       GUI_ALLOC_h2p
000664  4680              MOV      r8,r0
;;;445      IsEnabled = WM__IsEnabled(hObj);
000666  4628              MOV      r0,r5
000668  f7fffffe          BL       WM__IsEnabled
00066c  4607              MOV      r7,r0
;;;446      /* Let widget handle the standard messages */
;;;447      if (WIDGET_HandleActive(hObj, pMsg) == 0) {
00066e  4621              MOV      r1,r4
000670  4628              MOV      r0,r5
000672  f7fffffe          BL       WIDGET_HandleActive
000676  b908              CBNZ     r0,|L1.1660|
                  |L1.1656|
;;;448        return;
;;;449      }
;;;450      switch (pMsg->MsgId) {
;;;451      case WM_TOUCH:
;;;452        _OnTouch(hObj, pObj, pMsg);
;;;453        break;
;;;454      case WM_PAINT:
;;;455        GUI_DEBUG_LOG("EDIT: _Callback(WM_PAINT)\n");
;;;456        _Paint(pObj, hObj);
;;;457        return;
;;;458      case WM_DELETE:
;;;459        GUI_DEBUG_LOG("EDIT: _Callback(WM_DELETE)\n");
;;;460        _Delete(pObj);
;;;461        break;       /* No return here ... WM_DefaultProc needs to be called */
;;;462      case WM_KEY:
;;;463        if (IsEnabled) {
;;;464          if ( ((const WM_KEY_INFO*)(pMsg->Data.p))->PressedCnt >0) {
;;;465            int Key = ((const WM_KEY_INFO*)(pMsg->Data.p))->Key;
;;;466            switch (Key) {
;;;467              case GUI_KEY_ENTER:
;;;468              case GUI_KEY_ESCAPE:
;;;469              case GUI_KEY_TAB:
;;;470              case GUI_KEY_BACKTAB:
;;;471                break;                    /* Send to parent by not doing anything */
;;;472              default:
;;;473                EDIT_AddKey(hObj, Key);
;;;474                return;
;;;475            }
;;;476          }
;;;477        }
;;;478        break;
;;;479      }
;;;480      WM_DefaultProc(pMsg);
;;;481    }
000678  e8bd81f0          POP      {r4-r8,pc}
                  |L1.1660|
00067c  6820              LDR      r0,[r4,#0]            ;450
00067e  280b              CMP      r0,#0xb               ;450
000680  d011              BEQ      |L1.1702|
000682  280c              CMP      r0,#0xc               ;450
000684  d004              BEQ      |L1.1680|
000686  280e              CMP      r0,#0xe               ;450
000688  d011              BEQ      |L1.1710|
00068a  280f              CMP      r0,#0xf               ;450
00068c  d12b              BNE      |L1.1766|
00068e  e005              B        |L1.1692|
                  |L1.1680|
000690  4622              MOV      r2,r4                 ;452
000692  4641              MOV      r1,r8                 ;452
000694  4628              MOV      r0,r5                 ;452
000696  f7fffffe          BL       _OnTouch
00069a  e024              B        |L1.1766|
                  |L1.1692|
00069c  4629              MOV      r1,r5                 ;456
00069e  4640              MOV      r0,r8                 ;456
0006a0  f7fffffe          BL       _Paint
0006a4  e7e8              B        |L1.1656|
                  |L1.1702|
0006a6  4640              MOV      r0,r8                 ;460
0006a8  f7fffffe          BL       _Delete
0006ac  e01b              B        |L1.1766|
                  |L1.1710|
0006ae  b1cf              CBZ      r7,|L1.1764|
0006b0  68a0              LDR      r0,[r4,#8]            ;464
0006b2  6840              LDR      r0,[r0,#4]            ;464
0006b4  2800              CMP      r0,#0                 ;464
0006b6  dd15              BLE      |L1.1764|
0006b8  68a0              LDR      r0,[r4,#8]            ;465
0006ba  6806              LDR      r6,[r0,#0]            ;465
0006bc  2e09              CMP      r6,#9                 ;466
0006be  d008              BEQ      |L1.1746|
0006c0  2e0a              CMP      r6,#0xa               ;466
0006c2  d007              BEQ      |L1.1748|
0006c4  2e0d              CMP      r6,#0xd               ;466
0006c6  d002              BEQ      |L1.1742|
0006c8  2e1b              CMP      r6,#0x1b              ;466
0006ca  d104              BNE      |L1.1750|
0006cc  e000              B        |L1.1744|
                  |L1.1742|
0006ce  bf00              NOP                            ;468
                  |L1.1744|
0006d0  bf00              NOP                            ;469
                  |L1.1746|
0006d2  bf00              NOP                            ;470
                  |L1.1748|
0006d4  e004              B        |L1.1760|
                  |L1.1750|
0006d6  4631              MOV      r1,r6                 ;473
0006d8  4628              MOV      r0,r5                 ;473
0006da  f7fffffe          BL       EDIT_AddKey
0006de  e7cb              B        |L1.1656|
                  |L1.1760|
0006e0  bf00              NOP                            ;471
0006e2  bf00              NOP                            ;476
                  |L1.1764|
0006e4  bf00              NOP                            ;478
                  |L1.1766|
0006e6  bf00              NOP                            ;453
0006e8  4620              MOV      r0,r4                 ;480
0006ea  f7fffffe          BL       WM_DefaultProc
0006ee  bf00              NOP      
0006f0  e7c2              B        |L1.1656|
;;;482    
                          ENDP

                  EDIT_CreateEx PROC
;;;492    */
;;;493    EDIT_Handle EDIT_CreateEx(int x0, int y0, int xsize, int ysize, WM_HWIN hParent, int WinFlags, int ExFlags,
0006f2  e92d4fff          PUSH     {r0-r11,lr}
;;;494                              int Id, int MaxLen)
;;;495    {
0006f6  b085              SUB      sp,sp,#0x14
0006f8  4607              MOV      r7,r0
0006fa  4688              MOV      r8,r1
0006fc  4691              MOV      r9,r2
0006fe  f8ddb058          LDR      r11,[sp,#0x58]
000702  e9dd5a13          LDRD     r5,r10,[sp,#0x4c]
;;;496      EDIT_Handle hObj;
;;;497      GUI_USE_PARA(ExFlags);
000706  bf00              NOP      
;;;498      WM_LOCK();
;;;499      /* Alloc memory for obj */
;;;500      WinFlags |= WM_CF_LATE_CLIP;    /* Always use late clipping since widget is optimized for it. */
000708  f4455580          ORR      r5,r5,#0x1000
;;;501      hObj = WM_CreateWindowAsChild(x0, y0, xsize, ysize, hParent, WM_CF_SHOW | WinFlags, EDIT_Callback,
00070c  2250              MOVS     r2,#0x50
00070e  f2af03bb          ADR      r3,EDIT_Callback + 1
000712  b2a8              UXTH     r0,r5
000714  f0400002          ORR      r0,r0,#2
000718  9912              LDR      r1,[sp,#0x48]
00071a  e9cd3202          STRD     r3,r2,[sp,#8]
00071e  e9cd1000          STRD     r1,r0,[sp,#0]
000722  464a              MOV      r2,r9
000724  4641              MOV      r1,r8
000726  4638              MOV      r0,r7
000728  9b08              LDR      r3,[sp,#0x20]
00072a  f7fffffe          BL       WM_CreateWindowAsChild
00072e  4606              MOV      r6,r0
;;;502                                    sizeof(EDIT_Obj) - sizeof(WM_Obj));
;;;503      if (hObj) {
000730  b346              CBZ      r6,|L1.1924|
;;;504        EDIT_Obj* pObj;
;;;505        pObj = (EDIT_Obj *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
000732  4630              MOV      r0,r6
000734  f7fffffe          BL       GUI_ALLOC_h2p
000738  4604              MOV      r4,r0
;;;506        /* init widget specific variables */
;;;507        WIDGET__Init(&pObj->Widget, Id, WIDGET_STATE_FOCUSSABLE);
00073a  2210              MOVS     r2,#0x10
00073c  4620              MOV      r0,r4
00073e  9915              LDR      r1,[sp,#0x54]
000740  f7fffffe          BL       WIDGET__Init
;;;508        /* init member variables */
;;;509        EDIT_INIT_ID(pObj);
;;;510        pObj->Props         = EDIT__DefaultProps;
000744  221c              MOVS     r2,#0x1c
000746  49a0              LDR      r1,|L1.2504|
000748  f1040054          ADD      r0,r4,#0x54
00074c  f7fffffe          BL       __aeabi_memcpy4
;;;511        pObj->XSizeCursor   = 1;
000750  2001              MOVS     r0,#1
000752  f8840049          STRB     r0,[r4,#0x49]
;;;512        pObj->MaxLen        = (MaxLen == 0) ? 8 : MaxLen;
000756  f1bb0f00          CMP      r11,#0
00075a  d101              BNE      |L1.1888|
00075c  2008              MOVS     r0,#8
00075e  e000              B        |L1.1890|
                  |L1.1888|
000760  4658              MOV      r0,r11
                  |L1.1890|
000762  b200              SXTH     r0,r0
000764  8560              STRH     r0,[r4,#0x2a]
;;;513        pObj->BufferSize    = 0;
000766  2000              MOVS     r0,#0
000768  85a0              STRH     r0,[r4,#0x2c]
;;;514        pObj->hpText        = 0;
00076a  8520              STRH     r0,[r4,#0x28]
;;;515        if (_IncrementBuffer(pObj, pObj->MaxLen + 1) == 0) {
00076c  f9b4002a          LDRSH    r0,[r4,#0x2a]
000770  1c41              ADDS     r1,r0,#1
000772  4620              MOV      r0,r4
000774  f7fffffe          BL       _IncrementBuffer
000778  b918              CBNZ     r0,|L1.1922|
;;;516          GUI_DEBUG_ERROROUT("EDIT_Create failed to alloc buffer");
;;;517          EDIT_Delete(hObj);
00077a  4630              MOV      r0,r6
00077c  f7fffffe          BL       WM_DeleteWindow
;;;518          hObj = 0;
000780  2600              MOVS     r6,#0
                  |L1.1922|
;;;519        }
;;;520      }
000782  bf00              NOP      
                  |L1.1924|
;;;521      WM_UNLOCK();
;;;522      return hObj;
000784  4630              MOV      r0,r6
;;;523    }
000786  b009              ADD      sp,sp,#0x24
000788  e8bd8ff0          POP      {r4-r11,pc}
;;;524    
                          ENDP

                  EDIT_SetFont PROC
;;;654    */
;;;655    void EDIT_SetFont(EDIT_Handle hObj, const GUI_FONT GUI_UNI_PTR * pfont) {
00078c  b570              PUSH     {r4-r6,lr}
00078e  4605              MOV      r5,r0
000790  460e              MOV      r6,r1
;;;656      EDIT_Obj* pObj;
;;;657      if (hObj == 0)
000792  b905              CBNZ     r5,|L1.1942|
                  |L1.1940|
;;;658        return;
;;;659      WM_LOCK();
;;;660      pObj = EDIT_H2P(hObj);
;;;661      if (pObj) {
;;;662        pObj->Props.pFont = pfont;
;;;663        EDIT_Invalidate(hObj);
;;;664      }
;;;665      WM_UNLOCK();
;;;666    }
000794  bd70              POP      {r4-r6,pc}
                  |L1.1942|
000796  4628              MOV      r0,r5                 ;660
000798  f7fffffe          BL       GUI_ALLOC_h2p
00079c  4604              MOV      r4,r0                 ;660
00079e  b11c              CBZ      r4,|L1.1960|
0007a0  65e6              STR      r6,[r4,#0x5c]         ;662
0007a2  4628              MOV      r0,r5                 ;663
0007a4  f7fffffe          BL       WM_InvalidateWindow
                  |L1.1960|
0007a8  bf00              NOP      
0007aa  e7f3              B        |L1.1940|
;;;667    
                          ENDP

                  EDIT_SetBkColor PROC
;;;671    */
;;;672    void EDIT_SetBkColor(EDIT_Handle hObj, unsigned int Index, GUI_COLOR color) {
0007ac  e92d41f0          PUSH     {r4-r8,lr}
0007b0  4606              MOV      r6,r0
0007b2  460d              MOV      r5,r1
0007b4  4617              MOV      r7,r2
;;;673      EDIT_Obj* pObj;
;;;674      if (hObj == 0)
0007b6  b90e              CBNZ     r6,|L1.1980|
                  |L1.1976|
;;;675        return;
;;;676      WM_LOCK();
;;;677      pObj = EDIT_H2P(hObj);
;;;678      if (pObj) {
;;;679        if (Index < GUI_COUNTOF(pObj->Props.aBkColor)) {
;;;680          pObj->Props.aBkColor[Index] = color;
;;;681          EDIT_Invalidate(hObj);
;;;682        }
;;;683      }
;;;684      WM_UNLOCK();
;;;685    }
0007b8  e8bd81f0          POP      {r4-r8,pc}
                  |L1.1980|
0007bc  4630              MOV      r0,r6                 ;677
0007be  f7fffffe          BL       GUI_ALLOC_h2p
0007c2  4604              MOV      r4,r0                 ;677
0007c4  b144              CBZ      r4,|L1.2008|
0007c6  2d02              CMP      r5,#2                 ;679
0007c8  d206              BCS      |L1.2008|
0007ca  f1040068          ADD      r0,r4,#0x68           ;680
0007ce  f8407025          STR      r7,[r0,r5,LSL #2]     ;680
0007d2  4630              MOV      r0,r6                 ;681
0007d4  f7fffffe          BL       WM_InvalidateWindow
                  |L1.2008|
0007d8  bf00              NOP      
0007da  e7ed              B        |L1.1976|
;;;686    
                          ENDP

                  EDIT_SetTextColor PROC
;;;690    */
;;;691    void EDIT_SetTextColor(EDIT_Handle hObj, unsigned int Index, GUI_COLOR color) {
0007dc  e92d41f0          PUSH     {r4-r8,lr}
0007e0  4606              MOV      r6,r0
0007e2  460d              MOV      r5,r1
0007e4  4617              MOV      r7,r2
;;;692      EDIT_Obj* pObj;
;;;693      if (hObj == 0)
0007e6  b90e              CBNZ     r6,|L1.2028|
                  |L1.2024|
;;;694        return;
;;;695      WM_LOCK();
;;;696      pObj = EDIT_H2P(hObj);
;;;697      if (pObj) {
;;;698        if (Index < GUI_COUNTOF(pObj->Props.aTextColor)) {
;;;699          pObj->Props.aTextColor[Index] = color;
;;;700          EDIT_Invalidate(hObj);
;;;701        }
;;;702      }
;;;703      WM_UNLOCK();
;;;704    }
0007e8  e8bd81f0          POP      {r4-r8,pc}
                  |L1.2028|
0007ec  4630              MOV      r0,r6                 ;696
0007ee  f7fffffe          BL       GUI_ALLOC_h2p
0007f2  4604              MOV      r4,r0                 ;696
0007f4  b144              CBZ      r4,|L1.2056|
0007f6  2d02              CMP      r5,#2                 ;698
0007f8  d206              BCS      |L1.2056|
0007fa  f1040060          ADD      r0,r4,#0x60           ;699
0007fe  f8407025          STR      r7,[r0,r5,LSL #2]     ;699
000802  4630              MOV      r0,r6                 ;700
000804  f7fffffe          BL       WM_InvalidateWindow
                  |L1.2056|
000808  bf00              NOP      
00080a  e7ed              B        |L1.2024|
;;;705    
                          ENDP

                  EDIT_SetText PROC
;;;709    */
;;;710    void EDIT_SetText(EDIT_Handle hObj, const char* s) {
00080c  e92d47f0          PUSH     {r4-r10,lr}
000810  4680              MOV      r8,r0
000812  460e              MOV      r6,r1
;;;711      if (hObj) {
000814  f1b80f00          CMP      r8,#0
000818  d04d              BEQ      |L1.2230|
;;;712        EDIT_Obj* pObj;
;;;713        WM_LOCK();
;;;714        pObj = EDIT_H2P(hObj);
00081a  4640              MOV      r0,r8
00081c  f7fffffe          BL       GUI_ALLOC_h2p
000820  4604              MOV      r4,r0
;;;715        if (s) {
000822  2e00              CMP      r6,#0
000824  d03c              BEQ      |L1.2208|
;;;716          int NumBytesNew, NumBytesOld = 0;
000826  f04f0900          MOV      r9,#0
;;;717          int NumCharsNew;
;;;718          if (pObj->hpText) {
00082a  8d20              LDRH     r0,[r4,#0x28]
00082c  b150              CBZ      r0,|L1.2116|
;;;719            char* pText;
;;;720            pText       = (char*) GUI_ALLOC_h2p(pObj->hpText);
00082e  f9b40028          LDRSH    r0,[r4,#0x28]
000832  f7fffffe          BL       GUI_ALLOC_h2p
000836  4682              MOV      r10,r0
;;;721            NumBytesOld = strlen(pText) + 1;
000838  4650              MOV      r0,r10
00083a  f7fffffe          BL       strlen
00083e  f1000901          ADD      r9,r0,#1
;;;722          }
000842  bf00              NOP      
                  |L1.2116|
;;;723          NumCharsNew = GUI__GetNumChars(s);
000844  4630              MOV      r0,r6
000846  f7fffffe          BL       GUI__GetNumChars
00084a  4605              MOV      r5,r0
;;;724          if (NumCharsNew > pObj->MaxLen) {
00084c  f9b4102a          LDRSH    r1,[r4,#0x2a]
000850  42a9              CMP      r1,r5
000852  da01              BGE      |L1.2136|
;;;725            NumCharsNew = pObj->MaxLen;
000854  f9b4502a          LDRSH    r5,[r4,#0x2a]
                  |L1.2136|
;;;726          }
;;;727          NumBytesNew = GUI_UC__NumChars2NumBytes(s, NumCharsNew) + 1;
000858  4629              MOV      r1,r5
00085a  4630              MOV      r0,r6
00085c  f7fffffe          BL       GUI_UC__NumChars2NumBytes
000860  1c47              ADDS     r7,r0,#1
;;;728          if (_IsSpaceInBuffer(pObj, NumBytesNew - NumBytesOld)) {
000862  eba70109          SUB      r1,r7,r9
000866  4620              MOV      r0,r4
000868  f7fffffe          BL       _IsSpaceInBuffer
00086c  b1b8              CBZ      r0,|L1.2206|
;;;729            char* pText;
;;;730            pText = (char*) GUI_ALLOC_h2p(pObj->hpText);
00086e  f9b40028          LDRSH    r0,[r4,#0x28]
000872  f7fffffe          BL       GUI_ALLOC_h2p
000876  4682              MOV      r10,r0
;;;731            memcpy(pText, s, NumBytesNew);
000878  463a              MOV      r2,r7
00087a  4631              MOV      r1,r6
00087c  4650              MOV      r0,r10
00087e  f7fffffe          BL       __aeabi_memcpy
;;;732            pObj->CursorPos = NumCharsNew;
000882  6425              STR      r5,[r4,#0x40]
;;;733            if (pObj->CursorPos == pObj->MaxLen) {
000884  f9b4102a          LDRSH    r1,[r4,#0x2a]
000888  6c20              LDR      r0,[r4,#0x40]
00088a  4288              CMP      r0,r1
00088c  d106              BNE      |L1.2204|
;;;734              if (pObj->EditMode == GUI_EDIT_MODE_OVERWRITE) {
00088e  f8940048          LDRB     r0,[r4,#0x48]
000892  2801              CMP      r0,#1
000894  d102              BNE      |L1.2204|
;;;735                pObj->CursorPos--;
000896  6c20              LDR      r0,[r4,#0x40]
000898  1e40              SUBS     r0,r0,#1
00089a  6420              STR      r0,[r4,#0x40]
                  |L1.2204|
;;;736              }
;;;737            }
;;;738          }
00089c  bf00              NOP      
                  |L1.2206|
;;;739        } else {
00089e  e006              B        |L1.2222|
                  |L1.2208|
;;;740          GUI_ALLOC_FreePtr(&pObj->hpText);
0008a0  f1040028          ADD      r0,r4,#0x28
0008a4  f7fffffe          BL       GUI_ALLOC_FreePtr
;;;741          pObj->BufferSize = 0;
0008a8  2000              MOVS     r0,#0
0008aa  85a0              STRH     r0,[r4,#0x2c]
;;;742          pObj->CursorPos  = 0;
0008ac  6420              STR      r0,[r4,#0x40]
                  |L1.2222|
;;;743        }
;;;744        EDIT_Invalidate(hObj);
0008ae  4640              MOV      r0,r8
0008b0  f7fffffe          BL       WM_InvalidateWindow
;;;745        WM_UNLOCK();
;;;746      }
0008b4  bf00              NOP      
                  |L1.2230|
;;;747    }
0008b6  e8bd87f0          POP      {r4-r10,pc}
;;;748    
                          ENDP

                  EDIT_GetText PROC
;;;752    */
;;;753    void EDIT_GetText(EDIT_Handle hObj, char* sDest, int MaxLen) {
0008ba  e92d47f0          PUSH     {r4-r10,lr}
0008be  4607              MOV      r7,r0
0008c0  460c              MOV      r4,r1
0008c2  4615              MOV      r5,r2
;;;754      if (sDest) {
0008c4  b31c              CBZ      r4,|L1.2318|
;;;755        *sDest = 0;
0008c6  2000              MOVS     r0,#0
0008c8  7020              STRB     r0,[r4,#0]
;;;756        if (hObj) {
0008ca  b307              CBZ      r7,|L1.2318|
;;;757          EDIT_Obj* pObj;
;;;758          WM_LOCK();
;;;759          pObj = EDIT_H2P(hObj);
0008cc  4638              MOV      r0,r7
0008ce  f7fffffe          BL       GUI_ALLOC_h2p
0008d2  4680              MOV      r8,r0
;;;760          if (pObj->hpText) {
0008d4  f8b80028          LDRH     r0,[r8,#0x28]
0008d8  b1c0              CBZ      r0,|L1.2316|
;;;761            char* pText;
;;;762            int NumChars, NumBytes;
;;;763            pText = (char*) GUI_ALLOC_h2p(pObj->hpText);
0008da  f9b80028          LDRSH    r0,[r8,#0x28]
0008de  f7fffffe          BL       GUI_ALLOC_h2p
0008e2  4682              MOV      r10,r0
;;;764            NumChars = GUI__GetNumChars(pText);
0008e4  4650              MOV      r0,r10
0008e6  f7fffffe          BL       GUI__GetNumChars
0008ea  4681              MOV      r9,r0
;;;765            if (NumChars > MaxLen) {
0008ec  45a9              CMP      r9,r5
0008ee  dd00              BLE      |L1.2290|
;;;766              NumChars = MaxLen;
0008f0  46a9              MOV      r9,r5
                  |L1.2290|
;;;767            }
;;;768            NumBytes = GUI_UC__NumChars2NumBytes(pText, NumChars);
0008f2  4649              MOV      r1,r9
0008f4  4650              MOV      r0,r10
0008f6  f7fffffe          BL       GUI_UC__NumChars2NumBytes
0008fa  4606              MOV      r6,r0
;;;769            memcpy(sDest, pText, NumBytes);
0008fc  4632              MOV      r2,r6
0008fe  4651              MOV      r1,r10
000900  4620              MOV      r0,r4
000902  f7fffffe          BL       __aeabi_memcpy
;;;770            *(sDest + NumBytes) = 0;
000906  2000              MOVS     r0,#0
000908  55a0              STRB     r0,[r4,r6]
;;;771          }
00090a  bf00              NOP      
                  |L1.2316|
;;;772          WM_UNLOCK();
;;;773        }
00090c  bf00              NOP      
                  |L1.2318|
;;;774      }
;;;775    }
00090e  e8bd87f0          POP      {r4-r10,pc}
;;;776    
                          ENDP

                  EDIT_GetValue PROC
;;;780    */
;;;781    I32  EDIT_GetValue(EDIT_Handle hObj) {
000912  b570              PUSH     {r4-r6,lr}
000914  4605              MOV      r5,r0
;;;782      EDIT_Obj* pObj;
;;;783      I32 r = 0;
000916  2600              MOVS     r6,#0
;;;784      if (hObj) {
000918  b125              CBZ      r5,|L1.2340|
;;;785        WM_LOCK();
;;;786        pObj = EDIT_H2P(hObj);
00091a  4628              MOV      r0,r5
00091c  f7fffffe          BL       GUI_ALLOC_h2p
000920  4604              MOV      r4,r0
;;;787        r = pObj->CurrentValue;
000922  6be6              LDR      r6,[r4,#0x3c]
                  |L1.2340|
;;;788        WM_UNLOCK();
;;;789      }
;;;790      return r;
000924  4630              MOV      r0,r6
;;;791    }
000926  bd70              POP      {r4-r6,pc}
;;;792    
                          ENDP

                  EDIT_SetValue PROC
;;;796    */
;;;797    void EDIT_SetValue(EDIT_Handle hObj, I32 Value) {
000928  b570              PUSH     {r4-r6,lr}
00092a  4604              MOV      r4,r0
00092c  460d              MOV      r5,r1
;;;798      _SetValue(hObj, Value, 0);
00092e  2200              MOVS     r2,#0
000930  4629              MOV      r1,r5
000932  4620              MOV      r0,r4
000934  f7fffffe          BL       _SetValue
;;;799    }
000938  bd70              POP      {r4-r6,pc}
;;;800    
                          ENDP

                  EDIT_SetMaxLen PROC
;;;804    */
;;;805    void EDIT_SetMaxLen(EDIT_Handle  hObj, int MaxLen) {
00093a  e92d47f0          PUSH     {r4-r10,lr}
00093e  4606              MOV      r6,r0
000940  460d              MOV      r5,r1
;;;806      if (hObj) {
000942  b376              CBZ      r6,|L1.2466|
;;;807        EDIT_Obj* pObj;
;;;808        WM_LOCK();
;;;809        pObj = EDIT_H2P(hObj);
000944  4630              MOV      r0,r6
000946  f7fffffe          BL       GUI_ALLOC_h2p
00094a  4604              MOV      r4,r0
;;;810        if (MaxLen != pObj->MaxLen) {
00094c  f9b4002a          LDRSH    r0,[r4,#0x2a]
000950  42a8              CMP      r0,r5
000952  d025              BEQ      |L1.2464|
;;;811          if (MaxLen < pObj->MaxLen) {
000954  f9b4002a          LDRSH    r0,[r4,#0x2a]
000958  42a8              CMP      r0,r5
00095a  dd16              BLE      |L1.2442|
;;;812            if (pObj->hpText) {
00095c  8d20              LDRH     r0,[r4,#0x28]
00095e  b1a0              CBZ      r0,|L1.2442|
;;;813              char* pText;
;;;814              int   NumChars;
;;;815              pText    = (char*) GUI_ALLOC_h2p(pObj->hpText);
000960  f9b40028          LDRSH    r0,[r4,#0x28]
000964  f7fffffe          BL       GUI_ALLOC_h2p
000968  4607              MOV      r7,r0
;;;816              NumChars = GUI__GetNumChars(pText);
00096a  4638              MOV      r0,r7
00096c  f7fffffe          BL       GUI__GetNumChars
000970  4680              MOV      r8,r0
;;;817              if (NumChars > MaxLen) {
000972  45a8              CMP      r8,r5
000974  dd08              BLE      |L1.2440|
;;;818                int NumBytes;
;;;819                NumBytes = GUI_UC__NumChars2NumBytes(pText, MaxLen);
000976  4629              MOV      r1,r5
000978  4638              MOV      r0,r7
00097a  f7fffffe          BL       GUI_UC__NumChars2NumBytes
00097e  4681              MOV      r9,r0
;;;820                *(pText + NumBytes) = 0;
000980  2000              MOVS     r0,#0
000982  f8070009          STRB     r0,[r7,r9]
;;;821              }
000986  bf00              NOP      
                  |L1.2440|
;;;822            }
000988  bf00              NOP      
                  |L1.2442|
;;;823          }
;;;824          _IncrementBuffer(pObj, MaxLen - pObj->BufferSize + 1);
00098a  8da0              LDRH     r0,[r4,#0x2c]
00098c  1a28              SUBS     r0,r5,r0
00098e  1c41              ADDS     r1,r0,#1
000990  4620              MOV      r0,r4
000992  f7fffffe          BL       _IncrementBuffer
;;;825          pObj->MaxLen = MaxLen;
000996  b228              SXTH     r0,r5
000998  8560              STRH     r0,[r4,#0x2a]
;;;826          EDIT_Invalidate(hObj);
00099a  4630              MOV      r0,r6
00099c  f7fffffe          BL       WM_InvalidateWindow
                  |L1.2464|
;;;827        }
;;;828        WM_UNLOCK();
;;;829      }
0009a0  bf00              NOP      
                  |L1.2466|
;;;830    }
0009a2  e8bd87f0          POP      {r4-r10,pc}
;;;831    
                          ENDP

                  EDIT_SetTextAlign PROC
;;;835    */
;;;836    void EDIT_SetTextAlign(EDIT_Handle hObj, int Align) {
0009a6  b570              PUSH     {r4-r6,lr}
0009a8  4605              MOV      r5,r0
0009aa  460e              MOV      r6,r1
;;;837      EDIT_Obj* pObj;
;;;838      if (hObj == 0)
0009ac  b905              CBNZ     r5,|L1.2480|
                  |L1.2478|
;;;839        return;
;;;840      WM_LOCK();
;;;841      pObj = EDIT_H2P(hObj);
;;;842      if (pObj) {
;;;843        pObj->Props.Align = Align;
;;;844        EDIT_Invalidate(hObj);
;;;845      }
;;;846      WM_UNLOCK();
;;;847    }
0009ae  bd70              POP      {r4-r6,pc}
                  |L1.2480|
0009b0  4628              MOV      r0,r5                 ;841
0009b2  f7fffffe          BL       GUI_ALLOC_h2p
0009b6  4604              MOV      r4,r0                 ;841
0009b8  b11c              CBZ      r4,|L1.2498|
0009ba  6566              STR      r6,[r4,#0x54]         ;843
0009bc  4628              MOV      r0,r5                 ;844
0009be  f7fffffe          BL       WM_InvalidateWindow
                  |L1.2498|
0009c2  bf00              NOP      
0009c4  e7f3              B        |L1.2478|
;;;848    
                          ENDP

0009c6  0000              DCW      0x0000
                  |L1.2504|
                          DCD      EDIT__DefaultProps

                          AREA ||.data||, DATA, ALIGN=2

                  EDIT__DefaultProps
                          DCD      0x0000000c
                          DCD      0x00000001
                          DCD      GUI_Font13_1
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00c0c0c0
                          DCD      0x00ffffff

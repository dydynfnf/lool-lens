; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\listbox.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\listbox.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -IC:\Users\Administrator\Desktop\gui\STM32·Ü¶·°å-3.98\RTE -Id:\Keil_v5\ARM\PACK\ARM\CMSIS\4.3.0\CMSIS\Include -Id:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.1.0\Device\Include -D__UVISION_VERSION=515 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\listbox.crf GUI\Widget\LISTBOX.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  LISTBOX__GetpString PROC
;;;811    */
;;;812    const char* LISTBOX__GetpString(const LISTBOX_Obj* pObj, int Index) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4604              MOV      r4,r0
000006  460e              MOV      r6,r1
;;;813      const char* s = NULL;
000008  2700              MOVS     r7,#0
;;;814      LISTBOX_ITEM* pItem = (LISTBOX_ITEM*)GUI_ARRAY_GetpItem(&pObj->ItemArray, Index);
00000a  4631              MOV      r1,r6
00000c  f1040028          ADD      r0,r4,#0x28
000010  f7fffffe          BL       GUI_ARRAY_GetpItem
000014  4605              MOV      r5,r0
;;;815      if (pItem) {
000016  b105              CBZ      r5,|L1.26|
;;;816        s = pItem->acText;
000018  1d6f              ADDS     r7,r5,#5
                  |L1.26|
;;;817      }
;;;818      return s;
00001a  4638              MOV      r0,r7
;;;819    }
00001c  e8bd81f0          POP      {r4-r8,pc}
;;;820    
                          ENDP

                  LISTBOX_OwnerDraw PROC
;;;320    */
;;;321    int LISTBOX_OwnerDraw(const WIDGET_ITEM_DRAW_INFO* pDrawItemInfo) {
000020  e92d4ff0          PUSH     {r4-r11,lr}
000024  b089              SUB      sp,sp,#0x24
000026  4604              MOV      r4,r0
;;;322      switch (pDrawItemInfo->Cmd) {
000028  6860              LDR      r0,[r4,#4]
00002a  b348              CBZ      r0,|L1.128|
00002c  2801              CMP      r0,#1
00002e  d002              BEQ      |L1.54|
000030  2802              CMP      r0,#2
000032  d17d              BNE      |L1.304|
000034  e018              B        |L1.104|
                  |L1.54|
;;;323        case WIDGET_ITEM_GET_XSIZE: {
;;;324          LISTBOX_Obj* pObj;
;;;325          const GUI_FONT GUI_UNI_PTR* pOldFont;
;;;326          const char* s;
;;;327          int DistX;
;;;328          pObj = LISTBOX_H2P(pDrawItemInfo->hWin);
000036  f9b40000          LDRSH    r0,[r4,#0]
00003a  f7fffffe          BL       GUI_ALLOC_h2p
00003e  4605              MOV      r5,r0
;;;329          pOldFont = GUI_SetFont(pObj->Props.pFont);
000040  6ca8              LDR      r0,[r5,#0x48]
000042  f7fffffe          BL       GUI_SetFont
000046  4607              MOV      r7,r0
;;;330          s = LISTBOX__GetpString(pObj, pDrawItemInfo->ItemIndex);
000048  4628              MOV      r0,r5
00004a  68a1              LDR      r1,[r4,#8]
00004c  f7fffffe          BL       LISTBOX__GetpString
000050  4680              MOV      r8,r0
;;;331          DistX = GUI_GetStringDistX(s);
000052  4640              MOV      r0,r8
000054  f7fffffe          BL       GUI_GetStringDistX
000058  4606              MOV      r6,r0
;;;332          GUI_SetFont(pOldFont);
00005a  4638              MOV      r0,r7
00005c  f7fffffe          BL       GUI_SetFont
;;;333          return DistX;
000060  4630              MOV      r0,r6
                  |L1.98|
;;;334        }
;;;335        case WIDGET_ITEM_GET_YSIZE: {
;;;336          LISTBOX_Obj* pObj;
;;;337          pObj = LISTBOX_H2P(pDrawItemInfo->hWin);
;;;338          return GUI_GetYDistOfFont(pObj->Props.pFont) + pObj->ItemSpacing;
;;;339        }
;;;340        case WIDGET_ITEM_DRAW: {
;;;341          LISTBOX_Obj* pObj;
;;;342          LISTBOX_ITEM* pItem;
;;;343          WM_HMEM hItem;
;;;344          GUI_RECT r, rText;
;;;345          int FontDistY;
;;;346          int ItemIndex = pDrawItemInfo->ItemIndex;
;;;347          const char* s;
;;;348          int ColorIndex;
;;;349          char IsDisabled;
;;;350          char IsSelected;
;;;351          pObj = LISTBOX_H2P(pDrawItemInfo->hWin);
;;;352          hItem = GUI_ARRAY_GethItem(&pObj->ItemArray, ItemIndex);
;;;353          pItem = (LISTBOX_ITEM *)GUI_ALLOC_h2p(hItem);
;;;354          WM_GetInsideRect(&r);
;;;355          FontDistY = GUI_GetFontDistY();
;;;356          /* Calculate color index */
;;;357          IsDisabled = (pItem->Status & LISTBOX_ITEM_DISABLED) ? 1 : 0;
;;;358          IsSelected = (pItem->Status & LISTBOX_ITEM_SELECTED) ? 1 : 0;
;;;359          if (pObj->Flags & LISTBOX_SF_MULTISEL) {
;;;360            if (IsDisabled) {
;;;361              ColorIndex = LISTBOX_CI_DISABLED;
;;;362            } else {
;;;363              ColorIndex = (IsSelected) ? LISTBOX_CI_SELFOCUS : LISTBOX_CI_UNSEL;
;;;364            }
;;;365          } else {
;;;366            if (IsDisabled) {
;;;367              ColorIndex = LISTBOX_CI_DISABLED;
;;;368            } else {
;;;369              if (ItemIndex == pObj->Sel) {
;;;370                ColorIndex = (pObj->Widget.State & WIDGET_STATE_FOCUS) ? LISTBOX_CI_SELFOCUS : LISTBOX_CI_SEL;
;;;371              } else {
;;;372                ColorIndex = LISTBOX_CI_UNSEL;
;;;373              }
;;;374            }
;;;375          }
;;;376          /* Display item */
;;;377          LCD_SetBkColor(pObj->Props.aBackColor[ColorIndex]);
;;;378          LCD_SetColor  (pObj->Props.aTextColor[ColorIndex]);
;;;379          s = LISTBOX__GetpString(pObj, ItemIndex);
;;;380          GUI_SetTextMode(GUI_TM_TRANS);
;;;381          GUI_Clear();
;;;382          rText.y0 = pDrawItemInfo->y0;
;;;383          rText.x0 = pDrawItemInfo->x0 + 1;
;;;384          rText.y1 = rText.y0 + pItem->ySize - 1;
;;;385          if (pObj->Props.Align & (GUI_TA_RIGHT | GUI_TA_CENTER)) {
;;;386            GUI_RECT Rect;
;;;387            WM_GetInsideRectExScrollbar(pDrawItemInfo->hWin, &Rect);
;;;388            rText.x1 = rText.x0 + Rect.x1 - Rect.x0 - pObj->Widget.pEffect->EffectSize;
;;;389          } else {
;;;390            rText.x1 = rText.x0 + pItem->xSize - 1;
;;;391          }
;;;392          GUI_DispStringInRect(s, &rText, pObj->Props.Align);
;;;393          /* Display focus rectangle */
;;;394          if ((pObj->Flags & LISTBOX_SF_MULTISEL) && (ItemIndex == pObj->Sel)) {
;;;395            GUI_RECT rFocus;
;;;396            rFocus.x0 = pDrawItemInfo->x0;
;;;397            rFocus.x1 = r.x1;
;;;398            switch (pObj->Props.Align & GUI_TA_VERTICAL) {
;;;399            case GUI_TA_TOP:
;;;400              rFocus.y0 = pDrawItemInfo->y0;
;;;401              rFocus.y1 = pDrawItemInfo->y0 + FontDistY - 1;
;;;402              break;
;;;403            case GUI_TA_VCENTER:
;;;404              rFocus.y0 = pDrawItemInfo->y0 + (GUI_Context.WM__pUserClipRect->y1 - GUI_Context.WM__pUserClipRect->y0 - FontDistY) / 2;
;;;405              rFocus.y1 = rFocus.y0 + FontDistY - 1;
;;;406              break;
;;;407            case GUI_TA_BOTTOM:
;;;408              rFocus.y1 = pDrawItemInfo->y0 + (GUI_Context.WM__pUserClipRect->y1 - GUI_Context.WM__pUserClipRect->y0);
;;;409              rFocus.y0 = rFocus.y1 - FontDistY + 1;
;;;410              break;
;;;411            }
;;;412            LCD_SetColor(GUI_WHITE - pObj->Props.aBackColor[ColorIndex]);
;;;413            GUI_DrawFocusRect(&rFocus, 0);
;;;414          }
;;;415          return 0;
;;;416        }
;;;417      }
;;;418      return 0;
;;;419    }
000062  b009              ADD      sp,sp,#0x24
000064  e8bd8ff0          POP      {r4-r11,pc}
                  |L1.104|
000068  f9b40000          LDRSH    r0,[r4,#0]            ;337
00006c  f7fffffe          BL       GUI_ALLOC_h2p
000070  4605              MOV      r5,r0                 ;337
000072  6ca8              LDR      r0,[r5,#0x48]         ;338
000074  f7fffffe          BL       GUI_GetYDistOfFont
000078  f8b51086          LDRH     r1,[r5,#0x86]         ;338
00007c  4408              ADD      r0,r0,r1              ;338
00007e  e7f0              B        |L1.98|
                  |L1.128|
000080  f8d49008          LDR      r9,[r4,#8]            ;346
000084  f9b40000          LDRSH    r0,[r4,#0]            ;351
000088  f7fffffe          BL       GUI_ALLOC_h2p
00008c  4605              MOV      r5,r0                 ;351
00008e  4649              MOV      r1,r9                 ;352
000090  f1050028          ADD      r0,r5,#0x28           ;352
000094  f7fffffe          BL       GUI_ARRAY_GethItem
000098  9008              STR      r0,[sp,#0x20]         ;352
00009a  9808              LDR      r0,[sp,#0x20]         ;353
00009c  f7fffffe          BL       GUI_ALLOC_h2p
0000a0  4607              MOV      r7,r0                 ;353
0000a2  a806              ADD      r0,sp,#0x18           ;354
0000a4  f7fffffe          BL       WM_GetInsideRect
0000a8  f7fffffe          BL       GUI_GetFontDistY
0000ac  4680              MOV      r8,r0                 ;355
0000ae  7938              LDRB     r0,[r7,#4]            ;357
0000b0  f3c00a40          UBFX     r10,r0,#1,#1          ;357
0000b4  7938              LDRB     r0,[r7,#4]            ;358
0000b6  f0000b01          AND      r11,r0,#1             ;358
0000ba  f8950084          LDRB     r0,[r5,#0x84]         ;359
0000be  f0000004          AND      r0,r0,#4              ;359
0000c2  b160              CBZ      r0,|L1.222|
0000c4  f1ba0f00          CMP      r10,#0                ;360
0000c8  d001              BEQ      |L1.206|
0000ca  2603              MOVS     r6,#3                 ;361
0000cc  e01b              B        |L1.262|
                  |L1.206|
0000ce  f1bb0f00          CMP      r11,#0                ;363
0000d2  d001              BEQ      |L1.216|
0000d4  2002              MOVS     r0,#2                 ;363
0000d6  e000              B        |L1.218|
                  |L1.216|
0000d8  2000              MOVS     r0,#0                 ;363
                  |L1.218|
0000da  4606              MOV      r6,r0                 ;363
0000dc  e013              B        |L1.262|
                  |L1.222|
0000de  f1ba0f00          CMP      r10,#0                ;366
0000e2  d001              BEQ      |L1.232|
0000e4  2603              MOVS     r6,#3                 ;367
0000e6  e00e              B        |L1.262|
                  |L1.232|
0000e8  f9b50082          LDRSH    r0,[r5,#0x82]         ;369
0000ec  4548              CMP      r0,r9                 ;369
0000ee  d109              BNE      |L1.260|
0000f0  f8950026          LDRB     r0,[r5,#0x26]         ;370
0000f4  f0000001          AND      r0,r0,#1              ;370
0000f8  b108              CBZ      r0,|L1.254|
0000fa  2002              MOVS     r0,#2                 ;370
0000fc  e000              B        |L1.256|
                  |L1.254|
0000fe  2001              MOVS     r0,#1                 ;370
                  |L1.256|
000100  4606              MOV      r6,r0                 ;370
000102  e000              B        |L1.262|
                  |L1.260|
000104  2600              MOVS     r6,#0                 ;372
                  |L1.262|
000106  f1050150          ADD      r1,r5,#0x50           ;377
00010a  f8510026          LDR      r0,[r1,r6,LSL #2]     ;377
00010e  f7fffffe          BL       LCD_SetBkColor
000112  f1050160          ADD      r1,r5,#0x60           ;378
000116  f8510026          LDR      r0,[r1,r6,LSL #2]     ;378
00011a  f7fffffe          BL       LCD_SetColor
00011e  4649              MOV      r1,r9                 ;379
000120  4628              MOV      r0,r5                 ;379
000122  f7fffffe          BL       LISTBOX__GetpString
000126  9003              STR      r0,[sp,#0xc]          ;379
000128  2002              MOVS     r0,#2                 ;380
00012a  f7fffffe          BL       GUI_SetTextMode
00012e  e000              B        |L1.306|
                  |L1.304|
000130  e0a1              B        |L1.630|
                  |L1.306|
000132  f7fffffe          BL       GUI_Clear
000136  8a20              LDRH     r0,[r4,#0x10]         ;382
000138  b200              SXTH     r0,r0                 ;382
00013a  f8ad0012          STRH     r0,[sp,#0x12]         ;382
00013e  89a0              LDRH     r0,[r4,#0xc]          ;383
000140  1c40              ADDS     r0,r0,#1              ;383
000142  b200              SXTH     r0,r0                 ;383
000144  f8ad0010          STRH     r0,[sp,#0x10]         ;383
000148  f8bd0012          LDRH     r0,[sp,#0x12]         ;384
00014c  8879              LDRH     r1,[r7,#2]            ;384
00014e  4408              ADD      r0,r0,r1              ;384
000150  1e40              SUBS     r0,r0,#1              ;384
000152  b200              SXTH     r0,r0                 ;384
000154  f8ad0016          STRH     r0,[sp,#0x16]         ;384
000158  f895007c          LDRB     r0,[r5,#0x7c]         ;385
00015c  f0000003          AND      r0,r0,#3              ;385
000160  b198              CBZ      r0,|L1.394|
000162  f9b40000          LDRSH    r0,[r4,#0]            ;387
000166  a901              ADD      r1,sp,#4              ;387
000168  f7fffffe          BL       WM_GetInsideRectExScrollbar
00016c  f8bd0010          LDRH     r0,[sp,#0x10]         ;388
000170  f8bd1008          LDRH     r1,[sp,#8]            ;388
000174  4408              ADD      r0,r0,r1              ;388
000176  f8bd1004          LDRH     r1,[sp,#4]            ;388
00017a  1a40              SUBS     r0,r0,r1              ;388
00017c  6a29              LDR      r1,[r5,#0x20]         ;388
00017e  8a89              LDRH     r1,[r1,#0x14]         ;388
000180  1a40              SUBS     r0,r0,r1              ;388
000182  b200              SXTH     r0,r0                 ;388
000184  f8ad0014          STRH     r0,[sp,#0x14]         ;388
000188  e007              B        |L1.410|
                  |L1.394|
00018a  f8bd0010          LDRH     r0,[sp,#0x10]         ;390
00018e  8839              LDRH     r1,[r7,#0]            ;390
000190  4408              ADD      r0,r0,r1              ;390
000192  1e40              SUBS     r0,r0,#1              ;390
000194  b200              SXTH     r0,r0                 ;390
000196  f8ad0014          STRH     r0,[sp,#0x14]         ;390
                  |L1.410|
00019a  f9b5207c          LDRSH    r2,[r5,#0x7c]         ;392
00019e  a904              ADD      r1,sp,#0x10           ;392
0001a0  9803              LDR      r0,[sp,#0xc]          ;392
0001a2  f7fffffe          BL       GUI_DispStringInRect
0001a6  f8950084          LDRB     r0,[r5,#0x84]         ;394
0001aa  f0000004          AND      r0,r0,#4              ;394
0001ae  2800              CMP      r0,#0                 ;394
0001b0  d05f              BEQ      |L1.626|
0001b2  f9b50082          LDRSH    r0,[r5,#0x82]         ;394
0001b6  4548              CMP      r0,r9                 ;394
0001b8  d15b              BNE      |L1.626|
0001ba  89a0              LDRH     r0,[r4,#0xc]          ;396
0001bc  b200              SXTH     r0,r0                 ;396
0001be  f8ad0004          STRH     r0,[sp,#4]            ;396
0001c2  f8bd001c          LDRH     r0,[sp,#0x1c]         ;397
0001c6  f8ad0008          STRH     r0,[sp,#8]            ;397
0001ca  f895007c          LDRB     r0,[r5,#0x7c]         ;398
0001ce  f000000c          AND      r0,r0,#0xc            ;398
0001d2  b120              CBZ      r0,|L1.478|
0001d4  2804              CMP      r0,#4                 ;398
0001d6  d028              BEQ      |L1.554|
0001d8  280c              CMP      r0,#0xc               ;398
0001da  d13b              BNE      |L1.596|
0001dc  e00a              B        |L1.500|
                  |L1.478|
0001de  8a20              LDRH     r0,[r4,#0x10]         ;400
0001e0  b200              SXTH     r0,r0                 ;400
0001e2  f8ad0006          STRH     r0,[sp,#6]            ;400
0001e6  8a20              LDRH     r0,[r4,#0x10]         ;401
0001e8  4440              ADD      r0,r0,r8              ;401
0001ea  1e40              SUBS     r0,r0,#1              ;401
0001ec  b200              SXTH     r0,r0                 ;401
0001ee  f8ad000a          STRH     r0,[sp,#0xa]          ;401
0001f2  e02f              B        |L1.596|
                  |L1.500|
0001f4  49fe              LDR      r1,|L1.1520|
0001f6  6b89              LDR      r1,[r1,#0x38]         ;404  ; GUI_Context
0001f8  f9b11006          LDRSH    r1,[r1,#6]            ;404
0001fc  4afc              LDR      r2,|L1.1520|
0001fe  6b92              LDR      r2,[r2,#0x38]         ;404  ; GUI_Context
000200  f9b22002          LDRSH    r2,[r2,#2]            ;404
000204  1a89              SUBS     r1,r1,r2              ;404
000206  eba10008          SUB      r0,r1,r8              ;404
00020a  eb0071d0          ADD      r1,r0,r0,LSR #31      ;404
00020e  8a22              LDRH     r2,[r4,#0x10]         ;404
000210  eb020161          ADD      r1,r2,r1,ASR #1       ;404
000214  b209              SXTH     r1,r1                 ;404
000216  f8ad1006          STRH     r1,[sp,#6]            ;404
00021a  f8bd0006          LDRH     r0,[sp,#6]            ;405
00021e  4440              ADD      r0,r0,r8              ;405
000220  1e40              SUBS     r0,r0,#1              ;405
000222  b200              SXTH     r0,r0                 ;405
000224  f8ad000a          STRH     r0,[sp,#0xa]          ;405
000228  e014              B        |L1.596|
                  |L1.554|
00022a  48f1              LDR      r0,|L1.1520|
00022c  6b80              LDR      r0,[r0,#0x38]         ;408  ; GUI_Context
00022e  88c0              LDRH     r0,[r0,#6]            ;408
000230  49ef              LDR      r1,|L1.1520|
000232  6b89              LDR      r1,[r1,#0x38]         ;408  ; GUI_Context
000234  8849              LDRH     r1,[r1,#2]            ;408
000236  1a40              SUBS     r0,r0,r1              ;408
000238  8a21              LDRH     r1,[r4,#0x10]         ;408
00023a  4408              ADD      r0,r0,r1              ;408
00023c  b200              SXTH     r0,r0                 ;408
00023e  f8ad000a          STRH     r0,[sp,#0xa]          ;408
000242  f8bd000a          LDRH     r0,[sp,#0xa]          ;409
000246  eba00008          SUB      r0,r0,r8              ;409
00024a  1c40              ADDS     r0,r0,#1              ;409
00024c  b200              SXTH     r0,r0                 ;409
00024e  f8ad0006          STRH     r0,[sp,#6]            ;409
000252  bf00              NOP                            ;410
                  |L1.596|
000254  bf00              NOP                            ;402
000256  f1050150          ADD      r1,r5,#0x50           ;412
00025a  f8511026          LDR      r1,[r1,r6,LSL #2]     ;412
00025e  f06f427f          MVN      r2,#0xff000000        ;412
000262  1a50              SUBS     r0,r2,r1              ;412
000264  f7fffffe          BL       LCD_SetColor
000268  2100              MOVS     r1,#0                 ;413
00026a  a801              ADD      r0,sp,#4              ;413
00026c  f7fffffe          BL       GUI_DrawFocusRect
000270  bf00              NOP                            ;414
                  |L1.626|
000272  2000              MOVS     r0,#0                 ;415
000274  e6f5              B        |L1.98|
                  |L1.630|
000276  2000              MOVS     r0,#0                 ;418
000278  e6f3              B        |L1.98|
;;;420    
                          ENDP

                  _CallOwnerDraw PROC
;;;127    */
;;;128    static int _CallOwnerDraw(LISTBOX_Handle hObj, const LISTBOX_Obj* pObj, int Cmd, int ItemIndex) {
00027a  e92d41f0          PUSH     {r4-r8,lr}
00027e  b086              SUB      sp,sp,#0x18
000280  4606              MOV      r6,r0
000282  460c              MOV      r4,r1
000284  4617              MOV      r7,r2
000286  4698              MOV      r8,r3
;;;129      WIDGET_ITEM_DRAW_INFO ItemInfo;
;;;130      int r;
;;;131      ItemInfo.Cmd       = Cmd;
000288  9702              STR      r7,[sp,#8]
;;;132      ItemInfo.hWin      = hObj;
00028a  f8ad6004          STRH     r6,[sp,#4]
;;;133      ItemInfo.ItemIndex = ItemIndex;
00028e  f8cd800c          STR      r8,[sp,#0xc]
;;;134      if (pObj->pfDrawItem) {
000292  6ae0              LDR      r0,[r4,#0x2c]
000294  b120              CBZ      r0,|L1.672|
;;;135        r = pObj->pfDrawItem(&ItemInfo);
000296  a801              ADD      r0,sp,#4
000298  6ae1              LDR      r1,[r4,#0x2c]
00029a  4788              BLX      r1
00029c  4605              MOV      r5,r0
00029e  e003              B        |L1.680|
                  |L1.672|
;;;136      } else {
;;;137        r = LISTBOX_OwnerDraw(&ItemInfo);
0002a0  a801              ADD      r0,sp,#4
0002a2  f7fffffe          BL       LISTBOX_OwnerDraw
0002a6  4605              MOV      r5,r0
                  |L1.680|
;;;138      }
;;;139      return r;
0002a8  4628              MOV      r0,r5
;;;140    }
0002aa  b006              ADD      sp,sp,#0x18
0002ac  e8bd81f0          POP      {r4-r8,pc}
;;;141    
                          ENDP

                  _GetYSize PROC
;;;145    */
;;;146    static int _GetYSize(LISTBOX_Handle hObj) {
0002b0  b51c              PUSH     {r2-r4,lr}
0002b2  4604              MOV      r4,r0
;;;147      GUI_RECT Rect;
;;;148      WM_GetInsideRectExScrollbar(hObj, &Rect);
0002b4  4669              MOV      r1,sp
0002b6  4620              MOV      r0,r4
0002b8  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;149      return (Rect.y1 - Rect.y0 + 1);
0002bc  f9bd0006          LDRSH    r0,[sp,#6]
0002c0  f9bd1002          LDRSH    r1,[sp,#2]
0002c4  1a40              SUBS     r0,r0,r1
0002c6  1c40              ADDS     r0,r0,#1
;;;150    }
0002c8  bd1c              POP      {r2-r4,pc}
;;;151    
                          ENDP

                  _GetItemSizeX PROC
;;;155    */
;;;156    static int _GetItemSizeX(LISTBOX_Handle hObj, const LISTBOX_Obj* pObj, unsigned Index) {
0002ca  e92d47f0          PUSH     {r4-r10,lr}
0002ce  4680              MOV      r8,r0
0002d0  460d              MOV      r5,r1
0002d2  4616              MOV      r6,r2
;;;157      LISTBOX_ITEM* pItem;
;;;158      int xSize = 0;
0002d4  2700              MOVS     r7,#0
;;;159      pItem = (LISTBOX_ITEM*)GUI_ARRAY_GetpItem(&pObj->ItemArray, Index);
0002d6  4631              MOV      r1,r6
0002d8  f1050028          ADD      r0,r5,#0x28
0002dc  f7fffffe          BL       GUI_ARRAY_GetpItem
0002e0  4604              MOV      r4,r0
;;;160      if (pItem) {
0002e2  b104              CBZ      r4,|L1.742|
;;;161        xSize = pItem->xSize;
0002e4  8827              LDRH     r7,[r4,#0]
                  |L1.742|
;;;162      }
;;;163      if (xSize == 0) {
0002e6  b977              CBNZ     r7,|L1.774|
;;;164        const GUI_FONT GUI_UNI_PTR* pOldFont;
;;;165        pOldFont = GUI_SetFont(pObj->Props.pFont);
0002e8  6ca8              LDR      r0,[r5,#0x48]
0002ea  f7fffffe          BL       GUI_SetFont
0002ee  4681              MOV      r9,r0
;;;166        xSize    = _CallOwnerDraw(hObj, pObj, WIDGET_ITEM_GET_XSIZE, Index);
0002f0  4633              MOV      r3,r6
0002f2  2201              MOVS     r2,#1
0002f4  4629              MOV      r1,r5
0002f6  4640              MOV      r0,r8
0002f8  f7fffffe          BL       _CallOwnerDraw
0002fc  4607              MOV      r7,r0
;;;167        GUI_SetFont(pOldFont);
0002fe  4648              MOV      r0,r9
000300  f7fffffe          BL       GUI_SetFont
;;;168      }
000304  bf00              NOP      
                  |L1.774|
;;;169      if (pItem) {
000306  b104              CBZ      r4,|L1.778|
;;;170        pItem->xSize = xSize;
000308  8027              STRH     r7,[r4,#0]
                  |L1.778|
;;;171      }
;;;172      return xSize;
00030a  4638              MOV      r0,r7
;;;173    }
00030c  e8bd87f0          POP      {r4-r10,pc}
;;;174    
                          ENDP

                  _GetItemSizeY PROC
;;;178    */
;;;179    static int _GetItemSizeY(LISTBOX_Handle hObj, const LISTBOX_Obj* pObj, unsigned Index) {
000310  e92d47f0          PUSH     {r4-r10,lr}
000314  4680              MOV      r8,r0
000316  460d              MOV      r5,r1
000318  4616              MOV      r6,r2
;;;180      LISTBOX_ITEM* pItem;
;;;181      int ySize = 0;
00031a  2700              MOVS     r7,#0
;;;182      pItem = (LISTBOX_ITEM*)GUI_ARRAY_GetpItem(&pObj->ItemArray, Index);
00031c  4631              MOV      r1,r6
00031e  f1050028          ADD      r0,r5,#0x28
000322  f7fffffe          BL       GUI_ARRAY_GetpItem
000326  4604              MOV      r4,r0
;;;183      if (pItem) {
000328  b104              CBZ      r4,|L1.812|
;;;184        ySize = pItem->ySize;
00032a  8867              LDRH     r7,[r4,#2]
                  |L1.812|
;;;185      }
;;;186      if (ySize == 0) {
00032c  b977              CBNZ     r7,|L1.844|
;;;187        const GUI_FONT GUI_UNI_PTR* pOldFont;
;;;188        pOldFont = GUI_SetFont(pObj->Props.pFont);
00032e  6ca8              LDR      r0,[r5,#0x48]
000330  f7fffffe          BL       GUI_SetFont
000334  4681              MOV      r9,r0
;;;189        ySize    = _CallOwnerDraw(hObj, pObj, WIDGET_ITEM_GET_YSIZE, Index);
000336  4633              MOV      r3,r6
000338  2202              MOVS     r2,#2
00033a  4629              MOV      r1,r5
00033c  4640              MOV      r0,r8
00033e  f7fffffe          BL       _CallOwnerDraw
000342  4607              MOV      r7,r0
;;;190        GUI_SetFont(pOldFont);
000344  4648              MOV      r0,r9
000346  f7fffffe          BL       GUI_SetFont
;;;191      }
00034a  bf00              NOP      
                  |L1.844|
;;;192      if (pItem) {
00034c  b104              CBZ      r4,|L1.848|
;;;193        pItem->ySize = ySize;
00034e  8067              STRH     r7,[r4,#2]
                  |L1.848|
;;;194      }
;;;195      return ySize;
000350  4638              MOV      r0,r7
;;;196    }
000352  e8bd87f0          POP      {r4-r10,pc}
;;;197    
                          ENDP

                  LISTBOX__GetNumItems PROC
;;;800    */
;;;801    unsigned LISTBOX__GetNumItems(const LISTBOX_Obj* pObj) {
000356  b510              PUSH     {r4,lr}
000358  4604              MOV      r4,r0
;;;802      return GUI_ARRAY_GetNumItems(&pObj->ItemArray);
00035a  f1040028          ADD      r0,r4,#0x28
00035e  f7fffffe          BL       GUI_ARRAY_GetNumItems
;;;803    }
000362  bd10              POP      {r4,pc}
;;;804    
                          ENDP

                  _GetContentsSizeX PROC
;;;201    */
;;;202    static int _GetContentsSizeX(LISTBOX_Handle hObj) {
000364  e92d47f0          PUSH     {r4-r10,lr}
000368  4607              MOV      r7,r0
;;;203      LISTBOX_Obj* pObj;
;;;204      int i, NumItems, SizeX;
;;;205      int Result = 0;
00036a  2600              MOVS     r6,#0
;;;206      pObj = LISTBOX_H2P(hObj);
00036c  4638              MOV      r0,r7
00036e  f7fffffe          BL       GUI_ALLOC_h2p
000372  4681              MOV      r9,r0
;;;207      NumItems = LISTBOX__GetNumItems(pObj);
000374  4648              MOV      r0,r9
000376  f7fffffe          BL       LISTBOX__GetNumItems
00037a  4680              MOV      r8,r0
;;;208      for (i = 0; i < NumItems; i++) {
00037c  2500              MOVS     r5,#0
00037e  e009              B        |L1.916|
                  |L1.896|
;;;209        SizeX = _GetItemSizeX(hObj, pObj, i);
000380  462a              MOV      r2,r5
000382  4649              MOV      r1,r9
000384  4638              MOV      r0,r7
000386  f7fffffe          BL       _GetItemSizeX
00038a  4604              MOV      r4,r0
;;;210        if (Result < SizeX) {
00038c  42a6              CMP      r6,r4
00038e  da00              BGE      |L1.914|
;;;211          Result = SizeX;
000390  4626              MOV      r6,r4
                  |L1.914|
000392  1c6d              ADDS     r5,r5,#1              ;208
                  |L1.916|
000394  4545              CMP      r5,r8                 ;208
000396  dbf3              BLT      |L1.896|
;;;212        }
;;;213      }
;;;214      return Result;
000398  4630              MOV      r0,r6
;;;215    }
00039a  e8bd87f0          POP      {r4-r10,pc}
;;;216    
                          ENDP

                  _GetItemPosY PROC
;;;220    */
;;;221    static int _GetItemPosY(LISTBOX_Handle hObj, const LISTBOX_Obj* pObj, unsigned Index) {
00039e  e92d41f0          PUSH     {r4-r8,lr}
0003a2  4680              MOV      r8,r0
0003a4  460c              MOV      r4,r1
0003a6  4615              MOV      r5,r2
;;;222      if (Index < LISTBOX__GetNumItems(pObj)) {
0003a8  4620              MOV      r0,r4
0003aa  f7fffffe          BL       LISTBOX__GetNumItems
0003ae  42a8              CMP      r0,r5
0003b0  d912              BLS      |L1.984|
;;;223        if ((int)Index >= pObj->ScrollStateV.v) {
0003b2  6b60              LDR      r0,[r4,#0x34]
0003b4  42a8              CMP      r0,r5
0003b6  dc0e              BGT      |L1.982|
;;;224          unsigned i;
;;;225          int PosY = 0;
0003b8  2700              MOVS     r7,#0
;;;226          for (i = pObj->ScrollStateV.v; i < Index; i++) {
0003ba  6b66              LDR      r6,[r4,#0x34]
0003bc  e006              B        |L1.972|
                  |L1.958|
;;;227            PosY += _GetItemSizeY(hObj, pObj, i);
0003be  4632              MOV      r2,r6
0003c0  4621              MOV      r1,r4
0003c2  4640              MOV      r0,r8
0003c4  f7fffffe          BL       _GetItemSizeY
0003c8  4407              ADD      r7,r7,r0
0003ca  1c76              ADDS     r6,r6,#1              ;226
                  |L1.972|
0003cc  42ae              CMP      r6,r5                 ;226
0003ce  d3f6              BCC      |L1.958|
;;;228          }
;;;229          return PosY;
0003d0  4638              MOV      r0,r7
                  |L1.978|
;;;230        }
;;;231      }
;;;232      return -1;
;;;233    }
0003d2  e8bd81f0          POP      {r4-r8,pc}
                  |L1.982|
0003d6  bf00              NOP                            ;230
                  |L1.984|
0003d8  f04f30ff          MOV      r0,#0xffffffff        ;232
0003dc  e7f9              B        |L1.978|
;;;234    
                          ENDP

                  _IsPartiallyVis PROC
;;;238    */
;;;239    static int _IsPartiallyVis(LISTBOX_Handle hObj, const LISTBOX_Obj* pObj) {
0003de  e92d41f0          PUSH     {r4-r8,lr}
0003e2  4607              MOV      r7,r0
0003e4  460c              MOV      r4,r1
;;;240      int Index;
;;;241      Index = pObj->Sel;
0003e6  f9b45082          LDRSH    r5,[r4,#0x82]
;;;242      if (Index < (int)LISTBOX__GetNumItems(pObj)) {
0003ea  4620              MOV      r0,r4
0003ec  f7fffffe          BL       LISTBOX__GetNumItems
0003f0  42a8              CMP      r0,r5
0003f2  dd17              BLE      |L1.1060|
;;;243        if (Index >= pObj->ScrollStateV.v) {
0003f4  6b60              LDR      r0,[r4,#0x34]
0003f6  42a8              CMP      r0,r5
0003f8  dc14              BGT      |L1.1060|
;;;244          int y;
;;;245          y  = _GetItemPosY (hObj, pObj, Index);
0003fa  462a              MOV      r2,r5
0003fc  4621              MOV      r1,r4
0003fe  4638              MOV      r0,r7
000400  f7fffffe          BL       _GetItemPosY
000404  4606              MOV      r6,r0
;;;246          y += _GetItemSizeY(hObj, pObj, Index);
000406  462a              MOV      r2,r5
000408  4621              MOV      r1,r4
00040a  4638              MOV      r0,r7
00040c  f7fffffe          BL       _GetItemSizeY
000410  4406              ADD      r6,r6,r0
;;;247          if (y > _GetYSize(hObj)) {
000412  4638              MOV      r0,r7
000414  f7fffffe          BL       _GetYSize
000418  42b0              CMP      r0,r6
00041a  da02              BGE      |L1.1058|
;;;248            return 1;
00041c  2001              MOVS     r0,#1
                  |L1.1054|
;;;249          }
;;;250        }
;;;251      }
;;;252      return 0;
;;;253    }
00041e  e8bd81f0          POP      {r4-r8,pc}
                  |L1.1058|
000422  bf00              NOP                            ;250
                  |L1.1060|
000424  2000              MOVS     r0,#0                 ;252
000426  e7fa              B        |L1.1054|
;;;254    
                          ENDP

                  _GetNumVisItems PROC
;;;261    */
;;;262    static unsigned _GetNumVisItems(const LISTBOX_Obj* pObj, LISTBOX_Handle hObj) {
000428  e92d47f0          PUSH     {r4-r10,lr}
00042c  4606              MOV      r6,r0
00042e  460f              MOV      r7,r1
;;;263      int NumItems, r = 1;
000430  f04f0801          MOV      r8,#1
;;;264      NumItems = LISTBOX__GetNumItems(pObj);
000434  4630              MOV      r0,r6
000436  f7fffffe          BL       LISTBOX__GetNumItems
00043a  4605              MOV      r5,r0
;;;265      if (NumItems > 1) {
00043c  2d01              CMP      r5,#1
00043e  dd1e              BLE      |L1.1150|
;;;266        int i, ySize, DistY = 0;
000440  f04f0900          MOV      r9,#0
;;;267        ySize = _GetYSize(hObj);
000444  4638              MOV      r0,r7
000446  f7fffffe          BL       _GetYSize
00044a  4682              MOV      r10,r0
;;;268        for (i = NumItems - 1; i >= 0; i--) {
00044c  1e6c              SUBS     r4,r5,#1
00044e  e009              B        |L1.1124|
                  |L1.1104|
;;;269          DistY += _GetItemSizeY(hObj, pObj, i);
000450  4622              MOV      r2,r4
000452  4631              MOV      r1,r6
000454  4638              MOV      r0,r7
000456  f7fffffe          BL       _GetItemSizeY
00045a  4481              ADD      r9,r9,r0
;;;270          if (DistY > ySize) {
00045c  45d1              CMP      r9,r10
00045e  dd00              BLE      |L1.1122|
;;;271            break;
000460  e002              B        |L1.1128|
                  |L1.1122|
000462  1e64              SUBS     r4,r4,#1              ;268
                  |L1.1124|
000464  2c00              CMP      r4,#0                 ;268
000466  daf3              BGE      |L1.1104|
                  |L1.1128|
000468  bf00              NOP      
;;;272          }
;;;273        }
;;;274        r = NumItems - i - 1;
00046a  1b28              SUBS     r0,r5,r4
00046c  f1a00801          SUB      r8,r0,#1
;;;275        if (r < 1) {
000470  f1b80f01          CMP      r8,#1
000474  da02              BGE      |L1.1148|
;;;276          return 1;
000476  2001              MOVS     r0,#1
                  |L1.1144|
;;;277        }
;;;278      }
;;;279      return r;
;;;280    }
000478  e8bd87f0          POP      {r4-r10,pc}
                  |L1.1148|
00047c  bf00              NOP                            ;278
                  |L1.1150|
00047e  4640              MOV      r0,r8                 ;279
000480  e7fa              B        |L1.1144|
;;;281    
                          ENDP

                  _NotifyOwner PROC
;;;289    */
;;;290    static void _NotifyOwner(WM_HWIN hObj, int Notification) {
000482  b5fe              PUSH     {r1-r7,lr}
000484  4604              MOV      r4,r0
000486  460d              MOV      r5,r1
;;;291      WM_MESSAGE Msg = {0};
000488  2000              MOVS     r0,#0
00048a  9000              STR      r0,[sp,#0]
00048c  9001              STR      r0,[sp,#4]
00048e  9002              STR      r0,[sp,#8]
;;;292      WM_HWIN hOwner;
;;;293      LISTBOX_Obj* pObj    = LISTBOX_H2P(hObj);
000490  4620              MOV      r0,r4
000492  f7fffffe          BL       GUI_ALLOC_h2p
000496  4606              MOV      r6,r0
;;;294      hOwner = pObj->hOwner ? pObj->hOwner : WM_GetParent(hObj);
000498  f8b60080          LDRH     r0,[r6,#0x80]
00049c  b110              CBZ      r0,|L1.1188|
00049e  f9b60080          LDRSH    r0,[r6,#0x80]
0004a2  e002              B        |L1.1194|
                  |L1.1188|
0004a4  4620              MOV      r0,r4
0004a6  f7fffffe          BL       WM_GetParent
                  |L1.1194|
0004aa  4607              MOV      r7,r0
;;;295      Msg.MsgId  = WM_NOTIFY_PARENT;
0004ac  2026              MOVS     r0,#0x26
0004ae  9000              STR      r0,[sp,#0]
;;;296      Msg.Data.v = Notification;
0004b0  9502              STR      r5,[sp,#8]
;;;297      Msg.hWinSrc= hObj;
0004b2  f8ad4006          STRH     r4,[sp,#6]
;;;298      WM__SendMessage(hOwner, &Msg);
0004b6  4669              MOV      r1,sp
0004b8  4638              MOV      r0,r7
0004ba  f7fffffe          BL       WM__SendMessage
;;;299    }
0004be  bdfe              POP      {r1-r7,pc}
;;;300    
                          ENDP

                  _SendToOwner PROC
;;;308    */
;;;309    static void _SendToOwner(WM_HWIN hObj, WM_MESSAGE * pMsg) {
0004c0  e92d41f0          PUSH     {r4-r8,lr}
0004c4  4604              MOV      r4,r0
0004c6  460d              MOV      r5,r1
;;;310      WM_HWIN hOwner;
;;;311      LISTBOX_Obj * pObj = LISTBOX_H2P(hObj);
0004c8  4620              MOV      r0,r4
0004ca  f7fffffe          BL       GUI_ALLOC_h2p
0004ce  4606              MOV      r6,r0
;;;312      hOwner = pObj->hOwner ? pObj->hOwner : WM_GetParent(hObj);
0004d0  f8b60080          LDRH     r0,[r6,#0x80]
0004d4  b110              CBZ      r0,|L1.1244|
0004d6  f9b60080          LDRSH    r0,[r6,#0x80]
0004da  e002              B        |L1.1250|
                  |L1.1244|
0004dc  4620              MOV      r0,r4
0004de  f7fffffe          BL       WM_GetParent
                  |L1.1250|
0004e2  4607              MOV      r7,r0
;;;313      pMsg->hWinSrc= hObj;
0004e4  80ec              STRH     r4,[r5,#6]
;;;314      WM__SendMessage(hOwner, pMsg);
0004e6  4629              MOV      r1,r5
0004e8  4638              MOV      r0,r7
0004ea  f7fffffe          BL       WM__SendMessage
;;;315    }
0004ee  e8bd81f0          POP      {r4-r8,pc}
;;;316    
                          ENDP

                  _UpdateScrollPos PROC
;;;432    */
;;;433    static int _UpdateScrollPos(LISTBOX_Handle hObj, LISTBOX_Obj* pObj) {
0004f2  b570              PUSH     {r4-r6,lr}
0004f4  4605              MOV      r5,r0
0004f6  460c              MOV      r4,r1
;;;434      int PrevScrollStateV;
;;;435      PrevScrollStateV = pObj->ScrollStateV.v;
0004f8  6b66              LDR      r6,[r4,#0x34]
;;;436      if (pObj->Sel >= 0) {
0004fa  f9b40082          LDRSH    r0,[r4,#0x82]
0004fe  2800              CMP      r0,#0
000500  db12              BLT      |L1.1320|
;;;437        /* Check upper limit */
;;;438        if (_IsPartiallyVis(hObj, pObj)) {
000502  4621              MOV      r1,r4
000504  4628              MOV      r0,r5
000506  f7fffffe          BL       _IsPartiallyVis
00050a  b128              CBZ      r0,|L1.1304|
;;;439          pObj->ScrollStateV.v = pObj->Sel - (pObj->ScrollStateV.PageSize - 1);
00050c  f9b41082          LDRSH    r1,[r4,#0x82]
000510  6ba0              LDR      r0,[r4,#0x38]
000512  1e40              SUBS     r0,r0,#1
000514  1a09              SUBS     r1,r1,r0
000516  6361              STR      r1,[r4,#0x34]
                  |L1.1304|
;;;440        }
;;;441        /* Check lower limit */
;;;442        if (pObj->Sel < pObj->ScrollStateV.v) {
000518  f9b41082          LDRSH    r1,[r4,#0x82]
00051c  6b60              LDR      r0,[r4,#0x34]
00051e  4281              CMP      r1,r0
000520  da02              BGE      |L1.1320|
;;;443          pObj->ScrollStateV.v = pObj->Sel;
000522  f9b41082          LDRSH    r1,[r4,#0x82]
000526  6361              STR      r1,[r4,#0x34]
                  |L1.1320|
;;;444        }
;;;445      }
;;;446      WM_CheckScrollBounds(&pObj->ScrollStateV);
000528  f1040030          ADD      r0,r4,#0x30
00052c  f7fffffe          BL       WM_CheckScrollBounds
;;;447      WM_CheckScrollBounds(&pObj->ScrollStateH);
000530  f104003c          ADD      r0,r4,#0x3c
000534  f7fffffe          BL       WM_CheckScrollBounds
;;;448      WIDGET__SetScrollState(hObj, &pObj->ScrollStateV, &pObj->ScrollStateH);
000538  f104023c          ADD      r2,r4,#0x3c
00053c  f1040130          ADD      r1,r4,#0x30
000540  4628              MOV      r0,r5
000542  f7fffffe          BL       WIDGET__SetScrollState
;;;449      return pObj->ScrollStateV.v - PrevScrollStateV;
000546  6b60              LDR      r0,[r4,#0x34]
000548  1b80              SUBS     r0,r0,r6
;;;450    }
00054a  bd70              POP      {r4-r6,pc}
;;;451    
                          ENDP

                  _CalcScrollParas PROC
;;;455    */
;;;456    static int _CalcScrollParas(LISTBOX_Handle hObj) {
00054c  b57c              PUSH     {r2-r6,lr}
00054e  4605              MOV      r5,r0
;;;457      GUI_RECT Rect;
;;;458      LISTBOX_Obj* pObj = LISTBOX_H2P(hObj);
000550  4628              MOV      r0,r5
000552  f7fffffe          BL       GUI_ALLOC_h2p
000556  4604              MOV      r4,r0
;;;459      /* Calc vertical scroll parameters */
;;;460      pObj->ScrollStateV.NumItems = LISTBOX__GetNumItems(pObj);
000558  4620              MOV      r0,r4
00055a  f7fffffe          BL       LISTBOX__GetNumItems
00055e  6320              STR      r0,[r4,#0x30]
;;;461      pObj->ScrollStateV.PageSize = _GetNumVisItems(pObj, hObj);
000560  4629              MOV      r1,r5
000562  4620              MOV      r0,r4
000564  f7fffffe          BL       _GetNumVisItems
000568  63a0              STR      r0,[r4,#0x38]
;;;462      /* Calc horizontal scroll parameters */
;;;463      WM_GetInsideRectExScrollbar(hObj, &Rect);
00056a  4669              MOV      r1,sp
00056c  4628              MOV      r0,r5
00056e  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;464      pObj->ScrollStateH.NumItems = _GetContentsSizeX(hObj);
000572  4628              MOV      r0,r5
000574  f7fffffe          BL       _GetContentsSizeX
000578  63e0              STR      r0,[r4,#0x3c]
;;;465      pObj->ScrollStateH.PageSize = Rect.x1 - Rect.x0 + 1;
00057a  f9bd0004          LDRSH    r0,[sp,#4]
00057e  f9bd1000          LDRSH    r1,[sp,#0]
000582  1a40              SUBS     r0,r0,r1
000584  1c40              ADDS     r0,r0,#1
000586  6460              STR      r0,[r4,#0x44]
;;;466      return _UpdateScrollPos(hObj, pObj);
000588  4621              MOV      r1,r4
00058a  4628              MOV      r0,r5
00058c  f7fffffe          BL       _UpdateScrollPos
;;;467    }
000590  bd7c              POP      {r2-r6,pc}
;;;468    
                          ENDP

                  LISTBOX__SetScrollbarColor PROC
;;;901    */
;;;902    void LISTBOX__SetScrollbarColor(LISTBOX_Handle hObj, const LISTBOX_Obj* pObj) {
000592  e92d41f0          PUSH     {r4-r8,lr}
000596  4680              MOV      r8,r0
000598  460d              MOV      r5,r1
;;;903      WM_HWIN hBarH, hBarV;
;;;904      int i;
;;;905      hBarH = WM_GetDialogItem(hObj, GUI_ID_HSCROLL);
00059a  21ff              MOVS     r1,#0xff
00059c  4640              MOV      r0,r8
00059e  f7fffffe          BL       WM_GetDialogItem
0005a2  4606              MOV      r6,r0
;;;906      hBarV = WM_GetDialogItem(hObj, GUI_ID_VSCROLL);
0005a4  21fe              MOVS     r1,#0xfe
0005a6  4640              MOV      r0,r8
0005a8  f7fffffe          BL       WM_GetDialogItem
0005ac  4607              MOV      r7,r0
;;;907      if (hBarH || hBarV) {
0005ae  b906              CBNZ     r6,|L1.1458|
0005b0  b1e7              CBZ      r7,|L1.1516|
                  |L1.1458|
;;;908        for (i = 0; i < GUI_COUNTOF(pObj->Props.aScrollbarColor); i++) {
0005b2  2400              MOVS     r4,#0
0005b4  e018              B        |L1.1512|
                  |L1.1462|
;;;909          if (pObj->Props.aScrollbarColor[i] != GUI_INVALID_COLOR) {
0005b6  f1050070          ADD      r0,r5,#0x70
0005ba  f8500024          LDR      r0,[r0,r4,LSL #2]
0005be  f06f4170          MVN      r1,#0xf0000000
0005c2  4288              CMP      r0,r1
0005c4  d00f              BEQ      |L1.1510|
;;;910            SCROLLBAR_SetColor(hBarH, i, pObj->Props.aScrollbarColor[i]);
0005c6  f1050070          ADD      r0,r5,#0x70
0005ca  f8502024          LDR      r2,[r0,r4,LSL #2]
0005ce  4621              MOV      r1,r4
0005d0  4630              MOV      r0,r6
0005d2  f7fffffe          BL       SCROLLBAR_SetColor
;;;911            SCROLLBAR_SetColor(hBarV, i, pObj->Props.aScrollbarColor[i]);
0005d6  f1050070          ADD      r0,r5,#0x70
0005da  f8502024          LDR      r2,[r0,r4,LSL #2]
0005de  4621              MOV      r1,r4
0005e0  4638              MOV      r0,r7
0005e2  f7fffffe          BL       SCROLLBAR_SetColor
                  |L1.1510|
0005e6  1c64              ADDS     r4,r4,#1              ;908
                  |L1.1512|
0005e8  2c03              CMP      r4,#3                 ;908
0005ea  d3e4              BCC      |L1.1462|
                  |L1.1516|
;;;912          }
;;;913        }
;;;914      }
;;;915    }
0005ec  e8bd81f0          POP      {r4-r8,pc}
                  |L1.1520|
                          DCD      GUI_Context
                          ENDP

                  LISTBOX__SetScrollbarWidth PROC
;;;884    */
;;;885    void LISTBOX__SetScrollbarWidth(LISTBOX_Handle hObj, const LISTBOX_Obj* pObj) {
0005f4  e92d41f0          PUSH     {r4-r8,lr}
0005f8  4606              MOV      r6,r0
0005fa  460c              MOV      r4,r1
;;;886      WM_HWIN hBarH, hBarV;
;;;887      int Width;
;;;888      Width = pObj->ScrollbarWidth;
0005fc  f8945085          LDRB     r5,[r4,#0x85]
;;;889      if (Width == 0) {
000600  b915              CBNZ     r5,|L1.1544|
;;;890        Width = SCROLLBAR_GetDefaultWidth();
000602  f7fffffe          BL       SCROLLBAR_GetDefaultWidth
000606  4605              MOV      r5,r0
                  |L1.1544|
;;;891      }
;;;892      hBarH = WM_GetDialogItem(hObj, GUI_ID_HSCROLL);
000608  21ff              MOVS     r1,#0xff
00060a  4630              MOV      r0,r6
00060c  f7fffffe          BL       WM_GetDialogItem
000610  4680              MOV      r8,r0
;;;893      hBarV = WM_GetDialogItem(hObj, GUI_ID_VSCROLL);
000612  21fe              MOVS     r1,#0xfe
000614  4630              MOV      r0,r6
000616  f7fffffe          BL       WM_GetDialogItem
00061a  4607              MOV      r7,r0
;;;894      SCROLLBAR_SetWidth(hBarH, Width);
00061c  4629              MOV      r1,r5
00061e  4640              MOV      r0,r8
000620  f7fffffe          BL       SCROLLBAR_SetWidth
;;;895      SCROLLBAR_SetWidth(hBarV, Width);
000624  4629              MOV      r1,r5
000626  4638              MOV      r0,r7
000628  f7fffffe          BL       SCROLLBAR_SetWidth
;;;896    }
00062c  e8bd81f0          POP      {r4-r8,pc}
;;;897    
                          ENDP

                  _ManageAutoScroll PROC
;;;472    */
;;;473    static void _ManageAutoScroll(LISTBOX_Handle hObj) {
000630  e92d41fc          PUSH     {r2-r8,lr}
000634  4605              MOV      r5,r0
;;;474      char IsRequired;
;;;475      LISTBOX_Obj* pObj = LISTBOX_H2P(hObj);
000636  4628              MOV      r0,r5
000638  f7fffffe          BL       GUI_ALLOC_h2p
00063c  4604              MOV      r4,r0
;;;476      if (pObj->Flags & LISTBOX_SF_AUTOSCROLLBAR_V) {
00063e  f8940084          LDRB     r0,[r4,#0x84]
000642  f0000002          AND      r0,r0,#2
000646  b188              CBZ      r0,|L1.1644|
;;;477        IsRequired = (_GetNumVisItems(pObj, hObj) < LISTBOX__GetNumItems(pObj));
000648  4629              MOV      r1,r5
00064a  4620              MOV      r0,r4
00064c  f7fffffe          BL       _GetNumVisItems
000650  4607              MOV      r7,r0
000652  4620              MOV      r0,r4
000654  f7fffffe          BL       LISTBOX__GetNumItems
000658  4287              CMP      r7,r0
00065a  d201              BCS      |L1.1632|
00065c  2001              MOVS     r0,#1
00065e  e000              B        |L1.1634|
                  |L1.1632|
000660  2000              MOVS     r0,#0
                  |L1.1634|
000662  4606              MOV      r6,r0
;;;478        WM_SetScrollbarV(hObj, IsRequired);
000664  4631              MOV      r1,r6
000666  4628              MOV      r0,r5
000668  f7fffffe          BL       WM_SetScrollbarV
                  |L1.1644|
;;;479      }
;;;480      if (pObj->Flags & LISTBOX_SF_AUTOSCROLLBAR_H) {
00066c  f8940084          LDRB     r0,[r4,#0x84]
000670  f0000001          AND      r0,r0,#1
000674  b1c0              CBZ      r0,|L1.1704|
;;;481        GUI_RECT Rect;
;;;482        int xSize, xSizeContents;
;;;483        xSizeContents = _GetContentsSizeX(hObj);
000676  4628              MOV      r0,r5
000678  f7fffffe          BL       _GetContentsSizeX
00067c  4680              MOV      r8,r0
;;;484        WM_GetInsideRectExScrollbar(hObj, &Rect);
00067e  4669              MOV      r1,sp
000680  4628              MOV      r0,r5
000682  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;485        xSize = Rect.x1 - Rect.x0 + 1;
000686  f9bd0004          LDRSH    r0,[sp,#4]
00068a  f9bd1000          LDRSH    r1,[sp,#0]
00068e  1a40              SUBS     r0,r0,r1
000690  1c47              ADDS     r7,r0,#1
;;;486        IsRequired = (xSizeContents > xSize);
000692  45b8              CMP      r8,r7
000694  dd01              BLE      |L1.1690|
000696  2001              MOVS     r0,#1
000698  e000              B        |L1.1692|
                  |L1.1690|
00069a  2000              MOVS     r0,#0
                  |L1.1692|
00069c  4606              MOV      r6,r0
;;;487        WM_SetScrollbarH(hObj, IsRequired);
00069e  4631              MOV      r1,r6
0006a0  4628              MOV      r0,r5
0006a2  f7fffffe          BL       WM_SetScrollbarH
;;;488      }
0006a6  bf00              NOP      
                  |L1.1704|
;;;489      if (pObj->ScrollbarWidth) {
0006a8  f8940085          LDRB     r0,[r4,#0x85]
0006ac  b118              CBZ      r0,|L1.1718|
;;;490        LISTBOX__SetScrollbarWidth(hObj, pObj);
0006ae  4621              MOV      r1,r4
0006b0  4628              MOV      r0,r5
0006b2  f7fffffe          BL       LISTBOX__SetScrollbarWidth
                  |L1.1718|
;;;491      }
;;;492      LISTBOX__SetScrollbarColor(hObj, pObj);
0006b6  4621              MOV      r1,r4
0006b8  4628              MOV      r0,r5
0006ba  f7fffffe          BL       LISTBOX__SetScrollbarColor
;;;493    }
0006be  e8bd81fc          POP      {r2-r8,pc}
;;;494    
                          ENDP

                  LISTBOX_UpdateScrollers PROC
;;;498    */
;;;499    int LISTBOX_UpdateScrollers(LISTBOX_Handle hObj) {
0006c2  b510              PUSH     {r4,lr}
0006c4  4604              MOV      r4,r0
;;;500      _ManageAutoScroll(hObj);
0006c6  4620              MOV      r0,r4
0006c8  f7fffffe          BL       _ManageAutoScroll
;;;501      return _CalcScrollParas(hObj);
0006cc  4620              MOV      r0,r4
0006ce  f7fffffe          BL       _CalcScrollParas
;;;502    }
0006d2  bd10              POP      {r4,pc}
;;;503    
                          ENDP

                  _Tolower PROC
;;;507    */
;;;508    static int _Tolower(int Key) {
0006d4  2841              CMP      r0,#0x41
;;;509      if ((Key >= 0x41) && (Key <= 0x5a)) {
0006d6  db02              BLT      |L1.1758|
0006d8  285a              CMP      r0,#0x5a
0006da  dc00              BGT      |L1.1758|
;;;510        Key += 0x20;
0006dc  3020              ADDS     r0,r0,#0x20
                  |L1.1758|
;;;511      }
;;;512      return Key;
;;;513    }
0006de  4770              BX       lr
;;;514    
                          ENDP

                  _IsAlphaNum PROC
;;;518    */
;;;519    static int _IsAlphaNum(int Key) {
0006e0  b510              PUSH     {r4,lr}
0006e2  4604              MOV      r4,r0
;;;520      Key = _Tolower(Key);
0006e4  4620              MOV      r0,r4
0006e6  f7fffffe          BL       _Tolower
0006ea  4604              MOV      r4,r0
;;;521      if (Key >= 'a' && Key <= 'z') {
0006ec  2c61              CMP      r4,#0x61
0006ee  db03              BLT      |L1.1784|
0006f0  2c7a              CMP      r4,#0x7a
0006f2  dc01              BGT      |L1.1784|
;;;522        return 1;
0006f4  2001              MOVS     r0,#1
                  |L1.1782|
;;;523      }
;;;524      if (Key >= '0' && Key <= '9') {
;;;525        return 1;
;;;526      }
;;;527      return 0;
;;;528    }
0006f6  bd10              POP      {r4,pc}
                  |L1.1784|
0006f8  2c30              CMP      r4,#0x30              ;524
0006fa  db03              BLT      |L1.1796|
0006fc  2c39              CMP      r4,#0x39              ;524
0006fe  dc01              BGT      |L1.1796|
000700  2001              MOVS     r0,#1                 ;525
000702  e7f8              B        |L1.1782|
                  |L1.1796|
000704  2000              MOVS     r0,#0                 ;527
000706  e7f6              B        |L1.1782|
;;;529    
                          ENDP

                  LISTBOX__InvalidateItem PROC
;;;847    */
;;;848    void LISTBOX__InvalidateItem(LISTBOX_Handle hObj, const LISTBOX_Obj* pObj, int Sel) {
000708  e92d41fc          PUSH     {r2-r8,lr}
00070c  4606              MOV      r6,r0
00070e  460f              MOV      r7,r1
000710  4614              MOV      r4,r2
;;;849      if (Sel >= 0) {
000712  2c00              CMP      r4,#0
000714  db24              BLT      |L1.1888|
;;;850        int ItemPosY;
;;;851        ItemPosY = _GetItemPosY(hObj, pObj, Sel);
000716  4622              MOV      r2,r4
000718  4639              MOV      r1,r7
00071a  4630              MOV      r0,r6
00071c  f7fffffe          BL       _GetItemPosY
000720  4605              MOV      r5,r0
;;;852        if (ItemPosY >= 0) {
000722  2d00              CMP      r5,#0
000724  db1b              BLT      |L1.1886|
;;;853          GUI_RECT Rect;
;;;854          int ItemDistY;
;;;855          ItemDistY = _GetItemSizeY(hObj, pObj, Sel);
000726  4622              MOV      r2,r4
000728  4639              MOV      r1,r7
00072a  4630              MOV      r0,r6
00072c  f7fffffe          BL       _GetItemSizeY
000730  4680              MOV      r8,r0
;;;856          WM_GetInsideRectExScrollbar(hObj, &Rect);
000732  4669              MOV      r1,sp
000734  4630              MOV      r0,r6
000736  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;857          Rect.y0 += ItemPosY;
00073a  f8bd0002          LDRH     r0,[sp,#2]
00073e  4428              ADD      r0,r0,r5
000740  b200              SXTH     r0,r0
000742  f8ad0002          STRH     r0,[sp,#2]
;;;858          Rect.y1  = Rect.y0 + ItemDistY - 1;
000746  f8bd0002          LDRH     r0,[sp,#2]
00074a  4440              ADD      r0,r0,r8
00074c  1e40              SUBS     r0,r0,#1
00074e  b200              SXTH     r0,r0
000750  f8ad0006          STRH     r0,[sp,#6]
;;;859          WM_InvalidateRect(hObj, &Rect);
000754  4669              MOV      r1,sp
000756  4630              MOV      r0,r6
000758  f7fffffe          BL       WM_InvalidateRect
;;;860        }
00075c  bf00              NOP      
                  |L1.1886|
;;;861      }
00075e  bf00              NOP      
                  |L1.1888|
;;;862    }
000760  e8bd81fc          POP      {r2-r8,pc}
;;;863    
                          ENDP

                  LISTBOX__InvalidateInsideArea PROC
;;;837    */
;;;838    void LISTBOX__InvalidateInsideArea(LISTBOX_Handle hObj) {
000764  b51c              PUSH     {r2-r4,lr}
000766  4604              MOV      r4,r0
;;;839      GUI_RECT Rect;
;;;840      WM_GetInsideRectExScrollbar(hObj, &Rect);
000768  4669              MOV      r1,sp
00076a  4620              MOV      r0,r4
00076c  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;841      WM_InvalidateRect(hObj, &Rect);
000770  4669              MOV      r1,sp
000772  4620              MOV      r0,r4
000774  f7fffffe          BL       WM_InvalidateRect
;;;842    }
000778  bd1c              POP      {r2-r4,pc}
;;;843    
                          ENDP

                  LISTBOX_SetSel PROC
;;;1156   */
;;;1157   void LISTBOX_SetSel (LISTBOX_Handle hObj, int NewSel) {
00077a  e92d47f0          PUSH     {r4-r10,lr}
00077e  4607              MOV      r7,r0
000780  460c              MOV      r4,r1
;;;1158     if (hObj) {
000782  2f00              CMP      r7,#0
000784  d04c              BEQ      |L1.2080|
;;;1159       LISTBOX_Obj* pObj;
;;;1160       int MaxSel;
;;;1161       WM_LOCK();
;;;1162       pObj = LISTBOX_H2P(hObj);
000786  4638              MOV      r0,r7
000788  f7fffffe          BL       GUI_ALLOC_h2p
00078c  4605              MOV      r5,r0
;;;1163       MaxSel = LISTBOX__GetNumItems(pObj);
00078e  4628              MOV      r0,r5
000790  f7fffffe          BL       LISTBOX__GetNumItems
000794  4606              MOV      r6,r0
;;;1164       MaxSel = MaxSel ? MaxSel - 1 : 0;
000796  b10e              CBZ      r6,|L1.1948|
000798  1e70              SUBS     r0,r6,#1
00079a  e000              B        |L1.1950|
                  |L1.1948|
00079c  2000              MOVS     r0,#0
                  |L1.1950|
00079e  4606              MOV      r6,r0
;;;1165       if (NewSel > MaxSel) {
0007a0  42b4              CMP      r4,r6
0007a2  dd00              BLE      |L1.1958|
;;;1166         NewSel = MaxSel;
0007a4  4634              MOV      r4,r6
                  |L1.1958|
;;;1167       }
;;;1168       if (NewSel < 0) {
0007a6  2c00              CMP      r4,#0
0007a8  da02              BGE      |L1.1968|
;;;1169         NewSel = -1;
0007aa  f04f34ff          MOV      r4,#0xffffffff
0007ae  e015              B        |L1.2012|
                  |L1.1968|
;;;1170       } else {
;;;1171         WM_HMEM hItem = GUI_ARRAY_GethItem(&pObj->ItemArray, NewSel);
0007b0  4621              MOV      r1,r4
0007b2  f1050028          ADD      r0,r5,#0x28
0007b6  f7fffffe          BL       GUI_ARRAY_GethItem
0007ba  4680              MOV      r8,r0
;;;1172         if (hItem) {
0007bc  f1b80f00          CMP      r8,#0
0007c0  d00b              BEQ      |L1.2010|
;;;1173           LISTBOX_ITEM* pItem = (LISTBOX_ITEM*)GUI_ALLOC_h2p(hItem);
0007c2  4640              MOV      r0,r8
0007c4  f7fffffe          BL       GUI_ALLOC_h2p
0007c8  4681              MOV      r9,r0
;;;1174           if (pItem->Status & LISTBOX_ITEM_DISABLED) {
0007ca  f8990004          LDRB     r0,[r9,#4]
0007ce  f0000002          AND      r0,r0,#2
0007d2  b108              CBZ      r0,|L1.2008|
;;;1175             NewSel = -1;
0007d4  f04f34ff          MOV      r4,#0xffffffff
                  |L1.2008|
;;;1176           }
;;;1177         }
0007d8  bf00              NOP      
                  |L1.2010|
;;;1178       }
0007da  bf00              NOP      
                  |L1.2012|
;;;1179       if (NewSel != pObj->Sel) {
0007dc  f9b50082          LDRSH    r0,[r5,#0x82]
0007e0  42a0              CMP      r0,r4
0007e2  d01c              BEQ      |L1.2078|
;;;1180         int OldSel;
;;;1181         OldSel    = pObj->Sel;
0007e4  f9b58082          LDRSH    r8,[r5,#0x82]
;;;1182         pObj->Sel = NewSel;
0007e8  b220              SXTH     r0,r4
0007ea  f8a50082          STRH     r0,[r5,#0x82]
;;;1183         if (_UpdateScrollPos(hObj, pObj)) {
0007ee  4629              MOV      r1,r5
0007f0  4638              MOV      r0,r7
0007f2  f7fffffe          BL       _UpdateScrollPos
0007f6  b118              CBZ      r0,|L1.2048|
;;;1184           LISTBOX__InvalidateInsideArea(hObj);
0007f8  4638              MOV      r0,r7
0007fa  f7fffffe          BL       LISTBOX__InvalidateInsideArea
0007fe  e009              B        |L1.2068|
                  |L1.2048|
;;;1185         } else {
;;;1186           LISTBOX__InvalidateItem(hObj, pObj, OldSel);
000800  4642              MOV      r2,r8
000802  4629              MOV      r1,r5
000804  4638              MOV      r0,r7
000806  f7fffffe          BL       LISTBOX__InvalidateItem
;;;1187           LISTBOX__InvalidateItem(hObj, pObj, NewSel);
00080a  4622              MOV      r2,r4
00080c  4629              MOV      r1,r5
00080e  4638              MOV      r0,r7
000810  f7fffffe          BL       LISTBOX__InvalidateItem
                  |L1.2068|
;;;1188         }
;;;1189         _NotifyOwner(hObj, WM_NOTIFICATION_SEL_CHANGED);
000814  2104              MOVS     r1,#4
000816  4638              MOV      r0,r7
000818  f7fffffe          BL       _NotifyOwner
;;;1190       }
00081c  bf00              NOP      
                  |L1.2078|
;;;1191       WM_UNLOCK();
;;;1192     }
00081e  bf00              NOP      
                  |L1.2080|
;;;1193   }
000820  e8bd87f0          POP      {r4-r10,pc}
;;;1194   
                          ENDP

                  _SelectByKey PROC
;;;533    */
;;;534    static void _SelectByKey(LISTBOX_Handle hObj, int Key) {
000824  e92d41f0          PUSH     {r4-r8,lr}
000828  4606              MOV      r6,r0
00082a  460c              MOV      r4,r1
;;;535      unsigned i;
;;;536      LISTBOX_Obj* pObj;
;;;537      pObj = LISTBOX_H2P(hObj);
00082c  4630              MOV      r0,r6
00082e  f7fffffe          BL       GUI_ALLOC_h2p
000832  4680              MOV      r8,r0
;;;538      Key = _Tolower(Key);
000834  4620              MOV      r0,r4
000836  f7fffffe          BL       _Tolower
00083a  4604              MOV      r4,r0
;;;539      for (i = 0; i < LISTBOX__GetNumItems(pObj); i++) {
00083c  2500              MOVS     r5,#0
00083e  e00f              B        |L1.2144|
                  |L1.2112|
;;;540        const char* s = LISTBOX__GetpString(pObj, i);
000840  4629              MOV      r1,r5
000842  4640              MOV      r0,r8
000844  f7fffffe          BL       LISTBOX__GetpString
000848  4607              MOV      r7,r0
;;;541        if (_Tolower(*s) == Key) {
00084a  7838              LDRB     r0,[r7,#0]
00084c  f7fffffe          BL       _Tolower
000850  42a0              CMP      r0,r4
000852  d104              BNE      |L1.2142|
;;;542          LISTBOX_SetSel(hObj, i);
000854  4629              MOV      r1,r5
000856  4630              MOV      r0,r6
000858  f7fffffe          BL       LISTBOX_SetSel
;;;543          break;
00085c  e005              B        |L1.2154|
                  |L1.2142|
00085e  1c6d              ADDS     r5,r5,#1              ;539
                  |L1.2144|
000860  4640              MOV      r0,r8                 ;539
000862  f7fffffe          BL       LISTBOX__GetNumItems
000866  42a8              CMP      r0,r5                 ;539
000868  d8ea              BHI      |L1.2112|
                  |L1.2154|
00086a  bf00              NOP      
;;;544        }
;;;545      }
;;;546    }
00086c  e8bd81f0          POP      {r4-r8,pc}
;;;547    
                          ENDP

                  _FreeAttached PROC
;;;551    */
;;;552    static void _FreeAttached(LISTBOX_Obj* pObj) {
000870  b510              PUSH     {r4,lr}
000872  4604              MOV      r4,r0
;;;553      GUI_ARRAY_Delete(&pObj->ItemArray);
000874  f1040028          ADD      r0,r4,#0x28
000878  f7fffffe          BL       GUI_ARRAY_Delete
;;;554    }
00087c  bd10              POP      {r4,pc}
;;;555    
                          ENDP

                  _OnPaint PROC
;;;559    */
;;;560    static void _OnPaint(LISTBOX_Handle hObj, LISTBOX_Obj* pObj, WM_MESSAGE* pMsg) {
00087e  e92d43f0          PUSH     {r4-r9,lr}
000882  b08b              SUB      sp,sp,#0x2c
000884  4607              MOV      r7,r0
000886  460c              MOV      r4,r1
000888  4690              MOV      r8,r2
;;;561      WIDGET_ITEM_DRAW_INFO ItemInfo;
;;;562      GUI_RECT RectInside, RectItem, ClipRect;
;;;563      int ItemDistY, NumItems, i;
;;;564      NumItems = LISTBOX__GetNumItems(pObj);
00088a  4620              MOV      r0,r4
00088c  f7fffffe          BL       LISTBOX__GetNumItems
000890  4681              MOV      r9,r0
;;;565      GUI_SetFont(pObj->Props.pFont);
000892  6ca0              LDR      r0,[r4,#0x48]
000894  f7fffffe          BL       GUI_SetFont
;;;566      /* Calculate clipping rectangle */
;;;567      ClipRect = *(const GUI_RECT*)pMsg->Data.p;
000898  f8d80008          LDR      r0,[r8,#8]
00089c  6801              LDR      r1,[r0,#0]
00089e  9100              STR      r1,[sp,#0]
0008a0  6840              LDR      r0,[r0,#4]
0008a2  9001              STR      r0,[sp,#4]
;;;568      GUI_MoveRect(&ClipRect, -pObj->Widget.Win.Rect.x0, -pObj->Widget.Win.Rect.y0);
0008a4  f9b40002          LDRSH    r0,[r4,#2]
0008a8  4242              RSBS     r2,r0,#0
0008aa  f9b40000          LDRSH    r0,[r4,#0]
0008ae  4241              RSBS     r1,r0,#0
0008b0  4668              MOV      r0,sp
0008b2  f7fffffe          BL       GUI_MoveRect
;;;569      WM_GetInsideRectExScrollbar(hObj, &RectInside);
0008b6  a904              ADD      r1,sp,#0x10
0008b8  4638              MOV      r0,r7
0008ba  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;570      GUI__IntersectRect(&ClipRect, &RectInside);
0008be  a904              ADD      r1,sp,#0x10
0008c0  4668              MOV      r0,sp
0008c2  f7fffffe          BL       GUI__IntersectRect
;;;571      RectItem.x0 = ClipRect.x0;
0008c6  f8bd0000          LDRH     r0,[sp,#0]
0008ca  f8ad0008          STRH     r0,[sp,#8]
;;;572      RectItem.x1 = ClipRect.x1;
0008ce  f8bd0004          LDRH     r0,[sp,#4]
0008d2  f8ad000c          STRH     r0,[sp,#0xc]
;;;573      /* Fill item info structure */
;;;574      ItemInfo.Cmd  = WIDGET_ITEM_DRAW;
0008d6  2000              MOVS     r0,#0
0008d8  9007              STR      r0,[sp,#0x1c]
;;;575      ItemInfo.hWin = hObj;
0008da  f8ad7018          STRH     r7,[sp,#0x18]
;;;576      ItemInfo.x0   = RectInside.x0 - pObj->ScrollStateH.v;
0008de  f9bd1010          LDRSH    r1,[sp,#0x10]
0008e2  6c20              LDR      r0,[r4,#0x40]
0008e4  1a08              SUBS     r0,r1,r0
0008e6  9009              STR      r0,[sp,#0x24]
;;;577      ItemInfo.y0   = RectInside.y0;
0008e8  f9bd0012          LDRSH    r0,[sp,#0x12]
0008ec  900a              STR      r0,[sp,#0x28]
;;;578      /* Do the drawing */
;;;579      for (i = pObj->ScrollStateV.v; i < NumItems; i++) {
0008ee  6b66              LDR      r6,[r4,#0x34]
0008f0  e02e              B        |L1.2384|
                  |L1.2290|
;;;580        RectItem.y0 = ItemInfo.y0;
0008f2  980a              LDR      r0,[sp,#0x28]
0008f4  b200              SXTH     r0,r0
0008f6  f8ad000a          STRH     r0,[sp,#0xa]
;;;581        /* Break when all other rows are outside the drawing area */
;;;582        if (RectItem.y0 > ClipRect.y1) {
0008fa  f9bd000a          LDRSH    r0,[sp,#0xa]
0008fe  f9bd1006          LDRSH    r1,[sp,#6]
000902  4288              CMP      r0,r1
000904  dd00              BLE      |L1.2312|
;;;583          break;
000906  e025              B        |L1.2388|
                  |L1.2312|
;;;584        }
;;;585        ItemDistY = _GetItemSizeY(hObj, pObj, i);
000908  4632              MOV      r2,r6
00090a  4621              MOV      r1,r4
00090c  4638              MOV      r0,r7
00090e  f7fffffe          BL       _GetItemSizeY
000912  4605              MOV      r5,r0
;;;586        RectItem.y1 = RectItem.y0 + ItemDistY - 1;
000914  f8bd100a          LDRH     r1,[sp,#0xa]
000918  1948              ADDS     r0,r1,r5
00091a  1e40              SUBS     r0,r0,#1
00091c  b200              SXTH     r0,r0
00091e  f8ad000e          STRH     r0,[sp,#0xe]
;;;587        /* Make sure that we draw only when row is in drawing area */
;;;588        if (RectItem.y1 >= ClipRect.y0) {
000922  f9bd000e          LDRSH    r0,[sp,#0xe]
000926  f9bd1002          LDRSH    r1,[sp,#2]
00092a  4288              CMP      r0,r1
00092c  db0c              BLT      |L1.2376|
;;;589          /* Set user clip rect */
;;;590          WM_SetUserClipArea(&RectItem);
00092e  a802              ADD      r0,sp,#8
000930  f7fffffe          BL       WM_SetUserClipRect
;;;591          /* Fill item info structure */
;;;592          ItemInfo.ItemIndex = i;
000934  9608              STR      r6,[sp,#0x20]
;;;593          /* Draw item */
;;;594          if (pObj->pfDrawItem) {
000936  6ae0              LDR      r0,[r4,#0x2c]
000938  b118              CBZ      r0,|L1.2370|
;;;595            pObj->pfDrawItem(&ItemInfo);
00093a  a806              ADD      r0,sp,#0x18
00093c  6ae1              LDR      r1,[r4,#0x2c]
00093e  4788              BLX      r1
000940  e002              B        |L1.2376|
                  |L1.2370|
;;;596          } else {
;;;597            LISTBOX_OwnerDraw(&ItemInfo);
000942  a806              ADD      r0,sp,#0x18
000944  f7fffffe          BL       LISTBOX_OwnerDraw
                  |L1.2376|
;;;598          }
;;;599        }
;;;600        ItemInfo.y0 += ItemDistY;
000948  980a              LDR      r0,[sp,#0x28]
00094a  4428              ADD      r0,r0,r5
00094c  900a              STR      r0,[sp,#0x28]
00094e  1c76              ADDS     r6,r6,#1              ;579
                  |L1.2384|
000950  454e              CMP      r6,r9                 ;579
000952  dbce              BLT      |L1.2290|
                  |L1.2388|
000954  bf00              NOP                            ;583
;;;601      }
;;;602      WM_SetUserClipArea(NULL);
000956  2000              MOVS     r0,#0
000958  f7fffffe          BL       WM_SetUserClipRect
;;;603      /* Calculate & clear 'data free' area */
;;;604      RectItem.y0 = ItemInfo.y0;
00095c  980a              LDR      r0,[sp,#0x28]
00095e  b200              SXTH     r0,r0
000960  f8ad000a          STRH     r0,[sp,#0xa]
;;;605      RectItem.y1 = RectInside.y1;
000964  f8bd0016          LDRH     r0,[sp,#0x16]
000968  f8ad000e          STRH     r0,[sp,#0xe]
;;;606      LCD_SetBkColor(pObj->Props.aBackColor[0]);
00096c  6d20              LDR      r0,[r4,#0x50]
00096e  f7fffffe          BL       LCD_SetBkColor
;;;607      GUI_ClearRectEx(&RectItem);
000972  a802              ADD      r0,sp,#8
000974  f7fffffe          BL       GUI_ClearRectEx
;;;608      /* Draw the 3D effect (if configured) */
;;;609      WIDGET__EFFECT_DrawDown(&pObj->Widget);
000978  4620              MOV      r0,r4
00097a  f7fffffe          BL       WIDGET__EFFECT_DrawDown
;;;610    }
00097e  b00b              ADD      sp,sp,#0x2c
000980  e8bd83f0          POP      {r4-r9,pc}
;;;611    
                          ENDP

                  _ToggleMultiSel PROC
;;;615    */
;;;616    static void _ToggleMultiSel(LISTBOX_Handle hObj, LISTBOX_Obj* pObj, int Sel) {
000984  e92d41f0          PUSH     {r4-r8,lr}
000988  4680              MOV      r8,r0
00098a  460c              MOV      r4,r1
00098c  4616              MOV      r6,r2
;;;617      if (pObj->Flags & LISTBOX_SF_MULTISEL) {
00098e  f8940084          LDRB     r0,[r4,#0x84]
000992  f0000004          AND      r0,r0,#4
000996  b1e8              CBZ      r0,|L1.2516|
;;;618        WM_HMEM hItem = GUI_ARRAY_GethItem(&pObj->ItemArray, Sel);
000998  4631              MOV      r1,r6
00099a  f1040028          ADD      r0,r4,#0x28
00099e  f7fffffe          BL       GUI_ARRAY_GethItem
0009a2  4607              MOV      r7,r0
;;;619        if (hItem) {
0009a4  b1af              CBZ      r7,|L1.2514|
;;;620          LISTBOX_ITEM * pItem = (LISTBOX_ITEM *)GUI_ALLOC_h2p(hItem);
0009a6  4638              MOV      r0,r7
0009a8  f7fffffe          BL       GUI_ALLOC_h2p
0009ac  4605              MOV      r5,r0
;;;621          if (!(pItem->Status & LISTBOX_ITEM_DISABLED)) {
0009ae  7928              LDRB     r0,[r5,#4]
0009b0  f0000002          AND      r0,r0,#2
0009b4  b960              CBNZ     r0,|L1.2512|
;;;622            pItem->Status ^= LISTBOX_ITEM_SELECTED;
0009b6  7928              LDRB     r0,[r5,#4]
0009b8  f0800001          EOR      r0,r0,#1
0009bc  7128              STRB     r0,[r5,#4]
;;;623            _NotifyOwner(hObj, WM_NOTIFICATION_SEL_CHANGED);
0009be  2104              MOVS     r1,#4
0009c0  4640              MOV      r0,r8
0009c2  f7fffffe          BL       _NotifyOwner
;;;624            LISTBOX__InvalidateItem(hObj, pObj, Sel);
0009c6  4632              MOV      r2,r6
0009c8  4621              MOV      r1,r4
0009ca  4640              MOV      r0,r8
0009cc  f7fffffe          BL       LISTBOX__InvalidateItem
                  |L1.2512|
;;;625          }
;;;626        }
0009d0  bf00              NOP      
                  |L1.2514|
;;;627      }
0009d2  bf00              NOP      
                  |L1.2516|
;;;628    }
0009d4  e8bd81f0          POP      {r4-r8,pc}
;;;629    
                          ENDP

                  _GetItemFromPos PROC
;;;633    */
;;;634    static int _GetItemFromPos(LISTBOX_Handle hObj, LISTBOX_Obj* pObj, int x, int y) {
0009d8  e92d5ffc          PUSH     {r2-r12,lr}
0009dc  4681              MOV      r9,r0
0009de  460e              MOV      r6,r1
0009e0  4617              MOV      r7,r2
0009e2  461c              MOV      r4,r3
;;;635      int Sel = -1;
0009e4  f04f3aff          MOV      r10,#0xffffffff
;;;636      GUI_RECT Rect;
;;;637      WM_GetInsideRectExScrollbar(hObj, &Rect);
0009e8  4669              MOV      r1,sp
0009ea  4648              MOV      r0,r9
0009ec  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;638      if ((x >= Rect.x0) && (y >= Rect.y0)) {
0009f0  f9bd0000          LDRSH    r0,[sp,#0]
0009f4  42b8              CMP      r0,r7
0009f6  dc20              BGT      |L1.2618|
0009f8  f9bd0002          LDRSH    r0,[sp,#2]
0009fc  42a0              CMP      r0,r4
0009fe  dc1c              BGT      |L1.2618|
;;;639        if ((x <= Rect.x1) && (y <= Rect.y1)) {
000a00  f9bd0004          LDRSH    r0,[sp,#4]
000a04  42b8              CMP      r0,r7
000a06  db18              BLT      |L1.2618|
000a08  f9bd0006          LDRSH    r0,[sp,#6]
000a0c  42a0              CMP      r0,r4
000a0e  db14              BLT      |L1.2618|
;;;640          int NumItems = LISTBOX__GetNumItems(pObj);
000a10  4630              MOV      r0,r6
000a12  f7fffffe          BL       LISTBOX__GetNumItems
000a16  4683              MOV      r11,r0
;;;641          int i, y0 = Rect.y0;
000a18  f9bd8002          LDRSH    r8,[sp,#2]
;;;642          for (i = pObj->ScrollStateV.v; i < NumItems; i++) {
000a1c  6b75              LDR      r5,[r6,#0x34]
000a1e  e009              B        |L1.2612|
                  |L1.2592|
;;;643            if (y >= y0) {
000a20  4544              CMP      r4,r8
000a22  db00              BLT      |L1.2598|
;;;644              Sel = i;
000a24  46aa              MOV      r10,r5
                  |L1.2598|
;;;645            }
;;;646            y0 += _GetItemSizeY(hObj, pObj, i);
000a26  462a              MOV      r2,r5
000a28  4631              MOV      r1,r6
000a2a  4648              MOV      r0,r9
000a2c  f7fffffe          BL       _GetItemSizeY
000a30  4480              ADD      r8,r8,r0
000a32  1c6d              ADDS     r5,r5,#1              ;642
                  |L1.2612|
000a34  455d              CMP      r5,r11                ;642
000a36  dbf3              BLT      |L1.2592|
;;;647          }
;;;648        }
000a38  bf00              NOP      
                  |L1.2618|
;;;649      }
;;;650      return Sel;
000a3a  4650              MOV      r0,r10
;;;651    }
000a3c  e8bd9ffc          POP      {r2-r12,pc}
;;;652    
                          ENDP

                  _OnTouch PROC
;;;656    */
;;;657    static void _OnTouch(LISTBOX_Handle hObj, WM_MESSAGE* pMsg) {
000a40  b570              PUSH     {r4-r6,lr}
000a42  4605              MOV      r5,r0
000a44  460c              MOV      r4,r1
;;;658      const GUI_PID_STATE* pState = (const GUI_PID_STATE*)pMsg->Data.p;
000a46  68a6              LDR      r6,[r4,#8]
;;;659      if (pMsg->Data.p) {  /* Something happened in our area (pressed or released) */
000a48  68a0              LDR      r0,[r4,#8]
000a4a  b130              CBZ      r0,|L1.2650|
;;;660        if (pState->Pressed == 0) {
000a4c  7a30              LDRB     r0,[r6,#8]
000a4e  b940              CBNZ     r0,|L1.2658|
;;;661          _NotifyOwner(hObj, WM_NOTIFICATION_RELEASED);
000a50  2102              MOVS     r1,#2
000a52  4628              MOV      r0,r5
000a54  f7fffffe          BL       _NotifyOwner
000a58  e003              B        |L1.2658|
                  |L1.2650|
;;;662        }
;;;663      } else {     /* Mouse moved out */
;;;664        _NotifyOwner(hObj, WM_NOTIFICATION_MOVED_OUT);
000a5a  2103              MOVS     r1,#3
000a5c  4628              MOV      r0,r5
000a5e  f7fffffe          BL       _NotifyOwner
                  |L1.2658|
;;;665      }
;;;666    }
000a62  bd70              POP      {r4-r6,pc}
;;;667    
                          ENDP

                  LISTBOX_GetSel PROC
;;;1198   */
;;;1199   int  LISTBOX_GetSel (LISTBOX_Handle hObj) {
000a64  b570              PUSH     {r4-r6,lr}
000a66  4605              MOV      r5,r0
;;;1200     int r = -1;
000a68  f04f36ff          MOV      r6,#0xffffffff
;;;1201     LISTBOX_Obj* pObj;
;;;1202     if (hObj) {
000a6c  b12d              CBZ      r5,|L1.2682|
;;;1203       WM_LOCK();
;;;1204       pObj = LISTBOX_H2P(hObj);
000a6e  4628              MOV      r0,r5
000a70  f7fffffe          BL       GUI_ALLOC_h2p
000a74  4604              MOV      r4,r0
;;;1205       r = pObj->Sel;
000a76  f9b46082          LDRSH    r6,[r4,#0x82]
                  |L1.2682|
;;;1206       WM_UNLOCK();
;;;1207     }
;;;1208     return r;
000a7a  4630              MOV      r0,r6
;;;1209   }
000a7c  bd70              POP      {r4-r6,pc}
;;;1210   
                          ENDP

                  _MoveSel PROC
;;;695    */
;;;696    static void _MoveSel(LISTBOX_Handle hObj, int Dir) {
000a7e  e92d5ff0          PUSH     {r4-r12,lr}
000a82  4681              MOV      r9,r0
000a84  460e              MOV      r6,r1
;;;697      int Index, NewSel = -1, NumItems;
000a86  f04f37ff          MOV      r7,#0xffffffff
;;;698      LISTBOX_Obj * pObj;
;;;699      pObj = LISTBOX_H2P(hObj);
000a8a  4648              MOV      r0,r9
000a8c  f7fffffe          BL       GUI_ALLOC_h2p
000a90  4604              MOV      r4,r0
;;;700      Index = LISTBOX_GetSel(hObj);
000a92  4648              MOV      r0,r9
000a94  f7fffffe          BL       LISTBOX_GetSel
000a98  4605              MOV      r5,r0
;;;701      NumItems = LISTBOX__GetNumItems(pObj);
000a9a  4620              MOV      r0,r4
000a9c  f7fffffe          BL       LISTBOX__GetNumItems
000aa0  4682              MOV      r10,r0
;;;702      do {
000aa2  bf00              NOP      
                  |L1.2724|
;;;703        WM_HMEM hItem;
;;;704        Index += Dir;
000aa4  4435              ADD      r5,r5,r6
;;;705        if ((Index < 0) || (Index >= NumItems)) {
000aa6  2d00              CMP      r5,#0
000aa8  db01              BLT      |L1.2734|
000aaa  4555              CMP      r5,r10
000aac  db00              BLT      |L1.2736|
                  |L1.2734|
;;;706          break;
000aae  e015              B        |L1.2780|
                  |L1.2736|
;;;707        }
;;;708        hItem = GUI_ARRAY_GethItem(&pObj->ItemArray, Index);
000ab0  4629              MOV      r1,r5
000ab2  f1040028          ADD      r0,r4,#0x28
000ab6  f7fffffe          BL       GUI_ARRAY_GethItem
000aba  4680              MOV      r8,r0
;;;709        if (hItem) {
000abc  f1b80f00          CMP      r8,#0
000ac0  d00a              BEQ      |L1.2776|
;;;710          LISTBOX_ITEM * pItem = (LISTBOX_ITEM *)GUI_ALLOC_h2p(hItem);
000ac2  4640              MOV      r0,r8
000ac4  f7fffffe          BL       GUI_ALLOC_h2p
000ac8  4683              MOV      r11,r0
;;;711          if (!(pItem->Status & LISTBOX_ITEM_DISABLED)) {
000aca  f89b0004          LDRB     r0,[r11,#4]
000ace  f0000002          AND      r0,r0,#2
000ad2  b900              CBNZ     r0,|L1.2774|
;;;712            NewSel = Index;
000ad4  462f              MOV      r7,r5
                  |L1.2774|
;;;713          }
;;;714        }
000ad6  bf00              NOP      
                  |L1.2776|
;;;715      } while(NewSel < 0);
000ad8  2f00              CMP      r7,#0
000ada  dbe3              BLT      |L1.2724|
                  |L1.2780|
000adc  bf00              NOP                            ;706
;;;716      if (NewSel >= 0) {
000ade  2f00              CMP      r7,#0
000ae0  db04              BLT      |L1.2796|
;;;717        LISTBOX_SetSel(hObj, NewSel);
000ae2  4639              MOV      r1,r7
000ae4  4648              MOV      r0,r9
000ae6  f7fffffe          BL       LISTBOX_SetSel
000aea  e012              B        |L1.2834|
                  |L1.2796|
;;;718      } else {
;;;719        int PrevScrollStateV;
;;;720        PrevScrollStateV = pObj->ScrollStateV.v;
000aec  f8d48034          LDR      r8,[r4,#0x34]
;;;721        pObj->ScrollStateV.v += Dir;
000af0  6b60              LDR      r0,[r4,#0x34]
000af2  1981              ADDS     r1,r0,r6
000af4  6361              STR      r1,[r4,#0x34]
;;;722        WM_CheckScrollBounds(&pObj->ScrollStateV);
000af6  f1040030          ADD      r0,r4,#0x30
000afa  f7fffffe          BL       WM_CheckScrollBounds
;;;723        if (PrevScrollStateV != pObj->ScrollStateV.v) {
000afe  6b60              LDR      r0,[r4,#0x34]
000b00  4540              CMP      r0,r8
000b02  d002              BEQ      |L1.2826|
;;;724          LISTBOX__InvalidateInsideArea(hObj);
000b04  4648              MOV      r0,r9
000b06  f7fffffe          BL       LISTBOX__InvalidateInsideArea
                  |L1.2826|
;;;725        }
;;;726        LISTBOX_UpdateScrollers(hObj);
000b0a  4648              MOV      r0,r9
000b0c  f7fffffe          BL       LISTBOX_UpdateScrollers
;;;727      }
000b10  bf00              NOP      
                  |L1.2834|
;;;728    }
000b12  e8bd9ff0          POP      {r4-r12,pc}
;;;729    
                          ENDP

                  LISTBOX_DecSel PROC
;;;1226   */
;;;1227   void LISTBOX_DecSel      (LISTBOX_Handle hObj) {
000b16  b510              PUSH     {r4,lr}
000b18  4604              MOV      r4,r0
;;;1228     if (hObj) {
000b1a  b124              CBZ      r4,|L1.2854|
;;;1229       WM_LOCK();
;;;1230       _MoveSel(hObj, -1);
000b1c  f04f31ff          MOV      r1,#0xffffffff
000b20  4620              MOV      r0,r4
000b22  f7fffffe          BL       _MoveSel
                  |L1.2854|
;;;1231       WM_UNLOCK();
;;;1232     }
;;;1233   }
000b26  bd10              POP      {r4,pc}
;;;1234   
                          ENDP

                  LISTBOX_IncSel PROC
;;;1214   */
;;;1215   void LISTBOX_IncSel      (LISTBOX_Handle hObj) {
000b28  b510              PUSH     {r4,lr}
000b2a  4604              MOV      r4,r0
;;;1216     if (hObj) {
000b2c  b11c              CBZ      r4,|L1.2870|
;;;1217       WM_LOCK();
;;;1218       _MoveSel(hObj, 1);
000b2e  2101              MOVS     r1,#1
000b30  4620              MOV      r0,r4
000b32  f7fffffe          BL       _MoveSel
                  |L1.2870|
;;;1219       WM_UNLOCK();
;;;1220     }
;;;1221   }
000b36  bd10              POP      {r4,pc}
;;;1222   
                          ENDP

                  _AddKey PROC
;;;736    */
;;;737    static int _AddKey(LISTBOX_Handle hObj, int Key) {
000b38  b570              PUSH     {r4-r6,lr}
000b3a  4606              MOV      r6,r0
000b3c  460d              MOV      r5,r1
;;;738      LISTBOX_Obj* pObj;
;;;739      pObj = LISTBOX_H2P(hObj);
000b3e  4630              MOV      r0,r6
000b40  f7fffffe          BL       GUI_ALLOC_h2p
000b44  4604              MOV      r4,r0
;;;740      switch (Key) {
000b46  2d12              CMP      r5,#0x12
000b48  d011              BEQ      |L1.2926|
000b4a  dc04              BGT      |L1.2902|
000b4c  2d10              CMP      r5,#0x10
000b4e  d01f              BEQ      |L1.2960|
000b50  2d11              CMP      r5,#0x11
000b52  d138              BNE      |L1.3014|
000b54  e032              B        |L1.3004|
                  |L1.2902|
000b56  2d13              CMP      r5,#0x13
000b58  d02b              BEQ      |L1.2994|
000b5a  2d20              CMP      r5,#0x20
000b5c  d133              BNE      |L1.3014|
;;;741      case GUI_KEY_SPACE:
;;;742        _ToggleMultiSel(hObj, pObj, pObj->Sel);
000b5e  f9b42082          LDRSH    r2,[r4,#0x82]
000b62  4621              MOV      r1,r4
000b64  4630              MOV      r0,r6
000b66  f7fffffe          BL       _ToggleMultiSel
;;;743        return 1;               /* Key has been consumed */
000b6a  2001              MOVS     r0,#1
                  |L1.2924|
;;;744      case GUI_KEY_RIGHT:
;;;745        if (WM_SetScrollValue(&pObj->ScrollStateH, pObj->ScrollStateH.v + pObj->Props.ScrollStepH)) {
;;;746          LISTBOX_UpdateScrollers(hObj);
;;;747          LISTBOX__InvalidateInsideArea(hObj);
;;;748        }
;;;749        return 1;               /* Key has been consumed */
;;;750      case GUI_KEY_LEFT:
;;;751        if (WM_SetScrollValue(&pObj->ScrollStateH, pObj->ScrollStateH.v - pObj->Props.ScrollStepH)) {
;;;752          LISTBOX_UpdateScrollers(hObj);
;;;753          LISTBOX__InvalidateInsideArea(hObj);
;;;754        }
;;;755        return 1;               /* Key has been consumed */
;;;756      case GUI_KEY_DOWN:
;;;757        LISTBOX_IncSel(hObj);
;;;758        return 1;               /* Key has been consumed */
;;;759      case GUI_KEY_UP:
;;;760        LISTBOX_DecSel(hObj);
;;;761        return 1;               /* Key has been consumed */
;;;762      default:
;;;763        if(_IsAlphaNum(Key)) {
;;;764          _SelectByKey(hObj, Key);
;;;765          return 1;               /* Key has been consumed */
;;;766        }
;;;767      }
;;;768      return 0;
;;;769    }
000b6c  bd70              POP      {r4-r6,pc}
                  |L1.2926|
000b6e  204c              MOVS     r0,#0x4c              ;745
000b70  5b00              LDRH     r0,[r0,r4]            ;745
000b72  6c22              LDR      r2,[r4,#0x40]         ;745
000b74  1811              ADDS     r1,r2,r0              ;745
000b76  f104003c          ADD      r0,r4,#0x3c           ;745
000b7a  f7fffffe          BL       WM_SetScrollValue
000b7e  b128              CBZ      r0,|L1.2956|
000b80  4630              MOV      r0,r6                 ;746
000b82  f7fffffe          BL       LISTBOX_UpdateScrollers
000b86  4630              MOV      r0,r6                 ;747
000b88  f7fffffe          BL       LISTBOX__InvalidateInsideArea
                  |L1.2956|
000b8c  2001              MOVS     r0,#1                 ;749
000b8e  e7ed              B        |L1.2924|
                  |L1.2960|
000b90  204c              MOVS     r0,#0x4c              ;751
000b92  5b00              LDRH     r0,[r0,r4]            ;751
000b94  6c22              LDR      r2,[r4,#0x40]         ;751
000b96  1a11              SUBS     r1,r2,r0              ;751
000b98  f104003c          ADD      r0,r4,#0x3c           ;751
000b9c  f7fffffe          BL       WM_SetScrollValue
000ba0  b128              CBZ      r0,|L1.2990|
000ba2  4630              MOV      r0,r6                 ;752
000ba4  f7fffffe          BL       LISTBOX_UpdateScrollers
000ba8  4630              MOV      r0,r6                 ;753
000baa  f7fffffe          BL       LISTBOX__InvalidateInsideArea
                  |L1.2990|
000bae  2001              MOVS     r0,#1                 ;755
000bb0  e7dc              B        |L1.2924|
                  |L1.2994|
000bb2  4630              MOV      r0,r6                 ;757
000bb4  f7fffffe          BL       LISTBOX_IncSel
000bb8  2001              MOVS     r0,#1                 ;758
000bba  e7d7              B        |L1.2924|
                  |L1.3004|
000bbc  4630              MOV      r0,r6                 ;760
000bbe  f7fffffe          BL       LISTBOX_DecSel
000bc2  2001              MOVS     r0,#1                 ;761
000bc4  e7d2              B        |L1.2924|
                  |L1.3014|
000bc6  4628              MOV      r0,r5                 ;763
000bc8  f7fffffe          BL       _IsAlphaNum
000bcc  b128              CBZ      r0,|L1.3034|
000bce  4629              MOV      r1,r5                 ;764
000bd0  4630              MOV      r0,r6                 ;764
000bd2  f7fffffe          BL       _SelectByKey
000bd6  2001              MOVS     r0,#1                 ;765
000bd8  e7c8              B        |L1.2924|
                  |L1.3034|
000bda  bf00              NOP                            ;740
000bdc  bf00              NOP                            ;740
000bde  2000              MOVS     r0,#0                 ;768
000be0  e7c4              B        |L1.2924|
;;;770    
                          ENDP

                  LISTBOX__InvalidateItemSize PROC
;;;824    */
;;;825    void LISTBOX__InvalidateItemSize(const LISTBOX_Obj* pObj, unsigned Index) {
000be2  b570              PUSH     {r4-r6,lr}
000be4  4605              MOV      r5,r0
000be6  460e              MOV      r6,r1
;;;826      LISTBOX_ITEM* pItem;
;;;827      pItem = (LISTBOX_ITEM*)GUI_ARRAY_GetpItem(&pObj->ItemArray, Index);
000be8  4631              MOV      r1,r6
000bea  f1050028          ADD      r0,r5,#0x28
000bee  f7fffffe          BL       GUI_ARRAY_GetpItem
000bf2  4604              MOV      r4,r0
;;;828      if (pItem) {
000bf4  b114              CBZ      r4,|L1.3068|
;;;829        pItem->xSize = 0;
000bf6  2000              MOVS     r0,#0
000bf8  8020              STRH     r0,[r4,#0]
;;;830        pItem->ySize = 0;
000bfa  8060              STRH     r0,[r4,#2]
                  |L1.3068|
;;;831      }
;;;832    }
000bfc  bd70              POP      {r4-r6,pc}
;;;833    
                          ENDP

                  LISTBOX__InvalidateItemAndBelow PROC
;;;867    */
;;;868    void LISTBOX__InvalidateItemAndBelow(LISTBOX_Handle hObj, const LISTBOX_Obj* pObj, int Sel) {
000bfe  e92d41fc          PUSH     {r2-r8,lr}
000c02  4606              MOV      r6,r0
000c04  460f              MOV      r7,r1
000c06  4614              MOV      r4,r2
;;;869      if (Sel >= 0) {
000c08  2c00              CMP      r4,#0
000c0a  db17              BLT      |L1.3132|
;;;870        int ItemPosY;
;;;871        ItemPosY = _GetItemPosY(hObj, pObj, Sel);
000c0c  4622              MOV      r2,r4
000c0e  4639              MOV      r1,r7
000c10  4630              MOV      r0,r6
000c12  f7fffffe          BL       _GetItemPosY
000c16  4605              MOV      r5,r0
;;;872        if (ItemPosY >= 0) {
000c18  2d00              CMP      r5,#0
000c1a  db0e              BLT      |L1.3130|
;;;873          GUI_RECT Rect;
;;;874          WM_GetInsideRectExScrollbar(hObj, &Rect);
000c1c  4669              MOV      r1,sp
000c1e  4630              MOV      r0,r6
000c20  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;875          Rect.y0 += ItemPosY;
000c24  f8bd0002          LDRH     r0,[sp,#2]
000c28  4428              ADD      r0,r0,r5
000c2a  b200              SXTH     r0,r0
000c2c  f8ad0002          STRH     r0,[sp,#2]
;;;876          WM_InvalidateRect(hObj, &Rect);
000c30  4669              MOV      r1,sp
000c32  4630              MOV      r0,r6
000c34  f7fffffe          BL       WM_InvalidateRect
;;;877        }
000c38  bf00              NOP      
                  |L1.3130|
;;;878      }
000c3a  bf00              NOP      
                  |L1.3132|
;;;879    }
000c3c  e8bd81fc          POP      {r2-r8,pc}
;;;880    
                          ENDP

                  LISTBOX_AddKey PROC
;;;1101   */
;;;1102   int LISTBOX_AddKey(LISTBOX_Handle hObj, int Key) {
000c40  b570              PUSH     {r4-r6,lr}
000c42  4604              MOV      r4,r0
000c44  460d              MOV      r5,r1
;;;1103     int r = 0;
000c46  2600              MOVS     r6,#0
;;;1104     if (hObj) {
000c48  b124              CBZ      r4,|L1.3156|
;;;1105       WM_LOCK();
;;;1106       r = _AddKey(hObj, Key);
000c4a  4629              MOV      r1,r5
000c4c  4620              MOV      r0,r4
000c4e  f7fffffe          BL       _AddKey
000c52  4606              MOV      r6,r0
                  |L1.3156|
;;;1107       WM_UNLOCK();
;;;1108     }
;;;1109     return r;
000c54  4630              MOV      r0,r6
;;;1110   }
000c56  bd70              POP      {r4-r6,pc}
;;;1111   
                          ENDP

                  LISTBOX_Callback PROC
;;;926    */
;;;927    void LISTBOX_Callback(WM_MESSAGE * pMsg) {
000c58  e92d41f0          PUSH     {r4-r8,lr}
000c5c  b086              SUB      sp,sp,#0x18
000c5e  4604              MOV      r4,r0
;;;928      LISTBOX_Handle hObj;
;;;929      LISTBOX_Obj * pObj;
;;;930      WM_SCROLL_STATE ScrollState;
;;;931      WM_MESSAGE Msg;
;;;932      hObj = pMsg->hWin;
000c60  f9b48004          LDRSH    r8,[r4,#4]
;;;933      pObj = (LISTBOX_Obj *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
000c64  4640              MOV      r0,r8
000c66  f7fffffe          BL       GUI_ALLOC_h2p
000c6a  4605              MOV      r5,r0
;;;934      /* Let widget handle the standard messages */
;;;935      if (WIDGET_HandleActive(hObj, pMsg) == 0) {
000c6c  4621              MOV      r1,r4
000c6e  4640              MOV      r0,r8
000c70  f7fffffe          BL       WIDGET_HandleActive
000c74  b958              CBNZ     r0,|L1.3214|
;;;936        /* Owner needs to be informed about focus change */
;;;937        if (pMsg->MsgId == WM_SET_FOCUS) {
000c76  6820              LDR      r0,[r4,#0]
000c78  281e              CMP      r0,#0x1e
000c7a  d105              BNE      |L1.3208|
;;;938          if (pMsg->Data.v == 0) {            /* Lost focus ? */
000c7c  68a0              LDR      r0,[r4,#8]
000c7e  b918              CBNZ     r0,|L1.3208|
;;;939            _NotifyOwner(hObj, LISTBOX_NOTIFICATION_LOST_FOCUS);
000c80  210b              MOVS     r1,#0xb
000c82  4640              MOV      r0,r8
000c84  f7fffffe          BL       _NotifyOwner
                  |L1.3208|
;;;940          }
;;;941        }
;;;942        return;
;;;943      }
;;;944      switch (pMsg->MsgId) {
;;;945      case WM_NOTIFY_PARENT:
;;;946        switch (pMsg->Data.v) {
;;;947        case WM_NOTIFICATION_VALUE_CHANGED:
;;;948          if (pMsg->hWinSrc  == WM_GetScrollbarV(hObj)) {
;;;949            WM_GetScrollState(pMsg->hWinSrc, &ScrollState);
;;;950            pObj->ScrollStateV.v = ScrollState.v;
;;;951            LISTBOX__InvalidateInsideArea(hObj);
;;;952            _NotifyOwner(hObj, WM_NOTIFICATION_SCROLL_CHANGED);
;;;953          } else if (pMsg->hWinSrc == WM_GetScrollbarH(hObj)) {
;;;954            WM_GetScrollState(pMsg->hWinSrc, &ScrollState);
;;;955            pObj->ScrollStateH.v = ScrollState.v;
;;;956            LISTBOX__InvalidateInsideArea(hObj);
;;;957            _NotifyOwner(hObj, WM_NOTIFICATION_SCROLL_CHANGED);
;;;958          }
;;;959          break;
;;;960        case WM_NOTIFICATION_SCROLLBAR_ADDED:
;;;961          #if WIDGET_USE_PARENT_EFFECT
;;;962            WIDGET_SetEffect(pMsg->hWinSrc, pObj->Widget.pEffect);
;;;963          #endif
;;;964          LISTBOX_UpdateScrollers(hObj);
;;;965          break;
;;;966        }
;;;967        break;
;;;968      case WM_PAINT:
;;;969        _OnPaint(hObj, pObj, pMsg);
;;;970        break;
;;;971      case WM_PID_STATE_CHANGED:
;;;972        {
;;;973          const WM_PID_STATE_CHANGED_INFO* pInfo = (const WM_PID_STATE_CHANGED_INFO*)pMsg->Data.p;
;;;974          if (pInfo->State) {
;;;975            int Sel;
;;;976            Sel = _GetItemFromPos(hObj, pObj, pInfo->x, pInfo->y);
;;;977            if (Sel >= 0) {
;;;978              _ToggleMultiSel(hObj, pObj, Sel);
;;;979              LISTBOX_SetSel(hObj, Sel);
;;;980            }
;;;981            _NotifyOwner(hObj, WM_NOTIFICATION_CLICKED);
;;;982            return;
;;;983          }
;;;984        }
;;;985        break;
;;;986      case WM_TOUCH:
;;;987        _OnTouch(hObj, pMsg);
;;;988        return;
;;;989    #if GUI_SUPPORT_MOUSE
;;;990      case WM_MOUSEOVER:
;;;991        if (_OnMouseOver(hObj, pObj, pMsg) == 0)
;;;992          return;
;;;993        break;
;;;994    #endif
;;;995      case WM_DELETE:
;;;996        _FreeAttached(pObj);
;;;997        break;       /* No return here ... WM_DefaultProc needs to be called */
;;;998      case WM_KEY:
;;;999        if (((const WM_KEY_INFO*)(pMsg->Data.p))->PressedCnt > 0) {
;;;1000         int Key;
;;;1001         Key = ((const WM_KEY_INFO*)(pMsg->Data.p))->Key;
;;;1002         if (LISTBOX_AddKey(hObj, Key)) {
;;;1003           return;
;;;1004         }
;;;1005       }
;;;1006       /* Send a WM_NOTIFY_OWNER_KEY message with the key information to the owner window */
;;;1007       Msg = *pMsg;
;;;1008       Msg.MsgId = WM_NOTIFY_OWNER_KEY;
;;;1009       _SendToOwner(hObj, &Msg);
;;;1010       if (!WM_IsWindow(hObj)) {
;;;1011         return;
;;;1012       }
;;;1013       break;
;;;1014     case WM_SIZE:
;;;1015       LISTBOX_UpdateScrollers(hObj);
;;;1016       WM_InvalidateWindow(hObj);
;;;1017       break;
;;;1018     }
;;;1019     WM_DefaultProc(pMsg);
;;;1020   }
000c88  b006              ADD      sp,sp,#0x18
000c8a  e8bd81f0          POP      {r4-r8,pc}
                  |L1.3214|
000c8e  6820              LDR      r0,[r4,#0]            ;944
000c90  280e              CMP      r0,#0xe               ;944
000c92  d071              BEQ      |L1.3448|
000c94  dc06              BGT      |L1.3236|
000c96  2805              CMP      r0,#5                 ;944
000c98  d06d              BEQ      |L1.3446|
000c9a  280b              CMP      r0,#0xb               ;944
000c9c  d066              BEQ      |L1.3436|
000c9e  280c              CMP      r0,#0xc               ;944
                  |L1.3232|
000ca0  d13d              BNE      |L1.3358|
000ca2  e05e              B        |L1.3426|
                  |L1.3236|
000ca4  280f              CMP      r0,#0xf               ;944
000ca6  d03b              BEQ      |L1.3360|
000ca8  2811              CMP      r0,#0x11              ;944
000caa  d03f              BEQ      |L1.3372|
000cac  2826              CMP      r0,#0x26              ;944
000cae  d1f7              BNE      |L1.3232|
000cb0  68a0              LDR      r0,[r4,#8]            ;946
000cb2  2805              CMP      r0,#5                 ;946
000cb4  d002              BEQ      |L1.3260|
000cb6  2806              CMP      r0,#6                 ;946
000cb8  d130              BNE      |L1.3356|
000cba  e02b              B        |L1.3348|
                  |L1.3260|
000cbc  4640              MOV      r0,r8                 ;948
000cbe  f7fffffe          BL       WM_GetScrollbarV
000cc2  f9b41006          LDRSH    r1,[r4,#6]            ;948
000cc6  4288              CMP      r0,r1                 ;948
000cc8  d10e              BNE      |L1.3304|
000cca  f9b40006          LDRSH    r0,[r4,#6]            ;949
000cce  a903              ADD      r1,sp,#0xc            ;949
000cd0  f7fffffe          BL       WM_GetScrollState
000cd4  9904              LDR      r1,[sp,#0x10]         ;950
000cd6  6369              STR      r1,[r5,#0x34]         ;950
000cd8  4640              MOV      r0,r8                 ;951
000cda  f7fffffe          BL       LISTBOX__InvalidateInsideArea
000cde  210a              MOVS     r1,#0xa               ;952
000ce0  4640              MOV      r0,r8                 ;952
000ce2  f7fffffe          BL       _NotifyOwner
000ce6  e014              B        |L1.3346|
                  |L1.3304|
000ce8  4640              MOV      r0,r8                 ;953
000cea  f7fffffe          BL       WM_GetScrollbarH
000cee  f9b41006          LDRSH    r1,[r4,#6]            ;953
000cf2  4288              CMP      r0,r1                 ;953
000cf4  d10d              BNE      |L1.3346|
000cf6  f9b40006          LDRSH    r0,[r4,#6]            ;954
000cfa  a903              ADD      r1,sp,#0xc            ;954
000cfc  f7fffffe          BL       WM_GetScrollState
000d00  9904              LDR      r1,[sp,#0x10]         ;955
000d02  6429              STR      r1,[r5,#0x40]         ;955
000d04  4640              MOV      r0,r8                 ;956
000d06  f7fffffe          BL       LISTBOX__InvalidateInsideArea
000d0a  210a              MOVS     r1,#0xa               ;957
000d0c  4640              MOV      r0,r8                 ;957
000d0e  f7fffffe          BL       _NotifyOwner
                  |L1.3346|
000d12  e003              B        |L1.3356|
                  |L1.3348|
000d14  4640              MOV      r0,r8                 ;964
000d16  f7fffffe          BL       LISTBOX_UpdateScrollers
000d1a  bf00              NOP                            ;965
                  |L1.3356|
000d1c  bf00              NOP                            ;959
                  |L1.3358|
000d1e  e04f              B        |L1.3520|
                  |L1.3360|
000d20  4622              MOV      r2,r4                 ;969
000d22  4629              MOV      r1,r5                 ;969
000d24  4640              MOV      r0,r8                 ;969
000d26  f7fffffe          BL       _OnPaint
000d2a  e049              B        |L1.3520|
                  |L1.3372|
000d2c  68a6              LDR      r6,[r4,#8]            ;973
000d2e  7a30              LDRB     r0,[r6,#8]            ;974
000d30  b1b0              CBZ      r0,|L1.3424|
000d32  4629              MOV      r1,r5                 ;976
000d34  4640              MOV      r0,r8                 ;976
000d36  e9d62300          LDRD     r2,r3,[r6,#0]         ;976
000d3a  f7fffffe          BL       _GetItemFromPos
000d3e  4607              MOV      r7,r0                 ;976
000d40  2f00              CMP      r7,#0                 ;977
000d42  db08              BLT      |L1.3414|
000d44  463a              MOV      r2,r7                 ;978
000d46  4629              MOV      r1,r5                 ;978
000d48  4640              MOV      r0,r8                 ;978
000d4a  f7fffffe          BL       _ToggleMultiSel
000d4e  4639              MOV      r1,r7                 ;979
000d50  4640              MOV      r0,r8                 ;979
000d52  f7fffffe          BL       LISTBOX_SetSel
                  |L1.3414|
000d56  2101              MOVS     r1,#1                 ;981
000d58  4640              MOV      r0,r8                 ;981
000d5a  f7fffffe          BL       _NotifyOwner
000d5e  e793              B        |L1.3208|
                  |L1.3424|
000d60  e02e              B        |L1.3520|
                  |L1.3426|
000d62  4621              MOV      r1,r4                 ;987
000d64  4640              MOV      r0,r8                 ;987
000d66  f7fffffe          BL       _OnTouch
000d6a  e78d              B        |L1.3208|
                  |L1.3436|
000d6c  4628              MOV      r0,r5                 ;996
000d6e  f7fffffe          BL       _FreeAttached
000d72  e025              B        |L1.3520|
000d74  e000              B        |L1.3448|
                  |L1.3446|
000d76  e01c              B        |L1.3506|
                  |L1.3448|
000d78  68a0              LDR      r0,[r4,#8]            ;999
000d7a  6840              LDR      r0,[r0,#4]            ;999
000d7c  2800              CMP      r0,#0                 ;999
000d7e  dd08              BLE      |L1.3474|
000d80  68a0              LDR      r0,[r4,#8]            ;1001
000d82  6806              LDR      r6,[r0,#0]            ;1001
000d84  4631              MOV      r1,r6                 ;1002
000d86  4640              MOV      r0,r8                 ;1002
000d88  f7fffffe          BL       LISTBOX_AddKey
000d8c  b100              CBZ      r0,|L1.3472|
000d8e  e77b              B        |L1.3208|
                  |L1.3472|
000d90  bf00              NOP                            ;1005
                  |L1.3474|
000d92  e8940007          LDM      r4,{r0-r2}            ;1007
000d96  e88d0007          STM      sp,{r0-r2}            ;1007
000d9a  2021              MOVS     r0,#0x21              ;1008
000d9c  9000              STR      r0,[sp,#0]            ;1008
000d9e  4669              MOV      r1,sp                 ;1009
000da0  4640              MOV      r0,r8                 ;1009
000da2  f7fffffe          BL       _SendToOwner
000da6  4640              MOV      r0,r8                 ;1010
000da8  f7fffffe          BL       WM_IsWindow
000dac  b900              CBNZ     r0,|L1.3504|
000dae  e76b              B        |L1.3208|
                  |L1.3504|
000db0  e006              B        |L1.3520|
                  |L1.3506|
000db2  4640              MOV      r0,r8                 ;1015
000db4  f7fffffe          BL       LISTBOX_UpdateScrollers
000db8  4640              MOV      r0,r8                 ;1016
000dba  f7fffffe          BL       WM_InvalidateWindow
000dbe  bf00              NOP                            ;1017
                  |L1.3520|
000dc0  bf00              NOP                            ;967
000dc2  4620              MOV      r0,r4                 ;1019
000dc4  f7fffffe          BL       WM_DefaultProc
000dc8  bf00              NOP      
000dca  e75d              B        |L1.3208|
;;;1021   
                          ENDP

                  LISTBOX_InvalidateItem PROC
;;;1069   */
;;;1070   void LISTBOX_InvalidateItem(LISTBOX_Handle hObj, int Index) {
000dcc  e92d41f0          PUSH     {r4-r8,lr}
000dd0  4606              MOV      r6,r0
000dd2  460c              MOV      r4,r1
;;;1071     if (hObj) {
000dd4  b346              CBZ      r6,|L1.3624|
;;;1072       LISTBOX_Obj* pObj;
;;;1073       int NumItems;
;;;1074       WM_LOCK();
;;;1075       pObj = LISTBOX_H2P(hObj);
000dd6  4630              MOV      r0,r6
000dd8  f7fffffe          BL       GUI_ALLOC_h2p
000ddc  4680              MOV      r8,r0
;;;1076       NumItems = LISTBOX__GetNumItems(pObj);
000dde  4640              MOV      r0,r8
000de0  f7fffffe          BL       LISTBOX__GetNumItems
000de4  4607              MOV      r7,r0
;;;1077       if (Index < NumItems) {
000de6  42bc              CMP      r4,r7
000de8  da1d              BGE      |L1.3622|
;;;1078         if (Index < 0) {
000dea  2c00              CMP      r4,#0
000dec  da0f              BGE      |L1.3598|
;;;1079           int i;
;;;1080           for (i = 0; i < NumItems; i++) {
000dee  2500              MOVS     r5,#0
000df0  e004              B        |L1.3580|
                  |L1.3570|
;;;1081             LISTBOX__InvalidateItemSize(pObj, i);
000df2  4629              MOV      r1,r5
000df4  4640              MOV      r0,r8
000df6  f7fffffe          BL       LISTBOX__InvalidateItemSize
000dfa  1c6d              ADDS     r5,r5,#1              ;1080
                  |L1.3580|
000dfc  42bd              CMP      r5,r7                 ;1080
000dfe  dbf8              BLT      |L1.3570|
;;;1082           }
;;;1083           LISTBOX_UpdateScrollers(hObj);
000e00  4630              MOV      r0,r6
000e02  f7fffffe          BL       LISTBOX_UpdateScrollers
;;;1084           LISTBOX__InvalidateInsideArea(hObj);
000e06  4630              MOV      r0,r6
000e08  f7fffffe          BL       LISTBOX__InvalidateInsideArea
;;;1085         } else {
000e0c  e00b              B        |L1.3622|
                  |L1.3598|
;;;1086           LISTBOX__InvalidateItemSize(pObj, Index);
000e0e  4621              MOV      r1,r4
000e10  4640              MOV      r0,r8
000e12  f7fffffe          BL       LISTBOX__InvalidateItemSize
;;;1087           LISTBOX_UpdateScrollers(hObj);
000e16  4630              MOV      r0,r6
000e18  f7fffffe          BL       LISTBOX_UpdateScrollers
;;;1088           LISTBOX__InvalidateItemAndBelow(hObj, pObj, Index);
000e1c  4622              MOV      r2,r4
000e1e  4641              MOV      r1,r8
000e20  4630              MOV      r0,r6
000e22  f7fffffe          BL       LISTBOX__InvalidateItemAndBelow
                  |L1.3622|
;;;1089         }
;;;1090       }
;;;1091       WM_UNLOCK();
;;;1092     }
000e26  bf00              NOP      
                  |L1.3624|
;;;1093   }
000e28  e8bd81f0          POP      {r4-r8,pc}
;;;1094   
                          ENDP

                  LISTBOX_AddString PROC
;;;1115   */
;;;1116   void LISTBOX_AddString(LISTBOX_Handle hObj, const char* s) {
000e2c  e92d41fc          PUSH     {r2-r8,lr}
000e30  4606              MOV      r6,r0
000e32  460d              MOV      r5,r1
;;;1117     if (hObj && s) {
000e34  b386              CBZ      r6,|L1.3736|
000e36  b37d              CBZ      r5,|L1.3736|
;;;1118       LISTBOX_Obj* pObj;
;;;1119       LISTBOX_ITEM Item = {0, 0};
000e38  2000              MOVS     r0,#0
000e3a  9000              STR      r0,[sp,#0]
000e3c  9001              STR      r0,[sp,#4]
;;;1120       WM_LOCK();
;;;1121       pObj = LISTBOX_H2P(hObj);
000e3e  4630              MOV      r0,r6
000e40  f7fffffe          BL       GUI_ALLOC_h2p
000e44  4604              MOV      r4,r0
;;;1122       if (GUI_ARRAY_AddItem(&pObj->ItemArray, &Item, sizeof(LISTBOX_ITEM) + strlen(s)) == 0) {
000e46  4628              MOV      r0,r5
000e48  f7fffffe          BL       strlen
000e4c  1d87              ADDS     r7,r0,#6
000e4e  463a              MOV      r2,r7
000e50  4669              MOV      r1,sp
000e52  f1040028          ADD      r0,r4,#0x28
000e56  f7fffffe          BL       GUI_ARRAY_AddItem
000e5a  b9e0              CBNZ     r0,|L1.3734|
;;;1123         unsigned ItemIndex = GUI_ARRAY_GetNumItems(&pObj->ItemArray) - 1;
000e5c  f1040028          ADD      r0,r4,#0x28
000e60  f7fffffe          BL       GUI_ARRAY_GetNumItems
000e64  1e47              SUBS     r7,r0,#1
;;;1124         LISTBOX_ITEM* pItem= (LISTBOX_ITEM*)GUI_ARRAY_GetpItem(&pObj->ItemArray, ItemIndex);
000e66  4639              MOV      r1,r7
000e68  f1040028          ADD      r0,r4,#0x28
000e6c  f7fffffe          BL       GUI_ARRAY_GetpItem
000e70  4680              MOV      r8,r0
;;;1125         strcpy(pItem->acText, s);
000e72  4629              MOV      r1,r5
000e74  f1080005          ADD      r0,r8,#5
000e78  f7fffffe          BL       strcpy
;;;1126         LISTBOX__InvalidateItemSize(pObj, ItemIndex);
000e7c  4639              MOV      r1,r7
000e7e  4620              MOV      r0,r4
000e80  f7fffffe          BL       LISTBOX__InvalidateItemSize
;;;1127         LISTBOX_UpdateScrollers(hObj);
000e84  4630              MOV      r0,r6
000e86  f7fffffe          BL       LISTBOX_UpdateScrollers
;;;1128         LISTBOX__InvalidateItem(hObj, pObj, ItemIndex);
000e8a  463a              MOV      r2,r7
000e8c  4621              MOV      r1,r4
000e8e  4630              MOV      r0,r6
000e90  f7fffffe          BL       LISTBOX__InvalidateItem
;;;1129       }
000e94  bf00              NOP      
                  |L1.3734|
;;;1130       WM_UNLOCK();
;;;1131     }
000e96  bf00              NOP      
                  |L1.3736|
;;;1132   }
000e98  e8bd81fc          POP      {r2-r8,pc}
;;;1133   
                          ENDP

                  LISTBOX_SetText PROC
;;;1137   */
;;;1138   void LISTBOX_SetText(LISTBOX_Handle hObj, const GUI_ConstString* ppText) {
000e9c  e92d41f0          PUSH     {r4-r8,lr}
000ea0  4606              MOV      r6,r0
000ea2  460c              MOV      r4,r1
;;;1139     if (hObj) {
000ea4  b18e              CBZ      r6,|L1.3786|
;;;1140       int i;
;;;1141       const char* s;
;;;1142       WM_LOCK();
;;;1143       if (ppText) {
000ea6  b154              CBZ      r4,|L1.3774|
;;;1144         for (i = 0; (s = *(ppText+i)) != 0; i++) {
000ea8  2500              MOVS     r5,#0
000eaa  e004              B        |L1.3766|
                  |L1.3756|
;;;1145           LISTBOX_AddString(hObj, s);
000eac  4639              MOV      r1,r7
000eae  4630              MOV      r0,r6
000eb0  f7fffffe          BL       LISTBOX_AddString
000eb4  1c6d              ADDS     r5,r5,#1              ;1144
                  |L1.3766|
000eb6  f8547025          LDR      r7,[r4,r5,LSL #2]     ;1144
000eba  2f00              CMP      r7,#0                 ;1144
000ebc  d1f6              BNE      |L1.3756|
                  |L1.3774|
;;;1146         }
;;;1147       }
;;;1148       LISTBOX_InvalidateItem(hObj, LISTBOX_ALL_ITEMS);
000ebe  f04f31ff          MOV      r1,#0xffffffff
000ec2  4630              MOV      r0,r6
000ec4  f7fffffe          BL       LISTBOX_InvalidateItem
;;;1149       WM_UNLOCK();
;;;1150     }
000ec8  bf00              NOP      
                  |L1.3786|
;;;1151   }
000eca  e8bd81f0          POP      {r4-r8,pc}
;;;1152   
                          ENDP

                  LISTBOX_CreateEx PROC
;;;1031   */
;;;1032   LISTBOX_Handle LISTBOX_CreateEx(int x0, int y0, int xsize, int ysize, WM_HWIN hParent,
000ece  e92d4fff          PUSH     {r0-r11,lr}
;;;1033                                   int WinFlags, int ExFlags, int Id, const GUI_ConstString* ppText)
;;;1034   {
000ed2  b085              SUB      sp,sp,#0x14
000ed4  4607              MOV      r7,r0
000ed6  4688              MOV      r8,r1
000ed8  4691              MOV      r9,r2
000eda  e9ddab13          LDRD     r10,r11,[sp,#0x4c]
000ede  9c16              LDR      r4,[sp,#0x58]
;;;1035     LISTBOX_Handle hObj;
;;;1036     GUI_USE_PARA(ExFlags);
000ee0  bf00              NOP      
;;;1037     WM_LOCK();
;;;1038     hObj = WM_CreateWindowAsChild(x0, y0, xsize, ysize, hParent, WinFlags, LISTBOX_Callback,
000ee2  2268              MOVS     r2,#0x68
000ee4  f2af238f          ADR      r3,LISTBOX_Callback + 1
000ee8  fa1ff08a          UXTH     r0,r10
000eec  9912              LDR      r1,[sp,#0x48]
000eee  e9cd3202          STRD     r3,r2,[sp,#8]
000ef2  e9cd1000          STRD     r1,r0,[sp,#0]
000ef6  464a              MOV      r2,r9
000ef8  4641              MOV      r1,r8
000efa  4638              MOV      r0,r7
000efc  9b08              LDR      r3,[sp,#0x20]
000efe  f7fffffe          BL       WM_CreateWindowAsChild
000f02  4605              MOV      r5,r0
;;;1039                                   sizeof(LISTBOX_Obj) - sizeof(WM_Obj));
;;;1040     if (hObj) {
000f04  b1bd              CBZ      r5,|L1.3894|
;;;1041       LISTBOX_Obj* pObj;
;;;1042       pObj = (LISTBOX_Obj *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
000f06  4628              MOV      r0,r5
000f08  f7fffffe          BL       GUI_ALLOC_h2p
000f0c  4606              MOV      r6,r0
;;;1043        /* Init sub-classes */
;;;1044       GUI_ARRAY_CREATE(&pObj->ItemArray);
;;;1045      /* init widget specific variables */
;;;1046       WIDGET__Init(&pObj->Widget, Id, WIDGET_STATE_FOCUSSABLE);
000f0e  2210              MOVS     r2,#0x10
000f10  4630              MOV      r0,r6
000f12  9915              LDR      r1,[sp,#0x54]
000f14  f7fffffe          BL       WIDGET__Init
;;;1047       LISTBOX_INIT_ID(pObj);
;;;1048       pObj->Props = LISTBOX_DefaultProps;
000f18  2238              MOVS     r2,#0x38
000f1a  4909              LDR      r1,|L1.3904|
000f1c  f1060048          ADD      r0,r6,#0x48
000f20  f7fffffe          BL       __aeabi_memcpy4
;;;1049       if (ppText) {
000f24  b11c              CBZ      r4,|L1.3886|
;;;1050         /* init member variables */
;;;1051         /* Set non-zero attributes */
;;;1052         LISTBOX_SetText(hObj, ppText);
000f26  4621              MOV      r1,r4
000f28  4628              MOV      r0,r5
000f2a  f7fffffe          BL       LISTBOX_SetText
                  |L1.3886|
;;;1053       }
;;;1054       LISTBOX_UpdateScrollers(hObj);
000f2e  4628              MOV      r0,r5
000f30  f7fffffe          BL       LISTBOX_UpdateScrollers
;;;1055     }
000f34  bf00              NOP      
                  |L1.3894|
;;;1056     WM_UNLOCK();
;;;1057     return hObj;
000f36  4628              MOV      r0,r5
;;;1058   }
000f38  b009              ADD      sp,sp,#0x24
000f3a  e8bd8ff0          POP      {r4-r11,pc}
;;;1059   
                          ENDP

000f3e  0000              DCW      0x0000
                  |L1.3904|
                          DCD      LISTBOX_DefaultProps

                          AREA ||.data||, DATA, ALIGN=2

                  LISTBOX_DefaultProps
                          DCD      GUI_Font13_1
000004  000a              DCW      0x000a
000006  0000              DCB      0x00,0x00
                          DCD      0x00ffffff
                          DCD      0x00808080
                          DCD      0x00ff0000
                          DCD      0x00c0c0c0
                          DCD      0x00000000
                          DCD      0x00ffffff
                          DCD      0x00ffffff
                          DCD      0x00808080
                          DCD      0x0fffffff
                          DCD      0x0fffffff
                          DCD      0x0fffffff
000034  0000              DCW      0x0000
000036  0000              DCB      0x00,0x00

; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\guicore.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\guicore.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -IC:\Users\Administrator\Desktop\gui\STM32·Ü¶·°å-3.98\RTE -Id:\Keil_v5\ARM\PACK\ARM\CMSIS\4.3.0\CMSIS\Include -Id:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.1.0\Device\Include -D__UVISION_VERSION=515 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\guicore.crf GUI\Core\GUICore.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _InitContext PROC
;;;61     */
;;;62     static void _InitContext(GUI_CONTEXT* pContext) {
000000  b510              PUSH     {r4,lr}
000002  4604              MOV      r4,r0
;;;63       /* memset(..,0,..) is not required, as this function is called only at startup of the GUI when data is 0 */
;;;64       #if GUI_SUPPORT_DEVICES
;;;65         pContext->pDeviceAPI   = LCD_aAPI[0]; /* &LCD_L0_APIList; */
000004  483d              LDR      r0,|L1.252|
000006  6800              LDR      r0,[r0,#0]  ; LCD_aAPI
000008  64a0              STR      r0,[r4,#0x48]
;;;66       #endif
;;;67       pContext->pClipRect_HL = &GUI_Context.ClipRect;
00000a  483d              LDR      r0,|L1.256|
00000c  6160              STR      r0,[r4,#0x14]
;;;68       LCD_L0_GetRect(&pContext->ClipRect);
00000e  f1040008          ADD      r0,r4,#8
000012  f7fffffe          BL       LCD_L0_GetRect
;;;69       #if GUI_SUPPORT_AA
;;;70         pContext->pLCD_HL      = &_HL_APIList;
000016  483b              LDR      r0,|L1.260|
000018  65a0              STR      r0,[r4,#0x58]
;;;71       #endif
;;;72       pContext->pAFont       = GUI_DEFAULT_FONT;
00001a  483b              LDR      r0,|L1.264|
00001c  61e0              STR      r0,[r4,#0x1c]
;;;73       pContext->pClipRect_HL = &GUI_Context.ClipRect;
00001e  4838              LDR      r0,|L1.256|
000020  6160              STR      r0,[r4,#0x14]
;;;74       pContext->PenSize      = 1;
000022  2001              MOVS     r0,#1
000024  7620              STRB     r0,[r4,#0x18]
;;;75       /* Variables in WM module */
;;;76       #if GUI_WINSUPPORT
;;;77         pContext->hAWin    = WM_GetDesktopWindow();
000026  f7fffffe          BL       WM_GetDesktopWindow
00002a  87a0              STRH     r0,[r4,#0x3c]
;;;78       #endif
;;;79       /* Variables in GUI_AA module */
;;;80       #if GUI_SUPPORT_AA
;;;81         pContext->AA_Factor = 3;
00002c  2003              MOVS     r0,#3
00002e  f884005c          STRB     r0,[r4,#0x5c]
;;;82       #endif
;;;83       pContext->Color   = GUI_INVALID_COLOR;
000032  f06f4070          MVN      r0,#0xf0000000
000036  6320              STR      r0,[r4,#0x30]
;;;84       pContext->BkColor = GUI_INVALID_COLOR;
000038  6360              STR      r0,[r4,#0x34]
;;;85       LCD_SetBkColor(GUI_DEFAULT_BKCOLOR);
00003a  2000              MOVS     r0,#0
00003c  f7fffffe          BL       LCD_SetBkColor
;;;86       LCD_SetColor(GUI_DEFAULT_COLOR);
000040  f06f407f          MVN      r0,#0xff000000
000044  f7fffffe          BL       LCD_SetColor
;;;87       #if GUI_SUPPORT_UNICODE
;;;88         pContext->pUC_API = &GUI_UC_None;
;;;89       #endif
;;;90     }
000048  bd10              POP      {r4,pc}
;;;91     
                          ENDP

                  GUI_ClearRect PROC
;;;101    */
;;;102    void GUI_ClearRect(int x0, int y0, int x1, int y1) {
00004a  e92d41fc          PUSH     {r2-r8,lr}
00004e  4604              MOV      r4,r0
000050  460d              MOV      r5,r1
000052  4616              MOV      r6,r2
000054  461f              MOV      r7,r3
;;;103      GUI_DRAWMODE PrevDraw;
;;;104      #if GUI_WINSUPPORT
;;;105        GUI_RECT r;
;;;106      #endif
;;;107      GUI_LOCK();
;;;108      PrevDraw = LCD_SetDrawMode(GUI_DRAWMODE_REV);
000056  2004              MOVS     r0,#4
000058  f7fffffe          BL       LCD_SetDrawMode
00005c  4680              MOV      r8,r0
;;;109      #if GUI_WINSUPPORT
;;;110        WM_ADDORG(x0,y0);
00005e  4828              LDR      r0,|L1.256|
000060  3808              SUBS     r0,r0,#8
000062  6c00              LDR      r0,[r0,#0x40]  ; GUI_Context
000064  4404              ADD      r4,r4,r0
000066  4826              LDR      r0,|L1.256|
000068  3808              SUBS     r0,r0,#8
00006a  6c40              LDR      r0,[r0,#0x44]  ; GUI_Context
00006c  4405              ADD      r5,r5,r0
;;;111        WM_ADDORG(x1,y1);
00006e  4824              LDR      r0,|L1.256|
000070  3808              SUBS     r0,r0,#8
000072  6c00              LDR      r0,[r0,#0x40]  ; GUI_Context
000074  4406              ADD      r6,r6,r0
000076  4822              LDR      r0,|L1.256|
000078  3808              SUBS     r0,r0,#8
00007a  6c40              LDR      r0,[r0,#0x44]  ; GUI_Context
00007c  4407              ADD      r7,r7,r0
;;;112        r.x0 = x0;
00007e  b220              SXTH     r0,r4
000080  f8ad0000          STRH     r0,[sp,#0]
;;;113        r.x1 = x1;
000084  b230              SXTH     r0,r6
000086  f8ad0004          STRH     r0,[sp,#4]
;;;114        r.y0 = y0;
00008a  b228              SXTH     r0,r5
00008c  f8ad0002          STRH     r0,[sp,#2]
;;;115        r.y1 = y1;
000090  b238              SXTH     r0,r7
000092  f8ad0006          STRH     r0,[sp,#6]
;;;116        WM_ITERATE_START(&r) {
000096  4668              MOV      r0,sp
000098  f7fffffe          BL       WM__InitIVRSearch
00009c  b150              CBZ      r0,|L1.180|
00009e  bf00              NOP      
                  |L1.160|
;;;117      #endif
;;;118      LCD_FillRect(x0,y0,x1,y1);
0000a0  463b              MOV      r3,r7
0000a2  4632              MOV      r2,r6
0000a4  4629              MOV      r1,r5
0000a6  4620              MOV      r0,r4
0000a8  f7fffffe          BL       LCD_FillRect
;;;119      #if GUI_WINSUPPORT
;;;120        } WM_ITERATE_END();
0000ac  f7fffffe          BL       WM__GetNextIVR
0000b0  2800              CMP      r0,#0
0000b2  d1f5              BNE      |L1.160|
                  |L1.180|
;;;121      #endif
;;;122      LCD_SetDrawMode(PrevDraw);
0000b4  4640              MOV      r0,r8
0000b6  f7fffffe          BL       LCD_SetDrawMode
;;;123      GUI_UNLOCK();
;;;124    }
0000ba  e8bd81fc          POP      {r2-r8,pc}
;;;125    
                          ENDP

                  GUI_Clear PROC
;;;129    */
;;;130    void GUI_Clear(void) {
0000be  b510              PUSH     {r4,lr}
;;;131      GUI_GotoXY(0,0);     /* Reset text cursor to upper left */
0000c0  2100              MOVS     r1,#0
0000c2  4608              MOV      r0,r1
0000c4  f7fffffe          BL       GUI_GotoXY
;;;132      GUI_ClearRect(GUI_XMIN, GUI_YMIN, GUI_XMAX, GUI_YMAX);
0000c8  f64073ff          MOV      r3,#0xfff
0000cc  461a              MOV      r2,r3
0000ce  4259              RSBS     r1,r3,#0
0000d0  4608              MOV      r0,r1
0000d2  f7fffffe          BL       GUI_ClearRect
;;;133    }
0000d6  bd10              POP      {r4,pc}
;;;134    
                          ENDP

                  GUI_Init PROC
;;;141    */
;;;142    int GUI_Init(void) {
0000d8  b510              PUSH     {r4,lr}
;;;143      int r;
;;;144      GUI_DEBUG_LOG("\nGUI_Init()");
;;;145      /* Init system wide globals first */
;;;146      GUI_DecChar = '.';
0000da  202e              MOVS     r0,#0x2e
0000dc  490b              LDR      r1,|L1.268|
0000de  7008              STRB     r0,[r1,#0]
;;;147      GUI_X_Init();
0000e0  f7fffffe          BL       GUI_X_Init
;;;148      /* Init context */
;;;149      _InitContext(&GUI_Context);
0000e4  4806              LDR      r0,|L1.256|
0000e6  3808              SUBS     r0,r0,#8
0000e8  f7fffffe          BL       _InitContext
;;;150      GUITASK_INIT();
;;;151      r = LCD_Init();
0000ec  f7fffffe          BL       LCD_Init
0000f0  4604              MOV      r4,r0
;;;152      #if GUI_WINSUPPORT
;;;153        WM_Init();
0000f2  f7fffffe          BL       WM_Init
;;;154      #endif
;;;155      GUITASK_COPY_CONTEXT();
;;;156      #if defined(GUI_TRIAL_VERSION)
;;;157        #if GUI_TRIAL_VERSION
;;;158          GUI_DispString(  "This software\n"
;;;159    	                     "contains an eval-\n"
;;;160    	                     "uC/GUI build.\n"
;;;161    	                     "\n"
;;;162    	                     "A license is\n"
;;;163    	                     "required to use\n"
;;;164    	                     "it in a product.\n\n"
;;;165    	                     "www.segger.com\n");
;;;166          GUI_GotoXY(0, 0);
;;;167          GUI_X_Delay(1000);
;;;168          GUI_Clear();
;;;169        #endif
;;;170      #endif
;;;171      return r;
0000f6  4620              MOV      r0,r4
;;;172    }
0000f8  bd10              POP      {r4,pc}
;;;173    
                          ENDP

0000fa  0000              DCW      0x0000
                  |L1.252|
                          DCD      LCD_aAPI
                  |L1.256|
                          DCD      GUI_Context+0x8
                  |L1.260|
                          DCD      _HL_APIList
                  |L1.264|
                          DCD      GUI_Font6x8
                  |L1.268|
                          DCD      GUI_DecChar

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  GUI_Context
                          %        96

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  _HL_APIList
                          DCD      LCD_DrawHLine
                          DCD      LCD_DrawPixel

                          AREA ||.data||, DATA, ALIGN=2

                  GUI_DecChar
000000  00000000          DCB      0x00,0x00,0x00,0x00
                  GUI_pfTimerExec
                          DCD      0x00000000
                  WM_pfHandlePID
                          DCD      0x00000000
                  GUI_pfDispCharStyle
                          DCD      0x00000000
                  GUI_pLCD_APIList
                          DCD      0x00000000
                  GUI_OrgX
000014  0000              DCB      0x00,0x00
                  GUI_OrgY
000016  0000              DCB      0x00,0x00
                  GUI_MoveRTL
000018  00                DCB      0x00

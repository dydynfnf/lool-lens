; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\wm_checkscrollpos.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\wm_checkscrollpos.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -IC:\Users\Administrator\Desktop\gui\STM32·Ü¶·°å-3.98\RTE -Id:\Keil_v5\ARM\PACK\ARM\CMSIS\4.3.0\CMSIS\Include -Id:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.1.0\Device\Include -D__UVISION_VERSION=515 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\wm_checkscrollpos.crf GUI\WM\WM_CheckScrollPos.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  WM_CheckScrollBounds PROC
;;;37     */
;;;38     void WM_CheckScrollBounds(WM_SCROLL_STATE* pScrollState) {
000000  6883              LDR      r3,[r0,#8]
;;;39       int Max;
;;;40       Max = pScrollState->NumItems - pScrollState->PageSize;
000002  6802              LDR      r2,[r0,#0]
000004  1ad1              SUBS     r1,r2,r3
;;;41       if (Max < 0) {
000006  2900              CMP      r1,#0
000008  da00              BGE      |L1.12|
;;;42         Max = 0;
00000a  2100              MOVS     r1,#0
                  |L1.12|
;;;43       }
;;;44       /* Make sure scroll pos is in bounds */
;;;45       if (pScrollState->v < 0) {
00000c  6842              LDR      r2,[r0,#4]
00000e  2a00              CMP      r2,#0
000010  da01              BGE      |L1.22|
;;;46         pScrollState->v = 0;
000012  2200              MOVS     r2,#0
000014  6042              STR      r2,[r0,#4]
                  |L1.22|
;;;47       }
;;;48       if (pScrollState->v > Max) {
000016  6842              LDR      r2,[r0,#4]
000018  428a              CMP      r2,r1
00001a  dd00              BLE      |L1.30|
;;;49         pScrollState->v = Max;
00001c  6041              STR      r1,[r0,#4]
                  |L1.30|
;;;50       }
;;;51     }
00001e  4770              BX       lr
;;;52     
                          ENDP

                  WM_CheckScrollPos PROC
;;;60     */
;;;61     int  WM_CheckScrollPos(WM_SCROLL_STATE* pScrollState, int Pos, int LowerDist, int UpperDist) {
000020  e92d41f0          PUSH     {r4-r8,lr}
000024  4604              MOV      r4,r0
000026  460d              MOV      r5,r1
000028  4616              MOV      r6,r2
00002a  461f              MOV      r7,r3
;;;62       int vOld;
;;;63       vOld = pScrollState->v;
00002c  f8d48004          LDR      r8,[r4,#4]
;;;64       /* Check upper limit */
;;;65       if (Pos > pScrollState->v + pScrollState->PageSize - 1) {
000030  e9d40101          LDRD     r0,r1,[r4,#4]
000034  4408              ADD      r0,r0,r1
000036  1e40              SUBS     r0,r0,#1
000038  42a8              CMP      r0,r5
00003a  da04              BGE      |L1.70|
;;;66         pScrollState->v = Pos - (pScrollState->PageSize - 1) + UpperDist;
00003c  68a0              LDR      r0,[r4,#8]
00003e  1e40              SUBS     r0,r0,#1
000040  1a28              SUBS     r0,r5,r0
000042  4438              ADD      r0,r0,r7
000044  6060              STR      r0,[r4,#4]
                  |L1.70|
;;;67       }
;;;68       /* Check lower limit */
;;;69       if (Pos < pScrollState->v) {
000046  6860              LDR      r0,[r4,#4]
000048  42a8              CMP      r0,r5
00004a  dd01              BLE      |L1.80|
;;;70         pScrollState->v = Pos - LowerDist;
00004c  1ba8              SUBS     r0,r5,r6
00004e  6060              STR      r0,[r4,#4]
                  |L1.80|
;;;71       }
;;;72       WM_CheckScrollBounds(pScrollState);
000050  4620              MOV      r0,r4
000052  f7fffffe          BL       WM_CheckScrollBounds
;;;73       return pScrollState->v - vOld;
000056  6860              LDR      r0,[r4,#4]
000058  eba00008          SUB      r0,r0,r8
;;;74     }
00005c  e8bd81f0          POP      {r4-r8,pc}
;;;75     
                          ENDP

                  WM_SetScrollValue PROC
;;;82     */
;;;83     int  WM_SetScrollValue(WM_SCROLL_STATE* pScrollState, int v) {
000060  b570              PUSH     {r4-r6,lr}
000062  4604              MOV      r4,r0
000064  460d              MOV      r5,r1
;;;84       int vOld;
;;;85       vOld = pScrollState->v;
000066  6866              LDR      r6,[r4,#4]
;;;86       pScrollState->v = v;
000068  6065              STR      r5,[r4,#4]
;;;87       WM_CheckScrollBounds(pScrollState);
00006a  4620              MOV      r0,r4
00006c  f7fffffe          BL       WM_CheckScrollBounds
;;;88       return pScrollState->v - vOld;
000070  6860              LDR      r0,[r4,#4]
000072  1b80              SUBS     r0,r0,r6
;;;89     }
000074  bd70              POP      {r4-r6,pc}
;;;90     
                          ENDP


; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\scrollbar.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\scrollbar.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -IC:\Users\Administrator\Desktop\gui\STM32·Ü¶·°å-3.98\RTE -Id:\Keil_v5\ARM\PACK\ARM\CMSIS\4.3.0\CMSIS\Include -Id:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.1.0\Device\Include -D__UVISION_VERSION=515 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\scrollbar.crf GUI\Widget\SCROLLBAR.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _GetArrowSize PROC
;;;87     */
;;;88     static int _GetArrowSize(SCROLLBAR_Obj* pObj) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4606              MOV      r6,r0
;;;89       unsigned int r;
;;;90       unsigned int xSize = WIDGET__GetXSize(&pObj->Widget);
000006  4630              MOV      r0,r6
000008  f7fffffe          BL       WIDGET__GetXSize
00000c  4605              MOV      r5,r0
;;;91       unsigned int ySize = WIDGET__GetYSize(&pObj->Widget);
00000e  4630              MOV      r0,r6
000010  f7fffffe          BL       WIDGET__GetYSize
000014  4607              MOV      r7,r0
;;;92       r = ySize/2 + 5;
000016  2005              MOVS     r0,#5
000018  eb000457          ADD      r4,r0,r7,LSR #1
;;;93       if (r > xSize-5)
00001c  1f68              SUBS     r0,r5,#5
00001e  42a0              CMP      r0,r4
000020  d200              BCS      |L1.36|
;;;94         r = xSize-5;
000022  1f6c              SUBS     r4,r5,#5
                  |L1.36|
;;;95       return r;
000024  4620              MOV      r0,r4
;;;96     }
000026  e8bd81f0          POP      {r4-r8,pc}
;;;97     
                          ENDP

                  _WIDGET__RECT2VRECT PROC
;;;108    */
;;;109    static void _WIDGET__RECT2VRECT(const WIDGET* pWidget, GUI_RECT* pRect) {
00002a  b570              PUSH     {r4-r6,lr}
;;;110      if (pWidget->State & WIDGET_STATE_VERTICAL) {
00002c  f8902026          LDRB     r2,[r0,#0x26]
000030  f0020208          AND      r2,r2,#8
000034  b1b2              CBZ      r2,|L1.100|
;;;111        int xSize = pWidget->Win.Rect.x1 - pWidget->Win.Rect.x0 + 1;
000036  f9b05004          LDRSH    r5,[r0,#4]
00003a  f9b06000          LDRSH    r6,[r0,#0]
00003e  1bad              SUBS     r5,r5,r6
000040  1c6a              ADDS     r2,r5,#1
;;;112        int x0, x1;
;;;113        x0 = pRect->x0;
000042  f9b13000          LDRSH    r3,[r1,#0]
;;;114        x1 = pRect->x1;
000046  f9b14004          LDRSH    r4,[r1,#4]
;;;115        pRect->x0 = pRect->y0;
00004a  884d              LDRH     r5,[r1,#2]
00004c  800d              STRH     r5,[r1,#0]
;;;116        pRect->x1 = pRect->y1;
00004e  88cd              LDRH     r5,[r1,#6]
000050  808d              STRH     r5,[r1,#4]
;;;117        pRect->y1 = xSize - 1 - x0;
000052  1e55              SUBS     r5,r2,#1
000054  1aed              SUBS     r5,r5,r3
000056  b22d              SXTH     r5,r5
000058  80cd              STRH     r5,[r1,#6]
;;;118        pRect->y0 = xSize - 1 - x1;
00005a  1e55              SUBS     r5,r2,#1
00005c  1b2d              SUBS     r5,r5,r4
00005e  b22d              SXTH     r5,r5
000060  804d              STRH     r5,[r1,#2]
;;;119      }
000062  bf00              NOP      
                  |L1.100|
;;;120    }
000064  bd70              POP      {r4-r6,pc}
;;;121    
                          ENDP

                  _CalcPositions PROC
;;;128    */
;;;129    static void _CalcPositions(SCROLLBAR_Obj* pObj, SCROLLBAR_POSITIONS* pPos) {
000066  e92d4ff0          PUSH     {r4-r11,lr}
00006a  b087              SUB      sp,sp,#0x1c
00006c  4605              MOV      r5,r0
00006e  460c              MOV      r4,r1
;;;130      int xSizeArrow, xSize, xSizeMoveable, ThumbSize, NumItems, xSizeThumbArea;
;;;131      WM_HWIN hWin;
;;;132      GUI_RECT r, rSub;
;;;133      int x0, y0;
;;;134      r = pObj->Widget.Win.Rect;
000070  e9d50100          LDRD     r0,r1,[r5,#0]
000074  e9cd0104          STRD     r0,r1,[sp,#0x10]
;;;135      x0 = r.x0;
000078  f9bd0010          LDRSH    r0,[sp,#0x10]
00007c  9001              STR      r0,[sp,#4]
;;;136      y0 = r.y0;
00007e  f9bd0012          LDRSH    r0,[sp,#0x12]
000082  9000              STR      r0,[sp,#0]
;;;137      pPos->x1  = (pObj->Widget.State & WIDGET_STATE_VERTICAL) ? r.y1 : r.x1;
000084  f8950026          LDRB     r0,[r5,#0x26]
000088  f0000008          AND      r0,r0,#8
00008c  b110              CBZ      r0,|L1.148|
00008e  f9bd0016          LDRSH    r0,[sp,#0x16]
000092  e001              B        |L1.152|
                  |L1.148|
000094  f9bd0014          LDRSH    r0,[sp,#0x14]
                  |L1.152|
000098  61a0              STR      r0,[r4,#0x18]
;;;138      /* Subtract the rectangle of the other scrollbar (if existing and visible) */
;;;139      if (pObj->Widget.Id == GUI_ID_HSCROLL) {
00009a  f9b50024          LDRSH    r0,[r5,#0x24]
00009e  28ff              CMP      r0,#0xff
0000a0  d117              BNE      |L1.210|
;;;140        hWin = WM_GetScrollbarV(pObj->Widget.Win.hParent);
0000a2  f9b50016          LDRSH    r0,[r5,#0x16]
0000a6  f7fffffe          BL       WM_GetScrollbarV
0000aa  4682              MOV      r10,r0
;;;141        if (hWin) {
0000ac  f1ba0f00          CMP      r10,#0
0000b0  d00f              BEQ      |L1.210|
;;;142          WM_GetWindowRectEx(hWin, &rSub);
0000b2  a902              ADD      r1,sp,#8
0000b4  4650              MOV      r0,r10
0000b6  f7fffffe          BL       WM_GetWindowRectEx
;;;143          if (r.x1 == rSub.x1) {
0000ba  f9bd0014          LDRSH    r0,[sp,#0x14]
0000be  f9bd100c          LDRSH    r1,[sp,#0xc]
0000c2  4288              CMP      r0,r1
0000c4  d105              BNE      |L1.210|
;;;144            r.x1 = rSub.x0 -1;
0000c6  f8bd0008          LDRH     r0,[sp,#8]
0000ca  1e40              SUBS     r0,r0,#1
0000cc  b200              SXTH     r0,r0
0000ce  f8ad0014          STRH     r0,[sp,#0x14]
                  |L1.210|
;;;145          }
;;;146        }
;;;147      }
;;;148      if (pObj->Widget.Id == GUI_ID_VSCROLL) {
0000d2  f9b50024          LDRSH    r0,[r5,#0x24]
0000d6  28fe              CMP      r0,#0xfe
0000d8  d117              BNE      |L1.266|
;;;149        hWin = WM_GetScrollbarH(pObj->Widget.Win.hParent);
0000da  f9b50016          LDRSH    r0,[r5,#0x16]
0000de  f7fffffe          BL       WM_GetScrollbarH
0000e2  4682              MOV      r10,r0
;;;150        if (hWin) {
0000e4  f1ba0f00          CMP      r10,#0
0000e8  d00f              BEQ      |L1.266|
;;;151          WM_GetWindowRectEx(hWin, &rSub);
0000ea  a902              ADD      r1,sp,#8
0000ec  4650              MOV      r0,r10
0000ee  f7fffffe          BL       WM_GetWindowRectEx
;;;152          if (r.y1 == rSub.y1) {
0000f2  f9bd0016          LDRSH    r0,[sp,#0x16]
0000f6  f9bd100e          LDRSH    r1,[sp,#0xe]
0000fa  4288              CMP      r0,r1
0000fc  d105              BNE      |L1.266|
;;;153            r.y1 = rSub.y0 -1;
0000fe  f8bd000a          LDRH     r0,[sp,#0xa]
000102  1e40              SUBS     r0,r0,#1
000104  b200              SXTH     r0,r0
000106  f8ad0016          STRH     r0,[sp,#0x16]
                  |L1.266|
;;;154          }
;;;155        }
;;;156      }
;;;157      /* Convert coordinates of this window */
;;;158      GUI_MoveRect(&r, -x0, -y0);
00010a  9800              LDR      r0,[sp,#0]
00010c  4242              RSBS     r2,r0,#0
00010e  9801              LDR      r0,[sp,#4]
000110  4241              RSBS     r1,r0,#0
000112  a804              ADD      r0,sp,#0x10
000114  f7fffffe          BL       GUI_MoveRect
;;;159      /* Convert real into virtual coordinates */
;;;160      _WIDGET__RECT2VRECT(&pObj->Widget, &r);
000118  a904              ADD      r1,sp,#0x10
00011a  4628              MOV      r0,r5
00011c  f7fffffe          BL       _WIDGET__RECT2VRECT
;;;161      NumItems      = pObj->NumItems;
000120  6b68              LDR      r0,[r5,#0x34]
000122  9006              STR      r0,[sp,#0x18]
;;;162      xSize         = r.x1 - r.x0 + 1;
000124  f9bd0014          LDRSH    r0,[sp,#0x14]
000128  f9bd1010          LDRSH    r1,[sp,#0x10]
00012c  1a40              SUBS     r0,r0,r1
00012e  f1000901          ADD      r9,r0,#1
;;;163      xSizeArrow    = _GetArrowSize(pObj);
000132  4628              MOV      r0,r5
000134  f7fffffe          BL       _GetArrowSize
000138  4680              MOV      r8,r0
;;;164      xSizeThumbArea= xSize - 2 * xSizeArrow;     /* Number of pixels available for thumb and movement */
00013a  2002              MOVS     r0,#2
00013c  fb009718          MLS      r7,r0,r8,r9
;;;165      ThumbSize     = GUI__DivideRound(xSizeThumbArea * pObj->PageSize, NumItems);
000140  6be9              LDR      r1,[r5,#0x3c]
000142  fb01f007          MUL      r0,r1,r7
000146  9906              LDR      r1,[sp,#0x18]
000148  f7fffffe          BL       GUI__DivideRound
00014c  4606              MOV      r6,r0
;;;166      if (ThumbSize < SCROLLBAR_THUMB_SIZE_MIN_DEFAULT) {
00014e  2e04              CMP      r6,#4
000150  da00              BGE      |L1.340|
;;;167        ThumbSize = SCROLLBAR_THUMB_SIZE_MIN_DEFAULT;
000152  2604              MOVS     r6,#4
                  |L1.340|
;;;168      }
;;;169      if (ThumbSize > xSizeThumbArea) {
000154  42be              CMP      r6,r7
000156  dd00              BLE      |L1.346|
;;;170        ThumbSize = xSizeThumbArea;
000158  463e              MOV      r6,r7
                  |L1.346|
;;;171      }
;;;172      xSizeMoveable = xSizeThumbArea - ThumbSize;
00015a  eba70b06          SUB      r11,r7,r6
;;;173      pPos->x0_LeftArrow  = r.x0;
00015e  f9bd0010          LDRSH    r0,[sp,#0x10]
000162  6020              STR      r0,[r4,#0]
;;;174      pPos->x1_LeftArrow  = xSizeArrow - 1;
000164  f1a80001          SUB      r0,r8,#1
000168  6060              STR      r0,[r4,#4]
;;;175      pPos->x1_RightArrow = xSize - 1;
00016a  f1a90001          SUB      r0,r9,#1
00016e  6160              STR      r0,[r4,#0x14]
;;;176      pPos->x0_RightArrow = xSize - xSizeArrow;
000170  eba90008          SUB      r0,r9,r8
000174  6120              STR      r0,[r4,#0x10]
;;;177      pPos->x0_Thumb      = pPos->x1_LeftArrow + 1+ GUI__DivideRound(xSizeMoveable * pObj->v, NumItems - pObj->PageSize);
000176  6beb              LDR      r3,[r5,#0x3c]
000178  9a06              LDR      r2,[sp,#0x18]
00017a  1ad1              SUBS     r1,r2,r3
00017c  6baa              LDR      r2,[r5,#0x38]
00017e  fb02f00b          MUL      r0,r2,r11
000182  f7fffffe          BL       GUI__DivideRound
000186  6861              LDR      r1,[r4,#4]
000188  1c49              ADDS     r1,r1,#1
00018a  4408              ADD      r0,r0,r1
00018c  60a0              STR      r0,[r4,#8]
;;;178      pPos->x1_Thumb      = pPos->x0_Thumb + ThumbSize - 1;
00018e  68a0              LDR      r0,[r4,#8]
000190  4430              ADD      r0,r0,r6
000192  1e40              SUBS     r0,r0,#1
000194  60e0              STR      r0,[r4,#0xc]
;;;179      pPos->xSizeMoveable = xSizeMoveable;
000196  f8c4b01c          STR      r11,[r4,#0x1c]
;;;180      pPos->ThumbSize     = ThumbSize;
00019a  6226              STR      r6,[r4,#0x20]
;;;181    }
00019c  b007              ADD      sp,sp,#0x1c
00019e  e8bd8ff0          POP      {r4-r11,pc}
;;;182    
                          ENDP

                  _DrawTriangle PROC
;;;186    */
;;;187    static void _DrawTriangle(WIDGET* pWidget, int x, int y, int Size, int Inc) {
0001a2  e92d41f0          PUSH     {r4-r8,lr}
0001a6  4607              MOV      r7,r0
0001a8  460e              MOV      r6,r1
0001aa  4615              MOV      r5,r2
0001ac  461c              MOV      r4,r3
0001ae  f8dd8018          LDR      r8,[sp,#0x18]
;;;188      if (pWidget->State & WIDGET_STATE_VERTICAL) {
0001b2  f8970026          LDRB     r0,[r7,#0x26]
0001b6  f0000008          AND      r0,r0,#8
0001ba  b150              CBZ      r0,|L1.466|
;;;189        for (; Size >= 0; Size--, x += Inc) {
0001bc  e006              B        |L1.460|
                  |L1.446|
;;;190          GUI_DrawHLine(x, y - Size, y + Size);
0001be  192a              ADDS     r2,r5,r4
0001c0  1b29              SUBS     r1,r5,r4
0001c2  4630              MOV      r0,r6
0001c4  f7fffffe          BL       GUI_DrawHLine
0001c8  1e64              SUBS     r4,r4,#1              ;189
0001ca  4446              ADD      r6,r6,r8              ;189
                  |L1.460|
0001cc  2c00              CMP      r4,#0                 ;189
0001ce  daf6              BGE      |L1.446|
0001d0  e009              B        |L1.486|
                  |L1.466|
;;;191        }
;;;192      } else {
;;;193        for (; Size >= 0; Size--, x += Inc) {
0001d2  e006              B        |L1.482|
                  |L1.468|
;;;194          GUI_DrawVLine(x, y - Size, y + Size);
0001d4  192a              ADDS     r2,r5,r4
0001d6  1b29              SUBS     r1,r5,r4
0001d8  4630              MOV      r0,r6
0001da  f7fffffe          BL       GUI_DrawVLine
0001de  1e64              SUBS     r4,r4,#1              ;193
0001e0  4446              ADD      r6,r6,r8              ;193
                  |L1.482|
0001e2  2c00              CMP      r4,#0                 ;193
0001e4  daf6              BGE      |L1.468|
                  |L1.486|
;;;195        }
;;;196      }
;;;197    }
0001e6  e8bd81f0          POP      {r4-r8,pc}
;;;198    
                          ENDP

                  _Paint PROC
;;;202    */
;;;203    static void _Paint(SCROLLBAR_Obj* pObj) {
0001ea  b570              PUSH     {r4-r6,lr}
0001ec  b08e              SUB      sp,sp,#0x38
0001ee  4604              MOV      r4,r0
;;;204      int ArrowSize, ArrowOff;
;;;205      SCROLLBAR_POSITIONS Pos;
;;;206      GUI_RECT r, rClient;
;;;207      /*
;;;208        Get / calc position info
;;;209      */
;;;210      _CalcPositions(pObj, &Pos);
0001f0  a905              ADD      r1,sp,#0x14
0001f2  4620              MOV      r0,r4
0001f4  f7fffffe          BL       _CalcPositions
;;;211      WIDGET__GetClientRect(&pObj->Widget, &rClient);
0001f8  a901              ADD      r1,sp,#4
0001fa  4620              MOV      r0,r4
0001fc  f7fffffe          BL       WIDGET__GetClientRect
;;;212      r = rClient;
000200  e9dd0101          LDRD     r0,r1,[sp,#4]
000204  e9cd0103          STRD     r0,r1,[sp,#0xc]
;;;213      ArrowSize = ((r.y1 - r.y0) /3) - 1;
000208  f9bd0012          LDRSH    r0,[sp,#0x12]
00020c  f9bd100e          LDRSH    r1,[sp,#0xe]
000210  1a40              SUBS     r0,r0,r1
000212  2103              MOVS     r1,#3
000214  fb90f0f1          SDIV     r0,r0,r1
000218  1e45              SUBS     r5,r0,#1
;;;214      ArrowOff = 3 + ArrowSize+ ArrowSize/3;
00021a  2003              MOVS     r0,#3
00021c  fb95f1f0          SDIV     r1,r5,r0
000220  1ce8              ADDS     r0,r5,#3
000222  180e              ADDS     r6,r1,r0
;;;215      /*
;;;216        Draw left Arrow
;;;217      */
;;;218      LCD_SetColor(pObj->Props.aColor[SCROLLBAR_CI_THUMB]);
000224  6aa0              LDR      r0,[r4,#0x28]
000226  f7fffffe          BL       LCD_SetColor
;;;219      r = rClient;
00022a  e9dd0101          LDRD     r0,r1,[sp,#4]
00022e  e9cd0103          STRD     r0,r1,[sp,#0xc]
;;;220      r.x0 = Pos.x0_LeftArrow;
000232  9805              LDR      r0,[sp,#0x14]
000234  b200              SXTH     r0,r0
000236  f8ad000c          STRH     r0,[sp,#0xc]
;;;221      r.x1 = Pos.x1_LeftArrow;
00023a  9806              LDR      r0,[sp,#0x18]
00023c  b200              SXTH     r0,r0
00023e  f8ad0010          STRH     r0,[sp,#0x10]
;;;222      WIDGET__FillRectEx(&pObj->Widget, &r);
000242  a903              ADD      r1,sp,#0xc
000244  4620              MOV      r0,r4
000246  f7fffffe          BL       WIDGET__FillRectEx
;;;223      LCD_SetColor(pObj->Props.aColor[SCROLLBAR_CI_ARROW]);
00024a  6b20              LDR      r0,[r4,#0x30]
00024c  f7fffffe          BL       LCD_SetColor
;;;224      _DrawTriangle(&pObj->Widget, r.x0 + ArrowOff, (r.y1 - r.y0) >> 1, ArrowSize, -1);
000250  f04f30ff          MOV      r0,#0xffffffff
000254  9000              STR      r0,[sp,#0]
000256  f9bd0012          LDRSH    r0,[sp,#0x12]
00025a  f9bd300e          LDRSH    r3,[sp,#0xe]
00025e  1ac0              SUBS     r0,r0,r3
000260  1042              ASRS     r2,r0,#1
000262  f9bd000c          LDRSH    r0,[sp,#0xc]
000266  1981              ADDS     r1,r0,r6
000268  462b              MOV      r3,r5
00026a  4620              MOV      r0,r4
00026c  f7fffffe          BL       _DrawTriangle
;;;225      WIDGET__EFFECT_DrawUpRect(&pObj->Widget, &r);
000270  a903              ADD      r1,sp,#0xc
000272  4620              MOV      r0,r4
000274  f7fffffe          BL       WIDGET__EFFECT_DrawUpRect
;;;226      /*
;;;227        Draw the thumb area which is not covered by the thumb
;;;228      */
;;;229      LCD_SetColor(pObj->Props.aColor[SCROLLBAR_CI_SHAFT]);
000278  6ae0              LDR      r0,[r4,#0x2c]
00027a  f7fffffe          BL       LCD_SetColor
;;;230      r.x0 = Pos.x1_LeftArrow + 1;
00027e  9806              LDR      r0,[sp,#0x18]
000280  1c40              ADDS     r0,r0,#1
000282  b200              SXTH     r0,r0
000284  f8ad000c          STRH     r0,[sp,#0xc]
;;;231      r.x1 = Pos.x0_Thumb - 1;
000288  9807              LDR      r0,[sp,#0x1c]
00028a  1e40              SUBS     r0,r0,#1
00028c  b200              SXTH     r0,r0
00028e  f8ad0010          STRH     r0,[sp,#0x10]
;;;232      WIDGET__FillRectEx(&pObj->Widget, &r);
000292  a903              ADD      r1,sp,#0xc
000294  4620              MOV      r0,r4
000296  f7fffffe          BL       WIDGET__FillRectEx
;;;233      r = rClient;
00029a  e9dd0101          LDRD     r0,r1,[sp,#4]
00029e  e9cd0103          STRD     r0,r1,[sp,#0xc]
;;;234      r.x0 = Pos.x1_Thumb + 1;
0002a2  9808              LDR      r0,[sp,#0x20]
0002a4  1c40              ADDS     r0,r0,#1
0002a6  b200              SXTH     r0,r0
0002a8  f8ad000c          STRH     r0,[sp,#0xc]
;;;235      r.x1 = Pos.x0_RightArrow - 1;
0002ac  9809              LDR      r0,[sp,#0x24]
0002ae  1e40              SUBS     r0,r0,#1
0002b0  b200              SXTH     r0,r0
0002b2  f8ad0010          STRH     r0,[sp,#0x10]
;;;236      WIDGET__FillRectEx(&pObj->Widget, &r);
0002b6  a903              ADD      r1,sp,#0xc
0002b8  4620              MOV      r0,r4
0002ba  f7fffffe          BL       WIDGET__FillRectEx
;;;237      /*
;;;238        Draw Thumb
;;;239      */
;;;240      r = rClient;
0002be  e9dd0101          LDRD     r0,r1,[sp,#4]
0002c2  e9cd0103          STRD     r0,r1,[sp,#0xc]
;;;241      r.x0 = Pos.x0_Thumb;
0002c6  9807              LDR      r0,[sp,#0x1c]
0002c8  b200              SXTH     r0,r0
0002ca  f8ad000c          STRH     r0,[sp,#0xc]
;;;242      r.x1 = Pos.x1_Thumb;
0002ce  9808              LDR      r0,[sp,#0x20]
0002d0  b200              SXTH     r0,r0
0002d2  f8ad0010          STRH     r0,[sp,#0x10]
;;;243      LCD_SetColor(pObj->Props.aColor[SCROLLBAR_CI_THUMB]);
0002d6  6aa0              LDR      r0,[r4,#0x28]
0002d8  f7fffffe          BL       LCD_SetColor
;;;244      WIDGET__FillRectEx(&pObj->Widget, &r);
0002dc  a903              ADD      r1,sp,#0xc
0002de  4620              MOV      r0,r4
0002e0  f7fffffe          BL       WIDGET__FillRectEx
;;;245      WIDGET__EFFECT_DrawUpRect(&pObj->Widget, &r);
0002e4  a903              ADD      r1,sp,#0xc
0002e6  4620              MOV      r0,r4
0002e8  f7fffffe          BL       WIDGET__EFFECT_DrawUpRect
;;;246      /*
;;;247        Draw right Arrow
;;;248      */
;;;249      LCD_SetColor(pObj->Props.aColor[SCROLLBAR_CI_THUMB]);
0002ec  6aa0              LDR      r0,[r4,#0x28]
0002ee  f7fffffe          BL       LCD_SetColor
;;;250      r.x0 = Pos.x0_RightArrow;
0002f2  9809              LDR      r0,[sp,#0x24]
0002f4  b200              SXTH     r0,r0
0002f6  f8ad000c          STRH     r0,[sp,#0xc]
;;;251      r.x1 = Pos.x1_RightArrow;
0002fa  980a              LDR      r0,[sp,#0x28]
0002fc  b200              SXTH     r0,r0
0002fe  f8ad0010          STRH     r0,[sp,#0x10]
;;;252      WIDGET__FillRectEx(&pObj->Widget, &r);
000302  a903              ADD      r1,sp,#0xc
000304  4620              MOV      r0,r4
000306  f7fffffe          BL       WIDGET__FillRectEx
;;;253      LCD_SetColor(pObj->Props.aColor[SCROLLBAR_CI_ARROW]);
00030a  6b20              LDR      r0,[r4,#0x30]
00030c  f7fffffe          BL       LCD_SetColor
;;;254      _DrawTriangle(&pObj->Widget, r.x1 - ArrowOff, (r.y1 - r.y0) >> 1, ArrowSize, 1);
000310  2001              MOVS     r0,#1
000312  9000              STR      r0,[sp,#0]
000314  f9bd0012          LDRSH    r0,[sp,#0x12]
000318  f9bd300e          LDRSH    r3,[sp,#0xe]
00031c  1ac0              SUBS     r0,r0,r3
00031e  1042              ASRS     r2,r0,#1
000320  f9bd0010          LDRSH    r0,[sp,#0x10]
000324  1b81              SUBS     r1,r0,r6
000326  462b              MOV      r3,r5
000328  4620              MOV      r0,r4
00032a  f7fffffe          BL       _DrawTriangle
;;;255      WIDGET__EFFECT_DrawUpRect(&pObj->Widget, &r);
00032e  a903              ADD      r1,sp,#0xc
000330  4620              MOV      r0,r4
000332  f7fffffe          BL       WIDGET__EFFECT_DrawUpRect
;;;256      /*
;;;257        Draw overlap area (if any ...)
;;;258      */
;;;259      if (Pos.x1_RightArrow != Pos.x1) {
000336  e9dd010a          LDRD     r0,r1,[sp,#0x28]
00033a  4288              CMP      r0,r1
00033c  d00f              BEQ      |L1.862|
;;;260        r.x0 = Pos.x1_RightArrow + 1;
00033e  980a              LDR      r0,[sp,#0x28]
000340  1c40              ADDS     r0,r0,#1
000342  b200              SXTH     r0,r0
000344  f8ad000c          STRH     r0,[sp,#0xc]
;;;261        r.x1 = Pos.x1;
000348  980b              LDR      r0,[sp,#0x2c]
00034a  b200              SXTH     r0,r0
00034c  f8ad0010          STRH     r0,[sp,#0x10]
;;;262        LCD_SetColor(pObj->Props.aColor[SCROLLBAR_CI_THUMB]);
000350  6aa0              LDR      r0,[r4,#0x28]
000352  f7fffffe          BL       LCD_SetColor
;;;263        WIDGET__FillRectEx(&pObj->Widget, &r);
000356  a903              ADD      r1,sp,#0xc
000358  4620              MOV      r0,r4
00035a  f7fffffe          BL       WIDGET__FillRectEx
                  |L1.862|
;;;264      }
;;;265    }
00035e  b00e              ADD      sp,sp,#0x38
000360  bd70              POP      {r4-r6,pc}
;;;266    
                          ENDP

                  _ScrollbarPressed PROC
;;;270    */
;;;271    static void _ScrollbarPressed(SCROLLBAR_Handle hObj, SCROLLBAR_Obj* pObj) {
000362  b570              PUSH     {r4-r6,lr}
000364  4605              MOV      r5,r0
000366  460c              MOV      r4,r1
;;;272      WIDGET_OrState(hObj, SCROLLBAR_STATE_PRESSED);
000368  f44f7180          MOV      r1,#0x100
00036c  4628              MOV      r0,r5
00036e  f7fffffe          BL       WIDGET_OrState
;;;273      if (pObj->Widget.Win.Status & WM_SF_ISVIS) {
000372  7f20              LDRB     r0,[r4,#0x1c]
000374  f0000002          AND      r0,r0,#2
000378  b118              CBZ      r0,|L1.898|
;;;274        WM_NotifyParent(hObj, WM_NOTIFICATION_CLICKED);
00037a  2101              MOVS     r1,#1
00037c  4628              MOV      r0,r5
00037e  f7fffffe          BL       WM_NotifyParent
                  |L1.898|
;;;275      }
;;;276    }
000382  bd70              POP      {r4-r6,pc}
;;;277    
                          ENDP

                  _ScrollbarReleased PROC
;;;281    */
;;;282    static void _ScrollbarReleased(SCROLLBAR_Handle hObj, SCROLLBAR_Obj* pObj) {
000384  b570              PUSH     {r4-r6,lr}
000386  4605              MOV      r5,r0
000388  460c              MOV      r4,r1
;;;283      WIDGET_AndState(hObj, SCROLLBAR_STATE_PRESSED);
00038a  f44f7180          MOV      r1,#0x100
00038e  4628              MOV      r0,r5
000390  f7fffffe          BL       WIDGET_AndState
;;;284      if (pObj->Widget.Win.Status & WM_SF_ISVIS) {
000394  7f20              LDRB     r0,[r4,#0x1c]
000396  f0000002          AND      r0,r0,#2
00039a  b118              CBZ      r0,|L1.932|
;;;285        WM_NotifyParent(hObj, WM_NOTIFICATION_RELEASED);
00039c  2102              MOVS     r1,#2
00039e  4628              MOV      r0,r5
0003a0  f7fffffe          BL       WM_NotifyParent
                  |L1.932|
;;;286      }
;;;287    }
0003a4  bd70              POP      {r4-r6,pc}
;;;288    
                          ENDP

                  SCROLLBAR_SetValue PROC
;;;567    */
;;;568    void SCROLLBAR_SetValue(SCROLLBAR_Handle hObj, int v) {
0003a6  e92d41f0          PUSH     {r4-r8,lr}
0003aa  4607              MOV      r7,r0
0003ac  460d              MOV      r5,r1
;;;569      SCROLLBAR_Obj* pObj;
;;;570      int Max;
;;;571      if (hObj) {
0003ae  b1d7              CBZ      r7,|L1.998|
;;;572        WM_LOCK();
;;;573        pObj = SCROLLBAR_H2P(hObj);
0003b0  4638              MOV      r0,r7
0003b2  f7fffffe          BL       GUI_ALLOC_h2p
0003b6  4604              MOV      r4,r0
;;;574        Max = pObj->NumItems - pObj->PageSize;
0003b8  6be1              LDR      r1,[r4,#0x3c]
0003ba  6b60              LDR      r0,[r4,#0x34]
0003bc  1a46              SUBS     r6,r0,r1
;;;575        if (Max < 0)
0003be  2e00              CMP      r6,#0
0003c0  da00              BGE      |L1.964|
;;;576          Max =0;
0003c2  2600              MOVS     r6,#0
                  |L1.964|
;;;577        /* Put in min/max range */
;;;578        if (v < 0) {
0003c4  2d00              CMP      r5,#0
0003c6  da00              BGE      |L1.970|
;;;579          v = 0;
0003c8  2500              MOVS     r5,#0
                  |L1.970|
;;;580        }
;;;581        if (v > Max) {
0003ca  42b5              CMP      r5,r6
0003cc  dd00              BLE      |L1.976|
;;;582          v = Max;
0003ce  4635              MOV      r5,r6
                  |L1.976|
;;;583        }
;;;584        if (pObj->v != v) {
0003d0  6ba0              LDR      r0,[r4,#0x38]
0003d2  42a8              CMP      r0,r5
0003d4  d007              BEQ      |L1.998|
;;;585          pObj->v = v;
0003d6  63a5              STR      r5,[r4,#0x38]
;;;586          WM_InvalidateWindow(hObj);
0003d8  4638              MOV      r0,r7
0003da  f7fffffe          BL       WM_InvalidateWindow
;;;587          WM_NotifyParent(hObj, WM_NOTIFICATION_VALUE_CHANGED);
0003de  2105              MOVS     r1,#5
0003e0  4638              MOV      r0,r7
0003e2  f7fffffe          BL       WM_NotifyParent
                  |L1.998|
;;;588        }
;;;589        WM_UNLOCK();
;;;590      }
;;;591    }
0003e6  e8bd81f0          POP      {r4-r8,pc}
;;;592    
                          ENDP

                  _OnTouch PROC
;;;292    */
;;;293    static void _OnTouch(SCROLLBAR_Handle hObj, SCROLLBAR_Obj* pObj, WM_MESSAGE*pMsg) {
0003ea  e92d47f0          PUSH     {r4-r10,lr}
0003ee  b08a              SUB      sp,sp,#0x28
0003f0  4681              MOV      r9,r0
0003f2  460c              MOV      r4,r1
0003f4  4690              MOV      r8,r2
;;;294      SCROLLBAR_POSITIONS Pos;
;;;295      GUI_PID_STATE* pState = (GUI_PID_STATE*)pMsg->Data.p;
0003f6  f8d86008          LDR      r6,[r8,#8]
;;;296      if (pMsg->Data.p) {  /* Something happened in our area (pressed or released) */
0003fa  f8d80008          LDR      r0,[r8,#8]
0003fe  2800              CMP      r0,#0
000400  d059              BEQ      |L1.1206|
;;;297        if (pState->Pressed) {
000402  7a30              LDRB     r0,[r6,#8]
000404  2800              CMP      r0,#0
000406  d04e              BEQ      |L1.1190|
;;;298          int Sel;
;;;299          int Range;
;;;300          int x;
;;;301          Sel = pObj->v;
000408  6ba7              LDR      r7,[r4,#0x38]
;;;302          _CalcPositions(pObj, &Pos);
00040a  a901              ADD      r1,sp,#4
00040c  4620              MOV      r0,r4
00040e  f7fffffe          BL       _CalcPositions
;;;303          Range = pObj->NumItems - pObj->PageSize;
000412  6be1              LDR      r1,[r4,#0x3c]
000414  6b60              LDR      r0,[r4,#0x34]
000416  eba00a01          SUB      r10,r0,r1
;;;304          /* Swap mouse coordinates if necessary */
;;;305          if (pObj->Widget.State & WIDGET_STATE_VERTICAL) {
00041a  f8940026          LDRB     r0,[r4,#0x26]
00041e  f0000008          AND      r0,r0,#8
000422  b120              CBZ      r0,|L1.1070|
;;;306            int t = pState->x;
000424  6830              LDR      r0,[r6,#0]
;;;307            pState->x = pState->y;
000426  6871              LDR      r1,[r6,#4]
000428  6031              STR      r1,[r6,#0]
;;;308            pState->y = t;
00042a  6070              STR      r0,[r6,#4]
;;;309          }
00042c  bf00              NOP      
                  |L1.1070|
;;;310          x = pState->x;
00042e  6835              LDR      r5,[r6,#0]
;;;311          if (x <= Pos.x1_LeftArrow) {         /* left arrow (line left) */
000430  9802              LDR      r0,[sp,#8]
000432  42a8              CMP      r0,r5
000434  db01              BLT      |L1.1082|
;;;312            Sel--;
000436  1e7f              SUBS     r7,r7,#1
000438  e024              B        |L1.1156|
                  |L1.1082|
;;;313          } else if (x < Pos.x0_Thumb) {       /* left area  (page left) */
00043a  9803              LDR      r0,[sp,#0xc]
00043c  42a8              CMP      r0,r5
00043e  dd02              BLE      |L1.1094|
;;;314            Sel -= pObj->PageSize;
000440  6be0              LDR      r0,[r4,#0x3c]
000442  1a3f              SUBS     r7,r7,r0
000444  e01e              B        |L1.1156|
                  |L1.1094|
;;;315          } else if (x <= Pos.x1_Thumb) {      /* Thumb area */
000446  9804              LDR      r0,[sp,#0x10]
000448  42a8              CMP      r0,r5
00044a  db11              BLT      |L1.1136|
;;;316            if (Pos.xSizeMoveable > 0) {
00044c  9808              LDR      r0,[sp,#0x20]
00044e  2800              CMP      r0,#0
000450  dd18              BLE      |L1.1156|
;;;317              x = x - Pos.ThumbSize/2 - Pos.x1_LeftArrow-1;
000452  9809              LDR      r0,[sp,#0x24]
000454  eb0071d0          ADD      r1,r0,r0,LSR #31
000458  eba50161          SUB      r1,r5,r1,ASR #1
00045c  9a02              LDR      r2,[sp,#8]
00045e  1a89              SUBS     r1,r1,r2
000460  1e4d              SUBS     r5,r1,#1
;;;318              Sel = GUI__DivideRound(Range * x, Pos.xSizeMoveable);
000462  fb0af005          MUL      r0,r10,r5
000466  9908              LDR      r1,[sp,#0x20]
000468  f7fffffe          BL       GUI__DivideRound
00046c  4607              MOV      r7,r0
00046e  e009              B        |L1.1156|
                  |L1.1136|
;;;319            }
;;;320          } else if (x < Pos.x0_RightArrow) {  /* right area (page right) */
000470  9805              LDR      r0,[sp,#0x14]
000472  42a8              CMP      r0,r5
000474  dd02              BLE      |L1.1148|
;;;321            Sel += pObj->PageSize;
000476  6be0              LDR      r0,[r4,#0x3c]
000478  4407              ADD      r7,r7,r0
00047a  e003              B        |L1.1156|
                  |L1.1148|
;;;322          } else  if (x <= Pos.x1_RightArrow) {
00047c  9806              LDR      r0,[sp,#0x18]
00047e  42a8              CMP      r0,r5
000480  db00              BLT      |L1.1156|
;;;323            Sel++;
000482  1c7f              ADDS     r7,r7,#1
                  |L1.1156|
;;;324          }
;;;325          /* WM_SetFocus(hObj); */
;;;326          WM_SetCapture(hObj, 1);
000484  2101              MOVS     r1,#1
000486  4648              MOV      r0,r9
000488  f7fffffe          BL       WM_SetCapture
;;;327          SCROLLBAR_SetValue(hObj, Sel);
00048c  4639              MOV      r1,r7
00048e  4648              MOV      r0,r9
000490  f7fffffe          BL       SCROLLBAR_SetValue
;;;328          if ((pObj->Widget.State & SCROLLBAR_STATE_PRESSED) == 0){   
000494  8ce0              LDRH     r0,[r4,#0x26]
000496  f4007080          AND      r0,r0,#0x100
00049a  b918              CBNZ     r0,|L1.1188|
;;;329            _ScrollbarPressed(hObj, pObj);
00049c  4621              MOV      r1,r4
00049e  4648              MOV      r0,r9
0004a0  f7fffffe          BL       _ScrollbarPressed
                  |L1.1188|
;;;330          }
;;;331        } else {
0004a4  e007              B        |L1.1206|
                  |L1.1190|
;;;332          /* React only if button was pressed before ... avoid problems with moving / hiding windows above (such as dropdown) */
;;;333          if (pObj->Widget.State & SCROLLBAR_STATE_PRESSED) {   
0004a6  8ce0              LDRH     r0,[r4,#0x26]
0004a8  f4007080          AND      r0,r0,#0x100
0004ac  b118              CBZ      r0,|L1.1206|
;;;334            _ScrollbarReleased(hObj, pObj);
0004ae  4621              MOV      r1,r4
0004b0  4648              MOV      r0,r9
0004b2  f7fffffe          BL       _ScrollbarReleased
                  |L1.1206|
;;;335          }
;;;336        }
;;;337      }
;;;338    }
0004b6  b00a              ADD      sp,sp,#0x28
0004b8  e8bd87f0          POP      {r4-r10,pc}
;;;339    
                          ENDP

                  SCROLLBAR_AddValue PROC
;;;553    */
;;;554    void SCROLLBAR_AddValue(SCROLLBAR_Handle hObj, int Add) {
0004bc  b570              PUSH     {r4-r6,lr}
0004be  4604              MOV      r4,r0
0004c0  460d              MOV      r5,r1
;;;555      SCROLLBAR_Obj* pObj;
;;;556      if (hObj) {
0004c2  b144              CBZ      r4,|L1.1238|
;;;557        WM_LOCK();
;;;558        pObj = SCROLLBAR_H2P(hObj);
0004c4  4620              MOV      r0,r4
0004c6  f7fffffe          BL       GUI_ALLOC_h2p
0004ca  4606              MOV      r6,r0
;;;559        SCROLLBAR_SetValue(hObj, pObj->v + Add);
0004cc  6bb0              LDR      r0,[r6,#0x38]
0004ce  1941              ADDS     r1,r0,r5
0004d0  4620              MOV      r0,r4
0004d2  f7fffffe          BL       SCROLLBAR_SetValue
                  |L1.1238|
;;;560        WM_UNLOCK();
;;;561      }
;;;562    }
0004d6  bd70              POP      {r4-r6,pc}
;;;563    
                          ENDP

                  SCROLLBAR_Dec PROC
;;;537    */
;;;538    void SCROLLBAR_Dec(SCROLLBAR_Handle hObj) {
0004d8  b510              PUSH     {r4,lr}
0004da  4604              MOV      r4,r0
;;;539      SCROLLBAR_AddValue(hObj, -1);
0004dc  f04f31ff          MOV      r1,#0xffffffff
0004e0  4620              MOV      r0,r4
0004e2  f7fffffe          BL       SCROLLBAR_AddValue
;;;540    }
0004e6  bd10              POP      {r4,pc}
;;;541    
                          ENDP

                  SCROLLBAR_Inc PROC
;;;545    */
;;;546    void SCROLLBAR_Inc(SCROLLBAR_Handle hObj) {
0004e8  b510              PUSH     {r4,lr}
0004ea  4604              MOV      r4,r0
;;;547      SCROLLBAR_AddValue(hObj,  1);
0004ec  2101              MOVS     r1,#1
0004ee  4620              MOV      r0,r4
0004f0  f7fffffe          BL       SCROLLBAR_AddValue
;;;548    }
0004f4  bd10              POP      {r4,pc}
;;;549    
                          ENDP

                  _OnKey PROC
;;;343    */
;;;344    static void  _OnKey(SCROLLBAR_Handle hObj, WM_MESSAGE*pMsg) {
0004f6  e92d41f0          PUSH     {r4-r8,lr}
0004fa  4606              MOV      r6,r0
0004fc  460c              MOV      r4,r1
;;;345      const WM_KEY_INFO* pKeyInfo;
;;;346      int Key;
;;;347      pKeyInfo = (const WM_KEY_INFO*)(pMsg->Data.p);
0004fe  68a5              LDR      r5,[r4,#8]
;;;348      Key = pKeyInfo->Key;
000500  682f              LDR      r7,[r5,#0]
;;;349      if (pKeyInfo->PressedCnt > 0) {
000502  6868              LDR      r0,[r5,#4]
000504  2800              CMP      r0,#0
000506  dd15              BLE      |L1.1332|
;;;350        switch (Key) {
000508  2f10              CMP      r7,#0x10
00050a  d00b              BEQ      |L1.1316|
00050c  2f11              CMP      r7,#0x11
00050e  d00a              BEQ      |L1.1318|
000510  2f12              CMP      r7,#0x12
000512  d002              BEQ      |L1.1306|
000514  2f13              CMP      r7,#0x13
000516  d10a              BNE      |L1.1326|
000518  e000              B        |L1.1308|
                  |L1.1306|
;;;351          case GUI_KEY_RIGHT:
;;;352          case GUI_KEY_DOWN:
00051a  bf00              NOP      
                  |L1.1308|
;;;353            SCROLLBAR_Inc(hObj);
00051c  4630              MOV      r0,r6
00051e  f7fffffe          BL       SCROLLBAR_Inc
;;;354            break;                    /* Send to parent by not doing anything */
000522  e006              B        |L1.1330|
                  |L1.1316|
;;;355          case GUI_KEY_LEFT:
;;;356          case GUI_KEY_UP:
000524  bf00              NOP      
                  |L1.1318|
;;;357            SCROLLBAR_Dec(hObj);
000526  4630              MOV      r0,r6
000528  f7fffffe          BL       SCROLLBAR_Dec
;;;358            break;                    /* Send to parent by not doing anything */
00052c  e001              B        |L1.1330|
                  |L1.1326|
;;;359          default:
;;;360            return;
;;;361        }
;;;362      }
;;;363    }
00052e  e8bd81f0          POP      {r4-r8,pc}
                  |L1.1330|
000532  bf00              NOP                            ;354
                  |L1.1332|
000534  bf00              NOP      
000536  e7fa              B        |L1.1326|
;;;364    
                          ENDP

                  _OnSetScrollState PROC
;;;368    */
;;;369    static void _OnSetScrollState(SCROLLBAR_Handle hObj, SCROLLBAR_Obj* pObj, const WM_SCROLL_STATE* pState) {
000538  b570              PUSH     {r4-r6,lr}
00053a  4606              MOV      r6,r0
00053c  460c              MOV      r4,r1
00053e  4615              MOV      r5,r2
;;;370      if (  (pState->NumItems != pObj->NumItems)
000540  6828              LDR      r0,[r5,#0]
000542  6b61              LDR      r1,[r4,#0x34]
000544  4288              CMP      r0,r1
000546  d107              BNE      |L1.1368|
;;;371          || (pObj->PageSize   != pState->PageSize)
000548  6be0              LDR      r0,[r4,#0x3c]
00054a  68a9              LDR      r1,[r5,#8]
00054c  4288              CMP      r0,r1
00054e  d103              BNE      |L1.1368|
;;;372          || (pObj->v          != pState->v))
000550  6ba0              LDR      r0,[r4,#0x38]
000552  6869              LDR      r1,[r5,#4]
000554  4288              CMP      r0,r1
000556  d00c              BEQ      |L1.1394|
                  |L1.1368|
;;;373      {
;;;374        pObj->NumItems = pState->NumItems;
000558  6828              LDR      r0,[r5,#0]
00055a  6360              STR      r0,[r4,#0x34]
;;;375        pObj->PageSize = pState->PageSize;
00055c  68a8              LDR      r0,[r5,#8]
00055e  63e0              STR      r0,[r4,#0x3c]
;;;376        pObj->v        = pState->v;
000560  6868              LDR      r0,[r5,#4]
000562  63a0              STR      r0,[r4,#0x38]
;;;377        WM_InvalidateWindow(hObj);
000564  4630              MOV      r0,r6
000566  f7fffffe          BL       WM_InvalidateWindow
;;;378        WM_NotifyParent(hObj, WM_NOTIFICATION_VALUE_CHANGED);
00056a  2105              MOVS     r1,#5
00056c  4630              MOV      r0,r6
00056e  f7fffffe          BL       WM_NotifyParent
                  |L1.1394|
;;;379      }
;;;380    }
000572  bd70              POP      {r4-r6,pc}
;;;381    
                          ENDP

                  SCROLLBAR__InvalidatePartner PROC
;;;408    */
;;;409    void SCROLLBAR__InvalidatePartner(SCROLLBAR_Handle hObj) {     /* Invalidate the partner, since it is also affected */
000574  b570              PUSH     {r4-r6,lr}
000576  4604              MOV      r4,r0
;;;410      WM_InvalidateWindow(WM_GetScrollPartner(hObj));
000578  4620              MOV      r0,r4
00057a  f7fffffe          BL       WM_GetScrollPartner
00057e  4605              MOV      r5,r0
000580  f7fffffe          BL       WM_InvalidateWindow
;;;411      WM_SendMessageNoPara(WM_GetParent(hObj), WM_NOTIFY_CLIENTCHANGE);   /* Client area may have changed */
000584  4620              MOV      r0,r4
000586  f7fffffe          BL       WM_GetParent
00058a  4605              MOV      r5,r0
00058c  2125              MOVS     r1,#0x25
00058e  f7fffffe          BL       WM_SendMessageNoPara
;;;412    }
000592  bd70              POP      {r4-r6,pc}
;;;413    
                          ENDP

                  SCROLLBAR_Callback PROC
;;;423    */
;;;424    void SCROLLBAR_Callback (WM_MESSAGE *pMsg) {
000594  b570              PUSH     {r4-r6,lr}
000596  4604              MOV      r4,r0
;;;425      SCROLLBAR_Handle hObj;
;;;426      SCROLLBAR_Obj* pObj;
;;;427      hObj = pMsg->hWin;
000598  f9b46004          LDRSH    r6,[r4,#4]
;;;428      pObj = (SCROLLBAR_Obj *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
00059c  4630              MOV      r0,r6
00059e  f7fffffe          BL       GUI_ALLOC_h2p
0005a2  4605              MOV      r5,r0
;;;429      /* Let widget handle the standard messages */
;;;430      if (WIDGET_HandleActive(hObj, pMsg) == 0) {
0005a4  4621              MOV      r1,r4
0005a6  4630              MOV      r0,r6
0005a8  f7fffffe          BL       WIDGET_HandleActive
0005ac  b900              CBNZ     r0,|L1.1456|
                  |L1.1454|
;;;431        return;
;;;432      }
;;;433      switch (pMsg->MsgId) {
;;;434      case WM_DELETE:
;;;435        SCROLLBAR__InvalidatePartner(hObj);
;;;436        break;
;;;437      case WM_PAINT:
;;;438        GUI_DEBUG_LOG("SCROLLBAR: _Callback(WM_PAINT)\n");
;;;439        _Paint(pObj);
;;;440        return;
;;;441      case WM_TOUCH:
;;;442        _OnTouch(hObj, pObj, pMsg);
;;;443        break;
;;;444      case WM_KEY:
;;;445        _OnKey(hObj, pMsg);
;;;446        break;
;;;447      case WM_SET_SCROLL_STATE:
;;;448        _OnSetScrollState(hObj, pObj, (const WM_SCROLL_STATE*)pMsg->Data.p);
;;;449        break;
;;;450      case WM_GET_SCROLL_STATE:
;;;451        ((WM_SCROLL_STATE*)pMsg->Data.p)->NumItems = pObj->NumItems;
;;;452        ((WM_SCROLL_STATE*)pMsg->Data.p)->PageSize = pObj->PageSize;
;;;453        ((WM_SCROLL_STATE*)pMsg->Data.p)->v        = pObj->v;
;;;454        break;
;;;455      }
;;;456      WM_DefaultProc(pMsg);
;;;457    }
0005ae  bd70              POP      {r4-r6,pc}
                  |L1.1456|
0005b0  6820              LDR      r0,[r4,#0]            ;433
0005b2  280f              CMP      r0,#0xf               ;433
0005b4  d010              BEQ      |L1.1496|
0005b6  dc06              BGT      |L1.1478|
0005b8  280b              CMP      r0,#0xb               ;433
0005ba  d009              BEQ      |L1.1488|
0005bc  280c              CMP      r0,#0xc               ;433
0005be  d00f              BEQ      |L1.1504|
0005c0  280e              CMP      r0,#0xe               ;433
0005c2  d128              BNE      |L1.1558|
0005c4  e012              B        |L1.1516|
                  |L1.1478|
0005c6  2823              CMP      r0,#0x23              ;433
0005c8  d01b              BEQ      |L1.1538|
0005ca  2824              CMP      r0,#0x24              ;433
0005cc  d123              BNE      |L1.1558|
0005ce  e012              B        |L1.1526|
                  |L1.1488|
0005d0  4630              MOV      r0,r6                 ;435
0005d2  f7fffffe          BL       SCROLLBAR__InvalidatePartner
0005d6  e01e              B        |L1.1558|
                  |L1.1496|
0005d8  4628              MOV      r0,r5                 ;439
0005da  f7fffffe          BL       _Paint
0005de  e7e6              B        |L1.1454|
                  |L1.1504|
0005e0  4622              MOV      r2,r4                 ;442
0005e2  4629              MOV      r1,r5                 ;442
0005e4  4630              MOV      r0,r6                 ;442
0005e6  f7fffffe          BL       _OnTouch
0005ea  e014              B        |L1.1558|
                  |L1.1516|
0005ec  4621              MOV      r1,r4                 ;445
0005ee  4630              MOV      r0,r6                 ;445
0005f0  f7fffffe          BL       _OnKey
0005f4  e00f              B        |L1.1558|
                  |L1.1526|
0005f6  4629              MOV      r1,r5                 ;448
0005f8  4630              MOV      r0,r6                 ;448
0005fa  68a2              LDR      r2,[r4,#8]            ;448
0005fc  f7fffffe          BL       _OnSetScrollState
000600  e009              B        |L1.1558|
                  |L1.1538|
000602  6b68              LDR      r0,[r5,#0x34]         ;451
000604  68a1              LDR      r1,[r4,#8]            ;451
000606  6008              STR      r0,[r1,#0]            ;451
000608  6be8              LDR      r0,[r5,#0x3c]         ;452
00060a  68a1              LDR      r1,[r4,#8]            ;452
00060c  6088              STR      r0,[r1,#8]            ;452
00060e  6ba8              LDR      r0,[r5,#0x38]         ;453
000610  68a1              LDR      r1,[r4,#8]            ;453
000612  6048              STR      r0,[r1,#4]            ;453
000614  bf00              NOP                            ;454
                  |L1.1558|
000616  bf00              NOP                            ;436
000618  4620              MOV      r0,r4                 ;456
00061a  f7fffffe          BL       WM_DefaultProc
00061e  bf00              NOP      
000620  e7c5              B        |L1.1454|
;;;458    
                          ENDP

                  SCROLLBAR_CreateEx PROC
;;;472    */
;;;473    SCROLLBAR_Handle SCROLLBAR_CreateEx(int x0, int y0, int xsize, int ysize, WM_HWIN hParent,
000622  e92d4fff          PUSH     {r0-r11,lr}
;;;474                                        int WinFlags, int ExFlags, int Id)
;;;475    {
000626  b085              SUB      sp,sp,#0x14
000628  4616              MOV      r6,r2
00062a  461f              MOV      r7,r3
00062c  f8ddb048          LDR      r11,[sp,#0x48]
000630  e9dd8914          LDRD     r8,r9,[sp,#0x50]
;;;476      SCROLLBAR_Handle hObj;
;;;477      WM_LOCK();
;;;478      /* Set defaults if necessary */
;;;479      if ((xsize == 0) && (ysize == 0)) {
000634  bb5e              CBNZ     r6,|L1.1678|
000636  bb57              CBNZ     r7,|L1.1678|
;;;480        GUI_RECT Rect;
;;;481        WM_GetInsideRectEx(hParent, &Rect);
000638  a903              ADD      r1,sp,#0xc
00063a  4658              MOV      r0,r11
00063c  f7fffffe          BL       WM_GetInsideRectEx
;;;482        if (ExFlags & SCROLLBAR_CF_VERTICAL) {
000640  f0080008          AND      r0,r8,#8
000644  b188              CBZ      r0,|L1.1642|
;;;483          xsize = SCROLLBAR__DefaultWidth;
000646  484c              LDR      r0,|L1.1912|
000648  f9b06000          LDRSH    r6,[r0,#0]  ; SCROLLBAR__DefaultWidth
;;;484          x0    = Rect.x1 + 1 - xsize;
00064c  f9bd0010          LDRSH    r0,[sp,#0x10]
000650  1c40              ADDS     r0,r0,#1
000652  1b80              SUBS     r0,r0,r6
000654  9005              STR      r0,[sp,#0x14]
;;;485          y0    = Rect.y0;
000656  f9bd000e          LDRSH    r0,[sp,#0xe]
00065a  9006              STR      r0,[sp,#0x18]
;;;486          ysize = Rect.y1 - Rect.y0 + 1;
00065c  f9bd0012          LDRSH    r0,[sp,#0x12]
000660  f9bd100e          LDRSH    r1,[sp,#0xe]
000664  1a40              SUBS     r0,r0,r1
000666  1c47              ADDS     r7,r0,#1
000668  e010              B        |L1.1676|
                  |L1.1642|
;;;487        } else {
;;;488          ysize = SCROLLBAR__DefaultWidth;
00066a  4843              LDR      r0,|L1.1912|
00066c  f9b07000          LDRSH    r7,[r0,#0]  ; SCROLLBAR__DefaultWidth
;;;489          y0    = Rect.y1 + 1 - ysize;
000670  f9bd0012          LDRSH    r0,[sp,#0x12]
000674  1c40              ADDS     r0,r0,#1
000676  1bc0              SUBS     r0,r0,r7
000678  9006              STR      r0,[sp,#0x18]
;;;490          x0    = Rect.x0;
00067a  f9bd000c          LDRSH    r0,[sp,#0xc]
00067e  9005              STR      r0,[sp,#0x14]
;;;491          xsize = Rect.x1 - Rect.x0 + 1;
000680  f9bd0010          LDRSH    r0,[sp,#0x10]
000684  f9bd100c          LDRSH    r1,[sp,#0xc]
000688  1a40              SUBS     r0,r0,r1
00068a  1c46              ADDS     r6,r0,#1
                  |L1.1676|
;;;492        }
;;;493      }
00068c  bf00              NOP      
                  |L1.1678|
;;;494      /* Create the window */
;;;495      hObj = WM_CreateWindowAsChild(x0, y0, xsize, ysize, hParent, WinFlags, SCROLLBAR_Callback,
00068e  2120              MOVS     r1,#0x20
000690  f2af02ff          ADR      r2,SCROLLBAR_Callback + 1
000694  9813              LDR      r0,[sp,#0x4c]
000696  b280              UXTH     r0,r0
000698  463b              MOV      r3,r7
00069a  e9cdb000          STRD     r11,r0,[sp,#0]
00069e  e9cd2102          STRD     r2,r1,[sp,#8]
0006a2  4632              MOV      r2,r6
0006a4  e9dd0105          LDRD     r0,r1,[sp,#0x14]
0006a8  f7fffffe          BL       WM_CreateWindowAsChild
0006ac  4682              MOV      r10,r0
;;;496                                    sizeof(SCROLLBAR_Obj) - sizeof(WM_Obj));
;;;497      if (hObj) {
0006ae  f1ba0f00          CMP      r10,#0
0006b2  d02c              BEQ      |L1.1806|
;;;498        SCROLLBAR_Obj * pObj;
;;;499        U16 InitState;
;;;500        pObj = (SCROLLBAR_Obj *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
0006b4  4650              MOV      r0,r10
0006b6  f7fffffe          BL       GUI_ALLOC_h2p
0006ba  4604              MOV      r4,r0
;;;501        /* Handle SpecialFlags */
;;;502        InitState = 0;
0006bc  2500              MOVS     r5,#0
;;;503        if (ExFlags & SCROLLBAR_CF_VERTICAL) {
0006be  f0080008          AND      r0,r8,#8
0006c2  b108              CBZ      r0,|L1.1736|
;;;504          InitState |= WIDGET_CF_VERTICAL;
0006c4  f0450508          ORR      r5,r5,#8
                  |L1.1736|
;;;505        }
;;;506        if (ExFlags & SCROLLBAR_CF_FOCUSSABLE) {
0006c8  f0080010          AND      r0,r8,#0x10
0006cc  b108              CBZ      r0,|L1.1746|
;;;507          InitState |= WIDGET_STATE_FOCUSSABLE;
0006ce  f0450510          ORR      r5,r5,#0x10
                  |L1.1746|
;;;508        }
;;;509        if ((Id != GUI_ID_HSCROLL) && (Id != GUI_ID_VSCROLL)) {
0006d2  f1b90fff          CMP      r9,#0xff
0006d6  d004              BEQ      |L1.1762|
0006d8  f1b90ffe          CMP      r9,#0xfe
0006dc  d001              BEQ      |L1.1762|
;;;510          InitState |= WIDGET_STATE_FOCUSSABLE;
0006de  f0450510          ORR      r5,r5,#0x10
                  |L1.1762|
;;;511        }
;;;512        /* init widget specific variables */
;;;513        WIDGET__Init(&pObj->Widget, Id, InitState);
0006e2  462a              MOV      r2,r5
0006e4  4649              MOV      r1,r9
0006e6  4620              MOV      r0,r4
0006e8  f7fffffe          BL       WIDGET__Init
;;;514        /* init member variables */
;;;515        SCROLLBAR_INIT_ID(pObj);
;;;516        pObj->Props         = SCROLLBAR__DefaultProps;
0006ec  4a23              LDR      r2,|L1.1916|
0006ee  e9d21000          LDRD     r1,r0,[r2,#0]
0006f2  6892              LDR      r2,[r2,#8]  ; SCROLLBAR__DefaultProps
0006f4  e9c4020b          STRD     r0,r2,[r4,#0x2c]
0006f8  62a1              STR      r1,[r4,#0x28]
;;;517        pObj->NumItems      = 100;
0006fa  2064              MOVS     r0,#0x64
0006fc  6360              STR      r0,[r4,#0x34]
;;;518        pObj->PageSize      =  10;
0006fe  200a              MOVS     r0,#0xa
000700  63e0              STR      r0,[r4,#0x3c]
;;;519        pObj->v             =   0;
000702  2000              MOVS     r0,#0
000704  63a0              STR      r0,[r4,#0x38]
;;;520        SCROLLBAR__InvalidatePartner(hObj);
000706  4650              MOV      r0,r10
000708  f7fffffe          BL       SCROLLBAR__InvalidatePartner
;;;521      } else {
00070c  bf00              NOP      
                  |L1.1806|
;;;522        GUI_DEBUG_ERROROUT_IF(hObj==0, "SCROLLBAR_Create failed")
;;;523      }
;;;524      WM_UNLOCK();
;;;525      return hObj;
00070e  4650              MOV      r0,r10
;;;526    }
000710  b009              ADD      sp,sp,#0x24
000712  e8bd8ff0          POP      {r4-r11,pc}
;;;527    
                          ENDP

                  SCROLLBAR_SetNumItems PROC
;;;596    */
;;;597    void SCROLLBAR_SetNumItems(SCROLLBAR_Handle hObj, int NumItems) {
000716  b570              PUSH     {r4-r6,lr}
000718  4606              MOV      r6,r0
00071a  460d              MOV      r5,r1
;;;598      SCROLLBAR_Obj* pObj;
;;;599      if (hObj) {
00071c  b156              CBZ      r6,|L1.1844|
;;;600        WM_LOCK();
;;;601        pObj = SCROLLBAR_H2P(hObj);
00071e  4630              MOV      r0,r6
000720  f7fffffe          BL       GUI_ALLOC_h2p
000724  4604              MOV      r4,r0
;;;602        if (pObj->NumItems != NumItems) {
000726  6b60              LDR      r0,[r4,#0x34]
000728  42a8              CMP      r0,r5
00072a  d003              BEQ      |L1.1844|
;;;603          pObj->NumItems = NumItems;
00072c  6365              STR      r5,[r4,#0x34]
;;;604          WM_InvalidateWindow(hObj);
00072e  4630              MOV      r0,r6
000730  f7fffffe          BL       WM_InvalidateWindow
                  |L1.1844|
;;;605        }
;;;606        WM_UNLOCK();
;;;607      }
;;;608    }
000734  bd70              POP      {r4-r6,pc}
;;;609    
                          ENDP

                  SCROLLBAR_SetPageSize PROC
;;;613    */
;;;614    void SCROLLBAR_SetPageSize(SCROLLBAR_Handle hObj, int PageSize) {
000736  b570              PUSH     {r4-r6,lr}
000738  4606              MOV      r6,r0
00073a  460d              MOV      r5,r1
;;;615      SCROLLBAR_Obj* pObj;
;;;616      if (hObj) {
00073c  b156              CBZ      r6,|L1.1876|
;;;617        WM_LOCK();
;;;618        pObj = SCROLLBAR_H2P(hObj);
00073e  4630              MOV      r0,r6
000740  f7fffffe          BL       GUI_ALLOC_h2p
000744  4604              MOV      r4,r0
;;;619        if (pObj->PageSize != PageSize) {
000746  6be0              LDR      r0,[r4,#0x3c]
000748  42a8              CMP      r0,r5
00074a  d003              BEQ      |L1.1876|
;;;620          pObj->PageSize = PageSize;
00074c  63e5              STR      r5,[r4,#0x3c]
;;;621          WM_InvalidateWindow(hObj);
00074e  4630              MOV      r0,r6
000750  f7fffffe          BL       WM_InvalidateWindow
                  |L1.1876|
;;;622        }
;;;623        WM_UNLOCK();
;;;624      }
;;;625    }
000754  bd70              POP      {r4-r6,pc}
;;;626    
                          ENDP

                  SCROLLBAR_SetState PROC
;;;630    */
;;;631    void  SCROLLBAR_SetState   (SCROLLBAR_Handle hObj, const WM_SCROLL_STATE* pState) {
000756  b570              PUSH     {r4-r6,lr}
000758  4605              MOV      r5,r0
00075a  460c              MOV      r4,r1
;;;632      if (hObj) {
00075c  b15d              CBZ      r5,|L1.1910|
;;;633        SCROLLBAR_SetPageSize(hObj, pState->PageSize);
00075e  4628              MOV      r0,r5
000760  68a1              LDR      r1,[r4,#8]
000762  f7fffffe          BL       SCROLLBAR_SetPageSize
;;;634        SCROLLBAR_SetNumItems(hObj, pState->NumItems);
000766  4628              MOV      r0,r5
000768  6821              LDR      r1,[r4,#0]
00076a  f7fffffe          BL       SCROLLBAR_SetNumItems
;;;635        SCROLLBAR_SetValue   (hObj, pState->v);
00076e  4628              MOV      r0,r5
000770  6861              LDR      r1,[r4,#4]
000772  f7fffffe          BL       SCROLLBAR_SetValue
                  |L1.1910|
;;;636      }
;;;637    }
000776  bd70              POP      {r4-r6,pc}
;;;638    
                          ENDP

                  |L1.1912|
                          DCD      SCROLLBAR__DefaultWidth
                  |L1.1916|
                          DCD      SCROLLBAR__DefaultProps

                          AREA ||.data||, DATA, ALIGN=2

                  SCROLLBAR__DefaultProps
                          DCD      0x00c0c0c0
                          DCD      0x00808080
                          DCD      0x00000000
                  SCROLLBAR__DefaultWidth
00000c  000b              DCW      0x000b

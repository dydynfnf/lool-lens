; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\gui_drawpoint.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\gui_drawpoint.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -IC:\Users\Administrator\Desktop\gui\STM32·Ü¶·°å-3.98\RTE -Id:\Keil_v5\ARM\PACK\ARM\CMSIS\4.3.0\CMSIS\Include -Id:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.1.0\Device\Include -D__UVISION_VERSION=515 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\gui_drawpoint.crf GUI\Core\GUI_DrawPoint.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  GL_DrawPoint PROC
;;;27     */
;;;28     void GL_DrawPoint(int x, int y) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;29       if (GUI_Context.PenSize == 1) {
000006  4816              LDR      r0,|L1.96|
000008  7e00              LDRB     r0,[r0,#0x18]  ; GUI_Context
00000a  2801              CMP      r0,#1
00000c  d106              BNE      |L1.28|
;;;30         LCD_HL_DrawPixel(x, y);
00000e  4814              LDR      r0,|L1.96|
000010  6d80              LDR      r0,[r0,#0x58]  ; GUI_Context
000012  4629              MOV      r1,r5
000014  6842              LDR      r2,[r0,#4]
000016  4620              MOV      r0,r4
000018  4790              BLX      r2
00001a  e009              B        |L1.48|
                  |L1.28|
;;;31       } else {
;;;32         GL_FillCircle(x, y, (GUI_Context.PenSize - 1) / 2);
00001c  4810              LDR      r0,|L1.96|
00001e  7e00              LDRB     r0,[r0,#0x18]  ; GUI_Context
000020  1e46              SUBS     r6,r0,#1
000022  eb0670d6          ADD      r0,r6,r6,LSR #31
000026  1042              ASRS     r2,r0,#1
000028  4629              MOV      r1,r5
00002a  4620              MOV      r0,r4
00002c  f7fffffe          BL       GL_FillCircle
                  |L1.48|
;;;33       }
;;;34     }
000030  bd70              POP      {r4-r6,pc}
;;;35     
                          ENDP

                  GUI_DrawPoint PROC
;;;39     */
;;;40     void GUI_DrawPoint(int x, int y) {
000032  b570              PUSH     {r4-r6,lr}
000034  4604              MOV      r4,r0
000036  460d              MOV      r5,r1
;;;41       GUI_LOCK();
;;;42       #if (GUI_WINSUPPORT)
;;;43         WM_ADDORG(x, y);
000038  4809              LDR      r0,|L1.96|
00003a  6c00              LDR      r0,[r0,#0x40]  ; GUI_Context
00003c  4404              ADD      r4,r4,r0
00003e  4808              LDR      r0,|L1.96|
000040  6c40              LDR      r0,[r0,#0x44]  ; GUI_Context
000042  4405              ADD      r5,r5,r0
;;;44         WM_ITERATE_START(NULL); {
000044  2000              MOVS     r0,#0
000046  f7fffffe          BL       WM__InitIVRSearch
00004a  b140              CBZ      r0,|L1.94|
00004c  bf00              NOP      
                  |L1.78|
;;;45       #endif
;;;46       GL_DrawPoint(x, y);
00004e  4629              MOV      r1,r5
000050  4620              MOV      r0,r4
000052  f7fffffe          BL       GL_DrawPoint
;;;47       #if (GUI_WINSUPPORT)
;;;48         } WM_ITERATE_END();
000056  f7fffffe          BL       WM__GetNextIVR
00005a  2800              CMP      r0,#0
00005c  d1f7              BNE      |L1.78|
                  |L1.94|
;;;49       #endif
;;;50       GUI_UNLOCK();
;;;51     }
00005e  bd70              POP      {r4-r6,pc}
;;;52     
                          ENDP

                  |L1.96|
                          DCD      GUI_Context

; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\button.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\button.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -IC:\Users\Administrator\Desktop\gui\STM32·Ü¶·°å-3.98\RTE -Id:\Keil_v5\ARM\PACK\ARM\CMSIS\4.3.0\CMSIS\Include -Id:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.1.0\Device\Include -D__UVISION_VERSION=515 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\button.crf GUI\Widget\BUTTON.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _Paint PROC
;;;120    */
;;;121    static void _Paint(BUTTON_Obj* pObj, BUTTON_Handle hObj) {
000000  e92d4ff0          PUSH     {r4-r11,lr}
000004  b087              SUB      sp,sp,#0x1c
000006  4604              MOV      r4,r0
000008  4688              MOV      r8,r1
;;;122      const char* s = NULL;
00000a  f04f0b00          MOV      r11,#0
;;;123      unsigned int Index;
;;;124      int State, PressedState, ColorIndex;
;;;125      GUI_RECT rClient, rInside;
;;;126      State = pObj->Widget.State;
00000e  f8b49026          LDRH     r9,[r4,#0x26]
;;;127      PressedState = (State & BUTTON_STATE_PRESSED) ? 1 : 0;
000012  f3c92500          UBFX     r5,r9,#8,#1
;;;128      ColorIndex   = (WM__IsEnabled(hObj)) ? PressedState : 2;
000016  4640              MOV      r0,r8
000018  f7fffffe          BL       WM__IsEnabled
00001c  b108              CBZ      r0,|L1.34|
00001e  4628              MOV      r0,r5
000020  e000              B        |L1.36|
                  |L1.34|
000022  2002              MOVS     r0,#2
                  |L1.36|
000024  4606              MOV      r6,r0
;;;129      GUI_SetFont(pObj->Props.pFont);
000026  6c60              LDR      r0,[r4,#0x44]
000028  f7fffffe          BL       GUI_SetFont
;;;130      GUI_DEBUG_LOG("BUTTON: Paint(..)\n");
;;;131      if (pObj->hpText) {
00002c  f8b4004c          LDRH     r0,[r4,#0x4c]
000030  b120              CBZ      r0,|L1.60|
;;;132        s = (const char*) GUI_ALLOC_h2p(pObj->hpText);
000032  f9b4004c          LDRSH    r0,[r4,#0x4c]
000036  f7fffffe          BL       GUI_ALLOC_h2p
00003a  4683              MOV      r11,r0
                  |L1.60|
;;;133      }
;;;134      GUI_GetClientRect(&rClient);
00003c  a805              ADD      r0,sp,#0x14
00003e  f7fffffe          BL       GUI_GetClientRect
;;;135      /* Start drawing */
;;;136      rInside = rClient;
000042  e9dd0105          LDRD     r0,r1,[sp,#0x14]
000046  e9cd0103          STRD     r0,r1,[sp,#0xc]
;;;137    /* Draw the 3D effect (if configured) */
;;;138      #if BUTTON_USE_3D
;;;139      {
;;;140        int EffectSize;
;;;141        if ((PressedState) == 0) {
00004a  b92d              CBNZ     r5,|L1.88|
;;;142          pObj->Widget.pEffect->pfDrawUp();  /* _WIDGET_EFFECT_3D_DrawUp(); */
00004c  6a21              LDR      r1,[r4,#0x20]
00004e  6808              LDR      r0,[r1,#0]
000050  4780              BLX      r0
;;;143          EffectSize = pObj->Widget.pEffect->EffectSize;
000052  6a20              LDR      r0,[r4,#0x20]
000054  6947              LDR      r7,[r0,#0x14]
000056  e00d              B        |L1.116|
                  |L1.88|
;;;144        } else {
;;;145          LCD_SetColor(0x000000);
000058  2000              MOVS     r0,#0
00005a  f7fffffe          BL       LCD_SetColor
;;;146          GUI_DrawRect(rClient.y0, rClient.x0, rClient.x1, rClient.y1);
00005e  f9bd301a          LDRSH    r3,[sp,#0x1a]
000062  f9bd2018          LDRSH    r2,[sp,#0x18]
000066  f9bd1014          LDRSH    r1,[sp,#0x14]
00006a  f9bd0016          LDRSH    r0,[sp,#0x16]
00006e  f7fffffe          BL       GUI_DrawRect
;;;147          EffectSize = 1;
000072  2701              MOVS     r7,#1
                  |L1.116|
;;;148        }
;;;149        GUI__ReduceRect(&rInside, &rInside, EffectSize); 
000074  463a              MOV      r2,r7
000076  a903              ADD      r1,sp,#0xc
000078  a803              ADD      r0,sp,#0xc
00007a  f7fffffe          BL       GUI__ReduceRect
;;;150      }
;;;151      #endif
;;;152      /* Draw background */
;;;153      LCD_SetBkColor (pObj->Props.aBkColor[ColorIndex]);
00007e  f1040128          ADD      r1,r4,#0x28
000082  f8510026          LDR      r0,[r1,r6,LSL #2]
000086  f7fffffe          BL       LCD_SetBkColor
;;;154      LCD_SetColor   (pObj->Props.aTextColor[ColorIndex]);
00008a  f1040134          ADD      r1,r4,#0x34
00008e  f8510026          LDR      r0,[r1,r6,LSL #2]
000092  f7fffffe          BL       LCD_SetColor
;;;155      WM_SetUserClipRect(&rInside);
000096  a803              ADD      r0,sp,#0xc
000098  f7fffffe          BL       WM_SetUserClipRect
;;;156      GUI_Clear();
00009c  f7fffffe          BL       GUI_Clear
;;;157      /* Draw bitmap.
;;;158         If we have only one, we will use it.
;;;159         If we have to we will use the second one (Index 1) for the pressed state
;;;160      */
;;;161      if (ColorIndex < 2) {
0000a0  2e02              CMP      r6,#2
0000a2  da08              BGE      |L1.182|
;;;162        Index = (pObj->ahDrawObj[BUTTON_BI_PRESSED] && PressedState) ? BUTTON_BI_PRESSED : BUTTON_BI_UNPRESSED;
0000a4  2050              MOVS     r0,#0x50
0000a6  5b00              LDRH     r0,[r0,r4]
0000a8  b110              CBZ      r0,|L1.176|
0000aa  b10d              CBZ      r5,|L1.176|
0000ac  2001              MOVS     r0,#1
0000ae  e000              B        |L1.178|
                  |L1.176|
0000b0  2000              MOVS     r0,#0
                  |L1.178|
0000b2  4682              MOV      r10,r0
0000b4  e006              B        |L1.196|
                  |L1.182|
;;;163      } else {
;;;164        Index = pObj->ahDrawObj[BUTTON_BI_DISABLED] ? BUTTON_BI_DISABLED : BUTTON_BI_UNPRESSED;
0000b6  2052              MOVS     r0,#0x52
0000b8  5b00              LDRH     r0,[r0,r4]
0000ba  b108              CBZ      r0,|L1.192|
0000bc  2002              MOVS     r0,#2
0000be  e000              B        |L1.194|
                  |L1.192|
0000c0  2000              MOVS     r0,#0
                  |L1.194|
0000c2  4682              MOV      r10,r0
                  |L1.196|
;;;165      }
;;;166      GUI_DRAW__Draw(pObj->ahDrawObj[Index], 0, 0);
0000c4  f104014e          ADD      r1,r4,#0x4e
0000c8  f931001a          LDRSH    r0,[r1,r10,LSL #1]
0000cc  2200              MOVS     r2,#0
0000ce  4611              MOV      r1,r2
0000d0  f7fffffe          BL       GUI_DRAW__Draw
;;;167    /* Draw the actual button (background and text) */  
;;;168      {
;;;169        GUI_RECT r;
;;;170        r = rInside;
0000d4  e9dd0103          LDRD     r0,r1,[sp,#0xc]
0000d8  e9cd0101          STRD     r0,r1,[sp,#4]
;;;171        #if BUTTON_USE_3D
;;;172          if (PressedState) {
0000dc  b125              CBZ      r5,|L1.232|
;;;173            GUI_MoveRect(&r, BUTTON_3D_MOVE_X,BUTTON_3D_MOVE_Y);
0000de  2201              MOVS     r2,#1
0000e0  4611              MOV      r1,r2
0000e2  a801              ADD      r0,sp,#4
0000e4  f7fffffe          BL       GUI_MoveRect
                  |L1.232|
;;;174          }
;;;175        #endif
;;;176        GUI_SetTextMode(GUI_TM_TRANS);
0000e8  2002              MOVS     r0,#2
0000ea  f7fffffe          BL       GUI_SetTextMode
;;;177        GUI_DispStringInRect(s, &r, pObj->Props.Align);
0000ee  f9b42048          LDRSH    r2,[r4,#0x48]
0000f2  a901              ADD      r1,sp,#4
0000f4  4658              MOV      r0,r11
0000f6  f7fffffe          BL       GUI_DispStringInRect
;;;178      }
;;;179      /* Draw focus */
;;;180      if (State & BUTTON_STATE_FOCUS) {
0000fa  f0090001          AND      r0,r9,#1
0000fe  b130              CBZ      r0,|L1.270|
;;;181        LCD_SetColor(pObj->Props.FocusColor);
000100  6c20              LDR      r0,[r4,#0x40]
000102  f7fffffe          BL       LCD_SetColor
;;;182        GUI_DrawFocusRect(&rClient, 2);
000106  2102              MOVS     r1,#2
000108  a805              ADD      r0,sp,#0x14
00010a  f7fffffe          BL       GUI_DrawFocusRect
                  |L1.270|
;;;183      }
;;;184      WM_SetUserClipRect(NULL);
00010e  2000              MOVS     r0,#0
000110  f7fffffe          BL       WM_SetUserClipRect
;;;185    }
000114  b007              ADD      sp,sp,#0x1c
000116  e8bd8ff0          POP      {r4-r11,pc}
;;;186    
                          ENDP

                  _Delete PROC
;;;192    */
;;;193    static void _Delete(BUTTON_Obj* pObj) {
00011a  b510              PUSH     {r4,lr}
00011c  4604              MOV      r4,r0
;;;194      GUI_ALLOC_FreePtr(&pObj->hpText);
00011e  f104004c          ADD      r0,r4,#0x4c
000122  f7fffffe          BL       GUI_ALLOC_FreePtr
;;;195      GUI_ALLOC_FreePtrArray(pObj->ahDrawObj, GUI_COUNTOF(pObj->ahDrawObj));
000126  2103              MOVS     r1,#3
000128  f104004e          ADD      r0,r4,#0x4e
00012c  f7fffffe          BL       GUI_ALLOC_FreePtrArray
;;;196    }
000130  bd10              POP      {r4,pc}
;;;197    
                          ENDP

                  _OnButtonPressed PROC
;;;201    */
;;;202    static void _OnButtonPressed(BUTTON_Handle hObj, BUTTON_Obj* pObj) {
000132  b570              PUSH     {r4-r6,lr}
000134  4605              MOV      r5,r0
000136  460c              MOV      r4,r1
;;;203      WIDGET_OrState(hObj, BUTTON_STATE_PRESSED);
000138  f44f7180          MOV      r1,#0x100
00013c  4628              MOV      r0,r5
00013e  f7fffffe          BL       WIDGET_OrState
;;;204      if (pObj->Widget.Win.Status & WM_SF_ISVIS) {
000142  7f20              LDRB     r0,[r4,#0x1c]
000144  f0000002          AND      r0,r0,#2
000148  b118              CBZ      r0,|L1.338|
;;;205        WM_NotifyParent(hObj, WM_NOTIFICATION_CLICKED);
00014a  2101              MOVS     r1,#1
00014c  4628              MOV      r0,r5
00014e  f7fffffe          BL       WM_NotifyParent
                  |L1.338|
;;;206      }
;;;207    }
000152  bd70              POP      {r4-r6,pc}
;;;208    
                          ENDP

                  _OnButtonReleased PROC
;;;212    */
;;;213    static void _OnButtonReleased(BUTTON_Handle hObj, BUTTON_Obj* pObj, int Notification) {
000154  b570              PUSH     {r4-r6,lr}
000156  4606              MOV      r6,r0
000158  460c              MOV      r4,r1
00015a  4615              MOV      r5,r2
;;;214      WIDGET_AndState(hObj, BUTTON_STATE_PRESSED);
00015c  f44f7180          MOV      r1,#0x100
000160  4630              MOV      r0,r6
000162  f7fffffe          BL       WIDGET_AndState
;;;215      if (Notification == WM_NOTIFICATION_RELEASED) {
000166  2d02              CMP      r5,#2
000168  d103              BNE      |L1.370|
;;;216        GUI_DEBUG_LOG("BUTTON: Hit\n");
;;;217        GUI_StoreKey(pObj->Widget.Id);
00016a  f9b40024          LDRSH    r0,[r4,#0x24]
00016e  f7fffffe          BL       GUI_StoreKey
                  |L1.370|
;;;218      }
;;;219      if (pObj->Widget.Win.Status & WM_SF_ISVIS) {
000172  7f20              LDRB     r0,[r4,#0x1c]
000174  f0000002          AND      r0,r0,#2
000178  b118              CBZ      r0,|L1.386|
;;;220        WM_NotifyParent(hObj, Notification);
00017a  4629              MOV      r1,r5
00017c  4630              MOV      r0,r6
00017e  f7fffffe          BL       WM_NotifyParent
                  |L1.386|
;;;221      }
;;;222    }
000182  bd70              POP      {r4-r6,pc}
;;;223    
                          ENDP

                  _OnTouch PROC
;;;227    */
;;;228    static void _OnTouch(BUTTON_Handle hObj, BUTTON_Obj* pObj, WM_MESSAGE*pMsg) {
000184  e92d41f0          PUSH     {r4-r8,lr}
000188  4606              MOV      r6,r0
00018a  460c              MOV      r4,r1
00018c  4615              MOV      r5,r2
;;;229      const GUI_PID_STATE* pState = (const GUI_PID_STATE*)pMsg->Data.p;
00018e  68af              LDR      r7,[r5,#8]
;;;230    #if BUTTON_REACT_ON_LEVEL
;;;231      if (!pMsg->Data.p) {  /* Mouse moved out */
;;;232        _OnButtonReleased(hObj, pObj, WM_NOTIFICATION_MOVED_OUT);
;;;233      } else if ((!pState->Pressed) && (pObj->Widget.State & BUTTON_STATE_PRESSED)) {
;;;234        _OnButtonReleased(hObj, pObj, WM_NOTIFICATION_MOVED_OUT);
;;;235      }
;;;236    #else
;;;237      if (pMsg->Data.p) {  /* Something happened in our area (pressed or released) */
000190  68a8              LDR      r0,[r5,#8]
000192  b1a0              CBZ      r0,|L1.446|
;;;238        if (pState->Pressed) {
000194  7a38              LDRB     r0,[r7,#8]
000196  b140              CBZ      r0,|L1.426|
;;;239          if ((pObj->Widget.State & BUTTON_STATE_PRESSED) == 0){   
000198  8ce0              LDRH     r0,[r4,#0x26]
00019a  f4007080          AND      r0,r0,#0x100
00019e  b998              CBNZ     r0,|L1.456|
;;;240            _OnButtonPressed(hObj, pObj);
0001a0  4621              MOV      r1,r4
0001a2  4630              MOV      r0,r6
0001a4  f7fffffe          BL       _OnButtonPressed
0001a8  e00e              B        |L1.456|
                  |L1.426|
;;;241          }
;;;242        } else {
;;;243          /* React only if button was pressed before ... avoid problems with moving / hiding windows above (such as dropdown) */
;;;244          if (pObj->Widget.State & BUTTON_STATE_PRESSED) {   
0001aa  8ce0              LDRH     r0,[r4,#0x26]
0001ac  f4007080          AND      r0,r0,#0x100
0001b0  b150              CBZ      r0,|L1.456|
;;;245            _OnButtonReleased(hObj, pObj, WM_NOTIFICATION_RELEASED);
0001b2  2202              MOVS     r2,#2
0001b4  4621              MOV      r1,r4
0001b6  4630              MOV      r0,r6
0001b8  f7fffffe          BL       _OnButtonReleased
0001bc  e004              B        |L1.456|
                  |L1.446|
;;;246          }
;;;247        }
;;;248      } else {
;;;249        _OnButtonReleased(hObj, pObj, WM_NOTIFICATION_MOVED_OUT);
0001be  2203              MOVS     r2,#3
0001c0  4621              MOV      r1,r4
0001c2  4630              MOV      r0,r6
0001c4  f7fffffe          BL       _OnButtonReleased
                  |L1.456|
;;;250      }
;;;251    #endif
;;;252    }
0001c8  e8bd81f0          POP      {r4-r8,pc}
;;;253    
                          ENDP

                  BUTTON_Callback PROC
;;;305    */
;;;306    void BUTTON_Callback(WM_MESSAGE *pMsg) {
0001cc  e92d41f0          PUSH     {r4-r8,lr}
0001d0  4604              MOV      r4,r0
;;;307      int PressedCnt, Key;
;;;308      BUTTON_Handle hObj = pMsg->hWin;
0001d2  f9b47004          LDRSH    r7,[r4,#4]
;;;309      BUTTON_Obj * pObj = (BUTTON_Obj *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
0001d6  4638              MOV      r0,r7
0001d8  f7fffffe          BL       GUI_ALLOC_h2p
0001dc  4680              MOV      r8,r0
;;;310      /* Let widget handle the standard messages */
;;;311      if (WIDGET_HandleActive(hObj, pMsg) == 0) {
0001de  4621              MOV      r1,r4
0001e0  4638              MOV      r0,r7
0001e2  f7fffffe          BL       WIDGET_HandleActive
0001e6  b908              CBNZ     r0,|L1.492|
                  |L1.488|
;;;312        return;
;;;313      }
;;;314      switch (pMsg->MsgId) {
;;;315    #if BUTTON_REACT_ON_LEVEL
;;;316      case WM_PID_STATE_CHANGED:
;;;317        _OnPidStateChange(hObj, pObj, pMsg);
;;;318        return;      /* Message handled. Do not call WM_DefaultProc, because the window may have been destroyed */
;;;319    #endif
;;;320      case WM_TOUCH:
;;;321        _OnTouch(hObj, pObj, pMsg);
;;;322        return;      /* Message handled. Do not call WM_DefaultProc, because the window may have been destroyed */
;;;323      case WM_PAINT:
;;;324        GUI_DEBUG_LOG("BUTTON: _BUTTON_Callback(WM_PAINT)\n");
;;;325        _Paint(pObj, hObj);
;;;326        return;
;;;327      case WM_DELETE:
;;;328        GUI_DEBUG_LOG("BUTTON: _BUTTON_Callback(WM_DELETE)\n");
;;;329        _Delete(pObj);
;;;330        break;       /* No return here ... WM_DefaultProc needs to be called */
;;;331      case WM_KEY:
;;;332        PressedCnt = ((WM_KEY_INFO*)(pMsg->Data.p))->PressedCnt;
;;;333        Key        = ((WM_KEY_INFO*)(pMsg->Data.p))->Key;
;;;334        switch (Key) {
;;;335        case GUI_KEY_ENTER:
;;;336          if (PressedCnt > 0) {
;;;337            _OnButtonPressed(hObj, pObj);
;;;338            _OnButtonReleased(hObj, pObj, WM_NOTIFICATION_RELEASED);
;;;339            return;
;;;340          }
;;;341          break;
;;;342        case GUI_KEY_SPACE:
;;;343          if (PressedCnt > 0) {
;;;344            _OnButtonPressed(hObj, pObj);
;;;345          } else {
;;;346            _OnButtonReleased(hObj, pObj, WM_NOTIFICATION_RELEASED);
;;;347          }
;;;348          return;
;;;349        }
;;;350      }
;;;351      WM_DefaultProc(pMsg);
;;;352    }
0001e8  e8bd81f0          POP      {r4-r8,pc}
                  |L1.492|
0001ec  6820              LDR      r0,[r4,#0]            ;314
0001ee  280b              CMP      r0,#0xb               ;314
0001f0  d011              BEQ      |L1.534|
0001f2  280c              CMP      r0,#0xc               ;314
0001f4  d004              BEQ      |L1.512|
0001f6  280e              CMP      r0,#0xe               ;314
0001f8  d011              BEQ      |L1.542|
0001fa  280f              CMP      r0,#0xf               ;314
0001fc  d134              BNE      |L1.616|
0001fe  e005              B        |L1.524|
                  |L1.512|
000200  4622              MOV      r2,r4                 ;321
000202  4641              MOV      r1,r8                 ;321
000204  4638              MOV      r0,r7                 ;321
000206  f7fffffe          BL       _OnTouch
00020a  e7ed              B        |L1.488|
                  |L1.524|
00020c  4639              MOV      r1,r7                 ;325
00020e  4640              MOV      r0,r8                 ;325
000210  f7fffffe          BL       _Paint
000214  e7e8              B        |L1.488|
                  |L1.534|
000216  4640              MOV      r0,r8                 ;329
000218  f7fffffe          BL       _Delete
00021c  e024              B        |L1.616|
                  |L1.542|
00021e  68a0              LDR      r0,[r4,#8]            ;332
000220  6845              LDR      r5,[r0,#4]            ;332
000222  68a0              LDR      r0,[r4,#8]            ;333
000224  6806              LDR      r6,[r0,#0]            ;333
000226  2e0d              CMP      r6,#0xd               ;334
000228  d002              BEQ      |L1.560|
00022a  2e20              CMP      r6,#0x20              ;334
00022c  d11a              BNE      |L1.612|
00022e  e00c              B        |L1.586|
                  |L1.560|
000230  2d00              CMP      r5,#0                 ;336
000232  dd09              BLE      |L1.584|
000234  4641              MOV      r1,r8                 ;337
000236  4638              MOV      r0,r7                 ;337
000238  f7fffffe          BL       _OnButtonPressed
00023c  2202              MOVS     r2,#2                 ;338
00023e  4641              MOV      r1,r8                 ;338
000240  4638              MOV      r0,r7                 ;338
000242  f7fffffe          BL       _OnButtonReleased
000246  e7cf              B        |L1.488|
                  |L1.584|
000248  e00c              B        |L1.612|
                  |L1.586|
00024a  2d00              CMP      r5,#0                 ;343
00024c  dd04              BLE      |L1.600|
00024e  4641              MOV      r1,r8                 ;344
000250  4638              MOV      r0,r7                 ;344
000252  f7fffffe          BL       _OnButtonPressed
000256  e004              B        |L1.610|
                  |L1.600|
000258  2202              MOVS     r2,#2                 ;346
00025a  4641              MOV      r1,r8                 ;346
00025c  4638              MOV      r0,r7                 ;346
00025e  f7fffffe          BL       _OnButtonReleased
                  |L1.610|
000262  e7c1              B        |L1.488|
                  |L1.612|
000264  bf00              NOP                            ;341
000266  bf00              NOP                            ;314
                  |L1.616|
000268  bf00              NOP                            ;330
00026a  4620              MOV      r0,r4                 ;351
00026c  f7fffffe          BL       WM_DefaultProc
000270  bf00              NOP      
000272  e7b9              B        |L1.488|
;;;353    
                          ENDP

                  BUTTON_CreateEx PROC
;;;363    */
;;;364    BUTTON_Handle BUTTON_CreateEx(int x0, int y0, int xsize, int ysize, WM_HWIN hParent, int WinFlags, int ExFlags, int Id) {
000274  e92d4fff          PUSH     {r0-r11,lr}
000278  b085              SUB      sp,sp,#0x14
00027a  4606              MOV      r6,r0
00027c  460f              MOV      r7,r1
00027e  4690              MOV      r8,r2
000280  e9ddab13          LDRD     r10,r11,[sp,#0x4c]
000284  f8dd9048          LDR      r9,[sp,#0x48]
;;;365      BUTTON_Handle hObj;
;;;366      GUI_USE_PARA(ExFlags);
000288  bf00              NOP      
;;;367      /* Create the window */
;;;368      WM_LOCK();
;;;369      hObj = WM_CreateWindowAsChild(x0, y0, xsize, ysize, hParent, WinFlags, BUTTON_Callback,
00028a  2134              MOVS     r1,#0x34
00028c  f2af02c3          ADR      r2,BUTTON_Callback + 1
000290  fa1ff08a          UXTH     r0,r10
000294  e9cd9000          STRD     r9,r0,[sp,#0]
000298  e9cd2102          STRD     r2,r1,[sp,#8]
00029c  4642              MOV      r2,r8
00029e  4639              MOV      r1,r7
0002a0  4630              MOV      r0,r6
0002a2  9b08              LDR      r3,[sp,#0x20]
0002a4  f7fffffe          BL       WM_CreateWindowAsChild
0002a8  4604              MOV      r4,r0
;;;370                                    sizeof(BUTTON_Obj) - sizeof(WM_Obj));
;;;371      if (hObj) {
0002aa  b17c              CBZ      r4,|L1.716|
;;;372        BUTTON_Obj * pObj = (BUTTON_Obj *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
0002ac  4620              MOV      r0,r4
0002ae  f7fffffe          BL       GUI_ALLOC_h2p
0002b2  4605              MOV      r5,r0
;;;373        /* init widget specific variables */
;;;374        WIDGET__Init(&pObj->Widget, Id, WIDGET_STATE_FOCUSSABLE);
0002b4  2210              MOVS     r2,#0x10
0002b6  4628              MOV      r0,r5
0002b8  9915              LDR      r1,[sp,#0x54]
0002ba  f7fffffe          BL       WIDGET__Init
;;;375        /* init member variables */
;;;376        BUTTON_INIT_ID(pObj);
;;;377        pObj->Props = BUTTON__DefaultProps;
0002be  2224              MOVS     r2,#0x24
0002c0  493e              LDR      r1,|L1.956|
0002c2  f1050028          ADD      r0,r5,#0x28
0002c6  f7fffffe          BL       __aeabi_memcpy4
;;;378      } else {
0002ca  bf00              NOP      
                  |L1.716|
;;;379        GUI_DEBUG_ERROROUT_IF(hObj==0, "BUTTON_Create failed")
;;;380      }
;;;381      WM_UNLOCK();
;;;382      return hObj;
0002cc  4620              MOV      r0,r4
;;;383    }
0002ce  b009              ADD      sp,sp,#0x24
0002d0  e8bd8ff0          POP      {r4-r11,pc}
;;;384    
                          ENDP

                  BUTTON_SetText PROC
;;;395    */
;;;396    void BUTTON_SetText(BUTTON_Handle hObj, const char* s) {
0002d4  b570              PUSH     {r4-r6,lr}
0002d6  4604              MOV      r4,r0
0002d8  460d              MOV      r5,r1
;;;397      if (hObj) {
0002da  b16c              CBZ      r4,|L1.760|
;;;398        BUTTON_Obj* pObj;
;;;399        WM_LOCK();
;;;400        pObj = BUTTON_H2P(hObj);
0002dc  4620              MOV      r0,r4
0002de  f7fffffe          BL       GUI_ALLOC_h2p
0002e2  4606              MOV      r6,r0
;;;401        if (GUI__SetText(&pObj->hpText, s)) {
0002e4  4629              MOV      r1,r5
0002e6  f106004c          ADD      r0,r6,#0x4c
0002ea  f7fffffe          BL       GUI__SetText
0002ee  b110              CBZ      r0,|L1.758|
;;;402          BUTTON_Invalidate(hObj);
0002f0  4620              MOV      r0,r4
0002f2  f7fffffe          BL       WM_InvalidateWindow
                  |L1.758|
;;;403        }
;;;404        WM_UNLOCK();
;;;405      }
0002f6  bf00              NOP      
                  |L1.760|
;;;406    }
0002f8  bd70              POP      {r4-r6,pc}
;;;407    
                          ENDP

                  BUTTON_SetFont PROC
;;;411    */
;;;412    void BUTTON_SetFont(BUTTON_Handle hObj, const GUI_FONT GUI_UNI_PTR * pfont) {
0002fa  b570              PUSH     {r4-r6,lr}
0002fc  4604              MOV      r4,r0
0002fe  460d              MOV      r5,r1
;;;413      if (hObj) {
000300  b144              CBZ      r4,|L1.788|
;;;414        BUTTON_Obj* pObj;
;;;415        WM_LOCK();
;;;416        pObj = BUTTON_H2P(hObj);
000302  4620              MOV      r0,r4
000304  f7fffffe          BL       GUI_ALLOC_h2p
000308  4606              MOV      r6,r0
;;;417        pObj->Props.pFont = pfont;
00030a  6475              STR      r5,[r6,#0x44]
;;;418        BUTTON_Invalidate(hObj);
00030c  4620              MOV      r0,r4
00030e  f7fffffe          BL       WM_InvalidateWindow
;;;419        WM_UNLOCK();
;;;420      }
000312  bf00              NOP      
                  |L1.788|
;;;421    }
000314  bd70              POP      {r4-r6,pc}
;;;422    
                          ENDP

                  BUTTON_SetBkColor PROC
;;;426    */
;;;427    void BUTTON_SetBkColor(BUTTON_Handle hObj,unsigned int Index, GUI_COLOR Color) {
000316  e92d41f0          PUSH     {r4-r8,lr}
00031a  4605              MOV      r5,r0
00031c  460c              MOV      r4,r1
00031e  4616              MOV      r6,r2
;;;428      if (hObj && (Index <= 2)) {
000320  b16d              CBZ      r5,|L1.830|
000322  2c02              CMP      r4,#2
000324  d80b              BHI      |L1.830|
;;;429        BUTTON_Obj* pObj;
;;;430        WM_LOCK();
;;;431        pObj = BUTTON_H2P(hObj);
000326  4628              MOV      r0,r5
000328  f7fffffe          BL       GUI_ALLOC_h2p
00032c  4607              MOV      r7,r0
;;;432        pObj->Props.aBkColor[Index] = Color;
00032e  f1070028          ADD      r0,r7,#0x28
000332  f8406024          STR      r6,[r0,r4,LSL #2]
;;;433        BUTTON_Invalidate(hObj);
000336  4628              MOV      r0,r5
000338  f7fffffe          BL       WM_InvalidateWindow
;;;434        WM_UNLOCK();
;;;435      }
00033c  bf00              NOP      
                  |L1.830|
;;;436    }
00033e  e8bd81f0          POP      {r4-r8,pc}
;;;437    
                          ENDP

                  BUTTON_SetTextColor PROC
;;;441    */
;;;442    void BUTTON_SetTextColor(BUTTON_Handle hObj,unsigned int Index, GUI_COLOR Color) {
000342  e92d41f0          PUSH     {r4-r8,lr}
000346  4605              MOV      r5,r0
000348  460c              MOV      r4,r1
00034a  4616              MOV      r6,r2
;;;443      if (hObj && (Index <= 2)) {
00034c  b16d              CBZ      r5,|L1.874|
00034e  2c02              CMP      r4,#2
000350  d80b              BHI      |L1.874|
;;;444        BUTTON_Obj* pObj;
;;;445        WM_LOCK();
;;;446        pObj = BUTTON_H2P(hObj);
000352  4628              MOV      r0,r5
000354  f7fffffe          BL       GUI_ALLOC_h2p
000358  4607              MOV      r7,r0
;;;447        pObj->Props.aTextColor[Index] = Color;
00035a  f1070034          ADD      r0,r7,#0x34
00035e  f8406024          STR      r6,[r0,r4,LSL #2]
;;;448        BUTTON_Invalidate(hObj);
000362  4628              MOV      r0,r5
000364  f7fffffe          BL       WM_InvalidateWindow
;;;449        WM_UNLOCK();
;;;450      }
000368  bf00              NOP      
                  |L1.874|
;;;451    }
00036a  e8bd81f0          POP      {r4-r8,pc}
;;;452    
                          ENDP

                  BUTTON_SetState PROC
;;;456    */
;;;457    void BUTTON_SetState(BUTTON_Handle hObj, int State) {
00036e  b570              PUSH     {r4-r6,lr}
000370  4604              MOV      r4,r0
000372  460d              MOV      r5,r1
;;;458      WIDGET_SetState(hObj, State);
000374  4629              MOV      r1,r5
000376  4620              MOV      r0,r4
000378  f7fffffe          BL       WIDGET_SetState
;;;459    }
00037c  bd70              POP      {r4-r6,pc}
;;;460    
                          ENDP

                  BUTTON_SetPressed PROC
;;;464    */
;;;465    void BUTTON_SetPressed(BUTTON_Handle hObj, int State) {
00037e  b570              PUSH     {r4-r6,lr}
000380  4605              MOV      r5,r0
000382  460c              MOV      r4,r1
;;;466      if (State) {
000384  b12c              CBZ      r4,|L1.914|
;;;467        WIDGET_OrState(hObj, BUTTON_STATE_PRESSED);
000386  f44f7180          MOV      r1,#0x100
00038a  4628              MOV      r0,r5
00038c  f7fffffe          BL       WIDGET_OrState
000390  e004              B        |L1.924|
                  |L1.914|
;;;468      } else {
;;;469        WIDGET_AndState(hObj, BUTTON_STATE_PRESSED);
000392  f44f7180          MOV      r1,#0x100
000396  4628              MOV      r0,r5
000398  f7fffffe          BL       WIDGET_AndState
                  |L1.924|
;;;470      }
;;;471    }
00039c  bd70              POP      {r4-r6,pc}
;;;472    
                          ENDP

                  BUTTON_SetFocussable PROC
;;;476    */
;;;477    void BUTTON_SetFocussable(BUTTON_Handle hObj, int State) {
00039e  b570              PUSH     {r4-r6,lr}
0003a0  4605              MOV      r5,r0
0003a2  460c              MOV      r4,r1
;;;478      if (State) {
0003a4  b124              CBZ      r4,|L1.944|
;;;479        WIDGET_OrState(hObj, WIDGET_STATE_FOCUSSABLE);
0003a6  2110              MOVS     r1,#0x10
0003a8  4628              MOV      r0,r5
0003aa  f7fffffe          BL       WIDGET_OrState
0003ae  e003              B        |L1.952|
                  |L1.944|
;;;480      } else {
;;;481        WIDGET_AndState(hObj, WIDGET_STATE_FOCUSSABLE);
0003b0  2110              MOVS     r1,#0x10
0003b2  4628              MOV      r0,r5
0003b4  f7fffffe          BL       WIDGET_AndState
                  |L1.952|
;;;482      }
;;;483    }
0003b8  bd70              POP      {r4-r6,pc}
;;;484    
                          ENDP

0003ba  0000              DCW      0x0000
                  |L1.956|
                          DCD      BUTTON__DefaultProps

                          AREA ||.data||, DATA, ALIGN=2

                  BUTTON__DefaultProps
                          DCD      0x00aaaaaa
                          DCD      0x00ffffff
                          DCD      0x00d3d3d3
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00404040
                          DCD      0x00000000
                          DCD      GUI_Font13_1
000020  000e              DCW      0x000e
000022  0000              DCB      0x00,0x00

; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\radio.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\radio.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -IC:\Users\Administrator\Desktop\gui\STM32·Ü¶·°å-3.98\RTE -Id:\Keil_v5\ARM\PACK\ARM\CMSIS\4.3.0\CMSIS\Include -Id:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.1.0\Device\Include -D__UVISION_VERSION=515 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\radio.crf GUI\Widget\RADIO.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _OnPaint PROC
;;;113    */
;;;114    static void _OnPaint(RADIO_Handle hObj, RADIO_Obj* pObj) {
000000  e92d4ff3          PUSH     {r0,r1,r4-r11,lr}
000004  b08d              SUB      sp,sp,#0x34
000006  460c              MOV      r4,r1
;;;115      const GUI_BITMAP* pBmRadio;
;;;116      const GUI_BITMAP* pBmCheck;
;;;117      const char* pText;
;;;118      GUI_FONTINFO FontInfo;
;;;119      GUI_RECT Rect, r, rFocus = {0};
000008  2000              MOVS     r0,#0
00000a  9005              STR      r0,[sp,#0x14]
00000c  9006              STR      r0,[sp,#0x18]
;;;120      int i, y, HasFocus, FontDistY;
;;;121      U8 SpaceAbove, CHeight, FocusBorder;
;;;122    
;;;123      /* Init some data */
;;;124      WIDGET__GetClientRect(&pObj->Widget, &rFocus);
00000e  a905              ADD      r1,sp,#0x14
000010  4620              MOV      r0,r4
000012  f7fffffe          BL       WIDGET__GetClientRect
;;;125      HasFocus  = (pObj->Widget.State & WIDGET_STATE_FOCUS) ? 1 : 0;
000016  f8940026          LDRB     r0,[r4,#0x26]
00001a  f0000b01          AND      r11,r0,#1
;;;126      pBmRadio  = pObj->Props.apBmRadio[WM__IsEnabled(hObj)];
00001e  980d              LDR      r0,[sp,#0x34]
000020  f7fffffe          BL       WM__IsEnabled
000024  4601              MOV      r1,r0
000026  f1040038          ADD      r0,r4,#0x38
00002a  f8506021          LDR      r6,[r0,r1,LSL #2]
;;;127      pBmCheck  = pObj->Props.pBmCheck;
00002e  f8d4a040          LDR      r10,[r4,#0x40]
;;;128      rFocus.x1 = pBmRadio->XSize + RADIO_BORDER * 2 - 1;
000032  8830              LDRH     r0,[r6,#0]
000034  1cc0              ADDS     r0,r0,#3
000036  b200              SXTH     r0,r0
000038  f8ad0018          STRH     r0,[sp,#0x18]
;;;129      rFocus.y1 = pObj->Height + ((pObj->NumItems - 1) * pObj->Spacing) - 1;
00003c  344a              ADDS     r4,r4,#0x4a
00003e  8861              LDRH     r1,[r4,#2]
000040  88a0              LDRH     r0,[r4,#4]
000042  1e40              SUBS     r0,r0,#1
000044  f834294a          LDRH     r2,[r4],#-0x4a
000048  fb001002          MLA      r0,r0,r2,r1
00004c  1e40              SUBS     r0,r0,#1
00004e  b200              SXTH     r0,r0
000050  f8ad001a          STRH     r0,[sp,#0x1a]
;;;130    
;;;131      /* Select font and text color */
;;;132      LCD_SetColor(pObj->Props.TextColor);
000054  6ae0              LDR      r0,[r4,#0x2c]
000056  f7fffffe          BL       LCD_SetColor
;;;133      GUI_SetFont(pObj->Props.pFont);
00005a  6b60              LDR      r0,[r4,#0x34]
00005c  f7fffffe          BL       GUI_SetFont
;;;134      GUI_SetTextMode(GUI_TM_TRANS);
000060  2002              MOVS     r0,#2
000062  f7fffffe          BL       GUI_SetTextMode
;;;135    
;;;136      /* Get font infos */
;;;137      GUI_GetFontInfo(pObj->Props.pFont, &FontInfo);
000066  a90b              ADD      r1,sp,#0x2c
000068  6b60              LDR      r0,[r4,#0x34]
00006a  f7fffffe          BL       GUI_GetFontInfo
;;;138      FontDistY   = GUI_GetFontDistY();
00006e  f7fffffe          BL       GUI_GetFontDistY
000072  9004              STR      r0,[sp,#0x10]
;;;139      CHeight     = FontInfo.CHeight;
000074  f89d9030          LDRB     r9,[sp,#0x30]
;;;140      SpaceAbove  = FontInfo.Baseline - CHeight;
000078  f89d002e          LDRB     r0,[sp,#0x2e]
00007c  eba00009          SUB      r0,r0,r9
000080  b2c0              UXTB     r0,r0
000082  9003              STR      r0,[sp,#0xc]
;;;141      Rect.x0     = pBmRadio->XSize + RADIO_BORDER * 2 + 2;
000084  8830              LDRH     r0,[r6,#0]
000086  1d80              ADDS     r0,r0,#6
000088  b200              SXTH     r0,r0
00008a  f8ad0024          STRH     r0,[sp,#0x24]
;;;142      Rect.y0     = (CHeight <= pObj->Height) ? ((pObj->Height - CHeight) / 2) : 0;
00008e  f8b4104c          LDRH     r1,[r4,#0x4c]
000092  4549              CMP      r1,r9
000094  db07              BLT      |L1.166|
000096  f8b4104c          LDRH     r1,[r4,#0x4c]
00009a  eba10009          SUB      r0,r1,r9
00009e  eb0071d0          ADD      r1,r0,r0,LSR #31
0000a2  1049              ASRS     r1,r1,#1
0000a4  e000              B        |L1.168|
                  |L1.166|
0000a6  2100              MOVS     r1,#0
                  |L1.168|
0000a8  b209              SXTH     r1,r1
0000aa  f8ad1026          STRH     r1,[sp,#0x26]
;;;143      Rect.y1     = Rect.y0 + CHeight - 1;
0000ae  f8bd0026          LDRH     r0,[sp,#0x26]
0000b2  4448              ADD      r0,r0,r9
0000b4  1e40              SUBS     r0,r0,#1
0000b6  b200              SXTH     r0,r0
0000b8  f8ad002a          STRH     r0,[sp,#0x2a]
;;;144      FocusBorder = (FontDistY <= 12) ? 2 : 3;
0000bc  9804              LDR      r0,[sp,#0x10]
0000be  280c              CMP      r0,#0xc
0000c0  dc01              BGT      |L1.198|
0000c2  2002              MOVS     r0,#2
0000c4  e000              B        |L1.200|
                  |L1.198|
0000c6  2003              MOVS     r0,#3
                  |L1.200|
0000c8  9002              STR      r0,[sp,#8]
;;;145      if (Rect.y0 < FocusBorder) {
0000ca  f9bd1026          LDRSH    r1,[sp,#0x26]
0000ce  9802              LDR      r0,[sp,#8]
0000d0  4281              CMP      r1,r0
0000d2  da03              BGE      |L1.220|
;;;146        FocusBorder = Rect.y0;
0000d4  f8bd0026          LDRH     r0,[sp,#0x26]
0000d8  b2c0              UXTB     r0,r0
0000da  9002              STR      r0,[sp,#8]
                  |L1.220|
;;;147      }
;;;148    
;;;149      /* Clear inside ... Just in case      */
;;;150      /* Fill with parents background color */
;;;151    #if WM_SUPPORT_TRANSPARENCY
;;;152      if (!WM_GetHasTrans(hObj))
0000dc  980d              LDR      r0,[sp,#0x34]
0000de  f7fffffe          BL       WM_GetHasTrans
0000e2  b968              CBNZ     r0,|L1.256|
;;;153    #endif
;;;154      {
;;;155        if (pObj->Props.BkColor != GUI_INVALID_COLOR) {
0000e4  f06f4170          MVN      r1,#0xf0000000
0000e8  6aa0              LDR      r0,[r4,#0x28]
0000ea  4288              CMP      r0,r1
0000ec  d003              BEQ      |L1.246|
;;;156          LCD_SetBkColor(pObj->Props.BkColor);
0000ee  6aa0              LDR      r0,[r4,#0x28]
0000f0  f7fffffe          BL       LCD_SetBkColor
0000f4  e002              B        |L1.252|
                  |L1.246|
;;;157        } else {
;;;158          LCD_SetBkColor(RADIO_DEFAULT_BKCOLOR);
0000f6  48eb              LDR      r0,|L1.1188|
0000f8  f7fffffe          BL       LCD_SetBkColor
                  |L1.252|
;;;159        }
;;;160        GUI_Clear();
0000fc  f7fffffe          BL       GUI_Clear
                  |L1.256|
;;;161      }
;;;162    
;;;163      /* Iterate over all items */
;;;164      for (i = 0; i < pObj->NumItems; i++) {
000100  2500              MOVS     r5,#0
000102  e057              B        |L1.436|
                  |L1.260|
;;;165        y = i * pObj->Spacing;
000104  f8b4004a          LDRH     r0,[r4,#0x4a]
000108  fb00f805          MUL      r8,r0,r5
;;;166        /* Draw the radio button bitmap */
;;;167        GUI_DrawBitmap(pBmRadio, RADIO_BORDER, RADIO_BORDER + y);
00010c  f1080202          ADD      r2,r8,#2
000110  2102              MOVS     r1,#2
000112  4630              MOV      r0,r6
000114  f7fffffe          BL       GUI_DrawBitmap
;;;168        /* Draw the check bitmap */
;;;169        if (pObj->Sel == i) {
000118  f9b40048          LDRSH    r0,[r4,#0x48]
00011c  42a8              CMP      r0,r5
00011e  d116              BNE      |L1.334|
;;;170          GUI_DrawBitmap(pBmCheck, RADIO_BORDER +  (pBmRadio->XSize - pBmCheck->XSize) / 2, 
000120  8870              LDRH     r0,[r6,#2]
000122  f8ba3002          LDRH     r3,[r10,#2]
000126  1ac0              SUBS     r0,r0,r3
000128  9001              STR      r0,[sp,#4]
00012a  eb0070d0          ADD      r0,r0,r0,LSR #31
00012e  1040              ASRS     r0,r0,#1
000130  1c80              ADDS     r0,r0,#2
000132  eb000208          ADD      r2,r0,r8
000136  8830              LDRH     r0,[r6,#0]
000138  f8ba3000          LDRH     r3,[r10,#0]
00013c  1ac0              SUBS     r0,r0,r3
00013e  9000              STR      r0,[sp,#0]
000140  eb0070d0          ADD      r0,r0,r0,LSR #31
000144  1040              ASRS     r0,r0,#1
000146  1c81              ADDS     r1,r0,#2
000148  4650              MOV      r0,r10
00014a  f7fffffe          BL       GUI_DrawBitmap
                  |L1.334|
;;;171                                   RADIO_BORDER + ((pBmRadio->YSize - pBmCheck->YSize) / 2) + y);
;;;172        }
;;;173        /* Draw text if available */
;;;174        pText = (const char*)GUI_ARRAY_GetpItem(&pObj->TextArray, i);
00014e  4629              MOV      r1,r5
000150  f1040044          ADD      r0,r4,#0x44
000154  f7fffffe          BL       GUI_ARRAY_GetpItem
000158  4607              MOV      r7,r0
;;;175        if (pText) {
00015a  b357              CBZ      r7,|L1.434|
;;;176          if (*pText) {
00015c  7838              LDRB     r0,[r7,#0]
00015e  b340              CBZ      r0,|L1.434|
;;;177            r = Rect;
000160  e9dd0109          LDRD     r0,r1,[sp,#0x24]
000164  e9cd0107          STRD     r0,r1,[sp,#0x1c]
;;;178            r.x1 = r.x0 + GUI_GetStringDistX(pText) - 2;
000168  4638              MOV      r0,r7
00016a  f7fffffe          BL       GUI_GetStringDistX
00016e  f8bd101c          LDRH     r1,[sp,#0x1c]
000172  4408              ADD      r0,r0,r1
000174  1e80              SUBS     r0,r0,#2
000176  b200              SXTH     r0,r0
000178  f8ad0020          STRH     r0,[sp,#0x20]
;;;179            GUI_MoveRect(&r, 0, y);
00017c  4642              MOV      r2,r8
00017e  2100              MOVS     r1,#0
000180  a807              ADD      r0,sp,#0x1c
000182  f7fffffe          BL       GUI_MoveRect
;;;180            GUI_DispStringAt(pText, r.x0, r.y0 - SpaceAbove);
000186  f9bd301e          LDRSH    r3,[sp,#0x1e]
00018a  9803              LDR      r0,[sp,#0xc]
00018c  1a1a              SUBS     r2,r3,r0
00018e  f9bd101c          LDRSH    r1,[sp,#0x1c]
000192  4638              MOV      r0,r7
000194  f7fffffe          BL       GUI_DispStringAt
;;;181            /* Calculate focus rect */
;;;182            if (HasFocus && (pObj->Sel == i)) {
000198  f1bb0f00          CMP      r11,#0
00019c  d009              BEQ      |L1.434|
00019e  f9b40048          LDRSH    r0,[r4,#0x48]
0001a2  42a8              CMP      r0,r5
0001a4  d105              BNE      |L1.434|
;;;183              GUI__ReduceRect(&rFocus, &r, -FocusBorder);
0001a6  9802              LDR      r0,[sp,#8]
0001a8  4242              RSBS     r2,r0,#0
0001aa  a907              ADD      r1,sp,#0x1c
0001ac  a805              ADD      r0,sp,#0x14
0001ae  f7fffffe          BL       GUI__ReduceRect
                  |L1.434|
0001b2  1c6d              ADDS     r5,r5,#1              ;164
                  |L1.436|
0001b4  f8b4004e          LDRH     r0,[r4,#0x4e]         ;164
0001b8  42a8              CMP      r0,r5                 ;164
0001ba  dca3              BGT      |L1.260|
;;;184            }
;;;185          }
;;;186        }
;;;187      }
;;;188    
;;;189      /* Draw the focus rect */
;;;190      if (HasFocus) {
0001bc  f1bb0f00          CMP      r11,#0
0001c0  d006              BEQ      |L1.464|
;;;191        LCD_SetColor(pObj->Props.FocusColor);
0001c2  6b20              LDR      r0,[r4,#0x30]
0001c4  f7fffffe          BL       LCD_SetColor
;;;192        GUI_DrawFocusRect(&rFocus, 0);
0001c8  2100              MOVS     r1,#0
0001ca  a805              ADD      r0,sp,#0x14
0001cc  f7fffffe          BL       GUI_DrawFocusRect
                  |L1.464|
;;;193      }
;;;194    }
0001d0  b00f              ADD      sp,sp,#0x3c
0001d2  e8bd8ff0          POP      {r4-r11,pc}
;;;195    
                          ENDP

                  RADIO__SetValue PROC
;;;286    */
;;;287    void RADIO__SetValue(RADIO_Handle hObj, RADIO_Obj* pObj, int v) {
0001d6  b570              PUSH     {r4-r6,lr}
0001d8  4606              MOV      r6,r0
0001da  460c              MOV      r4,r1
0001dc  4615              MOV      r5,r2
;;;288      if (v >= (int)pObj->NumItems) {
0001de  f8b4004e          LDRH     r0,[r4,#0x4e]
0001e2  42a8              CMP      r0,r5
0001e4  dc02              BGT      |L1.492|
;;;289        v = pObj->NumItems - 1;
0001e6  f8b4004e          LDRH     r0,[r4,#0x4e]
0001ea  1e45              SUBS     r5,r0,#1
                  |L1.492|
;;;290      }
;;;291      if (v != pObj->Sel) {
0001ec  f9b40048          LDRSH    r0,[r4,#0x48]
0001f0  42a8              CMP      r0,r5
0001f2  d009              BEQ      |L1.520|
;;;292        pObj->Sel = v;
0001f4  b228              SXTH     r0,r5
0001f6  f8a40048          STRH     r0,[r4,#0x48]
;;;293        WM_InvalidateWindow(hObj);
0001fa  4630              MOV      r0,r6
0001fc  f7fffffe          BL       WM_InvalidateWindow
;;;294        WM_NotifyParent(hObj, WM_NOTIFICATION_VALUE_CHANGED);
000200  2105              MOVS     r1,#5
000202  4630              MOV      r0,r6
000204  f7fffffe          BL       WM_NotifyParent
                  |L1.520|
;;;295      }
;;;296    }
000208  bd70              POP      {r4-r6,pc}
;;;297    
                          ENDP

                  RADIO_SetValue PROC
;;;437    */
;;;438    void RADIO_SetValue(RADIO_Handle hObj, int v) {
00020a  b570              PUSH     {r4-r6,lr}
00020c  4605              MOV      r5,r0
00020e  460c              MOV      r4,r1
;;;439      if (hObj) {
000210  b1cd              CBZ      r5,|L1.582|
;;;440        RADIO_Obj* pObj;
;;;441        WM_LOCK();
;;;442        pObj = RADIO_H2P(hObj);
000212  4628              MOV      r0,r5
000214  f7fffffe          BL       GUI_ALLOC_h2p
000218  4606              MOV      r6,r0
;;;443        if (pObj->GroupId && RADIO__pfHandleSetValue) {
00021a  f8960050          LDRB     r0,[r6,#0x50]
00021e  b148              CBZ      r0,|L1.564|
000220  48a1              LDR      r0,|L1.1192|
000222  6800              LDR      r0,[r0,#0]  ; RADIO__pfHandleSetValue
000224  b130              CBZ      r0,|L1.564|
;;;444          (*RADIO__pfHandleSetValue)(hObj, pObj, v);
000226  4622              MOV      r2,r4
000228  4631              MOV      r1,r6
00022a  4628              MOV      r0,r5
00022c  4b9e              LDR      r3,|L1.1192|
00022e  681b              LDR      r3,[r3,#0]  ; RADIO__pfHandleSetValue
000230  4798              BLX      r3
000232  e007              B        |L1.580|
                  |L1.564|
;;;445        } else {
;;;446          if (v < 0) {
000234  2c00              CMP      r4,#0
000236  da00              BGE      |L1.570|
;;;447            v = 0;
000238  2400              MOVS     r4,#0
                  |L1.570|
;;;448          }
;;;449          RADIO__SetValue(hObj, pObj, v);
00023a  4622              MOV      r2,r4
00023c  4631              MOV      r1,r6
00023e  4628              MOV      r0,r5
000240  f7fffffe          BL       RADIO__SetValue
                  |L1.580|
;;;450        }
;;;451        WM_UNLOCK();
;;;452      }
000244  bf00              NOP      
                  |L1.582|
;;;453    }
000246  bd70              POP      {r4-r6,pc}
;;;454    
                          ENDP

                  _OnTouch PROC
;;;199    */
;;;200    static void _OnTouch(RADIO_Handle hObj, RADIO_Obj* pObj, WM_MESSAGE*pMsg) {
000248  e92d5ff0          PUSH     {r4-r12,lr}
00024c  4682              MOV      r10,r0
00024e  460c              MOV      r4,r1
000250  4616              MOV      r6,r2
;;;201      int Notification;
;;;202      int Hit = 0;
000252  f04f0b00          MOV      r11,#0
;;;203      GUI_PID_STATE* pState = (GUI_PID_STATE*)pMsg->Data.p;
000256  f8d68008          LDR      r8,[r6,#8]
;;;204      if (pMsg->Data.p) {  /* Something happened in our area (pressed or released) */
00025a  68b0              LDR      r0,[r6,#8]
00025c  b300              CBZ      r0,|L1.672|
;;;205        if (pState->Pressed) {
00025e  f8980008          LDRB     r0,[r8,#8]
000262  b1c8              CBZ      r0,|L1.664|
;;;206          int y, Sel;
;;;207          y   = pState->y;
000264  f8d87004          LDR      r7,[r8,#4]
;;;208          Sel = y   / pObj->Spacing;
000268  f8340f4a          LDRH     r0,[r4,#0x4a]!
00026c  fb97f9f0          SDIV     r9,r7,r0
;;;209          y  -= Sel * pObj->Spacing;
000270  8820              LDRH     r0,[r4,#0]
000272  fb097710          MLS      r7,r9,r0,r7
;;;210          if (y <= pObj->Height) {
000276  8860              LDRH     r0,[r4,#2]
000278  3c4a              SUBS     r4,r4,#0x4a
00027a  42b8              CMP      r0,r7
00027c  db03              BLT      |L1.646|
;;;211            RADIO_SetValue(hObj, Sel);
00027e  4649              MOV      r1,r9
000280  4650              MOV      r0,r10
000282  f7fffffe          BL       RADIO_SetValue
                  |L1.646|
;;;212          }
;;;213          if (WM_IsFocussable(hObj)) {
000286  4650              MOV      r0,r10
000288  f7fffffe          BL       WM_IsFocussable
00028c  b110              CBZ      r0,|L1.660|
;;;214            WM_SetFocus(hObj);
00028e  4650              MOV      r0,r10
000290  f7fffffe          BL       WM_SetFocus
                  |L1.660|
;;;215          }
;;;216          Notification = WM_NOTIFICATION_CLICKED;
000294  2501              MOVS     r5,#1
;;;217        } else {
000296  e004              B        |L1.674|
                  |L1.664|
;;;218          Hit = 1;
000298  f04f0b01          MOV      r11,#1
;;;219          Notification = WM_NOTIFICATION_RELEASED;
00029c  2502              MOVS     r5,#2
00029e  e000              B        |L1.674|
                  |L1.672|
;;;220        }
;;;221      } else {
;;;222        Notification = WM_NOTIFICATION_MOVED_OUT;
0002a0  2503              MOVS     r5,#3
                  |L1.674|
;;;223      }
;;;224      WM_NotifyParent(hObj, Notification);
0002a2  4629              MOV      r1,r5
0002a4  4650              MOV      r0,r10
0002a6  f7fffffe          BL       WM_NotifyParent
;;;225      if (Hit == 1) {
0002aa  f1bb0f01          CMP      r11,#1
0002ae  d103              BNE      |L1.696|
;;;226        GUI_DEBUG_LOG("RADIO: Hit\n");
;;;227        GUI_StoreKey(pObj->Widget.Id);
0002b0  f9b40024          LDRSH    r0,[r4,#0x24]
0002b4  f7fffffe          BL       GUI_StoreKey
                  |L1.696|
;;;228      }
;;;229    }
0002b8  e8bd9ff0          POP      {r4-r12,pc}
;;;230    
                          ENDP

                  RADIO_AddValue PROC
;;;407    */
;;;408    void RADIO_AddValue(RADIO_Handle hObj, int Add) {
0002bc  b570              PUSH     {r4-r6,lr}
0002be  4604              MOV      r4,r0
0002c0  460d              MOV      r5,r1
;;;409      if (hObj) {
0002c2  b154              CBZ      r4,|L1.730|
;;;410        RADIO_Obj* pObj;
;;;411        WM_LOCK();
;;;412        pObj = RADIO_H2P(hObj);
0002c4  4620              MOV      r0,r4
0002c6  f7fffffe          BL       GUI_ALLOC_h2p
0002ca  4606              MOV      r6,r0
;;;413        RADIO_SetValue(hObj, pObj->Sel + Add);
0002cc  f9b60048          LDRSH    r0,[r6,#0x48]
0002d0  1941              ADDS     r1,r0,r5
0002d2  4620              MOV      r0,r4
0002d4  f7fffffe          BL       RADIO_SetValue
;;;414        WM_UNLOCK();
;;;415      }
0002d8  bf00              NOP      
                  |L1.730|
;;;416    }
0002da  bd70              POP      {r4-r6,pc}
;;;417    
                          ENDP

                  RADIO_Dec PROC
;;;421    */
;;;422    void RADIO_Dec(RADIO_Handle hObj) {
0002dc  b510              PUSH     {r4,lr}
0002de  4604              MOV      r4,r0
;;;423      RADIO_AddValue(hObj, -1);
0002e0  f04f31ff          MOV      r1,#0xffffffff
0002e4  4620              MOV      r0,r4
0002e6  f7fffffe          BL       RADIO_AddValue
;;;424    }
0002ea  bd10              POP      {r4,pc}
;;;425    
                          ENDP

                  RADIO_Inc PROC
;;;429    */
;;;430    void RADIO_Inc(RADIO_Handle hObj) {
0002ec  b510              PUSH     {r4,lr}
0002ee  4604              MOV      r4,r0
;;;431      RADIO_AddValue(hObj,  1);
0002f0  2101              MOVS     r1,#1
0002f2  4620              MOV      r0,r4
0002f4  f7fffffe          BL       RADIO_AddValue
;;;432    }
0002f8  bd10              POP      {r4,pc}
;;;433    
                          ENDP

                  _OnKey PROC
;;;234    */
;;;235    static void  _OnKey(RADIO_Handle hObj, WM_MESSAGE* pMsg) {
0002fa  b570              PUSH     {r4-r6,lr}
0002fc  4606              MOV      r6,r0
0002fe  460c              MOV      r4,r1
;;;236      WM_KEY_INFO* pKeyInfo;
;;;237      pKeyInfo = (WM_KEY_INFO*)(pMsg->Data.p);
000300  68a5              LDR      r5,[r4,#8]
;;;238      if (pKeyInfo->PressedCnt > 0) {
000302  6868              LDR      r0,[r5,#4]
000304  2800              CMP      r0,#0
000306  dd15              BLE      |L1.820|
;;;239        switch (pKeyInfo->Key) {
000308  6828              LDR      r0,[r5,#0]
00030a  2810              CMP      r0,#0x10
00030c  d00b              BEQ      |L1.806|
00030e  2811              CMP      r0,#0x11
000310  d00a              BEQ      |L1.808|
000312  2812              CMP      r0,#0x12
000314  d002              BEQ      |L1.796|
000316  2813              CMP      r0,#0x13
000318  d10a              BNE      |L1.816|
00031a  e000              B        |L1.798|
                  |L1.796|
;;;240        case GUI_KEY_RIGHT:
;;;241        case GUI_KEY_DOWN:
00031c  bf00              NOP      
                  |L1.798|
;;;242          RADIO_Inc(hObj);
00031e  4630              MOV      r0,r6
000320  f7fffffe          BL       RADIO_Inc
;;;243          break;                    /* Send to parent by not doing anything */
000324  e005              B        |L1.818|
                  |L1.806|
;;;244        case GUI_KEY_LEFT:
;;;245        case GUI_KEY_UP:
000326  bf00              NOP      
                  |L1.808|
;;;246          RADIO_Dec(hObj);
000328  4630              MOV      r0,r6
00032a  f7fffffe          BL       RADIO_Dec
;;;247          break;                    /* Send to parent by not doing anything */
00032e  e000              B        |L1.818|
                  |L1.816|
;;;248        default:
;;;249          return;
;;;250        }
;;;251      }
;;;252    }
000330  bd70              POP      {r4-r6,pc}
                  |L1.818|
000332  bf00              NOP                            ;243
                  |L1.820|
000334  bf00              NOP      
000336  e7fb              B        |L1.816|
;;;253    
                          ENDP

                  RADIO_Callback PROC
;;;307    */
;;;308    void RADIO_Callback (WM_MESSAGE* pMsg) {
000338  b570              PUSH     {r4-r6,lr}
00033a  4604              MOV      r4,r0
;;;309      RADIO_Handle hObj;
;;;310      RADIO_Obj*   pObj;
;;;311      hObj = pMsg->hWin;
00033c  f9b46004          LDRSH    r6,[r4,#4]
;;;312      pObj = (RADIO_Obj *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
000340  4630              MOV      r0,r6
000342  f7fffffe          BL       GUI_ALLOC_h2p
000346  4605              MOV      r5,r0
;;;313      /* Let widget handle the standard messages */
;;;314      if (WIDGET_HandleActive(hObj, pMsg) == 0) {
000348  4621              MOV      r1,r4
00034a  4630              MOV      r0,r6
00034c  f7fffffe          BL       WIDGET_HandleActive
000350  b900              CBNZ     r0,|L1.852|
                  |L1.850|
;;;315        return;
;;;316      }
;;;317      switch (pMsg->MsgId) {
;;;318      case WM_PAINT:
;;;319        GUI_DEBUG_LOG("RADIO: _Callback(WM_PAINT)\n");
;;;320        _OnPaint(hObj, pObj);
;;;321        return;
;;;322      case WM_GET_RADIOGROUP:
;;;323        pMsg->Data.v = pObj->GroupId;
;;;324        return;
;;;325      case WM_TOUCH:
;;;326        _OnTouch(hObj, pObj, pMsg);
;;;327        break;
;;;328      case WM_KEY:
;;;329        _OnKey(hObj, pMsg);
;;;330        break;
;;;331      case WM_DELETE:
;;;332        GUI_ARRAY_Delete(&pObj->TextArray);
;;;333        break;
;;;334      }
;;;335      WM_DefaultProc(pMsg);
;;;336    }
000352  bd70              POP      {r4-r6,pc}
                  |L1.852|
000354  6820              LDR      r0,[r4,#0]            ;317
000356  280e              CMP      r0,#0xe               ;317
000358  d019              BEQ      |L1.910|
00035a  dc04              BGT      |L1.870|
00035c  280b              CMP      r0,#0xb               ;317
00035e  d01b              BEQ      |L1.920|
000360  280c              CMP      r0,#0xc               ;317
000362  d11e              BNE      |L1.930|
000364  e00d              B        |L1.898|
                  |L1.870|
000366  280f              CMP      r0,#0xf               ;317
000368  d002              BEQ      |L1.880|
00036a  282b              CMP      r0,#0x2b              ;317
00036c  d119              BNE      |L1.930|
00036e  e004              B        |L1.890|
                  |L1.880|
000370  4629              MOV      r1,r5                 ;320
000372  4630              MOV      r0,r6                 ;320
000374  f7fffffe          BL       _OnPaint
000378  e7eb              B        |L1.850|
                  |L1.890|
00037a  f8950050          LDRB     r0,[r5,#0x50]         ;323
00037e  60a0              STR      r0,[r4,#8]            ;323
000380  e7e7              B        |L1.850|
                  |L1.898|
000382  4622              MOV      r2,r4                 ;326
000384  4629              MOV      r1,r5                 ;326
000386  4630              MOV      r0,r6                 ;326
000388  f7fffffe          BL       _OnTouch
00038c  e009              B        |L1.930|
                  |L1.910|
00038e  4621              MOV      r1,r4                 ;329
000390  4630              MOV      r0,r6                 ;329
000392  f7fffffe          BL       _OnKey
000396  e004              B        |L1.930|
                  |L1.920|
000398  f1050044          ADD      r0,r5,#0x44           ;332
00039c  f7fffffe          BL       GUI_ARRAY_Delete
0003a0  bf00              NOP                            ;333
                  |L1.930|
0003a2  bf00              NOP                            ;327
0003a4  4620              MOV      r0,r4                 ;335
0003a6  f7fffffe          BL       WM_DefaultProc
0003aa  bf00              NOP      
0003ac  e7d1              B        |L1.850|
;;;337    
                          ENDP

                  RADIO_CreateEx PROC
;;;351    */
;;;352    RADIO_Handle RADIO_CreateEx(int x0, int y0, int xSize, int ySize, WM_HWIN hParent,
0003ae  e92d4fff          PUSH     {r0-r11,lr}
;;;353                                int WinFlags, int ExFlags, int Id, int NumItems, int Spacing)
;;;354    {
0003b2  b085              SUB      sp,sp,#0x14
0003b4  4691              MOV      r9,r2
0003b6  f8ddb050          LDR      r11,[sp,#0x50]
0003ba  f8dda048          LDR      r10,[sp,#0x48]
0003be  e9dd5616          LDRD     r5,r6,[sp,#0x58]
;;;355      RADIO_Handle hObj;
;;;356      int Height, i;
;;;357      WM_LOCK();
;;;358      /* Calculate helper variables */
;;;359      Height   = RADIO__DefaultProps.apBmRadio[0]->YSize + RADIO_BORDER * 2;
0003c2  483a              LDR      r0,|L1.1196|
0003c4  6900              LDR      r0,[r0,#0x10]  ; RADIO__DefaultProps
0003c6  8840              LDRH     r0,[r0,#2]
0003c8  1d00              ADDS     r0,r0,#4
0003ca  9004              STR      r0,[sp,#0x10]
;;;360      Spacing  = (Spacing  <= 0) ? RADIO_SPACING_DEFAULT : Spacing;
0003cc  2e00              CMP      r6,#0
0003ce  dc01              BGT      |L1.980|
0003d0  2014              MOVS     r0,#0x14
0003d2  e000              B        |L1.982|
                  |L1.980|
0003d4  4630              MOV      r0,r6
                  |L1.982|
0003d6  4606              MOV      r6,r0
;;;361      NumItems = (NumItems <= 0) ? 2                     : NumItems;
0003d8  2d00              CMP      r5,#0
0003da  dc01              BGT      |L1.992|
0003dc  2002              MOVS     r0,#2
0003de  e000              B        |L1.994|
                  |L1.992|
0003e0  4628              MOV      r0,r5
                  |L1.994|
0003e2  4605              MOV      r5,r0
;;;362      if (ySize == 0) {
0003e4  9808              LDR      r0,[sp,#0x20]
0003e6  b920              CBNZ     r0,|L1.1010|
;;;363        ySize  = Height + ((NumItems - 1) * Spacing);
0003e8  1e68              SUBS     r0,r5,#1
0003ea  9904              LDR      r1,[sp,#0x10]
0003ec  fb001006          MLA      r0,r0,r6,r1
0003f0  9008              STR      r0,[sp,#0x20]
                  |L1.1010|
;;;364      }
;;;365      if (xSize == 0) {
0003f2  f1b90f00          CMP      r9,#0
0003f6  d104              BNE      |L1.1026|
;;;366        xSize  = RADIO__DefaultProps.apBmRadio[0]->XSize + RADIO_BORDER * 2;
0003f8  482c              LDR      r0,|L1.1196|
0003fa  6900              LDR      r0,[r0,#0x10]  ; RADIO__DefaultProps
0003fc  8800              LDRH     r0,[r0,#0]
0003fe  f1000904          ADD      r9,r0,#4
                  |L1.1026|
;;;367      }
;;;368    #if WM_SUPPORT_TRANSPARENCY
;;;369      WinFlags |= WM_CF_HASTRANS;
000402  9813              LDR      r0,[sp,#0x4c]
000404  f0400001          ORR      r0,r0,#1
000408  9013              STR      r0,[sp,#0x4c]
;;;370    #endif
;;;371      /* Create the window */
;;;372      hObj = WM_CreateWindowAsChild(x0, y0, xSize, ySize, hParent, WinFlags, RADIO_Callback, sizeof(RADIO_Obj) - sizeof(WM_Obj));
00040a  2134              MOVS     r1,#0x34
00040c  f2af02d7          ADR      r2,RADIO_Callback + 1
000410  9813              LDR      r0,[sp,#0x4c]
000412  b280              UXTH     r0,r0
000414  e9cda000          STRD     r10,r0,[sp,#0]
000418  e9cd2102          STRD     r2,r1,[sp,#8]
00041c  464a              MOV      r2,r9
00041e  9b08              LDR      r3,[sp,#0x20]
000420  e9dd0105          LDRD     r0,r1,[sp,#0x14]
000424  f7fffffe          BL       WM_CreateWindowAsChild
000428  4607              MOV      r7,r0
;;;373      if (hObj) {
00042a  b34f              CBZ      r7,|L1.1152|
;;;374        RADIO_Obj* pObj;
;;;375        pObj = (RADIO_Obj *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
00042c  4638              MOV      r0,r7
00042e  f7fffffe          BL       GUI_ALLOC_h2p
000432  4604              MOV      r4,r0
;;;376        /* Init sub-classes */
;;;377        GUI_ARRAY_CREATE(&pObj->TextArray);
;;;378        for (i = 0; i < NumItems; i++) {
000434  f04f0800          MOV      r8,#0
000438  e007              B        |L1.1098|
                  |L1.1082|
;;;379          GUI_ARRAY_AddItem(&pObj->TextArray, NULL, 0);
00043a  2200              MOVS     r2,#0
00043c  4611              MOV      r1,r2
00043e  f1040044          ADD      r0,r4,#0x44
000442  f7fffffe          BL       GUI_ARRAY_AddItem
000446  f1080801          ADD      r8,r8,#1              ;378
                  |L1.1098|
00044a  45a8              CMP      r8,r5                 ;378
00044c  dbf5              BLT      |L1.1082|
;;;380        }
;;;381        /* Init widget specific variables */
;;;382        ExFlags &= RADIO_TEXTPOS_LEFT;
00044e  f40b7b80          AND      r11,r11,#0x100
;;;383        WIDGET__Init(&pObj->Widget, Id, WIDGET_STATE_FOCUSSABLE | ExFlags);
000452  f04b0210          ORR      r2,r11,#0x10
000456  4620              MOV      r0,r4
000458  9915              LDR      r1,[sp,#0x54]
00045a  f7fffffe          BL       WIDGET__Init
;;;384        /* Init member variables */
;;;385        RADIO_INIT_ID(pObj);
;;;386        pObj->Props = RADIO__DefaultProps;
00045e  221c              MOVS     r2,#0x1c
000460  4912              LDR      r1,|L1.1196|
000462  f1040028          ADD      r0,r4,#0x28
000466  f7fffffe          BL       __aeabi_memcpy4
;;;387        pObj->Props.BkColor= WM_GetBkColor(hParent);
00046a  4650              MOV      r0,r10
00046c  f7fffffe          BL       WM_GetBkColor
000470  f8440f28          STR      r0,[r4,#0x28]!
;;;388        pObj->NumItems     = NumItems;
000474  84e5              STRH     r5,[r4,#0x26]
;;;389        pObj->Spacing      = Spacing;
000476  8466              STRH     r6,[r4,#0x22]
;;;390        pObj->Height       = Height;
000478  9804              LDR      r0,[sp,#0x10]
00047a  84a0              STRH     r0,[r4,#0x24]
00047c  3c28              SUBS     r4,r4,#0x28
;;;391      } else {
00047e  bf00              NOP      
                  |L1.1152|
;;;392        GUI_DEBUG_ERROROUT_IF(hObj==0, "RADIO_Create failed")
;;;393      }
;;;394      WM_UNLOCK();
;;;395      return hObj;
000480  4638              MOV      r0,r7
;;;396    }
000482  b009              ADD      sp,sp,#0x24
000484  e8bd8ff0          POP      {r4-r11,pc}
;;;397    
                          ENDP

                  RADIO_GetValue PROC
;;;464    */
;;;465    int RADIO_GetValue(RADIO_Handle hObj) {
000488  b570              PUSH     {r4-r6,lr}
00048a  4604              MOV      r4,r0
;;;466      int r = 0;
00048c  2500              MOVS     r5,#0
;;;467      if (hObj) {
00048e  b134              CBZ      r4,|L1.1182|
;;;468        RADIO_Obj* pObj;
;;;469        WM_LOCK();
;;;470        pObj = RADIO_H2P(hObj);
000490  4620              MOV      r0,r4
000492  f7fffffe          BL       GUI_ALLOC_h2p
000496  4606              MOV      r6,r0
;;;471        r = pObj->Sel;
000498  f9b65048          LDRSH    r5,[r6,#0x48]
;;;472        WM_UNLOCK();
;;;473      }
00049c  bf00              NOP      
                  |L1.1182|
;;;474      return r;
00049e  4628              MOV      r0,r5
;;;475    }
0004a0  bd70              POP      {r4-r6,pc}
;;;476    
                          ENDP

0004a2  0000              DCW      0x0000
                  |L1.1188|
                          DCD      0x00c0c0c0
                  |L1.1192|
                          DCD      RADIO__pfHandleSetValue
                  |L1.1196|
                          DCD      RADIO__DefaultProps

                          AREA ||.data||, DATA, ALIGN=2

                  RADIO__DefaultProps
                          DCD      0x00c0c0c0
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      GUI_Font13_1
                          DCD      RADIO__abmRadio
                          DCD      RADIO__abmRadio+0x14
                          DCD      RADIO__bmCheck
                  RADIO__pfHandleSetValue
                          DCD      0x00000000

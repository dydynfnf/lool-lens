; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\wm_resizewindow.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\wm_resizewindow.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -IC:\Users\Administrator\Desktop\gui\STM32·Ü¶·°å-3.98\RTE -Id:\Keil_v5\ARM\PACK\ARM\CMSIS\4.3.0\CMSIS\Include -Id:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.1.0\Device\Include -D__UVISION_VERSION=515 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\wm_resizewindow.crf GUI\WM\WM_ResizeWindow.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  WM_ResizeWindow PROC
;;;36     */
;;;37     void WM_ResizeWindow(WM_HWIN hWin, int dx, int dy) {
000000  b5f0              PUSH     {r4-r7,lr}
000002  b087              SUB      sp,sp,#0x1c
000004  4607              MOV      r7,r0
000006  460d              MOV      r5,r1
000008  4616              MOV      r6,r2
;;;38       GUI_RECT rOld, rNew, rMerge;
;;;39       WM_Obj* pWin;
;;;40       if (((dx | dy) == 0) || (hWin == 0)){ /* Early out if there is nothing to do */
00000a  ea450006          ORR      r0,r5,r6
00000e  b100              CBZ      r0,|L1.18|
000010  b90f              CBNZ     r7,|L1.22|
                  |L1.18|
;;;41         return;
;;;42       }
;;;43       WM_LOCK();
;;;44       pWin = WM_HANDLE2PTR(hWin);
;;;45       rOld = pWin->Rect;
;;;46       rNew = rOld;
;;;47       if (dx) {
;;;48         if ((pWin->Status & WM_SF_ANCHOR_RIGHT) && (!(pWin->Status & WM_SF_ANCHOR_LEFT))) {
;;;49           rNew.x0 -= dx;
;;;50         } else {
;;;51           rNew.x1 += dx;
;;;52         }
;;;53       }
;;;54       if (dy) {
;;;55         if ((pWin->Status & WM_SF_ANCHOR_BOTTOM) && (!(pWin->Status & WM_SF_ANCHOR_TOP))) {
;;;56           rNew.y0 -= dy;
;;;57         } else {
;;;58           rNew.y1 += dy;
;;;59         }
;;;60       }
;;;61       pWin->Rect = rNew;
;;;62       if (pWin->Status & WM_SF_ISVIS) {
;;;63         GUI_MergeRect(&rMerge, &rOld, &rNew);
;;;64         WM__InvalidateRectEx(&rMerge, pWin->hParent, pWin->hNext);
;;;65       }
;;;66       WM__UpdateChildPositions(pWin, rNew.x0 - rOld.x0, rNew.y0 - rOld.y0, rNew.x1 - rOld.x1, rNew.y1 - rOld.y1);
;;;67       GUI__IntersectRect(&pWin->InvalidRect, &pWin->Rect); /* Make sure invalid area is not bigger than window itself */
;;;68       WM__SendMsgNoData(hWin, WM_SIZE);                    /* Send size message to the window */
;;;69       WM_UNLOCK();
;;;70     }
000012  b007              ADD      sp,sp,#0x1c
000014  bdf0              POP      {r4-r7,pc}
                  |L1.22|
000016  4638              MOV      r0,r7                 ;44
000018  f7fffffe          BL       GUI_ALLOC_h2p
00001c  4604              MOV      r4,r0                 ;44
00001e  e9d40100          LDRD     r0,r1,[r4,#0]         ;45
000022  e9cd0105          STRD     r0,r1,[sp,#0x14]      ;45
000026  e9dd0105          LDRD     r0,r1,[sp,#0x14]      ;46
00002a  e9cd0103          STRD     r0,r1,[sp,#0xc]       ;46
00002e  b1a5              CBZ      r5,|L1.90|
000030  7f20              LDRB     r0,[r4,#0x1c]         ;48
000032  f0000080          AND      r0,r0,#0x80           ;48
000036  b150              CBZ      r0,|L1.78|
000038  8ba0              LDRH     r0,[r4,#0x1c]         ;48
00003a  f4007000          AND      r0,r0,#0x200          ;48
00003e  b930              CBNZ     r0,|L1.78|
000040  f8bd000c          LDRH     r0,[sp,#0xc]          ;49
000044  1b40              SUBS     r0,r0,r5              ;49
000046  b200              SXTH     r0,r0                 ;49
000048  f8ad000c          STRH     r0,[sp,#0xc]          ;49
00004c  e005              B        |L1.90|
                  |L1.78|
00004e  f8bd0010          LDRH     r0,[sp,#0x10]         ;51
000052  4428              ADD      r0,r0,r5              ;51
000054  b200              SXTH     r0,r0                 ;51
000056  f8ad0010          STRH     r0,[sp,#0x10]         ;51
                  |L1.90|
00005a  b1a6              CBZ      r6,|L1.134|
00005c  8ba0              LDRH     r0,[r4,#0x1c]         ;55
00005e  f4007080          AND      r0,r0,#0x100          ;55
000062  b150              CBZ      r0,|L1.122|
000064  8ba0              LDRH     r0,[r4,#0x1c]         ;55
000066  f4006080          AND      r0,r0,#0x400          ;55
00006a  b930              CBNZ     r0,|L1.122|
00006c  f8bd000e          LDRH     r0,[sp,#0xe]          ;56
000070  1b80              SUBS     r0,r0,r6              ;56
000072  b200              SXTH     r0,r0                 ;56
000074  f8ad000e          STRH     r0,[sp,#0xe]          ;56
000078  e005              B        |L1.134|
                  |L1.122|
00007a  f8bd0012          LDRH     r0,[sp,#0x12]         ;58
00007e  4430              ADD      r0,r0,r6              ;58
000080  b200              SXTH     r0,r0                 ;58
000082  f8ad0012          STRH     r0,[sp,#0x12]         ;58
                  |L1.134|
000086  e9dd0103          LDRD     r0,r1,[sp,#0xc]       ;61
00008a  e9c40100          STRD     r0,r1,[r4,#0]         ;61
00008e  7f20              LDRB     r0,[r4,#0x1c]         ;62
000090  f0000002          AND      r0,r0,#2              ;62
000094  b158              CBZ      r0,|L1.174|
000096  aa03              ADD      r2,sp,#0xc            ;63
000098  a905              ADD      r1,sp,#0x14           ;63
00009a  a801              ADD      r0,sp,#4              ;63
00009c  f7fffffe          BL       GUI_MergeRect
0000a0  f9b4201a          LDRSH    r2,[r4,#0x1a]         ;64
0000a4  f9b41016          LDRSH    r1,[r4,#0x16]         ;64
0000a8  a801              ADD      r0,sp,#4              ;64
0000aa  f7fffffe          BL       WM__InvalidateRectEx
                  |L1.174|
0000ae  f9bd0012          LDRSH    r0,[sp,#0x12]         ;66
0000b2  f9bd101a          LDRSH    r1,[sp,#0x1a]         ;66
0000b6  1a40              SUBS     r0,r0,r1              ;66
0000b8  9000              STR      r0,[sp,#0]            ;66
0000ba  f9bd0010          LDRSH    r0,[sp,#0x10]         ;66
0000be  f9bdc018          LDRSH    r12,[sp,#0x18]        ;66
0000c2  eba0030c          SUB      r3,r0,r12             ;66
0000c6  f9bd000e          LDRSH    r0,[sp,#0xe]          ;66
0000ca  f9bdc016          LDRSH    r12,[sp,#0x16]        ;66
0000ce  eba0020c          SUB      r2,r0,r12             ;66
0000d2  f9bd000c          LDRSH    r0,[sp,#0xc]          ;66
0000d6  f9bdc014          LDRSH    r12,[sp,#0x14]        ;66
0000da  eba0010c          SUB      r1,r0,r12             ;66
0000de  4620              MOV      r0,r4                 ;66
0000e0  f7fffffe          BL       WM__UpdateChildPositions
0000e4  4621              MOV      r1,r4                 ;67
0000e6  f1040008          ADD      r0,r4,#8              ;67
0000ea  f7fffffe          BL       GUI__IntersectRect
0000ee  2105              MOVS     r1,#5                 ;68
0000f0  4638              MOV      r0,r7                 ;68
0000f2  f7fffffe          BL       WM__SendMsgNoData
0000f6  bf00              NOP      
0000f8  e78b              B        |L1.18|
;;;71     
                          ENDP


; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\gui_bmp_serialize.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\gui_bmp_serialize.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -IC:\Users\Administrator\Desktop\gui\STM32·Ü¶·°å-3.98\RTE -Id:\Keil_v5\ARM\PACK\ARM\CMSIS\4.3.0\CMSIS\Include -Id:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.1.0\Device\Include -D__UVISION_VERSION=515 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\gui_bmp_serialize.crf GUI\Core\GUI_BMP_Serialize.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  _SendU16 PROC
;;;43     */
;;;44     static void _SendU16(GUI_CALLBACK_VOID_U8_P * pfSerialize, U16 Data, void * p) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
000006  4616              MOV      r6,r2
;;;45       (*pfSerialize)((U8)Data, p);
000008  b2e8              UXTB     r0,r5
00000a  4631              MOV      r1,r6
00000c  47a0              BLX      r4
;;;46       (*pfSerialize)(Data >> 8, p);
00000e  1228              ASRS     r0,r5,#8
000010  4631              MOV      r1,r6
000012  47a0              BLX      r4
;;;47     }
000014  bd70              POP      {r4-r6,pc}
;;;48     
                          ENDP

                  _SendU32 PROC
;;;52     */
;;;53     static void _SendU32(GUI_CALLBACK_VOID_U8_P * pfSerialize, U32 Data, void * p) {
000016  b570              PUSH     {r4-r6,lr}
000018  4605              MOV      r5,r0
00001a  460c              MOV      r4,r1
00001c  4616              MOV      r6,r2
;;;54       _SendU16(pfSerialize, (U16)Data, p);
00001e  b2a1              UXTH     r1,r4
000020  4632              MOV      r2,r6
000022  4628              MOV      r0,r5
000024  f7fffffe          BL       _SendU16
;;;55       _SendU16(pfSerialize, Data >> 16, p);
000028  0c21              LSRS     r1,r4,#16
00002a  4632              MOV      r2,r6
00002c  4628              MOV      r0,r5
00002e  f7fffffe          BL       _SendU16
;;;56     }
000032  bd70              POP      {r4-r6,pc}
;;;57     
                          ENDP

                  GUI_BMP_SerializeEx PROC
;;;67     */
;;;68     void GUI_BMP_SerializeEx(GUI_CALLBACK_VOID_U8_P * pfSerialize, int x0, int y0, int xSize, int ySize, void * p) {
000034  e92d4fff          PUSH     {r0-r11,lr}
000038  b089              SUB      sp,sp,#0x24
00003a  4683              MOV      r11,r0
00003c  461c              MOV      r4,r3
;;;69       int x, y, i, BPP, BytesPerLine, NumColors, Padding;
;;;70       U32 BitmapOffset, FileSize;
;;;71       GUI_LOCK();
;;;72       BPP          = LCD_GetBitsPerPixel();
00003e  f7fffffe          BL       LCD_GetBitsPerPixel
000042  4606              MOV      r6,r0
;;;73       BytesPerLine = ((BPP > 8) ? (2 * xSize + 2) : (xSize + 3)) & ~3;
000044  2e08              CMP      r6,#8
000046  dd02              BLE      |L1.78|
000048  0060              LSLS     r0,r4,#1
00004a  1c80              ADDS     r0,r0,#2
00004c  e000              B        |L1.80|
                  |L1.78|
00004e  1ce0              ADDS     r0,r4,#3
                  |L1.80|
000050  f0200003          BIC      r0,r0,#3
000054  9008              STR      r0,[sp,#0x20]
;;;74       NumColors    = (BPP > 8) ? 0 : (1 << BPP);
000056  2e08              CMP      r6,#8
000058  dd01              BLE      |L1.94|
00005a  2000              MOVS     r0,#0
00005c  e001              B        |L1.98|
                  |L1.94|
00005e  2001              MOVS     r0,#1
000060  40b0              LSLS     r0,r0,r6
                  |L1.98|
000062  4681              MOV      r9,r0
;;;75       Padding      = BytesPerLine - ((BPP > 8) ? (2 * xSize) : xSize);
000064  2e08              CMP      r6,#8
000066  dd01              BLE      |L1.108|
000068  0060              LSLS     r0,r4,#1
00006a  e000              B        |L1.110|
                  |L1.108|
00006c  4620              MOV      r0,r4
                  |L1.110|
00006e  9908              LDR      r1,[sp,#0x20]
000070  1a08              SUBS     r0,r1,r0
000072  9007              STR      r0,[sp,#0x1c]
;;;76       /* Write BITMAPFILEHEADER */
;;;77       BitmapOffset   = SIZEOF_BITMAPFILEHEADER
000074  2036              MOVS     r0,#0x36
000076  eb000089          ADD      r0,r0,r9,LSL #2
00007a  9006              STR      r0,[sp,#0x18]
;;;78                      + SIZEOF_BITMAPINFOHEADER
;;;79                      + NumColors * 4;
;;;80       FileSize       = BitmapOffset
00007c  9a08              LDR      r2,[sp,#0x20]
00007e  9916              LDR      r1,[sp,#0x58]
000080  9806              LDR      r0,[sp,#0x18]
000082  fb010002          MLA      r0,r1,r2,r0
000086  9005              STR      r0,[sp,#0x14]
;;;81                      + ySize * BytesPerLine;
;;;82       _SendU16(pfSerialize, DIB_HEADER_MARKER, p);       /* bfType */
000088  f6445142          MOV      r1,#0x4d42
00008c  4658              MOV      r0,r11
00008e  9a17              LDR      r2,[sp,#0x5c]
000090  f7fffffe          BL       _SendU16
;;;83       _SendU32(pfSerialize, FileSize, p);                /* bfSize */
000094  4658              MOV      r0,r11
000096  9a17              LDR      r2,[sp,#0x5c]
000098  9905              LDR      r1,[sp,#0x14]
00009a  f7fffffe          BL       _SendU32
;;;84       _SendU32(pfSerialize, 0, p);                       /* bfReserved1, bfReserved2 */
00009e  2100              MOVS     r1,#0
0000a0  4658              MOV      r0,r11
0000a2  9a17              LDR      r2,[sp,#0x5c]
0000a4  f7fffffe          BL       _SendU32
;;;85       _SendU32(pfSerialize, BitmapOffset, p);            /* bfOffBits */
0000a8  4658              MOV      r0,r11
0000aa  9a17              LDR      r2,[sp,#0x5c]
0000ac  9906              LDR      r1,[sp,#0x18]
0000ae  f7fffffe          BL       _SendU32
;;;86       /* Write BITMAPINFOHEADER */
;;;87       _SendU32(pfSerialize, SIZEOF_BITMAPINFOHEADER, p); /* biSize */
0000b2  2128              MOVS     r1,#0x28
0000b4  4658              MOV      r0,r11
0000b6  9a17              LDR      r2,[sp,#0x5c]
0000b8  f7fffffe          BL       _SendU32
;;;88       _SendU32(pfSerialize, xSize, p);                   /* biWidth */
0000bc  4621              MOV      r1,r4
0000be  4658              MOV      r0,r11
0000c0  9a17              LDR      r2,[sp,#0x5c]
0000c2  f7fffffe          BL       _SendU32
;;;89       _SendU32(pfSerialize, ySize, p);                   /* biHeighth */
0000c6  4658              MOV      r0,r11
0000c8  e9dd1216          LDRD     r1,r2,[sp,#0x58]
0000cc  f7fffffe          BL       _SendU32
;;;90       _SendU16(pfSerialize, 1, p);                       /* biPlanes */
0000d0  2101              MOVS     r1,#1
0000d2  4658              MOV      r0,r11
0000d4  9a17              LDR      r2,[sp,#0x5c]
0000d6  f7fffffe          BL       _SendU16
;;;91       _SendU16(pfSerialize, (BPP  <= 8) ? 8 : 16, p);    /* biBitCount */
0000da  2e08              CMP      r6,#8
0000dc  dc01              BGT      |L1.226|
0000de  2008              MOVS     r0,#8
0000e0  e000              B        |L1.228|
                  |L1.226|
0000e2  2010              MOVS     r0,#0x10
                  |L1.228|
0000e4  4601              MOV      r1,r0
0000e6  4658              MOV      r0,r11
0000e8  9a17              LDR      r2,[sp,#0x5c]
0000ea  f7fffffe          BL       _SendU16
;;;92       _SendU32(pfSerialize, 0, p);                       /* biCompression */
0000ee  2100              MOVS     r1,#0
0000f0  4658              MOV      r0,r11
0000f2  9a17              LDR      r2,[sp,#0x5c]
0000f4  f7fffffe          BL       _SendU32
;;;93       _SendU32(pfSerialize, 0, p);                       /* biSizeImage */
0000f8  2100              MOVS     r1,#0
0000fa  4658              MOV      r0,r11
0000fc  9a17              LDR      r2,[sp,#0x5c]
0000fe  f7fffffe          BL       _SendU32
;;;94       _SendU32(pfSerialize, 0, p);                       /* biXPelsPerMeter */
000102  2100              MOVS     r1,#0
000104  4658              MOV      r0,r11
000106  9a17              LDR      r2,[sp,#0x5c]
000108  f7fffffe          BL       _SendU32
;;;95       _SendU32(pfSerialize, 0, p);                       /* biYPelsPerMeter */
00010c  2100              MOVS     r1,#0
00010e  4658              MOV      r0,r11
000110  9a17              LDR      r2,[sp,#0x5c]
000112  f7fffffe          BL       _SendU32
;;;96       _SendU32(pfSerialize, NumColors, p);               /* biClrUsed */
000116  4649              MOV      r1,r9
000118  4658              MOV      r0,r11
00011a  9a17              LDR      r2,[sp,#0x5c]
00011c  f7fffffe          BL       _SendU32
;;;97       _SendU32(pfSerialize, 0, p);                       /* biClrImportant */
000120  2100              MOVS     r1,#0
000122  4658              MOV      r0,r11
000124  9a17              LDR      r2,[sp,#0x5c]
000126  f7fffffe          BL       _SendU32
;;;98       /* Write palette */
;;;99       for (i = 0; i < NumColors; i++) {
00012a  2500              MOVS     r5,#0
00012c  e012              B        |L1.340|
                  |L1.302|
;;;100        U32 Color;
;;;101        Color = GUI_Index2Color(i);
00012e  4628              MOV      r0,r5
000130  f7fffffe          BL       GUI_Index2Color
000134  4682              MOV      r10,r0
;;;102        Color = ((Color >> 16) & 255) | (Color & 0xff00) | ((Color & 0xff) << 16);
000136  f40a407f          AND      r0,r10,#0xff00
00013a  f3ca4107          UBFX     r1,r10,#16,#8
00013e  4308              ORRS     r0,r0,r1
000140  f00a01ff          AND      r1,r10,#0xff
000144  ea404a01          ORR      r10,r0,r1,LSL #16
;;;103        _SendU32(pfSerialize, Color, p);
000148  4651              MOV      r1,r10
00014a  4658              MOV      r0,r11
00014c  9a17              LDR      r2,[sp,#0x5c]
00014e  f7fffffe          BL       _SendU32
000152  1c6d              ADDS     r5,r5,#1              ;99
                  |L1.340|
000154  454d              CMP      r5,r9                 ;99
000156  dbea              BLT      |L1.302|
;;;104      }
;;;105      /* Write pixels */
;;;106      for (y = ySize - 1; y >= 0; y--) {
000158  9816              LDR      r0,[sp,#0x58]
00015a  1e47              SUBS     r7,r0,#1
00015c  e04f              B        |L1.510|
                  |L1.350|
;;;107        for (x = 0; x < xSize; x++) {
00015e  f04f0800          MOV      r8,#0
000162  e040              B        |L1.486|
                  |L1.356|
;;;108          if (BPP <= 8) {
000164  2e08              CMP      r6,#8
000166  dc0c              BGT      |L1.386|
;;;109            pfSerialize(LCD_GetPixelIndex(x0 + x, y0 + y), p);
000168  9a0b              LDR      r2,[sp,#0x2c]
00016a  19d1              ADDS     r1,r2,r7
00016c  9a0a              LDR      r2,[sp,#0x28]
00016e  eb020008          ADD      r0,r2,r8
000172  f7fffffe          BL       LCD_GetPixelIndex
000176  f0000aff          AND      r10,r0,#0xff
00017a  4650              MOV      r0,r10
00017c  9917              LDR      r1,[sp,#0x5c]
00017e  47d8              BLX      r11
000180  e02f              B        |L1.482|
                  |L1.386|
;;;110          } else {
;;;111            U16 Color16;
;;;112            U32 Color = LCD_GetPixelColor(x0 + x, y0 + y);
000182  9a0b              LDR      r2,[sp,#0x2c]
000184  19d1              ADDS     r1,r2,r7
000186  9a0a              LDR      r2,[sp,#0x28]
000188  eb020008          ADD      r0,r2,r8
00018c  f7fffffe          BL       LCD_GetPixelColor
000190  4682              MOV      r10,r0
;;;113            int b = ((Color >> 16) * 31 + 127) / 255;
000192  ea4f401a          LSR      r0,r10,#16
000196  ebc01040          RSB      r0,r0,r0,LSL #5
00019a  307f              ADDS     r0,r0,#0x7f
00019c  21ff              MOVS     r1,#0xff
00019e  fbb0f0f1          UDIV     r0,r0,r1
0001a2  9003              STR      r0,[sp,#0xc]
;;;114            int g = (((Color >> 8) & 255) * 31 + 127) / 255;
0001a4  f3ca2007          UBFX     r0,r10,#8,#8
0001a8  ebc01040          RSB      r0,r0,r0,LSL #5
0001ac  307f              ADDS     r0,r0,#0x7f
0001ae  fbb0f0f1          UDIV     r0,r0,r1
0001b2  9002              STR      r0,[sp,#8]
;;;115            int r = ((Color & 255) * 31 + 127) / 255;
0001b4  f00a00ff          AND      r0,r10,#0xff
0001b8  ebc01040          RSB      r0,r0,r0,LSL #5
0001bc  307f              ADDS     r0,r0,#0x7f
0001be  fbb0f0f1          UDIV     r0,r0,r1
0001c2  9001              STR      r0,[sp,#4]
;;;116            Color16 = (r << 10) | (g << 5) | b;       /* 16 bpp Bitmaps in windows are 555: rrrrrgggggbbbbb */
0001c4  9801              LDR      r0,[sp,#4]
0001c6  0281              LSLS     r1,r0,#10
0001c8  9802              LDR      r0,[sp,#8]
0001ca  ea411040          ORR      r0,r1,r0,LSL #5
0001ce  9903              LDR      r1,[sp,#0xc]
0001d0  4308              ORRS     r0,r0,r1
0001d2  b280              UXTH     r0,r0
0001d4  9004              STR      r0,[sp,#0x10]
;;;117            _SendU16(pfSerialize, Color16, p);
0001d6  4658              MOV      r0,r11
0001d8  9a17              LDR      r2,[sp,#0x5c]
0001da  9904              LDR      r1,[sp,#0x10]
0001dc  f7fffffe          BL       _SendU16
;;;118          }
0001e0  bf00              NOP      
                  |L1.482|
0001e2  f1080801          ADD      r8,r8,#1              ;107
                  |L1.486|
0001e6  45a0              CMP      r8,r4                 ;107
0001e8  dbbc              BLT      |L1.356|
;;;119        }
;;;120        /* Align pointer to next U32 */
;;;121        for (i = 0; i < Padding; i++) {
0001ea  2500              MOVS     r5,#0
0001ec  e003              B        |L1.502|
                  |L1.494|
;;;122          pfSerialize(0, p);
0001ee  2000              MOVS     r0,#0
0001f0  9917              LDR      r1,[sp,#0x5c]
0001f2  47d8              BLX      r11
0001f4  1c6d              ADDS     r5,r5,#1              ;121
                  |L1.502|
0001f6  9807              LDR      r0,[sp,#0x1c]         ;121
0001f8  4285              CMP      r5,r0                 ;121
0001fa  dbf8              BLT      |L1.494|
0001fc  1e7f              SUBS     r7,r7,#1              ;106
                  |L1.510|
0001fe  2f00              CMP      r7,#0                 ;106
000200  daad              BGE      |L1.350|
;;;123        }
;;;124      }
;;;125      GUI_UNLOCK();
;;;126    }
000202  b00d              ADD      sp,sp,#0x34
000204  e8bd8ff0          POP      {r4-r11,pc}
;;;127    
                          ENDP

                  GUI_BMP_Serialize PROC
;;;131    */
;;;132    void GUI_BMP_Serialize(GUI_CALLBACK_VOID_U8_P * pfSerialize, void * p) {
000208  e92d41fc          PUSH     {r2-r8,lr}
00020c  4605              MOV      r5,r0
00020e  460c              MOV      r4,r1
;;;133      GUI_BMP_SerializeEx(pfSerialize, 0, 0, LCD_GetXSize(), LCD_GetYSize(), p);
000210  f7fffffe          BL       LCD_GetYSize
000214  4606              MOV      r6,r0
000216  f7fffffe          BL       LCD_GetXSize
00021a  4607              MOV      r7,r0
00021c  463b              MOV      r3,r7
00021e  2200              MOVS     r2,#0
000220  4611              MOV      r1,r2
000222  4628              MOV      r0,r5
000224  e9cd6400          STRD     r6,r4,[sp,#0]
000228  f7fffffe          BL       GUI_BMP_SerializeEx
;;;134    }
00022c  e8bd81fc          POP      {r2-r8,pc}
;;;135    
                          ENDP


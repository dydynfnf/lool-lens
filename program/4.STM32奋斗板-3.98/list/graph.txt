; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\graph.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\graph.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -IC:\Users\Administrator\Desktop\gui\STM32·Ü¶·°å-3.98\RTE -Id:\Keil_v5\ARM\PACK\ARM\CMSIS\4.3.0\CMSIS\Include -Id:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.1.0\Device\Include -D__UVISION_VERSION=515 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\graph.crf GUI\Widget\GRAPH.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _DrawGrid PROC
;;;91     */
;;;92     static void _DrawGrid(GRAPH_OBJ * pObj, GRAPH_Handle hObj, unsigned BorderL, unsigned BorderT, unsigned BorderR, unsigned BorderB) {
000000  e92d4fff          PUSH     {r0-r11,lr}
000004  b089              SUB      sp,sp,#0x24
000006  4604              MOV      r4,r0
000008  4690              MOV      r8,r2
00000a  469a              MOV      r10,r3
;;;93       GUI_RECT Rect;
;;;94       U8 LineStyleOld;
;;;95       int i, xSize, ySize, xSpace, ySpace, EffectSize;
;;;96       WM_GetInsideRectExScrollbar(hObj, &Rect);
00000c  a907              ADD      r1,sp,#0x1c
00000e  980a              LDR      r0,[sp,#0x28]
000010  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;97       EffectSize = pObj->Widget.pEffect->EffectSize;
000014  6a20              LDR      r0,[r4,#0x20]
000016  6940              LDR      r0,[r0,#0x14]
000018  9003              STR      r0,[sp,#0xc]
;;;98       xSpace = pObj->Props.GridSpacingX;
00001a  6ba6              LDR      r6,[r4,#0x38]
;;;99       ySpace = pObj->Props.GridSpacingY;
00001c  6be7              LDR      r7,[r4,#0x3c]
;;;100      xSize = Rect.x1 - Rect.x0 + 1 - BorderL - BorderR;
00001e  f9bd0020          LDRSH    r0,[sp,#0x20]
000022  f9bd101c          LDRSH    r1,[sp,#0x1c]
000026  1a40              SUBS     r0,r0,r1
000028  1c40              ADDS     r0,r0,#1
00002a  eba00108          SUB      r1,r0,r8
00002e  9816              LDR      r0,[sp,#0x58]
000030  1a08              SUBS     r0,r1,r0
000032  9005              STR      r0,[sp,#0x14]
;;;101      ySize = Rect.y1 - Rect.y0 + 1 - BorderT - BorderB;
000034  f9bd0022          LDRSH    r0,[sp,#0x22]
000038  f9bd101e          LDRSH    r1,[sp,#0x1e]
00003c  1a40              SUBS     r0,r0,r1
00003e  1c40              ADDS     r0,r0,#1
000040  eba0010a          SUB      r1,r0,r10
000044  9817              LDR      r0,[sp,#0x5c]
000046  1a08              SUBS     r0,r1,r0
000048  9004              STR      r0,[sp,#0x10]
;;;102      GUI_SetColor(pObj->Props.aColor[GRAPH_CI_GRID]);
00004a  6b60              LDR      r0,[r4,#0x34]
00004c  f7fffffe          BL       GUI_SetColor
;;;103      LineStyleOld = GUI_GetLineStyle();
000050  f7fffffe          BL       GUI_GetLineStyle
000054  9006              STR      r0,[sp,#0x18]
;;;104      if (xSpace) {
000056  2e00              CMP      r6,#0
000058  d039              BEQ      |L1.206|
;;;105        int FirstPosX;
;;;106        FirstPosX = xSpace + pObj->Props.GridOffX + ((pObj->Flags & GRAPH_CF_GRID_FIXED_X) ? 0 : pObj->ScrollStateH.v);
00005a  6c20              LDR      r0,[r4,#0x40]
00005c  1981              ADDS     r1,r0,r6
00005e  f894006c          LDRB     r0,[r4,#0x6c]
000062  f0000001          AND      r0,r0,#1
000066  b108              CBZ      r0,|L1.108|
000068  2000              MOVS     r0,#0
00006a  e001              B        |L1.112|
                  |L1.108|
00006c  2080              MOVS     r0,#0x80
00006e  5900              LDR      r0,[r0,r4]
                  |L1.112|
000070  eb010900          ADD      r9,r1,r0
;;;107        while (FirstPosX >= xSpace) FirstPosX -= xSpace;
000074  e001              B        |L1.122|
                  |L1.118|
000076  eba90906          SUB      r9,r9,r6
                  |L1.122|
00007a  45b1              CMP      r9,r6
00007c  dafb              BGE      |L1.118|
;;;108        GUI_SetLineStyle(pObj->LineStyleV);
00007e  f894006e          LDRB     r0,[r4,#0x6e]
000082  f7fffffe          BL       GUI_SetLineStyle
;;;109        for (i = FirstPosX; i < xSize; i += xSpace) {
000086  464d              MOV      r5,r9
000088  e01d              B        |L1.198|
                  |L1.138|
;;;110          int x, y0, y1;
;;;111          x  = i + BorderL + EffectSize;
00008a  eb050108          ADD      r1,r5,r8
00008e  9803              LDR      r0,[sp,#0xc]
000090  eb010b00          ADD      r11,r1,r0
;;;112          y0 = Rect.y0 + BorderT;
000094  f9bd001e          LDRSH    r0,[sp,#0x1e]
000098  4450              ADD      r0,r0,r10
00009a  9002              STR      r0,[sp,#8]
;;;113          y1 = Rect.y1 - BorderB;
00009c  f9bd1022          LDRSH    r1,[sp,#0x22]
0000a0  9817              LDR      r0,[sp,#0x5c]
0000a2  1a08              SUBS     r0,r1,r0
0000a4  9001              STR      r0,[sp,#4]
;;;114          if (pObj->LineStyleV != GUI_LS_SOLID) {
0000a6  f894006e          LDRB     r0,[r4,#0x6e]
0000aa  b130              CBZ      r0,|L1.186|
;;;115            GUI_DrawLine(x, y0, x, y1);
0000ac  465a              MOV      r2,r11
0000ae  4658              MOV      r0,r11
0000b0  e9dd3101          LDRD     r3,r1,[sp,#4]
0000b4  f7fffffe          BL       GUI_DrawLine
0000b8  e004              B        |L1.196|
                  |L1.186|
;;;116          } else {
;;;117            GUI_DrawVLine(x, y0, y1);
0000ba  4658              MOV      r0,r11
0000bc  e9dd2101          LDRD     r2,r1,[sp,#4]
0000c0  f7fffffe          BL       GUI_DrawVLine
                  |L1.196|
0000c4  4435              ADD      r5,r5,r6              ;109
                  |L1.198|
0000c6  9805              LDR      r0,[sp,#0x14]         ;109
0000c8  4285              CMP      r5,r0                 ;109
0000ca  dbde              BLT      |L1.138|
;;;118          }
;;;119        }
;;;120      }
0000cc  bf00              NOP      
                  |L1.206|
;;;121      if (ySpace) {
0000ce  b397              CBZ      r7,|L1.310|
;;;122        int FirstPosY;
;;;123        FirstPosY = ySpace + pObj->Props.GridOffY - pObj->ScrollStateV.v;
0000d0  6c60              LDR      r0,[r4,#0x44]
0000d2  19c1              ADDS     r1,r0,r7
0000d4  6f60              LDR      r0,[r4,#0x74]
0000d6  eba10900          SUB      r9,r1,r0
;;;124        while (FirstPosY >= ySpace) FirstPosY -= ySpace;
0000da  e001              B        |L1.224|
                  |L1.220|
0000dc  eba90907          SUB      r9,r9,r7
                  |L1.224|
0000e0  45b9              CMP      r9,r7
0000e2  dafb              BGE      |L1.220|
;;;125        GUI_SetLineStyle(pObj->LineStyleH);
0000e4  f894006f          LDRB     r0,[r4,#0x6f]
0000e8  f7fffffe          BL       GUI_SetLineStyle
;;;126        for (i = FirstPosY; i < ySize; i += ySpace) {
0000ec  464d              MOV      r5,r9
0000ee  e01e              B        |L1.302|
                  |L1.240|
;;;127          int y, x0, x1;
;;;128          y  = Rect.y1 - BorderB - i;
0000f0  f9bd1022          LDRSH    r1,[sp,#0x22]
0000f4  9817              LDR      r0,[sp,#0x5c]
0000f6  1a08              SUBS     r0,r1,r0
0000f8  eba00b05          SUB      r11,r0,r5
;;;129          x0 = Rect.x0 + BorderL;
0000fc  f9bd001c          LDRSH    r0,[sp,#0x1c]
000100  4440              ADD      r0,r0,r8
000102  9002              STR      r0,[sp,#8]
;;;130          x1 = Rect.x1 - BorderR;
000104  f9bd1020          LDRSH    r1,[sp,#0x20]
000108  9816              LDR      r0,[sp,#0x58]
00010a  1a08              SUBS     r0,r1,r0
00010c  9001              STR      r0,[sp,#4]
;;;131          if (pObj->LineStyleH != GUI_LS_SOLID) {
00010e  f894006f          LDRB     r0,[r4,#0x6f]
000112  b130              CBZ      r0,|L1.290|
;;;132            GUI_DrawLine(x0, y, x1, y);
000114  465b              MOV      r3,r11
000116  4659              MOV      r1,r11
000118  e9dd2001          LDRD     r2,r0,[sp,#4]
00011c  f7fffffe          BL       GUI_DrawLine
000120  e004              B        |L1.300|
                  |L1.290|
;;;133          } else {
;;;134            GUI_DrawHLine(y, x0, x1);
000122  4658              MOV      r0,r11
000124  e9dd2101          LDRD     r2,r1,[sp,#4]
000128  f7fffffe          BL       GUI_DrawHLine
                  |L1.300|
00012c  443d              ADD      r5,r5,r7              ;126
                  |L1.302|
00012e  9804              LDR      r0,[sp,#0x10]         ;126
000130  4285              CMP      r5,r0                 ;126
000132  dbdd              BLT      |L1.240|
;;;135          }
;;;136        }
;;;137      }
000134  bf00              NOP      
                  |L1.310|
;;;138      GUI_SetLineStyle(LineStyleOld);
000136  9806              LDR      r0,[sp,#0x18]
000138  f7fffffe          BL       GUI_SetLineStyle
;;;139    }
00013c  b00d              ADD      sp,sp,#0x34
00013e  e8bd8ff0          POP      {r4-r11,pc}
;;;140    
                          ENDP

                  _DrawBorder PROC
;;;144    */
;;;145    static void _DrawBorder(GRAPH_OBJ * pObj, GRAPH_Handle hObj, unsigned BorderL, unsigned BorderT, unsigned BorderR, unsigned BorderB, GUI_RECT * pRectInvalid) {
000142  e92d4fff          PUSH     {r0-r11,lr}
000146  b08b              SUB      sp,sp,#0x2c
000148  4607              MOV      r7,r0
00014a  4616              MOV      r6,r2
00014c  461c              MOV      r4,r3
00014e  e9dd5919          LDRD     r5,r9,[sp,#0x64]
000152  f8dd8060          LDR      r8,[sp,#0x60]
;;;146      if (BorderL || BorderT || BorderR || BorderB) {
000156  b92e              CBNZ     r6,|L1.356|
000158  b924              CBNZ     r4,|L1.356|
00015a  f1b80f00          CMP      r8,#0
00015e  d101              BNE      |L1.356|
000160  2d00              CMP      r5,#0
000162  d07d              BEQ      |L1.608|
                  |L1.356|
;;;147        int OrgX, OrgY, x0, y0, x1, y1, x0_Clear, y0_Clear, x1_Clear, y1_Clear;
;;;148        GUI_RECT Rect;
;;;149        int EffectSize;
;;;150        EffectSize = pObj->Widget.pEffect->EffectSize;
000164  6a38              LDR      r0,[r7,#0x20]
000166  f8d0a014          LDR      r10,[r0,#0x14]
;;;151        WM_GetInsideRectExScrollbar(hObj, &Rect);
00016a  4669              MOV      r1,sp
00016c  980c              LDR      r0,[sp,#0x30]
00016e  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;152        OrgX = WM_GetOrgX();
000172  f7fffffe          BL       WM_GetOrgX
000176  900a              STR      r0,[sp,#0x28]
;;;153        OrgY = WM_GetOrgY();
000178  f7fffffe          BL       WM_GetOrgY
00017c  9009              STR      r0,[sp,#0x24]
;;;154        x0 = Rect.x0 + BorderL;
00017e  f9bd0000          LDRSH    r0,[sp,#0]
000182  4430              ADD      r0,r0,r6
000184  9008              STR      r0,[sp,#0x20]
;;;155        y0 = Rect.y0 + BorderT;
000186  f9bd0002          LDRSH    r0,[sp,#2]
00018a  eb000b04          ADD      r11,r0,r4
;;;156        x1 = Rect.x1 - BorderR;
00018e  f9bd0004          LDRSH    r0,[sp,#4]
000192  eba00008          SUB      r0,r0,r8
000196  9007              STR      r0,[sp,#0x1c]
;;;157        y1 = Rect.y1 - BorderB;
000198  f9bd0006          LDRSH    r0,[sp,#6]
00019c  1b40              SUBS     r0,r0,r5
00019e  9006              STR      r0,[sp,#0x18]
;;;158        GUI_SetBkColor(pObj->Props.aColor[GRAPH_CI_BORDER]);
0001a0  6af8              LDR      r0,[r7,#0x2c]
0001a2  f7fffffe          BL       GUI_SetBkColor
;;;159        GUI_SetColor(pObj->Props.aColor[GRAPH_CI_FRAME]);
0001a6  6b38              LDR      r0,[r7,#0x30]
0001a8  f7fffffe          BL       GUI_SetColor
;;;160        if (BorderL) {
0001ac  b316              CBZ      r6,|L1.500|
;;;161          x1_Clear = BorderL - 1 + EffectSize;
0001ae  1e70              SUBS     r0,r6,#1
0001b0  4450              ADD      r0,r0,r10
0001b2  9003              STR      r0,[sp,#0xc]
;;;162          if ((pRectInvalid->x0 - OrgX) <= x1_Clear) {
0001b4  f9b91000          LDRSH    r1,[r9,#0]
0001b8  980a              LDR      r0,[sp,#0x28]
0001ba  1a09              SUBS     r1,r1,r0
0001bc  9803              LDR      r0,[sp,#0xc]
0001be  4281              CMP      r1,r0
0001c0  dc18              BGT      |L1.500|
;;;163            x0_Clear = Rect.x0;
0001c2  f9bd0000          LDRSH    r0,[sp,#0]
0001c6  9005              STR      r0,[sp,#0x14]
;;;164            y0_Clear = BorderT + EffectSize;
0001c8  eb04000a          ADD      r0,r4,r10
0001cc  9004              STR      r0,[sp,#0x10]
;;;165            y1_Clear = Rect.y1 - BorderB + 1;
0001ce  f9bd0006          LDRSH    r0,[sp,#6]
0001d2  1b40              SUBS     r0,r0,r5
0001d4  1c40              ADDS     r0,r0,#1
0001d6  9002              STR      r0,[sp,#8]
;;;166            GUI_ClearRect(x0_Clear, y0_Clear, x1_Clear, y1_Clear);
0001d8  e9dd3202          LDRD     r3,r2,[sp,#8]
0001dc  e9dd1004          LDRD     r1,r0,[sp,#0x10]
0001e0  f7fffffe          BL       GUI_ClearRect
;;;167            GUI_DrawVLine(x0 - 1, y0 - 1, y1 + 1);
0001e4  f1ab0101          SUB      r1,r11,#1
0001e8  9a08              LDR      r2,[sp,#0x20]
0001ea  1e50              SUBS     r0,r2,#1
0001ec  9a06              LDR      r2,[sp,#0x18]
0001ee  1c52              ADDS     r2,r2,#1
0001f0  f7fffffe          BL       GUI_DrawVLine
                  |L1.500|
;;;168          }
;;;169        }
;;;170        if (BorderT) {
0001f4  b304              CBZ      r4,|L1.568|
;;;171          y1_Clear = BorderT - 1 + EffectSize;
0001f6  1e60              SUBS     r0,r4,#1
0001f8  4450              ADD      r0,r0,r10
0001fa  9002              STR      r0,[sp,#8]
;;;172          if ((pRectInvalid->y0 - OrgY) <= y1_Clear) {
0001fc  f9b91002          LDRSH    r1,[r9,#2]
000200  9809              LDR      r0,[sp,#0x24]
000202  1a09              SUBS     r1,r1,r0
000204  9802              LDR      r0,[sp,#8]
000206  4281              CMP      r1,r0
000208  dc16              BGT      |L1.568|
;;;173            x0_Clear = Rect.x0;
00020a  f9bd0000          LDRSH    r0,[sp,#0]
00020e  9005              STR      r0,[sp,#0x14]
;;;174            y0_Clear = Rect.y0;
000210  f9bd0002          LDRSH    r0,[sp,#2]
000214  9004              STR      r0,[sp,#0x10]
;;;175            x1_Clear = Rect.x1;
000216  f9bd0004          LDRSH    r0,[sp,#4]
00021a  9003              STR      r0,[sp,#0xc]
;;;176            GUI_ClearRect(x0_Clear, y0_Clear, x1_Clear, y1_Clear);
00021c  e9dd3202          LDRD     r3,r2,[sp,#8]
000220  e9dd1004          LDRD     r1,r0,[sp,#0x10]
000224  f7fffffe          BL       GUI_ClearRect
;;;177            GUI_DrawHLine(y0 - 1, x0 - 1, x1 + 1);
000228  9a08              LDR      r2,[sp,#0x20]
00022a  1e51              SUBS     r1,r2,#1
00022c  f1ab0001          SUB      r0,r11,#1
000230  9a07              LDR      r2,[sp,#0x1c]
000232  1c52              ADDS     r2,r2,#1
000234  f7fffffe          BL       GUI_DrawHLine
                  |L1.568|
;;;178          }
;;;179        }
;;;180        if (BorderR) {
000238  f1b80f00          CMP      r8,#0
00023c  d027              BEQ      |L1.654|
;;;181          x0_Clear = Rect.x1 - BorderR + 1;
00023e  f9bd0004          LDRSH    r0,[sp,#4]
000242  eba00008          SUB      r0,r0,r8
000246  1c40              ADDS     r0,r0,#1
000248  9005              STR      r0,[sp,#0x14]
;;;182          if ((pRectInvalid->x1 - OrgX) >= x0_Clear) {
00024a  f9b91004          LDRSH    r1,[r9,#4]
00024e  980a              LDR      r0,[sp,#0x28]
000250  1a09              SUBS     r1,r1,r0
000252  9805              LDR      r0,[sp,#0x14]
000254  4281              CMP      r1,r0
000256  db1a              BLT      |L1.654|
;;;183            y0_Clear = BorderT + EffectSize;
000258  eb04000a          ADD      r0,r4,r10
00025c  9004              STR      r0,[sp,#0x10]
;;;184            x1_Clear = Rect.x1;
00025e  e000              B        |L1.610|
                  |L1.608|
000260  e03a              B        |L1.728|
                  |L1.610|
000262  f9bd0004          LDRSH    r0,[sp,#4]
000266  9003              STR      r0,[sp,#0xc]
;;;185            y1_Clear = Rect.y1 - BorderB + 1;
000268  f9bd0006          LDRSH    r0,[sp,#6]
00026c  1b40              SUBS     r0,r0,r5
00026e  1c40              ADDS     r0,r0,#1
000270  9002              STR      r0,[sp,#8]
;;;186            GUI_ClearRect(x0_Clear, y0_Clear, x1_Clear, y1_Clear);
000272  e9dd3202          LDRD     r3,r2,[sp,#8]
000276  e9dd1004          LDRD     r1,r0,[sp,#0x10]
00027a  f7fffffe          BL       GUI_ClearRect
;;;187            GUI_DrawVLine(x1 + 1, y0 - 1, y1 + 1);
00027e  f1ab0101          SUB      r1,r11,#1
000282  9a06              LDR      r2,[sp,#0x18]
000284  1c52              ADDS     r2,r2,#1
000286  9807              LDR      r0,[sp,#0x1c]
000288  1c40              ADDS     r0,r0,#1
00028a  f7fffffe          BL       GUI_DrawVLine
                  |L1.654|
;;;188          }
;;;189        }
;;;190        if (BorderB) {
00028e  b315              CBZ      r5,|L1.726|
;;;191          y0_Clear = Rect.y1 - BorderB + 1;
000290  f9bd0006          LDRSH    r0,[sp,#6]
000294  1b40              SUBS     r0,r0,r5
000296  1c40              ADDS     r0,r0,#1
000298  9004              STR      r0,[sp,#0x10]
;;;192          if ((pRectInvalid->y1 - OrgY) >= y0_Clear) {
00029a  f9b91006          LDRSH    r1,[r9,#6]
00029e  9809              LDR      r0,[sp,#0x24]
0002a0  1a09              SUBS     r1,r1,r0
0002a2  9804              LDR      r0,[sp,#0x10]
0002a4  4281              CMP      r1,r0
0002a6  db16              BLT      |L1.726|
;;;193            x0_Clear = Rect.x0;
0002a8  f9bd0000          LDRSH    r0,[sp,#0]
0002ac  9005              STR      r0,[sp,#0x14]
;;;194            x1_Clear = Rect.x1;
0002ae  f9bd0004          LDRSH    r0,[sp,#4]
0002b2  9003              STR      r0,[sp,#0xc]
;;;195            y1_Clear = Rect.y1;
0002b4  f9bd0006          LDRSH    r0,[sp,#6]
0002b8  9002              STR      r0,[sp,#8]
;;;196            GUI_ClearRect(x0_Clear, y0_Clear, x1_Clear, y1_Clear);
0002ba  e9dd3202          LDRD     r3,r2,[sp,#8]
0002be  e9dd1004          LDRD     r1,r0,[sp,#0x10]
0002c2  f7fffffe          BL       GUI_ClearRect
;;;197            GUI_DrawHLine(y1 + 1, x0 - 1, x1 + 1);
0002c6  9808              LDR      r0,[sp,#0x20]
0002c8  1e41              SUBS     r1,r0,#1
0002ca  9a07              LDR      r2,[sp,#0x1c]
0002cc  1c52              ADDS     r2,r2,#1
0002ce  9806              LDR      r0,[sp,#0x18]
0002d0  1c40              ADDS     r0,r0,#1
0002d2  f7fffffe          BL       GUI_DrawHLine
                  |L1.726|
;;;198          }
;;;199        }
;;;200      }
0002d6  bf00              NOP      
                  |L1.728|
;;;201    }
0002d8  b00f              ADD      sp,sp,#0x3c
0002da  e8bd8ff0          POP      {r4-r11,pc}
;;;202    
                          ENDP

                  _GetParams PROC
;;;206    */
;;;207    static void _GetParams(GRAPH_OBJ * pObj, unsigned * pBorderL, unsigned * pBorderT, unsigned * pBorderR, unsigned * pBorderB, unsigned * pEffectSize) {
0002de  b570              PUSH     {r4-r6,lr}
0002e0  e9dd4504          LDRD     r4,r5,[sp,#0x10]
;;;208      *pBorderL    = pObj->Props.BorderL;
0002e4  6c86              LDR      r6,[r0,#0x48]
0002e6  600e              STR      r6,[r1,#0]
;;;209      *pBorderT    = pObj->Props.BorderT;
0002e8  6cc6              LDR      r6,[r0,#0x4c]
0002ea  6016              STR      r6,[r2,#0]
;;;210      *pBorderR    = pObj->Props.BorderR;
0002ec  6d06              LDR      r6,[r0,#0x50]
0002ee  601e              STR      r6,[r3,#0]
;;;211      *pBorderB    = pObj->Props.BorderB;
0002f0  6d46              LDR      r6,[r0,#0x54]
0002f2  6026              STR      r6,[r4,#0]
;;;212      *pEffectSize = pObj->Widget.pEffect->EffectSize;
0002f4  6a06              LDR      r6,[r0,#0x20]
0002f6  6976              LDR      r6,[r6,#0x14]
0002f8  602e              STR      r6,[r5,#0]
;;;213    }
0002fa  bd70              POP      {r4-r6,pc}
;;;214    
                          ENDP

                  _OnPaint PROC
;;;218    */
;;;219    static void _OnPaint(GRAPH_OBJ * pObj, GRAPH_Handle hObj, GUI_RECT * pRectInvalid) {
0002fc  e92d4ff0          PUSH     {r4-r11,lr}
000300  b08d              SUB      sp,sp,#0x34
000302  4604              MOV      r4,r0
000304  4688              MOV      r8,r1
000306  4616              MOV      r6,r2
;;;220      unsigned BorderL, BorderT, BorderR, BorderB, EffectSize, i, NumItems;
;;;221      GUI_RECT RectClient, Rect;
;;;222      _GetParams(pObj, &BorderL, &BorderT, &BorderR, &BorderB, &EffectSize);
000308  a808              ADD      r0,sp,#0x20
00030a  a909              ADD      r1,sp,#0x24
00030c  ab0a              ADD      r3,sp,#0x28
00030e  aa0b              ADD      r2,sp,#0x2c
000310  e9cd1000          STRD     r1,r0,[sp,#0]
000314  a90c              ADD      r1,sp,#0x30
000316  4620              MOV      r0,r4
000318  f7fffffe          BL       _GetParams
;;;223      WM_GetClientRect(&RectClient);
00031c  a806              ADD      r0,sp,#0x18
00031e  f7fffffe          BL       WM_GetClientRect
;;;224      WIDGET__EFFECT_DrawDownRect(&pObj->Widget, &RectClient);
000322  a906              ADD      r1,sp,#0x18
000324  4620              MOV      r0,r4
000326  f7fffffe          BL       WIDGET__EFFECT_DrawDownRect
;;;225      Rect = RectClient;
00032a  e9dd0106          LDRD     r0,r1,[sp,#0x18]
00032e  e9cd0104          STRD     r0,r1,[sp,#0x10]
;;;226      Rect.y0 += BorderT + EffectSize;
000332  f8bd0012          LDRH     r0,[sp,#0x12]
000336  9a08              LDR      r2,[sp,#0x20]
000338  990b              LDR      r1,[sp,#0x2c]
00033a  4411              ADD      r1,r1,r2
00033c  4408              ADD      r0,r0,r1
00033e  b200              SXTH     r0,r0
000340  f8ad0012          STRH     r0,[sp,#0x12]
;;;227      Rect.y1 -= BorderB + EffectSize;
000344  f8bd0016          LDRH     r0,[sp,#0x16]
000348  e9dd2108          LDRD     r2,r1,[sp,#0x20]
00034c  4411              ADD      r1,r1,r2
00034e  1a40              SUBS     r0,r0,r1
000350  b200              SXTH     r0,r0
000352  f8ad0016          STRH     r0,[sp,#0x16]
;;;228      Rect.x0 += BorderL + EffectSize;
000356  f8bd0010          LDRH     r0,[sp,#0x10]
00035a  9a08              LDR      r2,[sp,#0x20]
00035c  990c              LDR      r1,[sp,#0x30]
00035e  4411              ADD      r1,r1,r2
000360  4408              ADD      r0,r0,r1
000362  b200              SXTH     r0,r0
000364  f8ad0010          STRH     r0,[sp,#0x10]
;;;229      Rect.x1 -= BorderR + EffectSize;
000368  f8bd0014          LDRH     r0,[sp,#0x14]
00036c  9a08              LDR      r2,[sp,#0x20]
00036e  990a              LDR      r1,[sp,#0x28]
000370  4411              ADD      r1,r1,r2
000372  1a40              SUBS     r0,r0,r1
000374  b200              SXTH     r0,r0
000376  f8ad0014          STRH     r0,[sp,#0x14]
;;;230      WM_SetUserClipRect(&Rect);
00037a  a804              ADD      r0,sp,#0x10
00037c  f7fffffe          BL       WM_SetUserClipRect
;;;231      GUI_SetBkColor(pObj->Props.aColor[GRAPH_CI_BK]);
000380  6aa0              LDR      r0,[r4,#0x28]
000382  f7fffffe          BL       GUI_SetBkColor
;;;232      GUI_Clear();
000386  f7fffffe          BL       GUI_Clear
;;;233      if (pObj->pUserDraw) {
00038a  f8d40088          LDR      r0,[r4,#0x88]
00038e  b120              CBZ      r0,|L1.922|
;;;234        pObj->pUserDraw(hObj, GRAPH_DRAW_FIRST);
000390  2100              MOVS     r1,#0
000392  4640              MOV      r0,r8
000394  f8d42088          LDR      r2,[r4,#0x88]
000398  4790              BLX      r2
                  |L1.922|
;;;235      }
;;;236      if (pObj->ShowGrid) {
00039a  f8940060          LDRB     r0,[r4,#0x60]
00039e  b148              CBZ      r0,|L1.948|
;;;237        _DrawGrid(pObj, hObj, BorderL, BorderT, BorderR, BorderB);
0003a0  e9dd1009          LDRD     r1,r0,[sp,#0x24]
0003a4  e9cd0100          STRD     r0,r1,[sp,#0]
0003a8  4641              MOV      r1,r8
0003aa  4620              MOV      r0,r4
0003ac  e9dd320b          LDRD     r3,r2,[sp,#0x2c]
0003b0  f7fffffe          BL       _DrawGrid
                  |L1.948|
;;;238      }
;;;239      NumItems = pObj->GraphArray.NumItems;
0003b4  f8b47058          LDRH     r7,[r4,#0x58]
;;;240      for (i = 0; i < NumItems; i++) {
0003b8  2500              MOVS     r5,#0
0003ba  e01c              B        |L1.1014|
                  |L1.956|
;;;241        WM_HMEM hMem;
;;;242        WM_HMEM * phMem;
;;;243        hMem  = GUI_ARRAY_GethItem(&pObj->GraphArray, i); /* Handle of array item */
0003bc  4629              MOV      r1,r5
0003be  f1040058          ADD      r0,r4,#0x58
0003c2  f7fffffe          BL       GUI_ARRAY_GethItem
0003c6  9003              STR      r0,[sp,#0xc]
;;;244        phMem = (WM_HMEM *)GUI_ALLOC_h2p(hMem);                      /* Pointer to handle */
0003c8  9803              LDR      r0,[sp,#0xc]
0003ca  f7fffffe          BL       GUI_ALLOC_h2p
0003ce  4681              MOV      r9,r0
;;;245        if (phMem) {
0003d0  f1b90f00          CMP      r9,#0
0003d4  d00e              BEQ      |L1.1012|
;;;246          GRAPH_DATA_Handle hDataObj;
;;;247          GRAPH_DATA_OBJ *  pDataObj;
;;;248          hDataObj = *(WM_HMEM *)phMem;
0003d6  f9b9b000          LDRSH    r11,[r9,#0]
;;;249          pDataObj = (GRAPH_DATA_OBJ *)GUI_ALLOC_h2p(hDataObj);
0003da  4658              MOV      r0,r11
0003dc  f7fffffe          BL       GUI_ALLOC_h2p
0003e0  4682              MOV      r10,r0
;;;250          if (pDataObj) {
0003e2  f1ba0f00          CMP      r10,#0
0003e6  d004              BEQ      |L1.1010|
;;;251            pDataObj->PaintObj.pfOnPaint(hDataObj, pRectInvalid);
0003e8  4631              MOV      r1,r6
0003ea  4658              MOV      r0,r11
0003ec  f8da2000          LDR      r2,[r10,#0]
0003f0  4790              BLX      r2
                  |L1.1010|
;;;252          }
;;;253        }
0003f2  bf00              NOP      
                  |L1.1012|
0003f4  1c6d              ADDS     r5,r5,#1              ;240
                  |L1.1014|
0003f6  42bd              CMP      r5,r7                 ;240
0003f8  d3e0              BCC      |L1.956|
;;;254      }
;;;255      GUI__ReduceRect(&Rect, &RectClient, EffectSize);
0003fa  a906              ADD      r1,sp,#0x18
0003fc  a804              ADD      r0,sp,#0x10
0003fe  9a08              LDR      r2,[sp,#0x20]
000400  f7fffffe          BL       GUI__ReduceRect
;;;256      WM_SetUserClipRect(&Rect);
000404  a804              ADD      r0,sp,#0x10
000406  f7fffffe          BL       WM_SetUserClipRect
;;;257      _DrawBorder(pObj, hObj, BorderL, BorderT, BorderR, BorderB, pRectInvalid);
00040a  e9dd1009          LDRD     r1,r0,[sp,#0x24]
00040e  e88d0043          STM      sp,{r0,r1,r6}
000412  4641              MOV      r1,r8
000414  4620              MOV      r0,r4
000416  e9dd320b          LDRD     r3,r2,[sp,#0x2c]
00041a  f7fffffe          BL       _DrawBorder
;;;258      NumItems = pObj->ScaleArray.NumItems;
00041e  f8b4705c          LDRH     r7,[r4,#0x5c]
;;;259      for (i = 0; i < NumItems; i++) {
000422  2500              MOVS     r5,#0
000424  e01c              B        |L1.1120|
                  |L1.1062|
;;;260        WM_HMEM hMem;
;;;261        WM_HMEM * phMem;
;;;262        hMem  = GUI_ARRAY_GethItem(&pObj->ScaleArray, i); /* Handle of array item */
000426  4629              MOV      r1,r5
000428  f104005c          ADD      r0,r4,#0x5c
00042c  f7fffffe          BL       GUI_ARRAY_GethItem
000430  9003              STR      r0,[sp,#0xc]
;;;263        phMem = (WM_HMEM *)GUI_ALLOC_h2p(hMem);                      /* Pointer to handle */
000432  9803              LDR      r0,[sp,#0xc]
000434  f7fffffe          BL       GUI_ALLOC_h2p
000438  4681              MOV      r9,r0
;;;264        if (phMem) {
00043a  f1b90f00          CMP      r9,#0
00043e  d00e              BEQ      |L1.1118|
;;;265          GRAPH_SCALE_Handle hScaleObj;
;;;266          GRAPH_SCALE_OBJ *  pScaleObj;
;;;267          hScaleObj = *(WM_HMEM *)phMem;
000440  f9b9b000          LDRSH    r11,[r9,#0]
;;;268          pScaleObj = (GRAPH_SCALE_OBJ *)GUI_ALLOC_h2p(hScaleObj);
000444  4658              MOV      r0,r11
000446  f7fffffe          BL       GUI_ALLOC_h2p
00044a  4682              MOV      r10,r0
;;;269          if (pScaleObj) {
00044c  f1ba0f00          CMP      r10,#0
000450  d004              BEQ      |L1.1116|
;;;270            pScaleObj->PaintObj.pfOnPaint(hScaleObj, pRectInvalid);
000452  4631              MOV      r1,r6
000454  4658              MOV      r0,r11
000456  f8da2000          LDR      r2,[r10,#0]
00045a  4790              BLX      r2
                  |L1.1116|
;;;271          }
;;;272        }
00045c  bf00              NOP      
                  |L1.1118|
00045e  1c6d              ADDS     r5,r5,#1              ;259
                  |L1.1120|
000460  42bd              CMP      r5,r7                 ;259
000462  d3e0              BCC      |L1.1062|
;;;273      }
;;;274      WM_SetUserClipRect(0);
000464  2000              MOVS     r0,#0
000466  f7fffffe          BL       WM_SetUserClipRect
;;;275      if (pObj->pUserDraw) {
00046a  f8d40088          LDR      r0,[r4,#0x88]
00046e  b120              CBZ      r0,|L1.1146|
;;;276        pObj->pUserDraw(hObj, GRAPH_DRAW_LAST);
000470  2101              MOVS     r1,#1
000472  4640              MOV      r0,r8
000474  f8d42088          LDR      r2,[r4,#0x88]
000478  4790              BLX      r2
                  |L1.1146|
;;;277      }
;;;278    }
00047a  b00d              ADD      sp,sp,#0x34
00047c  e8bd8ff0          POP      {r4-r11,pc}
;;;279    
                          ENDP

                  _OnDelete PROC
;;;283    */
;;;284    static void _OnDelete(GRAPH_OBJ * pObj) {
000480  e92d47f0          PUSH     {r4-r10,lr}
000484  4604              MOV      r4,r0
;;;285      int i, NumItems;
;;;286      NumItems = pObj->GraphArray.NumItems;
000486  f8b46058          LDRH     r6,[r4,#0x58]
;;;287      for (i = 0; i < NumItems; i++) {
00048a  2500              MOVS     r5,#0
00048c  e01c              B        |L1.1224|
                  |L1.1166|
;;;288        WM_HMEM hMem;
;;;289        WM_HMEM * phMem;
;;;290        hMem  = GUI_ARRAY_GethItem(&pObj->GraphArray, i); /* Handle of array item */
00048e  4629              MOV      r1,r5
000490  f1040058          ADD      r0,r4,#0x58
000494  f7fffffe          BL       GUI_ARRAY_GethItem
000498  4682              MOV      r10,r0
;;;291        phMem = (WM_HMEM *)GUI_ALLOC_h2p(hMem);                      /* Pointer to handle */
00049a  4650              MOV      r0,r10
00049c  f7fffffe          BL       GUI_ALLOC_h2p
0004a0  4607              MOV      r7,r0
;;;292        if (phMem) {
0004a2  b187              CBZ      r7,|L1.1222|
;;;293          GRAPH_DATA_Handle hDataObj;
;;;294          GRAPH_DATA_OBJ *  pDataObj;
;;;295          hDataObj = *(WM_HMEM *)phMem;
0004a4  f9b79000          LDRSH    r9,[r7,#0]
;;;296          pDataObj = (GRAPH_DATA_OBJ *)GUI_ALLOC_h2p(hDataObj);
0004a8  4648              MOV      r0,r9
0004aa  f7fffffe          BL       GUI_ALLOC_h2p
0004ae  4680              MOV      r8,r0
;;;297          if (pDataObj) {
0004b0  f1b80f00          CMP      r8,#0
0004b4  d003              BEQ      |L1.1214|
;;;298            pDataObj->PaintObj.pfOnDelete(hDataObj);
0004b6  4648              MOV      r0,r9
0004b8  f8d81004          LDR      r1,[r8,#4]
0004bc  4788              BLX      r1
                  |L1.1214|
;;;299          }
;;;300          GUI_ALLOC_Free(hDataObj);
0004be  4648              MOV      r0,r9
0004c0  f7fffffe          BL       GUI_ALLOC_Free
;;;301        }
0004c4  bf00              NOP      
                  |L1.1222|
0004c6  1c6d              ADDS     r5,r5,#1              ;287
                  |L1.1224|
0004c8  42b5              CMP      r5,r6                 ;287
0004ca  dbe0              BLT      |L1.1166|
;;;302      }
;;;303      NumItems = pObj->ScaleArray.NumItems;
0004cc  f8b4605c          LDRH     r6,[r4,#0x5c]
;;;304      for (i = 0; i < NumItems; i++) {
0004d0  2500              MOVS     r5,#0
0004d2  e011              B        |L1.1272|
                  |L1.1236|
;;;305        WM_HMEM hMem;
;;;306        WM_HMEM * phMem;
;;;307        hMem  = GUI_ARRAY_GethItem(&pObj->ScaleArray, i); /* Handle of array item */
0004d4  4629              MOV      r1,r5
0004d6  f104005c          ADD      r0,r4,#0x5c
0004da  f7fffffe          BL       GUI_ARRAY_GethItem
0004de  4681              MOV      r9,r0
;;;308        phMem = (WM_HMEM *)GUI_ALLOC_h2p(hMem);                      /* Pointer to handle */
0004e0  4648              MOV      r0,r9
0004e2  f7fffffe          BL       GUI_ALLOC_h2p
0004e6  4607              MOV      r7,r0
;;;309        if (phMem) {
0004e8  b12f              CBZ      r7,|L1.1270|
;;;310          GRAPH_SCALE_Handle hScaleObj;
;;;311          hScaleObj = *(WM_HMEM *)phMem;
0004ea  f9b78000          LDRSH    r8,[r7,#0]
;;;312          GUI_ALLOC_Free(hScaleObj);
0004ee  4640              MOV      r0,r8
0004f0  f7fffffe          BL       GUI_ALLOC_Free
;;;313        }
0004f4  bf00              NOP      
                  |L1.1270|
0004f6  1c6d              ADDS     r5,r5,#1              ;304
                  |L1.1272|
0004f8  42b5              CMP      r5,r6                 ;304
0004fa  dbeb              BLT      |L1.1236|
;;;314      }
;;;315      GUI_ARRAY_Delete(&pObj->GraphArray);
0004fc  f1040058          ADD      r0,r4,#0x58
000500  f7fffffe          BL       GUI_ARRAY_Delete
;;;316      GUI_ARRAY_Delete(&pObj->ScaleArray);
000504  f104005c          ADD      r0,r4,#0x5c
000508  f7fffffe          BL       GUI_ARRAY_Delete
;;;317    }
00050c  e8bd87f0          POP      {r4-r10,pc}
;;;318    
                          ENDP

                  _InvalidateGraph PROC
;;;322    */
;;;323    static void _InvalidateGraph(GRAPH_Handle hObj) {
000510  b530              PUSH     {r4,r5,lr}
000512  b089              SUB      sp,sp,#0x24
000514  4604              MOV      r4,r0
;;;324      unsigned BorderL, BorderT, BorderR, BorderB, EffectSize;
;;;325      GUI_RECT Rect;
;;;326      GRAPH_OBJ * pObj;
;;;327      pObj = GRAPH_H2P(hObj);
000516  4620              MOV      r0,r4
000518  f7fffffe          BL       GUI_ALLOC_h2p
00051c  4605              MOV      r5,r0
;;;328      _GetParams(pObj, &BorderL, &BorderT, &BorderR, &BorderB, &EffectSize);
00051e  a804              ADD      r0,sp,#0x10
000520  a905              ADD      r1,sp,#0x14
000522  ab06              ADD      r3,sp,#0x18
000524  aa07              ADD      r2,sp,#0x1c
000526  e9cd1000          STRD     r1,r0,[sp,#0]
00052a  a908              ADD      r1,sp,#0x20
00052c  4628              MOV      r0,r5
00052e  f7fffffe          BL       _GetParams
;;;329      WM_GetInsideRectExScrollbar(hObj, &Rect);
000532  a902              ADD      r1,sp,#8
000534  4620              MOV      r0,r4
000536  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;330      Rect.x0 += BorderL;
00053a  f8bd0008          LDRH     r0,[sp,#8]
00053e  9908              LDR      r1,[sp,#0x20]
000540  4408              ADD      r0,r0,r1
000542  b200              SXTH     r0,r0
000544  f8ad0008          STRH     r0,[sp,#8]
;;;331      Rect.y0 += BorderT;
000548  f8bd000a          LDRH     r0,[sp,#0xa]
00054c  9907              LDR      r1,[sp,#0x1c]
00054e  4408              ADD      r0,r0,r1
000550  b200              SXTH     r0,r0
000552  f8ad000a          STRH     r0,[sp,#0xa]
;;;332      Rect.x1 -= BorderR;
000556  f8bd000c          LDRH     r0,[sp,#0xc]
00055a  9906              LDR      r1,[sp,#0x18]
00055c  1a40              SUBS     r0,r0,r1
00055e  b200              SXTH     r0,r0
000560  f8ad000c          STRH     r0,[sp,#0xc]
;;;333      Rect.y1 -= BorderB;
000564  f8bd000e          LDRH     r0,[sp,#0xe]
000568  9905              LDR      r1,[sp,#0x14]
00056a  1a40              SUBS     r0,r0,r1
00056c  b200              SXTH     r0,r0
00056e  f8ad000e          STRH     r0,[sp,#0xe]
;;;334      WM_InvalidateRect(hObj, &Rect);
000572  a902              ADD      r1,sp,#8
000574  4620              MOV      r0,r4
000576  f7fffffe          BL       WM_InvalidateRect
;;;335    }
00057a  b009              ADD      sp,sp,#0x24
00057c  bd30              POP      {r4,r5,pc}
;;;336    
                          ENDP

                  _ManageScrollBars PROC
;;;340    */
;;;341    static void _ManageScrollBars(GRAPH_OBJ * pObj, GRAPH_Handle hObj) {
00057e  b5f0              PUSH     {r4-r7,lr}
000580  b089              SUB      sp,sp,#0x24
000582  4604              MOV      r4,r0
000584  460e              MOV      r6,r1
;;;342      int IsRequired, PageSize;
;;;343      GUI_RECT Rect;
;;;344      unsigned BorderL, BorderT, BorderR, BorderB, EffectSize;
;;;345      WM_GetInsideRectExScrollbar(hObj, &Rect);
000586  a907              ADD      r1,sp,#0x1c
000588  4630              MOV      r0,r6
00058a  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;346      _GetParams(pObj, &BorderL, &BorderT, &BorderR, &BorderB, &EffectSize);
00058e  a802              ADD      r0,sp,#8
000590  a903              ADD      r1,sp,#0xc
000592  ab04              ADD      r3,sp,#0x10
000594  aa05              ADD      r2,sp,#0x14
000596  e9cd1000          STRD     r1,r0,[sp,#0]
00059a  a906              ADD      r1,sp,#0x18
00059c  4620              MOV      r0,r4
00059e  f7fffffe          BL       _GetParams
;;;347      PageSize   = Rect.y1 - Rect.y0 - BorderT - BorderB;
0005a2  f9bd0022          LDRSH    r0,[sp,#0x22]
0005a6  f9bd101e          LDRSH    r1,[sp,#0x1e]
0005aa  1a40              SUBS     r0,r0,r1
0005ac  9905              LDR      r1,[sp,#0x14]
0005ae  1a40              SUBS     r0,r0,r1
0005b0  9903              LDR      r1,[sp,#0xc]
0005b2  1a45              SUBS     r5,r0,r1
;;;348      IsRequired = ((int)pObj->RangeY > PageSize) ? 1 : 0;
0005b4  6ea0              LDR      r0,[r4,#0x68]
0005b6  42a8              CMP      r0,r5
0005b8  dd01              BLE      |L1.1470|
0005ba  2001              MOVS     r0,#1
0005bc  e000              B        |L1.1472|
                  |L1.1470|
0005be  2000              MOVS     r0,#0
                  |L1.1472|
0005c0  4607              MOV      r7,r0
;;;349      WM_SetScrollbarV(hObj, IsRequired);
0005c2  4639              MOV      r1,r7
0005c4  4630              MOV      r0,r6
0005c6  f7fffffe          BL       WM_SetScrollbarV
;;;350      pObj->ScrollStateV.NumItems = pObj->RangeY;
0005ca  6ea0              LDR      r0,[r4,#0x68]
0005cc  6720              STR      r0,[r4,#0x70]
;;;351      pObj->ScrollStateV.PageSize = PageSize;
0005ce  67a5              STR      r5,[r4,#0x78]
;;;352      PageSize   = Rect.x1 - Rect.x0 - BorderL - BorderR;
0005d0  f9bd0020          LDRSH    r0,[sp,#0x20]
0005d4  f9bd101c          LDRSH    r1,[sp,#0x1c]
0005d8  1a40              SUBS     r0,r0,r1
0005da  9906              LDR      r1,[sp,#0x18]
0005dc  1a40              SUBS     r0,r0,r1
0005de  9904              LDR      r1,[sp,#0x10]
0005e0  1a45              SUBS     r5,r0,r1
;;;353      IsRequired = ((int)pObj->RangeX > PageSize) ? 1 : 0;
0005e2  6e60              LDR      r0,[r4,#0x64]
0005e4  42a8              CMP      r0,r5
0005e6  dd01              BLE      |L1.1516|
0005e8  2001              MOVS     r0,#1
0005ea  e000              B        |L1.1518|
                  |L1.1516|
0005ec  2000              MOVS     r0,#0
                  |L1.1518|
0005ee  4607              MOV      r7,r0
;;;354      WM_SetScrollbarH(hObj, IsRequired);
0005f0  4639              MOV      r1,r7
0005f2  4630              MOV      r0,r6
0005f4  f7fffffe          BL       WM_SetScrollbarH
;;;355      pObj->ScrollStateH.NumItems = pObj->RangeX;
0005f8  6e60              LDR      r0,[r4,#0x64]
0005fa  67e0              STR      r0,[r4,#0x7c]
;;;356      pObj->ScrollStateH.PageSize = PageSize;
0005fc  2084              MOVS     r0,#0x84
0005fe  5105              STR      r5,[r0,r4]
;;;357      WM_CheckScrollBounds(&pObj->ScrollStateV);
000600  f1040070          ADD      r0,r4,#0x70
000604  f7fffffe          BL       WM_CheckScrollBounds
;;;358      WM_CheckScrollBounds(&pObj->ScrollStateH);
000608  f104007c          ADD      r0,r4,#0x7c
00060c  f7fffffe          BL       WM_CheckScrollBounds
;;;359      WIDGET__SetScrollState(hObj, &pObj->ScrollStateV, &pObj->ScrollStateH);
000610  f104027c          ADD      r2,r4,#0x7c
000614  f1040170          ADD      r1,r4,#0x70
000618  4630              MOV      r0,r6
00061a  f7fffffe          BL       WIDGET__SetScrollState
;;;360    }
00061e  b009              ADD      sp,sp,#0x24
000620  bdf0              POP      {r4-r7,pc}
;;;361    
                          ENDP

                  _SetGridOffY PROC
;;;365    */
;;;366    static unsigned _SetGridOffY(GRAPH_OBJ * pObj, GRAPH_Handle hObj, unsigned Value) {
000622  e92d41f0          PUSH     {r4-r8,lr}
000626  4604              MOV      r4,r0
000628  460e              MOV      r6,r1
00062a  4615              MOV      r5,r2
;;;367      unsigned OldValue = 0;
00062c  2700              MOVS     r7,#0
;;;368      if (pObj) {
00062e  b13c              CBZ      r4,|L1.1600|
;;;369        OldValue = pObj->Props.GridOffY;
000630  6c67              LDR      r7,[r4,#0x44]
;;;370        if (pObj->Props.GridOffY != Value) {
000632  6c60              LDR      r0,[r4,#0x44]
000634  42a8              CMP      r0,r5
000636  d003              BEQ      |L1.1600|
;;;371          pObj->Props.GridOffY = Value;
000638  6465              STR      r5,[r4,#0x44]
;;;372          _InvalidateGraph(hObj);
00063a  4630              MOV      r0,r6
00063c  f7fffffe          BL       _InvalidateGraph
                  |L1.1600|
;;;373        }
;;;374      }
;;;375      return OldValue;
000640  4638              MOV      r0,r7
;;;376    }
000642  e8bd81f0          POP      {r4-r8,pc}
;;;377    
                          ENDP

                  _OnScrollValueChanged PROC
;;;381    */
;;;382    static void _OnScrollValueChanged(GRAPH_OBJ * pObj, GRAPH_Handle hObj, WM_HWIN hScroll) {
000646  e92d41f0          PUSH     {r4-r8,lr}
00064a  4604              MOV      r4,r0
00064c  460d              MOV      r5,r1
00064e  4616              MOV      r6,r2
;;;383      int Value, Id;
;;;384      Value = SCROLLBAR_GetValue(hScroll);
000650  4630              MOV      r0,r6
000652  f7fffffe          BL       SCROLLBAR_GetValue
000656  4607              MOV      r7,r0
;;;385      Id = WM_GetId(hScroll);
000658  4630              MOV      r0,r6
00065a  f7fffffe          BL       WM_GetId
00065e  4680              MOV      r8,r0
;;;386      if (Id == GUI_ID_VSCROLL) {
000660  f1b80ffe          CMP      r8,#0xfe
000664  d101              BNE      |L1.1642|
;;;387        pObj->ScrollStateV.v = Value;
000666  6767              STR      r7,[r4,#0x74]
000668  e001              B        |L1.1646|
                  |L1.1642|
;;;388      } else {
;;;389        pObj->ScrollStateH.v = Value;
00066a  2080              MOVS     r0,#0x80
00066c  5107              STR      r7,[r0,r4]
                  |L1.1646|
;;;390      }
;;;391      WM_InvalidateWindow(hObj);
00066e  4628              MOV      r0,r5
000670  f7fffffe          BL       WM_InvalidateWindow
;;;392    }
000674  e8bd81f0          POP      {r4-r8,pc}
;;;393    
                          ENDP

                  GRAPH__AddValue PROC
;;;426    */
;;;427    void GRAPH__AddValue(GRAPH_DATA_OBJ * pDataObj, void * pData, void * pValue, int Size) {
000678  e92d41f0          PUSH     {r4-r8,lr}
00067c  4604              MOV      r4,r0
00067e  460e              MOV      r6,r1
000680  4617              MOV      r7,r2
000682  461d              MOV      r5,r3
;;;428      if (pDataObj->PaintObj.hGraph) {
000684  8920              LDRH     r0,[r4,#8]
000686  b308              CBZ      r0,|L1.1740|
;;;429        if (pDataObj->NumItems == pDataObj->MaxNumItems) {
000688  e9d40103          LDRD     r0,r1,[r4,#0xc]
00068c  4288              CMP      r0,r1
00068e  d110              BNE      |L1.1714|
;;;430          memmove((U8 *)pData, (U8 *)pData + Size, Size * (pDataObj->MaxNumItems - 1));
000690  6920              LDR      r0,[r4,#0x10]
000692  1e40              SUBS     r0,r0,#1
000694  fb00f205          MUL      r2,r0,r5
000698  1971              ADDS     r1,r6,r5
00069a  4630              MOV      r0,r6
00069c  f7fffffe          BL       __aeabi_memmove
;;;431          memmove((U8 *)pData + Size * (pDataObj->NumItems - 1), pValue, Size);
0006a0  68e1              LDR      r1,[r4,#0xc]
0006a2  1e49              SUBS     r1,r1,#1
0006a4  fb056001          MLA      r0,r5,r1,r6
0006a8  462a              MOV      r2,r5
0006aa  4639              MOV      r1,r7
0006ac  f7fffffe          BL       __aeabi_memmove
0006b0  e008              B        |L1.1732|
                  |L1.1714|
;;;432        } else {
;;;433          memmove((U8 *)pData + Size * pDataObj->NumItems++, pValue, Size);
0006b2  68e2              LDR      r2,[r4,#0xc]
0006b4  1c51              ADDS     r1,r2,#1
0006b6  fb056002          MLA      r0,r5,r2,r6
0006ba  462a              MOV      r2,r5
0006bc  60e1              STR      r1,[r4,#0xc]
0006be  4639              MOV      r1,r7
0006c0  f7fffffe          BL       __aeabi_memmove
                  |L1.1732|
;;;434        }
;;;435        _InvalidateGraph(pDataObj->PaintObj.hGraph);
0006c4  f9b40008          LDRSH    r0,[r4,#8]
0006c8  f7fffffe          BL       _InvalidateGraph
                  |L1.1740|
;;;436      }
;;;437    }
0006cc  e8bd81f0          POP      {r4-r8,pc}
;;;438    
                          ENDP

                  GRAPH_Callback PROC
;;;448    */
;;;449    void GRAPH_Callback (WM_MESSAGE * pMsg) {
0006d0  e92d41f0          PUSH     {r4-r8,lr}
0006d4  4604              MOV      r4,r0
;;;450      int Result, ManageScrollBars = 0;
0006d6  2700              MOVS     r7,#0
;;;451      GRAPH_Handle hObj;
;;;452      GRAPH_OBJ  * pObj;
;;;453      hObj = pMsg->hWin;
0006d8  f9b46004          LDRSH    r6,[r4,#4]
;;;454      pObj = (GRAPH_OBJ *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
0006dc  4630              MOV      r0,r6
0006de  f7fffffe          BL       GUI_ALLOC_h2p
0006e2  4680              MOV      r8,r0
;;;455      /* Let widget handle the standard messages */
;;;456      if (pMsg->MsgId == WM_WIDGET_SET_EFFECT) {
0006e4  6820              LDR      r0,[r4,#0]
0006e6  f5b07f40          CMP      r0,#0x300
0006ea  d100              BNE      |L1.1774|
;;;457        ManageScrollBars = 1;
0006ec  2701              MOVS     r7,#1
                  |L1.1774|
;;;458      }
;;;459      Result = WIDGET_HandleActive(hObj, pMsg);
0006ee  4621              MOV      r1,r4
0006f0  4630              MOV      r0,r6
0006f2  f7fffffe          BL       WIDGET_HandleActive
0006f6  4605              MOV      r5,r0
;;;460      if (ManageScrollBars) {
0006f8  b11f              CBZ      r7,|L1.1794|
;;;461        _ManageScrollBars(pObj, hObj);
0006fa  4631              MOV      r1,r6
0006fc  4640              MOV      r0,r8
0006fe  f7fffffe          BL       _ManageScrollBars
                  |L1.1794|
;;;462      }
;;;463      if (!Result) {
000702  b90d              CBNZ     r5,|L1.1800|
                  |L1.1796|
;;;464        return;
;;;465      }
;;;466      switch (pMsg->MsgId) {
;;;467      case WM_SIZE:
;;;468        _ManageScrollBars(pObj, hObj);
;;;469        break;
;;;470      case WM_PAINT:
;;;471        _OnPaint(pObj, hObj, (GUI_RECT *)pMsg->Data.p);
;;;472        return;
;;;473      case WM_DELETE:
;;;474        _OnDelete(pObj);
;;;475        return;
;;;476      case WM_NOTIFY_PARENT:
;;;477        switch (pMsg->Data.v) {
;;;478        case WM_NOTIFICATION_VALUE_CHANGED:
;;;479          if (pMsg->hWinSrc  == WM_GetScrollbarV(hObj)) {
;;;480            _OnScrollValueChanged(pObj, pMsg->hWin, pMsg->hWinSrc);
;;;481          } else if (pMsg->hWinSrc == WM_GetScrollbarH(hObj)) {
;;;482            _OnScrollValueChanged(pObj, pMsg->hWin, pMsg->hWinSrc);
;;;483          }
;;;484          break;
;;;485        case WM_NOTIFICATION_SCROLLBAR_ADDED:
;;;486          #if WIDGET_USE_PARENT_EFFECT
;;;487            WIDGET_SetEffect(pMsg->hWinSrc, pObj->Widget.pEffect);
;;;488          #endif
;;;489          break;
;;;490        }
;;;491      }
;;;492      WM_DefaultProc(pMsg);
;;;493    }
000704  e8bd81f0          POP      {r4-r8,pc}
                  |L1.1800|
000708  6820              LDR      r0,[r4,#0]            ;466
00070a  2805              CMP      r0,#5                 ;466
00070c  d006              BEQ      |L1.1820|
00070e  280b              CMP      r0,#0xb               ;466
000710  d00f              BEQ      |L1.1842|
000712  280f              CMP      r0,#0xf               ;466
000714  d007              BEQ      |L1.1830|
000716  2826              CMP      r0,#0x26              ;466
000718  d136              BNE      |L1.1928|
00071a  e00e              B        |L1.1850|
                  |L1.1820|
00071c  4631              MOV      r1,r6                 ;468
00071e  4640              MOV      r0,r8                 ;468
000720  f7fffffe          BL       _ManageScrollBars
000724  e030              B        |L1.1928|
                  |L1.1830|
000726  4631              MOV      r1,r6                 ;471
000728  4640              MOV      r0,r8                 ;471
00072a  68a2              LDR      r2,[r4,#8]            ;471
00072c  f7fffffe          BL       _OnPaint
000730  e7e8              B        |L1.1796|
                  |L1.1842|
000732  4640              MOV      r0,r8                 ;474
000734  f7fffffe          BL       _OnDelete
000738  e7e4              B        |L1.1796|
                  |L1.1850|
00073a  68a0              LDR      r0,[r4,#8]            ;477
00073c  2805              CMP      r0,#5                 ;477
00073e  d002              BEQ      |L1.1862|
000740  2806              CMP      r0,#6                 ;477
000742  d11f              BNE      |L1.1924|
000744  e01d              B        |L1.1922|
                  |L1.1862|
000746  4630              MOV      r0,r6                 ;479
000748  f7fffffe          BL       WM_GetScrollbarV
00074c  f9b41006          LDRSH    r1,[r4,#6]            ;479
000750  4288              CMP      r0,r1                 ;479
000752  d107              BNE      |L1.1892|
000754  f9b42006          LDRSH    r2,[r4,#6]            ;480
000758  f9b41004          LDRSH    r1,[r4,#4]            ;480
00075c  4640              MOV      r0,r8                 ;480
00075e  f7fffffe          BL       _OnScrollValueChanged
000762  e00d              B        |L1.1920|
                  |L1.1892|
000764  4630              MOV      r0,r6                 ;481
000766  f7fffffe          BL       WM_GetScrollbarH
00076a  f9b41006          LDRSH    r1,[r4,#6]            ;481
00076e  4288              CMP      r0,r1                 ;481
000770  d106              BNE      |L1.1920|
000772  f9b42006          LDRSH    r2,[r4,#6]            ;482
000776  f9b41004          LDRSH    r1,[r4,#4]            ;482
00077a  4640              MOV      r0,r8                 ;482
00077c  f7fffffe          BL       _OnScrollValueChanged
                  |L1.1920|
000780  e000              B        |L1.1924|
                  |L1.1922|
000782  bf00              NOP                            ;489
                  |L1.1924|
000784  bf00              NOP                            ;484
000786  bf00              NOP                            ;466
                  |L1.1928|
000788  bf00              NOP                            ;469
00078a  4620              MOV      r0,r4                 ;492
00078c  f7fffffe          BL       WM_DefaultProc
000790  bf00              NOP      
000792  e7b7              B        |L1.1796|
;;;494    
                          ENDP

                  GRAPH_CreateEx PROC
;;;504    */
;;;505    GRAPH_Handle GRAPH_CreateEx(int x0, int y0, int xsize, int ysize, WM_HWIN hParent,
000794  e92d4fff          PUSH     {r0-r11,lr}
;;;506                                int WinFlags, int ExFlags, int Id)
;;;507    {
000798  b085              SUB      sp,sp,#0x14
00079a  4606              MOV      r6,r0
00079c  460f              MOV      r7,r1
00079e  4690              MOV      r8,r2
0007a0  e9ddab13          LDRD     r10,r11,[sp,#0x4c]
0007a4  f8dd9048          LDR      r9,[sp,#0x48]
;;;508      GRAPH_Handle hObj;
;;;509      WM_LOCK();
;;;510      hObj = WM_CreateWindowAsChild(x0, y0, xsize, ysize, hParent, WinFlags, GRAPH_Callback,
0007a8  216c              MOVS     r1,#0x6c
0007aa  f2af02db          ADR      r2,GRAPH_Callback + 1
0007ae  fa1ff08a          UXTH     r0,r10
0007b2  e9cd9000          STRD     r9,r0,[sp,#0]
0007b6  e9cd2102          STRD     r2,r1,[sp,#8]
0007ba  4642              MOV      r2,r8
0007bc  4639              MOV      r1,r7
0007be  4630              MOV      r0,r6
0007c0  9b08              LDR      r3,[sp,#0x20]
0007c2  f7fffffe          BL       WM_CreateWindowAsChild
0007c6  4605              MOV      r5,r0
;;;511                                    sizeof(GRAPH_OBJ) - sizeof(WM_Obj));
;;;512      if (hObj) {
0007c8  b18d              CBZ      r5,|L1.2030|
;;;513        GRAPH_OBJ * pObj;
;;;514        pObj = (GRAPH_OBJ *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
0007ca  4628              MOV      r0,r5
0007cc  f7fffffe          BL       GUI_ALLOC_h2p
0007d0  4604              MOV      r4,r0
;;;515        /* Init sub-classes */
;;;516        GUI_ARRAY_CREATE(&pObj->GraphArray);
;;;517        GUI_ARRAY_CREATE(&pObj->ScaleArray);
;;;518        /* Init widget specific variables */
;;;519        WIDGET__Init(&pObj->Widget, Id, 0);
0007d2  2200              MOVS     r2,#0
0007d4  4620              MOV      r0,r4
0007d6  9915              LDR      r1,[sp,#0x54]
0007d8  f7fffffe          BL       WIDGET__Init
;;;520        /* Init member variables */
;;;521        GRAPH_INIT_ID(pObj);
;;;522        pObj->Props = GRAPH__DefaultProps;
0007dc  2230              MOVS     r2,#0x30
0007de  49c1              LDR      r1,|L1.2788|
0007e0  f1040028          ADD      r0,r4,#0x28
0007e4  f7fffffe          BL       __aeabi_memcpy4
;;;523        pObj->Flags = ExFlags;
0007e8  f8a4b06c          STRH     r11,[r4,#0x6c]
;;;524      }
0007ec  bf00              NOP      
                  |L1.2030|
;;;525      WM_UNLOCK();
;;;526      return hObj;
0007ee  4628              MOV      r0,r5
;;;527    }
0007f0  b009              ADD      sp,sp,#0x24
0007f2  e8bd8ff0          POP      {r4-r11,pc}
;;;528    
                          ENDP

                  GRAPH_AttachData PROC
;;;532    */
;;;533    void GRAPH_AttachData(GRAPH_Handle hObj, GRAPH_DATA_Handle hData) {
0007f6  b573              PUSH     {r0,r1,r4-r6,lr}
0007f8  4604              MOV      r4,r0
;;;534      if (hObj) {
0007fa  b19c              CBZ      r4,|L1.2084|
;;;535        GRAPH_OBJ * pObj;
;;;536        GRAPH_DATA_OBJ * pDataObj;
;;;537        WM_LOCK();
;;;538        pObj = GRAPH_H2P(hObj);
0007fc  4620              MOV      r0,r4
0007fe  f7fffffe          BL       GUI_ALLOC_h2p
000802  4606              MOV      r6,r0
;;;539        pDataObj = (GRAPH_DATA_OBJ *)GUI_ALLOC_h2p(hData);
000804  f9bd0004          LDRSH    r0,[sp,#4]
000808  f7fffffe          BL       GUI_ALLOC_h2p
00080c  4605              MOV      r5,r0
;;;540        pDataObj->PaintObj.hGraph = hObj;
00080e  812c              STRH     r4,[r5,#8]
;;;541        GUI_ARRAY_AddItem(&pObj->GraphArray, &hData, sizeof(GRAPH_DATA_Handle));
000810  2202              MOVS     r2,#2
000812  a901              ADD      r1,sp,#4
000814  f1060058          ADD      r0,r6,#0x58
000818  f7fffffe          BL       GUI_ARRAY_AddItem
;;;542        WM_InvalidateWindow(hObj);
00081c  4620              MOV      r0,r4
00081e  f7fffffe          BL       WM_InvalidateWindow
;;;543        WM_UNLOCK();
;;;544      }
000822  bf00              NOP      
                  |L1.2084|
;;;545    }
000824  bd7c              POP      {r2-r6,pc}
;;;546    
                          ENDP

                  GRAPH_AttachScale PROC
;;;550    */
;;;551    void GRAPH_AttachScale(GRAPH_Handle hObj, GRAPH_SCALE_Handle hScale) {
000826  b573              PUSH     {r0,r1,r4-r6,lr}
000828  4604              MOV      r4,r0
;;;552      if (hObj) {
00082a  b19c              CBZ      r4,|L1.2132|
;;;553        GRAPH_OBJ * pObj;
;;;554        GRAPH_SCALE_OBJ * pScaleObj;
;;;555        WM_LOCK();
;;;556        pObj = GRAPH_H2P(hObj);
00082c  4620              MOV      r0,r4
00082e  f7fffffe          BL       GUI_ALLOC_h2p
000832  4606              MOV      r6,r0
;;;557        pScaleObj = (GRAPH_SCALE_OBJ *)GUI_ALLOC_h2p(hScale);
000834  f9bd0004          LDRSH    r0,[sp,#4]
000838  f7fffffe          BL       GUI_ALLOC_h2p
00083c  4605              MOV      r5,r0
;;;558        pScaleObj->PaintObj.hGraph = hObj;
00083e  812c              STRH     r4,[r5,#8]
;;;559        GUI_ARRAY_AddItem(&pObj->ScaleArray, &hScale, sizeof(GRAPH_SCALE_Handle));
000840  2202              MOVS     r2,#2
000842  a901              ADD      r1,sp,#4
000844  f106005c          ADD      r0,r6,#0x5c
000848  f7fffffe          BL       GUI_ARRAY_AddItem
;;;560        WM_InvalidateWindow(hObj);
00084c  4620              MOV      r0,r4
00084e  f7fffffe          BL       WM_InvalidateWindow
;;;561        WM_UNLOCK();
;;;562      }
000852  bf00              NOP      
                  |L1.2132|
;;;563    }
000854  bd7c              POP      {r2-r6,pc}
;;;564    
                          ENDP

                  GRAPH_SetColor PROC
;;;568    */
;;;569    GUI_COLOR GRAPH_SetColor(GRAPH_Handle hObj, GUI_COLOR Color, unsigned Index) {
000856  e92d41f0          PUSH     {r4-r8,lr}
00085a  4607              MOV      r7,r0
00085c  460d              MOV      r5,r1
00085e  4614              MOV      r4,r2
;;;570      GUI_COLOR OldColor = 0;
000860  f04f0800          MOV      r8,#0
;;;571      if (hObj) {
000864  b1af              CBZ      r7,|L1.2194|
;;;572        GRAPH_OBJ * pObj;
;;;573        WM_LOCK();
;;;574        pObj = GRAPH_H2P(hObj);
000866  4638              MOV      r0,r7
000868  f7fffffe          BL       GUI_ALLOC_h2p
00086c  4606              MOV      r6,r0
;;;575        if (Index < GUI_COUNTOF(pObj->Props.aColor)) {
00086e  2c04              CMP      r4,#4
000870  d20e              BCS      |L1.2192|
;;;576          OldColor = pObj->Props.aColor[Index];
000872  f1060028          ADD      r0,r6,#0x28
000876  f8508024          LDR      r8,[r0,r4,LSL #2]
;;;577          if (pObj->Props.aColor[Index] != Color) {
00087a  f8500024          LDR      r0,[r0,r4,LSL #2]
00087e  42a8              CMP      r0,r5
000880  d006              BEQ      |L1.2192|
;;;578            pObj->Props.aColor[Index] = Color;
000882  f1060028          ADD      r0,r6,#0x28
000886  f8405024          STR      r5,[r0,r4,LSL #2]
;;;579            WM_InvalidateWindow(hObj);
00088a  4638              MOV      r0,r7
00088c  f7fffffe          BL       WM_InvalidateWindow
                  |L1.2192|
;;;580          }
;;;581        }
;;;582        WM_UNLOCK();
;;;583      }
000890  bf00              NOP      
                  |L1.2194|
;;;584      return OldColor;
000892  4640              MOV      r0,r8
;;;585    }
000894  e8bd81f0          POP      {r4-r8,pc}
;;;586    
                          ENDP

                  GRAPH_SetGridVis PROC
;;;590    */
;;;591    unsigned GRAPH_SetGridVis(GRAPH_Handle hObj, unsigned OnOff) {
000898  e92d41f0          PUSH     {r4-r8,lr}
00089c  4606              MOV      r6,r0
00089e  460c              MOV      r4,r1
;;;592      unsigned OldValue = 0;
0008a0  2700              MOVS     r7,#0
;;;593      if (hObj) {
0008a2  b19e              CBZ      r6,|L1.2252|
;;;594        GRAPH_OBJ * pObj;
;;;595        WM_LOCK();
;;;596        pObj = GRAPH_H2P(hObj);
0008a4  4630              MOV      r0,r6
0008a6  f7fffffe          BL       GUI_ALLOC_h2p
0008aa  4605              MOV      r5,r0
;;;597        OldValue = pObj->ShowGrid;
0008ac  f8957060          LDRB     r7,[r5,#0x60]
;;;598        if ((unsigned)pObj->ShowGrid != OnOff) {
0008b0  f8950060          LDRB     r0,[r5,#0x60]
0008b4  42a0              CMP      r0,r4
0008b6  d008              BEQ      |L1.2250|
;;;599          pObj->ShowGrid = OnOff ? 1 : 0;
0008b8  b10c              CBZ      r4,|L1.2238|
0008ba  2001              MOVS     r0,#1
0008bc  e000              B        |L1.2240|
                  |L1.2238|
0008be  2000              MOVS     r0,#0
                  |L1.2240|
0008c0  f8850060          STRB     r0,[r5,#0x60]
;;;600          WM_InvalidateWindow(hObj);
0008c4  4630              MOV      r0,r6
0008c6  f7fffffe          BL       WM_InvalidateWindow
                  |L1.2250|
;;;601        }
;;;602        WM_UNLOCK();
;;;603      }
0008ca  bf00              NOP      
                  |L1.2252|
;;;604      return OldValue;
0008cc  4638              MOV      r0,r7
;;;605    }
0008ce  e8bd81f0          POP      {r4-r8,pc}
;;;606    
                          ENDP

                  GRAPH_SetGridDistX PROC
;;;610    */
;;;611    unsigned GRAPH_SetGridDistX(GRAPH_Handle hObj, unsigned Value) {
0008d2  e92d41f0          PUSH     {r4-r8,lr}
0008d6  4606              MOV      r6,r0
0008d8  460c              MOV      r4,r1
;;;612      unsigned OldValue = 0;
0008da  2700              MOVS     r7,#0
;;;613      if (hObj) {
0008dc  b166              CBZ      r6,|L1.2296|
;;;614        GRAPH_OBJ * pObj;
;;;615        WM_LOCK();
;;;616        pObj = GRAPH_H2P(hObj);
0008de  4630              MOV      r0,r6
0008e0  f7fffffe          BL       GUI_ALLOC_h2p
0008e4  4605              MOV      r5,r0
;;;617        OldValue = pObj->Props.GridSpacingX;
0008e6  6baf              LDR      r7,[r5,#0x38]
;;;618        if (pObj->Props.GridSpacingX != Value) {
0008e8  6ba8              LDR      r0,[r5,#0x38]
0008ea  42a0              CMP      r0,r4
0008ec  d003              BEQ      |L1.2294|
;;;619          pObj->Props.GridSpacingX = Value;
0008ee  63ac              STR      r4,[r5,#0x38]
;;;620          WM_InvalidateWindow(hObj);
0008f0  4630              MOV      r0,r6
0008f2  f7fffffe          BL       WM_InvalidateWindow
                  |L1.2294|
;;;621        }
;;;622        WM_UNLOCK();
;;;623      }
0008f6  bf00              NOP      
                  |L1.2296|
;;;624      return OldValue;
0008f8  4638              MOV      r0,r7
;;;625    }
0008fa  e8bd81f0          POP      {r4-r8,pc}
;;;626    
                          ENDP

                  GRAPH_SetGridDistY PROC
;;;630    */
;;;631    unsigned GRAPH_SetGridDistY(GRAPH_Handle hObj, unsigned Value) {
0008fe  e92d41f0          PUSH     {r4-r8,lr}
000902  4606              MOV      r6,r0
000904  460c              MOV      r4,r1
;;;632      unsigned OldValue = 0;
000906  2700              MOVS     r7,#0
;;;633      if (hObj) {
000908  b166              CBZ      r6,|L1.2340|
;;;634        GRAPH_OBJ * pObj;
;;;635        WM_LOCK();
;;;636        pObj = GRAPH_H2P(hObj);
00090a  4630              MOV      r0,r6
00090c  f7fffffe          BL       GUI_ALLOC_h2p
000910  4605              MOV      r5,r0
;;;637        OldValue = pObj->Props.GridSpacingY;
000912  6bef              LDR      r7,[r5,#0x3c]
;;;638        if (pObj->Props.GridSpacingY != Value) {
000914  6be8              LDR      r0,[r5,#0x3c]
000916  42a0              CMP      r0,r4
000918  d003              BEQ      |L1.2338|
;;;639          pObj->Props.GridSpacingY = Value;
00091a  63ec              STR      r4,[r5,#0x3c]
;;;640          WM_InvalidateWindow(hObj);
00091c  4630              MOV      r0,r6
00091e  f7fffffe          BL       WM_InvalidateWindow
                  |L1.2338|
;;;641        }
;;;642        WM_UNLOCK();
;;;643      }
000922  bf00              NOP      
                  |L1.2340|
;;;644      return OldValue;
000924  4638              MOV      r0,r7
;;;645    }
000926  e8bd81f0          POP      {r4-r8,pc}
;;;646    
                          ENDP

                  GRAPH_SetGridOffY PROC
;;;650    */
;;;651    unsigned GRAPH_SetGridOffY(GRAPH_Handle hObj, unsigned Value) {
00092a  e92d41f0          PUSH     {r4-r8,lr}
00092e  4604              MOV      r4,r0
000930  460d              MOV      r5,r1
;;;652      unsigned OldValue = 0;
000932  2600              MOVS     r6,#0
;;;653      if (hObj) {
000934  b144              CBZ      r4,|L1.2376|
;;;654        WM_LOCK();
;;;655        OldValue = _SetGridOffY(GRAPH_H2P(hObj), hObj, Value);
000936  4620              MOV      r0,r4
000938  f7fffffe          BL       GUI_ALLOC_h2p
00093c  4607              MOV      r7,r0
00093e  462a              MOV      r2,r5
000940  4621              MOV      r1,r4
000942  f7fffffe          BL       _SetGridOffY
000946  4606              MOV      r6,r0
                  |L1.2376|
;;;656        WM_UNLOCK();
;;;657      }
;;;658      return OldValue;
000948  4630              MOV      r0,r6
;;;659    }
00094a  e8bd81f0          POP      {r4-r8,pc}
;;;660    
                          ENDP

                  GRAPH_SetBorder PROC
;;;664    */
;;;665    void GRAPH_SetBorder(GRAPH_Handle hObj, unsigned BorderL, unsigned BorderT, unsigned BorderR, unsigned BorderB) {
00094e  e92d47f0          PUSH     {r4-r10,lr}
000952  4605              MOV      r5,r0
000954  460e              MOV      r6,r1
000956  4617              MOV      r7,r2
000958  4698              MOV      r8,r3
00095a  f8dd9020          LDR      r9,[sp,#0x20]
;;;666      if (hObj) {
00095e  b18d              CBZ      r5,|L1.2436|
;;;667        GRAPH_OBJ * pObj;
;;;668        WM_LOCK();
;;;669        pObj = GRAPH_H2P(hObj);
000960  4628              MOV      r0,r5
000962  f7fffffe          BL       GUI_ALLOC_h2p
000966  4604              MOV      r4,r0
;;;670        pObj->Props.BorderL = BorderL;
000968  64a6              STR      r6,[r4,#0x48]
;;;671        pObj->Props.BorderT = BorderT;
00096a  64e7              STR      r7,[r4,#0x4c]
;;;672        pObj->Props.BorderR = BorderR;
00096c  f8c48050          STR      r8,[r4,#0x50]
;;;673        pObj->Props.BorderB = BorderB;
000970  f8c49054          STR      r9,[r4,#0x54]
;;;674        _ManageScrollBars(pObj, hObj);
000974  4629              MOV      r1,r5
000976  4620              MOV      r0,r4
000978  f7fffffe          BL       _ManageScrollBars
;;;675        WM_InvalidateWindow(hObj);
00097c  4628              MOV      r0,r5
00097e  f7fffffe          BL       WM_InvalidateWindow
;;;676        WM_UNLOCK();
;;;677      }
000982  bf00              NOP      
                  |L1.2436|
;;;678    }
000984  e8bd87f0          POP      {r4-r10,pc}
;;;679    
                          ENDP

                  GRAPH_SetUserDraw PROC
;;;683    */
;;;684    void GRAPH_SetUserDraw(GRAPH_Handle hObj, void (* pUserDraw)(WM_HWIN hObj, int Stage)) {
000988  b570              PUSH     {r4-r6,lr}
00098a  4604              MOV      r4,r0
00098c  460d              MOV      r5,r1
;;;685      if (hObj) {
00098e  b14c              CBZ      r4,|L1.2468|
;;;686        GRAPH_OBJ * pObj;
;;;687        WM_LOCK();
;;;688        pObj = GRAPH_H2P(hObj);
000990  4620              MOV      r0,r4
000992  f7fffffe          BL       GUI_ALLOC_h2p
000996  4606              MOV      r6,r0
;;;689        pObj->pUserDraw = pUserDraw;
000998  f8c65088          STR      r5,[r6,#0x88]
;;;690        WM_InvalidateWindow(hObj);
00099c  4620              MOV      r0,r4
00099e  f7fffffe          BL       WM_InvalidateWindow
;;;691        WM_UNLOCK();
;;;692      }
0009a2  bf00              NOP      
                  |L1.2468|
;;;693    }
0009a4  bd70              POP      {r4-r6,pc}
;;;694    
                          ENDP

                  GRAPH_SetVSizeX PROC
;;;698    */
;;;699    unsigned GRAPH_SetVSizeX(GRAPH_Handle hObj, unsigned Value) {
0009a6  e92d41f0          PUSH     {r4-r8,lr}
0009aa  4605              MOV      r5,r0
0009ac  460e              MOV      r6,r1
;;;700      unsigned OldValue = 0;
0009ae  2700              MOVS     r7,#0
;;;701      if (hObj) {
0009b0  b185              CBZ      r5,|L1.2516|
;;;702        GRAPH_OBJ * pObj;
;;;703        WM_LOCK();
;;;704        pObj = GRAPH_H2P(hObj);
0009b2  4628              MOV      r0,r5
0009b4  f7fffffe          BL       GUI_ALLOC_h2p
0009b8  4604              MOV      r4,r0
;;;705        OldValue = pObj->RangeX;
0009ba  6e67              LDR      r7,[r4,#0x64]
;;;706        if (pObj->RangeX != Value) {
0009bc  6e60              LDR      r0,[r4,#0x64]
0009be  42b0              CMP      r0,r6
0009c0  d007              BEQ      |L1.2514|
;;;707          pObj->RangeX = Value;
0009c2  6666              STR      r6,[r4,#0x64]
;;;708          _ManageScrollBars(pObj, hObj);
0009c4  4629              MOV      r1,r5
0009c6  4620              MOV      r0,r4
0009c8  f7fffffe          BL       _ManageScrollBars
;;;709          WM_InvalidateWindow(hObj);
0009cc  4628              MOV      r0,r5
0009ce  f7fffffe          BL       WM_InvalidateWindow
                  |L1.2514|
;;;710        }
;;;711        WM_UNLOCK();
;;;712      }
0009d2  bf00              NOP      
                  |L1.2516|
;;;713      return OldValue;
0009d4  4638              MOV      r0,r7
;;;714    }
0009d6  e8bd81f0          POP      {r4-r8,pc}
;;;715    
                          ENDP

                  GRAPH_SetVSizeY PROC
;;;719    */
;;;720    unsigned GRAPH_SetVSizeY(GRAPH_Handle hObj, unsigned Value) {
0009da  e92d41f0          PUSH     {r4-r8,lr}
0009de  4605              MOV      r5,r0
0009e0  460e              MOV      r6,r1
;;;721      unsigned OldValue = 0;
0009e2  2700              MOVS     r7,#0
;;;722      if (hObj) {
0009e4  b185              CBZ      r5,|L1.2568|
;;;723        GRAPH_OBJ * pObj;
;;;724        WM_LOCK();
;;;725        pObj = GRAPH_H2P(hObj);
0009e6  4628              MOV      r0,r5
0009e8  f7fffffe          BL       GUI_ALLOC_h2p
0009ec  4604              MOV      r4,r0
;;;726        OldValue = pObj->RangeY;
0009ee  6ea7              LDR      r7,[r4,#0x68]
;;;727        if (pObj->RangeY != Value) {
0009f0  6ea0              LDR      r0,[r4,#0x68]
0009f2  42b0              CMP      r0,r6
0009f4  d007              BEQ      |L1.2566|
;;;728          pObj->RangeY = Value;
0009f6  66a6              STR      r6,[r4,#0x68]
;;;729          _ManageScrollBars(pObj, hObj);
0009f8  4629              MOV      r1,r5
0009fa  4620              MOV      r0,r4
0009fc  f7fffffe          BL       _ManageScrollBars
;;;730          WM_InvalidateWindow(hObj);
000a00  4628              MOV      r0,r5
000a02  f7fffffe          BL       WM_InvalidateWindow
                  |L1.2566|
;;;731        }
;;;732        WM_UNLOCK();
;;;733      }
000a06  bf00              NOP      
                  |L1.2568|
;;;734      return OldValue;
000a08  4638              MOV      r0,r7
;;;735    }
000a0a  e8bd81f0          POP      {r4-r8,pc}
;;;736    
                          ENDP

                  GRAPH_SetGridFixedX PROC
;;;740    */
;;;741    unsigned GRAPH_SetGridFixedX(GRAPH_Handle hObj, unsigned OnOff) {
000a0e  e92d41f0          PUSH     {r4-r8,lr}
000a12  4607              MOV      r7,r0
000a14  460d              MOV      r5,r1
;;;742      unsigned OldValue = 0;
000a16  2600              MOVS     r6,#0
;;;743      if (hObj) {
000a18  b33f              CBZ      r7,|L1.2666|
;;;744        GRAPH_OBJ * pObj;
;;;745        WM_LOCK();
;;;746        pObj = GRAPH_H2P(hObj);
000a1a  4638              MOV      r0,r7
000a1c  f7fffffe          BL       GUI_ALLOC_h2p
000a20  4604              MOV      r4,r0
;;;747        OldValue = (pObj->Flags & GRAPH_CF_GRID_FIXED_X) ? 1 : 0;
000a22  f894006c          LDRB     r0,[r4,#0x6c]
000a26  f0000601          AND      r6,r0,#1
;;;748        if (OldValue & !OnOff) {
000a2a  b90d              CBNZ     r5,|L1.2608|
000a2c  2001              MOVS     r0,#1
000a2e  e000              B        |L1.2610|
                  |L1.2608|
000a30  2000              MOVS     r0,#0
                  |L1.2610|
000a32  4030              ANDS     r0,r0,r6
000a34  b148              CBZ      r0,|L1.2634|
;;;749          pObj->Flags &= ~GRAPH_CF_GRID_FIXED_X;
000a36  f8b4006c          LDRH     r0,[r4,#0x6c]
000a3a  f0200001          BIC      r0,r0,#1
000a3e  f8a4006c          STRH     r0,[r4,#0x6c]
;;;750          WM_InvalidateWindow(hObj);
000a42  4638              MOV      r0,r7
000a44  f7fffffe          BL       WM_InvalidateWindow
000a48  e00e              B        |L1.2664|
                  |L1.2634|
;;;751        } else if (!OldValue & OnOff) {
000a4a  b90e              CBNZ     r6,|L1.2640|
000a4c  2001              MOVS     r0,#1
000a4e  e000              B        |L1.2642|
                  |L1.2640|
000a50  2000              MOVS     r0,#0
                  |L1.2642|
000a52  4028              ANDS     r0,r0,r5
000a54  b140              CBZ      r0,|L1.2664|
;;;752          pObj->Flags |= GRAPH_CF_GRID_FIXED_X;
000a56  f8b4006c          LDRH     r0,[r4,#0x6c]
000a5a  f0400001          ORR      r0,r0,#1
000a5e  f8a4006c          STRH     r0,[r4,#0x6c]
;;;753          WM_InvalidateWindow(hObj);
000a62  4638              MOV      r0,r7
000a64  f7fffffe          BL       WM_InvalidateWindow
                  |L1.2664|
;;;754        }
;;;755        WM_UNLOCK();
;;;756      }
000a68  bf00              NOP      
                  |L1.2666|
;;;757      return OldValue;
000a6a  4630              MOV      r0,r6
;;;758    }
000a6c  e8bd81f0          POP      {r4-r8,pc}
;;;759    
                          ENDP

                  GRAPH_SetLineStyleH PROC
;;;763    */
;;;764    U8 GRAPH_SetLineStyleH(GRAPH_Handle hObj, U8 Value) {
000a70  e92d41f0          PUSH     {r4-r8,lr}
000a74  4605              MOV      r5,r0
000a76  460c              MOV      r4,r1
;;;765      U8 OldValue = 0;
000a78  2600              MOVS     r6,#0
;;;766      if (hObj) {
000a7a  b16d              CBZ      r5,|L1.2712|
;;;767        GRAPH_OBJ * pObj;
;;;768        WM_LOCK();
;;;769        pObj = GRAPH_H2P(hObj);
000a7c  4628              MOV      r0,r5
000a7e  f7fffffe          BL       GUI_ALLOC_h2p
000a82  4607              MOV      r7,r0
;;;770        OldValue = pObj->LineStyleH;
000a84  f897606f          LDRB     r6,[r7,#0x6f]
;;;771        if (OldValue != Value) {
000a88  42a6              CMP      r6,r4
000a8a  d004              BEQ      |L1.2710|
;;;772          pObj->LineStyleH = Value;
000a8c  f887406f          STRB     r4,[r7,#0x6f]
;;;773          WM_InvalidateWindow(hObj);
000a90  4628              MOV      r0,r5
000a92  f7fffffe          BL       WM_InvalidateWindow
                  |L1.2710|
;;;774        }
;;;775        WM_UNLOCK();
;;;776      }
000a96  bf00              NOP      
                  |L1.2712|
;;;777      return OldValue;
000a98  4630              MOV      r0,r6
;;;778    }
000a9a  e8bd81f0          POP      {r4-r8,pc}
;;;779    
                          ENDP

                  GRAPH_SetLineStyleV PROC
;;;783    */
;;;784    U8 GRAPH_SetLineStyleV(GRAPH_Handle hObj, U8 Value) {
000a9e  e92d41f0          PUSH     {r4-r8,lr}
000aa2  4605              MOV      r5,r0
000aa4  460c              MOV      r4,r1
;;;785      U8 OldValue = 0;
000aa6  2600              MOVS     r6,#0
;;;786      if (hObj) {
000aa8  b16d              CBZ      r5,|L1.2758|
;;;787        GRAPH_OBJ * pObj;
;;;788        WM_LOCK();
;;;789        pObj = GRAPH_H2P(hObj);
000aaa  4628              MOV      r0,r5
000aac  f7fffffe          BL       GUI_ALLOC_h2p
000ab0  4607              MOV      r7,r0
;;;790        OldValue = pObj->LineStyleV;
000ab2  f897606e          LDRB     r6,[r7,#0x6e]
;;;791        if (OldValue != Value) {
000ab6  42a6              CMP      r6,r4
000ab8  d004              BEQ      |L1.2756|
;;;792          pObj->LineStyleV = Value;
000aba  f887406e          STRB     r4,[r7,#0x6e]
;;;793          WM_InvalidateWindow(hObj);
000abe  4628              MOV      r0,r5
000ac0  f7fffffe          BL       WM_InvalidateWindow
                  |L1.2756|
;;;794        }
;;;795        WM_UNLOCK();
;;;796      }
000ac4  bf00              NOP      
                  |L1.2758|
;;;797      return OldValue;
000ac6  4630              MOV      r0,r6
;;;798    }
000ac8  e8bd81f0          POP      {r4-r8,pc}
;;;799    
                          ENDP

                  GRAPH_SetLineStyle PROC
;;;803    */
;;;804    void GRAPH_SetLineStyle(GRAPH_Handle hObj, U8 Value) {
000acc  b570              PUSH     {r4-r6,lr}
000ace  4604              MOV      r4,r0
000ad0  460d              MOV      r5,r1
;;;805      GRAPH_SetLineStyleV(hObj, Value);
000ad2  4629              MOV      r1,r5
000ad4  4620              MOV      r0,r4
000ad6  f7fffffe          BL       GRAPH_SetLineStyleV
;;;806      GRAPH_SetLineStyleH(hObj, Value);
000ada  4629              MOV      r1,r5
000adc  4620              MOV      r0,r4
000ade  f7fffffe          BL       GRAPH_SetLineStyleH
;;;807    }
000ae2  bd70              POP      {r4-r6,pc}
;;;808    
                          ENDP

                  |L1.2788|
                          DCD      GRAPH__DefaultProps

                          AREA ||.data||, DATA, ALIGN=2

                  GRAPH__DefaultProps
                          DCD      0x00000000
                          DCD      0x00c0c0c0
                          DCD      0x00ffffff
                          DCD      0x00404040
                          DCD      0x00000032
                          DCD      0x00000032
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000

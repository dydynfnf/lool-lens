; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\wm_stayontop.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\wm_stayontop.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -IC:\Users\Administrator\Desktop\gui\STM32·Ü¶·°å-3.98\RTE -Id:\Keil_v5\ARM\PACK\ARM\CMSIS\4.3.0\CMSIS\Include -Id:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.1.0\Device\Include -D__UVISION_VERSION=515 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\wm_stayontop.crf GUI\WM\WM_StayOnTop.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  WM_SetStayOnTop PROC
;;;34     */
;;;35     void WM_SetStayOnTop(WM_HWIN hWin, int OnOff) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4605              MOV      r5,r0
000006  460e              MOV      r6,r1
;;;36       WM_Obj * pWin;
;;;37       if (hWin) {
000008  b315              CBZ      r5,|L1.80|
;;;38         U16 OldStatus;
;;;39         WM_LOCK();
;;;40         pWin = WM_H2P(hWin);
00000a  4628              MOV      r0,r5
00000c  f7fffffe          BL       GUI_ALLOC_h2p
000010  4604              MOV      r4,r0
;;;41         OldStatus = pWin->Status;
000012  8ba7              LDRH     r7,[r4,#0x1c]
;;;42         if (OnOff) {
000014  b146              CBZ      r6,|L1.40|
;;;43           if ((pWin->Status & WM_SF_STAYONTOP) == 0) {  /* First check if this is necessary at all */
000016  7f20              LDRB     r0,[r4,#0x1c]
000018  f0000008          AND      r0,r0,#8
00001c  b960              CBNZ     r0,|L1.56|
;;;44             pWin->Status |= WM_SF_STAYONTOP;
00001e  8ba0              LDRH     r0,[r4,#0x1c]
000020  f0400008          ORR      r0,r0,#8
000024  83a0              STRH     r0,[r4,#0x1c]
000026  e007              B        |L1.56|
                  |L1.40|
;;;45           }
;;;46         } else {
;;;47           if ((pWin->Status & WM_SF_STAYONTOP) != 0) {  /* First check if this is necessary at all */
000028  7f20              LDRB     r0,[r4,#0x1c]
00002a  f0000008          AND      r0,r0,#8
00002e  b118              CBZ      r0,|L1.56|
;;;48             pWin->Status &= ~WM_SF_STAYONTOP;
000030  8ba0              LDRH     r0,[r4,#0x1c]
000032  f0200008          BIC      r0,r0,#8
000036  83a0              STRH     r0,[r4,#0x1c]
                  |L1.56|
;;;49           }
;;;50         }
;;;51         if (pWin->Status != OldStatus) {
000038  8ba0              LDRH     r0,[r4,#0x1c]
00003a  42b8              CMP      r0,r7
00003c  d007              BEQ      |L1.78|
;;;52           WM_AttachWindow(hWin, WM_GetParent(hWin));
00003e  4628              MOV      r0,r5
000040  f7fffffe          BL       WM_GetParent
000044  4680              MOV      r8,r0
000046  4641              MOV      r1,r8
000048  4628              MOV      r0,r5
00004a  f7fffffe          BL       WM_AttachWindow
                  |L1.78|
;;;53         }
;;;54         WM_UNLOCK();
;;;55       }
00004e  bf00              NOP      
                  |L1.80|
;;;56     }
000050  e8bd81f0          POP      {r4-r8,pc}
;;;57     
                          ENDP

                  WM_GetStayOnTop PROC
;;;61     */
;;;62     int WM_GetStayOnTop(WM_HWIN hWin) {
000054  b570              PUSH     {r4-r6,lr}
000056  4605              MOV      r5,r0
;;;63       int Result = 0;
000058  2600              MOVS     r6,#0
;;;64       WM_Obj * pWin;
;;;65       if (hWin) {
00005a  b145              CBZ      r5,|L1.110|
;;;66         WM_LOCK();
;;;67         pWin = WM_H2P(hWin);
00005c  4628              MOV      r0,r5
00005e  f7fffffe          BL       GUI_ALLOC_h2p
000062  4604              MOV      r4,r0
;;;68         if ((pWin->Status & WM_SF_STAYONTOP) != 0) {
000064  7f20              LDRB     r0,[r4,#0x1c]
000066  f0000008          AND      r0,r0,#8
00006a  b100              CBZ      r0,|L1.110|
;;;69           Result = 1;
00006c  2601              MOVS     r6,#1
                  |L1.110|
;;;70         }
;;;71         WM_UNLOCK();
;;;72       }
;;;73       return Result;
00006e  4630              MOV      r0,r6
;;;74     }
000070  bd70              POP      {r4-r6,pc}
;;;75     
                          ENDP


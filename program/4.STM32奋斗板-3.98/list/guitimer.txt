; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\guitimer.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\guitimer.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -IC:\Users\Administrator\Desktop\gui\STM32·Ü¶·°å-3.98\RTE -Id:\Keil_v5\ARM\PACK\ARM\CMSIS\4.3.0\CMSIS\Include -Id:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.1.0\Device\Include -D__UVISION_VERSION=515 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\guitimer.crf GUI\Core\GUITimer.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _Unlink PROC
;;;68     */
;;;69     static void _Unlink(GUI_TIMER_HANDLE hTimer) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4605              MOV      r5,r0
;;;70       GUI_TIMER_Obj* pTimer = GUI_TIMER_H2P(hTimer);
000006  4628              MOV      r0,r5
000008  f7fffffe          BL       GUI_ALLOC_h2p
00000c  4607              MOV      r7,r0
;;;71       GUI_TIMER_HANDLE hi;
;;;72       GUI_TIMER_Obj*   pi;
;;;73     /* Check if it is the first element */
;;;74       if (hFirstTimer == hTimer) {
00000e  4874              LDR      r0,|L1.480|
000010  f9b00000          LDRSH    r0,[r0,#0]  ; hFirstTimer
000014  42a8              CMP      r0,r5
000016  d104              BNE      |L1.34|
;;;75         hFirstTimer = pTimer->hNext;
000018  88b8              LDRH     r0,[r7,#4]
00001a  4971              LDR      r1,|L1.480|
00001c  8008              STRH     r0,[r1,#0]
                  |L1.30|
;;;76         return;
;;;77     	}
;;;78       hi = hFirstTimer;
;;;79     /* Try to find it in the list ... */
;;;80       while(hi) {
;;;81         /* GUI_ASSERT(hi<1000,0); */
;;;82         pi = GUI_TIMER_H2P(hi);
;;;83         if (pi->hNext == hTimer) {
;;;84           pi->hNext = pTimer->hNext;
;;;85           break;
;;;86     		}        
;;;87         hi = pi->hNext;
;;;88       }  
;;;89     }
00001e  e8bd81f0          POP      {r4-r8,pc}
                  |L1.34|
000022  486f              LDR      r0,|L1.480|
000024  f9b06000          LDRSH    r6,[r0,#0]            ;78  ; hFirstTimer
000028  e00c              B        |L1.68|
                  |L1.42|
00002a  4630              MOV      r0,r6                 ;82
00002c  f7fffffe          BL       GUI_ALLOC_h2p
000030  4604              MOV      r4,r0                 ;82
000032  f9b40004          LDRSH    r0,[r4,#4]            ;83
000036  42a8              CMP      r0,r5                 ;83
000038  d102              BNE      |L1.64|
00003a  88b8              LDRH     r0,[r7,#4]            ;84
00003c  80a0              STRH     r0,[r4,#4]            ;84
00003e  e003              B        |L1.72|
                  |L1.64|
000040  f9b46004          LDRSH    r6,[r4,#4]            ;87
                  |L1.68|
000044  2e00              CMP      r6,#0                 ;80
000046  d1f0              BNE      |L1.42|
                  |L1.72|
000048  bf00              NOP                            ;85
00004a  bf00              NOP      
00004c  e7e7              B        |L1.30|
;;;90     
                          ENDP

                  _Link PROC
;;;99     */
;;;100    static void _Link(GUI_TIMER_HANDLE hNew) {
00004e  e92d47f0          PUSH     {r4-r10,lr}
000052  4605              MOV      r5,r0
;;;101      GUI_TIMER_Obj*   pNew        = GUI_TIMER_H2P(hNew);
000054  4628              MOV      r0,r5
000056  f7fffffe          BL       GUI_ALLOC_h2p
00005a  4604              MOV      r4,r0
;;;102      GUI_TIMER_Obj*   pTimer;
;;;103      GUI_TIMER_Obj*   pNext;
;;;104      GUI_TIMER_HANDLE hNext;
;;;105      if (hFirstTimer ==0) { /* List is empty, make it the only element */
00005c  4860              LDR      r0,|L1.480|
00005e  8800              LDRH     r0,[r0,#0]  ; hFirstTimer
000060  b920              CBNZ     r0,|L1.108|
;;;106        hFirstTimer = hNew;
000062  485f              LDR      r0,|L1.480|
000064  8005              STRH     r5,[r0,#0]
;;;107    	  pNew->hNext = 0;
000066  2000              MOVS     r0,#0
000068  80a0              STRH     r0,[r4,#4]
00006a  e030              B        |L1.206|
                  |L1.108|
;;;108      } else {
;;;109        GUI_TIMER_Obj* pFirstTimer      = GUI_TIMER_H2P(hFirstTimer);
00006c  485c              LDR      r0,|L1.480|
00006e  f9b00000          LDRSH    r0,[r0,#0]  ; hFirstTimer
000072  f7fffffe          BL       GUI_ALLOC_h2p
000076  4681              MOV      r9,r0
;;;110    /* Check if we have to make it the first element */
;;;111        if ((pNew->t0 - pFirstTimer->t0) <=0) {
000078  6920              LDR      r0,[r4,#0x10]
00007a  f8d91010          LDR      r1,[r9,#0x10]
00007e  1a40              SUBS     r0,r0,r1
000080  2800              CMP      r0,#0
000082  dc07              BGT      |L1.148|
;;;112          pNew->hNext = hFirstTimer;
000084  4856              LDR      r0,|L1.480|
000086  f9b00000          LDRSH    r0,[r0,#0]  ; hFirstTimer
00008a  80a0              STRH     r0,[r4,#4]
;;;113          hFirstTimer = hNew;
00008c  4854              LDR      r0,|L1.480|
00008e  8005              STRH     r5,[r0,#0]
                  |L1.144|
;;;114    			return;
;;;115    		} else {
;;;116          GUI_TIMER_HANDLE hTimer = hFirstTimer;
;;;117    /* Put it into the list */
;;;118          do {
;;;119            pTimer       = GUI_TIMER_H2P(hTimer);
;;;120            hNext        = pTimer->hNext;
;;;121            if (hNext ==0)
;;;122    					goto Append;
;;;123            pNext      = GUI_TIMER_H2P(hNext);
;;;124    				if ((pNew->t0 - pNext->t0) <=0) {
;;;125              pNew->hNext  = hNext;
;;;126              pTimer->hNext= hNew;
;;;127              return;
;;;128    				}
;;;129    			} while(1);
;;;130    /* Put it at the end of the list */
;;;131    Append:
;;;132          pNew->hNext  = hNext;
;;;133          pTimer->hNext= hNew;
;;;134          return;
;;;135    		}
;;;136      }
;;;137    }
000090  e8bd87f0          POP      {r4-r10,pc}
                  |L1.148|
000094  4852              LDR      r0,|L1.480|
000096  f9b0a000          LDRSH    r10,[r0,#0]           ;116  ; hFirstTimer
00009a  bf00              NOP                            ;118
                  |L1.156|
00009c  4650              MOV      r0,r10                ;119
00009e  f7fffffe          BL       GUI_ALLOC_h2p
0000a2  4606              MOV      r6,r0                 ;119
0000a4  f9b67004          LDRSH    r7,[r6,#4]            ;120
0000a8  b907              CBNZ     r7,|L1.172|
0000aa  e00d              B        |L1.200|
                  |L1.172|
0000ac  4638              MOV      r0,r7                 ;123
0000ae  f7fffffe          BL       GUI_ALLOC_h2p
0000b2  4680              MOV      r8,r0                 ;123
0000b4  6921              LDR      r1,[r4,#0x10]         ;124
0000b6  f8d80010          LDR      r0,[r8,#0x10]         ;124
0000ba  1a08              SUBS     r0,r1,r0              ;124
0000bc  2800              CMP      r0,#0                 ;124
0000be  dc02              BGT      |L1.198|
0000c0  80a7              STRH     r7,[r4,#4]            ;125
0000c2  80b5              STRH     r5,[r6,#4]            ;126
0000c4  e7e4              B        |L1.144|
                  |L1.198|
0000c6  e7e9              B        |L1.156|
                  |L1.200|
0000c8  80a7              STRH     r7,[r4,#4]            ;132
0000ca  80b5              STRH     r5,[r6,#4]            ;133
0000cc  e7e0              B        |L1.144|
                  |L1.206|
0000ce  bf00              NOP      
0000d0  e7de              B        |L1.144|
;;;138    
                          ENDP

                  GUI_TIMER_Exec PROC
;;;148    */
;;;149    int GUI_TIMER_Exec(void) {
0000d2  b57c              PUSH     {r2-r6,lr}
;;;150      int r = 0;
0000d4  2600              MOVS     r6,#0
;;;151      GUI_TIMER_TIME t = GUI_GetTime();
0000d6  f7fffffe          BL       GUI_GetTime
0000da  4605              MOV      r5,r0
;;;152      GUI_LOCK(); {
;;;153        while (hFirstTimer) {
0000dc  e01b              B        |L1.278|
                  |L1.222|
;;;154         	GUI_TIMER_Obj* pTimer = GUI_TIMER_H2P(hFirstTimer);
0000de  4840              LDR      r0,|L1.480|
0000e0  f9b00000          LDRSH    r0,[r0,#0]  ; hFirstTimer
0000e4  f7fffffe          BL       GUI_ALLOC_h2p
0000e8  4604              MOV      r4,r0
;;;155          if ((pTimer->t0-t) <=0) {
0000ea  6920              LDR      r0,[r4,#0x10]
0000ec  1b40              SUBS     r0,r0,r5
0000ee  2800              CMP      r0,#0
0000f0  dc0f              BGT      |L1.274|
;;;156            GUI_TIMER_MESSAGE tm;
;;;157            tm.Time = t;
0000f2  9500              STR      r5,[sp,#0]
;;;158    				tm.Context = pTimer->Context;
0000f4  68e0              LDR      r0,[r4,#0xc]
0000f6  9001              STR      r0,[sp,#4]
;;;159            _hActiveTimer = hFirstTimer;
0000f8  4839              LDR      r0,|L1.480|
0000fa  f9b00000          LDRSH    r0,[r0,#0]  ; hFirstTimer
0000fe  4939              LDR      r1,|L1.484|
000100  8008              STRH     r0,[r1,#0]
;;;160            hFirstTimer = pTimer->hNext;
000102  88a0              LDRH     r0,[r4,#4]
000104  4936              LDR      r1,|L1.480|
000106  8008              STRH     r0,[r1,#0]
;;;161            pTimer->cb(&tm);
000108  4668              MOV      r0,sp
00010a  6821              LDR      r1,[r4,#0]
00010c  4788              BLX      r1
;;;162            r = 1;
00010e  2601              MOVS     r6,#1
;;;163    			} else
000110  e000              B        |L1.276|
                  |L1.274|
;;;164    			  break;
000112  e004              B        |L1.286|
                  |L1.276|
;;;165        }
000114  bf00              NOP      
                  |L1.278|
000116  4832              LDR      r0,|L1.480|
000118  8800              LDRH     r0,[r0,#0]            ;153  ; hFirstTimer
00011a  2800              CMP      r0,#0                 ;153
00011c  d1df              BNE      |L1.222|
                  |L1.286|
00011e  bf00              NOP                            ;164
;;;166        /*
;;;167    		GUI_TIMER_Obj* pObj = GUI_TIMER_H2P(hObj);
;;;168        pObj->t0 = Time;
;;;169        */
;;;170      } GUI_UNLOCK(); 
;;;171      return r;
000120  4630              MOV      r0,r6
;;;172    }
000122  bd7c              POP      {r2-r6,pc}
;;;173    
                          ENDP

                  GUI_TIMER_Create PROC
;;;177    */
;;;178    GUI_TIMER_HANDLE GUI_TIMER_Create(GUI_TIMER_CALLBACK* cb, int Time, U32 Context, int Flags) {
000124  e92d47f0          PUSH     {r4-r10,lr}
000128  4604              MOV      r4,r0
00012a  460d              MOV      r5,r1
00012c  4616              MOV      r6,r2
00012e  461f              MOV      r7,r3
;;;179      GUI_TIMER_HANDLE hObj;
;;;180      GUI_TIMER_Obj* pObj;
;;;181      GUI_LOCK();
;;;182      GUI_USE_PARA(Flags);
000130  bf00              NOP      
;;;183      GUI_USE_PARA(Time);
000132  bf00              NOP      
;;;184      GUI_pfTimerExec = GUI_TIMER_Exec;
000134  f2af0065          ADR      r0,GUI_TIMER_Exec + 1
000138  492b              LDR      r1,|L1.488|
00013a  6008              STR      r0,[r1,#0]  ; GUI_pfTimerExec
;;;185    	{
;;;186        /* Alloc memory for obj */
;;;187        hObj = GUI_ALLOC_AllocZero(sizeof(GUI_TIMER_Obj));
00013c  2018              MOVS     r0,#0x18
00013e  f7fffffe          BL       GUI_ALLOC_AllocZero
000142  4681              MOV      r9,r0
;;;188        pObj = GUI_TIMER_H2P(hObj);
000144  4648              MOV      r0,r9
000146  f7fffffe          BL       GUI_ALLOC_h2p
00014a  4680              MOV      r8,r0
;;;189        /* init member variables */
;;;190        pObj->cb = cb;
00014c  f8c84000          STR      r4,[r8,#0]
;;;191    		pObj->Context = Context;
000150  f8c8600c          STR      r6,[r8,#0xc]
;;;192        /* Link it */
;;;193    		_Link(hObj);
000154  4648              MOV      r0,r9
000156  f7fffffe          BL       _Link
;;;194    	} GUI_UNLOCK();
;;;195      return hObj;
00015a  4648              MOV      r0,r9
;;;196    }
00015c  e8bd87f0          POP      {r4-r10,pc}
;;;197    
                          ENDP

                  GUI_TIMER_Delete PROC
;;;201    */
;;;202    void GUI_TIMER_Delete(GUI_TIMER_HANDLE hObj) {
000160  b510              PUSH     {r4,lr}
000162  4604              MOV      r4,r0
;;;203    /* Unlink Timer */
;;;204      GUI_LOCK();
;;;205      _Unlink(hObj);
000164  4620              MOV      r0,r4
000166  f7fffffe          BL       _Unlink
;;;206      GUI_ALLOC_Free(hObj);
00016a  4620              MOV      r0,r4
00016c  f7fffffe          BL       GUI_ALLOC_Free
;;;207      GUI_UNLOCK();
;;;208    }
000170  bd10              POP      {r4,pc}
;;;209    
                          ENDP

                  GUI_TIMER_SetPeriod PROC
;;;213    */
;;;214    void GUI_TIMER_SetPeriod(GUI_TIMER_HANDLE hObj, GUI_TIMER_TIME Period) {
000172  b570              PUSH     {r4-r6,lr}
000174  4605              MOV      r5,r0
000176  460c              MOV      r4,r1
;;;215      GUI_LOCK(); {
;;;216        GUI_TIMER_Obj* pObj = GUI_TIMER_H2P(hObj);
000178  4628              MOV      r0,r5
00017a  f7fffffe          BL       GUI_ALLOC_h2p
00017e  4606              MOV      r6,r0
;;;217        pObj->Period = Period;
000180  6174              STR      r4,[r6,#0x14]
;;;218      } GUI_UNLOCK(); 
;;;219    }
000182  bd70              POP      {r4-r6,pc}
;;;220    
                          ENDP

                  GUI_TIMER_SetTime PROC
;;;224    */
;;;225    void GUI_TIMER_SetTime(GUI_TIMER_HANDLE hObj, GUI_TIMER_TIME Time) {
000184  b570              PUSH     {r4-r6,lr}
000186  4605              MOV      r5,r0
000188  460c              MOV      r4,r1
;;;226      GUI_LOCK(); {
;;;227       	GUI_TIMER_Obj* pObj = GUI_TIMER_H2P(hObj);
00018a  4628              MOV      r0,r5
00018c  f7fffffe          BL       GUI_ALLOC_h2p
000190  4606              MOV      r6,r0
;;;228        pObj->t0 = Time;
000192  6134              STR      r4,[r6,#0x10]
;;;229      } GUI_UNLOCK(); 
;;;230    }
000194  bd70              POP      {r4-r6,pc}
;;;231    
                          ENDP

                  GUI_TIMER_SetDelay PROC
;;;235    */
;;;236    void GUI_TIMER_SetDelay(GUI_TIMER_HANDLE hObj, GUI_TIMER_TIME Delay) {
000196  b570              PUSH     {r4-r6,lr}
000198  4605              MOV      r5,r0
00019a  460c              MOV      r4,r1
;;;237      GUI_LOCK(); {
;;;238       	GUI_TIMER_Obj* pObj = GUI_TIMER_H2P(hObj);
00019c  4628              MOV      r0,r5
00019e  f7fffffe          BL       GUI_ALLOC_h2p
0001a2  4606              MOV      r6,r0
;;;239        pObj->t0 = Delay;
0001a4  6134              STR      r4,[r6,#0x10]
;;;240    		_Unlink(hObj);
0001a6  4628              MOV      r0,r5
0001a8  f7fffffe          BL       _Unlink
;;;241    		_Link(hObj);
0001ac  4628              MOV      r0,r5
0001ae  f7fffffe          BL       _Link
;;;242      } GUI_UNLOCK(); 
;;;243    }
0001b2  bd70              POP      {r4-r6,pc}
;;;244    
                          ENDP

                  GUI_TIMER_Restart PROC
;;;248    */
;;;249    void GUI_TIMER_Restart(GUI_TIMER_HANDLE hObj) {
0001b4  b570              PUSH     {r4-r6,lr}
0001b6  4605              MOV      r5,r0
;;;250      GUI_TIMER_Obj* pObj;
;;;251      GUI_LOCK();
;;;252      {
;;;253        if (hObj == 0) {
0001b8  b915              CBNZ     r5,|L1.448|
;;;254          hObj = _hActiveTimer;
0001ba  480a              LDR      r0,|L1.484|
0001bc  f9b05000          LDRSH    r5,[r0,#0]  ; _hActiveTimer
                  |L1.448|
;;;255        }
;;;256       	pObj = GUI_TIMER_H2P(hObj);
0001c0  4628              MOV      r0,r5
0001c2  f7fffffe          BL       GUI_ALLOC_h2p
0001c6  4604              MOV      r4,r0
;;;257        pObj->t0 = GUI_GetTime() +pObj->Period;
0001c8  f7fffffe          BL       GUI_GetTime
0001cc  6961              LDR      r1,[r4,#0x14]
0001ce  4408              ADD      r0,r0,r1
0001d0  6120              STR      r0,[r4,#0x10]
;;;258    		_Unlink(hObj);
0001d2  4628              MOV      r0,r5
0001d4  f7fffffe          BL       _Unlink
;;;259    		_Link(hObj);
0001d8  4628              MOV      r0,r5
0001da  f7fffffe          BL       _Link
;;;260      } GUI_UNLOCK(); 
;;;261    }
0001de  bd70              POP      {r4-r6,pc}
;;;262    
                          ENDP

                  |L1.480|
                          DCD      hFirstTimer
                  |L1.484|
                          DCD      _hActiveTimer
                  |L1.488|
                          DCD      GUI_pfTimerExec

                          AREA ||.data||, DATA, ALIGN=1

                  hFirstTimer
000000  0000              DCB      0x00,0x00
                  _hActiveTimer
000002  0000              DCB      0x00,0x00

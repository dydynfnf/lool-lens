; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\guiaachar.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\guiaachar.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -IC:\Users\Administrator\Desktop\gui\STM32·Ü¶·°å-3.98\RTE -Id:\Keil_v5\ARM\PACK\ARM\CMSIS\4.3.0\CMSIS\Include -Id:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.1.0\Device\Include -D__UVISION_VERSION=515 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\guiaachar.crf GUI\AntiAlias\GUIAAChar.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  Draw PROC
;;;55     */
;;;56     static void Draw(int x0, int y0, int XSize, int YSize, int BytesPerLine, const U8*pData) {
000000  e92d4fff          PUSH     {r0-r11,lr}
000004  b083              SUB      sp,sp,#0xc
000006  4606              MOV      r6,r0
000008  460f              MOV      r7,r1
00000a  f8dda044          LDR      r10,[sp,#0x44]
;;;57         int x, y;
;;;58         tSetPixelAA* pfSetPixelAA;
;;;59         pfSetPixelAA = (GUI_Context.TextMode & GUI_TM_TRANS)
00000e  4877              LDR      r0,|L1.492|
000010  f890002a          LDRB     r0,[r0,#0x2a]  ; GUI_Context
000014  f0000002          AND      r0,r0,#2
000018  b108              CBZ      r0,|L1.30|
00001a  4875              LDR      r0,|L1.496|
00001c  e000              B        |L1.32|
                  |L1.30|
00001e  4875              LDR      r0,|L1.500|
                  |L1.32|
000020  4683              MOV      r11,r0
;;;60                      ? LCD_SetPixelAA : LCD_SetPixelAA_NoTrans;
;;;61     	  for (y=0; y<YSize; y++) {
000022  2500              MOVS     r5,#0
000024  e062              B        |L1.236|
                  |L1.38|
;;;62       	  const U8* pData0 = pData;
000026  46d1              MOV      r9,r10
;;;63     	    const U8* pData1 = pData+BytesPerLine;
000028  9810              LDR      r0,[sp,#0x40]
00002a  4450              ADD      r0,r0,r10
00002c  9002              STR      r0,[sp,#8]
;;;64       	  for (x=0; x<XSize; x++) {
00002e  2400              MOVS     r4,#0
000030  e054              B        |L1.220|
                  |L1.50|
;;;65             int PixelCnt=0;
000032  f04f0800          MOV      r8,#0
;;;66             int Mask0 = Bit2Mask0[x&3];
000036  f0040003          AND      r0,r4,#3
00003a  496f              LDR      r1,|L1.504|
00003c  5c08              LDRB     r0,[r1,r0]
00003e  9001              STR      r0,[sp,#4]
;;;67             int Mask1 = Bit2Mask1[x&3];
000040  f0040003          AND      r0,r4,#3
000044  496d              LDR      r1,|L1.508|
000046  5c08              LDRB     r0,[r1,r0]
000048  9000              STR      r0,[sp,#0]
;;;68     			  if ((*pData0) & Mask0)
00004a  f8990000          LDRB     r0,[r9,#0]
00004e  9901              LDR      r1,[sp,#4]
000050  4008              ANDS     r0,r0,r1
000052  b108              CBZ      r0,|L1.88|
;;;69     			    PixelCnt++;
000054  f1080801          ADD      r8,r8,#1
                  |L1.88|
;;;70     			  if ((*pData0) & Mask1)
000058  f8990000          LDRB     r0,[r9,#0]
00005c  9900              LDR      r1,[sp,#0]
00005e  4008              ANDS     r0,r0,r1
000060  b108              CBZ      r0,|L1.102|
;;;71     			    PixelCnt++;
000062  f1080801          ADD      r8,r8,#1
                  |L1.102|
;;;72     			  if ((*pData1) & Mask0)
000066  9802              LDR      r0,[sp,#8]
000068  7800              LDRB     r0,[r0,#0]
00006a  9901              LDR      r1,[sp,#4]
00006c  4008              ANDS     r0,r0,r1
00006e  b108              CBZ      r0,|L1.116|
;;;73     			    PixelCnt++;
000070  f1080801          ADD      r8,r8,#1
                  |L1.116|
;;;74     			  if ((*pData1) & Mask1)
000074  9802              LDR      r0,[sp,#8]
000076  7800              LDRB     r0,[r0,#0]
000078  9900              LDR      r1,[sp,#0]
00007a  4008              ANDS     r0,r0,r1
00007c  b108              CBZ      r0,|L1.130|
;;;75     			    PixelCnt++;
00007e  f1080801          ADD      r8,r8,#1
                  |L1.130|
;;;76             if ((x&3) ==3) {
000082  f0040003          AND      r0,r4,#3
000086  2803              CMP      r0,#3
000088  d104              BNE      |L1.148|
;;;77               pData0++;
00008a  f1090901          ADD      r9,r9,#1
;;;78               pData1++;
00008e  9802              LDR      r0,[sp,#8]
000090  1c40              ADDS     r0,r0,#1
000092  9002              STR      r0,[sp,#8]
                  |L1.148|
;;;79     			  }
;;;80             switch (PixelCnt) {
000094  f1b80f01          CMP      r8,#1
000098  d019              BEQ      |L1.206|
00009a  f1b80f02          CMP      r8,#2
00009e  d011              BEQ      |L1.196|
0000a0  f1b80f03          CMP      r8,#3
0000a4  d009              BEQ      |L1.186|
0000a6  f1b80f04          CMP      r8,#4
0000aa  d115              BNE      |L1.216|
;;;81             case 4: LCD_HL_DrawPixel(x0+x,y0+y);      break;
0000ac  1979              ADDS     r1,r7,r5
0000ae  1930              ADDS     r0,r6,r4
0000b0  4b4e              LDR      r3,|L1.492|
0000b2  6d9b              LDR      r3,[r3,#0x58]  ; GUI_Context
0000b4  685a              LDR      r2,[r3,#4]
0000b6  4790              BLX      r2
0000b8  e00e              B        |L1.216|
                  |L1.186|
;;;82             case 3: (*pfSetPixelAA) (x0+x,y0+y, 12); break;
0000ba  1979              ADDS     r1,r7,r5
0000bc  1930              ADDS     r0,r6,r4
0000be  220c              MOVS     r2,#0xc
0000c0  47d8              BLX      r11
0000c2  e009              B        |L1.216|
                  |L1.196|
;;;83             case 2: (*pfSetPixelAA) (x0+x,y0+y, 8);  break;
0000c4  1979              ADDS     r1,r7,r5
0000c6  1930              ADDS     r0,r6,r4
0000c8  2208              MOVS     r2,#8
0000ca  47d8              BLX      r11
0000cc  e004              B        |L1.216|
                  |L1.206|
;;;84             case 1: (*pfSetPixelAA) (x0+x,y0+y, 4);  break;
0000ce  1979              ADDS     r1,r7,r5
0000d0  1930              ADDS     r0,r6,r4
0000d2  2204              MOVS     r2,#4
0000d4  47d8              BLX      r11
0000d6  bf00              NOP      
                  |L1.216|
0000d8  bf00              NOP                            ;81
0000da  1c64              ADDS     r4,r4,#1              ;64
                  |L1.220|
0000dc  9805              LDR      r0,[sp,#0x14]         ;64
0000de  4284              CMP      r4,r0                 ;64
0000e0  dba7              BLT      |L1.50|
;;;85     			  }
;;;86       	  }
;;;87           pData+=2*BytesPerLine;
0000e2  2102              MOVS     r1,#2
0000e4  9810              LDR      r0,[sp,#0x40]
0000e6  fb01aa00          MLA      r10,r1,r0,r10
0000ea  1c6d              ADDS     r5,r5,#1              ;61
                  |L1.236|
0000ec  9806              LDR      r0,[sp,#0x18]         ;61
0000ee  4285              CMP      r5,r0                 ;61
0000f0  db99              BLT      |L1.38|
;;;88     	  }
;;;89     }
0000f2  b007              ADD      sp,sp,#0x1c
0000f4  e8bd8ff0          POP      {r4-r11,pc}
;;;90     
                          ENDP

                  GUIPROP_FindChar PROC
;;;94     */
;;;95     static const GUI_FONT_PROP* GUIPROP_FindChar(const GUI_FONT_PROP* pProp, U16P c) {
0000f8  4a3c              LDR      r2,|L1.492|
;;;96       for (pProp = GUI_Context.pAFont->p.pProp; pProp; pProp=(const GUI_FONT_PROP*) pProp->pNext) {
0000fa  69d2              LDR      r2,[r2,#0x1c]  ; GUI_Context
0000fc  6990              LDR      r0,[r2,#0x18]
0000fe  e007              B        |L1.272|
                  |L1.256|
;;;97         if ((c>=pProp->First) && (c<=pProp->Last))
000100  8802              LDRH     r2,[r0,#0]
000102  428a              CMP      r2,r1
000104  dc03              BGT      |L1.270|
000106  8842              LDRH     r2,[r0,#2]
000108  428a              CMP      r2,r1
00010a  db00              BLT      |L1.270|
;;;98           break;
00010c  e002              B        |L1.276|
                  |L1.270|
00010e  6880              LDR      r0,[r0,#8]            ;96
                  |L1.272|
000110  2800              CMP      r0,#0                 ;96
000112  d1f5              BNE      |L1.256|
                  |L1.276|
000114  bf00              NOP      
;;;99       }
;;;100      return pProp;
;;;101    }
000116  4770              BX       lr
;;;102    
                          ENDP

                  GUIPROPAA_DispChar PROC
;;;112    */
;;;113    void GUIPROPAA_DispChar(U16P c) {
000118  e92d47fc          PUSH     {r2-r10,lr}
00011c  4605              MOV      r5,r0
;;;114      int BytesPerLine;
;;;115      GUI_DRAWMODE DrawMode = GUI_Context.TextMode;
00011e  4833              LDR      r0,|L1.492|
000120  f9b0802a          LDRSH    r8,[r0,#0x2a]  ; GUI_Context
;;;116      const GUI_FONT_PROP* pProp = GUIPROP_FindChar(GUI_Context.pAFont->p.pProp, c);
000124  4601              MOV      r1,r0
000126  69c9              LDR      r1,[r1,#0x1c]  ; GUI_Context
000128  6988              LDR      r0,[r1,#0x18]
00012a  4629              MOV      r1,r5
00012c  f7fffffe          BL       GUIPROP_FindChar
000130  4606              MOV      r6,r0
;;;117      if (pProp) {
000132  b386              CBZ      r6,|L1.406|
;;;118        GUI_DRAWMODE OldDrawMode;
;;;119        const GUI_CHARINFO* pCharInfo = pProp->paCharInfo+(c-pProp->First);
000134  8831              LDRH     r1,[r6,#0]
000136  1a69              SUBS     r1,r5,r1
000138  6870              LDR      r0,[r6,#4]
00013a  eb0004c1          ADD      r4,r0,r1,LSL #3
;;;120        BytesPerLine = pCharInfo->BytesPerLine;
00013e  78a7              LDRB     r7,[r4,#2]
;;;121        OldDrawMode  = LCD_SetDrawMode(DrawMode);
000140  4640              MOV      r0,r8
000142  f7fffffe          BL       LCD_SetDrawMode
000146  4682              MOV      r10,r0
;;;122        Draw  ( GUI_Context.DispPosX, GUI_Context.DispPosY,
000148  7820              LDRB     r0,[r4,#0]
00014a  f1000901          ADD      r9,r0,#1
00014e  6860              LDR      r0,[r4,#4]
000150  f8dfc098          LDR      r12,|L1.492|
000154  e9cd7000          STRD     r7,r0,[sp,#0]
000158  f8dcc01c          LDR      r12,[r12,#0x1c]  ; GUI_Context
00015c  f89c3014          LDRB     r3,[r12,#0x14]
000160  eb097cd9          ADD      r12,r9,r9,LSR #31
000164  ea4f026c          ASR      r2,r12,#1
000168  f8dfc080          LDR      r12,|L1.492|
00016c  f9bc1024          LDRSH    r1,[r12,#0x24]  ; GUI_Context
000170  f9bc0022          LDRSH    r0,[r12,#0x22]  ; GUI_Context
000174  f7fffffe          BL       Draw
;;;123                           (pCharInfo->XSize+1)/2,
;;;124                           GUI_Context.pAFont->YSize,
;;;125                           BytesPerLine,
;;;126                           (U8 const*) pCharInfo->pData
;;;127                           );
;;;128        LCD_SetDrawMode(OldDrawMode); /* Restore draw mode */
000178  4650              MOV      r0,r10
00017a  f7fffffe          BL       LCD_SetDrawMode
;;;129        GUI_Context.DispPosX += (pCharInfo->XDist+1)/2;
00017e  7861              LDRB     r1,[r4,#1]
000180  1c48              ADDS     r0,r1,#1
000182  eb0071d0          ADD      r1,r0,r0,LSR #31
000186  4a19              LDR      r2,|L1.492|
000188  8c52              LDRH     r2,[r2,#0x22]  ; GUI_Context
00018a  eb020161          ADD      r1,r2,r1,ASR #1
00018e  b209              SXTH     r1,r1
000190  4a16              LDR      r2,|L1.492|
000192  8451              STRH     r1,[r2,#0x22]
;;;130      }
000194  bf00              NOP      
                  |L1.406|
;;;131    }
000196  e8bd87fc          POP      {r2-r10,pc}
;;;132    
                          ENDP

                  GUIPROPAA_GetCharDistX PROC
;;;136    */
;;;137    int GUIPROPAA_GetCharDistX(U16P c) {
00019a  b570              PUSH     {r4-r6,lr}
00019c  4604              MOV      r4,r0
;;;138      int r;
;;;139      const GUI_FONT_PROP* pProp = GUIPROP_FindChar(GUI_Context.pAFont->p.pProp, c);
00019e  4913              LDR      r1,|L1.492|
0001a0  69c9              LDR      r1,[r1,#0x1c]  ; GUI_Context
0001a2  6988              LDR      r0,[r1,#0x18]
0001a4  4621              MOV      r1,r4
0001a6  f7fffffe          BL       GUIPROP_FindChar
0001aa  4605              MOV      r5,r0
;;;140      r = (pProp) ? (pProp->paCharInfo+(c-pProp->First))->XSize : 0;
0001ac  b12d              CBZ      r5,|L1.442|
0001ae  8829              LDRH     r1,[r5,#0]
0001b0  1a61              SUBS     r1,r4,r1
0001b2  6868              LDR      r0,[r5,#4]
0001b4  f8100031          LDRB     r0,[r0,r1,LSL #3]
0001b8  e000              B        |L1.444|
                  |L1.442|
0001ba  2000              MOVS     r0,#0
                  |L1.444|
0001bc  4606              MOV      r6,r0
;;;141      return (r+1)/2;
0001be  1c71              ADDS     r1,r6,#1
0001c0  eb0170d1          ADD      r0,r1,r1,LSR #31
0001c4  1040              ASRS     r0,r0,#1
;;;142    }
0001c6  bd70              POP      {r4-r6,pc}
;;;143    
                          ENDP

                  GUIPROPAA_GetFontInfo PROC
;;;147    */
;;;148    void GUIPROPAA_GetFontInfo(const GUI_FONT * pFont, GUI_FONTINFO* pfi) {
0001c8  bf00              NOP      
;;;149      GUI_USE_PARA(pFont);
;;;150      pfi->Flags = GUI_FONTINFO_FLAG_PROP | GUI_FONTINFO_FLAG_AA;
0001ca  2205              MOVS     r2,#5
0001cc  800a              STRH     r2,[r1,#0]
;;;151    }
0001ce  4770              BX       lr
;;;152    
                          ENDP

                  GUIPROPAA_IsInFont PROC
;;;156    */
;;;157    char GUIPROPAA_IsInFont(const GUI_FONT * pFont, U16 c) {
0001d0  b570              PUSH     {r4-r6,lr}
0001d2  4604              MOV      r4,r0
0001d4  460d              MOV      r5,r1
;;;158      const GUI_FONT_PROP* pProp = GUIPROP_FindChar(pFont->p.pProp, c);
0001d6  4629              MOV      r1,r5
0001d8  69a0              LDR      r0,[r4,#0x18]
0001da  f7fffffe          BL       GUIPROP_FindChar
0001de  4606              MOV      r6,r0
;;;159      return (pProp==NULL) ? 0 : 1;
0001e0  b10e              CBZ      r6,|L1.486|
0001e2  2001              MOVS     r0,#1
                  |L1.484|
;;;160    }
0001e4  bd70              POP      {r4-r6,pc}
                  |L1.486|
0001e6  2000              MOVS     r0,#0                 ;159
0001e8  e7fc              B        |L1.484|
;;;161    
                          ENDP

0001ea  0000              DCW      0x0000
                  |L1.492|
                          DCD      GUI_Context
                  |L1.496|
                          DCD      LCD_SetPixelAA
                  |L1.500|
                          DCD      LCD_SetPixelAA_NoTrans
                  |L1.504|
                          DCD      Bit2Mask0
                  |L1.508|
                          DCD      Bit2Mask1

                          AREA ||.constdata||, DATA, READONLY, ALIGN=0

                  Bit2Mask0
000000  80200802          DCB      0x80,0x20,0x08,0x02
                  Bit2Mask1
000004  40100401          DCB      0x40,0x10,0x04,0x01

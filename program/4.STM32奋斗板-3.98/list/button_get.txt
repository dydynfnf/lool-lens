; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\button_get.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\button_get.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -IC:\Users\Administrator\Desktop\gui\STM32·Ü¶·°å-3.98\RTE -Id:\Keil_v5\ARM\PACK\ARM\CMSIS\4.3.0\CMSIS\Include -Id:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.1.0\Device\Include -D__UVISION_VERSION=515 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\button_get.crf GUI\Widget\BUTTON_Get.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  BUTTON_GetBkColor PROC
;;;36     */
;;;37     GUI_COLOR BUTTON_GetBkColor(BUTTON_Handle hObj,unsigned int Index) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4605              MOV      r5,r0
000006  460c              MOV      r4,r1
;;;38       GUI_COLOR Color = 0;
000008  2600              MOVS     r6,#0
;;;39       if (hObj && (Index < 2)) {
00000a  b155              CBZ      r5,|L1.34|
00000c  2c02              CMP      r4,#2
00000e  d208              BCS      |L1.34|
;;;40         BUTTON_Obj * pObj;
;;;41         WM_LOCK();
;;;42         pObj = BUTTON_H2P(hObj);
000010  4628              MOV      r0,r5
000012  f7fffffe          BL       GUI_ALLOC_h2p
000016  4607              MOV      r7,r0
;;;43         Color = pObj->Props.aBkColor[Index];
000018  f1070028          ADD      r0,r7,#0x28
00001c  f8506024          LDR      r6,[r0,r4,LSL #2]
;;;44         WM_UNLOCK();
;;;45       }
000020  bf00              NOP      
                  |L1.34|
;;;46       return Color;
000022  4630              MOV      r0,r6
;;;47     }
000024  e8bd81f0          POP      {r4-r8,pc}
;;;48     
                          ENDP

                  BUTTON_GetFont PROC
;;;52     */
;;;53     const GUI_FONT GUI_UNI_PTR * BUTTON_GetFont(BUTTON_Handle hObj) {
000028  b570              PUSH     {r4-r6,lr}
00002a  4604              MOV      r4,r0
;;;54       const GUI_FONT GUI_UNI_PTR * pFont = 0;
00002c  2500              MOVS     r5,#0
;;;55       if (hObj) {
00002e  b12c              CBZ      r4,|L1.60|
;;;56         BUTTON_Obj * pObj;
;;;57         WM_LOCK();
;;;58         pObj = BUTTON_H2P(hObj);
000030  4620              MOV      r0,r4
000032  f7fffffe          BL       GUI_ALLOC_h2p
000036  4606              MOV      r6,r0
;;;59         pFont = pObj->Props.pFont;
000038  6c75              LDR      r5,[r6,#0x44]
;;;60         WM_UNLOCK();
;;;61       }
00003a  bf00              NOP      
                  |L1.60|
;;;62       return pFont;
00003c  4628              MOV      r0,r5
;;;63     }
00003e  bd70              POP      {r4-r6,pc}
;;;64     
                          ENDP

                  BUTTON_GetText PROC
;;;68     */
;;;69     void BUTTON_GetText(BUTTON_Handle hObj, char * pBuffer, int MaxLen) {
000040  e92d47f0          PUSH     {r4-r10,lr}
000044  4607              MOV      r7,r0
000046  460c              MOV      r4,r1
000048  4615              MOV      r5,r2
;;;70       if (hObj) {
00004a  b1f7              CBZ      r7,|L1.138|
;;;71         BUTTON_Obj * pObj;
;;;72         WM_LOCK();
;;;73         pObj = BUTTON_H2P(hObj);
00004c  4638              MOV      r0,r7
00004e  f7fffffe          BL       GUI_ALLOC_h2p
000052  4680              MOV      r8,r0
;;;74         if (pObj->hpText) {
000054  f8b8004c          LDRH     r0,[r8,#0x4c]
000058  b1a0              CBZ      r0,|L1.132|
;;;75           const char * pText = (const char*) GUI_ALLOC_h2p(pObj->hpText);
00005a  f9b8004c          LDRSH    r0,[r8,#0x4c]
00005e  f7fffffe          BL       GUI_ALLOC_h2p
000062  4681              MOV      r9,r0
;;;76           int Len = strlen(pText);
000064  4648              MOV      r0,r9
000066  f7fffffe          BL       strlen
00006a  4606              MOV      r6,r0
;;;77           if (Len > (MaxLen - 1))
00006c  1e68              SUBS     r0,r5,#1
00006e  42b0              CMP      r0,r6
000070  da00              BGE      |L1.116|
;;;78             Len = MaxLen - 1;
000072  1e6e              SUBS     r6,r5,#1
                  |L1.116|
;;;79           memcpy((void *)pBuffer, (const void *)pText, Len);
000074  4632              MOV      r2,r6
000076  4649              MOV      r1,r9
000078  4620              MOV      r0,r4
00007a  f7fffffe          BL       __aeabi_memcpy
;;;80           *(pBuffer + Len) = 0;
00007e  2000              MOVS     r0,#0
000080  55a0              STRB     r0,[r4,r6]
;;;81         } else {
000082  e001              B        |L1.136|
                  |L1.132|
;;;82           *pBuffer = 0;     /* Empty string */
000084  2000              MOVS     r0,#0
000086  7020              STRB     r0,[r4,#0]
                  |L1.136|
;;;83         }
;;;84         WM_UNLOCK();
;;;85       }
000088  bf00              NOP      
                  |L1.138|
;;;86     }
00008a  e8bd87f0          POP      {r4-r10,pc}
;;;87     
                          ENDP

                  BUTTON_GetTextColor PROC
;;;91     */
;;;92     GUI_COLOR BUTTON_GetTextColor(BUTTON_Handle hObj,unsigned int Index) {
00008e  e92d41f0          PUSH     {r4-r8,lr}
000092  4605              MOV      r5,r0
000094  460c              MOV      r4,r1
;;;93       GUI_COLOR Color = 0;
000096  2600              MOVS     r6,#0
;;;94       if (hObj && (Index < 2)) {
000098  b155              CBZ      r5,|L1.176|
00009a  2c02              CMP      r4,#2
00009c  d208              BCS      |L1.176|
;;;95         BUTTON_Obj * pObj;
;;;96         WM_LOCK();
;;;97         pObj = BUTTON_H2P(hObj);
00009e  4628              MOV      r0,r5
0000a0  f7fffffe          BL       GUI_ALLOC_h2p
0000a4  4607              MOV      r7,r0
;;;98         Color = pObj->Props.aTextColor[Index];
0000a6  f1070034          ADD      r0,r7,#0x34
0000aa  f8506024          LDR      r6,[r0,r4,LSL #2]
;;;99         WM_UNLOCK();
;;;100      }
0000ae  bf00              NOP      
                  |L1.176|
;;;101      return Color;
0000b0  4630              MOV      r0,r6
;;;102    }
0000b2  e8bd81f0          POP      {r4-r8,pc}
;;;103    
                          ENDP


; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\multiedit.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\multiedit.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -IC:\Users\Administrator\Desktop\gui\STM32·Ü¶·°å-3.98\RTE -Id:\Keil_v5\ARM\PACK\ARM\CMSIS\4.3.0\CMSIS\Include -Id:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.1.0\Device\Include -D__UVISION_VERSION=515 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\multiedit.crf GUI\Widget\MULTIEDIT.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _InvalidateNumChars PROC
;;;164    */
;;;165    static void _InvalidateNumChars(MULTIEDIT_OBJ * pObj) {
000000  f8901079          LDRB     r1,[r0,#0x79]
;;;166      pObj->InvalidFlags |= INVALID_NUMCHARS;
000004  f0410101          ORR      r1,r1,#1
000008  f8801079          STRB     r1,[r0,#0x79]
;;;167    }
00000c  4770              BX       lr
;;;168    
                          ENDP

                  _GetNumChars PROC
;;;174    */
;;;175    static int _GetNumChars(MULTIEDIT_OBJ * pObj) {
00000e  b570              PUSH     {r4-r6,lr}
000010  4604              MOV      r4,r0
;;;176      if (pObj->InvalidFlags & INVALID_NUMCHARS) {
000012  f8940079          LDRB     r0,[r4,#0x79]
000016  f0000001          AND      r0,r0,#1
00001a  b178              CBZ      r0,|L1.60|
;;;177        char * pText;
;;;178        pText = (char*) GUI_ALLOC_h2p(pObj->hText);
00001c  f9b40038          LDRSH    r0,[r4,#0x38]
000020  f7fffffe          BL       GUI_ALLOC_h2p
000024  4605              MOV      r5,r0
;;;179        pObj->NumChars = GUI__GetNumChars(pText);
000026  4628              MOV      r0,r5
000028  f7fffffe          BL       GUI__GetNumChars
00002c  87a0              STRH     r0,[r4,#0x3c]
;;;180        pObj->InvalidFlags &= ~INVALID_NUMCHARS;
00002e  f8940079          LDRB     r0,[r4,#0x79]
000032  f0200001          BIC      r0,r0,#1
000036  f8840079          STRB     r0,[r4,#0x79]
;;;181      }
00003a  bf00              NOP      
                  |L1.60|
;;;182      return pObj->NumChars;
00003c  8fa0              LDRH     r0,[r4,#0x3c]
;;;183    }
00003e  bd70              POP      {r4-r6,pc}
;;;184    
                          ENDP

                  _GetXSize PROC
;;;190    */
;;;191    static int _GetXSize(MULTIEDIT_HANDLE hObj, const MULTIEDIT_OBJ* pObj) {
000040  b57c              PUSH     {r2-r6,lr}
000042  4605              MOV      r5,r0
000044  460c              MOV      r4,r1
;;;192      GUI_RECT Rect;
;;;193      WM_GetInsideRectExScrollbar(hObj, &Rect);
000046  4669              MOV      r1,sp
000048  4628              MOV      r0,r5
00004a  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;194      return Rect.x1 - Rect.x0 - (pObj->HBorder * 2) - 1;
00004e  f9bd0004          LDRSH    r0,[sp,#4]
000052  f9bd1000          LDRSH    r1,[sp,#0]
000056  1a41              SUBS     r1,r0,r1
000058  f894007b          LDRB     r0,[r4,#0x7b]
00005c  eba10040          SUB      r0,r1,r0,LSL #1
000060  1e40              SUBS     r0,r0,#1
;;;195    }
000062  bd7c              POP      {r2-r6,pc}
;;;196    
                          ENDP

                  _GetNumCharsInPrompt PROC
;;;200    */
;;;201    static int _GetNumCharsInPrompt(const MULTIEDIT_OBJ* pObj, const char GUI_UNI_PTR * pText) {
000064  e92d41f0          PUSH     {r4-r8,lr}
000068  4605              MOV      r5,r0
00006a  460c              MOV      r4,r1
;;;202      char *pString, *pEndPrompt;
;;;203      int r = 0;
00006c  f04f0800          MOV      r8,#0
;;;204      pString = (char*) GUI_ALLOC_h2p(pObj->hText);
000070  f9b50038          LDRSH    r0,[r5,#0x38]
000074  f7fffffe          BL       GUI_ALLOC_h2p
000078  4606              MOV      r6,r0
;;;205      pEndPrompt = pString + GUI_UC__NumChars2NumBytes(pString, pObj->NumCharsPrompt);
00007a  8fe9              LDRH     r1,[r5,#0x3e]
00007c  4630              MOV      r0,r6
00007e  f7fffffe          BL       GUI_UC__NumChars2NumBytes
000082  1987              ADDS     r7,r0,r6
;;;206      if (pText < pEndPrompt) {
000084  42bc              CMP      r4,r7
000086  d204              BCS      |L1.146|
;;;207        r = GUI_UC__NumBytes2NumChars(pText, pEndPrompt - pText);
000088  1b39              SUBS     r1,r7,r4
00008a  4620              MOV      r0,r4
00008c  f7fffffe          BL       GUI_UC__NumBytes2NumChars
000090  4680              MOV      r8,r0
                  |L1.146|
;;;208      }
;;;209      return r;
000092  4640              MOV      r0,r8
;;;210    }
000094  e8bd81f0          POP      {r4-r8,pc}
;;;211    
                          ENDP

                  _WrapGetNumCharsDisp PROC
;;;215    */
;;;216    static int _WrapGetNumCharsDisp(MULTIEDIT_HANDLE hObj, const MULTIEDIT_OBJ* pObj, const char GUI_UNI_PTR * pText) {
000098  e92d43f7          PUSH     {r0-r2,r4-r9,lr}
00009c  4681              MOV      r9,r0
00009e  460c              MOV      r4,r1
;;;217      int xSize, r;
;;;218      xSize = _GetXSize(hObj, pObj);
0000a0  4621              MOV      r1,r4
0000a2  4648              MOV      r0,r9
0000a4  f7fffffe          BL       _GetXSize
0000a8  4680              MOV      r8,r0
;;;219      if (pObj->Flags & MULTIEDIT_SF_PASSWORD) {
0000aa  f8940078          LDRB     r0,[r4,#0x78]
0000ae  f0000020          AND      r0,r0,#0x20
0000b2  2800              CMP      r0,#0
0000b4  d036              BEQ      |L1.292|
;;;220        int NumCharsPrompt;
;;;221        NumCharsPrompt = _GetNumCharsInPrompt(pObj, pText);
0000b6  4620              MOV      r0,r4
0000b8  9902              LDR      r1,[sp,#8]
0000ba  f7fffffe          BL       _GetNumCharsInPrompt
0000be  4606              MOV      r6,r0
;;;222        r = GUI__WrapGetNumCharsDisp(pText, xSize, pObj->WrapMode);
0000c0  f894207c          LDRB     r2,[r4,#0x7c]
0000c4  4641              MOV      r1,r8
0000c6  9802              LDR      r0,[sp,#8]
0000c8  f7fffffe          BL       GUI__WrapGetNumCharsDisp
0000cc  4605              MOV      r5,r0
;;;223        if (r >= NumCharsPrompt) {
0000ce  42b5              CMP      r5,r6
0000d0  db27              BLT      |L1.290|
;;;224          int x;
;;;225          switch (pObj->WrapMode) {
0000d2  f894007c          LDRB     r0,[r4,#0x7c]
0000d6  b920              CBNZ     r0,|L1.226|
;;;226          case GUI_WRAPMODE_NONE:
;;;227            r = GUI__GetNumChars(pText);
0000d8  9802              LDR      r0,[sp,#8]
0000da  f7fffffe          BL       GUI__GetNumChars
0000de  4605              MOV      r5,r0
;;;228            break;
0000e0  e01d              B        |L1.286|
                  |L1.226|
;;;229          default:
;;;230            r = NumCharsPrompt;
0000e2  4635              MOV      r5,r6
;;;231            x = GUI__GetLineDistX(pText, NumCharsPrompt);
0000e4  4631              MOV      r1,r6
0000e6  9802              LDR      r0,[sp,#8]
0000e8  f7fffffe          BL       GUI__GetLineDistX
0000ec  4607              MOV      r7,r0
;;;232            pText += GUI_UC__NumChars2NumBytes(pText, NumCharsPrompt);
0000ee  4631              MOV      r1,r6
0000f0  9802              LDR      r0,[sp,#8]
0000f2  f7fffffe          BL       GUI_UC__NumChars2NumBytes
0000f6  9902              LDR      r1,[sp,#8]
0000f8  4408              ADD      r0,r0,r1
0000fa  9002              STR      r0,[sp,#8]
;;;233            while (GUI_UC__GetCharCodeInc(&pText) != 0) {
0000fc  e008              B        |L1.272|
                  |L1.254|
;;;234              x += GUI_GetCharDistX(MULTIEDIT_PASSWORD_CHAR);
0000fe  202a              MOVS     r0,#0x2a
000100  f7fffffe          BL       GUI_GetCharDistX
000104  4407              ADD      r7,r7,r0
;;;235              if (r && (x > xSize)) {
000106  b115              CBZ      r5,|L1.270|
000108  4547              CMP      r7,r8
00010a  dd00              BLE      |L1.270|
;;;236                break;
00010c  e005              B        |L1.282|
                  |L1.270|
;;;237              }
;;;238              r++;
00010e  1c6d              ADDS     r5,r5,#1
                  |L1.272|
000110  a802              ADD      r0,sp,#8              ;233
000112  f7fffffe          BL       GUI_UC__GetCharCodeInc
000116  2800              CMP      r0,#0                 ;233
000118  d1f1              BNE      |L1.254|
                  |L1.282|
00011a  bf00              NOP                            ;236
;;;239            }
;;;240            break;
00011c  bf00              NOP      
                  |L1.286|
00011e  bf00              NOP                            ;228
;;;241          }
;;;242        }
000120  bf00              NOP      
                  |L1.290|
;;;243      } else {
000122  e006              B        |L1.306|
                  |L1.292|
;;;244        r = GUI__WrapGetNumCharsDisp(pText, xSize, pObj->WrapMode);
000124  f894207c          LDRB     r2,[r4,#0x7c]
000128  4641              MOV      r1,r8
00012a  9802              LDR      r0,[sp,#8]
00012c  f7fffffe          BL       GUI__WrapGetNumCharsDisp
000130  4605              MOV      r5,r0
                  |L1.306|
;;;245      }
;;;246      return r;
000132  4628              MOV      r0,r5
;;;247    }
000134  e8bd83fe          POP      {r1-r9,pc}
;;;248    
                          ENDP

                  _WrapGetNumBytesToNextLine PROC
;;;252    */
;;;253    static int _WrapGetNumBytesToNextLine(MULTIEDIT_HANDLE hObj, const MULTIEDIT_OBJ* pObj, const char* pText) {
000138  e92d47f0          PUSH     {r4-r10,lr}
00013c  4680              MOV      r8,r0
00013e  460d              MOV      r5,r1
000140  4616              MOV      r6,r2
;;;254      int xSize, r;
;;;255      xSize = _GetXSize(hObj, pObj);
000142  4629              MOV      r1,r5
000144  4640              MOV      r0,r8
000146  f7fffffe          BL       _GetXSize
00014a  4681              MOV      r9,r0
;;;256      if (pObj->Flags & MULTIEDIT_SF_PASSWORD) {
00014c  f8950078          LDRB     r0,[r5,#0x78]
000150  f0000020          AND      r0,r0,#0x20
000154  b1b0              CBZ      r0,|L1.388|
;;;257        int NumChars, NumCharsPrompt;
;;;258        NumCharsPrompt = _GetNumCharsInPrompt(pObj, pText);
000156  4631              MOV      r1,r6
000158  4628              MOV      r0,r5
00015a  f7fffffe          BL       _GetNumCharsInPrompt
00015e  4682              MOV      r10,r0
;;;259        NumChars = _WrapGetNumCharsDisp(hObj, pObj, pText);
000160  4632              MOV      r2,r6
000162  4629              MOV      r1,r5
000164  4640              MOV      r0,r8
000166  f7fffffe          BL       _WrapGetNumCharsDisp
00016a  4607              MOV      r7,r0
;;;260        r        = GUI_UC__NumChars2NumBytes(pText, NumChars);
00016c  4639              MOV      r1,r7
00016e  4630              MOV      r0,r6
000170  f7fffffe          BL       GUI_UC__NumChars2NumBytes
000174  4604              MOV      r4,r0
;;;261        if (NumChars < NumCharsPrompt) {
000176  4557              CMP      r7,r10
000178  da03              BGE      |L1.386|
;;;262          if (*(pText + r) == '\n') {
00017a  5d30              LDRB     r0,[r6,r4]
00017c  280a              CMP      r0,#0xa
00017e  d100              BNE      |L1.386|
;;;263            r++;
000180  1c64              ADDS     r4,r4,#1
                  |L1.386|
;;;264          }
;;;265        }
;;;266      } else {
000182  e006              B        |L1.402|
                  |L1.388|
;;;267        r = GUI__WrapGetNumBytesToNextLine(pText, xSize, pObj->WrapMode);
000184  f895207c          LDRB     r2,[r5,#0x7c]
000188  4649              MOV      r1,r9
00018a  4630              MOV      r0,r6
00018c  f7fffffe          BL       GUI__WrapGetNumBytesToNextLine
000190  4604              MOV      r4,r0
                  |L1.402|
;;;268      }
;;;269      return r;
000192  4620              MOV      r0,r4
;;;270    }
000194  e8bd87f0          POP      {r4-r10,pc}
;;;271    
                          ENDP

                  _GetCharDistX PROC
;;;275    */
;;;276    static int _GetCharDistX(const MULTIEDIT_OBJ* pObj, const char* pText) {
000198  e92d41f0          PUSH     {r4-r8,lr}
00019c  4604              MOV      r4,r0
00019e  460d              MOV      r5,r1
;;;277      int r;
;;;278      if ((pObj->Flags & MULTIEDIT_SF_PASSWORD) && (_GetNumCharsInPrompt(pObj, pText) == 0)) {
0001a0  f8940078          LDRB     r0,[r4,#0x78]
0001a4  f0000020          AND      r0,r0,#0x20
0001a8  b148              CBZ      r0,|L1.446|
0001aa  4629              MOV      r1,r5
0001ac  4620              MOV      r0,r4
0001ae  f7fffffe          BL       _GetNumCharsInPrompt
0001b2  b920              CBNZ     r0,|L1.446|
;;;279        r = GUI_GetCharDistX(MULTIEDIT_PASSWORD_CHAR);
0001b4  202a              MOVS     r0,#0x2a
0001b6  f7fffffe          BL       GUI_GetCharDistX
0001ba  4606              MOV      r6,r0
0001bc  e008              B        |L1.464|
                  |L1.446|
;;;280      } else {
;;;281        U16 c;
;;;282        c = GUI_UC_GetCharCode(pText);
0001be  4628              MOV      r0,r5
0001c0  f7fffffe          BL       GUI_UC_GetCharCode
0001c4  4607              MOV      r7,r0
;;;283        r = GUI_GetCharDistX(c);
0001c6  4638              MOV      r0,r7
0001c8  f7fffffe          BL       GUI_GetCharDistX
0001cc  4606              MOV      r6,r0
;;;284      }
0001ce  bf00              NOP      
                  |L1.464|
;;;285      return r;
0001d0  4630              MOV      r0,r6
;;;286    }
0001d2  e8bd81f0          POP      {r4-r8,pc}
;;;287    
                          ENDP

                  _DispString PROC
;;;291    */
;;;292    static void _DispString(MULTIEDIT_HANDLE hObj, const MULTIEDIT_OBJ* pObj, const char* pText, GUI_RECT* pRect) {
0001d6  e92d5ff0          PUSH     {r4-r12,lr}
0001da  4683              MOV      r11,r0
0001dc  460c              MOV      r4,r1
0001de  4690              MOV      r8,r2
0001e0  461d              MOV      r5,r3
;;;293      int NumCharsDisp;
;;;294      NumCharsDisp = _WrapGetNumCharsDisp(hObj, pObj, pText);
0001e2  4642              MOV      r2,r8
0001e4  4621              MOV      r1,r4
0001e6  4658              MOV      r0,r11
0001e8  f7fffffe          BL       _WrapGetNumCharsDisp
0001ec  4606              MOV      r6,r0
;;;295      if (pObj->Flags & MULTIEDIT_SF_PASSWORD) {
0001ee  f8940078          LDRB     r0,[r4,#0x78]
0001f2  f0000020          AND      r0,r0,#0x20
0001f6  b350              CBZ      r0,|L1.590|
;;;296        int x, NumCharsPrompt, NumCharsLeft = 0;
0001f8  f04f0a00          MOV      r10,#0
;;;297        NumCharsPrompt = _GetNumCharsInPrompt(pObj, pText);
0001fc  4641              MOV      r1,r8
0001fe  4620              MOV      r0,r4
000200  f7fffffe          BL       _GetNumCharsInPrompt
000204  4607              MOV      r7,r0
;;;298        if (NumCharsDisp < NumCharsPrompt) {
000206  42be              CMP      r6,r7
000208  da01              BGE      |L1.526|
;;;299          NumCharsPrompt = NumCharsDisp;
00020a  4637              MOV      r7,r6
00020c  e001              B        |L1.530|
                  |L1.526|
;;;300        } else {
;;;301          NumCharsLeft = NumCharsDisp - NumCharsPrompt;
00020e  eba60a07          SUB      r10,r6,r7
                  |L1.530|
;;;302        }
;;;303        GUI_DispStringInRectMax(pText, pRect, GUI_TA_LEFT, NumCharsPrompt);
000212  463b              MOV      r3,r7
000214  2200              MOVS     r2,#0
000216  4629              MOV      r1,r5
000218  4640              MOV      r0,r8
00021a  f7fffffe          BL       GUI_DispStringInRectMax
;;;304        x = pRect->x0 + GUI__GetLineDistX(pText, NumCharsPrompt);
00021e  4639              MOV      r1,r7
000220  4640              MOV      r0,r8
000222  f7fffffe          BL       GUI__GetLineDistX
000226  f9b51000          LDRSH    r1,[r5,#0]
00022a  eb000901          ADD      r9,r0,r1
;;;305        if (NumCharsLeft) {
00022e  f1ba0f00          CMP      r10,#0
000232  d00b              BEQ      |L1.588|
;;;306          GUI_DispCharAt(MULTIEDIT_PASSWORD_CHAR, x, pRect->y0);
000234  f9b52002          LDRSH    r2,[r5,#2]
000238  fa0ff189          SXTH     r1,r9
00023c  202a              MOVS     r0,#0x2a
00023e  f7fffffe          BL       GUI_DispCharAt
;;;307          GUI_DispChars(MULTIEDIT_PASSWORD_CHAR, NumCharsLeft - 1);
000242  f1aa0101          SUB      r1,r10,#1
000246  202a              MOVS     r0,#0x2a
000248  f7fffffe          BL       GUI_DispChars
                  |L1.588|
;;;308        }
;;;309      } else {
00024c  e006              B        |L1.604|
                  |L1.590|
;;;310        GUI_DispStringInRectMax(pText, pRect, pObj->Align, NumCharsDisp);
00024e  f8b42058          LDRH     r2,[r4,#0x58]
000252  4633              MOV      r3,r6
000254  4629              MOV      r1,r5
000256  4640              MOV      r0,r8
000258  f7fffffe          BL       GUI_DispStringInRectMax
                  |L1.604|
;;;311      }
;;;312    }
00025c  e8bd9ff0          POP      {r4-r12,pc}
;;;313    
                          ENDP

                  _GetpLine PROC
;;;326    */
;;;327    static char * _GetpLine(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj, unsigned LineNumber) {
000260  e92d41f0          PUSH     {r4-r8,lr}
000264  4680              MOV      r8,r0
000266  460c              MOV      r4,r1
000268  4615              MOV      r5,r2
;;;328      char * pText, * pLine;
;;;329      pText = (char*) GUI_ALLOC_h2p(pObj->hText);
00026a  f9b40038          LDRSH    r0,[r4,#0x38]
00026e  f7fffffe          BL       GUI_ALLOC_h2p
000272  4607              MOV      r7,r0
;;;330      if ((unsigned)pObj->CacheLineNumber != LineNumber) {
000274  f8b40052          LDRH     r0,[r4,#0x52]
000278  42a8              CMP      r0,r5
00027a  d01c              BEQ      |L1.694|
;;;331        if (LineNumber > (unsigned)pObj->CacheLineNumber) {
00027c  f8b40052          LDRH     r0,[r4,#0x52]
000280  42a8              CMP      r0,r5
000282  d207              BCS      |L1.660|
;;;332          /* If new line number > cache we can start with old pointer */
;;;333          int OldNumber = pObj->CacheLineNumber;
000284  3450              ADDS     r4,r4,#0x50
000286  8860              LDRH     r0,[r4,#2]
;;;334          pLine = pText + pObj->CacheLinePosByte;
000288  8821              LDRH     r1,[r4,#0]
00028a  19ce              ADDS     r6,r1,r7
;;;335          pObj->CacheLineNumber  = LineNumber;
00028c  8065              STRH     r5,[r4,#2]
00028e  3c50              SUBS     r4,r4,#0x50
;;;336          LineNumber -= OldNumber;
000290  1a2d              SUBS     r5,r5,r0
;;;337        } else {
000292  e002              B        |L1.666|
                  |L1.660|
;;;338          /* If new line number < cache we need to start with first byte */
;;;339          pLine = pText;
000294  463e              MOV      r6,r7
;;;340          pObj->CacheLineNumber  = LineNumber;
000296  f8a45052          STRH     r5,[r4,#0x52]
                  |L1.666|
;;;341        }
;;;342        while (LineNumber--) {
00029a  e005              B        |L1.680|
                  |L1.668|
;;;343          pLine += _WrapGetNumBytesToNextLine(hObj, pObj, pLine);
00029c  4632              MOV      r2,r6
00029e  4621              MOV      r1,r4
0002a0  4640              MOV      r0,r8
0002a2  f7fffffe          BL       _WrapGetNumBytesToNextLine
0002a6  4406              ADD      r6,r6,r0
                  |L1.680|
0002a8  0028              MOVS     r0,r5                 ;342
0002aa  f1a50501          SUB      r5,r5,#1              ;342
0002ae  d1f5              BNE      |L1.668|
;;;344        }
;;;345        pObj->CacheLinePosByte = pLine - pText;
0002b0  1bf0              SUBS     r0,r6,r7
0002b2  f8a40050          STRH     r0,[r4,#0x50]
                  |L1.694|
;;;346      }
;;;347      return pText + pObj->CacheLinePosByte;
0002b6  f8b40050          LDRH     r0,[r4,#0x50]
0002ba  4438              ADD      r0,r0,r7
;;;348    }
0002bc  e8bd81f0          POP      {r4-r8,pc}
;;;349    
                          ENDP

                  _ClearCache PROC
;;;356    */
;;;357    static void _ClearCache(MULTIEDIT_OBJ* pObj) {
0002c0  2100              MOVS     r1,#0
;;;358      pObj->CacheLineNumber = 0;
0002c2  3050              ADDS     r0,r0,#0x50
0002c4  8041              STRH     r1,[r0,#2]
;;;359      pObj->CacheLinePosByte = 0;
0002c6  8001              STRH     r1,[r0,#0]
;;;360      pObj->CacheFirstVisibleByte = 0;
0002c8  80c1              STRH     r1,[r0,#6]
;;;361      pObj->CacheFirstVisibleLine = 0;
0002ca  8081              STRH     r1,[r0,#4]
0002cc  3850              SUBS     r0,r0,#0x50
;;;362    }
0002ce  4770              BX       lr
;;;363    
                          ENDP

                  _GetCursorLine PROC
;;;369    */
;;;370    static int _GetCursorLine(MULTIEDIT_HANDLE hObj, const MULTIEDIT_OBJ* pObj, const char* pText, int CursorPosChar) {
0002d0  e92d4ff8          PUSH     {r3-r11,lr}
0002d4  4683              MOV      r11,r0
0002d6  460d              MOV      r5,r1
0002d8  4614              MOV      r4,r2
0002da  4699              MOV      r9,r3
;;;371      const char *pCursor;
;;;372      const char *pEndLine;
;;;373      int NumChars, ByteOffsetNewCursor, LineNumber = 0;
0002dc  2700              MOVS     r7,#0
;;;374      ByteOffsetNewCursor = GUI_UC__NumChars2NumBytes(pText, CursorPosChar);
0002de  4649              MOV      r1,r9
0002e0  4620              MOV      r0,r4
0002e2  f7fffffe          BL       GUI_UC__NumChars2NumBytes
0002e6  4682              MOV      r10,r0
;;;375      pCursor = pText + ByteOffsetNewCursor;
0002e8  eb04080a          ADD      r8,r4,r10
;;;376      if (pObj->CacheLinePosByte < ByteOffsetNewCursor) {
0002ec  f8b50050          LDRH     r0,[r5,#0x50]
0002f0  4550              CMP      r0,r10
0002f2  da05              BGE      |L1.768|
;;;377        /* If cache pos < new position we can use it as start position */
;;;378        pText      += pObj->CacheLinePosByte;
0002f4  f8b50050          LDRH     r0,[r5,#0x50]
0002f8  4404              ADD      r4,r4,r0
;;;379        LineNumber += pObj->CacheLineNumber;
0002fa  f8b50052          LDRH     r0,[r5,#0x52]
0002fe  4407              ADD      r7,r7,r0
                  |L1.768|
;;;380      }
;;;381      while (*pText && (pCursor > pText)) {
000300  e01b              B        |L1.826|
                  |L1.770|
;;;382        NumChars = _WrapGetNumCharsDisp(hObj, pObj, pText);
000302  4622              MOV      r2,r4
000304  4629              MOV      r1,r5
000306  4658              MOV      r0,r11
000308  f7fffffe          BL       _WrapGetNumCharsDisp
00030c  9000              STR      r0,[sp,#0]
;;;383        pEndLine = pText + GUI_UC__NumChars2NumBytes(pText, NumChars);
00030e  4620              MOV      r0,r4
000310  9900              LDR      r1,[sp,#0]
000312  f7fffffe          BL       GUI_UC__NumChars2NumBytes
000316  1906              ADDS     r6,r0,r4
;;;384        pText   += _WrapGetNumBytesToNextLine(hObj, pObj, pText);
000318  4622              MOV      r2,r4
00031a  4629              MOV      r1,r5
00031c  4658              MOV      r0,r11
00031e  f7fffffe          BL       _WrapGetNumBytesToNextLine
000322  4404              ADD      r4,r4,r0
;;;385        if (pCursor <= pEndLine) {
000324  45b0              CMP      r8,r6
000326  d807              BHI      |L1.824|
;;;386          if ((pCursor == pEndLine) && (pEndLine == pText) && *pText) {
000328  45b0              CMP      r8,r6
00032a  d104              BNE      |L1.822|
00032c  42a6              CMP      r6,r4
00032e  d102              BNE      |L1.822|
000330  7820              LDRB     r0,[r4,#0]
000332  b100              CBZ      r0,|L1.822|
;;;387            LineNumber++;
000334  1c7f              ADDS     r7,r7,#1
                  |L1.822|
;;;388          }
;;;389          break;
000336  e004              B        |L1.834|
                  |L1.824|
;;;390        }
;;;391        LineNumber++;
000338  1c7f              ADDS     r7,r7,#1
                  |L1.826|
00033a  7820              LDRB     r0,[r4,#0]            ;381
00033c  b108              CBZ      r0,|L1.834|
00033e  45a0              CMP      r8,r4                 ;381
000340  d8df              BHI      |L1.770|
                  |L1.834|
000342  bf00              NOP                            ;389
;;;392      }
;;;393      return LineNumber;
000344  4638              MOV      r0,r7
;;;394    }
000346  e8bd8ff8          POP      {r3-r11,pc}
;;;395    
                          ENDP

                  _GetCursorXY PROC
;;;399    */
;;;400    static void _GetCursorXY(MULTIEDIT_HANDLE hObj, /*const*/ MULTIEDIT_OBJ* pObj, int* px, int* py) {
00034a  e92d4fff          PUSH     {r0-r11,lr}
00034e  b083              SUB      sp,sp,#0xc
000350  460c              MOV      r4,r1
000352  4617              MOV      r7,r2
000354  4698              MOV      r8,r3
;;;401      if (pObj->InvalidFlags & INVALID_CURSORXY) {
000356  f8940079          LDRB     r0,[r4,#0x79]
00035a  f0000008          AND      r0,r0,#8
00035e  2800              CMP      r0,#0
000360  d065              BEQ      |L1.1070|
;;;402        int CursorLine = 0, x = 0;
000362  f04f0900          MOV      r9,#0
000366  2600              MOVS     r6,#0
;;;403        GUI_SetFont(pObj->pFont);
000368  6f60              LDR      r0,[r4,#0x74]
00036a  f7fffffe          BL       GUI_SetFont
;;;404        if (pObj->hText) {
00036e  8f20              LDRH     r0,[r4,#0x38]
000370  2800              CMP      r0,#0
000372  d04c              BEQ      |L1.1038|
;;;405          const char *pLine;
;;;406          const char *pCursor;
;;;407          pLine      = (const char *)GUI_ALLOC_h2p(pObj->hText);
000374  f9b40038          LDRSH    r0,[r4,#0x38]
000378  f7fffffe          BL       GUI_ALLOC_h2p
00037c  4605              MOV      r5,r0
;;;408          pCursor    = pLine + pObj->CursorPosByte;
00037e  f8b4004a          LDRH     r0,[r4,#0x4a]
000382  eb000a05          ADD      r10,r0,r5
;;;409          CursorLine = pObj->CursorLine;
000386  f8b49046          LDRH     r9,[r4,#0x46]
;;;410          pLine      = _GetpLine(hObj, pObj, CursorLine);
00038a  464a              MOV      r2,r9
00038c  4621              MOV      r1,r4
00038e  9803              LDR      r0,[sp,#0xc]
000390  f7fffffe          BL       _GetpLine
000394  4605              MOV      r5,r0
;;;411          if ((pObj->Flags & MULTIEDIT_SF_PASSWORD)) {
000396  f8940078          LDRB     r0,[r4,#0x78]
00039a  f0000020          AND      r0,r0,#0x20
00039e  b160              CBZ      r0,|L1.954|
;;;412            while (pLine < pCursor) {
0003a0  e008              B        |L1.948|
                  |L1.930|
;;;413              x     += _GetCharDistX(pObj, pLine);
0003a2  4629              MOV      r1,r5
0003a4  4620              MOV      r0,r4
0003a6  f7fffffe          BL       _GetCharDistX
0003aa  4406              ADD      r6,r6,r0
;;;414              pLine += GUI_UC_GetCharSize(pLine);
0003ac  4628              MOV      r0,r5
0003ae  f7fffffe          BL       GUI_UC_GetCharSize
0003b2  4405              ADD      r5,r5,r0
                  |L1.948|
0003b4  4555              CMP      r5,r10                ;412
0003b6  d3f4              BCC      |L1.930|
0003b8  e028              B        |L1.1036|
                  |L1.954|
;;;415            }
;;;416          } else {
;;;417            int xSize;
;;;418            const char *p;
;;;419            int NumChars = 0, NumCharsToNextLine;
0003ba  f04f0b00          MOV      r11,#0
;;;420            xSize = _GetXSize(hObj, pObj);
0003be  4621              MOV      r1,r4
0003c0  9803              LDR      r0,[sp,#0xc]
0003c2  f7fffffe          BL       _GetXSize
0003c6  9002              STR      r0,[sp,#8]
;;;421            p = pLine;
0003c8  9501              STR      r5,[sp,#4]
;;;422            while (pLine < pCursor) {
0003ca  e005              B        |L1.984|
                  |L1.972|
;;;423              NumChars++;
0003cc  f10b0b01          ADD      r11,r11,#1
;;;424              pLine += GUI_UC_GetCharSize(pLine);
0003d0  4628              MOV      r0,r5
0003d2  f7fffffe          BL       GUI_UC_GetCharSize
0003d6  4405              ADD      r5,r5,r0
                  |L1.984|
0003d8  4555              CMP      r5,r10                ;422
0003da  d3f7              BCC      |L1.972|
;;;425            }
;;;426            NumCharsToNextLine = _WrapGetNumCharsDisp(hObj, pObj, p);
0003dc  4621              MOV      r1,r4
0003de  9a01              LDR      r2,[sp,#4]
0003e0  9803              LDR      r0,[sp,#0xc]
0003e2  f7fffffe          BL       _WrapGetNumCharsDisp
0003e6  9000              STR      r0,[sp,#0]
;;;427            x = GUI__GetCursorPosX(p, NumChars, NumCharsToNextLine);
0003e8  4659              MOV      r1,r11
0003ea  e9dd2000          LDRD     r2,r0,[sp,#0]
0003ee  f7fffffe          BL       GUI__GetCursorPosX
0003f2  4606              MOV      r6,r0
;;;428            if (pObj->Align == GUI_TA_RIGHT) {
0003f4  f8b40058          LDRH     r0,[r4,#0x58]
0003f8  2801              CMP      r0,#1
0003fa  d106              BNE      |L1.1034|
;;;429              x += xSize - GUI__GetLineDistX(p, NumCharsToNextLine);
0003fc  e9dd1000          LDRD     r1,r0,[sp,#0]
000400  f7fffffe          BL       GUI__GetLineDistX
000404  9902              LDR      r1,[sp,#8]
000406  1a08              SUBS     r0,r1,r0
000408  4406              ADD      r6,r6,r0
                  |L1.1034|
;;;430            }
;;;431          }
00040a  bf00              NOP      
                  |L1.1036|
;;;432        }
00040c  bf00              NOP      
                  |L1.1038|
;;;433        pObj->CursorPosX = x;
00040e  b230              SXTH     r0,r6
000410  f8a4004c          STRH     r0,[r4,#0x4c]
;;;434        pObj->CursorPosY = CursorLine * GUI_GetFontDistY();
000414  f7fffffe          BL       GUI_GetFontDistY
000418  fb00f009          MUL      r0,r0,r9
00041c  f8a4004e          STRH     r0,[r4,#0x4e]
;;;435        pObj->InvalidFlags &= ~INVALID_CURSORXY;
000420  f8940079          LDRB     r0,[r4,#0x79]
000424  f0200008          BIC      r0,r0,#8
000428  f8840079          STRB     r0,[r4,#0x79]
;;;436      }
00042c  bf00              NOP      
                  |L1.1070|
;;;437      *px = pObj->CursorPosX;
00042e  f9b4004c          LDRSH    r0,[r4,#0x4c]
000432  6038              STR      r0,[r7,#0]
;;;438      *py = pObj->CursorPosY;
000434  f8b4004e          LDRH     r0,[r4,#0x4e]
000438  f8c80000          STR      r0,[r8,#0]
;;;439    }
00043c  b007              ADD      sp,sp,#0x1c
00043e  e8bd8ff0          POP      {r4-r11,pc}
;;;440    
                          ENDP

                  _InvalidateCursorXY PROC
;;;444    */
;;;445    static void _InvalidateCursorXY(MULTIEDIT_OBJ * pObj) {
000442  f8901079          LDRB     r1,[r0,#0x79]
;;;446      pObj->InvalidFlags |= INVALID_CURSORXY;
000446  f0410108          ORR      r1,r1,#8
00044a  f8801079          STRB     r1,[r0,#0x79]
;;;447    }
00044e  4770              BX       lr
;;;448    
                          ENDP

                  _SetScrollState PROC
;;;452    */
;;;453    static void _SetScrollState(WM_HWIN hObj) {
000450  b570              PUSH     {r4-r6,lr}
000452  4605              MOV      r5,r0
;;;454      MULTIEDIT_OBJ* pObj = MULTIEDIT_H2P(hObj);
000454  4628              MOV      r0,r5
000456  f7fffffe          BL       GUI_ALLOC_h2p
00045a  4604              MOV      r4,r0
;;;455      WIDGET__SetScrollState(hObj, &pObj->ScrollStateV, &pObj->ScrollStateH);
00045c  f1040268          ADD      r2,r4,#0x68
000460  f104015c          ADD      r1,r4,#0x5c
000464  4628              MOV      r0,r5
000466  f7fffffe          BL       WIDGET__SetScrollState
;;;456    }
00046a  bd70              POP      {r4-r6,pc}
;;;457    
                          ENDP

                  _CalcScrollPos PROC
;;;467    */
;;;468    static void _CalcScrollPos(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj) {
00046c  b57c              PUSH     {r2-r6,lr}
00046e  4605              MOV      r5,r0
000470  460c              MOV      r4,r1
;;;469      int xCursor, yCursor;
;;;470      _GetCursorXY(hObj, pObj, &xCursor, &yCursor);
000472  466b              MOV      r3,sp
000474  aa01              ADD      r2,sp,#4
000476  4621              MOV      r1,r4
000478  4628              MOV      r0,r5
00047a  f7fffffe          BL       _GetCursorXY
;;;471      yCursor /= GUI_GetYDistOfFont(pObj->pFont);
00047e  6f60              LDR      r0,[r4,#0x74]
000480  f7fffffe          BL       GUI_GetYDistOfFont
000484  9900              LDR      r1,[sp,#0]
000486  fb91f0f0          SDIV     r0,r1,r0
00048a  9000              STR      r0,[sp,#0]
;;;472      WM_CheckScrollPos(&pObj->ScrollStateV, yCursor, 0, 0);       /* Vertical */
00048c  2300              MOVS     r3,#0
00048e  461a              MOV      r2,r3
000490  f104005c          ADD      r0,r4,#0x5c
000494  9900              LDR      r1,[sp,#0]
000496  f7fffffe          BL       WM_CheckScrollPos
;;;473      if (pObj->Align == GUI_TA_RIGHT) {
00049a  f8b40058          LDRH     r0,[r4,#0x58]
00049e  2801              CMP      r0,#1
0004a0  d106              BNE      |L1.1200|
;;;474        xCursor = _GetXSize(hObj, pObj) - xCursor;
0004a2  4621              MOV      r1,r4
0004a4  4628              MOV      r0,r5
0004a6  f7fffffe          BL       _GetXSize
0004aa  9901              LDR      r1,[sp,#4]
0004ac  1a40              SUBS     r0,r0,r1
0004ae  9001              STR      r0,[sp,#4]
                  |L1.1200|
;;;475      }
;;;476      WM_CheckScrollPos(&pObj->ScrollStateH, xCursor, 30, 30);     /* Horizontal */
0004b0  231e              MOVS     r3,#0x1e
0004b2  461a              MOV      r2,r3
0004b4  f1040068          ADD      r0,r4,#0x68
0004b8  9901              LDR      r1,[sp,#4]
0004ba  f7fffffe          BL       WM_CheckScrollPos
;;;477      _SetScrollState(hObj);
0004be  4628              MOV      r0,r5
0004c0  f7fffffe          BL       _SetScrollState
;;;478    }
0004c4  bd7c              POP      {r2-r6,pc}
;;;479    
                          ENDP

                  _GetTextSizeX PROC
;;;485    */
;;;486    static int _GetTextSizeX(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj) {
0004c6  e92d47f0          PUSH     {r4-r10,lr}
0004ca  4681              MOV      r9,r0
0004cc  460c              MOV      r4,r1
;;;487      if (pObj->InvalidFlags & INVALID_TEXTSIZE) {
0004ce  f8940079          LDRB     r0,[r4,#0x79]
0004d2  f0000004          AND      r0,r0,#4
0004d6  2800              CMP      r0,#0
0004d8  d046              BEQ      |L1.1384|
;;;488        pObj->TextSizeX = 0;
0004da  2000              MOVS     r0,#0
0004dc  f8a40042          STRH     r0,[r4,#0x42]
;;;489        if (pObj->hText) {
0004e0  8f20              LDRH     r0,[r4,#0x38]
0004e2  2800              CMP      r0,#0
0004e4  d03a              BEQ      |L1.1372|
;;;490          int NumChars, xSizeLine;
;;;491          char *pText, *pLine;
;;;492          GUI_SetFont(pObj->pFont);
0004e6  6f60              LDR      r0,[r4,#0x74]
0004e8  f7fffffe          BL       GUI_SetFont
;;;493          pText = (char*) GUI_ALLOC_h2p(pObj->hText);
0004ec  f9b40038          LDRSH    r0,[r4,#0x38]
0004f0  f7fffffe          BL       GUI_ALLOC_h2p
0004f4  4606              MOV      r6,r0
;;;494          do {
0004f6  bf00              NOP      
                  |L1.1272|
;;;495            NumChars = _WrapGetNumCharsDisp(hObj, pObj, pText);
0004f8  4632              MOV      r2,r6
0004fa  4621              MOV      r1,r4
0004fc  4648              MOV      r0,r9
0004fe  f7fffffe          BL       _WrapGetNumCharsDisp
000502  4680              MOV      r8,r0
;;;496            xSizeLine = 0;
000504  2500              MOVS     r5,#0
;;;497            pLine = pText;
000506  4637              MOV      r7,r6
;;;498            if (pObj->Flags & MULTIEDIT_SF_PASSWORD) {
000508  f8940078          LDRB     r0,[r4,#0x78]
00050c  f0000020          AND      r0,r0,#0x20
000510  b178              CBZ      r0,|L1.1330|
;;;499              while (NumChars--) {
000512  e008              B        |L1.1318|
                  |L1.1300|
;;;500                xSizeLine += _GetCharDistX(pObj, pLine);
000514  4639              MOV      r1,r7
000516  4620              MOV      r0,r4
000518  f7fffffe          BL       _GetCharDistX
00051c  4405              ADD      r5,r5,r0
;;;501                pLine     += GUI_UC_GetCharSize(pLine);
00051e  4638              MOV      r0,r7
000520  f7fffffe          BL       GUI_UC_GetCharSize
000524  4407              ADD      r7,r7,r0
                  |L1.1318|
000526  ea5f0008          MOVS     r0,r8                 ;499
00052a  f1a80801          SUB      r8,r8,#1              ;499
00052e  d1f1              BNE      |L1.1300|
000530  e004              B        |L1.1340|
                  |L1.1330|
;;;502              }
;;;503            } else {
;;;504              xSizeLine += GUI__GetLineDistX(pLine, NumChars);
000532  4641              MOV      r1,r8
000534  4638              MOV      r0,r7
000536  f7fffffe          BL       GUI__GetLineDistX
00053a  4405              ADD      r5,r5,r0
                  |L1.1340|
;;;505            }
;;;506            if (xSizeLine > pObj->TextSizeX) {
00053c  f8b40042          LDRH     r0,[r4,#0x42]
000540  42a8              CMP      r0,r5
000542  da01              BGE      |L1.1352|
;;;507              pObj->TextSizeX = xSizeLine;
000544  f8a45042          STRH     r5,[r4,#0x42]
                  |L1.1352|
;;;508            }
;;;509            pText += _WrapGetNumBytesToNextLine(hObj, pObj, pText);
000548  4632              MOV      r2,r6
00054a  4621              MOV      r1,r4
00054c  4648              MOV      r0,r9
00054e  f7fffffe          BL       _WrapGetNumBytesToNextLine
000552  4406              ADD      r6,r6,r0
;;;510          } while (*pText);
000554  7830              LDRB     r0,[r6,#0]
000556  2800              CMP      r0,#0
000558  d1ce              BNE      |L1.1272|
;;;511        }
00055a  bf00              NOP      
                  |L1.1372|
;;;512        pObj->InvalidFlags &= ~INVALID_TEXTSIZE;
00055c  f8940079          LDRB     r0,[r4,#0x79]
000560  f0200004          BIC      r0,r0,#4
000564  f8840079          STRB     r0,[r4,#0x79]
                  |L1.1384|
;;;513      }
;;;514      return pObj->TextSizeX;
000568  f8b40042          LDRH     r0,[r4,#0x42]
;;;515    }
00056c  e8bd87f0          POP      {r4-r10,pc}
;;;516    
                          ENDP

                  _GetNumVisLines PROC
;;;520    */
;;;521    static int _GetNumVisLines(MULTIEDIT_HANDLE hObj, const MULTIEDIT_OBJ* pObj) {
000570  b57c              PUSH     {r2-r6,lr}
000572  4605              MOV      r5,r0
000574  460c              MOV      r4,r1
;;;522      GUI_RECT Rect;
;;;523      WM_GetInsideRectExScrollbar(hObj, &Rect);
000576  4669              MOV      r1,sp
000578  4628              MOV      r0,r5
00057a  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;524      return (Rect.y1 - Rect.y0 + 1) / GUI_GetYDistOfFont(pObj->pFont);
00057e  6f60              LDR      r0,[r4,#0x74]
000580  f7fffffe          BL       GUI_GetYDistOfFont
000584  f9bd1006          LDRSH    r1,[sp,#6]
000588  f9bd2002          LDRSH    r2,[sp,#2]
00058c  1a89              SUBS     r1,r1,r2
00058e  1c49              ADDS     r1,r1,#1
000590  fb91f0f0          SDIV     r0,r1,r0
;;;525    }
000594  bd7c              POP      {r2-r6,pc}
;;;526    
                          ENDP

                  _GetNumLines PROC
;;;532    */
;;;533    static int _GetNumLines(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ * pObj) {
000596  e92d47f0          PUSH     {r4-r10,lr}
00059a  4681              MOV      r9,r0
00059c  460c              MOV      r4,r1
;;;534      if (pObj->InvalidFlags & INVALID_NUMLINES) {
00059e  f8940079          LDRB     r0,[r4,#0x79]
0005a2  f0000002          AND      r0,r0,#2
0005a6  2800              CMP      r0,#0
0005a8  d030              BEQ      |L1.1548|
;;;535        int NumLines = 0;
0005aa  2700              MOVS     r7,#0
;;;536        if (pObj->hText) {
0005ac  8f20              LDRH     r0,[r4,#0x38]
0005ae  b318              CBZ      r0,|L1.1528|
;;;537          int NumChars, NumBytes;
;;;538          char *pText;
;;;539          U16 Char;
;;;540          pText = (char*) GUI_ALLOC_h2p(pObj->hText);
0005b0  f9b40038          LDRSH    r0,[r4,#0x38]
0005b4  f7fffffe          BL       GUI_ALLOC_h2p
0005b8  4605              MOV      r5,r0
;;;541          GUI_SetFont(pObj->pFont);
0005ba  6f60              LDR      r0,[r4,#0x74]
0005bc  f7fffffe          BL       GUI_SetFont
;;;542          do {
0005c0  bf00              NOP      
                  |L1.1474|
;;;543            NumChars = _WrapGetNumCharsDisp(hObj, pObj, pText);
0005c2  462a              MOV      r2,r5
0005c4  4621              MOV      r1,r4
0005c6  4648              MOV      r0,r9
0005c8  f7fffffe          BL       _WrapGetNumCharsDisp
0005cc  4682              MOV      r10,r0
;;;544            NumBytes = GUI_UC__NumChars2NumBytes(pText, NumChars);
0005ce  4651              MOV      r1,r10
0005d0  4628              MOV      r0,r5
0005d2  f7fffffe          BL       GUI_UC__NumChars2NumBytes
0005d6  4680              MOV      r8,r0
;;;545            Char     = GUI_UC_GetCharCode(pText + NumBytes);
0005d8  eb050008          ADD      r0,r5,r8
0005dc  f7fffffe          BL       GUI_UC_GetCharCode
0005e0  4606              MOV      r6,r0
;;;546            if (Char) {
0005e2  b106              CBZ      r6,|L1.1510|
;;;547              NumLines++;
0005e4  1c7f              ADDS     r7,r7,#1
                  |L1.1510|
;;;548            }
;;;549            pText += _WrapGetNumBytesToNextLine(hObj, pObj, pText);
0005e6  462a              MOV      r2,r5
0005e8  4621              MOV      r1,r4
0005ea  4648              MOV      r0,r9
0005ec  f7fffffe          BL       _WrapGetNumBytesToNextLine
0005f0  4405              ADD      r5,r5,r0
;;;550          } while (Char);
0005f2  2e00              CMP      r6,#0
0005f4  d1e5              BNE      |L1.1474|
;;;551        }
0005f6  bf00              NOP      
                  |L1.1528|
;;;552        pObj->NumLines = NumLines + 1;
0005f8  1c78              ADDS     r0,r7,#1
0005fa  f8a40040          STRH     r0,[r4,#0x40]
;;;553        pObj->InvalidFlags &= ~INVALID_NUMLINES;
0005fe  f8940079          LDRB     r0,[r4,#0x79]
000602  f0200002          BIC      r0,r0,#2
000606  f8840079          STRB     r0,[r4,#0x79]
;;;554      }
00060a  bf00              NOP      
                  |L1.1548|
;;;555      return pObj->NumLines;
00060c  f8b40040          LDRH     r0,[r4,#0x40]
;;;556    }
000610  e8bd87f0          POP      {r4-r10,pc}
;;;557    
                          ENDP

                  _InvalidateNumLines PROC
;;;563    */
;;;564    static void _InvalidateNumLines(MULTIEDIT_OBJ * pObj) {
000614  f8901079          LDRB     r1,[r0,#0x79]
;;;565      pObj->InvalidFlags |= INVALID_NUMLINES;
000618  f0410102          ORR      r1,r1,#2
00061c  f8801079          STRB     r1,[r0,#0x79]
;;;566    }
000620  4770              BX       lr
;;;567    
                          ENDP

                  _InvalidateTextSizeX PROC
;;;573    */
;;;574    static void _InvalidateTextSizeX(MULTIEDIT_OBJ * pObj) {
000622  f8901079          LDRB     r1,[r0,#0x79]
;;;575      pObj->InvalidFlags |= INVALID_TEXTSIZE;
000626  f0410104          ORR      r1,r1,#4
00062a  f8801079          STRB     r1,[r0,#0x79]
;;;576    }
00062e  4770              BX       lr
;;;577    
                          ENDP

                  _CalcScrollParas PROC
;;;584    */
;;;585    static void _CalcScrollParas(MULTIEDIT_HANDLE hObj) {
000630  b570              PUSH     {r4-r6,lr}
000632  4605              MOV      r5,r0
;;;586      MULTIEDIT_OBJ* pObj = MULTIEDIT_H2P(hObj);
000634  4628              MOV      r0,r5
000636  f7fffffe          BL       GUI_ALLOC_h2p
00063a  4604              MOV      r4,r0
;;;587      /* Calc vertical scroll parameters */
;;;588      pObj->ScrollStateV.NumItems = _GetNumLines(hObj, pObj);
00063c  4621              MOV      r1,r4
00063e  4628              MOV      r0,r5
000640  f7fffffe          BL       _GetNumLines
000644  65e0              STR      r0,[r4,#0x5c]
;;;589      pObj->ScrollStateV.PageSize = _GetNumVisLines(hObj, pObj);
000646  4621              MOV      r1,r4
000648  4628              MOV      r0,r5
00064a  f7fffffe          BL       _GetNumVisLines
00064e  6660              STR      r0,[r4,#0x64]
;;;590      /* Calc horizontal scroll parameters */
;;;591      pObj->ScrollStateH.NumItems = _GetTextSizeX(hObj, pObj);
000650  4621              MOV      r1,r4
000652  4628              MOV      r0,r5
000654  f7fffffe          BL       _GetTextSizeX
000658  66a0              STR      r0,[r4,#0x68]
;;;592      pObj->ScrollStateH.PageSize = _GetXSize(hObj, pObj);
00065a  4621              MOV      r1,r4
00065c  4628              MOV      r0,r5
00065e  f7fffffe          BL       _GetXSize
000662  6720              STR      r0,[r4,#0x70]
;;;593      _CalcScrollPos(hObj, pObj);
000664  4621              MOV      r1,r4
000666  4628              MOV      r0,r5
000668  f7fffffe          BL       _CalcScrollPos
;;;594    }
00066c  bd70              POP      {r4-r6,pc}
;;;595    
                          ENDP

                  _ManageAutoScrollV PROC
;;;599    */
;;;600    static void _ManageAutoScrollV(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj) {
00066e  e92d41f0          PUSH     {r4-r8,lr}
000672  4606              MOV      r6,r0
000674  460c              MOV      r4,r1
;;;601      if (pObj->Flags & MULTIEDIT_SF_AUTOSCROLLBAR_V) {
000676  f8940078          LDRB     r0,[r4,#0x78]
00067a  f0000008          AND      r0,r0,#8
00067e  b308              CBZ      r0,|L1.1732|
;;;602        char IsRequired = _GetNumVisLines(hObj, pObj) < _GetNumLines(hObj, pObj);
000680  4621              MOV      r1,r4
000682  4630              MOV      r0,r6
000684  f7fffffe          BL       _GetNumVisLines
000688  4607              MOV      r7,r0
00068a  4621              MOV      r1,r4
00068c  4630              MOV      r0,r6
00068e  f7fffffe          BL       _GetNumLines
000692  4287              CMP      r7,r0
000694  da01              BGE      |L1.1690|
000696  2001              MOVS     r0,#1
000698  e000              B        |L1.1692|
                  |L1.1690|
00069a  2000              MOVS     r0,#0
                  |L1.1692|
00069c  4605              MOV      r5,r0
;;;603        if (WM_SetScrollbarV(hObj, IsRequired) != IsRequired) {
00069e  4629              MOV      r1,r5
0006a0  4630              MOV      r0,r6
0006a2  f7fffffe          BL       WM_SetScrollbarV
0006a6  42a8              CMP      r0,r5
0006a8  d00b              BEQ      |L1.1730|
;;;604          _InvalidateNumLines(pObj);
0006aa  4620              MOV      r0,r4
0006ac  f7fffffe          BL       _InvalidateNumLines
;;;605          _InvalidateTextSizeX(pObj);
0006b0  4620              MOV      r0,r4
0006b2  f7fffffe          BL       _InvalidateTextSizeX
;;;606          _InvalidateCursorXY(pObj);
0006b6  4620              MOV      r0,r4
0006b8  f7fffffe          BL       _InvalidateCursorXY
;;;607          _ClearCache(pObj);
0006bc  4620              MOV      r0,r4
0006be  f7fffffe          BL       _ClearCache
                  |L1.1730|
;;;608        }
;;;609      }
0006c2  bf00              NOP      
                  |L1.1732|
;;;610    }
0006c4  e8bd81f0          POP      {r4-r8,pc}
;;;611    
                          ENDP

                  _ManageScrollers PROC
;;;621    */
;;;622    static void _ManageScrollers(MULTIEDIT_HANDLE hObj) {
0006c8  e92d41f0          PUSH     {r4-r8,lr}
0006cc  4606              MOV      r6,r0
;;;623      MULTIEDIT_OBJ* pObj;
;;;624      pObj = MULTIEDIT_H2P(hObj);
0006ce  4630              MOV      r0,r6
0006d0  f7fffffe          BL       GUI_ALLOC_h2p
0006d4  4604              MOV      r4,r0
;;;625      /* 1. Step: Check if vertical scrollbar is required */
;;;626      _ManageAutoScrollV(hObj, pObj);
0006d6  4621              MOV      r1,r4
0006d8  4630              MOV      r0,r6
0006da  f7fffffe          BL       _ManageAutoScrollV
;;;627      /* 2. Step: Check if horizontal scrollbar is required */
;;;628      if (pObj->Flags & MULTIEDIT_SF_AUTOSCROLLBAR_H) {
0006de  f8940078          LDRB     r0,[r4,#0x78]
0006e2  f0000010          AND      r0,r0,#0x10
0006e6  b1c8              CBZ      r0,|L1.1820|
;;;629        char IsRequired;
;;;630        IsRequired = (_GetXSize(hObj, pObj) < _GetTextSizeX(hObj, pObj));
0006e8  4621              MOV      r1,r4
0006ea  4630              MOV      r0,r6
0006ec  f7fffffe          BL       _GetXSize
0006f0  4607              MOV      r7,r0
0006f2  4621              MOV      r1,r4
0006f4  4630              MOV      r0,r6
0006f6  f7fffffe          BL       _GetTextSizeX
0006fa  4287              CMP      r7,r0
0006fc  da01              BGE      |L1.1794|
0006fe  2001              MOVS     r0,#1
000700  e000              B        |L1.1796|
                  |L1.1794|
000702  2000              MOVS     r0,#0
                  |L1.1796|
000704  4605              MOV      r5,r0
;;;631        if (WM_SetScrollbarH(hObj, IsRequired) != IsRequired) {
000706  4629              MOV      r1,r5
000708  4630              MOV      r0,r6
00070a  f7fffffe          BL       WM_SetScrollbarH
00070e  42a8              CMP      r0,r5
000710  d003              BEQ      |L1.1818|
;;;632          /* 3. Step: Check vertical scrollbar again if horizontal has changed */
;;;633          _ManageAutoScrollV(hObj, pObj);
000712  4621              MOV      r1,r4
000714  4630              MOV      r0,r6
000716  f7fffffe          BL       _ManageAutoScrollV
                  |L1.1818|
;;;634        }
;;;635      }
00071a  bf00              NOP      
                  |L1.1820|
;;;636      _CalcScrollParas(hObj);
00071c  4630              MOV      r0,r6
00071e  f7fffffe          BL       _CalcScrollParas
;;;637    }
000722  e8bd81f0          POP      {r4-r8,pc}
;;;638    
                          ENDP

                  _Invalidate PROC
;;;642    */
;;;643    static void _Invalidate(MULTIEDIT_HANDLE hObj) {
000726  b510              PUSH     {r4,lr}
000728  4604              MOV      r4,r0
;;;644      _ManageScrollers(hObj);
00072a  4620              MOV      r0,r4
00072c  f7fffffe          BL       _ManageScrollers
;;;645      WM_Invalidate(hObj);
000730  4620              MOV      r0,r4
000732  f7fffffe          BL       WM_InvalidateWindow
;;;646    }
000736  bd10              POP      {r4,pc}
;;;647    
                          ENDP

                  _InvalidateTextArea PROC
;;;653    */
;;;654    static void _InvalidateTextArea(MULTIEDIT_HANDLE hObj) {
000738  b51c              PUSH     {r2-r4,lr}
00073a  4604              MOV      r4,r0
;;;655      GUI_RECT rInsideRect;
;;;656      _ManageScrollers(hObj);
00073c  4620              MOV      r0,r4
00073e  f7fffffe          BL       _ManageScrollers
;;;657      WM_GetInsideRectExScrollbar(hObj, &rInsideRect);
000742  4669              MOV      r1,sp
000744  4620              MOV      r0,r4
000746  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;658      WM_InvalidateRect(hObj, &rInsideRect);
00074a  4669              MOV      r1,sp
00074c  4620              MOV      r0,r4
00074e  f7fffffe          BL       WM_InvalidateRect
;;;659    }
000752  bd1c              POP      {r2-r4,pc}
;;;660    
                          ENDP

                  _InvalidateCursorPos PROC
;;;666    */
;;;667    static int _InvalidateCursorPos(MULTIEDIT_OBJ * pObj) {
000754  4601              MOV      r1,r0
;;;668      int Value;
;;;669      Value = pObj->CursorPosChar;
000756  f8b10048          LDRH     r0,[r1,#0x48]
;;;670      pObj->CursorPosChar = 0xffff;
00075a  f64f72ff          MOV      r2,#0xffff
00075e  f8a12048          STRH     r2,[r1,#0x48]
;;;671      return Value;
;;;672    }
000762  4770              BX       lr
;;;673    
                          ENDP

                  _SetFlag PROC
;;;677    */
;;;678    static void _SetFlag(MULTIEDIT_HANDLE hObj, int OnOff, U8 Flag) {
000764  e92d41f0          PUSH     {r4-r8,lr}
000768  4606              MOV      r6,r0
00076a  460f              MOV      r7,r1
00076c  4615              MOV      r5,r2
;;;679      if (hObj) {
00076e  b19e              CBZ      r6,|L1.1944|
;;;680        MULTIEDIT_OBJ * pObj;
;;;681        WM_LOCK();
;;;682        pObj = MULTIEDIT_H2P(hObj);
000770  4630              MOV      r0,r6
000772  f7fffffe          BL       GUI_ALLOC_h2p
000776  4604              MOV      r4,r0
;;;683        if (OnOff) {
000778  b12f              CBZ      r7,|L1.1926|
;;;684          pObj->Flags |= Flag;
00077a  f8940078          LDRB     r0,[r4,#0x78]
00077e  4328              ORRS     r0,r0,r5
000780  f8840078          STRB     r0,[r4,#0x78]
000784  e004              B        |L1.1936|
                  |L1.1926|
;;;685        } else {
;;;686          pObj->Flags &= ~Flag;
000786  f8940078          LDRB     r0,[r4,#0x78]
00078a  43a8              BICS     r0,r0,r5
00078c  f8840078          STRB     r0,[r4,#0x78]
                  |L1.1936|
;;;687        }
;;;688        _InvalidateTextArea(hObj);
000790  4630              MOV      r0,r6
000792  f7fffffe          BL       _InvalidateTextArea
;;;689        WM_UNLOCK();
;;;690      }
000796  bf00              NOP      
                  |L1.1944|
;;;691    }
000798  e8bd81f0          POP      {r4-r8,pc}
;;;692    
                          ENDP

                  _CalcNextValidCursorPos PROC
;;;705    */
;;;706    static int _CalcNextValidCursorPos(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj, int CursorPosChar, int * pCursorPosByte, int * pCursorLine) {
00079c  e92d4fff          PUSH     {r0-r11,lr}
0007a0  b083              SUB      sp,sp,#0xc
0007a2  460c              MOV      r4,r1
0007a4  4615              MOV      r5,r2
0007a6  469a              MOV      r10,r3
;;;707      if (pObj->hText) {
0007a8  8f20              LDRH     r0,[r4,#0x38]
0007aa  2800              CMP      r0,#0
0007ac  d062              BEQ      |L1.2164|
;;;708        char *pNextLine, *pCursor, *pText;
;;;709        int CursorLine, NumChars, CursorPosByte;
;;;710        pText    = (char*) GUI_ALLOC_h2p(pObj->hText);
0007ae  f9b40038          LDRSH    r0,[r4,#0x38]
0007b2  f7fffffe          BL       GUI_ALLOC_h2p
0007b6  4607              MOV      r7,r0
;;;711        NumChars = _GetNumChars(pObj);
0007b8  4620              MOV      r0,r4
0007ba  f7fffffe          BL       _GetNumChars
0007be  9002              STR      r0,[sp,#8]
;;;712        /* Set offset in valid range */
;;;713        if (CursorPosChar < pObj->NumCharsPrompt) {
0007c0  8fe0              LDRH     r0,[r4,#0x3e]
0007c2  42a8              CMP      r0,r5
0007c4  dd00              BLE      |L1.1992|
;;;714          CursorPosChar = pObj->NumCharsPrompt;
0007c6  8fe5              LDRH     r5,[r4,#0x3e]
                  |L1.1992|
;;;715        }
;;;716        if (CursorPosChar > NumChars) {
0007c8  9802              LDR      r0,[sp,#8]
0007ca  4285              CMP      r5,r0
0007cc  dd00              BLE      |L1.2000|
;;;717          CursorPosChar = NumChars;
0007ce  9d02              LDR      r5,[sp,#8]
                  |L1.2000|
;;;718        }
;;;719        CursorPosByte = GUI_UC__NumChars2NumBytes(pText, CursorPosChar);
0007d0  4629              MOV      r1,r5
0007d2  4638              MOV      r0,r7
0007d4  f7fffffe          BL       GUI_UC__NumChars2NumBytes
0007d8  9001              STR      r0,[sp,#4]
;;;720        CursorLine    = _GetCursorLine(hObj, pObj, pText, CursorPosChar);
0007da  462b              MOV      r3,r5
0007dc  463a              MOV      r2,r7
0007de  4621              MOV      r1,r4
0007e0  9803              LDR      r0,[sp,#0xc]
0007e2  f7fffffe          BL       _GetCursorLine
0007e6  4680              MOV      r8,r0
;;;721        pCursor       = pText + CursorPosByte;
0007e8  9801              LDR      r0,[sp,#4]
0007ea  eb070b00          ADD      r11,r7,r0
;;;722        pNextLine     = _GetpLine(hObj, pObj, CursorLine);
0007ee  4642              MOV      r2,r8
0007f0  4621              MOV      r1,r4
0007f2  9803              LDR      r0,[sp,#0xc]
0007f4  f7fffffe          BL       _GetpLine
0007f8  4606              MOV      r6,r0
;;;723        if (pNextLine > pCursor) {
0007fa  455e              CMP      r6,r11
0007fc  d92b              BLS      |L1.2134|
;;;724          if (pObj->CursorPosChar < CursorPosChar) {
0007fe  f8b40048          LDRH     r0,[r4,#0x48]
000802  42a8              CMP      r0,r5
000804  da01              BGE      |L1.2058|
;;;725            pCursor = pNextLine;
000806  46b3              MOV      r11,r6
000808  e013              B        |L1.2098|
                  |L1.2058|
;;;726          } else {
;;;727            char *pPrevLine;
;;;728            int NumChars;
;;;729            pPrevLine  = _GetpLine(hObj, pObj, CursorLine - 1);
00080a  f1a80201          SUB      r2,r8,#1
00080e  4621              MOV      r1,r4
000810  9803              LDR      r0,[sp,#0xc]
000812  f7fffffe          BL       _GetpLine
000816  4681              MOV      r9,r0
;;;730            NumChars   = _WrapGetNumCharsDisp(hObj, pObj, pPrevLine);
000818  464a              MOV      r2,r9
00081a  4621              MOV      r1,r4
00081c  9803              LDR      r0,[sp,#0xc]
00081e  f7fffffe          BL       _WrapGetNumCharsDisp
000822  9000              STR      r0,[sp,#0]
;;;731            pPrevLine += GUI_UC__NumChars2NumBytes(pPrevLine, NumChars);
000824  4648              MOV      r0,r9
000826  9900              LDR      r1,[sp,#0]
000828  f7fffffe          BL       GUI_UC__NumChars2NumBytes
00082c  4481              ADD      r9,r9,r0
;;;732            pCursor = pPrevLine;
00082e  46cb              MOV      r11,r9
;;;733          }
000830  bf00              NOP      
                  |L1.2098|
;;;734          CursorPosChar = GUI_UC__NumBytes2NumChars(pText, pCursor - pText);
000832  ebab0107          SUB      r1,r11,r7
000836  4638              MOV      r0,r7
000838  f7fffffe          BL       GUI_UC__NumBytes2NumChars
00083c  4605              MOV      r5,r0
;;;735          CursorPosByte = GUI_UC__NumChars2NumBytes(pText, CursorPosChar);
00083e  4629              MOV      r1,r5
000840  4638              MOV      r0,r7
000842  f7fffffe          BL       GUI_UC__NumChars2NumBytes
000846  9001              STR      r0,[sp,#4]
;;;736          CursorLine    = _GetCursorLine(hObj, pObj, pText, CursorPosChar);
000848  462b              MOV      r3,r5
00084a  463a              MOV      r2,r7
00084c  4621              MOV      r1,r4
00084e  9803              LDR      r0,[sp,#0xc]
000850  f7fffffe          BL       _GetCursorLine
000854  4680              MOV      r8,r0
                  |L1.2134|
;;;737        }
;;;738        if (pCursorPosByte) {
000856  f1ba0f00          CMP      r10,#0
00085a  d002              BEQ      |L1.2146|
;;;739          *pCursorPosByte = CursorPosByte;
00085c  9801              LDR      r0,[sp,#4]
00085e  f8ca0000          STR      r0,[r10,#0]
                  |L1.2146|
;;;740        }
;;;741        if (pCursorLine) {
000862  9810              LDR      r0,[sp,#0x40]
000864  b110              CBZ      r0,|L1.2156|
;;;742          *pCursorLine = CursorLine;
000866  9810              LDR      r0,[sp,#0x40]
000868  f8c08000          STR      r8,[r0,#0]
                  |L1.2156|
;;;743        }
;;;744        return CursorPosChar;
00086c  4628              MOV      r0,r5
                  |L1.2158|
;;;745      }
;;;746      return 0;
;;;747    }
00086e  b007              ADD      sp,sp,#0x1c
000870  e8bd8ff0          POP      {r4-r11,pc}
                  |L1.2164|
000874  2000              MOVS     r0,#0                 ;746
000876  e7fa              B        |L1.2158|
;;;748    
                          ENDP

                  _SetCursorPos PROC
;;;754    */
;;;755    static void _SetCursorPos(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj, int CursorPosChar) {
000878  b5fe              PUSH     {r1-r7,lr}
00087a  4606              MOV      r6,r0
00087c  460c              MOV      r4,r1
00087e  4615              MOV      r5,r2
;;;756      int CursorPosByte, CursorLine;
;;;757      CursorPosChar = _CalcNextValidCursorPos(hObj, pObj, CursorPosChar, &CursorPosByte, &CursorLine);
000880  a801              ADD      r0,sp,#4
000882  ab02              ADD      r3,sp,#8
000884  462a              MOV      r2,r5
000886  4621              MOV      r1,r4
000888  9000              STR      r0,[sp,#0]
00088a  4630              MOV      r0,r6
00088c  f7fffffe          BL       _CalcNextValidCursorPos
000890  4605              MOV      r5,r0
;;;758      /* Assign value and recalc whatever necessary */
;;;759      if (pObj->CursorPosChar != CursorPosChar) {
000892  f8b40048          LDRH     r0,[r4,#0x48]
000896  42a8              CMP      r0,r5
000898  d00d              BEQ      |L1.2230|
;;;760        /* Save values */
;;;761        pObj->CursorPosByte = CursorPosByte;
00089a  3446              ADDS     r4,r4,#0x46
00089c  9802              LDR      r0,[sp,#8]
00089e  80a0              STRH     r0,[r4,#4]
;;;762        pObj->CursorPosChar = CursorPosChar;
0008a0  8065              STRH     r5,[r4,#2]
;;;763        pObj->CursorLine = CursorLine;
0008a2  9801              LDR      r0,[sp,#4]
0008a4  f8240946          STRH     r0,[r4],#-0x46
;;;764        _InvalidateCursorXY(pObj); /* Invalidate X/Y position */
0008a8  4620              MOV      r0,r4
0008aa  f7fffffe          BL       _InvalidateCursorXY
;;;765        _CalcScrollPos(hObj, pObj);
0008ae  4621              MOV      r1,r4
0008b0  4630              MOV      r0,r6
0008b2  f7fffffe          BL       _CalcScrollPos
                  |L1.2230|
;;;766      }
;;;767    }
0008b6  bdfe              POP      {r1-r7,pc}
;;;768    
                          ENDP

                  _SetWrapMode PROC
;;;772    */
;;;773    static int _SetWrapMode(MULTIEDIT_HANDLE hObj, GUI_WRAPMODE WrapMode) {
0008b8  e92d41f0          PUSH     {r4-r8,lr}
0008bc  4606              MOV      r6,r0
0008be  460d              MOV      r5,r1
;;;774      int r;
;;;775      r = 0;
0008c0  2700              MOVS     r7,#0
;;;776      if (hObj) {
0008c2  b316              CBZ      r6,|L1.2314|
;;;777        MULTIEDIT_OBJ * pObj;
;;;778        WM_LOCK();
;;;779        pObj = MULTIEDIT_H2P(hObj);
0008c4  4630              MOV      r0,r6
0008c6  f7fffffe          BL       GUI_ALLOC_h2p
0008ca  4604              MOV      r4,r0
;;;780        r = pObj->WrapMode;
0008cc  f894707c          LDRB     r7,[r4,#0x7c]
;;;781        if (pObj->WrapMode != WrapMode) {
0008d0  f894007c          LDRB     r0,[r4,#0x7c]
0008d4  42a8              CMP      r0,r5
0008d6  d017              BEQ      |L1.2312|
;;;782          int Position;
;;;783          pObj->WrapMode = WrapMode;
0008d8  f884507c          STRB     r5,[r4,#0x7c]
;;;784          _ClearCache(pObj);
0008dc  4620              MOV      r0,r4
0008de  f7fffffe          BL       _ClearCache
;;;785          _InvalidateNumLines(pObj);
0008e2  4620              MOV      r0,r4
0008e4  f7fffffe          BL       _InvalidateNumLines
;;;786          _InvalidateTextSizeX(pObj);
0008e8  4620              MOV      r0,r4
0008ea  f7fffffe          BL       _InvalidateTextSizeX
;;;787          _InvalidateTextArea(hObj);
0008ee  4630              MOV      r0,r6
0008f0  f7fffffe          BL       _InvalidateTextArea
;;;788          Position = _InvalidateCursorPos(pObj);
0008f4  4620              MOV      r0,r4
0008f6  f7fffffe          BL       _InvalidateCursorPos
0008fa  4680              MOV      r8,r0
;;;789          _SetCursorPos(hObj, pObj, Position);
0008fc  4642              MOV      r2,r8
0008fe  4621              MOV      r1,r4
000900  4630              MOV      r0,r6
000902  f7fffffe          BL       _SetCursorPos
;;;790        }
000906  bf00              NOP      
                  |L1.2312|
;;;791        WM_UNLOCK();
;;;792      }
000908  bf00              NOP      
                  |L1.2314|
;;;793      return r;
00090a  4638              MOV      r0,r7
;;;794    }
00090c  e8bd81f0          POP      {r4-r8,pc}
;;;795    
                          ENDP

                  _SetCursorXY PROC
;;;801    */
;;;802    static void _SetCursorXY(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj, int x, int y) {
000910  e92d4fff          PUSH     {r0-r11,lr}
000914  b083              SUB      sp,sp,#0xc
000916  460c              MOV      r4,r1
000918  4615              MOV      r5,r2
00091a  4699              MOV      r9,r3
;;;803      int CursorPosChar = 0;
00091c  2000              MOVS     r0,#0
00091e  9002              STR      r0,[sp,#8]
;;;804      if ((x < 0) || (y < 0)) {
000920  2d00              CMP      r5,#0
000922  db02              BLT      |L1.2346|
000924  f1b90f00          CMP      r9,#0
000928  da02              BGE      |L1.2352|
                  |L1.2346|
;;;805        return;
;;;806      }
;;;807      if (pObj->hText) {
;;;808        char *pLine, *pText;
;;;809        int CursorLine, WrapChars;
;;;810        int SizeX = 0;
;;;811        U16 Char;
;;;812        GUI_SetFont(pObj->pFont);
;;;813        CursorLine = y / GUI_GetFontDistY();
;;;814        pLine      = _GetpLine(hObj, pObj, CursorLine);
;;;815        pText      = (char*) GUI_ALLOC_h2p(pObj->hText);
;;;816        WrapChars  = _WrapGetNumCharsDisp(hObj, pObj, pLine);
;;;817        Char       = GUI_UC__GetCharCode(pLine + GUI_UC__NumChars2NumBytes(pLine, WrapChars));
;;;818        if (pObj->Flags & MULTIEDIT_SF_PASSWORD) {
;;;819          if (!Char) {
;;;820            WrapChars++;
;;;821          }
;;;822        } else {
;;;823          if (!Char || (Char == '\n') || ((Char == ' ') && (pObj->WrapMode == GUI_WRAPMODE_WORD))) {
;;;824            WrapChars++;
;;;825          }
;;;826        }
;;;827        if (pObj->Align == GUI_TA_RIGHT) {
;;;828          x -= _GetXSize(hObj, pObj) - GUI__GetLineDistX(pLine, WrapChars);
;;;829          x -= pObj->ScrollStateH.v << 1;
;;;830          if (x < 0) {
;;;831            x = 0;
;;;832          }
;;;833        }
;;;834    
;;;835        if (pObj->Flags & MULTIEDIT_SF_PASSWORD) {
;;;836          while (--WrapChars > 0) {
;;;837            Char   = GUI_UC_GetCharCode(pLine);
;;;838            SizeX += _GetCharDistX(pObj, pLine);
;;;839            if (!Char || (SizeX > x)) {
;;;840              break;
;;;841            }
;;;842            pLine += GUI_UC_GetCharSize(pLine);
;;;843          }
;;;844          CursorPosChar = GUI_UC__NumBytes2NumChars(pText, pLine - pText);
;;;845        } else {
;;;846          CursorPosChar = GUI_UC__NumBytes2NumChars(pText, pLine - pText) + GUI__GetCursorPosChar(pLine, x, WrapChars);
;;;847        }
;;;848      }
;;;849      _SetCursorPos(hObj, pObj, CursorPosChar);
;;;850    }
00092a  b007              ADD      sp,sp,#0x1c
00092c  e8bd8ff0          POP      {r4-r11,pc}
                  |L1.2352|
000930  8f20              LDRH     r0,[r4,#0x38]         ;807
000932  2800              CMP      r0,#0                 ;807
000934  d079              BEQ      |L1.2602|
000936  2000              MOVS     r0,#0                 ;810
000938  9000              STR      r0,[sp,#0]            ;810
00093a  6f60              LDR      r0,[r4,#0x74]         ;812
00093c  f7fffffe          BL       GUI_SetFont
000940  f7fffffe          BL       GUI_GetFontDistY
000944  fb99f0f0          SDIV     r0,r9,r0              ;813
000948  9001              STR      r0,[sp,#4]            ;813
00094a  4621              MOV      r1,r4                 ;814
00094c  9a01              LDR      r2,[sp,#4]            ;814
00094e  9803              LDR      r0,[sp,#0xc]          ;814
000950  f7fffffe          BL       _GetpLine
000954  4606              MOV      r6,r0                 ;814
000956  f9b40038          LDRSH    r0,[r4,#0x38]         ;815
00095a  f7fffffe          BL       GUI_ALLOC_h2p
00095e  4682              MOV      r10,r0                ;815
000960  4632              MOV      r2,r6                 ;816
000962  4621              MOV      r1,r4                 ;816
000964  9803              LDR      r0,[sp,#0xc]          ;816
000966  f7fffffe          BL       _WrapGetNumCharsDisp
00096a  4607              MOV      r7,r0                 ;816
00096c  4639              MOV      r1,r7                 ;817
00096e  4630              MOV      r0,r6                 ;817
000970  f7fffffe          BL       GUI_UC__NumChars2NumBytes
000974  eb000b06          ADD      r11,r0,r6             ;817
000978  4658              MOV      r0,r11                ;817
00097a  f7fffffe          BL       GUI_UC_GetCharCode
00097e  4680              MOV      r8,r0                 ;817
000980  f8940078          LDRB     r0,[r4,#0x78]         ;818
000984  f0000020          AND      r0,r0,#0x20           ;818
000988  b120              CBZ      r0,|L1.2452|
00098a  f1b80f00          CMP      r8,#0                 ;819
00098e  d10f              BNE      |L1.2480|
000990  1c7f              ADDS     r7,r7,#1              ;820
000992  e00d              B        |L1.2480|
                  |L1.2452|
000994  f1b80f00          CMP      r8,#0                 ;823
000998  d009              BEQ      |L1.2478|
00099a  f1b80f0a          CMP      r8,#0xa               ;823
00099e  d006              BEQ      |L1.2478|
0009a0  f1b80f20          CMP      r8,#0x20              ;823
0009a4  d104              BNE      |L1.2480|
0009a6  f894007c          LDRB     r0,[r4,#0x7c]         ;823
0009aa  2801              CMP      r0,#1                 ;823
0009ac  d100              BNE      |L1.2480|
                  |L1.2478|
0009ae  1c7f              ADDS     r7,r7,#1              ;824
                  |L1.2480|
0009b0  f8b40058          LDRH     r0,[r4,#0x58]         ;827
0009b4  2801              CMP      r0,#1                 ;827
0009b6  d111              BNE      |L1.2524|
0009b8  4621              MOV      r1,r4                 ;828
0009ba  9803              LDR      r0,[sp,#0xc]          ;828
0009bc  f7fffffe          BL       _GetXSize
0009c0  4683              MOV      r11,r0                ;828
0009c2  4639              MOV      r1,r7                 ;828
0009c4  4630              MOV      r0,r6                 ;828
0009c6  f7fffffe          BL       GUI__GetLineDistX
0009ca  ebab0000          SUB      r0,r11,r0             ;828
0009ce  1a2d              SUBS     r5,r5,r0              ;828
0009d0  6ee0              LDR      r0,[r4,#0x6c]         ;829
0009d2  eba50540          SUB      r5,r5,r0,LSL #1       ;829
0009d6  2d00              CMP      r5,#0                 ;830
0009d8  da00              BGE      |L1.2524|
0009da  2500              MOVS     r5,#0                 ;831
                  |L1.2524|
0009dc  f8940078          LDRB     r0,[r4,#0x78]         ;835
0009e0  f0000020          AND      r0,r0,#0x20           ;835
0009e4  b310              CBZ      r0,|L1.2604|
0009e6  e015              B        |L1.2580|
                  |L1.2536|
0009e8  4630              MOV      r0,r6                 ;837
0009ea  f7fffffe          BL       GUI_UC_GetCharCode
0009ee  4680              MOV      r8,r0                 ;837
0009f0  4631              MOV      r1,r6                 ;838
0009f2  4620              MOV      r0,r4                 ;838
0009f4  f7fffffe          BL       _GetCharDistX
0009f8  9900              LDR      r1,[sp,#0]            ;838
0009fa  4408              ADD      r0,r0,r1              ;838
0009fc  9000              STR      r0,[sp,#0]            ;838
0009fe  f1b80f00          CMP      r8,#0                 ;839
000a02  d002              BEQ      |L1.2570|
000a04  9800              LDR      r0,[sp,#0]            ;839
000a06  42a8              CMP      r0,r5                 ;839
000a08  dd00              BLE      |L1.2572|
                  |L1.2570|
000a0a  e006              B        |L1.2586|
                  |L1.2572|
000a0c  4630              MOV      r0,r6                 ;842
000a0e  f7fffffe          BL       GUI_UC_GetCharSize
000a12  4406              ADD      r6,r6,r0              ;842
                  |L1.2580|
000a14  1e78              SUBS     r0,r7,#1              ;836
000a16  1e07              SUBS     r7,r0,#0              ;836
000a18  dce6              BGT      |L1.2536|
                  |L1.2586|
000a1a  bf00              NOP                            ;840
000a1c  eba6010a          SUB      r1,r6,r10             ;844
000a20  4650              MOV      r0,r10                ;844
000a22  f7fffffe          BL       GUI_UC__NumBytes2NumChars
000a26  9002              STR      r0,[sp,#8]            ;844
000a28  e00d              B        |L1.2630|
                  |L1.2602|
000a2a  e00d              B        |L1.2632|
                  |L1.2604|
000a2c  eba6010a          SUB      r1,r6,r10             ;846
000a30  4650              MOV      r0,r10                ;846
000a32  f7fffffe          BL       GUI_UC__NumBytes2NumChars
000a36  4683              MOV      r11,r0                ;846
000a38  463a              MOV      r2,r7                 ;846
000a3a  4629              MOV      r1,r5                 ;846
000a3c  4630              MOV      r0,r6                 ;846
000a3e  f7fffffe          BL       GUI__GetCursorPosChar
000a42  4458              ADD      r0,r0,r11             ;846
000a44  9002              STR      r0,[sp,#8]            ;846
                  |L1.2630|
000a46  bf00              NOP                            ;848
                  |L1.2632|
000a48  4621              MOV      r1,r4                 ;849
000a4a  e9dd2002          LDRD     r2,r0,[sp,#8]         ;849
000a4e  f7fffffe          BL       _SetCursorPos
000a52  bf00              NOP      
000a54  e769              B        |L1.2346|
;;;851    
                          ENDP

                  _MoveCursorUp PROC
;;;855    */
;;;856    static void _MoveCursorUp(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj) {
000a56  b57c              PUSH     {r2-r6,lr}
000a58  4605              MOV      r5,r0
000a5a  460c              MOV      r4,r1
;;;857      int xPos, yPos;
;;;858      _GetCursorXY(hObj, pObj, &xPos, &yPos);
000a5c  466b              MOV      r3,sp
000a5e  aa01              ADD      r2,sp,#4
000a60  4621              MOV      r1,r4
000a62  4628              MOV      r0,r5
000a64  f7fffffe          BL       _GetCursorXY
;;;859      yPos -= GUI_GetYDistOfFont(pObj->pFont);
000a68  6f60              LDR      r0,[r4,#0x74]
000a6a  f7fffffe          BL       GUI_GetYDistOfFont
000a6e  9900              LDR      r1,[sp,#0]
000a70  1a08              SUBS     r0,r1,r0
000a72  9000              STR      r0,[sp,#0]
;;;860      _SetCursorXY(hObj, pObj, xPos, yPos);
000a74  4621              MOV      r1,r4
000a76  4628              MOV      r0,r5
000a78  e9dd3200          LDRD     r3,r2,[sp,#0]
000a7c  f7fffffe          BL       _SetCursorXY
;;;861    }
000a80  bd7c              POP      {r2-r6,pc}
;;;862    
                          ENDP

                  _MoveCursorDown PROC
;;;866    */
;;;867    static void _MoveCursorDown(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj) {
000a82  b57c              PUSH     {r2-r6,lr}
000a84  4605              MOV      r5,r0
000a86  460c              MOV      r4,r1
;;;868      int xPos, yPos;
;;;869      _GetCursorXY(hObj, pObj, &xPos, &yPos);
000a88  466b              MOV      r3,sp
000a8a  aa01              ADD      r2,sp,#4
000a8c  4621              MOV      r1,r4
000a8e  4628              MOV      r0,r5
000a90  f7fffffe          BL       _GetCursorXY
;;;870      yPos += GUI_GetYDistOfFont(pObj->pFont);
000a94  6f60              LDR      r0,[r4,#0x74]
000a96  f7fffffe          BL       GUI_GetYDistOfFont
000a9a  9900              LDR      r1,[sp,#0]
000a9c  4408              ADD      r0,r0,r1
000a9e  9000              STR      r0,[sp,#0]
;;;871      _SetCursorXY(hObj, pObj, xPos, yPos);
000aa0  4621              MOV      r1,r4
000aa2  4628              MOV      r0,r5
000aa4  e9dd3200          LDRD     r3,r2,[sp,#0]
000aa8  f7fffffe          BL       _SetCursorXY
;;;872    }
000aac  bd7c              POP      {r2-r6,pc}
;;;873    
                          ENDP

                  _MoveCursor2NextLine PROC
;;;877    */
;;;878    static void _MoveCursor2NextLine(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj) {
000aae  b57c              PUSH     {r2-r6,lr}
000ab0  4605              MOV      r5,r0
000ab2  460c              MOV      r4,r1
;;;879      int xPos, yPos;
;;;880      _GetCursorXY(hObj, pObj, &xPos, &yPos);
000ab4  466b              MOV      r3,sp
000ab6  aa01              ADD      r2,sp,#4
000ab8  4621              MOV      r1,r4
000aba  4628              MOV      r0,r5
000abc  f7fffffe          BL       _GetCursorXY
;;;881      yPos += GUI_GetYDistOfFont(pObj->pFont);
000ac0  6f60              LDR      r0,[r4,#0x74]
000ac2  f7fffffe          BL       GUI_GetYDistOfFont
000ac6  9900              LDR      r1,[sp,#0]
000ac8  4408              ADD      r0,r0,r1
000aca  9000              STR      r0,[sp,#0]
;;;882      _SetCursorXY(hObj, pObj, 0, yPos);
000acc  2200              MOVS     r2,#0
000ace  4621              MOV      r1,r4
000ad0  4628              MOV      r0,r5
000ad2  9b00              LDR      r3,[sp,#0]
000ad4  f7fffffe          BL       _SetCursorXY
;;;883    }
000ad8  bd7c              POP      {r2-r6,pc}
;;;884    
                          ENDP

                  _MoveCursor2LineEnd PROC
;;;888    */
;;;889    static void _MoveCursor2LineEnd(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj) {
000ada  b57c              PUSH     {r2-r6,lr}
000adc  4604              MOV      r4,r0
000ade  460d              MOV      r5,r1
;;;890      int xPos, yPos;
;;;891      _GetCursorXY(hObj, pObj, &xPos, &yPos);
000ae0  466b              MOV      r3,sp
000ae2  aa01              ADD      r2,sp,#4
000ae4  4629              MOV      r1,r5
000ae6  4620              MOV      r0,r4
000ae8  f7fffffe          BL       _GetCursorXY
;;;892      _SetCursorXY(hObj, pObj, 0x7FFF, yPos);
000aec  f64772ff          MOV      r2,#0x7fff
000af0  4629              MOV      r1,r5
000af2  4620              MOV      r0,r4
000af4  9b00              LDR      r3,[sp,#0]
000af6  f7fffffe          BL       _SetCursorXY
;;;893    }
000afa  bd7c              POP      {r2-r6,pc}
;;;894    
                          ENDP

                  _MoveCursor2LinePos1 PROC
;;;898    */
;;;899    static void _MoveCursor2LinePos1(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj) {
000afc  b57c              PUSH     {r2-r6,lr}
000afe  4604              MOV      r4,r0
000b00  460d              MOV      r5,r1
;;;900      int xPos, yPos;
;;;901      _GetCursorXY(hObj, pObj, &xPos, &yPos);
000b02  466b              MOV      r3,sp
000b04  aa01              ADD      r2,sp,#4
000b06  4629              MOV      r1,r5
000b08  4620              MOV      r0,r4
000b0a  f7fffffe          BL       _GetCursorXY
;;;902      _SetCursorXY(hObj, pObj, 0, yPos);
000b0e  2200              MOVS     r2,#0
000b10  4629              MOV      r1,r5
000b12  4620              MOV      r0,r4
000b14  9b00              LDR      r3,[sp,#0]
000b16  f7fffffe          BL       _SetCursorXY
;;;903    }
000b1a  bd7c              POP      {r2-r6,pc}
;;;904    
                          ENDP

                  _IsOverwriteAtThisChar PROC
;;;908    */
;;;909    static int _IsOverwriteAtThisChar(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj) {
000b1c  e92d4ff8          PUSH     {r3-r11,lr}
000b20  4607              MOV      r7,r0
000b22  460c              MOV      r4,r1
;;;910      int r = 0;
000b24  f04f0800          MOV      r8,#0
;;;911      if (pObj->hText && !(pObj->Flags & MULTIEDIT_CF_INSERT)) {
000b28  8f20              LDRH     r0,[r4,#0x38]
000b2a  2800              CMP      r0,#0
000b2c  d03a              BEQ      |L1.2980|
000b2e  f8940078          LDRB     r0,[r4,#0x78]
000b32  f0000004          AND      r0,r0,#4
000b36  bba8              CBNZ     r0,|L1.2980|
;;;912        const char *pText;
;;;913        int CurPos, Line1, Line2;
;;;914        U16 Char;
;;;915        pText  = (const char *)GUI_ALLOC_h2p(pObj->hText);
000b38  f9b40038          LDRSH    r0,[r4,#0x38]
000b3c  f7fffffe          BL       GUI_ALLOC_h2p
000b40  4605              MOV      r5,r0
;;;916        Line1  = pObj->CursorLine;
000b42  f8b4a046          LDRH     r10,[r4,#0x46]
;;;917        CurPos = _CalcNextValidCursorPos(hObj, pObj, pObj->CursorPosChar + 1, 0, 0);
000b46  2000              MOVS     r0,#0
000b48  9000              STR      r0,[sp,#0]
000b4a  f8b40048          LDRH     r0,[r4,#0x48]
000b4e  1c42              ADDS     r2,r0,#1
000b50  2300              MOVS     r3,#0
000b52  4621              MOV      r1,r4
000b54  4638              MOV      r0,r7
000b56  f7fffffe          BL       _CalcNextValidCursorPos
000b5a  4681              MOV      r9,r0
;;;918        Line2  = _GetCursorLine(hObj, pObj, pText, CurPos);
000b5c  464b              MOV      r3,r9
000b5e  462a              MOV      r2,r5
000b60  4621              MOV      r1,r4
000b62  4638              MOV      r0,r7
000b64  f7fffffe          BL       _GetCursorLine
000b68  4683              MOV      r11,r0
;;;919        pText += pObj->CursorPosByte;
000b6a  f8b4004a          LDRH     r0,[r4,#0x4a]
000b6e  4405              ADD      r5,r5,r0
;;;920        Char   = GUI_UC_GetCharCode(pText);
000b70  4628              MOV      r0,r5
000b72  f7fffffe          BL       GUI_UC_GetCharCode
000b76  4606              MOV      r6,r0
;;;921        if (Char) {
000b78  b19e              CBZ      r6,|L1.2978|
;;;922          if ((Line1 == Line2) || (pObj->Flags & MULTIEDIT_SF_PASSWORD)) {
000b7a  45da              CMP      r10,r11
000b7c  d004              BEQ      |L1.2952|
000b7e  f8940078          LDRB     r0,[r4,#0x78]
000b82  f0000020          AND      r0,r0,#0x20
000b86  b110              CBZ      r0,|L1.2958|
                  |L1.2952|
;;;923            r = 1;
000b88  f04f0801          MOV      r8,#1
000b8c  e009              B        |L1.2978|
                  |L1.2958|
;;;924          } else {
;;;925            if (Char != '\n') {
000b8e  2e0a              CMP      r6,#0xa
000b90  d007              BEQ      |L1.2978|
;;;926              if ((Char != ' ') || (pObj->WrapMode == GUI_WRAPMODE_CHAR)) {
000b92  2e20              CMP      r6,#0x20
000b94  d103              BNE      |L1.2974|
000b96  f894007c          LDRB     r0,[r4,#0x7c]
000b9a  2802              CMP      r0,#2
000b9c  d101              BNE      |L1.2978|
                  |L1.2974|
;;;927                r = 1;
000b9e  f04f0801          MOV      r8,#1
                  |L1.2978|
;;;928              }
;;;929            }
;;;930          }
;;;931        }
;;;932      }
000ba2  bf00              NOP      
                  |L1.2980|
;;;933      return r;
000ba4  4640              MOV      r0,r8
;;;934    }
000ba6  e8bd8ff8          POP      {r3-r11,pc}
;;;935    
                          ENDP

                  _GetCursorSizeX PROC
;;;942    */
;;;943    static int _GetCursorSizeX(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj, int * pIsRTL) {
000baa  e92d41f0          PUSH     {r4-r8,lr}
000bae  4607              MOV      r7,r0
000bb0  460c              MOV      r4,r1
000bb2  4615              MOV      r5,r2
;;;944      if (_IsOverwriteAtThisChar(hObj, pObj)) {
000bb4  4621              MOV      r1,r4
000bb6  4638              MOV      r0,r7
000bb8  f7fffffe          BL       _IsOverwriteAtThisChar
000bbc  b178              CBZ      r0,|L1.3038|
;;;945        #if (GUI_SUPPORT_ARABIC)
;;;946          if (pObj->Flags & MULTIEDIT_SF_PASSWORD) {
;;;947            const char *pText;
;;;948            pText  = (const char *)GUI_ALLOC_h2p(pObj->hText);
;;;949            pText += pObj->CursorPosByte;
;;;950            return _GetCharDistX(pObj, pText);
;;;951          } else {
;;;952            const char * pText;
;;;953            U16 Prev = 0, Char, Next = 0, Glyph;
;;;954            pText = (const char *)GUI_ALLOC_h2p(pObj->hText);
;;;955            if (pObj->CursorPosChar) {
;;;956              int NumChars = pObj->CursorPosChar;
;;;957              while (--NumChars) {
;;;958                pText += GUI_UC_GetCharSize(pText);
;;;959              }
;;;960              Prev = GUI_UC__GetCharCodeInc(&pText);
;;;961              Char = GUI_UC__GetCharCodeInc(&pText);
;;;962            } else {
;;;963              pText += pObj->CursorPosByte;
;;;964              Char = GUI_UC__GetCharCodeInc(&pText);
;;;965            }
;;;966            if (pObj->CursorPosChar < (pObj->NumChars - 1)) {
;;;967              Next = GUI_UC_GetCharCode(pText);
;;;968            }
;;;969            Glyph = GUI__GetPresentationForm(Char, Next, Prev, 0);
;;;970            if (Char != 0x20) {
;;;971              *pIsRTL = GUI__IsArabicCharacter(Char) ? 1 : 0;
;;;972            } else {
;;;973              *pIsRTL = GUI__IsArabicCharacter(Prev) ? 1 : 0;
;;;974            }
;;;975            return GUI_GetCharDistX(Glyph);
;;;976          }
;;;977        #else
;;;978          const char *pText;
;;;979          *pIsRTL = 0;
000bbe  2000              MOVS     r0,#0
000bc0  6028              STR      r0,[r5,#0]
;;;980          pText  = (const char *)GUI_ALLOC_h2p(pObj->hText);
000bc2  f9b40038          LDRSH    r0,[r4,#0x38]
000bc6  f7fffffe          BL       GUI_ALLOC_h2p
000bca  4606              MOV      r6,r0
;;;981          pText += pObj->CursorPosByte;
000bcc  f8b4004a          LDRH     r0,[r4,#0x4a]
000bd0  4406              ADD      r6,r6,r0
;;;982          return _GetCharDistX(pObj, pText);
000bd2  4631              MOV      r1,r6
000bd4  4620              MOV      r0,r4
000bd6  f7fffffe          BL       _GetCharDistX
                  |L1.3034|
;;;983        #endif
;;;984      } else {
;;;985        #if (GUI_SUPPORT_ARABIC)
;;;986          const char * pText;
;;;987          U16 Prev = 0, Char;
;;;988          pText = (const char *)GUI_ALLOC_h2p(pObj->hText);
;;;989          if (pObj->CursorPosChar) {
;;;990            int NumChars = pObj->CursorPosChar;
;;;991            while (--NumChars) {
;;;992              pText += GUI_UC_GetCharSize(pText);
;;;993            }
;;;994            Prev = GUI_UC__GetCharCodeInc(&pText);
;;;995            Char = GUI_UC_GetCharCode(pText);
;;;996          } else {
;;;997            pText += pObj->CursorPosByte;
;;;998            Char = GUI_UC_GetCharCode(pText);
;;;999          }
;;;1000         if (Char != 0x20) {
;;;1001           *pIsRTL = GUI__IsArabicCharacter(Char) ? 1 : 0;
;;;1002         } else {
;;;1003           *pIsRTL = GUI__IsArabicCharacter(Prev) ? 1 : 0;
;;;1004         }
;;;1005       #endif
;;;1006       return 2;
;;;1007     }
;;;1008   }
000bda  e8bd81f0          POP      {r4-r8,pc}
                  |L1.3038|
000bde  2002              MOVS     r0,#2                 ;1006
000be0  e7fb              B        |L1.3034|
;;;1009   
                          ENDP

                  _IncrementBuffer PROC
;;;1021   */
;;;1022   static int _IncrementBuffer(MULTIEDIT_OBJ* pObj, unsigned AddBytes) {
000be2  e92d41f0          PUSH     {r4-r8,lr}
000be6  4604              MOV      r4,r0
000be8  460e              MOV      r6,r1
;;;1023     WM_HMEM hNew;
;;;1024     int NewSize;
;;;1025     NewSize = pObj->BufferSize + AddBytes;
000bea  f8b40044          LDRH     r0,[r4,#0x44]
000bee  1987              ADDS     r7,r0,r6
;;;1026     hNew    = GUI_ALLOC_Realloc(pObj->hText, NewSize);
000bf0  f9b40038          LDRSH    r0,[r4,#0x38]
000bf4  4639              MOV      r1,r7
000bf6  f7fffffe          BL       GUI_ALLOC_Realloc
000bfa  4605              MOV      r5,r0
;;;1027     if (hNew) {
000bfc  b17d              CBZ      r5,|L1.3102|
;;;1028       if (!(pObj->hText)) {
000bfe  8f20              LDRH     r0,[r4,#0x38]
000c00  b938              CBNZ     r0,|L1.3090|
;;;1029         char* pText;
;;;1030         pText  = (char*) GUI_ALLOC_h2p(hNew);
000c02  4628              MOV      r0,r5
000c04  f7fffffe          BL       GUI_ALLOC_h2p
000c08  4680              MOV      r8,r0
;;;1031         *pText = 0;
000c0a  2000              MOVS     r0,#0
000c0c  f8880000          STRB     r0,[r8,#0]
;;;1032       }
000c10  bf00              NOP      
                  |L1.3090|
;;;1033       pObj->BufferSize = NewSize;
000c12  f8a47044          STRH     r7,[r4,#0x44]
;;;1034       pObj->hText = hNew;
000c16  8725              STRH     r5,[r4,#0x38]
;;;1035       return 1;
000c18  2001              MOVS     r0,#1
                  |L1.3098|
;;;1036     }
;;;1037     return 0;
;;;1038   }
000c1a  e8bd81f0          POP      {r4-r8,pc}
                  |L1.3102|
000c1e  2000              MOVS     r0,#0                 ;1037
000c20  e7fb              B        |L1.3098|
;;;1039   
                          ENDP

                  _IsSpaceInBuffer PROC
;;;1050   */
;;;1051   static int _IsSpaceInBuffer(MULTIEDIT_OBJ* pObj, int BytesNeeded) {
000c22  e92d41f0          PUSH     {r4-r8,lr}
000c26  4604              MOV      r4,r0
000c28  460d              MOV      r5,r1
;;;1052     int NumBytes = 0;
000c2a  2600              MOVS     r6,#0
;;;1053     if (pObj->hText) {
000c2c  8f20              LDRH     r0,[r4,#0x38]
000c2e  b138              CBZ      r0,|L1.3136|
;;;1054       NumBytes = strlen((char*)GUI_ALLOC_h2p(pObj->hText));
000c30  f9b40038          LDRSH    r0,[r4,#0x38]
000c34  f7fffffe          BL       GUI_ALLOC_h2p
000c38  4607              MOV      r7,r0
000c3a  f7fffffe          BL       strlen
000c3e  4606              MOV      r6,r0
                  |L1.3136|
;;;1055     }
;;;1056     BytesNeeded = (BytesNeeded + NumBytes + 1) - pObj->BufferSize;
000c40  19a8              ADDS     r0,r5,r6
000c42  1c40              ADDS     r0,r0,#1
000c44  f8b41044          LDRH     r1,[r4,#0x44]
000c48  1a45              SUBS     r5,r0,r1
;;;1057     if (BytesNeeded > 0) {
000c4a  2d00              CMP      r5,#0
000c4c  dd08              BLE      |L1.3168|
;;;1058       if (!_IncrementBuffer(pObj, BytesNeeded + MULTIEDIT_REALLOC_SIZE)) {
000c4e  f1050110          ADD      r1,r5,#0x10
000c52  4620              MOV      r0,r4
000c54  f7fffffe          BL       _IncrementBuffer
000c58  b910              CBNZ     r0,|L1.3168|
;;;1059         return 0;
000c5a  2000              MOVS     r0,#0
                  |L1.3164|
;;;1060       }
;;;1061     }
;;;1062     return 1;
;;;1063   }
000c5c  e8bd81f0          POP      {r4-r8,pc}
                  |L1.3168|
000c60  2001              MOVS     r0,#1                 ;1062
000c62  e7fb              B        |L1.3164|
;;;1064   
                          ENDP

                  _IsCharsAvailable PROC
;;;1074   */
;;;1075   static int _IsCharsAvailable(MULTIEDIT_OBJ* pObj, int CharsNeeded) {
000c64  b570              PUSH     {r4-r6,lr}
000c66  4604              MOV      r4,r0
000c68  460d              MOV      r5,r1
;;;1076     if ((CharsNeeded > 0) && (pObj->MaxNumChars > 0)) {
000c6a  2d00              CMP      r5,#0
000c6c  dd10              BLE      |L1.3216|
000c6e  8f60              LDRH     r0,[r4,#0x3a]
000c70  2800              CMP      r0,#0
000c72  dd0d              BLE      |L1.3216|
;;;1077       int NumChars = 0;
000c74  2600              MOVS     r6,#0
;;;1078       if (pObj->hText) {
000c76  8f20              LDRH     r0,[r4,#0x38]
000c78  b118              CBZ      r0,|L1.3202|
;;;1079         NumChars = _GetNumChars(pObj);
000c7a  4620              MOV      r0,r4
000c7c  f7fffffe          BL       _GetNumChars
000c80  4606              MOV      r6,r0
                  |L1.3202|
;;;1080       }
;;;1081       if ((CharsNeeded + NumChars) > pObj->MaxNumChars) {
000c82  19a8              ADDS     r0,r5,r6
000c84  8f61              LDRH     r1,[r4,#0x3a]
000c86  4288              CMP      r0,r1
000c88  dd01              BLE      |L1.3214|
;;;1082         return 0;
000c8a  2000              MOVS     r0,#0
                  |L1.3212|
;;;1083       }
;;;1084     }
;;;1085     return 1;
;;;1086   }
000c8c  bd70              POP      {r4-r6,pc}
                  |L1.3214|
000c8e  bf00              NOP                            ;1084
                  |L1.3216|
000c90  2001              MOVS     r0,#1                 ;1085
000c92  e7fb              B        |L1.3212|
;;;1087   
                          ENDP

                  _DeleteChar PROC
;;;1100   */
;;;1101   static void _DeleteChar(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj) {
000c94  e92d4ff3          PUSH     {r0,r1,r4-r11,lr}
000c98  b081              SUB      sp,sp,#4
000c9a  460c              MOV      r4,r1
;;;1102     if (pObj->hText) {
000c9c  8f20              LDRH     r0,[r4,#0x38]
000c9e  2800              CMP      r0,#0
000ca0  d05a              BEQ      |L1.3416|
;;;1103       unsigned CursorOffset;
;;;1104       char* s;
;;;1105       s = (char*) GUI_ALLOC_h2p(pObj->hText);
000ca2  f9b40038          LDRSH    r0,[r4,#0x38]
000ca6  f7fffffe          BL       GUI_ALLOC_h2p
000caa  4607              MOV      r7,r0
;;;1106       CursorOffset = pObj->CursorPosByte;
000cac  f8b4904a          LDRH     r9,[r4,#0x4a]
;;;1107       if (CursorOffset < strlen(s)) {
000cb0  4638              MOV      r0,r7
000cb2  f7fffffe          BL       strlen
000cb6  4548              CMP      r0,r9
000cb8  d94d              BLS      |L1.3414|
;;;1108         char *pCursor, *pLine, *pEndLine;
;;;1109         int CursorLine, NumChars, NumBytes;
;;;1110         pCursor    = s + CursorOffset;
000cba  eb070809          ADD      r8,r7,r9
;;;1111         CursorLine = pObj->CursorLine;
000cbe  f8b40046          LDRH     r0,[r4,#0x46]
000cc2  9000              STR      r0,[sp,#0]
;;;1112         pLine      = _GetpLine(hObj, pObj, CursorLine);
000cc4  4621              MOV      r1,r4
000cc6  e9dd2000          LDRD     r2,r0,[sp,#0]
000cca  f7fffffe          BL       _GetpLine
000cce  4605              MOV      r5,r0
;;;1113         NumChars   = _WrapGetNumCharsDisp(hObj, pObj, pLine);
000cd0  462a              MOV      r2,r5
000cd2  4621              MOV      r1,r4
000cd4  9801              LDR      r0,[sp,#4]
000cd6  f7fffffe          BL       _WrapGetNumCharsDisp
000cda  4683              MOV      r11,r0
;;;1114         pEndLine   = pLine + GUI_UC__NumChars2NumBytes(pLine, NumChars);
000cdc  4659              MOV      r1,r11
000cde  4628              MOV      r0,r5
000ce0  f7fffffe          BL       GUI_UC__NumChars2NumBytes
000ce4  eb000a05          ADD      r10,r0,r5
;;;1115         pLine      = pLine + _WrapGetNumBytesToNextLine(hObj, pObj, pLine);
000ce8  462a              MOV      r2,r5
000cea  4621              MOV      r1,r4
000cec  9801              LDR      r0,[sp,#4]
000cee  f7fffffe          BL       _WrapGetNumBytesToNextLine
000cf2  4405              ADD      r5,r5,r0
;;;1116         if (pCursor == pEndLine) {
000cf4  45d0              CMP      r8,r10
000cf6  d102              BNE      |L1.3326|
;;;1117           NumBytes = pLine - pEndLine;
000cf8  eba5060a          SUB      r6,r5,r10
000cfc  e003              B        |L1.3334|
                  |L1.3326|
;;;1118         } else {
;;;1119           NumBytes = GUI_UC_GetCharSize(pCursor);
000cfe  4640              MOV      r0,r8
000d00  f7fffffe          BL       GUI_UC_GetCharSize
000d04  4606              MOV      r6,r0
                  |L1.3334|
;;;1120         }
;;;1121         NumChars = GUI_UC__NumBytes2NumChars(pCursor, NumBytes);
000d06  4631              MOV      r1,r6
000d08  4640              MOV      r0,r8
000d0a  f7fffffe          BL       GUI_UC__NumBytes2NumChars
000d0e  4683              MOV      r11,r0
;;;1122         strcpy(pCursor, pCursor + NumBytes);
000d10  eb080106          ADD      r1,r8,r6
000d14  4640              MOV      r0,r8
000d16  f7fffffe          BL       strcpy
;;;1123         WM_NotifyParent(hObj, WM_NOTIFICATION_VALUE_CHANGED);
000d1a  2105              MOVS     r1,#5
000d1c  9801              LDR      r0,[sp,#4]
000d1e  f7fffffe          BL       WM_NotifyParent
;;;1124         pObj->NumChars -= NumChars;
000d22  8fa0              LDRH     r0,[r4,#0x3c]
000d24  eba0000b          SUB      r0,r0,r11
000d28  87a0              STRH     r0,[r4,#0x3c]
;;;1125         _InvalidateNumLines(pObj);
000d2a  4620              MOV      r0,r4
000d2c  f7fffffe          BL       _InvalidateNumLines
;;;1126         _InvalidateTextSizeX(pObj);
000d30  4620              MOV      r0,r4
000d32  f7fffffe          BL       _InvalidateTextSizeX
;;;1127         _InvalidateCursorXY(pObj); /* Invalidate X/Y position */
000d36  4620              MOV      r0,r4
000d38  f7fffffe          BL       _InvalidateCursorXY
;;;1128         _ClearCache(pObj);
000d3c  4620              MOV      r0,r4
000d3e  f7fffffe          BL       _ClearCache
;;;1129         pObj->CursorLine = _GetCursorLine(hObj, pObj, s, pObj->CursorPosChar);
000d42  f8b43048          LDRH     r3,[r4,#0x48]
000d46  463a              MOV      r2,r7
000d48  4621              MOV      r1,r4
000d4a  9801              LDR      r0,[sp,#4]
000d4c  f7fffffe          BL       _GetCursorLine
000d50  f8a40046          STRH     r0,[r4,#0x46]
;;;1130       }
000d54  bf00              NOP      
                  |L1.3414|
;;;1131     }
000d56  bf00              NOP      
                  |L1.3416|
;;;1132   }
000d58  e8bd8ffe          POP      {r1-r11,pc}
;;;1133   
                          ENDP

                  _InsertChar PROC
;;;1139   */
;;;1140   static int _InsertChar(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj, U16 Char) {
000d5c  e92d47f0          PUSH     {r4-r10,lr}
000d60  4680              MOV      r8,r0
000d62  460c              MOV      r4,r1
000d64  4616              MOV      r6,r2
;;;1141     if (_IsCharsAvailable(pObj, 1)) {
000d66  2101              MOVS     r1,#1
000d68  4620              MOV      r0,r4
000d6a  f7fffffe          BL       _IsCharsAvailable
000d6e  2800              CMP      r0,#0
000d70  d032              BEQ      |L1.3544|
;;;1142       int BytesNeeded;
;;;1143       BytesNeeded = GUI_UC__CalcSizeOfChar(Char);
000d72  4630              MOV      r0,r6
000d74  f7fffffe          BL       GUI_UC__CalcSizeOfChar
000d78  4607              MOV      r7,r0
;;;1144       if (_IsSpaceInBuffer(pObj, BytesNeeded)) {
000d7a  4639              MOV      r1,r7
000d7c  4620              MOV      r0,r4
000d7e  f7fffffe          BL       _IsSpaceInBuffer
000d82  b340              CBZ      r0,|L1.3542|
;;;1145         int CursorOffset;
;;;1146         char* pText;
;;;1147         pText = (char*) GUI_ALLOC_h2p(pObj->hText);
000d84  f9b40038          LDRSH    r0,[r4,#0x38]
000d88  f7fffffe          BL       GUI_ALLOC_h2p
000d8c  4605              MOV      r5,r0
;;;1148         CursorOffset = pObj->CursorPosByte;
000d8e  f8b4904a          LDRH     r9,[r4,#0x4a]
;;;1149         pText += CursorOffset;
000d92  444d              ADD      r5,r5,r9
;;;1150         memmove(pText + BytesNeeded, pText, strlen(pText) + 1);
000d94  4628              MOV      r0,r5
000d96  f7fffffe          BL       strlen
000d9a  f1000a01          ADD      r10,r0,#1
000d9e  19e8              ADDS     r0,r5,r7
000da0  4652              MOV      r2,r10
000da2  4629              MOV      r1,r5
000da4  f7fffffe          BL       __aeabi_memmove
;;;1151         GUI_UC_Encode(pText, Char);
000da8  4631              MOV      r1,r6
000daa  4628              MOV      r0,r5
000dac  f7fffffe          BL       GUI_UC_Encode
;;;1152         WM_NotifyParent(hObj, WM_NOTIFICATION_VALUE_CHANGED);
000db0  2105              MOVS     r1,#5
000db2  4640              MOV      r0,r8
000db4  f7fffffe          BL       WM_NotifyParent
;;;1153         pObj->NumChars += 1;
000db8  8fa0              LDRH     r0,[r4,#0x3c]
000dba  1c40              ADDS     r0,r0,#1
000dbc  87a0              STRH     r0,[r4,#0x3c]
;;;1154         _InvalidateNumLines(pObj);
000dbe  4620              MOV      r0,r4
000dc0  f7fffffe          BL       _InvalidateNumLines
;;;1155         _InvalidateTextSizeX(pObj);
000dc4  4620              MOV      r0,r4
000dc6  f7fffffe          BL       _InvalidateTextSizeX
;;;1156         _ClearCache(pObj);
000dca  4620              MOV      r0,r4
000dcc  f7fffffe          BL       _ClearCache
;;;1157         return 1;
000dd0  2001              MOVS     r0,#1
                  |L1.3538|
;;;1158       }
;;;1159     }
;;;1160     return 0;
;;;1161   }
000dd2  e8bd87f0          POP      {r4-r10,pc}
                  |L1.3542|
000dd6  bf00              NOP                            ;1159
                  |L1.3544|
000dd8  2000              MOVS     r0,#0                 ;1160
000dda  e7fa              B        |L1.3538|
;;;1162   
                          ENDP

                  _MULTIEDIT_Paint PROC
;;;1172   */
;;;1173   static void _MULTIEDIT_Paint(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ * pObj) {
000ddc  e92d4ff3          PUSH     {r0,r1,r4-r11,lr}
000de0  b08d              SUB      sp,sp,#0x34
000de2  460c              MOV      r4,r1
;;;1174     int ScrollPosX, ScrollPosY, EffectSize, HBorder, IsRTL = 0;
000de4  2000              MOVS     r0,#0
000de6  900c              STR      r0,[sp,#0x30]
;;;1175     int x, y, xOff, yOff, ColorIndex, FontSizeY;
;;;1176     GUI_RECT r, rClip;
;;;1177     const GUI_RECT *prOldClip;
;;;1178     /* Init some values */
;;;1179     GUI_SetFont(pObj->pFont);
000de8  6f60              LDR      r0,[r4,#0x74]
000dea  f7fffffe          BL       GUI_SetFont
;;;1180     FontSizeY  = GUI_GetFontDistY();
000dee  f7fffffe          BL       GUI_GetFontDistY
000df2  9007              STR      r0,[sp,#0x1c]
;;;1181     ScrollPosX = pObj->ScrollStateH.v;
000df4  6ee7              LDR      r7,[r4,#0x6c]
;;;1182     ScrollPosY = pObj->ScrollStateV.v;
000df6  6e25              LDR      r5,[r4,#0x60]
;;;1183     EffectSize = pObj->Widget.pEffect->EffectSize;
000df8  6a20              LDR      r0,[r4,#0x20]
000dfa  6946              LDR      r6,[r0,#0x14]
;;;1184     HBorder    = pObj->HBorder;
000dfc  f894a07b          LDRB     r10,[r4,#0x7b]
;;;1185     xOff       = EffectSize + HBorder - ScrollPosX;
000e00  eb06000a          ADD      r0,r6,r10
000e04  eba00b07          SUB      r11,r0,r7
;;;1186     yOff       = EffectSize - ScrollPosY * FontSizeY;
000e08  9807              LDR      r0,[sp,#0x1c]
000e0a  fb056010          MLS      r0,r5,r0,r6
000e0e  9009              STR      r0,[sp,#0x24]
;;;1187     ColorIndex = ((pObj->Flags & MULTIEDIT_SF_READONLY) ? 1 : 0);
000e10  f8940078          LDRB     r0,[r4,#0x78]
000e14  f0000001          AND      r0,r0,#1
000e18  9008              STR      r0,[sp,#0x20]
;;;1188     /* Set colors and draw the background */
;;;1189     LCD_SetBkColor(pObj->aBkColor[ColorIndex]);
000e1a  f1040128          ADD      r1,r4,#0x28
000e1e  9a08              LDR      r2,[sp,#0x20]
000e20  f8510022          LDR      r0,[r1,r2,LSL #2]
000e24  f7fffffe          BL       LCD_SetBkColor
;;;1190     LCD_SetColor(pObj->aColor[ColorIndex]);
000e28  f1040130          ADD      r1,r4,#0x30
000e2c  9a08              LDR      r2,[sp,#0x20]
000e2e  f8510022          LDR      r0,[r1,r2,LSL #2]
000e32  f7fffffe          BL       LCD_SetColor
;;;1191     GUI_Clear();
000e36  f7fffffe          BL       GUI_Clear
;;;1192     /* Draw the text if necessary */
;;;1193     rClip.x0 = EffectSize + HBorder;
000e3a  eb06000a          ADD      r0,r6,r10
000e3e  b200              SXTH     r0,r0
000e40  f8ad000c          STRH     r0,[sp,#0xc]
;;;1194     rClip.y0 = EffectSize;
000e44  b230              SXTH     r0,r6
000e46  f8ad000e          STRH     r0,[sp,#0xe]
;;;1195     rClip.x1 = WM_GetWindowSizeX(hObj) - EffectSize - HBorder - 1;
000e4a  980d              LDR      r0,[sp,#0x34]
000e4c  f7fffffe          BL       WM_GetWindowSizeX
000e50  1b80              SUBS     r0,r0,r6
000e52  eba0000a          SUB      r0,r0,r10
000e56  1e40              SUBS     r0,r0,#1
000e58  b200              SXTH     r0,r0
000e5a  f8ad0010          STRH     r0,[sp,#0x10]
;;;1196     rClip.y1 = WM_GetWindowSizeY(hObj) - EffectSize - 1;
000e5e  980d              LDR      r0,[sp,#0x34]
000e60  f7fffffe          BL       WM_GetWindowSizeY
000e64  1b80              SUBS     r0,r0,r6
000e66  1e40              SUBS     r0,r0,#1
000e68  b200              SXTH     r0,r0
000e6a  f8ad0012          STRH     r0,[sp,#0x12]
;;;1197     prOldClip = WM_SetUserClipRect(&rClip);
000e6e  a803              ADD      r0,sp,#0xc
000e70  f7fffffe          BL       WM_SetUserClipRect
000e74  9002              STR      r0,[sp,#8]
;;;1198     if (pObj->hText) {
000e76  8f20              LDRH     r0,[r4,#0x38]
000e78  2800              CMP      r0,#0
000e7a  d078              BEQ      |L1.3950|
;;;1199       const char* pText;
;;;1200       int Line = 0;
000e7c  f04f0900          MOV      r9,#0
;;;1201       int xSize       = _GetXSize(hObj, pObj);
000e80  4621              MOV      r1,r4
000e82  980d              LDR      r0,[sp,#0x34]
000e84  f7fffffe          BL       _GetXSize
000e88  9001              STR      r0,[sp,#4]
;;;1202       int NumVisLines = _GetNumVisLines(hObj, pObj);
000e8a  4621              MOV      r1,r4
000e8c  980d              LDR      r0,[sp,#0x34]
000e8e  f7fffffe          BL       _GetNumVisLines
000e92  9000              STR      r0,[sp,#0]
;;;1203       /* Get the text */
;;;1204       pText = (const char *)GUI_ALLOC_h2p(pObj->hText);
000e94  f9b40038          LDRSH    r0,[r4,#0x38]
000e98  f7fffffe          BL       GUI_ALLOC_h2p
000e9c  4680              MOV      r8,r0
;;;1205       /* Set the rectangle for drawing */
;;;1206       r.x0 = xOff;
000e9e  fa0ff08b          SXTH     r0,r11
000ea2  f8ad0014          STRH     r0,[sp,#0x14]
;;;1207       r.y0 = EffectSize;
000ea6  b230              SXTH     r0,r6
000ea8  f8ad0016          STRH     r0,[sp,#0x16]
;;;1208       r.x1 = xSize + EffectSize + HBorder - 1;
000eac  9801              LDR      r0,[sp,#4]
000eae  4430              ADD      r0,r0,r6
000eb0  4450              ADD      r0,r0,r10
000eb2  1e40              SUBS     r0,r0,#1
000eb4  b200              SXTH     r0,r0
000eb6  f8ad0018          STRH     r0,[sp,#0x18]
;;;1209       r.y1 = pObj->Widget.Win.Rect.y1 - pObj->Widget.Win.Rect.y0 + 1;
000eba  88e0              LDRH     r0,[r4,#6]
000ebc  8861              LDRH     r1,[r4,#2]
000ebe  1a40              SUBS     r0,r0,r1
000ec0  1c40              ADDS     r0,r0,#1
000ec2  b200              SXTH     r0,r0
000ec4  f8ad001a          STRH     r0,[sp,#0x1a]
;;;1210       /* Use cached position of first visible byte if possible */
;;;1211       if (ScrollPosY >= pObj->CacheFirstVisibleLine) {
000ec8  f8b40054          LDRH     r0,[r4,#0x54]
000ecc  42a8              CMP      r0,r5
000ece  dc07              BGT      |L1.3808|
;;;1212         if (pObj->CacheFirstVisibleByte) {
000ed0  f8b40056          LDRH     r0,[r4,#0x56]
000ed4  b120              CBZ      r0,|L1.3808|
;;;1213           pText += pObj->CacheFirstVisibleByte;
000ed6  f8b40056          LDRH     r0,[r4,#0x56]
000eda  4480              ADD      r8,r8,r0
;;;1214           Line   = pObj->CacheFirstVisibleLine;
000edc  f8b49054          LDRH     r9,[r4,#0x54]
                  |L1.3808|
;;;1215         }
;;;1216       }
;;;1217       if (pObj->Align == GUI_TA_RIGHT) {
000ee0  f8b40058          LDRH     r0,[r4,#0x58]
000ee4  2801              CMP      r0,#1
000ee6  d10b              BNE      |L1.3840|
;;;1218         r.x0 += ScrollPosX;
000ee8  f8bd0014          LDRH     r0,[sp,#0x14]
000eec  4438              ADD      r0,r0,r7
000eee  b200              SXTH     r0,r0
000ef0  f8ad0014          STRH     r0,[sp,#0x14]
;;;1219         r.x1 += ScrollPosX;
000ef4  f8bd0018          LDRH     r0,[sp,#0x18]
000ef8  4438              ADD      r0,r0,r7
000efa  b200              SXTH     r0,r0
000efc  f8ad0018          STRH     r0,[sp,#0x18]
                  |L1.3840|
;;;1220       }
;;;1221       /* Do the drawing of the text */
;;;1222       do {
000f00  bf00              NOP      
                  |L1.3842|
;;;1223         /* Cache the position of the first visible byte and the depending line number */
;;;1224         if (pObj->CacheFirstVisibleLine != ScrollPosY) {
000f02  f8b40054          LDRH     r0,[r4,#0x54]
000f06  42a8              CMP      r0,r5
000f08  d00b              BEQ      |L1.3874|
;;;1225           if (Line == ScrollPosY) {
000f0a  45a9              CMP      r9,r5
000f0c  d109              BNE      |L1.3874|
;;;1226             pObj->CacheFirstVisibleByte = pText - (const char *)GUI_ALLOC_h2p(pObj->hText);
000f0e  f9b40038          LDRSH    r0,[r4,#0x38]
000f12  f7fffffe          BL       GUI_ALLOC_h2p
000f16  eba80000          SUB      r0,r8,r0
000f1a  f8a40056          STRH     r0,[r4,#0x56]
;;;1227             pObj->CacheFirstVisibleLine = ScrollPosY;
000f1e  f8a45054          STRH     r5,[r4,#0x54]
                  |L1.3874|
;;;1228           }
;;;1229         }
;;;1230         /* Draw it */
;;;1231         if ((Line >= ScrollPosY) && ((Line - ScrollPosY) <= NumVisLines)) {
000f22  45a9              CMP      r9,r5
000f24  db11              BLT      |L1.3914|
000f26  eba90105          SUB      r1,r9,r5
000f2a  9800              LDR      r0,[sp,#0]
000f2c  4281              CMP      r1,r0
000f2e  dc0c              BGT      |L1.3914|
;;;1232           _DispString(hObj, pObj, pText, &r);
000f30  ab05              ADD      r3,sp,#0x14
000f32  4642              MOV      r2,r8
000f34  4621              MOV      r1,r4
000f36  980d              LDR      r0,[sp,#0x34]
000f38  f7fffffe          BL       _DispString
;;;1233           r.y0 += FontSizeY;  /* Next line */
000f3c  f8bd1016          LDRH     r1,[sp,#0x16]
000f40  9807              LDR      r0,[sp,#0x1c]
000f42  4408              ADD      r0,r0,r1
000f44  b200              SXTH     r0,r0
000f46  f8ad0016          STRH     r0,[sp,#0x16]
                  |L1.3914|
;;;1234         }
;;;1235         pText += _WrapGetNumBytesToNextLine(hObj, pObj, pText);
000f4a  4642              MOV      r2,r8
000f4c  4621              MOV      r1,r4
000f4e  980d              LDR      r0,[sp,#0x34]
000f50  f7fffffe          BL       _WrapGetNumBytesToNextLine
000f54  4480              ADD      r8,r8,r0
;;;1236         Line++;
000f56  f1090901          ADD      r9,r9,#1
;;;1237       } while (GUI_UC_GetCharCode(pText) && ((Line - ScrollPosY) <= NumVisLines));
000f5a  4640              MOV      r0,r8
000f5c  f7fffffe          BL       GUI_UC_GetCharCode
000f60  b120              CBZ      r0,|L1.3948|
000f62  eba90105          SUB      r1,r9,r5
000f66  9800              LDR      r0,[sp,#0]
000f68  4281              CMP      r1,r0
000f6a  ddca              BLE      |L1.3842|
                  |L1.3948|
;;;1238     }
000f6c  bf00              NOP      
                  |L1.3950|
;;;1239     /* Draw cursor if necessary */
;;;1240     if (WM_HasFocus(hObj)) {
000f6e  980d              LDR      r0,[sp,#0x34]
000f70  f7fffffe          BL       WM_HasFocus
000f74  2800              CMP      r0,#0
000f76  d053              BEQ      |L1.4128|
;;;1241       int CursorSize;
;;;1242       _GetCursorXY(hObj, pObj, &x, &y);
000f78  ab0a              ADD      r3,sp,#0x28
000f7a  aa0b              ADD      r2,sp,#0x2c
000f7c  4621              MOV      r1,r4
000f7e  980d              LDR      r0,[sp,#0x34]
000f80  f7fffffe          BL       _GetCursorXY
;;;1243       CursorSize = _GetCursorSizeX(hObj, pObj, &IsRTL);
000f84  aa0c              ADD      r2,sp,#0x30
000f86  4621              MOV      r1,r4
000f88  980d              LDR      r0,[sp,#0x34]
000f8a  f7fffffe          BL       _GetCursorSizeX
000f8e  4680              MOV      r8,r0
;;;1244       if (IsRTL) {
000f90  980c              LDR      r0,[sp,#0x30]
000f92  b170              CBZ      r0,|L1.4018|
;;;1245         r.x0 = x + xOff - CursorSize;
000f94  980b              LDR      r0,[sp,#0x2c]
000f96  4458              ADD      r0,r0,r11
000f98  eba00008          SUB      r0,r0,r8
000f9c  b200              SXTH     r0,r0
000f9e  f8ad0014          STRH     r0,[sp,#0x14]
;;;1246         r.x1 = r.x0 + CursorSize - 1;
000fa2  f8bd0014          LDRH     r0,[sp,#0x14]
000fa6  4440              ADD      r0,r0,r8
000fa8  1e40              SUBS     r0,r0,#1
000faa  b200              SXTH     r0,r0
000fac  f8ad0018          STRH     r0,[sp,#0x18]
000fb0  e00b              B        |L1.4042|
                  |L1.4018|
;;;1247       } else {
;;;1248         r.x0 = x + xOff;
000fb2  980b              LDR      r0,[sp,#0x2c]
000fb4  4458              ADD      r0,r0,r11
000fb6  b200              SXTH     r0,r0
000fb8  f8ad0014          STRH     r0,[sp,#0x14]
;;;1249         r.x1 = r.x0 + CursorSize - 1;
000fbc  f8bd0014          LDRH     r0,[sp,#0x14]
000fc0  4440              ADD      r0,r0,r8
000fc2  1e40              SUBS     r0,r0,#1
000fc4  b200              SXTH     r0,r0
000fc6  f8ad0018          STRH     r0,[sp,#0x18]
                  |L1.4042|
;;;1250       }
;;;1251       r.y0 = y + yOff;
000fca  e9dd0109          LDRD     r0,r1,[sp,#0x24]
000fce  4408              ADD      r0,r0,r1
000fd0  b200              SXTH     r0,r0
000fd2  f8ad0016          STRH     r0,[sp,#0x16]
;;;1252       r.y1 = r.y0 + FontSizeY - 1;
000fd6  f8bd1016          LDRH     r1,[sp,#0x16]
000fda  9807              LDR      r0,[sp,#0x1c]
000fdc  4408              ADD      r0,r0,r1
000fde  1e40              SUBS     r0,r0,#1
000fe0  b200              SXTH     r0,r0
000fe2  f8ad001a          STRH     r0,[sp,#0x1a]
;;;1253       if (pObj->Align == GUI_TA_RIGHT) {
000fe6  f8b40058          LDRH     r0,[r4,#0x58]
000fea  2801              CMP      r0,#1
000fec  d10d              BNE      |L1.4106|
;;;1254         r.x0 += ScrollPosX << 1;
000fee  f8bd0014          LDRH     r0,[sp,#0x14]
000ff2  eb000047          ADD      r0,r0,r7,LSL #1
000ff6  b200              SXTH     r0,r0
000ff8  f8ad0014          STRH     r0,[sp,#0x14]
;;;1255         r.x1 += ScrollPosX << 1;
000ffc  f8bd0018          LDRH     r0,[sp,#0x18]
001000  eb000047          ADD      r0,r0,r7,LSL #1
001004  b200              SXTH     r0,r0
001006  f8ad0018          STRH     r0,[sp,#0x18]
                  |L1.4106|
;;;1256       }
;;;1257       GUI_InvertRect(r.x0, r.y0, r.x1, r.y1);
00100a  f9bd301a          LDRSH    r3,[sp,#0x1a]
00100e  f9bd2018          LDRSH    r2,[sp,#0x18]
001012  f9bd1016          LDRSH    r1,[sp,#0x16]
001016  f9bd0014          LDRSH    r0,[sp,#0x14]
00101a  f7fffffe          BL       GUI_InvertRect
;;;1258     }
00101e  bf00              NOP      
                  |L1.4128|
;;;1259     WM_SetUserClipRect(prOldClip);
001020  9802              LDR      r0,[sp,#8]
001022  f7fffffe          BL       WM_SetUserClipRect
;;;1260     /* Draw the 3D effect (if configured) */
;;;1261     WIDGET__EFFECT_DrawDown(&pObj->Widget);
001026  4620              MOV      r0,r4
001028  f7fffffe          BL       WIDGET__EFFECT_DrawDown
;;;1262   }
00102c  b00f              ADD      sp,sp,#0x3c
00102e  e8bd8ff0          POP      {r4-r11,pc}
;;;1263   
                          ENDP

                  _OnTouch PROC
;;;1267   */
;;;1268   static void _OnTouch(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj, WM_MESSAGE*pMsg) {
001032  e92d5ff0          PUSH     {r4-r12,lr}
001036  4681              MOV      r9,r0
001038  460c              MOV      r4,r1
00103a  4616              MOV      r6,r2
;;;1269     int Notification;
;;;1270     const GUI_PID_STATE* pState = (const GUI_PID_STATE*)pMsg->Data.p;
00103c  68b7              LDR      r7,[r6,#8]
;;;1271     if (pMsg->Data.p) {  /* Something happened in our area (pressed or released) */
00103e  68b0              LDR      r0,[r6,#8]
001040  b318              CBZ      r0,|L1.4234|
;;;1272       if (pState->Pressed) {
001042  7a38              LDRB     r0,[r7,#8]
001044  b1f8              CBZ      r0,|L1.4230|
;;;1273         int Effect, xPos, yPos;
;;;1274         Effect = pObj->Widget.pEffect->EffectSize;
001046  6a20              LDR      r0,[r4,#0x20]
001048  f8d08014          LDR      r8,[r0,#0x14]
;;;1275         xPos   = pState->x + pObj->ScrollStateH.v - Effect - pObj->HBorder;
00104c  6839              LDR      r1,[r7,#0]
00104e  6ee0              LDR      r0,[r4,#0x6c]
001050  4408              ADD      r0,r0,r1
001052  eba00008          SUB      r0,r0,r8
001056  f894107b          LDRB     r1,[r4,#0x7b]
00105a  eba00a01          SUB      r10,r0,r1
;;;1276         yPos   = pState->y + pObj->ScrollStateV.v * GUI_GetYDistOfFont(pObj->pFont) - Effect;
00105e  6f60              LDR      r0,[r4,#0x74]
001060  f7fffffe          BL       GUI_GetYDistOfFont
001064  687a              LDR      r2,[r7,#4]
001066  6e21              LDR      r1,[r4,#0x60]
001068  fb012000          MLA      r0,r1,r0,r2
00106c  eba00b08          SUB      r11,r0,r8
;;;1277         _SetCursorXY(hObj, pObj, xPos, yPos);
001070  465b              MOV      r3,r11
001072  4652              MOV      r2,r10
001074  4621              MOV      r1,r4
001076  4648              MOV      r0,r9
001078  f7fffffe          BL       _SetCursorXY
;;;1278         _Invalidate(hObj);
00107c  4648              MOV      r0,r9
00107e  f7fffffe          BL       _Invalidate
;;;1279         Notification = WM_NOTIFICATION_CLICKED;
001082  2501              MOVS     r5,#1
;;;1280       } else {
001084  e002              B        |L1.4236|
                  |L1.4230|
;;;1281         Notification = WM_NOTIFICATION_RELEASED;
001086  2502              MOVS     r5,#2
001088  e000              B        |L1.4236|
                  |L1.4234|
;;;1282       }
;;;1283     } else {
;;;1284       Notification = WM_NOTIFICATION_MOVED_OUT;
00108a  2503              MOVS     r5,#3
                  |L1.4236|
;;;1285     }
;;;1286     WM_NotifyParent(hObj, Notification);
00108c  4629              MOV      r1,r5
00108e  4648              MOV      r0,r9
001090  f7fffffe          BL       WM_NotifyParent
;;;1287   }
001094  e8bd9ff0          POP      {r4-r12,pc}
;;;1288   
                          ENDP

                  _AddKey PROC
;;;1295   */
;;;1296   static int _AddKey(MULTIEDIT_HANDLE hObj, U16 Key) {
001098  e92d41f0          PUSH     {r4-r8,lr}
00109c  4606              MOV      r6,r0
00109e  460d              MOV      r5,r1
;;;1297     int r = 0;               /* Key has not been consumed */
0010a0  2700              MOVS     r7,#0
;;;1298     MULTIEDIT_OBJ* pObj;
;;;1299     pObj = MULTIEDIT_H2P(hObj);
0010a2  4630              MOV      r0,r6
0010a4  f7fffffe          BL       GUI_ALLOC_h2p
0010a8  4604              MOV      r4,r0
;;;1300     switch (Key) {
0010aa  4628              MOV      r0,r5
0010ac  2d13              CMP      r5,#0x13
0010ae  d01c              BEQ      |L1.4330|
0010b0  dc0c              BGT      |L1.4300|
0010b2  2810              CMP      r0,#0x10
0010b4  d028              BEQ      |L1.4360|
0010b6  dc04              BGT      |L1.4290|
0010b8  2808              CMP      r0,#8
0010ba  d03a              BEQ      |L1.4402|
0010bc  280d              CMP      r0,#0xd
                  |L1.4286|
0010be  d16e              BNE      |L1.4510|
0010c0  e06e              B        |L1.4512|
                  |L1.4290|
0010c2  2811              CMP      r0,#0x11
0010c4  d00b              BEQ      |L1.4318|
0010c6  2812              CMP      r0,#0x12
0010c8  d1f9              BNE      |L1.4286|
0010ca  e014              B        |L1.4342|
                  |L1.4300|
0010cc  3817              SUBS     r0,r0,#0x17
0010ce  2808              CMP      r0,#8
0010d0  d265              BCS      |L1.4510|
0010d2  e8dff000          TBB      [pc,r0]
0010d6  2822              DCB      0x28,0x22
0010d8  89898889          DCB      0x89,0x89,0x88,0x89
0010dc  5045              DCB      0x50,0x45
                  |L1.4318|
;;;1301     case GUI_KEY_UP:
;;;1302       _MoveCursorUp(hObj, pObj);
0010de  4621              MOV      r1,r4
0010e0  4630              MOV      r0,r6
0010e2  f7fffffe          BL       _MoveCursorUp
;;;1303       r = 1;               /* Key has been consumed */
0010e6  2701              MOVS     r7,#1
;;;1304       break;
0010e8  e09d              B        |L1.4646|
                  |L1.4330|
;;;1305     case GUI_KEY_DOWN:
;;;1306       _MoveCursorDown(hObj, pObj);
0010ea  4621              MOV      r1,r4
0010ec  4630              MOV      r0,r6
0010ee  f7fffffe          BL       _MoveCursorDown
;;;1307       r = 1;               /* Key has been consumed */
0010f2  2701              MOVS     r7,#1
;;;1308       break;
0010f4  e097              B        |L1.4646|
                  |L1.4342|
;;;1309     case GUI_KEY_RIGHT:
;;;1310       _SetCursorPos(hObj, pObj, pObj->CursorPosChar + 1);
0010f6  f8b40048          LDRH     r0,[r4,#0x48]
0010fa  1c42              ADDS     r2,r0,#1
0010fc  4621              MOV      r1,r4
0010fe  4630              MOV      r0,r6
001100  f7fffffe          BL       _SetCursorPos
;;;1311       r = 1;               /* Key has been consumed */
001104  2701              MOVS     r7,#1
;;;1312       break;
001106  e08e              B        |L1.4646|
                  |L1.4360|
;;;1313     case GUI_KEY_LEFT:
;;;1314       _SetCursorPos(hObj, pObj, pObj->CursorPosChar - 1);
001108  f8b40048          LDRH     r0,[r4,#0x48]
00110c  1e42              SUBS     r2,r0,#1
00110e  4621              MOV      r1,r4
001110  4630              MOV      r0,r6
001112  f7fffffe          BL       _SetCursorPos
;;;1315       r = 1;               /* Key has been consumed */
001116  2701              MOVS     r7,#1
;;;1316       break;
001118  e085              B        |L1.4646|
;;;1317     case GUI_KEY_END:
;;;1318       _MoveCursor2LineEnd(hObj, pObj);
00111a  4621              MOV      r1,r4
00111c  4630              MOV      r0,r6
00111e  f7fffffe          BL       _MoveCursor2LineEnd
;;;1319       r = 1;               /* Key has been consumed */
001122  2701              MOVS     r7,#1
;;;1320       break;
001124  e07f              B        |L1.4646|
;;;1321     case GUI_KEY_HOME:
;;;1322       _MoveCursor2LinePos1(hObj, pObj);
001126  4621              MOV      r1,r4
001128  4630              MOV      r0,r6
00112a  f7fffffe          BL       _MoveCursor2LinePos1
;;;1323       r = 1;               /* Key has been consumed */
00112e  2701              MOVS     r7,#1
;;;1324       break;
001130  e079              B        |L1.4646|
                  |L1.4402|
;;;1325     case GUI_KEY_BACKSPACE:
;;;1326       if (!(pObj->Flags & MULTIEDIT_SF_READONLY)) {
001132  f8940078          LDRB     r0,[r4,#0x78]
001136  f0000001          AND      r0,r0,#1
00113a  b980              CBNZ     r0,|L1.4446|
;;;1327         if (pObj->CursorPosChar > pObj->NumCharsPrompt) {
00113c  f8b40048          LDRH     r0,[r4,#0x48]
001140  8fe1              LDRH     r1,[r4,#0x3e]
001142  4288              CMP      r0,r1
001144  dd0a              BLE      |L1.4444|
;;;1328           _SetCursorPos(hObj, pObj, pObj->CursorPosChar - 1);
001146  f8b40048          LDRH     r0,[r4,#0x48]
00114a  1e42              SUBS     r2,r0,#1
00114c  4621              MOV      r1,r4
00114e  4630              MOV      r0,r6
001150  f7fffffe          BL       _SetCursorPos
;;;1329           _DeleteChar(hObj, pObj);
001154  4621              MOV      r1,r4
001156  4630              MOV      r0,r6
001158  f7fffffe          BL       _DeleteChar
                  |L1.4444|
;;;1330         }
;;;1331         r = 1;               /* Key has been consumed */
00115c  2701              MOVS     r7,#1
                  |L1.4446|
;;;1332       }
;;;1333       break;
00115e  e062              B        |L1.4646|
;;;1334     case GUI_KEY_DELETE:
;;;1335       if (!(pObj->Flags & MULTIEDIT_SF_READONLY)) {
001160  f8940078          LDRB     r0,[r4,#0x78]
001164  f0000001          AND      r0,r0,#1
001168  b920              CBNZ     r0,|L1.4468|
;;;1336         _DeleteChar(hObj, pObj);
00116a  4621              MOV      r1,r4
00116c  4630              MOV      r0,r6
00116e  f7fffffe          BL       _DeleteChar
;;;1337         r = 1;               /* Key has been consumed */
001172  2701              MOVS     r7,#1
                  |L1.4468|
;;;1338       }
;;;1339       break;
001174  e057              B        |L1.4646|
;;;1340     case GUI_KEY_INSERT:
;;;1341       if (!(pObj->Flags & MULTIEDIT_CF_INSERT)) {
001176  f8940078          LDRB     r0,[r4,#0x78]
00117a  f0000004          AND      r0,r0,#4
00117e  b930              CBNZ     r0,|L1.4494|
;;;1342         pObj->Flags |= MULTIEDIT_CF_INSERT;
001180  f8940078          LDRB     r0,[r4,#0x78]
001184  f0400004          ORR      r0,r0,#4
001188  f8840078          STRB     r0,[r4,#0x78]
00118c  e005              B        |L1.4506|
                  |L1.4494|
;;;1343       } else {
;;;1344         pObj->Flags &= ~MULTIEDIT_CF_INSERT;
00118e  f8940078          LDRB     r0,[r4,#0x78]
001192  f0200004          BIC      r0,r0,#4
001196  f8840078          STRB     r0,[r4,#0x78]
                  |L1.4506|
;;;1345       }
;;;1346       r = 1;               /* Key has been consumed */
00119a  2701              MOVS     r7,#1
;;;1347       break;
00119c  e043              B        |L1.4646|
                  |L1.4510|
00119e  e023              B        |L1.4584|
                  |L1.4512|
;;;1348     case GUI_KEY_ENTER:
;;;1349       if (pObj->Flags & MULTIEDIT_SF_READONLY) {
0011a0  f8940078          LDRB     r0,[r4,#0x78]
0011a4  f0000001          AND      r0,r0,#1
0011a8  b120              CBZ      r0,|L1.4532|
;;;1350         _MoveCursor2NextLine(hObj, pObj);
0011aa  4621              MOV      r1,r4
0011ac  4630              MOV      r0,r6
0011ae  f7fffffe          BL       _MoveCursor2NextLine
0011b2  e016              B        |L1.4578|
                  |L1.4532|
;;;1351       } else {
;;;1352         if (_InsertChar(hObj, pObj, (U8)('\n'))) {
0011b4  220a              MOVS     r2,#0xa
0011b6  4621              MOV      r1,r4
0011b8  4630              MOV      r0,r6
0011ba  f7fffffe          BL       _InsertChar
0011be  b180              CBZ      r0,|L1.4578|
;;;1353           if (pObj->Flags & MULTIEDIT_SF_PASSWORD) {
0011c0  f8940078          LDRB     r0,[r4,#0x78]
0011c4  f0000020          AND      r0,r0,#0x20
0011c8  b138              CBZ      r0,|L1.4570|
;;;1354             _SetCursorPos(hObj, pObj, pObj->CursorPosChar + 1);
0011ca  f8b40048          LDRH     r0,[r4,#0x48]
0011ce  1c42              ADDS     r2,r0,#1
0011d0  4621              MOV      r1,r4
0011d2  4630              MOV      r0,r6
0011d4  f7fffffe          BL       _SetCursorPos
0011d8  e003              B        |L1.4578|
                  |L1.4570|
;;;1355           } else {
;;;1356             _MoveCursor2NextLine(hObj, pObj);
0011da  4621              MOV      r1,r4
0011dc  4630              MOV      r0,r6
0011de  f7fffffe          BL       _MoveCursor2NextLine
                  |L1.4578|
;;;1357           }
;;;1358         }
;;;1359       }
;;;1360       r = 1;               /* Key has been consumed */
0011e2  2701              MOVS     r7,#1
;;;1361       break;
0011e4  e01f              B        |L1.4646|
;;;1362     case GUI_KEY_ESCAPE:
;;;1363       break;
0011e6  e01e              B        |L1.4646|
                  |L1.4584|
;;;1364     default:
;;;1365       if (!(pObj->Flags & MULTIEDIT_SF_READONLY) && (Key >= 0x20)) {
0011e8  f8940078          LDRB     r0,[r4,#0x78]
0011ec  f0000001          AND      r0,r0,#1
0011f0  b9c0              CBNZ     r0,|L1.4644|
0011f2  2d20              CMP      r5,#0x20
0011f4  db16              BLT      |L1.4644|
;;;1366         if (_IsOverwriteAtThisChar(hObj, pObj)) {
0011f6  4621              MOV      r1,r4
0011f8  4630              MOV      r0,r6
0011fa  f7fffffe          BL       _IsOverwriteAtThisChar
0011fe  b118              CBZ      r0,|L1.4616|
;;;1367           _DeleteChar(hObj, pObj);
001200  4621              MOV      r1,r4
001202  4630              MOV      r0,r6
001204  f7fffffe          BL       _DeleteChar
                  |L1.4616|
;;;1368         }
;;;1369         if (_InsertChar(hObj, pObj, Key)) {
001208  462a              MOV      r2,r5
00120a  4621              MOV      r1,r4
00120c  4630              MOV      r0,r6
00120e  f7fffffe          BL       _InsertChar
001212  b130              CBZ      r0,|L1.4642|
;;;1370           _SetCursorPos(hObj, pObj, pObj->CursorPosChar + 1);
001214  f8b40048          LDRH     r0,[r4,#0x48]
001218  1c42              ADDS     r2,r0,#1
00121a  4621              MOV      r1,r4
00121c  4630              MOV      r0,r6
00121e  f7fffffe          BL       _SetCursorPos
                  |L1.4642|
;;;1371         }
;;;1372         r = 1;               /* Key has been consumed */
001222  2701              MOVS     r7,#1
                  |L1.4644|
001224  bf00              NOP                            ;1300
                  |L1.4646|
001226  bf00              NOP                            ;1304
;;;1373       }
;;;1374     }
;;;1375     _InvalidateTextArea(hObj);
001228  4630              MOV      r0,r6
00122a  f7fffffe          BL       _InvalidateTextArea
;;;1376     return r;
00122e  4638              MOV      r0,r7
;;;1377   }
001230  e8bd81f0          POP      {r4-r8,pc}
;;;1378   
                          ENDP

                  _SetText PROC
;;;1382   */
;;;1383   static void _SetText(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ * pObj, const char * pNew) {
001234  e92d5ff0          PUSH     {r4-r12,lr}
001238  4681              MOV      r9,r0
00123a  460c              MOV      r4,r1
00123c  4615              MOV      r5,r2
;;;1384     int NumCharsNew, NumCharsOld, NumBytesNew, NumBytesOld;
;;;1385     char * pText;
;;;1386     NumCharsNew = NumCharsOld = NumBytesNew = NumBytesOld = 0;
00123e  2000              MOVS     r0,#0
001240  4683              MOV      r11,r0
001242  4682              MOV      r10,r0
001244  4680              MOV      r8,r0
001246  4607              MOV      r7,r0
;;;1387     if (pObj->hText) {
001248  8f20              LDRH     r0,[r4,#0x38]
00124a  b190              CBZ      r0,|L1.4722|
;;;1388       pText  = (char*) GUI_ALLOC_h2p(pObj->hText);
00124c  f9b40038          LDRSH    r0,[r4,#0x38]
001250  f7fffffe          BL       GUI_ALLOC_h2p
001254  4606              MOV      r6,r0
;;;1389       pText += GUI_UC__NumChars2NumBytes(pText, pObj->NumCharsPrompt);
001256  8fe1              LDRH     r1,[r4,#0x3e]
001258  4630              MOV      r0,r6
00125a  f7fffffe          BL       GUI_UC__NumChars2NumBytes
00125e  4406              ADD      r6,r6,r0
;;;1390       NumCharsOld = GUI__GetNumChars(pText);
001260  4630              MOV      r0,r6
001262  f7fffffe          BL       GUI__GetNumChars
001266  4680              MOV      r8,r0
;;;1391       NumBytesOld = GUI_UC__NumChars2NumBytes(pText, NumCharsOld);
001268  4641              MOV      r1,r8
00126a  4630              MOV      r0,r6
00126c  f7fffffe          BL       GUI_UC__NumChars2NumBytes
001270  4683              MOV      r11,r0
                  |L1.4722|
;;;1392     }
;;;1393     if (pNew) {
001272  b145              CBZ      r5,|L1.4742|
;;;1394       NumCharsNew = GUI__GetNumChars(pNew);
001274  4628              MOV      r0,r5
001276  f7fffffe          BL       GUI__GetNumChars
00127a  4607              MOV      r7,r0
;;;1395       NumBytesNew = GUI_UC__NumChars2NumBytes(pNew, NumCharsNew);
00127c  4639              MOV      r1,r7
00127e  4628              MOV      r0,r5
001280  f7fffffe          BL       GUI_UC__NumChars2NumBytes
001284  4682              MOV      r10,r0
                  |L1.4742|
;;;1396     }
;;;1397     if (_IsCharsAvailable(pObj, NumCharsNew - NumCharsOld)) {
001286  eba70108          SUB      r1,r7,r8
00128a  4620              MOV      r0,r4
00128c  f7fffffe          BL       _IsCharsAvailable
001290  b358              CBZ      r0,|L1.4842|
;;;1398       if (_IsSpaceInBuffer(pObj, NumBytesNew - NumBytesOld)) {
001292  ebaa010b          SUB      r1,r10,r11
001296  4620              MOV      r0,r4
001298  f7fffffe          BL       _IsSpaceInBuffer
00129c  b328              CBZ      r0,|L1.4842|
;;;1399         pText  = (char*) GUI_ALLOC_h2p(pObj->hText);
00129e  f9b40038          LDRSH    r0,[r4,#0x38]
0012a2  f7fffffe          BL       GUI_ALLOC_h2p
0012a6  4606              MOV      r6,r0
;;;1400         pText += GUI_UC__NumChars2NumBytes(pText, pObj->NumCharsPrompt);
0012a8  8fe1              LDRH     r1,[r4,#0x3e]
0012aa  4630              MOV      r0,r6
0012ac  f7fffffe          BL       GUI_UC__NumChars2NumBytes
0012b0  4406              ADD      r6,r6,r0
;;;1401         if (pNew) {
0012b2  b125              CBZ      r5,|L1.4798|
;;;1402           strcpy(pText, pNew);
0012b4  4629              MOV      r1,r5
0012b6  4630              MOV      r0,r6
0012b8  f7fffffe          BL       strcpy
0012bc  e001              B        |L1.4802|
                  |L1.4798|
;;;1403         } else {
;;;1404           *pText = 0;
0012be  2000              MOVS     r0,#0
0012c0  7030              STRB     r0,[r6,#0]
                  |L1.4802|
;;;1405         }
;;;1406         _SetCursorPos(hObj, pObj, pObj->NumCharsPrompt);
0012c2  8fe2              LDRH     r2,[r4,#0x3e]
0012c4  4621              MOV      r1,r4
0012c6  4648              MOV      r0,r9
0012c8  f7fffffe          BL       _SetCursorPos
;;;1407         _InvalidateNumChars(pObj);
0012cc  4620              MOV      r0,r4
0012ce  f7fffffe          BL       _InvalidateNumChars
;;;1408         _InvalidateNumLines(pObj);
0012d2  4620              MOV      r0,r4
0012d4  f7fffffe          BL       _InvalidateNumLines
;;;1409         _InvalidateTextSizeX(pObj);
0012d8  4620              MOV      r0,r4
0012da  f7fffffe          BL       _InvalidateTextSizeX
;;;1410         _InvalidateTextArea(hObj);
0012de  4648              MOV      r0,r9
0012e0  f7fffffe          BL       _InvalidateTextArea
;;;1411         _InvalidateCursorXY(pObj); /* Invalidate X/Y position */
0012e4  4620              MOV      r0,r4
0012e6  f7fffffe          BL       _InvalidateCursorXY
                  |L1.4842|
;;;1412       }
;;;1413     }
;;;1414   }
0012ea  e8bd9ff0          POP      {r4-r12,pc}
;;;1415   
                          ENDP

                  MULTIEDIT_Callback PROC
;;;1448   */
;;;1449   void MULTIEDIT_Callback (WM_MESSAGE *pMsg) {
0012ee  b5fe              PUSH     {r1-r7,lr}
0012f0  4604              MOV      r4,r0
;;;1450     MULTIEDIT_HANDLE hObj;
;;;1451     MULTIEDIT_OBJ* pObj;
;;;1452     WM_SCROLL_STATE ScrollState;
;;;1453     hObj = pMsg->hWin;
0012f2  f9b46004          LDRSH    r6,[r4,#4]
;;;1454     /* Let widget handle the standard messages */
;;;1455     if (WIDGET_HandleActive(hObj, pMsg) == 0) {
0012f6  4621              MOV      r1,r4
0012f8  4630              MOV      r0,r6
0012fa  f7fffffe          BL       WIDGET_HandleActive
0012fe  b900              CBNZ     r0,|L1.4866|
                  |L1.4864|
;;;1456       return;
;;;1457     }
;;;1458     pObj = (MULTIEDIT_OBJ *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
;;;1459     switch (pMsg->MsgId) {
;;;1460     case WM_NOTIFY_CLIENTCHANGE:
;;;1461       _InvalidateCursorXY(pObj);
;;;1462       _InvalidateNumLines(pObj);
;;;1463       _InvalidateTextSizeX(pObj);
;;;1464       _ClearCache(pObj);
;;;1465       _CalcScrollParas(hObj);
;;;1466       break;
;;;1467     case WM_SIZE:
;;;1468       _InvalidateCursorXY(pObj);
;;;1469       _InvalidateNumLines(pObj);
;;;1470       _InvalidateTextSizeX(pObj);
;;;1471       _ClearCache(pObj);
;;;1472       _Invalidate(hObj);
;;;1473       break;
;;;1474     case WM_NOTIFY_PARENT:
;;;1475       switch (pMsg->Data.v) {
;;;1476       case WM_NOTIFICATION_VALUE_CHANGED:
;;;1477         if (pMsg->hWinSrc  == WM_GetScrollbarV(hObj)) {
;;;1478           WM_GetScrollState(pMsg->hWinSrc, &ScrollState);
;;;1479           pObj->ScrollStateV.v = ScrollState.v;
;;;1480           WM_InvalidateWindow(hObj);
;;;1481           WM_NotifyParent(hObj, WM_NOTIFICATION_SCROLL_CHANGED);
;;;1482         } else if (pMsg->hWinSrc == WM_GetScrollbarH(hObj)) {
;;;1483           WM_GetScrollState(pMsg->hWinSrc, &ScrollState);
;;;1484           pObj->ScrollStateH.v = ScrollState.v;
;;;1485           WM_InvalidateWindow(hObj);
;;;1486           WM_NotifyParent(hObj, WM_NOTIFICATION_SCROLL_CHANGED);
;;;1487         }
;;;1488         break;
;;;1489       case WM_NOTIFICATION_SCROLLBAR_ADDED:
;;;1490         #if WIDGET_USE_PARENT_EFFECT
;;;1491           WIDGET_SetEffect(pMsg->hWinSrc, pObj->Widget.pEffect);
;;;1492         #endif
;;;1493         _SetScrollState(hObj);
;;;1494         break;
;;;1495       }
;;;1496       break;
;;;1497     case WM_PAINT:
;;;1498       _MULTIEDIT_Paint(hObj, pObj);
;;;1499       return;
;;;1500     case WM_TOUCH:
;;;1501       _OnTouch(hObj, pObj, pMsg);
;;;1502       break;
;;;1503     case WM_DELETE:
;;;1504       GUI_ALLOC_FreePtr(&pObj->hText);
;;;1505       break;
;;;1506     case WM_KEY:
;;;1507       if (((const WM_KEY_INFO*)(pMsg->Data.p))->PressedCnt >0) {
;;;1508         int Key = ((const WM_KEY_INFO*)(pMsg->Data.p))->Key;
;;;1509         /* Leave code for test purpose
;;;1510         switch (Key) {
;;;1511         case '1': Key = GUI_KEY_LEFT;  break;
;;;1512         case '2': Key = GUI_KEY_UP;    break;
;;;1513         case '3': Key = GUI_KEY_RIGHT; break;
;;;1514         case '4': Key = GUI_KEY_DOWN;  break;
;;;1515         }
;;;1516         */
;;;1517         if (_AddKey(hObj, Key)) {
;;;1518           return;
;;;1519         }
;;;1520       } else {
;;;1521         if (!(pObj->Flags & MULTIEDIT_SF_READONLY)) {
;;;1522           return;                /* Key release is consumed (not sent to parent) */
;;;1523         }
;;;1524       }
;;;1525     }
;;;1526     WM_DefaultProc(pMsg);
;;;1527   }
001300  bdfe              POP      {r1-r7,pc}
                  |L1.4866|
001302  4630              MOV      r0,r6                 ;1458
001304  f7fffffe          BL       GUI_ALLOC_h2p
001308  4605              MOV      r5,r0                 ;1458
00130a  6820              LDR      r0,[r4,#0]            ;1459
00130c  280e              CMP      r0,#0xe               ;1459
00130e  d078              BEQ      |L1.5122|
001310  dc06              BGT      |L1.4896|
001312  2805              CMP      r0,#5                 ;1459
001314  d01b              BEQ      |L1.4942|
001316  280b              CMP      r0,#0xb               ;1459
001318  d06e              BEQ      |L1.5112|
00131a  280c              CMP      r0,#0xc               ;1459
00131c  d116              BNE      |L1.4940|
00131e  e063              B        |L1.5096|
                  |L1.4896|
001320  280f              CMP      r0,#0xf               ;1459
001322  d05c              BEQ      |L1.5086|
001324  2825              CMP      r0,#0x25              ;1459
001326  d002              BEQ      |L1.4910|
001328  2826              CMP      r0,#0x26              ;1459
00132a  d17d              BNE      |L1.5160|
00132c  e01f              B        |L1.4974|
                  |L1.4910|
00132e  4628              MOV      r0,r5                 ;1461
001330  f7fffffe          BL       _InvalidateCursorXY
001334  4628              MOV      r0,r5                 ;1462
001336  f7fffffe          BL       _InvalidateNumLines
00133a  4628              MOV      r0,r5                 ;1463
00133c  f7fffffe          BL       _InvalidateTextSizeX
001340  4628              MOV      r0,r5                 ;1464
001342  f7fffffe          BL       _ClearCache
001346  4630              MOV      r0,r6                 ;1465
001348  f7fffffe          BL       _CalcScrollParas
                  |L1.4940|
00134c  e06c              B        |L1.5160|
                  |L1.4942|
00134e  4628              MOV      r0,r5                 ;1468
001350  f7fffffe          BL       _InvalidateCursorXY
001354  4628              MOV      r0,r5                 ;1469
001356  f7fffffe          BL       _InvalidateNumLines
00135a  4628              MOV      r0,r5                 ;1470
00135c  f7fffffe          BL       _InvalidateTextSizeX
001360  4628              MOV      r0,r5                 ;1471
001362  f7fffffe          BL       _ClearCache
001366  4630              MOV      r0,r6                 ;1472
001368  f7fffffe          BL       _Invalidate
00136c  e05c              B        |L1.5160|
                  |L1.4974|
00136e  68a0              LDR      r0,[r4,#8]            ;1475
001370  2805              CMP      r0,#5                 ;1475
001372  d002              BEQ      |L1.4986|
001374  2806              CMP      r0,#6                 ;1475
001376  d130              BNE      |L1.5082|
001378  e02b              B        |L1.5074|
                  |L1.4986|
00137a  4630              MOV      r0,r6                 ;1477
00137c  f7fffffe          BL       WM_GetScrollbarV
001380  f9b41006          LDRSH    r1,[r4,#6]            ;1477
001384  4288              CMP      r0,r1                 ;1477
001386  d10e              BNE      |L1.5030|
001388  f9b40006          LDRSH    r0,[r4,#6]            ;1478
00138c  4669              MOV      r1,sp                 ;1478
00138e  f7fffffe          BL       WM_GetScrollState
001392  9901              LDR      r1,[sp,#4]            ;1479
001394  6629              STR      r1,[r5,#0x60]         ;1479
001396  4630              MOV      r0,r6                 ;1480
001398  f7fffffe          BL       WM_InvalidateWindow
00139c  210a              MOVS     r1,#0xa               ;1481
00139e  4630              MOV      r0,r6                 ;1481
0013a0  f7fffffe          BL       WM_NotifyParent
0013a4  e014              B        |L1.5072|
                  |L1.5030|
0013a6  4630              MOV      r0,r6                 ;1482
0013a8  f7fffffe          BL       WM_GetScrollbarH
0013ac  f9b41006          LDRSH    r1,[r4,#6]            ;1482
0013b0  4288              CMP      r0,r1                 ;1482
0013b2  d10d              BNE      |L1.5072|
0013b4  f9b40006          LDRSH    r0,[r4,#6]            ;1483
0013b8  4669              MOV      r1,sp                 ;1483
0013ba  f7fffffe          BL       WM_GetScrollState
0013be  9901              LDR      r1,[sp,#4]            ;1484
0013c0  66e9              STR      r1,[r5,#0x6c]         ;1484
0013c2  4630              MOV      r0,r6                 ;1485
0013c4  f7fffffe          BL       WM_InvalidateWindow
0013c8  210a              MOVS     r1,#0xa               ;1486
0013ca  4630              MOV      r0,r6                 ;1486
0013cc  f7fffffe          BL       WM_NotifyParent
                  |L1.5072|
0013d0  e003              B        |L1.5082|
                  |L1.5074|
0013d2  4630              MOV      r0,r6                 ;1493
0013d4  f7fffffe          BL       _SetScrollState
0013d8  bf00              NOP                            ;1494
                  |L1.5082|
0013da  bf00              NOP                            ;1488
0013dc  e024              B        |L1.5160|
                  |L1.5086|
0013de  4629              MOV      r1,r5                 ;1498
0013e0  4630              MOV      r0,r6                 ;1498
0013e2  f7fffffe          BL       _MULTIEDIT_Paint
0013e6  e78b              B        |L1.4864|
                  |L1.5096|
0013e8  4622              MOV      r2,r4                 ;1501
0013ea  4629              MOV      r1,r5                 ;1501
0013ec  4630              MOV      r0,r6                 ;1501
0013ee  f7fffffe          BL       _OnTouch
0013f2  e019              B        |L1.5160|
0013f4  e005              B        |L1.5122|
0013f6  e7ff              B        |L1.5112|
                  |L1.5112|
0013f8  f1050038          ADD      r0,r5,#0x38           ;1504
0013fc  f7fffffe          BL       GUI_ALLOC_FreePtr
001400  e012              B        |L1.5160|
                  |L1.5122|
001402  68a0              LDR      r0,[r4,#8]            ;1507
001404  6840              LDR      r0,[r0,#4]            ;1507
001406  2800              CMP      r0,#0                 ;1507
001408  dd08              BLE      |L1.5148|
00140a  68a0              LDR      r0,[r4,#8]            ;1508
00140c  6807              LDR      r7,[r0,#0]            ;1508
00140e  b2b9              UXTH     r1,r7                 ;1517
001410  4630              MOV      r0,r6                 ;1517
001412  f7fffffe          BL       _AddKey
001416  b100              CBZ      r0,|L1.5146|
001418  e772              B        |L1.4864|
                  |L1.5146|
00141a  e005              B        |L1.5160|
                  |L1.5148|
00141c  f8950078          LDRB     r0,[r5,#0x78]         ;1521
001420  f0000001          AND      r0,r0,#1              ;1521
001424  b900              CBNZ     r0,|L1.5160|
001426  e76b              B        |L1.4864|
                  |L1.5160|
001428  bf00              NOP                            ;1466
00142a  4620              MOV      r0,r4                 ;1526
00142c  f7fffffe          BL       WM_DefaultProc
001430  bf00              NOP      
001432  e765              B        |L1.4864|
;;;1528   
                          ENDP

                  MULTIEDIT_SetText PROC
;;;1674   */
;;;1675   void MULTIEDIT_SetText(MULTIEDIT_HANDLE hObj, const char* pNew) {
001434  b570              PUSH     {r4-r6,lr}
001436  4604              MOV      r4,r0
001438  460d              MOV      r5,r1
;;;1676     if (hObj) {
00143a  b14c              CBZ      r4,|L1.5200|
;;;1677       MULTIEDIT_OBJ * pObj;
;;;1678       WM_LOCK();
;;;1679       pObj = MULTIEDIT_H2P(hObj);
00143c  4620              MOV      r0,r4
00143e  f7fffffe          BL       GUI_ALLOC_h2p
001442  4606              MOV      r6,r0
;;;1680       _SetText(hObj, pObj, pNew);
001444  462a              MOV      r2,r5
001446  4631              MOV      r1,r6
001448  4620              MOV      r0,r4
00144a  f7fffffe          BL       _SetText
;;;1681       WM_UNLOCK();
;;;1682     }
00144e  bf00              NOP      
                  |L1.5200|
;;;1683   }
001450  bd70              POP      {r4-r6,pc}
;;;1684   
                          ENDP

                  MULTIEDIT_CreateEx PROC
;;;1542   */
;;;1543   MULTIEDIT_HANDLE MULTIEDIT_CreateEx(int x0, int y0, int xsize, int ysize, WM_HWIN hParent, int WinFlags, int ExFlags,
001452  e92d5fff          PUSH     {r0-r12,lr}
;;;1544                                       int Id, int BufferSize, const char* pText)
;;;1545   {
001456  4680              MOV      r8,r0
001458  4689              MOV      r9,r1
00145a  4692              MOV      r10,r2
00145c  469b              MOV      r11,r3
00145e  9e12              LDR      r6,[sp,#0x48]
;;;1546     MULTIEDIT_HANDLE hObj;
;;;1547     /* Create the window */
;;;1548     WM_LOCK();
;;;1549     if ((xsize == 0) && (ysize == 0) && (x0 == 0) && (y0 == 0)) {
001460  f1ba0f00          CMP      r10,#0
001464  d11b              BNE      |L1.5278|
001466  f1bb0f00          CMP      r11,#0
00146a  d118              BNE      |L1.5278|
00146c  f1b80f00          CMP      r8,#0
001470  d115              BNE      |L1.5278|
001472  f1b90f00          CMP      r9,#0
001476  d112              BNE      |L1.5278|
;;;1550       GUI_RECT Rect;
;;;1551       WM_GetClientRectEx(hParent, &Rect);
001478  a902              ADD      r1,sp,#8
00147a  980e              LDR      r0,[sp,#0x38]
00147c  f7fffffe          BL       WM_GetClientRectEx
;;;1552       xsize = Rect.x1 - Rect.x0 + 1;
001480  f9bd000c          LDRSH    r0,[sp,#0xc]
001484  f9bd1008          LDRSH    r1,[sp,#8]
001488  1a40              SUBS     r0,r0,r1
00148a  f1000a01          ADD      r10,r0,#1
;;;1553       ysize = Rect.y1 - Rect.y0 + 1;
00148e  f9bd000e          LDRSH    r0,[sp,#0xe]
001492  f9bd100a          LDRSH    r1,[sp,#0xa]
001496  1a40              SUBS     r0,r0,r1
001498  f1000b01          ADD      r11,r0,#1
;;;1554     }
00149c  bf00              NOP      
                  |L1.5278|
;;;1555     hObj = WM_CreateWindowAsChild(x0, y0, xsize, ysize, hParent, WinFlags, &MULTIEDIT_Callback,
00149e  2260              MOVS     r2,#0x60
0014a0  f2af13b5          ADR      r3,MULTIEDIT_Callback + 1
0014a4  980f              LDR      r0,[sp,#0x3c]
0014a6  b280              UXTH     r0,r0
0014a8  990e              LDR      r1,[sp,#0x38]
0014aa  e9cd3202          STRD     r3,r2,[sp,#8]
0014ae  e9cd1000          STRD     r1,r0,[sp,#0]
0014b2  465b              MOV      r3,r11
0014b4  4652              MOV      r2,r10
0014b6  4649              MOV      r1,r9
0014b8  4640              MOV      r0,r8
0014ba  f7fffffe          BL       WM_CreateWindowAsChild
0014be  4607              MOV      r7,r0
;;;1556                                   sizeof(MULTIEDIT_OBJ) - sizeof(WM_Obj));
;;;1557     if (hObj) {
0014c0  2f00              CMP      r7,#0
0014c2  d047              BEQ      |L1.5460|
;;;1558       int i;
;;;1559       MULTIEDIT_OBJ * pObj;
;;;1560       pObj = (MULTIEDIT_OBJ *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
0014c4  4638              MOV      r0,r7
0014c6  f7fffffe          BL       GUI_ALLOC_h2p
0014ca  4604              MOV      r4,r0
;;;1561       /* init widget specific variables */
;;;1562       WIDGET__Init(&pObj->Widget, Id, WIDGET_STATE_FOCUSSABLE);
0014cc  2210              MOVS     r2,#0x10
0014ce  4620              MOV      r0,r4
0014d0  9911              LDR      r1,[sp,#0x44]
0014d2  f7fffffe          BL       WIDGET__Init
;;;1563       /* init member variables */
;;;1564       MULTIEDIT_INIT_ID(pObj);
;;;1565       for (i = 0; i < NUM_DISP_MODES; i++) {
0014d6  2500              MOVS     r5,#0
0014d8  e00e              B        |L1.5368|
                  |L1.5338|
;;;1566         pObj->aBkColor[i]  = _aDefaultBkColor[i];
0014da  48fe              LDR      r0,|L1.6356|
0014dc  f8501025          LDR      r1,[r0,r5,LSL #2]
0014e0  f1040028          ADD      r0,r4,#0x28
0014e4  f8401025          STR      r1,[r0,r5,LSL #2]
;;;1567         pObj->aColor[i]    = _aDefaultColor[i];
0014e8  48fb              LDR      r0,|L1.6360|
0014ea  f8501025          LDR      r1,[r0,r5,LSL #2]
0014ee  f1040030          ADD      r0,r4,#0x30
0014f2  f8401025          STR      r1,[r0,r5,LSL #2]
0014f6  1c6d              ADDS     r5,r5,#1              ;1565
                  |L1.5368|
0014f8  2d02              CMP      r5,#2                 ;1565
0014fa  dbee              BLT      |L1.5338|
;;;1568       }
;;;1569       pObj->pFont          = _pDefaultFont;
0014fc  48f7              LDR      r0,|L1.6364|
0014fe  6800              LDR      r0,[r0,#0]  ; _pDefaultFont
001500  3438              ADDS     r4,r4,#0x38
001502  63e0              STR      r0,[r4,#0x3c]
;;;1570       pObj->Flags          = ExFlags;
001504  9810              LDR      r0,[sp,#0x40]
001506  f8840040          STRB     r0,[r4,#0x40]
;;;1571       pObj->CursorPosChar  = 0;
00150a  2000              MOVS     r0,#0
00150c  8220              STRH     r0,[r4,#0x10]
;;;1572       pObj->CursorPosByte  = 0;
00150e  8260              STRH     r0,[r4,#0x12]
;;;1573       pObj->HBorder        = 1;
001510  2001              MOVS     r0,#1
001512  f8840043          STRB     r0,[r4,#0x43]
;;;1574       pObj->MaxNumChars    = 0;
001516  2000              MOVS     r0,#0
001518  8060              STRH     r0,[r4,#2]
;;;1575       pObj->NumCharsPrompt = 0;
00151a  80e0              STRH     r0,[r4,#6]
;;;1576       pObj->BufferSize     = 0;
00151c  81a0              STRH     r0,[r4,#0xc]
;;;1577       pObj->hText          = 0;
00151e  f8240938          STRH     r0,[r4],#-0x38
;;;1578       if (BufferSize > 0) {
001522  2e00              CMP      r6,#0
001524  dd0e              BLE      |L1.5444|
;;;1579         WM_HWIN hText;
;;;1580         if ((hText = GUI_ALLOC_AllocZero(BufferSize)) != 0) {
001526  b230              SXTH     r0,r6
001528  f7fffffe          BL       GUI_ALLOC_AllocZero
00152c  9003              STR      r0,[sp,#0xc]
00152e  b120              CBZ      r0,|L1.5434|
;;;1581           pObj->BufferSize = BufferSize;
001530  f8a46044          STRH     r6,[r4,#0x44]
;;;1582           pObj->hText      = hText;
001534  9803              LDR      r0,[sp,#0xc]
001536  8720              STRH     r0,[r4,#0x38]
001538  e003              B        |L1.5442|
                  |L1.5434|
;;;1583         } else {
;;;1584           GUI_DEBUG_ERROROUT("MULTIEDIT_CreateEx failed to alloc buffer");
;;;1585           WM_DeleteWindow(hObj);
00153a  4638              MOV      r0,r7
00153c  f7fffffe          BL       WM_DeleteWindow
;;;1586           hObj = 0;
001540  2700              MOVS     r7,#0
                  |L1.5442|
;;;1587         }
;;;1588       }
001542  bf00              NOP      
                  |L1.5444|
;;;1589       MULTIEDIT_SetText(hObj, pText);
001544  4638              MOV      r0,r7
001546  9913              LDR      r1,[sp,#0x4c]
001548  f7fffffe          BL       MULTIEDIT_SetText
;;;1590       _ManageScrollers(hObj);
00154c  4638              MOV      r0,r7
00154e  f7fffffe          BL       _ManageScrollers
;;;1591     } else {
001552  bf00              NOP      
                  |L1.5460|
;;;1592       GUI_DEBUG_ERROROUT_IF(hObj==0, "MULTIEDIT_CreateEx failed")
;;;1593     }
;;;1594     WM_UNLOCK();
;;;1595     return hObj;
001554  4638              MOV      r0,r7
;;;1596   }
001556  b004              ADD      sp,sp,#0x10
001558  e8bd9ff0          POP      {r4-r12,pc}
;;;1597   
                          ENDP

                  MULTIEDIT_AddKey PROC
;;;1607   */
;;;1608   int MULTIEDIT_AddKey(MULTIEDIT_HANDLE hObj, U16 Key) {
00155c  b570              PUSH     {r4-r6,lr}
00155e  4604              MOV      r4,r0
001560  460d              MOV      r5,r1
;;;1609     int r = 0;
001562  2600              MOVS     r6,#0
;;;1610     if (hObj) {
001564  b124              CBZ      r4,|L1.5488|
;;;1611       WM_LOCK();
;;;1612       r = _AddKey(hObj, Key);
001566  4629              MOV      r1,r5
001568  4620              MOV      r0,r4
00156a  f7fffffe          BL       _AddKey
00156e  4606              MOV      r6,r0
                  |L1.5488|
;;;1613       WM_UNLOCK();
;;;1614     }
;;;1615     return r;
001570  4630              MOV      r0,r6
;;;1616   }
001572  bd70              POP      {r4-r6,pc}
;;;1617   
                          ENDP

                  MULTIEDIT_AddText PROC
;;;1621   */
;;;1622   int MULTIEDIT_AddText(MULTIEDIT_HANDLE hObj, const char * s) {
001574  e92d4ff8          PUSH     {r3-r11,lr}
001578  4682              MOV      r10,r0
00157a  4688              MOV      r8,r1
;;;1623     int Result;
;;;1624     Result = 1;
00157c  2001              MOVS     r0,#1
00157e  9000              STR      r0,[sp,#0]
;;;1625     if (hObj && s) {
001580  f1ba0f00          CMP      r10,#0
001584  d070              BEQ      |L1.5736|
001586  f1b80f00          CMP      r8,#0
00158a  d06d              BEQ      |L1.5736|
;;;1626       MULTIEDIT_OBJ * pObj;
;;;1627       WM_LOCK();
;;;1628       pObj = MULTIEDIT_H2P(hObj);
00158c  4650              MOV      r0,r10
00158e  f7fffffe          BL       GUI_ALLOC_h2p
001592  4604              MOV      r4,r0
;;;1629       if (!pObj->hText) {
001594  8f20              LDRH     r0,[r4,#0x38]
001596  b928              CBNZ     r0,|L1.5540|
;;;1630         _SetText(hObj, pObj, s);
001598  4642              MOV      r2,r8
00159a  4621              MOV      r1,r4
00159c  4650              MOV      r0,r10
00159e  f7fffffe          BL       _SetText
0015a2  e060              B        |L1.5734|
                  |L1.5540|
;;;1631       } else {
;;;1632         char * pText;
;;;1633         int NumCharsNew, NumCharsOld, NumBytesNew, NumBytesOld;
;;;1634         pText = (char *)GUI_ALLOC_h2p(pObj->hText);
0015a4  f9b40038          LDRSH    r0,[r4,#0x38]
0015a8  f7fffffe          BL       GUI_ALLOC_h2p
0015ac  4605              MOV      r5,r0
;;;1635         NumCharsOld = GUI__GetNumChars(pText);
0015ae  4628              MOV      r0,r5
0015b0  f7fffffe          BL       GUI__GetNumChars
0015b4  4681              MOV      r9,r0
;;;1636         NumBytesOld = GUI_UC__NumChars2NumBytes(pText, NumCharsOld);
0015b6  4649              MOV      r1,r9
0015b8  4628              MOV      r0,r5
0015ba  f7fffffe          BL       GUI_UC__NumChars2NumBytes
0015be  4683              MOV      r11,r0
;;;1637         NumCharsNew = GUI__GetNumChars(s);
0015c0  4640              MOV      r0,r8
0015c2  f7fffffe          BL       GUI__GetNumChars
0015c6  4606              MOV      r6,r0
;;;1638         if (pObj->MaxNumChars > 0) {
0015c8  8f60              LDRH     r0,[r4,#0x3a]
0015ca  2800              CMP      r0,#0
0015cc  dd07              BLE      |L1.5598|
;;;1639           if ((NumCharsOld + NumCharsNew) > pObj->MaxNumChars) {
0015ce  eb090006          ADD      r0,r9,r6
0015d2  8f61              LDRH     r1,[r4,#0x3a]
0015d4  4288              CMP      r0,r1
0015d6  dd02              BLE      |L1.5598|
;;;1640             NumCharsNew = pObj->MaxNumChars - NumCharsOld;
0015d8  8f60              LDRH     r0,[r4,#0x3a]
0015da  eba00609          SUB      r6,r0,r9
                  |L1.5598|
;;;1641           }
;;;1642         }
;;;1643         if (NumCharsNew > 0) {
0015de  2e00              CMP      r6,#0
0015e0  dd40              BLE      |L1.5732|
;;;1644           NumBytesNew = GUI_UC__NumChars2NumBytes(s, NumCharsNew);
0015e2  4631              MOV      r1,r6
0015e4  4640              MOV      r0,r8
0015e6  f7fffffe          BL       GUI_UC__NumChars2NumBytes
0015ea  4607              MOV      r7,r0
;;;1645           if (_IsSpaceInBuffer(pObj, NumBytesNew)) {
0015ec  4639              MOV      r1,r7
0015ee  4620              MOV      r0,r4
0015f0  f7fffffe          BL       _IsSpaceInBuffer
0015f4  2800              CMP      r0,#0
0015f6  d035              BEQ      |L1.5732|
;;;1646             pText = (char *)GUI_ALLOC_h2p(pObj->hText);
0015f8  f9340f38          LDRSH    r0,[r4,#0x38]!
0015fc  f7fffffe          BL       GUI_ALLOC_h2p
001600  4605              MOV      r5,r0
;;;1647             memmove(pText + pObj->CursorPosByte + NumBytesNew, 
001602  8a63              LDRH     r3,[r4,#0x12]
001604  ebab0203          SUB      r2,r11,r3
001608  1959              ADDS     r1,r3,r5
00160a  442b              ADD      r3,r3,r5
00160c  19d8              ADDS     r0,r3,r7
00160e  f7fffffe          BL       __aeabi_memmove
;;;1648                     pText + pObj->CursorPosByte, 
;;;1649                     NumBytesOld - pObj->CursorPosByte);
;;;1650             memcpy(pText + pObj->CursorPosByte, s, NumBytesNew);
001612  8a61              LDRH     r1,[r4,#0x12]
001614  1948              ADDS     r0,r1,r5
001616  463a              MOV      r2,r7
001618  4641              MOV      r1,r8
00161a  f7fffffe          BL       __aeabi_memcpy
;;;1651             *(pText + NumBytesOld + NumBytesNew) = 0;
00161e  2000              MOVS     r0,#0
001620  eb05010b          ADD      r1,r5,r11
001624  55c8              STRB     r0,[r1,r7]
;;;1652             pObj->NumChars += NumCharsNew;
001626  88a0              LDRH     r0,[r4,#4]
001628  4430              ADD      r0,r0,r6
00162a  80a0              STRH     r0,[r4,#4]
;;;1653             _SetCursorPos(hObj, pObj, pObj->CursorPosChar + NumCharsNew);
00162c  8a20              LDRH     r0,[r4,#0x10]
00162e  3c38              SUBS     r4,r4,#0x38
001630  1982              ADDS     r2,r0,r6
001632  4621              MOV      r1,r4
001634  4650              MOV      r0,r10
001636  f7fffffe          BL       _SetCursorPos
;;;1654             _InvalidateNumLines(pObj);
00163a  4620              MOV      r0,r4
00163c  f7fffffe          BL       _InvalidateNumLines
;;;1655             _InvalidateTextSizeX(pObj);
001640  4620              MOV      r0,r4
001642  f7fffffe          BL       _InvalidateTextSizeX
;;;1656             _InvalidateTextArea(hObj);
001646  4650              MOV      r0,r10
001648  f7fffffe          BL       _InvalidateTextArea
;;;1657             _InvalidateCursorXY(pObj);
00164c  4620              MOV      r0,r4
00164e  f7fffffe          BL       _InvalidateCursorXY
;;;1658             _ClearCache(pObj);
001652  4620              MOV      r0,r4
001654  f7fffffe          BL       _ClearCache
;;;1659             WM_NotifyParent(hObj, WM_NOTIFICATION_VALUE_CHANGED);
001658  2105              MOVS     r1,#5
00165a  4650              MOV      r0,r10
00165c  f7fffffe          BL       WM_NotifyParent
;;;1660             Result = 0;
001660  2000              MOVS     r0,#0
001662  9000              STR      r0,[sp,#0]
                  |L1.5732|
;;;1661           }
;;;1662         }
;;;1663       }
001664  bf00              NOP      
                  |L1.5734|
;;;1664       WM_UNLOCK();
;;;1665     }
001666  bf00              NOP      
                  |L1.5736|
;;;1666     return Result;
001668  9800              LDR      r0,[sp,#0]
;;;1667   }
00166a  e8bd8ff8          POP      {r3-r11,pc}
;;;1668   
                          ENDP

                  MULTIEDIT_GetText PROC
;;;1688   */
;;;1689   void MULTIEDIT_GetText(MULTIEDIT_HANDLE hObj, char* sDest, int MaxLen) {
00166e  e92d47f0          PUSH     {r4-r10,lr}
001672  4681              MOV      r9,r0
001674  460c              MOV      r4,r1
001676  4615              MOV      r5,r2
;;;1690     if (hObj) {
001678  f1b90f00          CMP      r9,#0
00167c  d020              BEQ      |L1.5824|
;;;1691       MULTIEDIT_OBJ* pObj;
;;;1692       WM_LOCK();
;;;1693       pObj = MULTIEDIT_H2P(hObj);
00167e  4648              MOV      r0,r9
001680  f7fffffe          BL       GUI_ALLOC_h2p
001684  4606              MOV      r6,r0
;;;1694       if (pObj) {
001686  b1d6              CBZ      r6,|L1.5822|
;;;1695         char* pText;
;;;1696         int Len;
;;;1697         pText  = (char*) GUI_ALLOC_h2p(pObj->hText);
001688  f9b60038          LDRSH    r0,[r6,#0x38]
00168c  f7fffffe          BL       GUI_ALLOC_h2p
001690  4607              MOV      r7,r0
;;;1698         pText += GUI_UC__NumChars2NumBytes(pText, pObj->NumCharsPrompt);
001692  8ff1              LDRH     r1,[r6,#0x3e]
001694  4638              MOV      r0,r7
001696  f7fffffe          BL       GUI_UC__NumChars2NumBytes
00169a  4407              ADD      r7,r7,r0
;;;1699         Len    = strlen(pText);
00169c  4638              MOV      r0,r7
00169e  f7fffffe          BL       strlen
0016a2  4680              MOV      r8,r0
;;;1700         if (Len > (MaxLen - 1)) {
0016a4  1e68              SUBS     r0,r5,#1
0016a6  4540              CMP      r0,r8
0016a8  da00              BGE      |L1.5804|
;;;1701           Len = MaxLen - 1;
0016aa  4680              MOV      r8,r0
                  |L1.5804|
;;;1702         }
;;;1703         memcpy(sDest, pText, Len);
0016ac  4642              MOV      r2,r8
0016ae  4639              MOV      r1,r7
0016b0  4620              MOV      r0,r4
0016b2  f7fffffe          BL       __aeabi_memcpy
;;;1704         *(sDest + Len) = 0;
0016b6  2000              MOVS     r0,#0
0016b8  f8040008          STRB     r0,[r4,r8]
;;;1705       }
0016bc  bf00              NOP      
                  |L1.5822|
;;;1706       WM_UNLOCK();
;;;1707     }
0016be  bf00              NOP      
                  |L1.5824|
;;;1708   }
0016c0  e8bd87f0          POP      {r4-r10,pc}
;;;1709   
                          ENDP

                  MULTIEDIT_GetPrompt PROC
;;;1713   */
;;;1714   void MULTIEDIT_GetPrompt(MULTIEDIT_HANDLE hObj, char * sDest, int MaxLen) {
0016c4  e92d47f0          PUSH     {r4-r10,lr}
0016c8  4680              MOV      r8,r0
0016ca  460c              MOV      r4,r1
0016cc  4615              MOV      r5,r2
;;;1715     if (hObj) {
0016ce  f1b80f00          CMP      r8,#0
0016d2  d01b              BEQ      |L1.5900|
;;;1716       MULTIEDIT_OBJ * pObj;
;;;1717       WM_LOCK();
;;;1718       pObj = MULTIEDIT_H2P(hObj);
0016d4  4640              MOV      r0,r8
0016d6  f7fffffe          BL       GUI_ALLOC_h2p
0016da  4606              MOV      r6,r0
;;;1719       if (pObj) {
0016dc  b1ae              CBZ      r6,|L1.5898|
;;;1720         char* sSource = (char*)GUI_ALLOC_h2p(pObj->hText);
0016de  f9b60038          LDRSH    r0,[r6,#0x38]
0016e2  f7fffffe          BL       GUI_ALLOC_h2p
0016e6  4681              MOV      r9,r0
;;;1721         int Len = GUI_UC__NumChars2NumBytes(sSource, pObj->NumCharsPrompt);
0016e8  8ff1              LDRH     r1,[r6,#0x3e]
0016ea  4648              MOV      r0,r9
0016ec  f7fffffe          BL       GUI_UC__NumChars2NumBytes
0016f0  4607              MOV      r7,r0
;;;1722         if (Len > (MaxLen - 1)) {
0016f2  1e68              SUBS     r0,r5,#1
0016f4  42b8              CMP      r0,r7
0016f6  da00              BGE      |L1.5882|
;;;1723           Len = MaxLen - 1;
0016f8  1e6f              SUBS     r7,r5,#1
                  |L1.5882|
;;;1724         }
;;;1725         memcpy(sDest, sSource, Len);
0016fa  463a              MOV      r2,r7
0016fc  4649              MOV      r1,r9
0016fe  4620              MOV      r0,r4
001700  f7fffffe          BL       __aeabi_memcpy
;;;1726         *(sDest + Len) = 0;
001704  2000              MOVS     r0,#0
001706  55e0              STRB     r0,[r4,r7]
;;;1727       }
001708  bf00              NOP      
                  |L1.5898|
;;;1728       WM_UNLOCK();
;;;1729     }
00170a  bf00              NOP      
                  |L1.5900|
;;;1730   }
00170c  e8bd87f0          POP      {r4-r10,pc}
;;;1731   
                          ENDP

                  MULTIEDIT_SetWrapWord PROC
;;;1735   */
;;;1736   void MULTIEDIT_SetWrapWord(MULTIEDIT_HANDLE hObj) {
001710  b510              PUSH     {r4,lr}
001712  4604              MOV      r4,r0
;;;1737     _SetWrapMode(hObj, GUI_WRAPMODE_WORD);
001714  2101              MOVS     r1,#1
001716  4620              MOV      r0,r4
001718  f7fffffe          BL       _SetWrapMode
;;;1738   }
00171c  bd10              POP      {r4,pc}
;;;1739   
                          ENDP

                  MULTIEDIT_SetWrapChar PROC
;;;1743   */
;;;1744   void MULTIEDIT_SetWrapChar(MULTIEDIT_HANDLE hObj) {
00171e  b510              PUSH     {r4,lr}
001720  4604              MOV      r4,r0
;;;1745     _SetWrapMode(hObj, GUI_WRAPMODE_CHAR);
001722  2102              MOVS     r1,#2
001724  4620              MOV      r0,r4
001726  f7fffffe          BL       _SetWrapMode
;;;1746   }
00172a  bd10              POP      {r4,pc}
;;;1747   
                          ENDP

                  MULTIEDIT_SetWrapNone PROC
;;;1751   */
;;;1752   void MULTIEDIT_SetWrapNone(MULTIEDIT_HANDLE hObj) {
00172c  b510              PUSH     {r4,lr}
00172e  4604              MOV      r4,r0
;;;1753     _SetWrapMode(hObj, GUI_WRAPMODE_NONE);
001730  2100              MOVS     r1,#0
001732  4620              MOV      r0,r4
001734  f7fffffe          BL       _SetWrapMode
;;;1754   }
001738  bd10              POP      {r4,pc}
;;;1755   
                          ENDP

                  MULTIEDIT_SetInsertMode PROC
;;;1759   */
;;;1760   void MULTIEDIT_SetInsertMode(MULTIEDIT_HANDLE hObj, int OnOff) {
00173a  b570              PUSH     {r4-r6,lr}
00173c  4604              MOV      r4,r0
00173e  460d              MOV      r5,r1
;;;1761     _SetFlag(hObj, OnOff, MULTIEDIT_SF_INSERT);
001740  2204              MOVS     r2,#4
001742  4629              MOV      r1,r5
001744  4620              MOV      r0,r4
001746  f7fffffe          BL       _SetFlag
;;;1762   }
00174a  bd70              POP      {r4-r6,pc}
;;;1763   
                          ENDP

                  MULTIEDIT_SetReadOnly PROC
;;;1767   */
;;;1768   void MULTIEDIT_SetReadOnly(MULTIEDIT_HANDLE hObj, int OnOff) {
00174c  b570              PUSH     {r4-r6,lr}
00174e  4604              MOV      r4,r0
001750  460d              MOV      r5,r1
;;;1769     _SetFlag(hObj, OnOff, MULTIEDIT_SF_READONLY);
001752  2201              MOVS     r2,#1
001754  4629              MOV      r1,r5
001756  4620              MOV      r0,r4
001758  f7fffffe          BL       _SetFlag
;;;1770   }
00175c  bd70              POP      {r4-r6,pc}
;;;1771   
                          ENDP

                  MULTIEDIT_SetPasswordMode PROC
;;;1775   */
;;;1776   void MULTIEDIT_SetPasswordMode(MULTIEDIT_HANDLE hObj, int OnOff) {
00175e  b570              PUSH     {r4-r6,lr}
001760  4604              MOV      r4,r0
001762  460d              MOV      r5,r1
;;;1777     if (hObj) {
001764  b194              CBZ      r4,|L1.6028|
;;;1778       MULTIEDIT_OBJ* pObj;
;;;1779       WM_LOCK();
;;;1780       pObj = MULTIEDIT_H2P(hObj);
001766  4620              MOV      r0,r4
001768  f7fffffe          BL       GUI_ALLOC_h2p
00176c  4606              MOV      r6,r0
;;;1781       _SetFlag(hObj, OnOff, MULTIEDIT_SF_PASSWORD);
00176e  2220              MOVS     r2,#0x20
001770  4629              MOV      r1,r5
001772  4620              MOV      r0,r4
001774  f7fffffe          BL       _SetFlag
;;;1782       _InvalidateCursorXY(pObj);
001778  4630              MOV      r0,r6
00177a  f7fffffe          BL       _InvalidateCursorXY
;;;1783       _InvalidateNumLines(pObj);
00177e  4630              MOV      r0,r6
001780  f7fffffe          BL       _InvalidateNumLines
;;;1784       _InvalidateTextSizeX(pObj);
001784  4630              MOV      r0,r6
001786  f7fffffe          BL       _InvalidateTextSizeX
;;;1785       WM_UNLOCK();
;;;1786     }
00178a  bf00              NOP      
                  |L1.6028|
;;;1787   }
00178c  bd70              POP      {r4-r6,pc}
;;;1788   
                          ENDP

                  MULTIEDIT_SetAutoScrollV PROC
;;;1792   */
;;;1793   void MULTIEDIT_SetAutoScrollV(MULTIEDIT_HANDLE hObj, int OnOff) {
00178e  b570              PUSH     {r4-r6,lr}
001790  4604              MOV      r4,r0
001792  460d              MOV      r5,r1
;;;1794     _SetFlag(hObj, OnOff, MULTIEDIT_SF_AUTOSCROLLBAR_V);
001794  2208              MOVS     r2,#8
001796  4629              MOV      r1,r5
001798  4620              MOV      r0,r4
00179a  f7fffffe          BL       _SetFlag
;;;1795   }
00179e  bd70              POP      {r4-r6,pc}
;;;1796   
                          ENDP

                  MULTIEDIT_SetAutoScrollH PROC
;;;1800   */
;;;1801   void MULTIEDIT_SetAutoScrollH(MULTIEDIT_HANDLE hObj, int OnOff) {
0017a0  b570              PUSH     {r4-r6,lr}
0017a2  4604              MOV      r4,r0
0017a4  460d              MOV      r5,r1
;;;1802     _SetFlag(hObj, OnOff, MULTIEDIT_SF_AUTOSCROLLBAR_H);
0017a6  2210              MOVS     r2,#0x10
0017a8  4629              MOV      r1,r5
0017aa  4620              MOV      r0,r4
0017ac  f7fffffe          BL       _SetFlag
;;;1803   }
0017b0  bd70              POP      {r4-r6,pc}
;;;1804   
                          ENDP

                  MULTIEDIT_SetHBorder PROC
;;;1808   */
;;;1809   void MULTIEDIT_SetHBorder(MULTIEDIT_HANDLE hObj, unsigned HBorder) {
0017b2  b570              PUSH     {r4-r6,lr}
0017b4  4605              MOV      r5,r0
0017b6  460c              MOV      r4,r1
;;;1810     if (hObj) {
0017b8  b16d              CBZ      r5,|L1.6102|
;;;1811       MULTIEDIT_OBJ* pObj;
;;;1812       WM_LOCK();
;;;1813       pObj = MULTIEDIT_H2P(hObj);
0017ba  4628              MOV      r0,r5
0017bc  f7fffffe          BL       GUI_ALLOC_h2p
0017c0  4606              MOV      r6,r0
;;;1814       if ((unsigned)pObj->HBorder != HBorder) {
0017c2  f896007b          LDRB     r0,[r6,#0x7b]
0017c6  42a0              CMP      r0,r4
0017c8  d004              BEQ      |L1.6100|
;;;1815         pObj->HBorder = HBorder;
0017ca  f886407b          STRB     r4,[r6,#0x7b]
;;;1816         _Invalidate(hObj);
0017ce  4628              MOV      r0,r5
0017d0  f7fffffe          BL       _Invalidate
                  |L1.6100|
;;;1817       }
;;;1818       WM_UNLOCK();
;;;1819     }
0017d4  bf00              NOP      
                  |L1.6102|
;;;1820   }
0017d6  bd70              POP      {r4-r6,pc}
;;;1821   
                          ENDP

                  MULTIEDIT_SetFont PROC
;;;1825   */
;;;1826   void MULTIEDIT_SetFont(MULTIEDIT_HANDLE hObj, const GUI_FONT GUI_UNI_PTR * pFont) {
0017d8  b570              PUSH     {r4-r6,lr}
0017da  4606              MOV      r6,r0
0017dc  460c              MOV      r4,r1
;;;1827     if (hObj) {
0017de  b1a6              CBZ      r6,|L1.6154|
;;;1828       MULTIEDIT_OBJ* pObj;
;;;1829       WM_LOCK();
;;;1830       pObj = MULTIEDIT_H2P(hObj);
0017e0  4630              MOV      r0,r6
0017e2  f7fffffe          BL       GUI_ALLOC_h2p
0017e6  4605              MOV      r5,r0
;;;1831       if (pObj->pFont != pFont) {
0017e8  6f68              LDR      r0,[r5,#0x74]
0017ea  42a0              CMP      r0,r4
0017ec  d00c              BEQ      |L1.6152|
;;;1832         pObj->pFont = pFont;
0017ee  676c              STR      r4,[r5,#0x74]
;;;1833         _InvalidateTextArea(hObj);
0017f0  4630              MOV      r0,r6
0017f2  f7fffffe          BL       _InvalidateTextArea
;;;1834         _InvalidateCursorXY(pObj);
0017f6  4628              MOV      r0,r5
0017f8  f7fffffe          BL       _InvalidateCursorXY
;;;1835         _InvalidateNumLines(pObj);
0017fc  4628              MOV      r0,r5
0017fe  f7fffffe          BL       _InvalidateNumLines
;;;1836         _InvalidateTextSizeX(pObj);
001802  4628              MOV      r0,r5
001804  f7fffffe          BL       _InvalidateTextSizeX
                  |L1.6152|
;;;1837       }
;;;1838       WM_UNLOCK();
;;;1839     }
001808  bf00              NOP      
                  |L1.6154|
;;;1840   }
00180a  bd70              POP      {r4-r6,pc}
;;;1841   
                          ENDP

                  MULTIEDIT_SetBkColor PROC
;;;1845   */
;;;1846   void MULTIEDIT_SetBkColor(MULTIEDIT_HANDLE hObj, unsigned Index, GUI_COLOR color) {
00180c  e92d41f0          PUSH     {r4-r8,lr}
001810  4605              MOV      r5,r0
001812  460c              MOV      r4,r1
001814  4616              MOV      r6,r2
;;;1847     if (hObj && (Index < NUM_DISP_MODES)) {
001816  b16d              CBZ      r5,|L1.6196|
001818  2c02              CMP      r4,#2
00181a  d20b              BCS      |L1.6196|
;;;1848       MULTIEDIT_OBJ* pObj;
;;;1849       WM_LOCK();
;;;1850       pObj = MULTIEDIT_H2P(hObj);
00181c  4628              MOV      r0,r5
00181e  f7fffffe          BL       GUI_ALLOC_h2p
001822  4607              MOV      r7,r0
;;;1851       pObj->aBkColor[Index] = color;
001824  f1070028          ADD      r0,r7,#0x28
001828  f8406024          STR      r6,[r0,r4,LSL #2]
;;;1852       _InvalidateTextArea(hObj);
00182c  4628              MOV      r0,r5
00182e  f7fffffe          BL       _InvalidateTextArea
;;;1853       WM_UNLOCK();
;;;1854     }
001832  bf00              NOP      
                  |L1.6196|
;;;1855   }
001834  e8bd81f0          POP      {r4-r8,pc}
;;;1856   
                          ENDP

                  MULTIEDIT_SetCursorOffset PROC
;;;1860   */
;;;1861   void MULTIEDIT_SetCursorOffset(MULTIEDIT_HANDLE hObj, int Offset) {
001838  b570              PUSH     {r4-r6,lr}
00183a  4604              MOV      r4,r0
00183c  460d              MOV      r5,r1
;;;1862     if (hObj) {
00183e  b164              CBZ      r4,|L1.6234|
;;;1863       MULTIEDIT_OBJ* pObj;
;;;1864       WM_LOCK();
;;;1865       pObj = MULTIEDIT_H2P(hObj);
001840  4620              MOV      r0,r4
001842  f7fffffe          BL       GUI_ALLOC_h2p
001846  4606              MOV      r6,r0
;;;1866       _SetCursorPos(hObj, pObj, Offset);
001848  462a              MOV      r2,r5
00184a  4631              MOV      r1,r6
00184c  4620              MOV      r0,r4
00184e  f7fffffe          BL       _SetCursorPos
;;;1867       WM_Invalidate(hObj);
001852  4620              MOV      r0,r4
001854  f7fffffe          BL       WM_InvalidateWindow
;;;1868       WM_UNLOCK();
;;;1869     }
001858  bf00              NOP      
                  |L1.6234|
;;;1870   }
00185a  bd70              POP      {r4-r6,pc}
;;;1871   
                          ENDP

                  MULTIEDIT_SetTextColor PROC
;;;1875   */
;;;1876   void MULTIEDIT_SetTextColor(MULTIEDIT_HANDLE hObj, unsigned Index, GUI_COLOR color) {
00185c  e92d41f0          PUSH     {r4-r8,lr}
001860  4605              MOV      r5,r0
001862  460c              MOV      r4,r1
001864  4616              MOV      r6,r2
;;;1877     if (hObj && (Index < NUM_DISP_MODES)) {
001866  b16d              CBZ      r5,|L1.6276|
001868  2c02              CMP      r4,#2
00186a  d20b              BCS      |L1.6276|
;;;1878       MULTIEDIT_OBJ* pObj;
;;;1879       WM_LOCK();
;;;1880       pObj = MULTIEDIT_H2P(hObj);
00186c  4628              MOV      r0,r5
00186e  f7fffffe          BL       GUI_ALLOC_h2p
001872  4607              MOV      r7,r0
;;;1881       pObj->aColor[Index] = color;
001874  f1070030          ADD      r0,r7,#0x30
001878  f8406024          STR      r6,[r0,r4,LSL #2]
;;;1882       WM_Invalidate(hObj);
00187c  4628              MOV      r0,r5
00187e  f7fffffe          BL       WM_InvalidateWindow
;;;1883       WM_UNLOCK();
;;;1884     }
001882  bf00              NOP      
                  |L1.6276|
;;;1885   }
001884  e8bd81f0          POP      {r4-r8,pc}
;;;1886   
                          ENDP

                  MULTIEDIT_SetPrompt PROC
;;;1890   */
;;;1891   void MULTIEDIT_SetPrompt(MULTIEDIT_HANDLE hObj, const char* pPrompt) {
001888  e92d4ff8          PUSH     {r3-r11,lr}
00188c  4682              MOV      r10,r0
00188e  460e              MOV      r6,r1
;;;1892     if (hObj) {
001890  f1ba0f00          CMP      r10,#0
001894  d05e              BEQ      |L1.6484|
;;;1893       MULTIEDIT_OBJ* pObj;
;;;1894       int NumCharsNew = 0, NumCharsOld = 0;
001896  2700              MOVS     r7,#0
001898  46bb              MOV      r11,r7
;;;1895       int NumBytesNew = 0, NumBytesOld = 0;
00189a  46b8              MOV      r8,r7
00189c  46b9              MOV      r9,r7
;;;1896       char* pText;
;;;1897       WM_LOCK();
;;;1898       pObj = MULTIEDIT_H2P(hObj);
00189e  4650              MOV      r0,r10
0018a0  f7fffffe          BL       GUI_ALLOC_h2p
0018a4  4604              MOV      r4,r0
;;;1899       if (pObj->hText) {
0018a6  8f20              LDRH     r0,[r4,#0x38]
0018a8  b158              CBZ      r0,|L1.6338|
;;;1900         pText = (char*) GUI_ALLOC_h2p(pObj->hText);
0018aa  f9b40038          LDRSH    r0,[r4,#0x38]
0018ae  f7fffffe          BL       GUI_ALLOC_h2p
0018b2  4605              MOV      r5,r0
;;;1901         NumCharsOld = pObj->NumCharsPrompt;
0018b4  f8b4b03e          LDRH     r11,[r4,#0x3e]
;;;1902         NumBytesOld = GUI_UC__NumChars2NumBytes(pText, NumCharsOld);
0018b8  4659              MOV      r1,r11
0018ba  4628              MOV      r0,r5
0018bc  f7fffffe          BL       GUI_UC__NumChars2NumBytes
0018c0  4681              MOV      r9,r0
                  |L1.6338|
;;;1903       }
;;;1904       if (pPrompt) {
0018c2  b186              CBZ      r6,|L1.6374|
;;;1905         NumCharsNew = GUI__GetNumChars(pPrompt);
0018c4  4630              MOV      r0,r6
0018c6  f7fffffe          BL       GUI__GetNumChars
0018ca  4607              MOV      r7,r0
;;;1906         NumBytesNew = GUI_UC__NumChars2NumBytes(pPrompt, NumCharsNew);
0018cc  4639              MOV      r1,r7
0018ce  4630              MOV      r0,r6
0018d0  e006              B        |L1.6368|
0018d2  0000              DCW      0x0000
                  |L1.6356|
                          DCD      _aDefaultBkColor
                  |L1.6360|
                          DCD      _aDefaultColor
                  |L1.6364|
                          DCD      _pDefaultFont
                  |L1.6368|
0018e0  f7fffffe          BL       GUI_UC__NumChars2NumBytes
0018e4  4680              MOV      r8,r0
                  |L1.6374|
;;;1907       }
;;;1908       if (_IsCharsAvailable(pObj, NumCharsNew - NumCharsOld)) {
0018e6  eba7010b          SUB      r1,r7,r11
0018ea  4620              MOV      r0,r4
0018ec  f7fffffe          BL       _IsCharsAvailable
0018f0  b378              CBZ      r0,|L1.6482|
;;;1909         if (_IsSpaceInBuffer(pObj, NumBytesNew - NumBytesOld)) {
0018f2  eba80109          SUB      r1,r8,r9
0018f6  4620              MOV      r0,r4
0018f8  f7fffffe          BL       _IsSpaceInBuffer
0018fc  b348              CBZ      r0,|L1.6482|
;;;1910           pText = (char*) GUI_ALLOC_h2p(pObj->hText);
0018fe  f9b40038          LDRSH    r0,[r4,#0x38]
001902  f7fffffe          BL       GUI_ALLOC_h2p
001906  4605              MOV      r5,r0
;;;1911           memmove(pText + NumBytesNew, pText + NumBytesOld, strlen(pText + NumBytesOld) + 1);
001908  eb050009          ADD      r0,r5,r9
00190c  f7fffffe          BL       strlen
001910  1c40              ADDS     r0,r0,#1
001912  eb050109          ADD      r1,r5,r9
001916  9000              STR      r0,[sp,#0]
001918  eb050008          ADD      r0,r5,r8
00191c  9a00              LDR      r2,[sp,#0]
00191e  f7fffffe          BL       __aeabi_memmove
;;;1912           if (pPrompt) {
001922  b126              CBZ      r6,|L1.6446|
;;;1913             memcpy(pText, pPrompt, NumBytesNew);
001924  4642              MOV      r2,r8
001926  4631              MOV      r1,r6
001928  4628              MOV      r0,r5
00192a  f7fffffe          BL       __aeabi_memcpy
                  |L1.6446|
;;;1914           }
;;;1915           pObj->NumCharsPrompt = NumCharsNew;
00192e  87e7              STRH     r7,[r4,#0x3e]
;;;1916           _SetCursorPos(hObj, pObj, NumCharsNew);
001930  463a              MOV      r2,r7
001932  4621              MOV      r1,r4
001934  4650              MOV      r0,r10
001936  f7fffffe          BL       _SetCursorPos
;;;1917           _InvalidateTextArea(hObj);
00193a  4650              MOV      r0,r10
00193c  f7fffffe          BL       _InvalidateTextArea
;;;1918           _InvalidateNumChars(pObj);
001940  4620              MOV      r0,r4
001942  f7fffffe          BL       _InvalidateNumChars
;;;1919           _InvalidateNumLines(pObj);
001946  4620              MOV      r0,r4
001948  f7fffffe          BL       _InvalidateNumLines
;;;1920           _InvalidateTextSizeX(pObj);
00194c  4620              MOV      r0,r4
00194e  f7fffffe          BL       _InvalidateTextSizeX
                  |L1.6482|
;;;1921         }
;;;1922       }
;;;1923       WM_UNLOCK();
;;;1924     }
001952  bf00              NOP      
                  |L1.6484|
;;;1925   }
001954  e8bd8ff8          POP      {r3-r11,pc}
;;;1926   
                          ENDP

                  MULTIEDIT_SetBufferSize PROC
;;;1930   */
;;;1931   void MULTIEDIT_SetBufferSize(MULTIEDIT_HANDLE hObj, int BufferSize) {
001958  e92d41f0          PUSH     {r4-r8,lr}
00195c  4606              MOV      r6,r0
00195e  460d              MOV      r5,r1
;;;1932     if (hObj) {
001960  b336              CBZ      r6,|L1.6576|
;;;1933       MULTIEDIT_OBJ* pObj;
;;;1934       WM_HMEM hText;
;;;1935       WM_LOCK();
;;;1936       pObj = MULTIEDIT_H2P(hObj);
001962  4630              MOV      r0,r6
001964  f7fffffe          BL       GUI_ALLOC_h2p
001968  4604              MOV      r4,r0
;;;1937       if ((hText = GUI_ALLOC_AllocZero(BufferSize)) == 0) {
00196a  b228              SXTH     r0,r5
00196c  f7fffffe          BL       GUI_ALLOC_AllocZero
001970  0007              MOVS     r7,r0
001972  d019              BEQ      |L1.6568|
;;;1938         GUI_DEBUG_ERROROUT("MULTIEDIT_SetBufferSize failed to alloc buffer");
;;;1939       } else {
;;;1940         GUI_ALLOC_FreePtr(&pObj->hText);
001974  f1040038          ADD      r0,r4,#0x38
001978  f7fffffe          BL       GUI_ALLOC_FreePtr
;;;1941         pObj->hText          = hText;
00197c  8727              STRH     r7,[r4,#0x38]
;;;1942         pObj->BufferSize     = BufferSize;
00197e  f8a45044          STRH     r5,[r4,#0x44]
;;;1943         pObj->NumCharsPrompt = 0;
001982  2000              MOVS     r0,#0
001984  87e0              STRH     r0,[r4,#0x3e]
;;;1944         _SetCursorPos(hObj, pObj, 0);
001986  2200              MOVS     r2,#0
001988  4621              MOV      r1,r4
00198a  4630              MOV      r0,r6
00198c  f7fffffe          BL       _SetCursorPos
;;;1945         _InvalidateNumChars(pObj);
001990  4620              MOV      r0,r4
001992  f7fffffe          BL       _InvalidateNumChars
;;;1946         _InvalidateCursorXY(pObj);
001996  4620              MOV      r0,r4
001998  f7fffffe          BL       _InvalidateCursorXY
;;;1947         _InvalidateNumLines(pObj);
00199c  4620              MOV      r0,r4
00199e  f7fffffe          BL       _InvalidateNumLines
;;;1948         _InvalidateTextSizeX(pObj);
0019a2  4620              MOV      r0,r4
0019a4  f7fffffe          BL       _InvalidateTextSizeX
                  |L1.6568|
;;;1949       }
;;;1950       _InvalidateTextArea(hObj);
0019a8  4630              MOV      r0,r6
0019aa  f7fffffe          BL       _InvalidateTextArea
;;;1951       WM_UNLOCK();
;;;1952     }
0019ae  bf00              NOP      
                  |L1.6576|
;;;1953   }
0019b0  e8bd81f0          POP      {r4-r8,pc}
;;;1954   
                          ENDP

                  MULTIEDIT_SetMaxNumChars PROC
;;;1958   */
;;;1959   void MULTIEDIT_SetMaxNumChars(MULTIEDIT_HANDLE hObj, unsigned MaxNumChars) {
0019b4  e92d41f0          PUSH     {r4-r8,lr}
0019b8  4680              MOV      r8,r0
0019ba  460d              MOV      r5,r1
;;;1960     if (hObj) {
0019bc  f1b80f00          CMP      r8,#0
0019c0  d029              BEQ      |L1.6678|
;;;1961       MULTIEDIT_OBJ* pObj;
;;;1962       WM_LOCK();
;;;1963       pObj = MULTIEDIT_H2P(hObj);
0019c2  4640              MOV      r0,r8
0019c4  f7fffffe          BL       GUI_ALLOC_h2p
0019c8  4604              MOV      r4,r0
;;;1964       pObj->MaxNumChars = MaxNumChars;
0019ca  8765              STRH     r5,[r4,#0x3a]
;;;1965       if (MaxNumChars < (unsigned)pObj->NumCharsPrompt) {
0019cc  8fe0              LDRH     r0,[r4,#0x3e]
0019ce  42a8              CMP      r0,r5
0019d0  d900              BLS      |L1.6612|
;;;1966         pObj->NumCharsPrompt = MaxNumChars;
0019d2  87e5              STRH     r5,[r4,#0x3e]
                  |L1.6612|
;;;1967       }
;;;1968       if (pObj->hText && MaxNumChars) {
0019d4  8f20              LDRH     r0,[r4,#0x38]
0019d6  b1e8              CBZ      r0,|L1.6676|
0019d8  b1e5              CBZ      r5,|L1.6676|
;;;1969         char* pText;
;;;1970         int Offset;
;;;1971         pText = (char*) GUI_ALLOC_h2p(pObj->hText);
0019da  f9b40038          LDRSH    r0,[r4,#0x38]
0019de  f7fffffe          BL       GUI_ALLOC_h2p
0019e2  4606              MOV      r6,r0
;;;1972         Offset = GUI_UC__NumChars2NumBytes(pText, MaxNumChars);
0019e4  4629              MOV      r1,r5
0019e6  4630              MOV      r0,r6
0019e8  f7fffffe          BL       GUI_UC__NumChars2NumBytes
0019ec  4607              MOV      r7,r0
;;;1973         if (Offset < pObj->BufferSize) {
0019ee  f8b40044          LDRH     r0,[r4,#0x44]
0019f2  42b8              CMP      r0,r7
0019f4  dd0d              BLE      |L1.6674|
;;;1974           pText += Offset;
0019f6  443e              ADD      r6,r6,r7
;;;1975           *pText = 0;
0019f8  2000              MOVS     r0,#0
0019fa  7030              STRB     r0,[r6,#0]
;;;1976           _SetCursorPos(hObj, pObj, Offset);
0019fc  463a              MOV      r2,r7
0019fe  4621              MOV      r1,r4
001a00  4640              MOV      r0,r8
001a02  f7fffffe          BL       _SetCursorPos
;;;1977           _InvalidateTextArea(hObj);
001a06  4640              MOV      r0,r8
001a08  f7fffffe          BL       _InvalidateTextArea
;;;1978           _InvalidateNumChars(pObj);
001a0c  4620              MOV      r0,r4
001a0e  f7fffffe          BL       _InvalidateNumChars
                  |L1.6674|
;;;1979         }
;;;1980       }
001a12  bf00              NOP      
                  |L1.6676|
;;;1981       WM_UNLOCK();
;;;1982     }
001a14  bf00              NOP      
                  |L1.6678|
;;;1983   }
001a16  e8bd81f0          POP      {r4-r8,pc}
;;;1984   
                          ENDP

                  MULTIEDIT_GetTextSize PROC
;;;1993   */
;;;1994   int MULTIEDIT_GetTextSize(MULTIEDIT_HANDLE hObj) {
001a1a  e92d41f0          PUSH     {r4-r8,lr}
001a1e  4605              MOV      r5,r0
;;;1995     int r = 0;
001a20  2700              MOVS     r7,#0
;;;1996     if (hObj) {
001a22  b1ad              CBZ      r5,|L1.6736|
;;;1997       MULTIEDIT_OBJ* pObj;
;;;1998       WM_LOCK();
;;;1999       pObj = MULTIEDIT_H2P(hObj);
001a24  4628              MOV      r0,r5
001a26  f7fffffe          BL       GUI_ALLOC_h2p
001a2a  4604              MOV      r4,r0
;;;2000       if (pObj->hText) {
001a2c  8f20              LDRH     r0,[r4,#0x38]
001a2e  b170              CBZ      r0,|L1.6734|
;;;2001         const char* s;
;;;2002         s = (const char*)GUI_ALLOC_h2p(pObj->hText);
001a30  f9b40038          LDRSH    r0,[r4,#0x38]
001a34  f7fffffe          BL       GUI_ALLOC_h2p
001a38  4606              MOV      r6,r0
;;;2003         s += GUI_UC__NumChars2NumBytes(s, pObj->NumCharsPrompt);
001a3a  8fe1              LDRH     r1,[r4,#0x3e]
001a3c  4630              MOV      r0,r6
001a3e  f7fffffe          BL       GUI_UC__NumChars2NumBytes
001a42  4406              ADD      r6,r6,r0
;;;2004         r = 1 + strlen(s);
001a44  4630              MOV      r0,r6
001a46  f7fffffe          BL       strlen
001a4a  1c47              ADDS     r7,r0,#1
;;;2005       }
001a4c  bf00              NOP      
                  |L1.6734|
;;;2006       WM_UNLOCK();
;;;2007     }
001a4e  bf00              NOP      
                  |L1.6736|
;;;2008     return r;
001a50  4638              MOV      r0,r7
;;;2009   }
001a52  e8bd81f0          POP      {r4-r8,pc}
;;;2010   
                          ENDP

                  MULTIEDIT_SetTextAlign PROC
;;;2015   */
;;;2016   void MULTIEDIT_SetTextAlign(MULTIEDIT_HANDLE hObj, int Align) {
001a56  b570              PUSH     {r4-r6,lr}
001a58  4606              MOV      r6,r0
001a5a  460c              MOV      r4,r1
;;;2017     if (hObj) {
001a5c  b19e              CBZ      r6,|L1.6790|
;;;2018       MULTIEDIT_OBJ* pObj;
;;;2019       WM_LOCK();
;;;2020       pObj = MULTIEDIT_H2P(hObj);
001a5e  4630              MOV      r0,r6
001a60  f7fffffe          BL       GUI_ALLOC_h2p
001a64  4605              MOV      r5,r0
;;;2021       if (pObj->Align != Align) {
001a66  f8b50058          LDRH     r0,[r5,#0x58]
001a6a  42a0              CMP      r0,r4
001a6c  d00a              BEQ      |L1.6788|
;;;2022         pObj->Align = Align;
001a6e  f8a54058          STRH     r4,[r5,#0x58]
;;;2023         _InvalidateTextArea(hObj);
001a72  4630              MOV      r0,r6
001a74  f7fffffe          BL       _InvalidateTextArea
;;;2024         _InvalidateCursorXY(pObj);
001a78  4628              MOV      r0,r5
001a7a  f7fffffe          BL       _InvalidateCursorXY
;;;2025         //_InvalidateNumLines(pObj);
;;;2026         _InvalidateTextSizeX(pObj);
001a7e  4628              MOV      r0,r5
001a80  f7fffffe          BL       _InvalidateTextSizeX
                  |L1.6788|
;;;2027       }
;;;2028       WM_UNLOCK();
;;;2029     }
001a84  bf00              NOP      
                  |L1.6790|
;;;2030   }
001a86  bd70              POP      {r4-r6,pc}
;;;2031   
                          ENDP

                  MULTIEDIT_GetCursorCharPos PROC
;;;2035   */
;;;2036   int MULTIEDIT_GetCursorCharPos(MULTIEDIT_HANDLE hObj) {
001a88  b570              PUSH     {r4-r6,lr}
001a8a  4604              MOV      r4,r0
;;;2037     int r = 0;
001a8c  2500              MOVS     r5,#0
;;;2038     if (hObj) {
001a8e  b134              CBZ      r4,|L1.6814|
;;;2039       MULTIEDIT_OBJ* pObj;
;;;2040       WM_LOCK();
;;;2041       pObj = MULTIEDIT_H2P(hObj);
001a90  4620              MOV      r0,r4
001a92  f7fffffe          BL       GUI_ALLOC_h2p
001a96  4606              MOV      r6,r0
;;;2042       r = pObj->CursorPosChar;
001a98  f8b65048          LDRH     r5,[r6,#0x48]
;;;2043       WM_UNLOCK();
;;;2044     }
001a9c  bf00              NOP      
                  |L1.6814|
;;;2045     return r;
001a9e  4628              MOV      r0,r5
;;;2046   }
001aa0  bd70              POP      {r4-r6,pc}
;;;2047   
                          ENDP

                  MULTIEDIT_GetCursorPixelPos PROC
;;;2051   */
;;;2052   void MULTIEDIT_GetCursorPixelPos(MULTIEDIT_HANDLE hObj, int * pxPos, int * pyPos) {
001aa2  e92d47f0          PUSH     {r4-r10,lr}
001aa6  4607              MOV      r7,r0
001aa8  460d              MOV      r5,r1
001aaa  4616              MOV      r6,r2
;;;2053     if (hObj) {
001aac  b307              CBZ      r7,|L1.6896|
;;;2054       MULTIEDIT_OBJ* pObj;
;;;2055       int FontSizeY, EffectSize;
;;;2056       WM_LOCK();
;;;2057       pObj = MULTIEDIT_H2P(hObj);
001aae  4638              MOV      r0,r7
001ab0  f7fffffe          BL       GUI_ALLOC_h2p
001ab4  4604              MOV      r4,r0
;;;2058       FontSizeY  = GUI_GetYSizeOfFont(pObj->pFont);
001ab6  6f60              LDR      r0,[r4,#0x74]
001ab8  f7fffffe          BL       GUI_GetYSizeOfFont
001abc  4681              MOV      r9,r0
;;;2059       EffectSize = pObj->Widget.pEffect->EffectSize;
001abe  6a20              LDR      r0,[r4,#0x20]
001ac0  f8d08014          LDR      r8,[r0,#0x14]
;;;2060       _GetCursorXY(hObj, pObj, pxPos, pyPos);
001ac4  4633              MOV      r3,r6
001ac6  462a              MOV      r2,r5
001ac8  4621              MOV      r1,r4
001aca  4638              MOV      r0,r7
001acc  f7fffffe          BL       _GetCursorXY
;;;2061       *pxPos += EffectSize - pObj->ScrollStateH.v + pObj->HBorder;
001ad0  6ee0              LDR      r0,[r4,#0x6c]
001ad2  eba80000          SUB      r0,r8,r0
001ad6  f894107b          LDRB     r1,[r4,#0x7b]
001ada  4408              ADD      r0,r0,r1
001adc  6829              LDR      r1,[r5,#0]
001ade  4408              ADD      r0,r0,r1
001ae0  6028              STR      r0,[r5,#0]
;;;2062       *pyPos += EffectSize - pObj->ScrollStateV.v * FontSizeY;
001ae2  6831              LDR      r1,[r6,#0]
001ae4  6e20              LDR      r0,[r4,#0x60]
001ae6  fb008019          MLS      r0,r0,r9,r8
001aea  4408              ADD      r0,r0,r1
001aec  6030              STR      r0,[r6,#0]
;;;2063       WM_UNLOCK();
;;;2064     }
001aee  bf00              NOP      
                  |L1.6896|
;;;2065   }
001af0  e8bd87f0          POP      {r4-r10,pc}
;;;2066   
                          ENDP


                          AREA ||.data||, DATA, ALIGN=2

                  _aDefaultBkColor
                          DCD      0x00ffffff
                          DCD      0x00c0c0c0
                  _aDefaultColor
                          DCD      0x00000000
                          DCD      0x00000000
                  _pDefaultFont
                          DCD      GUI_Font13_1

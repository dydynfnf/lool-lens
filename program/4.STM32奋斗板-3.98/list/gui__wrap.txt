; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\gui__wrap.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\gui__wrap.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -IC:\Users\Administrator\Desktop\gui\STM32·Ü¶·°å-3.98\RTE -Id:\Keil_v5\ARM\PACK\ARM\CMSIS\4.3.0\CMSIS\Include -Id:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.1.0\Device\Include -D__UVISION_VERSION=515 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\gui__wrap.crf GUI\Core\GUI__Wrap.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  _IsLineEnd PROC
;;;31     */
;;;32     static int _IsLineEnd(U16 Char) {
000000  4601              MOV      r1,r0
;;;33       if (!Char || (Char == '\n')) {
000002  b109              CBZ      r1,|L1.8|
000004  290a              CMP      r1,#0xa
000006  d101              BNE      |L1.12|
                  |L1.8|
;;;34         return 1;
000008  2001              MOVS     r0,#1
                  |L1.10|
;;;35       }
;;;36       return 0;
;;;37     }
00000a  4770              BX       lr
                  |L1.12|
00000c  2000              MOVS     r0,#0                 ;36
00000e  e7fc              B        |L1.10|
;;;38     
                          ENDP

                  _GetNoWrap PROC
;;;42     */
;;;43     static int _GetNoWrap(const char GUI_UNI_PTR * s) {
000010  b510              PUSH     {r4,lr}
000012  4604              MOV      r4,r0
;;;44       return GUI__GetLineNumChars(s, 0x7FFF);
000014  f64771ff          MOV      r1,#0x7fff
000018  4620              MOV      r0,r4
00001a  f7fffffe          BL       GUI__GetLineNumChars
;;;45     }
00001e  bd10              POP      {r4,pc}
;;;46     
                          ENDP

                  _GetWordWrap PROC
;;;177    */
;;;178    static int _GetWordWrap(const char GUI_UNI_PTR * s, int xSize, int * pxDist) {
000020  e92d4ff7          PUSH     {r0-r2,r4-r11,lr}
000024  b082              SUB      sp,sp,#8
000026  4688              MOV      r8,r1
000028  4617              MOV      r7,r2
;;;179      int xDist = 0, NumChars = 0, WordWrap = 0, CharDist = 0;
00002a  2600              MOVS     r6,#0
00002c  2500              MOVS     r5,#0
00002e  2000              MOVS     r0,#0
000030  9001              STR      r0,[sp,#4]
000032  4681              MOV      r9,r0
;;;180      U16 Char, PrevChar = 0, FirstChar = 0;
000034  4682              MOV      r10,r0
000036  4683              MOV      r11,r0
;;;181      while (1) {
000038  e02e              B        |L1.152|
                  |L1.58|
;;;182        Char = GUI_UC__GetCharCodeInc(&s);   /* Similar to:  *s++ */
00003a  a802              ADD      r0,sp,#8
00003c  f7fffffe          BL       GUI_UC__GetCharCodeInc
000040  4604              MOV      r4,r0
;;;183        if (!FirstChar) {
000042  f1bb0f00          CMP      r11,#0
000046  d100              BNE      |L1.74|
;;;184          FirstChar = Char;
000048  46a3              MOV      r11,r4
                  |L1.74|
;;;185        }
;;;186        /* Let's first check if the line end is reached. In this case we are done. */
;;;187        if (_IsLineEnd(Char)) {
00004a  4620              MOV      r0,r4
00004c  f7fffffe          BL       _IsLineEnd
000050  b108              CBZ      r0,|L1.86|
;;;188          WordWrap = NumChars;
000052  9501              STR      r5,[sp,#4]
;;;189          break;
000054  e021              B        |L1.154|
                  |L1.86|
;;;190        }
;;;191        /* If the current character is part of leading spaces the position can be used for wrapping */
;;;192        if ((Char != ' ') && (FirstChar == ' ')) {
000056  2c20              CMP      r4,#0x20
000058  d006              BEQ      |L1.104|
00005a  f1bb0f20          CMP      r11,#0x20
00005e  d103              BNE      |L1.104|
;;;193          FirstChar = 0;
000060  f04f0b00          MOV      r11,#0
;;;194          WordWrap = NumChars;
000064  9501              STR      r5,[sp,#4]
000066  e00b              B        |L1.128|
                  |L1.104|
;;;195        /* If the current character is a space and the previous character not, we found a wrapping position */
;;;196        } else if ((Char == ' ') && (Char != PrevChar)) {
000068  2c20              CMP      r4,#0x20
00006a  d103              BNE      |L1.116|
00006c  4554              CMP      r4,r10
00006e  d001              BEQ      |L1.116|
;;;197          WordWrap = NumChars;
000070  9501              STR      r5,[sp,#4]
000072  e005              B        |L1.128|
                  |L1.116|
;;;198        /* If the current character is a trailing space the position can be used for wrapping */
;;;199        } else if ((Char == ' ') && (PrevChar == ' ')) {
000074  2c20              CMP      r4,#0x20
000076  d103              BNE      |L1.128|
000078  f1ba0f20          CMP      r10,#0x20
00007c  d100              BNE      |L1.128|
;;;200          WordWrap = NumChars;
00007e  9501              STR      r5,[sp,#4]
                  |L1.128|
;;;201        }
;;;202        PrevChar = Char;
000080  46a2              MOV      r10,r4
;;;203        CharDist = GUI_GetCharDistX(Char);
000082  4620              MOV      r0,r4
000084  f7fffffe          BL       GUI_GetCharDistX
000088  4681              MOV      r9,r0
;;;204        xDist += CharDist;
00008a  444e              ADD      r6,r6,r9
;;;205        if ((xDist <= xSize) || (NumChars == 0)) {
00008c  4546              CMP      r6,r8
00008e  dd00              BLE      |L1.146|
000090  b90d              CBNZ     r5,|L1.150|
                  |L1.146|
;;;206          NumChars++;
000092  1c6d              ADDS     r5,r5,#1
000094  e000              B        |L1.152|
                  |L1.150|
;;;207        } else {
;;;208          break;
000096  e000              B        |L1.154|
                  |L1.152|
000098  e7cf              B        |L1.58|
                  |L1.154|
00009a  bf00              NOP                            ;189
;;;209        }
;;;210      }
;;;211      if (!WordWrap) {
00009c  9801              LDR      r0,[sp,#4]
00009e  b900              CBNZ     r0,|L1.162|
;;;212        WordWrap = NumChars;
0000a0  9501              STR      r5,[sp,#4]
                  |L1.162|
;;;213      }
;;;214      if (pxDist) {
0000a2  b117              CBZ      r7,|L1.170|
;;;215        xDist -= CharDist;
0000a4  eba60609          SUB      r6,r6,r9
;;;216        *pxDist = xDist;
0000a8  603e              STR      r6,[r7,#0]
                  |L1.170|
;;;217      }
;;;218      return WordWrap;
0000aa  9801              LDR      r0,[sp,#4]
;;;219    }
0000ac  b005              ADD      sp,sp,#0x14
0000ae  e8bd8ff0          POP      {r4-r11,pc}
;;;220    
                          ENDP

                  _GetCharWrap PROC
;;;224    */
;;;225    static int _GetCharWrap(const char GUI_UNI_PTR * s, int xSize) {
0000b2  e92d41f3          PUSH     {r0,r1,r4-r8,lr}
0000b6  460e              MOV      r6,r1
;;;226      int xDist = 0, NumChars = 0;
0000b8  2700              MOVS     r7,#0
0000ba  2400              MOVS     r4,#0
;;;227      U16 Char;
;;;228      while ((Char = GUI_UC__GetCharCodeInc(&s)) != 0) {
0000bc  e00a              B        |L1.212|
                  |L1.190|
;;;229        xDist += GUI_GetCharDistX(Char);
0000be  4628              MOV      r0,r5
0000c0  f7fffffe          BL       GUI_GetCharDistX
0000c4  4407              ADD      r7,r7,r0
;;;230        if ((NumChars && (xDist > xSize)) || (Char == '\n')) {
0000c6  b10c              CBZ      r4,|L1.204|
0000c8  42b7              CMP      r7,r6
0000ca  dc01              BGT      |L1.208|
                  |L1.204|
0000cc  2d0a              CMP      r5,#0xa
0000ce  d100              BNE      |L1.210|
                  |L1.208|
;;;231          break;
0000d0  e005              B        |L1.222|
                  |L1.210|
;;;232        }
;;;233        NumChars++;
0000d2  1c64              ADDS     r4,r4,#1
                  |L1.212|
0000d4  4668              MOV      r0,sp                 ;228
0000d6  f7fffffe          BL       GUI_UC__GetCharCodeInc
0000da  0005              MOVS     r5,r0                 ;228
0000dc  d1ef              BNE      |L1.190|
                  |L1.222|
0000de  bf00              NOP                            ;231
;;;234      }
;;;235      return NumChars;
0000e0  4620              MOV      r0,r4
;;;236    }
0000e2  e8bd81fc          POP      {r2-r8,pc}
;;;237    
                          ENDP

                  _WrapGetNumCharsDisp PROC
;;;243    */
;;;244    static int _WrapGetNumCharsDisp(const char GUI_UNI_PTR * pText, int xSize, GUI_WRAPMODE WrapMode, int * pxDist) {
0000e6  e92d41f0          PUSH     {r4-r8,lr}
0000ea  4607              MOV      r7,r0
0000ec  4688              MOV      r8,r1
0000ee  4615              MOV      r5,r2
0000f0  461e              MOV      r6,r3
;;;245      int r;
;;;246      switch (WrapMode) {
0000f2  2d01              CMP      r5,#1
0000f4  d002              BEQ      |L1.252|
0000f6  2d02              CMP      r5,#2
0000f8  d10d              BNE      |L1.278|
0000fa  e006              B        |L1.266|
                  |L1.252|
;;;247      case GUI_WRAPMODE_WORD:
;;;248        r = _GetWordWrap(pText, xSize, pxDist);
0000fc  4632              MOV      r2,r6
0000fe  4641              MOV      r1,r8
000100  4638              MOV      r0,r7
000102  f7fffffe          BL       _GetWordWrap
000106  4604              MOV      r4,r0
;;;249        break;
000108  e00a              B        |L1.288|
                  |L1.266|
;;;250      case GUI_WRAPMODE_CHAR:
;;;251        r = _GetCharWrap(pText, xSize);
00010a  4641              MOV      r1,r8
00010c  4638              MOV      r0,r7
00010e  f7fffffe          BL       _GetCharWrap
000112  4604              MOV      r4,r0
;;;252        break;
000114  e004              B        |L1.288|
                  |L1.278|
;;;253      default:
;;;254        r = _GetNoWrap(pText);
000116  4638              MOV      r0,r7
000118  f7fffffe          BL       _GetNoWrap
00011c  4604              MOV      r4,r0
00011e  bf00              NOP                            ;246
                  |L1.288|
000120  bf00              NOP                            ;249
;;;255      }
;;;256      return r;
000122  4620              MOV      r0,r4
;;;257    }
000124  e8bd81f0          POP      {r4-r8,pc}
;;;258    
                          ENDP

                  GUI__WrapGetNumCharsDisp PROC
;;;273    */
;;;274    int GUI__WrapGetNumCharsDisp(const char GUI_UNI_PTR * pText, int xSize, GUI_WRAPMODE WrapMode) {
000128  b570              PUSH     {r4-r6,lr}
00012a  4604              MOV      r4,r0
00012c  460d              MOV      r5,r1
00012e  4616              MOV      r6,r2
;;;275      return _WrapGetNumCharsDisp(pText, xSize, WrapMode, 0);
000130  2300              MOVS     r3,#0
000132  4632              MOV      r2,r6
000134  4629              MOV      r1,r5
000136  4620              MOV      r0,r4
000138  f7fffffe          BL       _WrapGetNumCharsDisp
;;;276    }
00013c  bd70              POP      {r4-r6,pc}
;;;277    
                          ENDP

                  GUI__WrapGetNumCharsToNextLine PROC
;;;281    */
;;;282    int GUI__WrapGetNumCharsToNextLine(const char GUI_UNI_PTR * pText, int xSize, GUI_WRAPMODE WrapMode) {
00013e  e92d41f7          PUSH     {r0-r2,r4-r8,lr}
000142  b081              SUB      sp,sp,#4
000144  460e              MOV      r6,r1
000146  4617              MOV      r7,r2
;;;283      int NumChars;
;;;284      int xDist;
;;;285      U16 Char;
;;;286      NumChars = _WrapGetNumCharsDisp(pText, xSize, WrapMode, &xDist);
000148  466b              MOV      r3,sp
00014a  463a              MOV      r2,r7
00014c  4631              MOV      r1,r6
00014e  9801              LDR      r0,[sp,#4]
000150  f7fffffe          BL       _WrapGetNumCharsDisp
000154  4604              MOV      r4,r0
;;;287      pText   += GUI_UC__NumChars2NumBytes(pText, NumChars);
000156  4621              MOV      r1,r4
000158  9801              LDR      r0,[sp,#4]
00015a  f7fffffe          BL       GUI_UC__NumChars2NumBytes
00015e  9901              LDR      r1,[sp,#4]
000160  4408              ADD      r0,r0,r1
000162  9001              STR      r0,[sp,#4]
;;;288      Char     = GUI_UC__GetCharCodeInc(&pText);
000164  a801              ADD      r0,sp,#4
000166  f7fffffe          BL       GUI_UC__GetCharCodeInc
00016a  4605              MOV      r5,r0
;;;289      if (Char == '\n') {
00016c  2d0a              CMP      r5,#0xa
00016e  d101              BNE      |L1.372|
;;;290        NumChars++;
000170  1c64              ADDS     r4,r4,#1
000172  e016              B        |L1.418|
                  |L1.372|
;;;291      } else {
;;;292        if ((WrapMode == GUI_WRAPMODE_WORD) && (Char == ' ')) {
000174  2f01              CMP      r7,#1
000176  d114              BNE      |L1.418|
000178  2d20              CMP      r5,#0x20
00017a  d112              BNE      |L1.418|
;;;293          int xDistChar = GUI_GetCharDistX(Char);
00017c  4628              MOV      r0,r5
00017e  f7fffffe          BL       GUI_GetCharDistX
000182  4680              MOV      r8,r0
;;;294          while ((Char == ' ') && (xSize >= xDist)) {
000184  e007              B        |L1.406|
                  |L1.390|
;;;295            NumChars++;
000186  1c64              ADDS     r4,r4,#1
;;;296            xDist += xDistChar;
000188  9800              LDR      r0,[sp,#0]
00018a  4440              ADD      r0,r0,r8
00018c  9000              STR      r0,[sp,#0]
;;;297            Char = GUI_UC__GetCharCodeInc(&pText);
00018e  a801              ADD      r0,sp,#4
000190  f7fffffe          BL       GUI_UC__GetCharCodeInc
000194  4605              MOV      r5,r0
                  |L1.406|
000196  2d20              CMP      r5,#0x20              ;294
000198  d102              BNE      |L1.416|
00019a  9800              LDR      r0,[sp,#0]            ;294
00019c  4286              CMP      r6,r0                 ;294
00019e  daf2              BGE      |L1.390|
                  |L1.416|
;;;298          }
;;;299        }
0001a0  bf00              NOP      
                  |L1.418|
;;;300      }
;;;301      return NumChars;
0001a2  4620              MOV      r0,r4
;;;302    }
0001a4  b004              ADD      sp,sp,#0x10
0001a6  e8bd81f0          POP      {r4-r8,pc}
;;;303    
                          ENDP

                  GUI__WrapGetNumBytesToNextLine PROC
;;;307    */
;;;308    int GUI__WrapGetNumBytesToNextLine(const char GUI_UNI_PTR * pText, int xSize, GUI_WRAPMODE WrapMode) {
0001aa  e92d41f0          PUSH     {r4-r8,lr}
0001ae  4604              MOV      r4,r0
0001b0  460d              MOV      r5,r1
0001b2  4616              MOV      r6,r2
;;;309      int NumChars, NumBytes;
;;;310      NumChars = GUI__WrapGetNumCharsToNextLine(pText, xSize, WrapMode);
0001b4  4632              MOV      r2,r6
0001b6  4629              MOV      r1,r5
0001b8  4620              MOV      r0,r4
0001ba  f7fffffe          BL       GUI__WrapGetNumCharsToNextLine
0001be  4680              MOV      r8,r0
;;;311      NumBytes = GUI_UC__NumChars2NumBytes(pText, NumChars);
0001c0  4641              MOV      r1,r8
0001c2  4620              MOV      r0,r4
0001c4  f7fffffe          BL       GUI_UC__NumChars2NumBytes
0001c8  4607              MOV      r7,r0
;;;312      return NumBytes;
0001ca  4638              MOV      r0,r7
;;;313    }
0001cc  e8bd81f0          POP      {r4-r8,pc}
;;;314    
                          ENDP


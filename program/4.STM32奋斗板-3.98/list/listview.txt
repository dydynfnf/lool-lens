; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\listview.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\listview.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -IC:\Users\Administrator\Desktop\gui\STM32·Ü¶·°å-3.98\RTE -Id:\Keil_v5\ARM\PACK\ARM\CMSIS\4.3.0\CMSIS\Include -Id:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.1.0\Device\Include -D__UVISION_VERSION=515 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\listview.crf GUI\Widget\LISTVIEW.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  LISTVIEW__GetNumRows PROC
;;;126    */
;;;127    unsigned LISTVIEW__GetNumRows(LISTVIEW_Obj* pObj) {
000000  b510              PUSH     {r4,lr}
000002  4604              MOV      r4,r0
;;;128      return GUI_ARRAY_GetNumItems(&pObj->RowArray);
000004  f104002a          ADD      r0,r4,#0x2a
000008  f7fffffe          BL       GUI_ARRAY_GetNumItems
;;;129    }
00000c  bd10              POP      {r4,pc}
;;;130    
                          ENDP

                  LISTVIEW__GetNumColumns PROC
;;;134    */
;;;135    unsigned LISTVIEW__GetNumColumns(LISTVIEW_Obj* pObj) {
00000e  b510              PUSH     {r4,lr}
000010  4604              MOV      r4,r0
;;;136      return GUI_ARRAY_GetNumItems(&pObj->ColumnArray);
000012  f104002e          ADD      r0,r4,#0x2e
000016  f7fffffe          BL       GUI_ARRAY_GetNumItems
;;;137    }
00001a  bd10              POP      {r4,pc}
;;;138    
                          ENDP

                  LISTVIEW__GetSel PROC
;;;142    */
;;;143    int LISTVIEW__GetSel(LISTVIEW_Obj* pObj) {
00001c  4601              MOV      r1,r0
;;;144      return pObj->Sel;
00001e  6e08              LDR      r0,[r1,#0x60]
;;;145    }
000020  4770              BX       lr
;;;146    
                          ENDP

                  LISTVIEW__GetRowDistY PROC
;;;213    */
;;;214    unsigned LISTVIEW__GetRowDistY(const LISTVIEW_Obj* pObj) {
000022  b570              PUSH     {r4-r6,lr}
000024  4604              MOV      r4,r0
;;;215      unsigned RowDistY;
;;;216      if (pObj->RowDistY) {
000026  6ee0              LDR      r0,[r4,#0x6c]
000028  b108              CBZ      r0,|L1.46|
;;;217        RowDistY = pObj->RowDistY;
00002a  6ee5              LDR      r5,[r4,#0x6c]
00002c  e006              B        |L1.60|
                  |L1.46|
;;;218      } else {
;;;219        RowDistY = GUI_GetYDistOfFont(pObj->Props.pFont);
00002e  6da0              LDR      r0,[r4,#0x58]
000030  f7fffffe          BL       GUI_GetYDistOfFont
000034  4605              MOV      r5,r0
;;;220        if (pObj->ShowGrid) {
000036  6e60              LDR      r0,[r4,#0x64]
000038  b100              CBZ      r0,|L1.60|
;;;221          RowDistY++;
00003a  1c6d              ADDS     r5,r5,#1
                  |L1.60|
;;;222        }
;;;223      }
;;;224      return RowDistY;
00003c  4628              MOV      r0,r5
;;;225    }
00003e  bd70              POP      {r4-r6,pc}
;;;226    
                          ENDP

                  LISTVIEW__InvalidateRow PROC
;;;435    */
;;;436    void LISTVIEW__InvalidateRow(LISTVIEW_Handle hObj, LISTVIEW_Obj* pObj, int Sel) {
000040  e92d41fc          PUSH     {r2-r8,lr}
000044  4607              MOV      r7,r0
000046  460c              MOV      r4,r1
000048  4615              MOV      r5,r2
;;;437      if (Sel >= 0) {
00004a  2d00              CMP      r5,#0
00004c  db22              BLT      |L1.148|
;;;438        GUI_RECT Rect;
;;;439        int HeaderHeight, RowDistY;
;;;440        HeaderHeight = HEADER_GetHeight(pObj->hHeader);
00004e  f9b40028          LDRSH    r0,[r4,#0x28]
000052  f7fffffe          BL       HEADER_GetHeight
000056  4680              MOV      r8,r0
;;;441        RowDistY     = LISTVIEW__GetRowDistY(pObj);
000058  4620              MOV      r0,r4
00005a  f7fffffe          BL       LISTVIEW__GetRowDistY
00005e  4606              MOV      r6,r0
;;;442        WM_GetInsideRectExScrollbar(hObj, &Rect);
000060  4669              MOV      r1,sp
000062  4638              MOV      r0,r7
000064  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;443        Rect.y0 += HeaderHeight + (Sel - pObj->ScrollStateV.v) * RowDistY;
000068  f8bd1002          LDRH     r1,[sp,#2]
00006c  6fe0              LDR      r0,[r4,#0x7c]
00006e  1a28              SUBS     r0,r5,r0
000070  fb008006          MLA      r0,r0,r6,r8
000074  4408              ADD      r0,r0,r1
000076  b200              SXTH     r0,r0
000078  f8ad0002          STRH     r0,[sp,#2]
;;;444        Rect.y1  = Rect.y0 + RowDistY - 1;
00007c  f8bd0002          LDRH     r0,[sp,#2]
000080  4430              ADD      r0,r0,r6
000082  1e40              SUBS     r0,r0,#1
000084  b200              SXTH     r0,r0
000086  f8ad0006          STRH     r0,[sp,#6]
;;;445        WM_InvalidateRect(hObj, &Rect);
00008a  4669              MOV      r1,sp
00008c  4638              MOV      r0,r7
00008e  f7fffffe          BL       WM_InvalidateRect
;;;446      }
000092  bf00              NOP      
                  |L1.148|
;;;447    }
000094  e8bd81fc          POP      {r2-r8,pc}
;;;448    
                          ENDP

                  LISTVIEW__InvalidateInsideArea PROC
;;;422    */
;;;423    void LISTVIEW__InvalidateInsideArea(LISTVIEW_Handle hObj, LISTVIEW_Obj* pObj) {
000098  b57c              PUSH     {r2-r6,lr}
00009a  4605              MOV      r5,r0
00009c  460c              MOV      r4,r1
;;;424      GUI_RECT Rect;
;;;425      int HeaderHeight;
;;;426      HeaderHeight = HEADER_GetHeight(pObj->hHeader);
00009e  f9b40028          LDRSH    r0,[r4,#0x28]
0000a2  f7fffffe          BL       HEADER_GetHeight
0000a6  4606              MOV      r6,r0
;;;427      WM_GetInsideRectExScrollbar(hObj, &Rect);
0000a8  4669              MOV      r1,sp
0000aa  4628              MOV      r0,r5
0000ac  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;428      Rect.y0 += HeaderHeight;
0000b0  f8bd0002          LDRH     r0,[sp,#2]
0000b4  4430              ADD      r0,r0,r6
0000b6  b200              SXTH     r0,r0
0000b8  f8ad0002          STRH     r0,[sp,#2]
;;;429      WM_InvalidateRect(hObj, &Rect);
0000bc  4669              MOV      r1,sp
0000be  4628              MOV      r0,r5
0000c0  f7fffffe          BL       WM_InvalidateRect
;;;430    }
0000c4  bd7c              POP      {r2-r6,pc}
;;;431    
                          ENDP

                  LISTVIEW__UpdateScrollPos PROC
;;;558    */
;;;559    int LISTVIEW__UpdateScrollPos(LISTVIEW_Handle hObj, LISTVIEW_Obj* pObj) {
0000c6  b570              PUSH     {r4-r6,lr}
0000c8  4605              MOV      r5,r0
0000ca  460c              MOV      r4,r1
;;;560      int PrevScrollStateV;
;;;561      PrevScrollStateV = pObj->ScrollStateV.v;
0000cc  6fe6              LDR      r6,[r4,#0x7c]
;;;562      if (pObj->Sel >= 0) {
0000ce  6e20              LDR      r0,[r4,#0x60]
0000d0  2800              CMP      r0,#0
0000d2  db07              BLT      |L1.228|
;;;563        WM_CheckScrollPos(&pObj->ScrollStateV, pObj->Sel, 0, 0);
0000d4  2300              MOVS     r3,#0
0000d6  461a              MOV      r2,r3
0000d8  f1040078          ADD      r0,r4,#0x78
0000dc  6e21              LDR      r1,[r4,#0x60]
0000de  f7fffffe          BL       WM_CheckScrollPos
0000e2  e003              B        |L1.236|
                  |L1.228|
;;;564      } else {
;;;565        WM_CheckScrollBounds(&pObj->ScrollStateV);
0000e4  f1040078          ADD      r0,r4,#0x78
0000e8  f7fffffe          BL       WM_CheckScrollBounds
                  |L1.236|
;;;566      }
;;;567      WM_CheckScrollBounds(&pObj->ScrollStateH);
0000ec  f1040084          ADD      r0,r4,#0x84
0000f0  f7fffffe          BL       WM_CheckScrollBounds
;;;568      WIDGET__SetScrollState(hObj, &pObj->ScrollStateV, &pObj->ScrollStateH);
0000f4  f1040284          ADD      r2,r4,#0x84
0000f8  f1040178          ADD      r1,r4,#0x78
0000fc  4628              MOV      r0,r5
0000fe  f7fffffe          BL       WIDGET__SetScrollState
;;;569      return pObj->ScrollStateV.v - PrevScrollStateV;
000102  6fe0              LDR      r0,[r4,#0x7c]
000104  1b80              SUBS     r0,r0,r6
;;;570    }
000106  bd70              POP      {r4-r6,pc}
;;;571    
                          ENDP

                  LISTVIEW__SetSel PROC
;;;150    */
;;;151    void LISTVIEW__SetSel(LISTVIEW_Handle hObj, LISTVIEW_Obj* pObj, int NewSel) {
000108  e92d47f0          PUSH     {r4-r10,lr}
00010c  4681              MOV      r9,r0
00010e  460c              MOV      r4,r1
000110  4615              MOV      r5,r2
;;;152      int NumRows;
;;;153      NumRows = LISTVIEW__GetNumRows(pObj);
000112  4620              MOV      r0,r4
000114  f7fffffe          BL       LISTVIEW__GetNumRows
000118  4607              MOV      r7,r0
;;;154      if (NewSel >= NumRows) {
00011a  42bd              CMP      r5,r7
00011c  db00              BLT      |L1.288|
;;;155        NewSel = NumRows - 1;
00011e  1e7d              SUBS     r5,r7,#1
                  |L1.288|
;;;156      }
;;;157      if (NewSel < 0) {
000120  2d00              CMP      r5,#0
000122  da01              BGE      |L1.296|
;;;158        NewSel = -1;
000124  f04f35ff          MOV      r5,#0xffffffff
                  |L1.296|
;;;159      }
;;;160      if (NewSel != pObj->Sel) {
000128  6e20              LDR      r0,[r4,#0x60]
00012a  42a8              CMP      r0,r5
00012c  d02a              BEQ      |L1.388|
;;;161        char Disabled;
;;;162        LISTVIEW_ROW * pRow;
;;;163        pRow = (LISTVIEW_ROW *)GUI_ARRAY_GetpItem(&pObj->RowArray, NewSel);
00012e  4629              MOV      r1,r5
000130  f104002a          ADD      r0,r4,#0x2a
000134  f7fffffe          BL       GUI_ARRAY_GetpItem
000138  4680              MOV      r8,r0
;;;164        if (pRow) {
00013a  f1b80f00          CMP      r8,#0
00013e  d002              BEQ      |L1.326|
;;;165          Disabled = pRow->Disabled;
000140  f8986004          LDRB     r6,[r8,#4]
000144  e000              B        |L1.328|
                  |L1.326|
;;;166        } else {
;;;167          Disabled = 0;
000146  2600              MOVS     r6,#0
                  |L1.328|
;;;168        }
;;;169        if (Disabled == 0) {
000148  b9de              CBNZ     r6,|L1.386|
;;;170          int OldSel;
;;;171          OldSel    = pObj->Sel;
00014a  f8d4a060          LDR      r10,[r4,#0x60]
;;;172          pObj->Sel = NewSel;
00014e  6625              STR      r5,[r4,#0x60]
;;;173          if (LISTVIEW__UpdateScrollPos(hObj, pObj)) {
000150  4621              MOV      r1,r4
000152  4648              MOV      r0,r9
000154  f7fffffe          BL       LISTVIEW__UpdateScrollPos
000158  b120              CBZ      r0,|L1.356|
;;;174            LISTVIEW__InvalidateInsideArea(hObj, pObj);
00015a  4621              MOV      r1,r4
00015c  4648              MOV      r0,r9
00015e  f7fffffe          BL       LISTVIEW__InvalidateInsideArea
000162  e009              B        |L1.376|
                  |L1.356|
;;;175          } else {
;;;176            LISTVIEW__InvalidateRow(hObj, pObj, OldSel);
000164  4652              MOV      r2,r10
000166  4621              MOV      r1,r4
000168  4648              MOV      r0,r9
00016a  f7fffffe          BL       LISTVIEW__InvalidateRow
;;;177            LISTVIEW__InvalidateRow(hObj, pObj, NewSel);
00016e  462a              MOV      r2,r5
000170  4621              MOV      r1,r4
000172  4648              MOV      r0,r9
000174  f7fffffe          BL       LISTVIEW__InvalidateRow
                  |L1.376|
;;;178          }
;;;179          WM_NotifyParent(hObj, WM_NOTIFICATION_SEL_CHANGED);
000178  2104              MOVS     r1,#4
00017a  4648              MOV      r0,r9
00017c  f7fffffe          BL       WM_NotifyParent
;;;180        }
000180  bf00              NOP      
                  |L1.386|
;;;181      }
000182  bf00              NOP      
                  |L1.388|
;;;182    }
000184  e8bd87f0          POP      {r4-r10,pc}
;;;183    
                          ENDP

                  LISTVIEW__MoveSel PROC
;;;189    */
;;;190    void LISTVIEW__MoveSel(LISTVIEW_Handle hObj, LISTVIEW_Obj* pObj, int Dir) {
000188  e92d47f0          PUSH     {r4-r10,lr}
00018c  4681              MOV      r9,r0
00018e  460d              MOV      r5,r1
000190  4690              MOV      r8,r2
;;;191      int Index, NewSel = -1, NumRows;
000192  f04f36ff          MOV      r6,#0xffffffff
;;;192      Index   = LISTVIEW__GetSel(pObj);
000196  4628              MOV      r0,r5
000198  f7fffffe          BL       LISTVIEW__GetSel
00019c  4604              MOV      r4,r0
;;;193      NumRows = LISTVIEW__GetNumRows(pObj);
00019e  4628              MOV      r0,r5
0001a0  f7fffffe          BL       LISTVIEW__GetNumRows
0001a4  4682              MOV      r10,r0
;;;194      do {
0001a6  bf00              NOP      
                  |L1.424|
;;;195        LISTVIEW_ROW* pRow;
;;;196        Index += Dir;
0001a8  4444              ADD      r4,r4,r8
;;;197        if ((Index < 0) || (Index >= NumRows)) {
0001aa  2c00              CMP      r4,#0
0001ac  db01              BLT      |L1.434|
0001ae  4554              CMP      r4,r10
0001b0  db00              BLT      |L1.436|
                  |L1.434|
;;;198          break;
0001b2  e00a              B        |L1.458|
                  |L1.436|
;;;199        }
;;;200        pRow = (LISTVIEW_ROW*) GUI_ARRAY_GetpItem(&pObj->RowArray, Index);
0001b4  4621              MOV      r1,r4
0001b6  f105002a          ADD      r0,r5,#0x2a
0001ba  f7fffffe          BL       GUI_ARRAY_GetpItem
0001be  4607              MOV      r7,r0
;;;201        if (pRow->Disabled == 0) {
0001c0  7938              LDRB     r0,[r7,#4]
0001c2  b900              CBNZ     r0,|L1.454|
;;;202          NewSel = Index;
0001c4  4626              MOV      r6,r4
                  |L1.454|
;;;203        }
;;;204      } while (NewSel < 0);
0001c6  2e00              CMP      r6,#0
0001c8  dbee              BLT      |L1.424|
                  |L1.458|
0001ca  bf00              NOP                            ;198
;;;205      if (NewSel >= 0) {
0001cc  2e00              CMP      r6,#0
0001ce  db04              BLT      |L1.474|
;;;206        LISTVIEW__SetSel(hObj, pObj, NewSel);
0001d0  4632              MOV      r2,r6
0001d2  4629              MOV      r1,r5
0001d4  4648              MOV      r0,r9
0001d6  f7fffffe          BL       LISTVIEW__SetSel
                  |L1.474|
;;;207      }
;;;208    }
0001da  e8bd87f0          POP      {r4-r10,pc}
;;;209    
                          ENDP

                  _GetNumVisibleRows PROC
;;;238    */
;;;239    static unsigned _GetNumVisibleRows(LISTVIEW_Handle hObj, const LISTVIEW_Obj* pObj) {
0001de  e92d41fc          PUSH     {r2-r8,lr}
0001e2  4607              MOV      r7,r0
0001e4  460c              MOV      r4,r1
;;;240      unsigned RowDistY, ySize, r = 1;
0001e6  2601              MOVS     r6,#1
;;;241      GUI_RECT Rect;
;;;242      WM_GetInsideRectExScrollbar(hObj, &Rect);
0001e8  4669              MOV      r1,sp
0001ea  4638              MOV      r0,r7
0001ec  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;243      ySize    = Rect.y1 - Rect.y0 + 1 - HEADER_GetHeight(pObj->hHeader);
0001f0  f9b40028          LDRSH    r0,[r4,#0x28]
0001f4  f7fffffe          BL       HEADER_GetHeight
0001f8  f9bd1006          LDRSH    r1,[sp,#6]
0001fc  f9bd2002          LDRSH    r2,[sp,#2]
000200  1a89              SUBS     r1,r1,r2
000202  1c49              ADDS     r1,r1,#1
000204  eba10800          SUB      r8,r1,r0
;;;244      RowDistY = LISTVIEW__GetRowDistY(pObj);
000208  4620              MOV      r0,r4
00020a  f7fffffe          BL       LISTVIEW__GetRowDistY
00020e  4605              MOV      r5,r0
;;;245      if (RowDistY) {
000210  b135              CBZ      r5,|L1.544|
;;;246        r = ySize / RowDistY;
000212  fbb8f6f5          UDIV     r6,r8,r5
;;;247        r = (r == 0) ? 1 : r;
000216  b90e              CBNZ     r6,|L1.540|
000218  2001              MOVS     r0,#1
00021a  e000              B        |L1.542|
                  |L1.540|
00021c  4630              MOV      r0,r6
                  |L1.542|
00021e  4606              MOV      r6,r0
                  |L1.544|
;;;248      }
;;;249      return r;
000220  4630              MOV      r0,r6
;;;250    }
000222  e8bd81fc          POP      {r2-r8,pc}
;;;251    
                          ENDP

                  _GetpRow PROC
;;;255    */
;;;256    static LISTVIEW_ROW * _GetpRow(LISTVIEW_Obj * pObj, int Index) {
000226  e92d41f0          PUSH     {r4-r8,lr}
00022a  4604              MOV      r4,r0
00022c  460d              MOV      r5,r1
;;;257      if (pObj->hSort && (pObj->SortIndex >= 0)) {
00022e  f8b40092          LDRH     r0,[r4,#0x92]
000232  b1c8              CBZ      r0,|L1.616|
000234  6ea0              LDR      r0,[r4,#0x68]
000236  2800              CMP      r0,#0
000238  db16              BLT      |L1.616|
;;;258        LISTVIEW_SORT * pSort;
;;;259        SORT_TYPE * pData;
;;;260        pSort = (LISTVIEW_SORT *)GUI_ALLOC_h2p(pObj->hSort);
00023a  f9b40092          LDRSH    r0,[r4,#0x92]
00023e  f7fffffe          BL       GUI_ALLOC_h2p
000242  4606              MOV      r6,r0
;;;261        pData = (SORT_TYPE *)GUI_ALLOC_h2p(pSort->hSortArray);
000244  f9b60000          LDRSH    r0,[r6,#0]
000248  f7fffffe          BL       GUI_ALLOC_h2p
00024c  4607              MOV      r7,r0
;;;262        if (Index >= pSort->SortArrayNumItems) {
00024e  8870              LDRH     r0,[r6,#2]
000250  42a8              CMP      r0,r5
000252  dc02              BGT      |L1.602|
;;;263          return NULL;
000254  2000              MOVS     r0,#0
                  |L1.598|
;;;264        }
;;;265        return (LISTVIEW_ROW *)GUI_ARRAY_GetpItem(&pObj->RowArray, *(pData + Index));
;;;266      } else {
;;;267        return (LISTVIEW_ROW *)GUI_ARRAY_GetpItem(&pObj->RowArray, Index);
;;;268      }
;;;269    }
000256  e8bd81f0          POP      {r4-r8,pc}
                  |L1.602|
00025a  f8371015          LDRH     r1,[r7,r5,LSL #1]     ;265
00025e  f104002a          ADD      r0,r4,#0x2a           ;265
000262  f7fffffe          BL       GUI_ARRAY_GetpItem
000266  e7f6              B        |L1.598|
                  |L1.616|
000268  4629              MOV      r1,r5                 ;267
00026a  f104002a          ADD      r0,r4,#0x2a           ;267
00026e  f7fffffe          BL       GUI_ARRAY_GetpItem
000272  e7f0              B        |L1.598|
;;;270    
                          ENDP

                  _Paint PROC
;;;274    */
;;;275    static void _Paint(LISTVIEW_Handle hObj, LISTVIEW_Obj* pObj, WM_MESSAGE* pMsg) {
000274  e92d4ff7          PUSH     {r0-r2,r4-r11,lr}
000278  b090              SUB      sp,sp,#0x40
00027a  460c              MOV      r4,r1
;;;276      const LISTVIEW_ROW* pRow;
;;;277      GUI_RECT ClipRect, Rect;
;;;278      int NumRows, NumVisRows, NumColumns;
;;;279      int LBorder, RBorder, EffectSize;
;;;280      int xPos, yPos, Width, RowDistY;
;;;281      int Align, i, j, EndRow;
;;;282      /* Init some values */
;;;283      NumColumns = LISTVIEW__GetNumColumns(pObj);
00027c  4620              MOV      r0,r4
00027e  f7fffffe          BL       LISTVIEW__GetNumColumns
000282  9009              STR      r0,[sp,#0x24]
;;;284      NumRows    = LISTVIEW__GetNumRows(pObj);
000284  4620              MOV      r0,r4
000286  f7fffffe          BL       LISTVIEW__GetNumRows
00028a  900b              STR      r0,[sp,#0x2c]
;;;285      NumVisRows = _GetNumVisibleRows(hObj, pObj);
00028c  4621              MOV      r1,r4
00028e  9810              LDR      r0,[sp,#0x40]
000290  f7fffffe          BL       _GetNumVisibleRows
000294  900a              STR      r0,[sp,#0x28]
;;;286      RowDistY   = LISTVIEW__GetRowDistY(pObj);
000296  4620              MOV      r0,r4
000298  f7fffffe          BL       LISTVIEW__GetRowDistY
00029c  9005              STR      r0,[sp,#0x14]
;;;287      LBorder    = pObj->LBorder;
00029e  6f20              LDR      r0,[r4,#0x70]
0002a0  9008              STR      r0,[sp,#0x20]
;;;288      RBorder    = pObj->RBorder;
0002a2  6f60              LDR      r0,[r4,#0x74]
0002a4  9007              STR      r0,[sp,#0x1c]
;;;289      EffectSize = pObj->Widget.pEffect->EffectSize;
0002a6  6a20              LDR      r0,[r4,#0x20]
0002a8  f8d0b014          LDR      r11,[r0,#0x14]
;;;290      yPos       = HEADER_GetHeight(pObj->hHeader) + EffectSize;
0002ac  f9b40028          LDRSH    r0,[r4,#0x28]
0002b0  f7fffffe          BL       HEADER_GetHeight
0002b4  eb00050b          ADD      r5,r0,r11
;;;291      /* Calculate clipping rectangle */
;;;292      ClipRect = *(const GUI_RECT*)pMsg->Data.p;
0002b8  9812              LDR      r0,[sp,#0x48]
0002ba  6880              LDR      r0,[r0,#8]
0002bc  6801              LDR      r1,[r0,#0]
0002be  910e              STR      r1,[sp,#0x38]
0002c0  6840              LDR      r0,[r0,#4]
0002c2  900f              STR      r0,[sp,#0x3c]
;;;293      GUI_MoveRect(&ClipRect, -pObj->Widget.Win.Rect.x0, -pObj->Widget.Win.Rect.y0);
0002c4  f9b40002          LDRSH    r0,[r4,#2]
0002c8  4242              RSBS     r2,r0,#0
0002ca  f9b40000          LDRSH    r0,[r4,#0]
0002ce  4241              RSBS     r1,r0,#0
0002d0  a80e              ADD      r0,sp,#0x38
0002d2  f7fffffe          BL       GUI_MoveRect
;;;294      WM_GetInsideRectExScrollbar(hObj, &Rect);
0002d6  a90c              ADD      r1,sp,#0x30
0002d8  9810              LDR      r0,[sp,#0x40]
0002da  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;295      GUI__IntersectRect(&ClipRect, &Rect);
0002de  a90c              ADD      r1,sp,#0x30
0002e0  a80e              ADD      r0,sp,#0x38
0002e2  f7fffffe          BL       GUI__IntersectRect
;;;296      /* Set drawing color, font and text mode */
;;;297      LCD_SetColor(pObj->Props.aTextColor[0]);
0002e6  6c60              LDR      r0,[r4,#0x44]
0002e8  f7fffffe          BL       LCD_SetColor
;;;298      GUI_SetFont(pObj->Props.pFont);
0002ec  6da0              LDR      r0,[r4,#0x58]
0002ee  f7fffffe          BL       GUI_SetFont
;;;299      GUI_SetTextMode(GUI_TM_TRANS);
0002f2  2002              MOVS     r0,#2
0002f4  f7fffffe          BL       GUI_SetTextMode
;;;300      /* Sort before drawing, because scroll position may change */
;;;301      if (pObj->hSort && (pObj->SortIndex >= 0)) {
0002f8  f8b40092          LDRH     r0,[r4,#0x92]
0002fc  b180              CBZ      r0,|L1.800|
0002fe  6ea0              LDR      r0,[r4,#0x68]
000300  2800              CMP      r0,#0
000302  db0d              BLT      |L1.800|
;;;302        LISTVIEW_SORT * pSort;
;;;303        pSort = (LISTVIEW_SORT *)GUI_ALLOC_h2p(pObj->hSort);
000304  f9b40092          LDRSH    r0,[r4,#0x92]
000308  f7fffffe          BL       GUI_ALLOC_h2p
00030c  4680              MOV      r8,r0
;;;304        if (pSort->fpSort(hObj)) {
00030e  f8d81004          LDR      r1,[r8,#4]
000312  9810              LDR      r0,[sp,#0x40]
000314  4788              BLX      r1
000316  b110              CBZ      r0,|L1.798|
                  |L1.792|
;;;305          return; /* Return on error */
;;;306        }
;;;307      }
;;;308      /* Calculate end row after sorting, because scroll position may have changed */
;;;309      EndRow = pObj->ScrollStateV.v + (((NumVisRows + 1) > NumRows) ? NumRows : NumVisRows + 1);
;;;310      /* Do the drawing */
;;;311      for (i = pObj->ScrollStateV.v; i < EndRow; i++) {
;;;312        pRow = _GetpRow(pObj, i);
;;;313        if (pRow) {
;;;314          Rect.y0 = yPos;
;;;315          /* Break when all other rows are outside the drawing area */
;;;316          if (Rect.y0 > ClipRect.y1) {
;;;317            break;
;;;318          }
;;;319          Rect.y1 = yPos + RowDistY - 1;
;;;320          /* Make sure that we draw only when row is in drawing area */
;;;321          if (Rect.y1 >= ClipRect.y0) {
;;;322            int ColorIndex;
;;;323            /* Set background color */
;;;324            if (pRow->Disabled) {
;;;325              ColorIndex = LISTVIEW_CI_DISABLED;
;;;326            } else if (i == pObj->Sel) {
;;;327              ColorIndex = (pObj->Widget.State & WIDGET_STATE_FOCUS) ? LISTVIEW_CI_SELFOCUS : LISTVIEW_CI_SEL;
;;;328            } else {
;;;329              ColorIndex = LISTVIEW_CI_UNSEL;
;;;330            }
;;;331            LCD_SetBkColor(pObj->Props.aBkColor[ColorIndex]);
;;;332            /* Iterate over all columns */
;;;333            if (pObj->ShowGrid) {
;;;334              Rect.y1--;
;;;335            }
;;;336            xPos = EffectSize - pObj->ScrollStateH.v;
;;;337            for (j = 0; j < NumColumns; j++) {
;;;338              Width   = HEADER_GetItemWidth(pObj->hHeader, j);
;;;339              Rect.x0 = xPos;
;;;340              /* Break when all other columns are outside the drawing area */
;;;341              if (Rect.x0 > ClipRect.x1) {
;;;342                break;
;;;343              }
;;;344              Rect.x1 = xPos + Width - 1;
;;;345              /* Make sure that we draw only when column is in drawing area */
;;;346              if (Rect.x1 >= ClipRect.x0) {
;;;347                LISTVIEW_COLUMN* pColumn;
;;;348                LISTVIEW_CELL* pCell;
;;;349                pCell = (LISTVIEW_CELL*)GUI_ARRAY_GetpItem(&pRow->CellArray, j);
;;;350                if (pCell) {
;;;351                  if (pCell->hCellInfo) {
;;;352                    LISTVIEW_CELL_INFO* pCellInfo;
;;;353                    pCellInfo = (LISTVIEW_CELL_INFO*) GUI_ALLOC_h2p(pCell->hCellInfo);
;;;354                    LCD_SetBkColor(pCellInfo->aBkColor[ColorIndex]);
;;;355                    LCD_SetColor(pCellInfo->aTextColor[ColorIndex]);
;;;356                  } else {
;;;357                    LCD_SetColor(pObj->Props.aTextColor[ColorIndex]);
;;;358                  }
;;;359                  /* Clear background */
;;;360                  GUI_ClearRect(Rect.x0, Rect.y0, Rect.x1, Rect.y1);
;;;361                  /* Draw text */
;;;362                  Rect.x0 += LBorder;
;;;363                  Rect.x1 -= RBorder;
;;;364                  pColumn = (LISTVIEW_COLUMN*) GUI_ARRAY_GetpItem(&pObj->ColumnArray, j);
;;;365                  Align = pColumn->Align;
;;;366                  GUI_DispStringInRect(pCell->acText, &Rect, Align);
;;;367                  if (pCell->hCellInfo) {
;;;368                    LCD_SetBkColor(pObj->Props.aBkColor[ColorIndex]);
;;;369                  }
;;;370                }
;;;371              }
;;;372              xPos += Width;
;;;373            }
;;;374            /* Clear unused area to the right of items */
;;;375            if (xPos <= ClipRect.x1) {
;;;376              GUI_ClearRect(xPos, Rect.y0, ClipRect.x1, Rect.y1);
;;;377            }
;;;378          }
;;;379          yPos += RowDistY;
;;;380        }
;;;381      }
;;;382      /* Clear unused area below items */
;;;383      if (yPos <= ClipRect.y1) {
;;;384        LCD_SetBkColor(pObj->Props.aBkColor[0]);
;;;385        GUI_ClearRect(ClipRect.x0, yPos, ClipRect.x1, ClipRect.y1);
;;;386      }
;;;387      /* Draw grid */
;;;388      if (pObj->ShowGrid) {
;;;389        LCD_SetColor(pObj->Props.GridColor);
;;;390        yPos = HEADER_GetHeight(pObj->hHeader) + EffectSize - 1;
;;;391        for (i = 0; i < NumVisRows; i++) {
;;;392          yPos += RowDistY;
;;;393          /* Break when all other rows are outside the drawing area */
;;;394          if (yPos > ClipRect.y1) {
;;;395            break;
;;;396          }
;;;397          /* Make sure that we draw only when row is in drawing area */
;;;398          if (yPos >= ClipRect.y0) {
;;;399            GUI_DrawHLine(yPos, ClipRect.x0, ClipRect.x1);
;;;400          }
;;;401        }
;;;402        xPos = EffectSize - pObj->ScrollStateH.v;
;;;403        for (i = 0; i < NumColumns; i++) {
;;;404          xPos += HEADER_GetItemWidth(pObj->hHeader, i);
;;;405          /* Break when all other columns are outside the drawing area */
;;;406          if (xPos > ClipRect.x1) {
;;;407            break;
;;;408          }
;;;409          /* Make sure that we draw only when column is in drawing area */
;;;410          if (xPos >= ClipRect.x0) {
;;;411            GUI_DrawVLine(xPos, ClipRect.y0, ClipRect.y1);
;;;412          }
;;;413        }
;;;414      }
;;;415      /* Draw the effect */
;;;416      WIDGET__EFFECT_DrawDown(&pObj->Widget);
;;;417    }
000318  b013              ADD      sp,sp,#0x4c
00031a  e8bd8ff0          POP      {r4-r11,pc}
                  |L1.798|
00031e  bf00              NOP                            ;307
                  |L1.800|
000320  6fe2              LDR      r2,[r4,#0x7c]         ;309
000322  980a              LDR      r0,[sp,#0x28]         ;309
000324  1c40              ADDS     r0,r0,#1              ;309
000326  990b              LDR      r1,[sp,#0x2c]         ;309
000328  4288              CMP      r0,r1                 ;309
00032a  dd01              BLE      |L1.816|
00032c  980b              LDR      r0,[sp,#0x2c]         ;309
00032e  e001              B        |L1.820|
                  |L1.816|
000330  980a              LDR      r0,[sp,#0x28]         ;309
000332  1c40              ADDS     r0,r0,#1              ;309
                  |L1.820|
000334  4410              ADD      r0,r0,r2              ;309
000336  9002              STR      r0,[sp,#8]            ;309
000338  6fe6              LDR      r6,[r4,#0x7c]         ;311
00033a  e0d4              B        |L1.1254|
                  |L1.828|
00033c  4631              MOV      r1,r6                 ;312
00033e  4620              MOV      r0,r4                 ;312
000340  f7fffffe          BL       _GetpRow
000344  4682              MOV      r10,r0                ;312
000346  f1ba0f00          CMP      r10,#0                ;313
00034a  d077              BEQ      |L1.1084|
00034c  b228              SXTH     r0,r5                 ;314
00034e  f8ad0032          STRH     r0,[sp,#0x32]         ;314
000352  f9bd0032          LDRSH    r0,[sp,#0x32]         ;316
000356  f9bd103e          LDRSH    r1,[sp,#0x3e]         ;316
00035a  4288              CMP      r0,r1                 ;316
00035c  dd00              BLE      |L1.864|
00035e  e0c6              B        |L1.1262|
                  |L1.864|
000360  9805              LDR      r0,[sp,#0x14]         ;319
000362  4428              ADD      r0,r0,r5              ;319
000364  1e40              SUBS     r0,r0,#1              ;319
000366  b200              SXTH     r0,r0                 ;319
000368  f8ad0036          STRH     r0,[sp,#0x36]         ;319
00036c  f9bd0036          LDRSH    r0,[sp,#0x36]         ;321
000370  f9bd103a          LDRSH    r1,[sp,#0x3a]         ;321
000374  4288              CMP      r0,r1                 ;321
000376  db7d              BLT      |L1.1140|
000378  f89a0004          LDRB     r0,[r10,#4]           ;324
00037c  b110              CBZ      r0,|L1.900|
00037e  f04f0803          MOV      r8,#3                 ;325
000382  e00e              B        |L1.930|
                  |L1.900|
000384  6e20              LDR      r0,[r4,#0x60]         ;326
000386  42b0              CMP      r0,r6                 ;326
000388  d109              BNE      |L1.926|
00038a  f8940026          LDRB     r0,[r4,#0x26]         ;327
00038e  f0000001          AND      r0,r0,#1              ;327
000392  b108              CBZ      r0,|L1.920|
000394  2002              MOVS     r0,#2                 ;327
000396  e000              B        |L1.922|
                  |L1.920|
000398  2001              MOVS     r0,#1                 ;327
                  |L1.922|
00039a  4680              MOV      r8,r0                 ;327
00039c  e001              B        |L1.930|
                  |L1.926|
00039e  f04f0800          MOV      r8,#0                 ;329
                  |L1.930|
0003a2  f1040134          ADD      r1,r4,#0x34           ;331
0003a6  f8510028          LDR      r0,[r1,r8,LSL #2]     ;331
0003aa  f7fffffe          BL       LCD_SetBkColor
0003ae  6e60              LDR      r0,[r4,#0x64]         ;333
0003b0  b128              CBZ      r0,|L1.958|
0003b2  f8bd0036          LDRH     r0,[sp,#0x36]         ;334
0003b6  1e40              SUBS     r0,r0,#1              ;334
0003b8  b200              SXTH     r0,r0                 ;334
0003ba  f8ad0036          STRH     r0,[sp,#0x36]         ;334
                  |L1.958|
0003be  2088              MOVS     r0,#0x88              ;336
0003c0  5900              LDR      r0,[r0,r4]            ;336
0003c2  ebab0700          SUB      r7,r11,r0             ;336
0003c6  2000              MOVS     r0,#0                 ;337
0003c8  9003              STR      r0,[sp,#0xc]          ;337
0003ca  e076              B        |L1.1210|
                  |L1.972|
0003cc  f9b40028          LDRSH    r0,[r4,#0x28]         ;338
0003d0  9903              LDR      r1,[sp,#0xc]          ;338
0003d2  f7fffffe          BL       HEADER_GetItemWidth
0003d6  9006              STR      r0,[sp,#0x18]         ;338
0003d8  b238              SXTH     r0,r7                 ;339
0003da  f8ad0030          STRH     r0,[sp,#0x30]         ;339
0003de  f9bd0030          LDRSH    r0,[sp,#0x30]         ;341
0003e2  f9bd103c          LDRSH    r1,[sp,#0x3c]         ;341
0003e6  4288              CMP      r0,r1                 ;341
0003e8  dd00              BLE      |L1.1004|
0003ea  e06a              B        |L1.1218|
                  |L1.1004|
0003ec  9806              LDR      r0,[sp,#0x18]         ;344
0003ee  4438              ADD      r0,r0,r7              ;344
0003f0  1e40              SUBS     r0,r0,#1              ;344
0003f2  b200              SXTH     r0,r0                 ;344
0003f4  f8ad0034          STRH     r0,[sp,#0x34]         ;344
0003f8  f9bd0034          LDRSH    r0,[sp,#0x34]         ;346
0003fc  f9bd1038          LDRSH    r1,[sp,#0x38]         ;346
000400  4288              CMP      r0,r1                 ;346
000402  db55              BLT      |L1.1200|
000404  4650              MOV      r0,r10                ;349
000406  9903              LDR      r1,[sp,#0xc]          ;349
000408  f7fffffe          BL       GUI_ARRAY_GetpItem
00040c  4681              MOV      r9,r0                 ;349
00040e  f1b90f00          CMP      r9,#0                 ;350
000412  d04c              BEQ      |L1.1198|
000414  f8b90000          LDRH     r0,[r9,#0]            ;351
000418  b188              CBZ      r0,|L1.1086|
00041a  f9b90000          LDRSH    r0,[r9,#0]            ;353
00041e  f7fffffe          BL       GUI_ALLOC_h2p
000422  9000              STR      r0,[sp,#0]            ;353
000424  9900              LDR      r1,[sp,#0]            ;354
000426  f8510028          LDR      r0,[r1,r8,LSL #2]     ;354
00042a  f7fffffe          BL       LCD_SetBkColor
00042e  9900              LDR      r1,[sp,#0]            ;355
000430  3110              ADDS     r1,r1,#0x10           ;355
000432  f8510028          LDR      r0,[r1,r8,LSL #2]     ;355
000436  f7fffffe          BL       LCD_SetColor
00043a  e006              B        |L1.1098|
                  |L1.1084|
00043c  e052              B        |L1.1252|
                  |L1.1086|
00043e  f1040144          ADD      r1,r4,#0x44           ;357
000442  f8510028          LDR      r0,[r1,r8,LSL #2]     ;357
000446  f7fffffe          BL       LCD_SetColor
                  |L1.1098|
00044a  f9bd3036          LDRSH    r3,[sp,#0x36]         ;360
00044e  f9bd2034          LDRSH    r2,[sp,#0x34]         ;360
000452  f9bd1032          LDRSH    r1,[sp,#0x32]         ;360
000456  f9bd0030          LDRSH    r0,[sp,#0x30]         ;360
00045a  f7fffffe          BL       GUI_ClearRect
00045e  f8bd1030          LDRH     r1,[sp,#0x30]         ;362
000462  9808              LDR      r0,[sp,#0x20]         ;362
000464  4408              ADD      r0,r0,r1              ;362
000466  b200              SXTH     r0,r0                 ;362
000468  f8ad0030          STRH     r0,[sp,#0x30]         ;362
00046c  f8bd1034          LDRH     r1,[sp,#0x34]         ;363
000470  9807              LDR      r0,[sp,#0x1c]         ;363
000472  e000              B        |L1.1142|
                  |L1.1140|
000474  e034              B        |L1.1248|
                  |L1.1142|
000476  1a08              SUBS     r0,r1,r0              ;363
000478  b200              SXTH     r0,r0                 ;363
00047a  f8ad0034          STRH     r0,[sp,#0x34]         ;363
00047e  f104002e          ADD      r0,r4,#0x2e           ;364
000482  9903              LDR      r1,[sp,#0xc]          ;364
000484  f7fffffe          BL       GUI_ARRAY_GetpItem
000488  9001              STR      r0,[sp,#4]            ;364
00048a  9801              LDR      r0,[sp,#4]            ;365
00048c  7800              LDRB     r0,[r0,#0]            ;365
00048e  9004              STR      r0,[sp,#0x10]         ;365
000490  a90c              ADD      r1,sp,#0x30           ;366
000492  f1090002          ADD      r0,r9,#2              ;366
000496  9a04              LDR      r2,[sp,#0x10]         ;366
000498  f7fffffe          BL       GUI_DispStringInRect
00049c  f8b90000          LDRH     r0,[r9,#0]            ;367
0004a0  b128              CBZ      r0,|L1.1198|
0004a2  f1040134          ADD      r1,r4,#0x34           ;368
0004a6  f8510028          LDR      r0,[r1,r8,LSL #2]     ;368
0004aa  f7fffffe          BL       LCD_SetBkColor
                  |L1.1198|
0004ae  bf00              NOP                            ;371
                  |L1.1200|
0004b0  9806              LDR      r0,[sp,#0x18]         ;372
0004b2  4407              ADD      r7,r7,r0              ;372
0004b4  9803              LDR      r0,[sp,#0xc]          ;337
0004b6  1c40              ADDS     r0,r0,#1              ;337
0004b8  9003              STR      r0,[sp,#0xc]          ;337
                  |L1.1210|
0004ba  9909              LDR      r1,[sp,#0x24]         ;337
0004bc  9803              LDR      r0,[sp,#0xc]          ;337
0004be  4288              CMP      r0,r1                 ;337
0004c0  db84              BLT      |L1.972|
                  |L1.1218|
0004c2  bf00              NOP                            ;342
0004c4  f9bd003c          LDRSH    r0,[sp,#0x3c]         ;375
0004c8  42b8              CMP      r0,r7                 ;375
0004ca  db08              BLT      |L1.1246|
0004cc  f9bd3036          LDRSH    r3,[sp,#0x36]         ;376
0004d0  f9bd203c          LDRSH    r2,[sp,#0x3c]         ;376
0004d4  f9bd1032          LDRSH    r1,[sp,#0x32]         ;376
0004d8  4638              MOV      r0,r7                 ;376
0004da  f7fffffe          BL       GUI_ClearRect
                  |L1.1246|
0004de  bf00              NOP                            ;378
                  |L1.1248|
0004e0  9805              LDR      r0,[sp,#0x14]         ;379
0004e2  4405              ADD      r5,r5,r0              ;379
                  |L1.1252|
0004e4  1c76              ADDS     r6,r6,#1              ;311
                  |L1.1254|
0004e6  9802              LDR      r0,[sp,#8]            ;311
0004e8  4286              CMP      r6,r0                 ;311
0004ea  f6ffaf27          BLT      |L1.828|
                  |L1.1262|
0004ee  bf00              NOP                            ;317
0004f0  f9bd003e          LDRSH    r0,[sp,#0x3e]         ;383
0004f4  42a8              CMP      r0,r5                 ;383
0004f6  db0b              BLT      |L1.1296|
0004f8  6b60              LDR      r0,[r4,#0x34]         ;384
0004fa  f7fffffe          BL       LCD_SetBkColor
0004fe  f9bd303e          LDRSH    r3,[sp,#0x3e]         ;385
000502  f9bd203c          LDRSH    r2,[sp,#0x3c]         ;385
000506  f9bd0038          LDRSH    r0,[sp,#0x38]         ;385
00050a  4629              MOV      r1,r5                 ;385
00050c  f7fffffe          BL       GUI_ClearRect
                  |L1.1296|
000510  6e60              LDR      r0,[r4,#0x64]         ;388
000512  b390              CBZ      r0,|L1.1402|
000514  6d60              LDR      r0,[r4,#0x54]         ;389
000516  f7fffffe          BL       LCD_SetColor
00051a  f9b40028          LDRSH    r0,[r4,#0x28]         ;390
00051e  f7fffffe          BL       HEADER_GetHeight
000522  4458              ADD      r0,r0,r11             ;390
000524  1e45              SUBS     r5,r0,#1              ;390
000526  2600              MOVS     r6,#0                 ;391
000528  e012              B        |L1.1360|
                  |L1.1322|
00052a  9805              LDR      r0,[sp,#0x14]         ;392
00052c  4405              ADD      r5,r5,r0              ;392
00052e  f9bd003e          LDRSH    r0,[sp,#0x3e]         ;394
000532  42a8              CMP      r0,r5                 ;394
000534  da00              BGE      |L1.1336|
000536  e00e              B        |L1.1366|
                  |L1.1336|
000538  f9bd003a          LDRSH    r0,[sp,#0x3a]         ;398
00053c  42a8              CMP      r0,r5                 ;398
00053e  dc06              BGT      |L1.1358|
000540  f9bd203c          LDRSH    r2,[sp,#0x3c]         ;399
000544  f9bd1038          LDRSH    r1,[sp,#0x38]         ;399
000548  4628              MOV      r0,r5                 ;399
00054a  f7fffffe          BL       GUI_DrawHLine
                  |L1.1358|
00054e  1c76              ADDS     r6,r6,#1              ;391
                  |L1.1360|
000550  980a              LDR      r0,[sp,#0x28]         ;391
000552  4286              CMP      r6,r0                 ;391
000554  dbe9              BLT      |L1.1322|
                  |L1.1366|
000556  bf00              NOP                            ;395
000558  2088              MOVS     r0,#0x88              ;402
00055a  5900              LDR      r0,[r0,r4]            ;402
00055c  ebab0700          SUB      r7,r11,r0             ;402
000560  2600              MOVS     r6,#0                 ;403
000562  e017              B        |L1.1428|
                  |L1.1380|
000564  f9b40028          LDRSH    r0,[r4,#0x28]         ;404
000568  4631              MOV      r1,r6                 ;404
00056a  f7fffffe          BL       HEADER_GetItemWidth
00056e  4407              ADD      r7,r7,r0              ;404
000570  f9bd003c          LDRSH    r0,[sp,#0x3c]         ;406
000574  42b8              CMP      r0,r7                 ;406
000576  da01              BGE      |L1.1404|
000578  e00f              B        |L1.1434|
                  |L1.1402|
00057a  e00f              B        |L1.1436|
                  |L1.1404|
00057c  f9bd0038          LDRSH    r0,[sp,#0x38]         ;410
000580  42b8              CMP      r0,r7                 ;410
000582  dc06              BGT      |L1.1426|
000584  f9bd203e          LDRSH    r2,[sp,#0x3e]         ;411
000588  f9bd103a          LDRSH    r1,[sp,#0x3a]         ;411
00058c  4638              MOV      r0,r7                 ;411
00058e  f7fffffe          BL       GUI_DrawVLine
                  |L1.1426|
000592  1c76              ADDS     r6,r6,#1              ;403
                  |L1.1428|
000594  9809              LDR      r0,[sp,#0x24]         ;403
000596  4286              CMP      r6,r0                 ;403
000598  dbe4              BLT      |L1.1380|
                  |L1.1434|
00059a  bf00              NOP                            ;407
                  |L1.1436|
00059c  4620              MOV      r0,r4                 ;416
00059e  f7fffffe          BL       WIDGET__EFFECT_DrawDown
0005a2  bf00              NOP      
0005a4  e6b8              B        |L1.792|
;;;418    
                          ENDP

                  _SetSelFromPos PROC
;;;452    */
;;;453    static void _SetSelFromPos(LISTVIEW_Handle hObj, LISTVIEW_Obj* pObj, const GUI_PID_STATE* pState) {
0005a6  e92d47fc          PUSH     {r2-r10,lr}
0005aa  4682              MOV      r10,r0
0005ac  460c              MOV      r4,r1
0005ae  4615              MOV      r5,r2
;;;454      GUI_RECT Rect;
;;;455      int x, y, HeaderHeight;
;;;456      HeaderHeight = HEADER_GetHeight(pObj->hHeader);
0005b0  f9b40028          LDRSH    r0,[r4,#0x28]
0005b4  f7fffffe          BL       HEADER_GetHeight
0005b8  4680              MOV      r8,r0
;;;457      WM_GetInsideRectExScrollbar(hObj, &Rect);
0005ba  4669              MOV      r1,sp
0005bc  4650              MOV      r0,r10
0005be  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;458      x = pState->x - Rect.x0;
0005c2  f9bd1000          LDRSH    r1,[sp,#0]
0005c6  6828              LDR      r0,[r5,#0]
0005c8  1a47              SUBS     r7,r0,r1
;;;459      y = pState->y - Rect.y0 - HeaderHeight;
0005ca  f9bd1002          LDRSH    r1,[sp,#2]
0005ce  6868              LDR      r0,[r5,#4]
0005d0  1a40              SUBS     r0,r0,r1
0005d2  eba00608          SUB      r6,r0,r8
;;;460      Rect.x1 -= Rect.x0;
0005d6  f8bd0004          LDRH     r0,[sp,#4]
0005da  f8bd1000          LDRH     r1,[sp,#0]
0005de  1a40              SUBS     r0,r0,r1
0005e0  b200              SXTH     r0,r0
0005e2  f8ad0004          STRH     r0,[sp,#4]
;;;461      Rect.y1 -= Rect.y0;
0005e6  f8bd0006          LDRH     r0,[sp,#6]
0005ea  f8bd1002          LDRH     r1,[sp,#2]
0005ee  1a40              SUBS     r0,r0,r1
0005f0  b200              SXTH     r0,r0
0005f2  f8ad0006          STRH     r0,[sp,#6]
;;;462      if ((x >= 0) && (x <= Rect.x1) && (y >= 0) && (y <= (Rect.y1 - HeaderHeight))) {
0005f6  2f00              CMP      r7,#0
0005f8  db1e              BLT      |L1.1592|
0005fa  f9bd0004          LDRSH    r0,[sp,#4]
0005fe  42b8              CMP      r0,r7
000600  db1a              BLT      |L1.1592|
000602  2e00              CMP      r6,#0
000604  db18              BLT      |L1.1592|
000606  f9bd0006          LDRSH    r0,[sp,#6]
00060a  eba00008          SUB      r0,r0,r8
00060e  42b0              CMP      r0,r6
000610  db12              BLT      |L1.1592|
;;;463        unsigned Sel;
;;;464        Sel = (y / LISTVIEW__GetRowDistY(pObj)) + pObj->ScrollStateV.v;
000612  4620              MOV      r0,r4
000614  f7fffffe          BL       LISTVIEW__GetRowDistY
000618  fbb6f1f0          UDIV     r1,r6,r0
00061c  6fe0              LDR      r0,[r4,#0x7c]
00061e  eb010900          ADD      r9,r1,r0
;;;465        if (Sel < LISTVIEW__GetNumRows(pObj)) {
000622  4620              MOV      r0,r4
000624  f7fffffe          BL       LISTVIEW__GetNumRows
000628  4548              CMP      r0,r9
00062a  d904              BLS      |L1.1590|
;;;466          LISTVIEW__SetSel(hObj, pObj, Sel);
00062c  464a              MOV      r2,r9
00062e  4621              MOV      r1,r4
000630  4650              MOV      r0,r10
000632  f7fffffe          BL       LISTVIEW__SetSel
                  |L1.1590|
;;;467        }
;;;468      }
000636  bf00              NOP      
                  |L1.1592|
;;;469    }
000638  e8bd87fc          POP      {r2-r10,pc}
;;;470    
                          ENDP

                  _NotifyOwner PROC
;;;478    */
;;;479    static void _NotifyOwner(WM_HWIN hObj, int Notification) {
00063c  b5fe              PUSH     {r1-r7,lr}
00063e  4604              MOV      r4,r0
000640  460d              MOV      r5,r1
;;;480      WM_MESSAGE Msg = {0};
000642  2000              MOVS     r0,#0
000644  9000              STR      r0,[sp,#0]
000646  9001              STR      r0,[sp,#4]
000648  9002              STR      r0,[sp,#8]
;;;481      WM_HWIN hOwner;
;;;482      LISTVIEW_Obj* pObj    = LISTVIEW_H2P(hObj);
00064a  4620              MOV      r0,r4
00064c  f7fffffe          BL       GUI_ALLOC_h2p
000650  4606              MOV      r6,r0
;;;483      hOwner = pObj->hOwner ? pObj->hOwner : WM_GetParent(hObj);
000652  f8b60090          LDRH     r0,[r6,#0x90]
000656  b110              CBZ      r0,|L1.1630|
000658  f9b60090          LDRSH    r0,[r6,#0x90]
00065c  e002              B        |L1.1636|
                  |L1.1630|
00065e  4620              MOV      r0,r4
000660  f7fffffe          BL       WM_GetParent
                  |L1.1636|
000664  4607              MOV      r7,r0
;;;484      Msg.MsgId   = WM_NOTIFY_PARENT;
000666  2026              MOVS     r0,#0x26
000668  9000              STR      r0,[sp,#0]
;;;485      Msg.Data.v  = Notification;
00066a  9502              STR      r5,[sp,#8]
;;;486      Msg.hWinSrc = hObj;
00066c  f8ad4006          STRH     r4,[sp,#6]
;;;487      WM__SendMessage(hOwner, &Msg);
000670  4669              MOV      r1,sp
000672  4638              MOV      r0,r7
000674  f7fffffe          BL       WM__SendMessage
;;;488    }
000678  bdfe              POP      {r1-r7,pc}
;;;489    
                          ENDP

                  _OnTouch PROC
;;;493    */
;;;494    static void _OnTouch(LISTVIEW_Handle hObj, LISTVIEW_Obj* pObj, WM_MESSAGE*pMsg) {
00067a  e92d41f0          PUSH     {r4-r8,lr}
00067e  4680              MOV      r8,r0
000680  460e              MOV      r6,r1
000682  4615              MOV      r5,r2
;;;495      int Notification;
;;;496      const GUI_PID_STATE* pState = (const GUI_PID_STATE*)pMsg->Data.p;
000684  68af              LDR      r7,[r5,#8]
;;;497      GUI_USE_PARA(pObj);
000686  bf00              NOP      
;;;498      if (pMsg->Data.p) {  /* Something happened in our area (pressed or released) */
000688  68a8              LDR      r0,[r5,#8]
00068a  b168              CBZ      r0,|L1.1704|
;;;499        if (pState->Pressed) {
00068c  7a38              LDRB     r0,[r7,#8]
00068e  b148              CBZ      r0,|L1.1700|
;;;500          _SetSelFromPos(hObj, pObj, pState);
000690  463a              MOV      r2,r7
000692  4631              MOV      r1,r6
000694  4640              MOV      r0,r8
000696  f7fffffe          BL       _SetSelFromPos
;;;501          Notification = WM_NOTIFICATION_CLICKED;
00069a  2401              MOVS     r4,#1
;;;502          WM_SetFocus(hObj);
00069c  4640              MOV      r0,r8
00069e  f7fffffe          BL       WM_SetFocus
0006a2  e002              B        |L1.1706|
                  |L1.1700|
;;;503        } else {
;;;504          Notification = WM_NOTIFICATION_RELEASED;
0006a4  2402              MOVS     r4,#2
0006a6  e000              B        |L1.1706|
                  |L1.1704|
;;;505        }
;;;506      } else {
;;;507        Notification = WM_NOTIFICATION_MOVED_OUT;
0006a8  2403              MOVS     r4,#3
                  |L1.1706|
;;;508      }
;;;509      _NotifyOwner(hObj, Notification);
0006aa  4621              MOV      r1,r4
0006ac  4640              MOV      r0,r8
0006ae  f7fffffe          BL       _NotifyOwner
;;;510    }
0006b2  e8bd81f0          POP      {r4-r8,pc}
;;;511    
                          ENDP

                  _GetXSize PROC
;;;518    */
;;;519    static int _GetXSize(LISTVIEW_Handle hObj) {
0006b6  b51c              PUSH     {r2-r4,lr}
0006b8  4604              MOV      r4,r0
;;;520      GUI_RECT Rect;
;;;521      WM_GetInsideRectExScrollbar(hObj, &Rect);
0006ba  4669              MOV      r1,sp
0006bc  4620              MOV      r0,r4
0006be  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;522      return Rect.x1 - Rect.x0 + 1;
0006c2  f9bd0004          LDRSH    r0,[sp,#4]
0006c6  f9bd1000          LDRSH    r1,[sp,#0]
0006ca  1a40              SUBS     r0,r0,r1
0006cc  1c40              ADDS     r0,r0,#1
;;;523    }
0006ce  bd1c              POP      {r2-r4,pc}
;;;524    
                          ENDP

                  _GetHeaderWidth PROC
;;;535    */
;;;536    static int _GetHeaderWidth(LISTVIEW_Obj * pObj) {
0006d0  e92d41f0          PUSH     {r4-r8,lr}
0006d4  4605              MOV      r5,r0
;;;537      int NumItems, i, r = 1;
0006d6  2701              MOVS     r7,#1
;;;538      NumItems = HEADER_GetNumItems(pObj->hHeader);
0006d8  f9b50028          LDRSH    r0,[r5,#0x28]
0006dc  f7fffffe          BL       HEADER_GetNumItems
0006e0  4606              MOV      r6,r0
;;;539      if (NumItems) {
0006e2  b15e              CBZ      r6,|L1.1788|
;;;540        for (i = 0, r = 0; i < NumItems; i++) {
0006e4  2400              MOVS     r4,#0
0006e6  2700              MOVS     r7,#0
0006e8  e006              B        |L1.1784|
                  |L1.1770|
;;;541          r += HEADER_GetItemWidth(pObj->hHeader, i);
0006ea  f9b50028          LDRSH    r0,[r5,#0x28]
0006ee  4621              MOV      r1,r4
0006f0  f7fffffe          BL       HEADER_GetItemWidth
0006f4  4407              ADD      r7,r7,r0
0006f6  1c64              ADDS     r4,r4,#1              ;540
                  |L1.1784|
0006f8  42b4              CMP      r4,r6                 ;540
0006fa  dbf6              BLT      |L1.1770|
                  |L1.1788|
;;;542        }
;;;543      }
;;;544      return r;
0006fc  4638              MOV      r0,r7
;;;545    }
0006fe  e8bd81f0          POP      {r4-r8,pc}
;;;546    
                          ENDP

                  LISTVIEW__UpdateScrollParas PROC
;;;580    */
;;;581    int LISTVIEW__UpdateScrollParas(LISTVIEW_Handle hObj, LISTVIEW_Obj* pObj) {
000702  e92d47f0          PUSH     {r4-r10,lr}
000706  4681              MOV      r9,r0
000708  460c              MOV      r4,r1
;;;582      int NumRows, IsRequired;
;;;583      int xSize, xSizeHeader;
;;;584      unsigned NumVisibleRows;
;;;585      NumVisibleRows = _GetNumVisibleRows(hObj, pObj);
00070a  4621              MOV      r1,r4
00070c  4648              MOV      r0,r9
00070e  f7fffffe          BL       _GetNumVisibleRows
000712  4680              MOV      r8,r0
;;;586      xSize          = _GetXSize(hObj);
000714  4648              MOV      r0,r9
000716  f7fffffe          BL       _GetXSize
00071a  4606              MOV      r6,r0
;;;587      xSizeHeader    = _GetHeaderWidth(pObj);
00071c  4620              MOV      r0,r4
00071e  f7fffffe          BL       _GetHeaderWidth
000722  4607              MOV      r7,r0
;;;588      if (pObj->Flags & LISTVIEW_SF_AUTOSCROLLBAR_V) {
000724  f8940097          LDRB     r0,[r4,#0x97]
000728  f0000002          AND      r0,r0,#2
00072c  b168              CBZ      r0,|L1.1866|
;;;589        IsRequired = (NumVisibleRows < GUI_ARRAY_GetNumItems(&pObj->RowArray));
00072e  f104002a          ADD      r0,r4,#0x2a
000732  f7fffffe          BL       GUI_ARRAY_GetNumItems
000736  4540              CMP      r0,r8
000738  d901              BLS      |L1.1854|
00073a  2001              MOVS     r0,#1
00073c  e000              B        |L1.1856|
                  |L1.1854|
00073e  2000              MOVS     r0,#0
                  |L1.1856|
000740  4682              MOV      r10,r0
;;;590        WM_SetScrollbarV(hObj, IsRequired);
000742  4651              MOV      r1,r10
000744  4648              MOV      r0,r9
000746  f7fffffe          BL       WM_SetScrollbarV
                  |L1.1866|
;;;591      }
;;;592      if (pObj->Flags & LISTVIEW_SF_AUTOSCROLLBAR_H) {
00074a  f8940097          LDRB     r0,[r4,#0x97]
00074e  f0000001          AND      r0,r0,#1
000752  b170              CBZ      r0,|L1.1906|
;;;593        IsRequired  = (xSizeHeader > xSize);
000754  42b7              CMP      r7,r6
000756  dd01              BLE      |L1.1884|
000758  2001              MOVS     r0,#1
00075a  e000              B        |L1.1886|
                  |L1.1884|
00075c  2000              MOVS     r0,#0
                  |L1.1886|
00075e  4682              MOV      r10,r0
;;;594        WM_SetScrollbarH(hObj, IsRequired);
000760  4651              MOV      r1,r10
000762  4648              MOV      r0,r9
000764  f7fffffe          BL       WM_SetScrollbarH
;;;595        NumVisibleRows = _GetNumVisibleRows(hObj, pObj);
000768  4621              MOV      r1,r4
00076a  4648              MOV      r0,r9
00076c  f7fffffe          BL       _GetNumVisibleRows
000770  4680              MOV      r8,r0
                  |L1.1906|
;;;596      }
;;;597      NumRows = LISTVIEW__GetNumRows(pObj);
000772  4620              MOV      r0,r4
000774  f7fffffe          BL       LISTVIEW__GetNumRows
000778  4605              MOV      r5,r0
;;;598      /* update vertical scrollbar */
;;;599      pObj->ScrollStateV.PageSize = NumVisibleRows;
00077a  f8c48080          STR      r8,[r4,#0x80]
;;;600      pObj->ScrollStateV.NumItems = (NumRows) ? NumRows : 1;
00077e  b10d              CBZ      r5,|L1.1924|
000780  4628              MOV      r0,r5
000782  e000              B        |L1.1926|
                  |L1.1924|
000784  2001              MOVS     r0,#1
                  |L1.1926|
000786  67a0              STR      r0,[r4,#0x78]
;;;601      /* update horizontal scrollbar */
;;;602      pObj->ScrollStateH.PageSize = xSize;
000788  208c              MOVS     r0,#0x8c
00078a  5106              STR      r6,[r0,r4]
;;;603      pObj->ScrollStateH.NumItems = xSizeHeader;
00078c  f8c47084          STR      r7,[r4,#0x84]
;;;604      return LISTVIEW__UpdateScrollPos(hObj, pObj);
000790  4621              MOV      r1,r4
000792  4648              MOV      r0,r9
000794  f7fffffe          BL       LISTVIEW__UpdateScrollPos
;;;605    }
000798  e8bd87f0          POP      {r4-r10,pc}
;;;606    
                          ENDP

                  _FreeAttached PROC
;;;613    */
;;;614    static void _FreeAttached(LISTVIEW_Obj * pObj) {
00079c  e92d47f0          PUSH     {r4-r10,lr}
0007a0  4604              MOV      r4,r0
;;;615      int i, j, NumRows, NumColumns;
;;;616      NumRows    = LISTVIEW__GetNumRows(pObj);
0007a2  4620              MOV      r0,r4
0007a4  f7fffffe          BL       LISTVIEW__GetNumRows
0007a8  4680              MOV      r8,r0
;;;617      NumColumns = LISTVIEW__GetNumColumns(pObj);
0007aa  4620              MOV      r0,r4
0007ac  f7fffffe          BL       LISTVIEW__GetNumColumns
0007b0  4681              MOV      r9,r0
;;;618      for (i = 0; i < NumRows; i++) {
0007b2  2500              MOVS     r5,#0
0007b4  e01a              B        |L1.2028|
                  |L1.1974|
;;;619        LISTVIEW_ROW* pRow;
;;;620        pRow = (LISTVIEW_ROW*) GUI_ARRAY_GetpItem(&pObj->RowArray, i);
0007b6  4629              MOV      r1,r5
0007b8  f104002a          ADD      r0,r4,#0x2a
0007bc  f7fffffe          BL       GUI_ARRAY_GetpItem
0007c0  4682              MOV      r10,r0
;;;621        /* Delete attached info items */
;;;622        for (j = 0; j < NumColumns; j++) {
0007c2  2600              MOVS     r6,#0
0007c4  e00c              B        |L1.2016|
                  |L1.1990|
;;;623          LISTVIEW_CELL* pCell;
;;;624          pCell = (LISTVIEW_CELL*) GUI_ARRAY_GetpItem(&pRow->CellArray, j);
0007c6  4631              MOV      r1,r6
0007c8  4650              MOV      r0,r10
0007ca  f7fffffe          BL       GUI_ARRAY_GetpItem
0007ce  4607              MOV      r7,r0
;;;625          if (pCell) {
0007d0  b12f              CBZ      r7,|L1.2014|
;;;626            if (pCell->hCellInfo) {
0007d2  8838              LDRH     r0,[r7,#0]
0007d4  b118              CBZ      r0,|L1.2014|
;;;627              GUI_ALLOC_Free(pCell->hCellInfo);
0007d6  f9b70000          LDRSH    r0,[r7,#0]
0007da  f7fffffe          BL       GUI_ALLOC_Free
                  |L1.2014|
0007de  1c76              ADDS     r6,r6,#1              ;622
                  |L1.2016|
0007e0  454e              CMP      r6,r9                 ;622
0007e2  dbf0              BLT      |L1.1990|
;;;628            }
;;;629          }
;;;630        }
;;;631        /* Delete row */
;;;632        GUI_ARRAY_Delete(&pRow->CellArray);
0007e4  4650              MOV      r0,r10
0007e6  f7fffffe          BL       GUI_ARRAY_Delete
0007ea  1c6d              ADDS     r5,r5,#1              ;618
                  |L1.2028|
0007ec  4545              CMP      r5,r8                 ;618
0007ee  dbe2              BLT      |L1.1974|
;;;633      }
;;;634      /* Delete sort object */
;;;635      if (pObj->hSort) {
0007f0  f8b40092          LDRH     r0,[r4,#0x92]
0007f4  b148              CBZ      r0,|L1.2058|
;;;636        ((LISTVIEW_SORT *)GUI_ALLOC_h2p(pObj->hSort))->fpFree(pObj->hSort);
0007f6  f9b40092          LDRSH    r0,[r4,#0x92]
0007fa  f7fffffe          BL       GUI_ALLOC_h2p
0007fe  f9b47092          LDRSH    r7,[r4,#0x92]
000802  f8d0a008          LDR      r10,[r0,#8]
000806  4638              MOV      r0,r7
000808  47d0              BLX      r10
                  |L1.2058|
;;;637      }
;;;638      GUI_ARRAY_Delete(&pObj->ColumnArray);
00080a  f104002e          ADD      r0,r4,#0x2e
00080e  f7fffffe          BL       GUI_ARRAY_Delete
;;;639      GUI_ARRAY_Delete(&pObj->RowArray);
000812  f104002a          ADD      r0,r4,#0x2a
000816  f7fffffe          BL       GUI_ARRAY_Delete
;;;640    }
00081a  e8bd87f0          POP      {r4-r10,pc}
;;;641    
                          ENDP

                  _OnPage PROC
;;;658    */
;;;659    static void _OnPage(LISTVIEW_Handle hObj, LISTVIEW_Obj * pObj, int Dir) {
00081e  e92d41f0          PUSH     {r4-r8,lr}
000822  4680              MOV      r8,r0
000824  460c              MOV      r4,r1
000826  4615              MOV      r5,r2
;;;660      if (Dir < 0) {
000828  2d00              CMP      r5,#0
00082a  da1c              BGE      |L1.2150|
;;;661        /* Check if cursor is already on top row of the page */
;;;662        if (pObj->Sel != pObj->ScrollStateV.v) {
00082c  6e21              LDR      r1,[r4,#0x60]
00082e  6fe0              LDR      r0,[r4,#0x7c]
000830  4281              CMP      r1,r0
000832  d005              BEQ      |L1.2112|
;;;663          /* If not, set cursor on top row */
;;;664          LISTVIEW__SetSel(hObj, pObj, pObj->ScrollStateV.v);
000834  4621              MOV      r1,r4
000836  4640              MOV      r0,r8
000838  6fe2              LDR      r2,[r4,#0x7c]
00083a  f7fffffe          BL       LISTVIEW__SetSel
00083e  e039              B        |L1.2228|
                  |L1.2112|
;;;665        } else {
;;;666          /* Check if current selection is >= one page size */
;;;667          if (pObj->Sel >= pObj->ScrollStateV.PageSize) {
000840  2080              MOVS     r0,#0x80
000842  5900              LDR      r0,[r0,r4]
000844  6e21              LDR      r1,[r4,#0x60]
000846  4281              CMP      r1,r0
000848  db07              BLT      |L1.2138|
;;;668            /* Move selection one page up */
;;;669            LISTVIEW__MoveSel(hObj, pObj, -pObj->ScrollStateV.PageSize);
00084a  2080              MOVS     r0,#0x80
00084c  5900              LDR      r0,[r0,r4]
00084e  4242              RSBS     r2,r0,#0
000850  4621              MOV      r1,r4
000852  4640              MOV      r0,r8
000854  f7fffffe          BL       LISTVIEW__MoveSel
000858  e02c              B        |L1.2228|
                  |L1.2138|
;;;670          } else {
;;;671            /* Set selection on top row */
;;;672            LISTVIEW__SetSel(hObj, pObj, 0);
00085a  2200              MOVS     r2,#0
00085c  4621              MOV      r1,r4
00085e  4640              MOV      r0,r8
000860  f7fffffe          BL       LISTVIEW__SetSel
000864  e026              B        |L1.2228|
                  |L1.2150|
;;;673          }
;;;674        }
;;;675      } else {
;;;676        int Pos;
;;;677        /* Check if cursor is already on bottom row of the page */
;;;678        Pos = pObj->ScrollStateV.v + pObj->ScrollStateV.PageSize - 1;
000866  2080              MOVS     r0,#0x80
000868  5900              LDR      r0,[r0,r4]
00086a  6fe1              LDR      r1,[r4,#0x7c]
00086c  4408              ADD      r0,r0,r1
00086e  1e46              SUBS     r6,r0,#1
;;;679        if (pObj->Sel != Pos) {
000870  6e20              LDR      r0,[r4,#0x60]
000872  42b0              CMP      r0,r6
000874  d005              BEQ      |L1.2178|
;;;680          /* If not, set cursor on bottom row */
;;;681          LISTVIEW__SetSel(hObj, pObj, Pos);
000876  4632              MOV      r2,r6
000878  4621              MOV      r1,r4
00087a  4640              MOV      r0,r8
00087c  f7fffffe          BL       LISTVIEW__SetSel
000880  e017              B        |L1.2226|
                  |L1.2178|
;;;682        } else {
;;;683          int NumItems;
;;;684          /* Check if current selection is <= (NumItems - PageSize - 1) */
;;;685          NumItems = LISTVIEW__GetNumRows(pObj);
000882  4620              MOV      r0,r4
000884  f7fffffe          BL       LISTVIEW__GetNumRows
000888  4607              MOV      r7,r0
;;;686          if (pObj->Sel < (NumItems - pObj->ScrollStateV.PageSize - 1)) {
00088a  2080              MOVS     r0,#0x80
00088c  5900              LDR      r0,[r0,r4]
00088e  1a38              SUBS     r0,r7,r0
000890  1e40              SUBS     r0,r0,#1
000892  6e21              LDR      r1,[r4,#0x60]
000894  4281              CMP      r1,r0
000896  da06              BGE      |L1.2214|
;;;687            /* Move selection one page down */
;;;688            LISTVIEW__MoveSel(hObj, pObj, pObj->ScrollStateV.PageSize);
000898  2080              MOVS     r0,#0x80
00089a  5902              LDR      r2,[r0,r4]
00089c  4621              MOV      r1,r4
00089e  4640              MOV      r0,r8
0008a0  f7fffffe          BL       LISTVIEW__MoveSel
0008a4  e004              B        |L1.2224|
                  |L1.2214|
;;;689          } else {
;;;690            /* Set selection on bottom row */
;;;691            LISTVIEW__SetSel(hObj, pObj, NumItems - 1);
0008a6  1e7a              SUBS     r2,r7,#1
0008a8  4621              MOV      r1,r4
0008aa  4640              MOV      r0,r8
0008ac  f7fffffe          BL       LISTVIEW__SetSel
                  |L1.2224|
;;;692          }
;;;693        }
0008b0  bf00              NOP      
                  |L1.2226|
;;;694      }
0008b2  bf00              NOP      
                  |L1.2228|
;;;695    }
0008b4  e8bd81f0          POP      {r4-r8,pc}
;;;696    
                          ENDP

                  _AddKey PROC
;;;703    */
;;;704    static int _AddKey(LISTVIEW_Handle hObj, LISTVIEW_Obj* pObj, int Key) {
0008b8  e92d41f0          PUSH     {r4-r8,lr}
0008bc  4606              MOV      r6,r0
0008be  460c              MOV      r4,r1
0008c0  4615              MOV      r5,r2
;;;705      switch (Key) {
0008c2  2d17              CMP      r5,#0x17
0008c4  d02f              BEQ      |L1.2342|
0008c6  dc08              BGT      |L1.2266|
0008c8  2d10              CMP      r5,#0x10
0008ca  d052              BEQ      |L1.2418|
0008cc  2d11              CMP      r5,#0x11
0008ce  d01a              BEQ      |L1.2310|
0008d0  2d12              CMP      r5,#0x12
0008d2  d03a              BEQ      |L1.2378|
0008d4  2d13              CMP      r5,#0x13
0008d6  d160              BNE      |L1.2458|
0008d8  e006              B        |L1.2280|
                  |L1.2266|
0008da  2d18              CMP      r5,#0x18
0008dc  d02a              BEQ      |L1.2356|
0008de  2d21              CMP      r5,#0x21
0008e0  d019              BEQ      |L1.2326|
0008e2  2d22              CMP      r5,#0x22
0008e4  d159              BNE      |L1.2458|
0008e6  e007              B        |L1.2296|
                  |L1.2280|
;;;706      case GUI_KEY_DOWN:
;;;707        LISTVIEW__MoveSel(hObj, pObj, 1);
0008e8  2201              MOVS     r2,#1
0008ea  4621              MOV      r1,r4
0008ec  4630              MOV      r0,r6
0008ee  f7fffffe          BL       LISTVIEW__MoveSel
;;;708        return 1;               /* Key has been consumed */
0008f2  2001              MOVS     r0,#1
                  |L1.2292|
;;;709      case GUI_KEY_PGDOWN:
;;;710        _OnPage(hObj, pObj, 1);
;;;711        return 1;               /* Key has been consumed */
;;;712      case GUI_KEY_UP:
;;;713        LISTVIEW__MoveSel(hObj, pObj, -1);
;;;714        return 1;               /* Key has been consumed */
;;;715      case GUI_KEY_PGUP:
;;;716        _OnPage(hObj, pObj, -1);
;;;717        return 1;               /* Key has been consumed */
;;;718      case GUI_KEY_HOME:
;;;719        LISTVIEW__SetSel(hObj, pObj, 0);
;;;720        return 1;               /* Key has been consumed */
;;;721      case GUI_KEY_END:
;;;722        LISTVIEW__SetSel(hObj, pObj, LISTVIEW__GetNumRows(pObj) - 1);
;;;723        return 1;               /* Key has been consumed */
;;;724      case GUI_KEY_RIGHT:
;;;725        if (WM_SetScrollValue(&pObj->ScrollStateH, pObj->ScrollStateH.v + pObj->Props.ScrollStepH)) {
;;;726          LISTVIEW__UpdateScrollPos(hObj, pObj);
;;;727          LISTVIEW__InvalidateInsideArea(hObj, pObj);
;;;728        }
;;;729        return 1;               /* Key has been consumed */
;;;730      case GUI_KEY_LEFT:
;;;731        if (WM_SetScrollValue(&pObj->ScrollStateH, pObj->ScrollStateH.v - pObj->Props.ScrollStepH)) {
;;;732          LISTVIEW__UpdateScrollPos(hObj, pObj);
;;;733          LISTVIEW__InvalidateInsideArea(hObj, pObj);
;;;734        }
;;;735        return 1;               /* Key has been consumed */
;;;736      }
;;;737      return 0;                 /* Key has NOT been consumed */
;;;738    }
0008f4  e8bd81f0          POP      {r4-r8,pc}
                  |L1.2296|
0008f8  2201              MOVS     r2,#1                 ;710
0008fa  4621              MOV      r1,r4                 ;710
0008fc  4630              MOV      r0,r6                 ;710
0008fe  f7fffffe          BL       _OnPage
000902  2001              MOVS     r0,#1                 ;711
000904  e7f6              B        |L1.2292|
                  |L1.2310|
000906  f04f32ff          MOV      r2,#0xffffffff        ;713
00090a  4621              MOV      r1,r4                 ;713
00090c  4630              MOV      r0,r6                 ;713
00090e  f7fffffe          BL       LISTVIEW__MoveSel
000912  2001              MOVS     r0,#1                 ;714
000914  e7ee              B        |L1.2292|
                  |L1.2326|
000916  f04f32ff          MOV      r2,#0xffffffff        ;716
00091a  4621              MOV      r1,r4                 ;716
00091c  4630              MOV      r0,r6                 ;716
00091e  f7fffffe          BL       _OnPage
000922  2001              MOVS     r0,#1                 ;717
000924  e7e6              B        |L1.2292|
                  |L1.2342|
000926  2200              MOVS     r2,#0                 ;719
000928  4621              MOV      r1,r4                 ;719
00092a  4630              MOV      r0,r6                 ;719
00092c  f7fffffe          BL       LISTVIEW__SetSel
000930  2001              MOVS     r0,#1                 ;720
000932  e7df              B        |L1.2292|
                  |L1.2356|
000934  4620              MOV      r0,r4                 ;722
000936  f7fffffe          BL       LISTVIEW__GetNumRows
00093a  1e47              SUBS     r7,r0,#1              ;722
00093c  463a              MOV      r2,r7                 ;722
00093e  4621              MOV      r1,r4                 ;722
000940  4630              MOV      r0,r6                 ;722
000942  f7fffffe          BL       LISTVIEW__SetSel
000946  2001              MOVS     r0,#1                 ;723
000948  e7d4              B        |L1.2292|
                  |L1.2378|
00094a  2088              MOVS     r0,#0x88              ;725
00094c  5902              LDR      r2,[r0,r4]            ;725
00094e  205c              MOVS     r0,#0x5c              ;725
000950  5b00              LDRH     r0,[r0,r4]            ;725
000952  1811              ADDS     r1,r2,r0              ;725
000954  f1040084          ADD      r0,r4,#0x84           ;725
000958  f7fffffe          BL       WM_SetScrollValue
00095c  b138              CBZ      r0,|L1.2414|
00095e  4621              MOV      r1,r4                 ;726
000960  4630              MOV      r0,r6                 ;726
000962  f7fffffe          BL       LISTVIEW__UpdateScrollPos
000966  4621              MOV      r1,r4                 ;727
000968  4630              MOV      r0,r6                 ;727
00096a  f7fffffe          BL       LISTVIEW__InvalidateInsideArea
                  |L1.2414|
00096e  2001              MOVS     r0,#1                 ;729
000970  e7c0              B        |L1.2292|
                  |L1.2418|
000972  2088              MOVS     r0,#0x88              ;731
000974  5902              LDR      r2,[r0,r4]            ;731
000976  205c              MOVS     r0,#0x5c              ;731
000978  5b00              LDRH     r0,[r0,r4]            ;731
00097a  1a11              SUBS     r1,r2,r0              ;731
00097c  f1040084          ADD      r0,r4,#0x84           ;731
000980  f7fffffe          BL       WM_SetScrollValue
000984  b138              CBZ      r0,|L1.2454|
000986  4621              MOV      r1,r4                 ;732
000988  4630              MOV      r0,r6                 ;732
00098a  f7fffffe          BL       LISTVIEW__UpdateScrollPos
00098e  4621              MOV      r1,r4                 ;733
000990  4630              MOV      r0,r6                 ;733
000992  f7fffffe          BL       LISTVIEW__InvalidateInsideArea
                  |L1.2454|
000996  2001              MOVS     r0,#1                 ;735
000998  e7ac              B        |L1.2292|
                  |L1.2458|
00099a  2000              MOVS     r0,#0                 ;737
00099c  e7aa              B        |L1.2292|
;;;739    
                          ENDP

                  LISTVIEW_Callback PROC
;;;772    */
;;;773    void LISTVIEW_Callback (WM_MESSAGE *pMsg) {
00099e  e92d43fe          PUSH     {r1-r9,lr}
0009a2  4605              MOV      r5,r0
;;;774      LISTVIEW_Handle hObj;
;;;775      LISTVIEW_Obj* pObj;
;;;776      WM_SCROLL_STATE ScrollState;
;;;777      hObj = pMsg->hWin;
0009a4  f9b59004          LDRSH    r9,[r5,#4]
;;;778      /* Let widget handle the standard messages */
;;;779      if (WIDGET_HandleActive(hObj, pMsg) == 0) {
0009a8  4629              MOV      r1,r5
0009aa  4648              MOV      r0,r9
0009ac  f7fffffe          BL       WIDGET_HandleActive
0009b0  b908              CBNZ     r0,|L1.2486|
                  |L1.2482|
;;;780        return;
;;;781      }
;;;782      pObj = (LISTVIEW_Obj *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
;;;783      switch (pMsg->MsgId) {
;;;784      case WM_NOTIFY_CLIENTCHANGE:
;;;785      case WM_SIZE:
;;;786        if (pMsg->hWinSrc && (pMsg->hWinSrc == pObj->hHeader)) {
;;;787          LISTVIEW__UpdateScrollParas(hObj, pObj);
;;;788        }
;;;789        return;
;;;790      case WM_NOTIFY_PARENT:
;;;791        switch (pMsg->Data.v) {
;;;792        case WM_NOTIFICATION_CHILD_DELETED:
;;;793          /* make sure we do not send any messages to the header child once it has been deleted */
;;;794          if (pMsg->hWinSrc == pObj->hHeader) {
;;;795            pObj->hHeader = 0;
;;;796          }
;;;797          break;
;;;798        case WM_NOTIFICATION_VALUE_CHANGED:
;;;799          if (pMsg->hWinSrc == WM_GetScrollbarV(hObj)) {
;;;800            WM_GetScrollState(pMsg->hWinSrc, &ScrollState);
;;;801            pObj->ScrollStateV.v = ScrollState.v;
;;;802            LISTVIEW__InvalidateInsideArea(hObj, pObj);
;;;803            _NotifyOwner(hObj, WM_NOTIFICATION_SCROLL_CHANGED);
;;;804          } else if (pMsg->hWinSrc == WM_GetScrollbarH(hObj)) {
;;;805            WM_GetScrollState(pMsg->hWinSrc, &ScrollState);
;;;806            pObj->ScrollStateH.v = ScrollState.v;
;;;807            LISTVIEW__UpdateScrollParas(hObj, pObj);
;;;808            HEADER_SetScrollPos(pObj->hHeader, pObj->ScrollStateH.v);
;;;809            _NotifyOwner(hObj, WM_NOTIFICATION_SCROLL_CHANGED);
;;;810          }
;;;811          break;
;;;812        case WM_NOTIFICATION_SCROLLBAR_ADDED:
;;;813          #if WIDGET_USE_PARENT_EFFECT
;;;814            WIDGET_SetEffect(pMsg->hWinSrc, pObj->Widget.pEffect);
;;;815          #endif
;;;816          LISTVIEW__UpdateScrollParas(hObj, pObj);
;;;817          break;
;;;818        case WM_NOTIFICATION_RELEASED:
;;;819          if ((pMsg->hWinSrc == pObj->hHeader) && (pObj->hSort)) {
;;;820            int Column;
;;;821            LISTVIEW_SORT * pSort;
;;;822            LISTVIEW_COLUMN * pColumn;
;;;823            WM_SetFocus(hObj);
;;;824            Column = HEADER_GetSel(pObj->hHeader);
;;;825            if (Column >= 0) {
;;;826              pColumn = (LISTVIEW_COLUMN *)GUI_ARRAY_GetpItem(&pObj->ColumnArray, Column);
;;;827              if (pColumn->fpCompare) {
;;;828                pSort = (LISTVIEW_SORT *)GUI_ALLOC_h2p(pObj->hSort);
;;;829                if (pSort) {
;;;830                  // ReverseSort
;;;831                  if (pObj->SortIndex == Column) {
;;;832                    pSort->Reverse   ^= 1;
;;;833                    pObj->ReverseSort = 1;
;;;834                    pObj->IsSorted    = 0;
;;;835                  } else {
;;;836                    pSort->Reverse    = 0;
;;;837                    pObj->SortIndex   = Column;
;;;838                    pObj->IsPresorted = 0;
;;;839                  }
;;;840                  /*
;;;841                  if (pObj->SortIndex == Column) {
;;;842                    pSort->Reverse ^= 1;
;;;843                  } else {
;;;844                    pSort->Reverse = 0;
;;;845                    pObj->SortIndex = Column;
;;;846                  }
;;;847                  pObj->IsPresorted = 0;
;;;848                  */
;;;849                  LISTVIEW__InvalidateInsideArea(hObj, pObj);
;;;850                }
;;;851              }
;;;852            }
;;;853          }
;;;854          break;
;;;855        }
;;;856        return;
;;;857      case WM_PAINT:
;;;858        _Paint(hObj, pObj, pMsg);
;;;859        return;
;;;860      case WM_TOUCH:
;;;861        _OnTouch(hObj, pObj, pMsg);
;;;862        return;        /* Important: message handled ! */
;;;863      case WM_KEY:
;;;864        if (((const WM_KEY_INFO*)(pMsg->Data.p))->PressedCnt > 0) {
;;;865          int Key;
;;;866          Key = ((const WM_KEY_INFO*)(pMsg->Data.p))->Key;
;;;867          if (_AddKey(hObj, pObj, Key)) {
;;;868            return;
;;;869          }
;;;870        }
;;;871        break;  /* No return here ... WM_DefaultProc needs to be called */
;;;872      case WM_DELETE:
;;;873        _FreeAttached(pObj);
;;;874        break;  /* No return here ... WM_DefaultProc needs to be called */
;;;875      }
;;;876      WM_DefaultProc(pMsg);
;;;877    }
0009b2  e8bd83fe          POP      {r1-r9,pc}
                  |L1.2486|
0009b6  4648              MOV      r0,r9                 ;782
0009b8  f7fffffe          BL       GUI_ALLOC_h2p
0009bc  4604              MOV      r4,r0                 ;782
0009be  6828              LDR      r0,[r5,#0]            ;783
0009c0  280e              CMP      r0,#0xe               ;783
0009c2  d07d              BEQ      |L1.2752|
0009c4  dc06              BGT      |L1.2516|
0009c6  2805              CMP      r0,#5                 ;783
0009c8  d00c              BEQ      |L1.2532|
0009ca  280b              CMP      r0,#0xb               ;783
0009cc  d079              BEQ      |L1.2754|
0009ce  280c              CMP      r0,#0xc               ;783
                  |L1.2512|
0009d0  d178              BNE      |L1.2756|
0009d2  e0a8              B        |L1.2854|
                  |L1.2516|
0009d4  280f              CMP      r0,#0xf               ;783
0009d6  d076              BEQ      |L1.2758|
0009d8  2825              CMP      r0,#0x25              ;783
0009da  d002              BEQ      |L1.2530|
0009dc  2826              CMP      r0,#0x26              ;783
0009de  d1f7              BNE      |L1.2512|
0009e0  e00d              B        |L1.2558|
                  |L1.2530|
0009e2  bf00              NOP                            ;785
                  |L1.2532|
0009e4  88e8              LDRH     r0,[r5,#6]            ;786
0009e6  b148              CBZ      r0,|L1.2556|
0009e8  f9b50006          LDRSH    r0,[r5,#6]            ;786
0009ec  f9b41028          LDRSH    r1,[r4,#0x28]         ;786
0009f0  4288              CMP      r0,r1                 ;786
0009f2  d103              BNE      |L1.2556|
0009f4  4621              MOV      r1,r4                 ;787
0009f6  4648              MOV      r0,r9                 ;787
0009f8  f7fffffe          BL       LISTVIEW__UpdateScrollParas
                  |L1.2556|
0009fc  e7d9              B        |L1.2482|
                  |L1.2558|
0009fe  68a8              LDR      r0,[r5,#8]            ;791
000a00  2802              CMP      r0,#2                 ;791
000a02  d048              BEQ      |L1.2710|
000a04  2805              CMP      r0,#5                 ;791
000a06  d00c              BEQ      |L1.2594|
000a08  2806              CMP      r0,#6                 ;791
000a0a  d03f              BEQ      |L1.2700|
000a0c  2807              CMP      r0,#7                 ;791
000a0e  d107              BNE      |L1.2592|
000a10  f9b50006          LDRSH    r0,[r5,#6]            ;794
000a14  f9b41028          LDRSH    r1,[r4,#0x28]         ;794
000a18  4288              CMP      r0,r1                 ;794
000a1a  d101              BNE      |L1.2592|
000a1c  2000              MOVS     r0,#0                 ;795
000a1e  8520              STRH     r0,[r4,#0x28]         ;795
                  |L1.2592|
000a20  e079              B        |L1.2838|
                  |L1.2594|
000a22  4648              MOV      r0,r9                 ;799
000a24  f7fffffe          BL       WM_GetScrollbarV
000a28  f9b51006          LDRSH    r1,[r5,#6]            ;799
000a2c  4288              CMP      r0,r1                 ;799
000a2e  d10f              BNE      |L1.2640|
000a30  f9b50006          LDRSH    r0,[r5,#6]            ;800
000a34  4669              MOV      r1,sp                 ;800
000a36  f7fffffe          BL       WM_GetScrollState
000a3a  9901              LDR      r1,[sp,#4]            ;801
000a3c  67e1              STR      r1,[r4,#0x7c]         ;801
000a3e  4621              MOV      r1,r4                 ;802
000a40  4648              MOV      r0,r9                 ;802
000a42  f7fffffe          BL       LISTVIEW__InvalidateInsideArea
000a46  210a              MOVS     r1,#0xa               ;803
000a48  4648              MOV      r0,r9                 ;803
000a4a  f7fffffe          BL       _NotifyOwner
000a4e  e01c              B        |L1.2698|
                  |L1.2640|
000a50  4648              MOV      r0,r9                 ;804
000a52  f7fffffe          BL       WM_GetScrollbarH
000a56  f9b51006          LDRSH    r1,[r5,#6]            ;804
000a5a  4288              CMP      r0,r1                 ;804
000a5c  d115              BNE      |L1.2698|
000a5e  f9b50006          LDRSH    r0,[r5,#6]            ;805
000a62  4669              MOV      r1,sp                 ;805
000a64  f7fffffe          BL       WM_GetScrollState
000a68  2088              MOVS     r0,#0x88              ;806
000a6a  9901              LDR      r1,[sp,#4]            ;806
000a6c  5101              STR      r1,[r0,r4]            ;806
000a6e  4621              MOV      r1,r4                 ;807
000a70  4648              MOV      r0,r9                 ;807
000a72  f7fffffe          BL       LISTVIEW__UpdateScrollParas
000a76  2288              MOVS     r2,#0x88              ;808
000a78  5911              LDR      r1,[r2,r4]            ;808
000a7a  f9b40028          LDRSH    r0,[r4,#0x28]         ;808
000a7e  f7fffffe          BL       HEADER_SetScrollPos
000a82  210a              MOVS     r1,#0xa               ;809
000a84  4648              MOV      r0,r9                 ;809
000a86  f7fffffe          BL       _NotifyOwner
                  |L1.2698|
000a8a  e044              B        |L1.2838|
                  |L1.2700|
000a8c  4621              MOV      r1,r4                 ;816
000a8e  4648              MOV      r0,r9                 ;816
000a90  f7fffffe          BL       LISTVIEW__UpdateScrollParas
000a94  e03f              B        |L1.2838|
                  |L1.2710|
000a96  f9b50006          LDRSH    r0,[r5,#6]            ;819
000a9a  f9b41028          LDRSH    r1,[r4,#0x28]         ;819
000a9e  4288              CMP      r0,r1                 ;819
000aa0  d138              BNE      |L1.2836|
000aa2  f8b40092          LDRH     r0,[r4,#0x92]         ;819
000aa6  b3a8              CBZ      r0,|L1.2836|
000aa8  4648              MOV      r0,r9                 ;823
000aaa  f7fffffe          BL       WM_SetFocus
000aae  f9b40028          LDRSH    r0,[r4,#0x28]         ;824
000ab2  f7fffffe          BL       HEADER_GetSel
000ab6  4607              MOV      r7,r0                 ;824
000ab8  2f00              CMP      r7,#0                 ;825
000aba  db2a              BLT      |L1.2834|
000abc  4639              MOV      r1,r7                 ;826
000abe  e003              B        |L1.2760|
                  |L1.2752|
000ac0  e037              B        |L1.2866|
                  |L1.2754|
000ac2  e045              B        |L1.2896|
                  |L1.2756|
000ac4  e048              B        |L1.2904|
                  |L1.2758|
000ac6  e028              B        |L1.2842|
                  |L1.2760|
000ac8  f104002e          ADD      r0,r4,#0x2e           ;826
000acc  f7fffffe          BL       GUI_ARRAY_GetpItem
000ad0  4680              MOV      r8,r0                 ;826
000ad2  f8d80004          LDR      r0,[r8,#4]            ;827
000ad6  b1e0              CBZ      r0,|L1.2834|
000ad8  f9b40092          LDRSH    r0,[r4,#0x92]         ;828
000adc  f7fffffe          BL       GUI_ALLOC_h2p
000ae0  4606              MOV      r6,r0                 ;828
000ae2  b1b6              CBZ      r6,|L1.2834|
000ae4  6ea0              LDR      r0,[r4,#0x68]         ;831
000ae6  42b8              CMP      r0,r7                 ;831
000ae8  d10a              BNE      |L1.2816|
000aea  7b30              LDRB     r0,[r6,#0xc]          ;832
000aec  f0800001          EOR      r0,r0,#1              ;832
000af0  7330              STRB     r0,[r6,#0xc]          ;832
000af2  2001              MOVS     r0,#1                 ;833
000af4  f8840096          STRB     r0,[r4,#0x96]         ;833
000af8  2000              MOVS     r0,#0                 ;834
000afa  f8840094          STRB     r0,[r4,#0x94]         ;834
000afe  e004              B        |L1.2826|
                  |L1.2816|
000b00  2000              MOVS     r0,#0                 ;836
000b02  7330              STRB     r0,[r6,#0xc]          ;836
000b04  66a7              STR      r7,[r4,#0x68]         ;837
000b06  f8840095          STRB     r0,[r4,#0x95]         ;838
                  |L1.2826|
000b0a  4621              MOV      r1,r4                 ;849
000b0c  4648              MOV      r0,r9                 ;849
000b0e  f7fffffe          BL       LISTVIEW__InvalidateInsideArea
                  |L1.2834|
000b12  bf00              NOP                            ;853
                  |L1.2836|
000b14  bf00              NOP                            ;854
                  |L1.2838|
000b16  bf00              NOP                            ;797
000b18  e74b              B        |L1.2482|
                  |L1.2842|
000b1a  462a              MOV      r2,r5                 ;858
000b1c  4621              MOV      r1,r4                 ;858
000b1e  4648              MOV      r0,r9                 ;858
000b20  f7fffffe          BL       _Paint
000b24  e745              B        |L1.2482|
                  |L1.2854|
000b26  462a              MOV      r2,r5                 ;861
000b28  4621              MOV      r1,r4                 ;861
000b2a  4648              MOV      r0,r9                 ;861
000b2c  f7fffffe          BL       _OnTouch
000b30  e73f              B        |L1.2482|
                  |L1.2866|
000b32  68a8              LDR      r0,[r5,#8]            ;864
000b34  6840              LDR      r0,[r0,#4]            ;864
000b36  2800              CMP      r0,#0                 ;864
000b38  dd09              BLE      |L1.2894|
000b3a  68a8              LDR      r0,[r5,#8]            ;866
000b3c  6806              LDR      r6,[r0,#0]            ;866
000b3e  4632              MOV      r2,r6                 ;867
000b40  4621              MOV      r1,r4                 ;867
000b42  4648              MOV      r0,r9                 ;867
000b44  f7fffffe          BL       _AddKey
000b48  b100              CBZ      r0,|L1.2892|
000b4a  e732              B        |L1.2482|
                  |L1.2892|
000b4c  bf00              NOP                            ;870
                  |L1.2894|
000b4e  e003              B        |L1.2904|
                  |L1.2896|
000b50  4620              MOV      r0,r4                 ;873
000b52  f7fffffe          BL       _FreeAttached
000b56  bf00              NOP                            ;874
                  |L1.2904|
000b58  bf00              NOP                            ;871
000b5a  4628              MOV      r0,r5                 ;876
000b5c  f7fffffe          BL       WM_DefaultProc
000b60  bf00              NOP      
000b62  e726              B        |L1.2482|
;;;878    
                          ENDP

                  LISTVIEW_CreateEx PROC
;;;892    */
;;;893    LISTVIEW_Handle LISTVIEW_CreateEx(int x0, int y0, int xsize, int ysize, WM_HWIN hParent,
000b64  e92d5fff          PUSH     {r0-r12,lr}
;;;894                                      int WinFlags, int ExFlags, int Id)
;;;895    {
000b68  4606              MOV      r6,r0
000b6a  460f              MOV      r7,r1
000b6c  4690              MOV      r8,r2
000b6e  4699              MOV      r9,r3
000b70  e9ddab0e          LDRD     r10,r11,[sp,#0x38]
;;;896      LISTVIEW_Handle hObj;
;;;897      GUI_USE_PARA(ExFlags);
000b74  9810              LDR      r0,[sp,#0x40]
000b76  9010              STR      r0,[sp,#0x40]
;;;898      WM_LOCK();
;;;899      /* Create the window */
;;;900      if ((xsize == 0) && (ysize == 0) && (x0 == 0) && (y0 == 0)) {
000b78  f1b80f00          CMP      r8,#0
000b7c  d117              BNE      |L1.2990|
000b7e  f1b90f00          CMP      r9,#0
000b82  d114              BNE      |L1.2990|
000b84  b99e              CBNZ     r6,|L1.2990|
000b86  b997              CBNZ     r7,|L1.2990|
;;;901        GUI_RECT Rect;
;;;902        WM_GetClientRectEx(hParent, &Rect);
000b88  a902              ADD      r1,sp,#8
000b8a  4650              MOV      r0,r10
000b8c  f7fffffe          BL       WM_GetClientRectEx
;;;903        xsize = Rect.x1 - Rect.x0 + 1;
000b90  f9bd000c          LDRSH    r0,[sp,#0xc]
000b94  f9bd1008          LDRSH    r1,[sp,#8]
000b98  1a40              SUBS     r0,r0,r1
000b9a  f1000801          ADD      r8,r0,#1
;;;904        ysize = Rect.y1 - Rect.y0 + 1;
000b9e  f9bd000e          LDRSH    r0,[sp,#0xe]
000ba2  f9bd100a          LDRSH    r1,[sp,#0xa]
000ba6  1a40              SUBS     r0,r0,r1
000ba8  f1000901          ADD      r9,r0,#1
;;;905      }
000bac  bf00              NOP      
                  |L1.2990|
;;;906      hObj = WM_CreateWindowAsChild(x0, y0, xsize, ysize, hParent, WinFlags, &LISTVIEW_Callback,
000bae  2178              MOVS     r1,#0x78
000bb0  f2af2215          ADR      r2,LISTVIEW_Callback + 1
000bb4  fa1ff08b          UXTH     r0,r11
000bb8  464b              MOV      r3,r9
000bba  e9cda000          STRD     r10,r0,[sp,#0]
000bbe  e9cd2102          STRD     r2,r1,[sp,#8]
000bc2  4642              MOV      r2,r8
000bc4  4639              MOV      r1,r7
000bc6  4630              MOV      r0,r6
000bc8  f7fffffe          BL       WM_CreateWindowAsChild
000bcc  4605              MOV      r5,r0
;;;907                                    sizeof(LISTVIEW_Obj) - sizeof(WM_Obj));
;;;908      if (hObj) {
000bce  b33d              CBZ      r5,|L1.3104|
;;;909        LISTVIEW_Obj* pObj;
;;;910        pObj = (LISTVIEW_Obj *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
000bd0  4628              MOV      r0,r5
000bd2  f7fffffe          BL       GUI_ALLOC_h2p
000bd6  4604              MOV      r4,r0
;;;911        /* Init sub-classes */
;;;912        GUI_ARRAY_CREATE(&pObj->RowArray);
;;;913        GUI_ARRAY_CREATE(&pObj->ColumnArray);
;;;914        /* Init widget specific variables */
;;;915        WIDGET__Init(&pObj->Widget, Id, WIDGET_STATE_FOCUSSABLE);
000bd8  2210              MOVS     r2,#0x10
000bda  4620              MOV      r0,r4
000bdc  9911              LDR      r1,[sp,#0x44]
000bde  f7fffffe          BL       WIDGET__Init
;;;916        /* Init member variables */
;;;917        LISTVIEW_INIT_ID(pObj);
;;;918        pObj->Props     = LISTVIEW_DefaultProps;
000be2  222c              MOVS     r2,#0x2c
000be4  4984              LDR      r1,|L1.3576|
000be6  f1040034          ADD      r0,r4,#0x34
000bea  f7fffffe          BL       __aeabi_memcpy4
;;;919        pObj->ShowGrid  = 0;
000bee  2000              MOVS     r0,#0
000bf0  6660              STR      r0,[r4,#0x64]
;;;920        pObj->RowDistY  = 0;
000bf2  66e0              STR      r0,[r4,#0x6c]
;;;921        pObj->Sel       = -1;
000bf4  1e40              SUBS     r0,r0,#1
000bf6  6620              STR      r0,[r4,#0x60]
;;;922        pObj->LBorder   = 1;
000bf8  2001              MOVS     r0,#1
000bfa  6720              STR      r0,[r4,#0x70]
;;;923        pObj->RBorder   = 1;
000bfc  6760              STR      r0,[r4,#0x74]
;;;924        pObj->hHeader   = HEADER_CreateEx(0, 0, 0, 0, hObj, WM_CF_SHOW, 0, 0);
000bfe  2000              MOVS     r0,#0
000c00  2202              MOVS     r2,#2
000c02  e9cd2001          STRD     r2,r0,[sp,#4]
000c06  4603              MOV      r3,r0
000c08  4602              MOV      r2,r0
000c0a  4601              MOV      r1,r0
000c0c  9500              STR      r5,[sp,#0]
000c0e  9003              STR      r0,[sp,#0xc]
000c10  f7fffffe          BL       HEADER_CreateEx
000c14  8520              STRH     r0,[r4,#0x28]
;;;925        LISTVIEW__UpdateScrollParas(hObj, pObj);
000c16  4621              MOV      r1,r4
000c18  4628              MOV      r0,r5
000c1a  f7fffffe          BL       LISTVIEW__UpdateScrollParas
;;;926      } else {
000c1e  bf00              NOP      
                  |L1.3104|
;;;927        GUI_DEBUG_ERROROUT_IF(hObj==0, "LISTVIEW_Create failed")
;;;928      }
;;;929      WM_UNLOCK();
;;;930      return hObj;
000c20  4628              MOV      r0,r5
;;;931    }
000c22  b004              ADD      sp,sp,#0x10
000c24  e8bd9ff0          POP      {r4-r12,pc}
;;;932    
                          ENDP

                  LISTVIEW_IncSel PROC
;;;942    */
;;;943    void LISTVIEW_IncSel(LISTVIEW_Handle hObj) {
000c28  b570              PUSH     {r4-r6,lr}
000c2a  4604              MOV      r4,r0
;;;944      if (hObj) {
000c2c  b14c              CBZ      r4,|L1.3138|
;;;945        LISTVIEW_Obj* pObj;
;;;946        WM_LOCK();
;;;947        pObj = LISTVIEW_H2P(hObj);
000c2e  4620              MOV      r0,r4
000c30  f7fffffe          BL       GUI_ALLOC_h2p
000c34  4605              MOV      r5,r0
;;;948        LISTVIEW__MoveSel(hObj, pObj, 1);
000c36  2201              MOVS     r2,#1
000c38  4629              MOV      r1,r5
000c3a  4620              MOV      r0,r4
000c3c  f7fffffe          BL       LISTVIEW__MoveSel
;;;949        WM_UNLOCK();
;;;950      }
000c40  bf00              NOP      
                  |L1.3138|
;;;951    }
000c42  bd70              POP      {r4-r6,pc}
;;;952    
                          ENDP

                  LISTVIEW_DecSel PROC
;;;956    */
;;;957    void LISTVIEW_DecSel(LISTVIEW_Handle hObj) {
000c44  b570              PUSH     {r4-r6,lr}
000c46  4604              MOV      r4,r0
;;;958      if (hObj) {
000c48  b154              CBZ      r4,|L1.3168|
;;;959        LISTVIEW_Obj* pObj;
;;;960        WM_LOCK();
;;;961        pObj = LISTVIEW_H2P(hObj);
000c4a  4620              MOV      r0,r4
000c4c  f7fffffe          BL       GUI_ALLOC_h2p
000c50  4605              MOV      r5,r0
;;;962        LISTVIEW__MoveSel(hObj, pObj, -1);
000c52  f04f32ff          MOV      r2,#0xffffffff
000c56  4629              MOV      r1,r5
000c58  4620              MOV      r0,r4
000c5a  f7fffffe          BL       LISTVIEW__MoveSel
;;;963        WM_UNLOCK();
;;;964      }
000c5e  bf00              NOP      
                  |L1.3168|
;;;965    }
000c60  bd70              POP      {r4-r6,pc}
;;;966    
                          ENDP

                  LISTVIEW_AddColumn PROC
;;;970    */
;;;971    int LISTVIEW_AddColumn(LISTVIEW_Handle hObj, int Width, const char * s, int Align) {
000c62  e92d4ffe          PUSH     {r1-r11,lr}
000c66  4606              MOV      r6,r0
000c68  4689              MOV      r9,r1
000c6a  4692              MOV      r10,r2
000c6c  461f              MOV      r7,r3
;;;972      int r = 0;
000c6e  f04f0b00          MOV      r11,#0
;;;973      if (hObj) {
000c72  2e00              CMP      r6,#0
000c74  d044              BEQ      |L1.3328|
;;;974        LISTVIEW_Obj* pObj;
;;;975        LISTVIEW_COLUMN Column = {0};
000c76  2000              MOVS     r0,#0
000c78  9001              STR      r0,[sp,#4]
000c7a  9002              STR      r0,[sp,#8]
;;;976        unsigned NumRows;
;;;977        WM_LOCK();
;;;978        pObj = LISTVIEW_H2P(hObj);
000c7c  4630              MOV      r0,r6
000c7e  f7fffffe          BL       GUI_ALLOC_h2p
000c82  4604              MOV      r4,r0
;;;979        HEADER_AddItem(pObj->hHeader, Width, s, Align);
000c84  f9b40028          LDRSH    r0,[r4,#0x28]
000c88  463b              MOV      r3,r7
000c8a  4652              MOV      r2,r10
000c8c  4649              MOV      r1,r9
000c8e  f7fffffe          BL       HEADER_AddItem
;;;980        Column.Align = Align;
000c92  b2f8              UXTB     r0,r7
000c94  f88d0004          STRB     r0,[sp,#4]
;;;981        GUI_ARRAY_AddItem(&pObj->ColumnArray, &Column, sizeof(LISTVIEW_COLUMN));
000c98  2208              MOVS     r2,#8
000c9a  a901              ADD      r1,sp,#4
000c9c  f104002e          ADD      r0,r4,#0x2e
000ca0  f7fffffe          BL       GUI_ARRAY_AddItem
;;;982        pObj = LISTVIEW_H2P(hObj); /* Restore after allocating memory */
000ca4  4630              MOV      r0,r6
000ca6  f7fffffe          BL       GUI_ALLOC_h2p
000caa  4604              MOV      r4,r0
;;;983        NumRows = LISTVIEW__GetNumRows(pObj);
000cac  4620              MOV      r0,r4
000cae  f7fffffe          BL       LISTVIEW__GetNumRows
000cb2  4680              MOV      r8,r0
;;;984        if (NumRows) {
000cb4  f1b80f00          CMP      r8,#0
000cb8  d019              BEQ      |L1.3310|
;;;985          LISTVIEW_ROW* pRow;
;;;986          unsigned i;
;;;987          for (i = 0; i < NumRows; i++) {
000cba  2500              MOVS     r5,#0
000cbc  e013              B        |L1.3302|
                  |L1.3262|
;;;988            pRow = (LISTVIEW_ROW*) GUI_ARRAY_GetpItem(&pObj->RowArray, i);
000cbe  4629              MOV      r1,r5
000cc0  f104002a          ADD      r0,r4,#0x2a
000cc4  f7fffffe          BL       GUI_ARRAY_GetpItem
000cc8  9000              STR      r0,[sp,#0]
;;;989            if (GUI_ARRAY_AddItem(&pRow->CellArray, NULL, sizeof(LISTVIEW_CELL))) {
000cca  2204              MOVS     r2,#4
000ccc  2100              MOVS     r1,#0
000cce  9800              LDR      r0,[sp,#0]
000cd0  f7fffffe          BL       GUI_ARRAY_AddItem
000cd4  b110              CBZ      r0,|L1.3292|
;;;990              r = 1;
000cd6  f04f0b01          MOV      r11,#1
;;;991              break;
000cda  e006              B        |L1.3306|
                  |L1.3292|
;;;992            }
;;;993            pObj = LISTVIEW_H2P(hObj); /* Restore after allocating memory */
000cdc  4630              MOV      r0,r6
000cde  f7fffffe          BL       GUI_ALLOC_h2p
000ce2  4604              MOV      r4,r0
000ce4  1c6d              ADDS     r5,r5,#1              ;987
                  |L1.3302|
000ce6  4545              CMP      r5,r8                 ;987
000ce8  d3e9              BCC      |L1.3262|
                  |L1.3306|
000cea  bf00              NOP                            ;991
;;;994          }
;;;995        }
000cec  bf00              NOP      
                  |L1.3310|
;;;996        LISTVIEW__UpdateScrollParas(hObj, pObj);
000cee  4621              MOV      r1,r4
000cf0  4630              MOV      r0,r6
000cf2  f7fffffe          BL       LISTVIEW__UpdateScrollParas
;;;997        LISTVIEW__InvalidateInsideArea(hObj, pObj);
000cf6  4621              MOV      r1,r4
000cf8  4630              MOV      r0,r6
000cfa  f7fffffe          BL       LISTVIEW__InvalidateInsideArea
;;;998        WM_UNLOCK();
;;;999      }
000cfe  bf00              NOP      
                  |L1.3328|
;;;1000     return r;
000d00  4658              MOV      r0,r11
;;;1001   }
000d02  e8bd8ffe          POP      {r1-r11,pc}
;;;1002   
                          ENDP

                  LISTVIEW_AddRow PROC
;;;1006   */
;;;1007   int LISTVIEW_AddRow(LISTVIEW_Handle hObj, const GUI_ConstString* ppText) {
000d06  e92d4ffe          PUSH     {r1-r11,lr}
000d0a  4682              MOV      r10,r0
000d0c  460d              MOV      r5,r1
;;;1008     int r = 0;
000d0e  2000              MOVS     r0,#0
000d10  9002              STR      r0,[sp,#8]
;;;1009     if (hObj) {
000d12  f1ba0f00          CMP      r10,#0
000d16  d06c              BEQ      |L1.3570|
;;;1010       LISTVIEW_Obj* pObj;
;;;1011       WM_LOCK();
;;;1012       pObj = LISTVIEW_H2P(hObj);
000d18  4650              MOV      r0,r10
000d1a  f7fffffe          BL       GUI_ALLOC_h2p
000d1e  4604              MOV      r4,r0
;;;1013       /* Add row item to the GUI_ARRAY */
;;;1014       if (GUI_ARRAY_AddItem(&pObj->RowArray, NULL, sizeof(LISTVIEW_ROW)) == 0) {
000d20  220c              MOVS     r2,#0xc
000d22  2100              MOVS     r1,#0
000d24  f104002a          ADD      r0,r4,#0x2a
000d28  f7fffffe          BL       GUI_ARRAY_AddItem
000d2c  2800              CMP      r0,#0
000d2e  d15d              BNE      |L1.3564|
;;;1015         LISTVIEW_ROW* pRow;
;;;1016         int i, RowIndex, NumColumns, NumBytes;
;;;1017         const char* s;
;;;1018         pObj       = LISTVIEW_H2P(hObj);                                         /* Restore after allocating memory */
000d30  4650              MOV      r0,r10
000d32  f7fffffe          BL       GUI_ALLOC_h2p
000d36  4604              MOV      r4,r0
;;;1019         RowIndex   = LISTVIEW__GetNumRows(pObj) - 1;
000d38  4620              MOV      r0,r4
000d3a  f7fffffe          BL       LISTVIEW__GetNumRows
000d3e  f1a00b01          SUB      r11,r0,#1
;;;1020         NumColumns = LISTVIEW__GetNumColumns(pObj);
000d42  4620              MOV      r0,r4
000d44  f7fffffe          BL       LISTVIEW__GetNumColumns
000d48  9000              STR      r0,[sp,#0]
;;;1021         pRow       = (LISTVIEW_ROW*) GUI_ARRAY_GetpItem(&pObj->RowArray, RowIndex);
000d4a  4659              MOV      r1,r11
000d4c  f104002a          ADD      r0,r4,#0x2a
000d50  f7fffffe          BL       GUI_ARRAY_GetpItem
000d54  9001              STR      r0,[sp,#4]
;;;1022         GUI_ARRAY_CREATE(&pRow->CellArray);
;;;1023         /* Add columns for the new row */
;;;1024         for (i = 0; i < NumColumns; i++) {
000d56  2600              MOVS     r6,#0
000d58  e02c              B        |L1.3508|
                  |L1.3418|
;;;1025           LISTVIEW_CELL* pCell;
;;;1026           s = (ppText) ? *ppText++ : 0;
000d5a  b10d              CBZ      r5,|L1.3424|
000d5c  cd01              LDM      r5!,{r0}
000d5e  e000              B        |L1.3426|
                  |L1.3424|
000d60  2000              MOVS     r0,#0
                  |L1.3426|
000d62  4680              MOV      r8,r0
;;;1027           if (s == 0) {
000d64  f1b80f00          CMP      r8,#0
000d68  d100              BNE      |L1.3436|
;;;1028             ppText = 0;
000d6a  2500              MOVS     r5,#0
                  |L1.3436|
;;;1029           }
;;;1030           NumBytes = GUI__strlen(s) + 1;     /* 0 if no string is specified (s == NULL) */
000d6c  4640              MOV      r0,r8
000d6e  f7fffffe          BL       GUI__strlen
000d72  1c47              ADDS     r7,r0,#1
;;;1031           if (GUI_ARRAY_AddItem(&pRow->CellArray, NULL, sizeof(LISTVIEW_CELL) + NumBytes)) {
000d74  1d3a              ADDS     r2,r7,#4
000d76  2100              MOVS     r1,#0
000d78  9801              LDR      r0,[sp,#4]
000d7a  f7fffffe          BL       GUI_ARRAY_AddItem
000d7e  b110              CBZ      r0,|L1.3462|
;;;1032             r = 1;
000d80  2001              MOVS     r0,#1
000d82  9002              STR      r0,[sp,#8]
;;;1033             break;
000d84  e019              B        |L1.3514|
                  |L1.3462|
;;;1034           }
;;;1035           pObj  = LISTVIEW_H2P(hObj);                                            /* Restore after allocating memory */
000d86  4650              MOV      r0,r10
000d88  f7fffffe          BL       GUI_ALLOC_h2p
000d8c  4604              MOV      r4,r0
;;;1036           pRow  = (LISTVIEW_ROW*) GUI_ARRAY_GetpItem(&pObj->RowArray, RowIndex); /* Restore after allocating memory */
000d8e  4659              MOV      r1,r11
000d90  f104002a          ADD      r0,r4,#0x2a
000d94  f7fffffe          BL       GUI_ARRAY_GetpItem
000d98  9001              STR      r0,[sp,#4]
;;;1037           pCell = (LISTVIEW_CELL*) GUI_ARRAY_GetpItem(&pRow->CellArray, i);
000d9a  4631              MOV      r1,r6
000d9c  9801              LDR      r0,[sp,#4]
000d9e  f7fffffe          BL       GUI_ARRAY_GetpItem
000da2  4681              MOV      r9,r0
;;;1038           if (NumBytes > 1) {
000da4  2f01              CMP      r7,#1
000da6  dd04              BLE      |L1.3506|
;;;1039             strcpy(pCell->acText, s);
000da8  4641              MOV      r1,r8
000daa  f1090002          ADD      r0,r9,#2
000dae  f7fffffe          BL       strcpy
                  |L1.3506|
000db2  1c76              ADDS     r6,r6,#1              ;1024
                  |L1.3508|
000db4  9800              LDR      r0,[sp,#0]            ;1024
000db6  4286              CMP      r6,r0                 ;1024
000db8  dbcf              BLT      |L1.3418|
                  |L1.3514|
000dba  bf00              NOP                            ;1033
;;;1040           }
;;;1041         }
;;;1042         pObj->IsSorted = 0;
000dbc  2000              MOVS     r0,#0
000dbe  f8840094          STRB     r0,[r4,#0x94]
;;;1043         LISTVIEW__UpdateScrollParas(hObj, pObj);
000dc2  4621              MOV      r1,r4
000dc4  4650              MOV      r0,r10
000dc6  f7fffffe          BL       LISTVIEW__UpdateScrollParas
;;;1044         if (pObj->hSort && (pObj->SortIndex >= 0)) {
000dca  f8b40092          LDRH     r0,[r4,#0x92]
000dce  b138              CBZ      r0,|L1.3552|
000dd0  6ea0              LDR      r0,[r4,#0x68]
000dd2  2800              CMP      r0,#0
000dd4  db04              BLT      |L1.3552|
;;;1045           LISTVIEW__InvalidateInsideArea(hObj, pObj);
000dd6  4621              MOV      r1,r4
000dd8  4650              MOV      r0,r10
000dda  f7fffffe          BL       LISTVIEW__InvalidateInsideArea
000dde  e004              B        |L1.3562|
                  |L1.3552|
;;;1046         } else {
;;;1047           LISTVIEW__InvalidateRow(hObj, pObj, RowIndex);
000de0  465a              MOV      r2,r11
000de2  4621              MOV      r1,r4
000de4  4650              MOV      r0,r10
000de6  f7fffffe          BL       LISTVIEW__InvalidateRow
                  |L1.3562|
;;;1048         }
;;;1049       } else {
000dea  e001              B        |L1.3568|
                  |L1.3564|
;;;1050         r = 1;
000dec  2001              MOVS     r0,#1
000dee  9002              STR      r0,[sp,#8]
                  |L1.3568|
;;;1051       }
;;;1052       WM_UNLOCK();
;;;1053     }
000df0  bf00              NOP      
                  |L1.3570|
;;;1054     return r;
000df2  9802              LDR      r0,[sp,#8]
;;;1055   }
000df4  e8bd8ffe          POP      {r1-r11,pc}
;;;1056   
                          ENDP

                  |L1.3576|
                          DCD      LISTVIEW_DefaultProps

                          AREA ||.data||, DATA, ALIGN=2

                  LISTVIEW_DefaultProps
                          DCD      0x00ffffff
                          DCD      0x00808080
                          DCD      0x00ff0000
                          DCD      0x00d3d3d3
                          DCD      0x00000000
                          DCD      0x00ffffff
                          DCD      0x00ffffff
                          DCD      0x00808080
                          DCD      0x00d3d3d3
                          DCD      GUI_Font13_1
000028  000a              DCW      0x000a
00002a  0000              DCB      0x00,0x00

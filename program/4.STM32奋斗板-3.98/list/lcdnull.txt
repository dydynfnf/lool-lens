; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\lcdnull.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\lcdnull.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -IC:\Users\Administrator\Desktop\gui\STM32·Ü¶·°å-3.98\RTE -Id:\Keil_v5\ARM\PACK\ARM\CMSIS\4.3.0\CMSIS\Include -Id:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.1.0\Device\Include -D__UVISION_VERSION=515 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\lcdnull.crf GUI\LCDDriver\LCDNull.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  LCD_L0_SetPixelIndex PROC
;;;31     
;;;32     void LCD_L0_SetPixelIndex(int x, int y, int PixelIndex) 
000000  b570              PUSH     {r4-r6,lr}
;;;33     {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
000006  4616              MOV      r6,r2
;;;34     	TFT_DrawPoint(x,y,PixelIndex);
000008  b2b2              UXTH     r2,r6
00000a  b2a9              UXTH     r1,r5
00000c  b2a0              UXTH     r0,r4
00000e  f7fffffe          BL       TFT_DrawPoint
;;;35     }
000012  bd70              POP      {r4-r6,pc}
;;;36     
                          ENDP

                  LCD_L0_GetPixelIndex PROC
;;;40     */
;;;41     unsigned int LCD_L0_GetPixelIndex(int x, int y) 
000014  b570              PUSH     {r4-r6,lr}
;;;42     {
000016  4604              MOV      r4,r0
000018  460d              MOV      r5,r1
;;;43     	return (TFT_ReadPoint(x,y));
00001a  b2a9              UXTH     r1,r5
00001c  b2a0              UXTH     r0,r4
00001e  f7fffffe          BL       TFT_ReadPoint
;;;44     }
000022  bd70              POP      {r4-r6,pc}
;;;45     
                          ENDP

                  LCD_L0_XorPixel PROC
;;;49     */
;;;50     void LCD_L0_XorPixel(int x, int y) 
000024  b570              PUSH     {r4-r6,lr}
;;;51     {
000026  4604              MOV      r4,r0
000028  460d              MOV      r5,r1
;;;52     	LCD_PIXELINDEX Index = TFT_ReadPoint(x,y);
00002a  b2a9              UXTH     r1,r5
00002c  b2a0              UXTH     r0,r4
00002e  f7fffffe          BL       TFT_ReadPoint
000032  4606              MOV      r6,r0
;;;53     	TFT_DrawPoint(x,y,LCD_NUM_COLORS-1-Index);
000034  f64f73ff          MOV      r3,#0xffff
000038  1b9a              SUBS     r2,r3,r6
00003a  b2a9              UXTH     r1,r5
00003c  b2a0              UXTH     r0,r4
00003e  f7fffffe          BL       TFT_DrawPoint
;;;54     }
000042  bd70              POP      {r4-r6,pc}
;;;55     
                          ENDP

                  LCD_L0_DrawHLine PROC
;;;60     
;;;61     void LCD_L0_DrawHLine(int x0, int y,  int x1) 
000044  e92d41f0          PUSH     {r4-r8,lr}
;;;62     {
000048  4604              MOV      r4,r0
00004a  460d              MOV      r5,r1
00004c  4616              MOV      r6,r2
;;;63     	TFT_HLine(x0,y,x1,LCD_COLORINDEX);
00004e  4ffd              LDR      r7,|L1.1092|
000050  887b              LDRH     r3,[r7,#2]  ; GUI_Context
000052  b2b2              UXTH     r2,r6
000054  b2a9              UXTH     r1,r5
000056  b2a0              UXTH     r0,r4
000058  f7fffffe          BL       TFT_HLine
;;;64     }
00005c  e8bd81f0          POP      {r4-r8,pc}
;;;65     
                          ENDP

                  LCD_L0_DrawVLine PROC
;;;69     */
;;;70     void LCD_L0_DrawVLine(int x, int y0,  int y1) 
000060  e92d41f0          PUSH     {r4-r8,lr}
;;;71     {
000064  4604              MOV      r4,r0
000066  460d              MOV      r5,r1
000068  4616              MOV      r6,r2
;;;72     	TFT_VLine(x,y0,y1,LCD_COLORINDEX);
00006a  4ff6              LDR      r7,|L1.1092|
00006c  887b              LDRH     r3,[r7,#2]  ; GUI_Context
00006e  b2b2              UXTH     r2,r6
000070  b2a9              UXTH     r1,r5
000072  b2a0              UXTH     r0,r4
000074  f7fffffe          BL       TFT_VLine
;;;73     }
000078  e8bd81f0          POP      {r4-r8,pc}
;;;74     
                          ENDP

                  LCD_L0_FillRect PROC
;;;78     */
;;;79     void LCD_L0_FillRect(int x0, int y0, int x1, int y1) 
00007c  b5f8              PUSH     {r3-r7,lr}
;;;80     {
00007e  4604              MOV      r4,r0
000080  460d              MOV      r5,r1
000082  4616              MOV      r6,r2
000084  461f              MOV      r7,r3
;;;81     	TFT_Fill(x0,y0,x1,y1,LCD_COLORINDEX);
000086  48ef              LDR      r0,|L1.1092|
000088  8840              LDRH     r0,[r0,#2]  ; GUI_Context
00008a  b2bb              UXTH     r3,r7
00008c  b2b2              UXTH     r2,r6
00008e  b2a9              UXTH     r1,r5
000090  9000              STR      r0,[sp,#0]
000092  b2a0              UXTH     r0,r4
000094  f7fffffe          BL       TFT_Fill
;;;82     }
000098  bdf8              POP      {r3-r7,pc}
;;;83     
                          ENDP

                  DrawBitLine1BPP PROC
;;;88     
;;;89     void DrawBitLine1BPP(int x, int y, U8 const*p, int Diff, int xsize, const LCD_PIXELINDEX*pTrans)
00009a  e92d4ff8          PUSH     {r3-r11,lr}
;;;90     {
00009e  4604              MOV      r4,r0
0000a0  460f              MOV      r7,r1
0000a2  4690              MOV      r8,r2
0000a4  4699              MOV      r9,r3
0000a6  e9dd5a0a          LDRD     r5,r10,[sp,#0x28]
;;;91       LCD_PIXELINDEX pixels;
;;;92       LCD_PIXELINDEX Index0 = *(pTrans+0);
0000aa  f8ba0000          LDRH     r0,[r10,#0]
0000ae  9000              STR      r0,[sp,#0]
;;;93       LCD_PIXELINDEX Index1 = *(pTrans+1);
0000b0  f8bab002          LDRH     r11,[r10,#2]
;;;94     /*
;;;95     // Jump to right entry point
;;;96     */
;;;97       pixels = *p;
0000b4  f8986000          LDRB     r6,[r8,#0]
;;;98       switch (GUI_Context.DrawMode & (LCD_DRAWMODE_TRANS|LCD_DRAWMODE_XOR)) {
0000b8  48e2              LDR      r0,|L1.1092|
0000ba  7c00              LDRB     r0,[r0,#0x10]  ; GUI_Context
0000bc  f0000003          AND      r0,r0,#3
0000c0  b120              CBZ      r0,|L1.204|
0000c2  2801              CMP      r0,#1
0000c4  d028              BEQ      |L1.280|
0000c6  2802              CMP      r0,#2
0000c8  d139              BNE      |L1.318|
0000ca  e012              B        |L1.242|
                  |L1.204|
;;;99       case 0:
;;;100        #if defined (SETNEXTPIXEL)   /* Optimization ! */
;;;101          x+=Diff;
;;;102        #endif
;;;103        switch (Diff&7) {
0000cc  f0090007          AND      r0,r9,#7
0000d0  2808              CMP      r0,#8
0000d2  d20d              BCS      |L1.240|
0000d4  e8dff000          TBB      [pc,r0]
0000d8  04050607          DCB      0x04,0x05,0x06,0x07
0000dc  08090a0b          DCB      0x08,0x09,0x0a,0x0b
;;;104        case 0:   
;;;105          goto WriteBit0;
0000e0  e0a4              B        |L1.556|
;;;106        case 1:   
;;;107          goto WriteBit1;
0000e2  e0b3              B        |L1.588|
;;;108        case 2:
;;;109          goto WriteBit2;
0000e4  e0c3              B        |L1.622|
;;;110        case 3:
;;;111          goto WriteBit3;
0000e6  e0d3              B        |L1.656|
;;;112        case 4:
;;;113          goto WriteBit4;
0000e8  e0e3              B        |L1.690|
;;;114        case 5:   
;;;115          goto WriteBit5;
0000ea  e0f3              B        |L1.724|
;;;116        case 6:   
;;;117          goto WriteBit6;
0000ec  e103              B        |L1.758|
;;;118        case 7:   
;;;119          goto WriteBit7;
0000ee  e113              B        |L1.792|
                  |L1.240|
;;;120        }
;;;121        break;
0000f0  e025              B        |L1.318|
                  |L1.242|
;;;122      case LCD_DRAWMODE_TRANS:
;;;123        switch (Diff&7) {
0000f2  f0090007          AND      r0,r9,#7
0000f6  2808              CMP      r0,#8
0000f8  d20d              BCS      |L1.278|
0000fa  e8dff000          TBB      [pc,r0]
0000fe  0405              DCB      0x04,0x05
000100  06070809          DCB      0x06,0x07,0x08,0x09
000104  0a0b              DCB      0x0a,0x0b
;;;124        case 0:
;;;125          goto WriteTBit0;
000106  e01c              B        |L1.322|
;;;126        case 1:
;;;127          goto WriteTBit1;
000108  e029              B        |L1.350|
;;;128        case 2:
;;;129          goto WriteTBit2;
00010a  e036              B        |L1.378|
;;;130        case 3:
;;;131          goto WriteTBit3;
00010c  e043              B        |L1.406|
;;;132        case 4:
;;;133          goto WriteTBit4;
00010e  e050              B        |L1.434|
;;;134        case 5:   
;;;135          goto WriteTBit5;
000110  e05d              B        |L1.462|
;;;136        case 6:   
;;;137          goto WriteTBit6;
000112  e06a              B        |L1.490|
;;;138        case 7:   
;;;139          goto WriteTBit7;
000114  e077              B        |L1.518|
                  |L1.278|
;;;140        }
;;;141        break;
000116  e012              B        |L1.318|
                  |L1.280|
;;;142      case LCD_DRAWMODE_XOR:
;;;143        switch (Diff&7) {
000118  f0090007          AND      r0,r9,#7
00011c  2808              CMP      r0,#8
00011e  d20d              BCS      |L1.316|
000120  e8dff000          TBB      [pc,r0]
000124  04050607          DCB      0x04,0x05,0x06,0x07
000128  08090a0b          DCB      0x08,0x09,0x0a,0x0b
;;;144        case 0:   
;;;145          goto WriteXBit0;
00012c  e10a              B        |L1.836|
;;;146        case 1:   
;;;147          goto WriteXBit1;
00012e  e115              B        |L1.860|
;;;148        case 2:
;;;149          goto WriteXBit2;
000130  e120              B        |L1.884|
;;;150        case 3:
;;;151          goto WriteXBit3;
000132  e12b              B        |L1.908|
;;;152        case 4:
;;;153          goto WriteXBit4;
000134  e136              B        |L1.932|
;;;154        case 5:   
;;;155          goto WriteXBit5;
000136  e141              B        |L1.956|
;;;156        case 6:   
;;;157          goto WriteXBit6;
000138  e14c              B        |L1.980|
;;;158        case 7:   
;;;159          goto WriteXBit7;
00013a  e157              B        |L1.1004|
                  |L1.316|
00013c  bf00              NOP                            ;98
                  |L1.318|
00013e  bf00              NOP                            ;121
;;;160        }
;;;161      }
;;;162    /*
;;;163            Write with transparency
;;;164    */
;;;165      WriteTBit0:
000140  bf00              NOP      
                  |L1.322|
;;;166        if (pixels&(1<<7)) TFT_DrawPoint(x+0, y, Index1);
000142  f0060080          AND      r0,r6,#0x80
000146  b120              CBZ      r0,|L1.338|
000148  b2b9              UXTH     r1,r7
00014a  b2a0              UXTH     r0,r4
00014c  465a              MOV      r2,r11
00014e  f7fffffe          BL       TFT_DrawPoint
                  |L1.338|
;;;167        if (!--xsize)
000152  1e68              SUBS     r0,r5,#1
000154  0005              MOVS     r5,r0
000156  d101              BNE      |L1.348|
                  |L1.344|
;;;168          return;
;;;169      WriteTBit1:
;;;170        if (pixels&(1<<6)) TFT_DrawPoint(x+1, y, Index1);
;;;171        if (!--xsize)
;;;172          return;
;;;173      WriteTBit2:
;;;174        if (pixels&(1<<5)) TFT_DrawPoint(x+2, y, Index1);
;;;175        if (!--xsize)
;;;176          return;
;;;177      WriteTBit3:
;;;178        if (pixels&(1<<4)) TFT_DrawPoint(x+3, y, Index1);
;;;179        if (!--xsize)
;;;180          return;
;;;181      WriteTBit4:
;;;182        if (pixels&(1<<3)) TFT_DrawPoint(x+4, y, Index1);
;;;183        if (!--xsize)
;;;184          return;
;;;185      WriteTBit5:
;;;186        if (pixels&(1<<2)) TFT_DrawPoint(x+5, y, Index1);
;;;187        if (!--xsize)
;;;188          return;
;;;189      WriteTBit6:
;;;190        if (pixels&(1<<1)) TFT_DrawPoint(x+6, y, Index1);
;;;191        if (!--xsize)
;;;192          return;
;;;193      WriteTBit7:
;;;194        if (pixels&(1<<0)) TFT_DrawPoint(x+7, y, Index1);
;;;195        if (!--xsize)
;;;196          return;
;;;197        x+=8;
;;;198        pixels = *(++p);
;;;199        goto WriteTBit0;
;;;200    
;;;201    /*
;;;202            Write without transparency
;;;203    */
;;;204    
;;;205      WriteBit0:
;;;206        TFT_DrawPoint(x+0, y, (pixels&(1<<7)) ? Index1 : Index0);
;;;207        if (!--xsize)
;;;208          return;
;;;209      WriteBit1:
;;;210        TFT_DrawPoint(x+1, y, (pixels&(1<<6)) ? Index1 : Index0);
;;;211        if (!--xsize)
;;;212          return;
;;;213      WriteBit2:
;;;214        TFT_DrawPoint(x+2, y, (pixels&(1<<5)) ? Index1 : Index0);
;;;215        if (!--xsize)
;;;216          return;
;;;217      WriteBit3:
;;;218        TFT_DrawPoint(x+3, y, (pixels&(1<<4)) ? Index1 : Index0);
;;;219        if (!--xsize)
;;;220          return;
;;;221      WriteBit4:
;;;222        TFT_DrawPoint(x+4, y, (pixels&(1<<3)) ? Index1 : Index0);
;;;223        if (!--xsize)
;;;224          return;
;;;225      WriteBit5:
;;;226        TFT_DrawPoint(x+5, y, (pixels&(1<<2)) ? Index1 : Index0);
;;;227        if (!--xsize)
;;;228          return;
;;;229      WriteBit6:
;;;230        TFT_DrawPoint(x+6, y, (pixels&(1<<1)) ? Index1 : Index0);
;;;231        if (!--xsize)
;;;232          return;
;;;233      WriteBit7:
;;;234        TFT_DrawPoint(x+7, y, (pixels&(1<<0)) ? Index1 : Index0);
;;;235        if (!--xsize)
;;;236          return;
;;;237        x+=8;
;;;238        pixels = *(++p);
;;;239        goto WriteBit0;
;;;240    
;;;241    /*
;;;242            Write XOR mode
;;;243    */
;;;244      WriteXBit0:
;;;245        if (pixels&(1<<7))
;;;246          LCD_L0_XorPixel(x+0, y);
;;;247        if (!--xsize)
;;;248          return;
;;;249      WriteXBit1:
;;;250        if (pixels&(1<<6))
;;;251          LCD_L0_XorPixel(x+1, y);
;;;252        if (!--xsize)
;;;253          return;
;;;254      WriteXBit2:
;;;255        if (pixels&(1<<5))
;;;256          LCD_L0_XorPixel(x+2, y);
;;;257        if (!--xsize)
;;;258          return;
;;;259      WriteXBit3:
;;;260        if (pixels&(1<<4))
;;;261          LCD_L0_XorPixel(x+3, y);
;;;262        if (!--xsize)
;;;263          return;
;;;264      WriteXBit4:
;;;265        if (pixels&(1<<3))
;;;266          LCD_L0_XorPixel(x+4, y);
;;;267        if (!--xsize)
;;;268          return;
;;;269      WriteXBit5:
;;;270        if (pixels&(1<<2))
;;;271          LCD_L0_XorPixel(x+5, y);
;;;272        if (!--xsize)
;;;273          return;
;;;274      WriteXBit6:
;;;275        if (pixels&(1<<1))
;;;276          LCD_L0_XorPixel(x+6, y);
;;;277        if (!--xsize)
;;;278          return;
;;;279      WriteXBit7:
;;;280        if (pixels&(1<<0))
;;;281          LCD_L0_XorPixel(x+7, y);
;;;282        if (!--xsize)
;;;283          return;
;;;284        x+=8;
;;;285        pixels = *(++p);
;;;286        goto WriteXBit0;
;;;287    }
000158  e8bd8ff8          POP      {r3-r11,pc}
                  |L1.348|
00015c  bf00              NOP                            ;169
                  |L1.350|
00015e  f0060040          AND      r0,r6,#0x40           ;170
000162  b128              CBZ      r0,|L1.368|
000164  b2b9              UXTH     r1,r7                 ;170
000166  1c62              ADDS     r2,r4,#1              ;170
000168  b290              UXTH     r0,r2                 ;170
00016a  465a              MOV      r2,r11                ;170
00016c  f7fffffe          BL       TFT_DrawPoint
                  |L1.368|
000170  1e68              SUBS     r0,r5,#1              ;171
000172  0005              MOVS     r5,r0                 ;171
000174  d100              BNE      |L1.376|
000176  e7ef              B        |L1.344|
                  |L1.376|
000178  bf00              NOP                            ;173
                  |L1.378|
00017a  f0060020          AND      r0,r6,#0x20           ;174
00017e  b128              CBZ      r0,|L1.396|
000180  b2b9              UXTH     r1,r7                 ;174
000182  1ca2              ADDS     r2,r4,#2              ;174
000184  b290              UXTH     r0,r2                 ;174
000186  465a              MOV      r2,r11                ;174
000188  f7fffffe          BL       TFT_DrawPoint
                  |L1.396|
00018c  1e68              SUBS     r0,r5,#1              ;175
00018e  0005              MOVS     r5,r0                 ;175
000190  d100              BNE      |L1.404|
000192  e7e1              B        |L1.344|
                  |L1.404|
000194  bf00              NOP                            ;177
                  |L1.406|
000196  f0060010          AND      r0,r6,#0x10           ;178
00019a  b128              CBZ      r0,|L1.424|
00019c  b2b9              UXTH     r1,r7                 ;178
00019e  1ce2              ADDS     r2,r4,#3              ;178
0001a0  b290              UXTH     r0,r2                 ;178
0001a2  465a              MOV      r2,r11                ;178
0001a4  f7fffffe          BL       TFT_DrawPoint
                  |L1.424|
0001a8  1e68              SUBS     r0,r5,#1              ;179
0001aa  0005              MOVS     r5,r0                 ;179
0001ac  d100              BNE      |L1.432|
0001ae  e7d3              B        |L1.344|
                  |L1.432|
0001b0  bf00              NOP                            ;181
                  |L1.434|
0001b2  f0060008          AND      r0,r6,#8              ;182
0001b6  b128              CBZ      r0,|L1.452|
0001b8  b2b9              UXTH     r1,r7                 ;182
0001ba  1d22              ADDS     r2,r4,#4              ;182
0001bc  b290              UXTH     r0,r2                 ;182
0001be  465a              MOV      r2,r11                ;182
0001c0  f7fffffe          BL       TFT_DrawPoint
                  |L1.452|
0001c4  1e68              SUBS     r0,r5,#1              ;183
0001c6  0005              MOVS     r5,r0                 ;183
0001c8  d100              BNE      |L1.460|
0001ca  e7c5              B        |L1.344|
                  |L1.460|
0001cc  bf00              NOP                            ;185
                  |L1.462|
0001ce  f0060004          AND      r0,r6,#4              ;186
0001d2  b128              CBZ      r0,|L1.480|
0001d4  b2b9              UXTH     r1,r7                 ;186
0001d6  1d62              ADDS     r2,r4,#5              ;186
0001d8  b290              UXTH     r0,r2                 ;186
0001da  465a              MOV      r2,r11                ;186
0001dc  f7fffffe          BL       TFT_DrawPoint
                  |L1.480|
0001e0  1e68              SUBS     r0,r5,#1              ;187
0001e2  0005              MOVS     r5,r0                 ;187
0001e4  d100              BNE      |L1.488|
0001e6  e7b7              B        |L1.344|
                  |L1.488|
0001e8  bf00              NOP                            ;189
                  |L1.490|
0001ea  f0060002          AND      r0,r6,#2              ;190
0001ee  b128              CBZ      r0,|L1.508|
0001f0  b2b9              UXTH     r1,r7                 ;190
0001f2  1da2              ADDS     r2,r4,#6              ;190
0001f4  b290              UXTH     r0,r2                 ;190
0001f6  465a              MOV      r2,r11                ;190
0001f8  f7fffffe          BL       TFT_DrawPoint
                  |L1.508|
0001fc  1e68              SUBS     r0,r5,#1              ;191
0001fe  0005              MOVS     r5,r0                 ;191
000200  d100              BNE      |L1.516|
000202  e7a9              B        |L1.344|
                  |L1.516|
000204  bf00              NOP                            ;193
                  |L1.518|
000206  f0060001          AND      r0,r6,#1              ;194
00020a  b128              CBZ      r0,|L1.536|
00020c  b2b9              UXTH     r1,r7                 ;194
00020e  1de2              ADDS     r2,r4,#7              ;194
000210  b290              UXTH     r0,r2                 ;194
000212  465a              MOV      r2,r11                ;194
000214  f7fffffe          BL       TFT_DrawPoint
                  |L1.536|
000218  1e68              SUBS     r0,r5,#1              ;195
00021a  0005              MOVS     r5,r0                 ;195
00021c  d100              BNE      |L1.544|
00021e  e79b              B        |L1.344|
                  |L1.544|
000220  3408              ADDS     r4,r4,#8              ;197
000222  f1080001          ADD      r0,r8,#1              ;198
000226  4680              MOV      r8,r0                 ;198
000228  7806              LDRB     r6,[r0,#0]            ;198
00022a  e78a              B        |L1.322|
                  |L1.556|
00022c  f0060380          AND      r3,r6,#0x80           ;206
000230  b10b              CBZ      r3,|L1.566|
000232  465b              MOV      r3,r11                ;206
000234  e000              B        |L1.568|
                  |L1.566|
000236  9b00              LDR      r3,[sp,#0]            ;206
                  |L1.568|
000238  461a              MOV      r2,r3                 ;206
00023a  b2b9              UXTH     r1,r7                 ;206
00023c  b2a0              UXTH     r0,r4                 ;206
00023e  f7fffffe          BL       TFT_DrawPoint
000242  1e68              SUBS     r0,r5,#1              ;207
000244  0005              MOVS     r5,r0                 ;207
000246  d100              BNE      |L1.586|
000248  e786              B        |L1.344|
                  |L1.586|
00024a  bf00              NOP                            ;209
                  |L1.588|
00024c  f0060340          AND      r3,r6,#0x40           ;210
000250  b10b              CBZ      r3,|L1.598|
000252  465b              MOV      r3,r11                ;210
000254  e000              B        |L1.600|
                  |L1.598|
000256  9b00              LDR      r3,[sp,#0]            ;210
                  |L1.600|
000258  461a              MOV      r2,r3                 ;210
00025a  b2b9              UXTH     r1,r7                 ;210
00025c  1c63              ADDS     r3,r4,#1              ;210
00025e  b298              UXTH     r0,r3                 ;210
000260  f7fffffe          BL       TFT_DrawPoint
000264  1e68              SUBS     r0,r5,#1              ;211
000266  0005              MOVS     r5,r0                 ;211
000268  d100              BNE      |L1.620|
00026a  e775              B        |L1.344|
                  |L1.620|
00026c  bf00              NOP                            ;213
                  |L1.622|
00026e  f0060320          AND      r3,r6,#0x20           ;214
000272  b10b              CBZ      r3,|L1.632|
000274  465b              MOV      r3,r11                ;214
000276  e000              B        |L1.634|
                  |L1.632|
000278  9b00              LDR      r3,[sp,#0]            ;214
                  |L1.634|
00027a  461a              MOV      r2,r3                 ;214
00027c  b2b9              UXTH     r1,r7                 ;214
00027e  1ca3              ADDS     r3,r4,#2              ;214
000280  b298              UXTH     r0,r3                 ;214
000282  f7fffffe          BL       TFT_DrawPoint
000286  1e68              SUBS     r0,r5,#1              ;215
000288  0005              MOVS     r5,r0                 ;215
00028a  d100              BNE      |L1.654|
00028c  e764              B        |L1.344|
                  |L1.654|
00028e  bf00              NOP                            ;217
                  |L1.656|
000290  f0060310          AND      r3,r6,#0x10           ;218
000294  b10b              CBZ      r3,|L1.666|
000296  465b              MOV      r3,r11                ;218
000298  e000              B        |L1.668|
                  |L1.666|
00029a  9b00              LDR      r3,[sp,#0]            ;218
                  |L1.668|
00029c  461a              MOV      r2,r3                 ;218
00029e  b2b9              UXTH     r1,r7                 ;218
0002a0  1ce3              ADDS     r3,r4,#3              ;218
0002a2  b298              UXTH     r0,r3                 ;218
0002a4  f7fffffe          BL       TFT_DrawPoint
0002a8  1e68              SUBS     r0,r5,#1              ;219
0002aa  0005              MOVS     r5,r0                 ;219
0002ac  d100              BNE      |L1.688|
0002ae  e753              B        |L1.344|
                  |L1.688|
0002b0  bf00              NOP                            ;221
                  |L1.690|
0002b2  f0060308          AND      r3,r6,#8              ;222
0002b6  b10b              CBZ      r3,|L1.700|
0002b8  465b              MOV      r3,r11                ;222
0002ba  e000              B        |L1.702|
                  |L1.700|
0002bc  9b00              LDR      r3,[sp,#0]            ;222
                  |L1.702|
0002be  461a              MOV      r2,r3                 ;222
0002c0  b2b9              UXTH     r1,r7                 ;222
0002c2  1d23              ADDS     r3,r4,#4              ;222
0002c4  b298              UXTH     r0,r3                 ;222
0002c6  f7fffffe          BL       TFT_DrawPoint
0002ca  1e68              SUBS     r0,r5,#1              ;223
0002cc  0005              MOVS     r5,r0                 ;223
0002ce  d100              BNE      |L1.722|
0002d0  e742              B        |L1.344|
                  |L1.722|
0002d2  bf00              NOP                            ;225
                  |L1.724|
0002d4  f0060304          AND      r3,r6,#4              ;226
0002d8  b10b              CBZ      r3,|L1.734|
0002da  465b              MOV      r3,r11                ;226
0002dc  e000              B        |L1.736|
                  |L1.734|
0002de  9b00              LDR      r3,[sp,#0]            ;226
                  |L1.736|
0002e0  461a              MOV      r2,r3                 ;226
0002e2  b2b9              UXTH     r1,r7                 ;226
0002e4  1d63              ADDS     r3,r4,#5              ;226
0002e6  b298              UXTH     r0,r3                 ;226
0002e8  f7fffffe          BL       TFT_DrawPoint
0002ec  1e68              SUBS     r0,r5,#1              ;227
0002ee  0005              MOVS     r5,r0                 ;227
0002f0  d100              BNE      |L1.756|
0002f2  e731              B        |L1.344|
                  |L1.756|
0002f4  bf00              NOP                            ;229
                  |L1.758|
0002f6  f0060302          AND      r3,r6,#2              ;230
0002fa  b10b              CBZ      r3,|L1.768|
0002fc  465b              MOV      r3,r11                ;230
0002fe  e000              B        |L1.770|
                  |L1.768|
000300  9b00              LDR      r3,[sp,#0]            ;230
                  |L1.770|
000302  461a              MOV      r2,r3                 ;230
000304  b2b9              UXTH     r1,r7                 ;230
000306  1da3              ADDS     r3,r4,#6              ;230
000308  b298              UXTH     r0,r3                 ;230
00030a  f7fffffe          BL       TFT_DrawPoint
00030e  1e68              SUBS     r0,r5,#1              ;231
000310  0005              MOVS     r5,r0                 ;231
000312  d100              BNE      |L1.790|
000314  e720              B        |L1.344|
                  |L1.790|
000316  bf00              NOP                            ;233
                  |L1.792|
000318  f0060301          AND      r3,r6,#1              ;234
00031c  b10b              CBZ      r3,|L1.802|
00031e  465b              MOV      r3,r11                ;234
000320  e000              B        |L1.804|
                  |L1.802|
000322  9b00              LDR      r3,[sp,#0]            ;234
                  |L1.804|
000324  461a              MOV      r2,r3                 ;234
000326  b2b9              UXTH     r1,r7                 ;234
000328  1de3              ADDS     r3,r4,#7              ;234
00032a  b298              UXTH     r0,r3                 ;234
00032c  f7fffffe          BL       TFT_DrawPoint
000330  1e68              SUBS     r0,r5,#1              ;235
000332  0005              MOVS     r5,r0                 ;235
000334  d100              BNE      |L1.824|
000336  e70f              B        |L1.344|
                  |L1.824|
000338  3408              ADDS     r4,r4,#8              ;237
00033a  f1080001          ADD      r0,r8,#1              ;238
00033e  4680              MOV      r8,r0                 ;238
000340  7806              LDRB     r6,[r0,#0]            ;238
000342  e773              B        |L1.556|
                  |L1.836|
000344  f0060080          AND      r0,r6,#0x80           ;245
000348  b118              CBZ      r0,|L1.850|
00034a  4639              MOV      r1,r7                 ;246
00034c  4620              MOV      r0,r4                 ;246
00034e  f7fffffe          BL       LCD_L0_XorPixel
                  |L1.850|
000352  1e68              SUBS     r0,r5,#1              ;247
000354  0005              MOVS     r5,r0                 ;247
000356  d100              BNE      |L1.858|
000358  e6fe              B        |L1.344|
                  |L1.858|
00035a  bf00              NOP                            ;249
                  |L1.860|
00035c  f0060040          AND      r0,r6,#0x40           ;250
000360  b118              CBZ      r0,|L1.874|
000362  4639              MOV      r1,r7                 ;251
000364  1c60              ADDS     r0,r4,#1              ;251
000366  f7fffffe          BL       LCD_L0_XorPixel
                  |L1.874|
00036a  1e68              SUBS     r0,r5,#1              ;252
00036c  0005              MOVS     r5,r0                 ;252
00036e  d100              BNE      |L1.882|
000370  e6f2              B        |L1.344|
                  |L1.882|
000372  bf00              NOP                            ;254
                  |L1.884|
000374  f0060020          AND      r0,r6,#0x20           ;255
000378  b118              CBZ      r0,|L1.898|
00037a  4639              MOV      r1,r7                 ;256
00037c  1ca0              ADDS     r0,r4,#2              ;256
00037e  f7fffffe          BL       LCD_L0_XorPixel
                  |L1.898|
000382  1e68              SUBS     r0,r5,#1              ;257
000384  0005              MOVS     r5,r0                 ;257
000386  d100              BNE      |L1.906|
000388  e6e6              B        |L1.344|
                  |L1.906|
00038a  bf00              NOP                            ;259
                  |L1.908|
00038c  f0060010          AND      r0,r6,#0x10           ;260
000390  b118              CBZ      r0,|L1.922|
000392  4639              MOV      r1,r7                 ;261
000394  1ce0              ADDS     r0,r4,#3              ;261
000396  f7fffffe          BL       LCD_L0_XorPixel
                  |L1.922|
00039a  1e68              SUBS     r0,r5,#1              ;262
00039c  0005              MOVS     r5,r0                 ;262
00039e  d100              BNE      |L1.930|
0003a0  e6da              B        |L1.344|
                  |L1.930|
0003a2  bf00              NOP                            ;264
                  |L1.932|
0003a4  f0060008          AND      r0,r6,#8              ;265
0003a8  b118              CBZ      r0,|L1.946|
0003aa  4639              MOV      r1,r7                 ;266
0003ac  1d20              ADDS     r0,r4,#4              ;266
0003ae  f7fffffe          BL       LCD_L0_XorPixel
                  |L1.946|
0003b2  1e68              SUBS     r0,r5,#1              ;267
0003b4  0005              MOVS     r5,r0                 ;267
0003b6  d100              BNE      |L1.954|
0003b8  e6ce              B        |L1.344|
                  |L1.954|
0003ba  bf00              NOP                            ;269
                  |L1.956|
0003bc  f0060004          AND      r0,r6,#4              ;270
0003c0  b118              CBZ      r0,|L1.970|
0003c2  4639              MOV      r1,r7                 ;271
0003c4  1d60              ADDS     r0,r4,#5              ;271
0003c6  f7fffffe          BL       LCD_L0_XorPixel
                  |L1.970|
0003ca  1e68              SUBS     r0,r5,#1              ;272
0003cc  0005              MOVS     r5,r0                 ;272
0003ce  d100              BNE      |L1.978|
0003d0  e6c2              B        |L1.344|
                  |L1.978|
0003d2  bf00              NOP                            ;274
                  |L1.980|
0003d4  f0060002          AND      r0,r6,#2              ;275
0003d8  b118              CBZ      r0,|L1.994|
0003da  4639              MOV      r1,r7                 ;276
0003dc  1da0              ADDS     r0,r4,#6              ;276
0003de  f7fffffe          BL       LCD_L0_XorPixel
                  |L1.994|
0003e2  1e68              SUBS     r0,r5,#1              ;277
0003e4  0005              MOVS     r5,r0                 ;277
0003e6  d100              BNE      |L1.1002|
0003e8  e6b6              B        |L1.344|
                  |L1.1002|
0003ea  bf00              NOP                            ;279
                  |L1.1004|
0003ec  f0060001          AND      r0,r6,#1              ;280
0003f0  b118              CBZ      r0,|L1.1018|
0003f2  4639              MOV      r1,r7                 ;281
0003f4  1de0              ADDS     r0,r4,#7              ;281
0003f6  f7fffffe          BL       LCD_L0_XorPixel
                  |L1.1018|
0003fa  1e68              SUBS     r0,r5,#1              ;282
0003fc  0005              MOVS     r5,r0                 ;282
0003fe  d100              BNE      |L1.1026|
000400  e6aa              B        |L1.344|
                  |L1.1026|
000402  3408              ADDS     r4,r4,#8              ;284
000404  f1080001          ADD      r0,r8,#1              ;285
000408  4680              MOV      r8,r0                 ;285
00040a  7806              LDRB     r6,[r0,#0]            ;285
00040c  e79a              B        |L1.836|
;;;288    
                          ENDP

                  DrawBitLine2BPP PROC
;;;289    static void  DrawBitLine2BPP(int x, int y, U8 const*p, int Diff, int xsize, const LCD_PIXELINDEX*pTrans) {
00040e  e92d47f0          PUSH     {r4-r10,lr}
000412  4604              MOV      r4,r0
000414  460e              MOV      r6,r1
000416  4691              MOV      r9,r2
000418  469a              MOV      r10,r3
00041a  e9dd7808          LDRD     r7,r8,[sp,#0x20]
;;;290      LCD_PIXELINDEX pixels;
;;;291    /*
;;;292    // Jump to right entry point
;;;293    */
;;;294      pixels = *p;
00041e  f8995000          LDRB     r5,[r9,#0]
;;;295      if (pTrans) {
000422  f1b80f00          CMP      r8,#0
000426  d07d              BEQ      |L1.1316|
;;;296        /*
;;;297          with palette
;;;298        */
;;;299        if (GUI_Context.DrawMode & LCD_DRAWMODE_TRANS) switch (Diff&3) {
000428  4806              LDR      r0,|L1.1092|
00042a  7c00              LDRB     r0,[r0,#0x10]  ; GUI_Context
00042c  f0000002          AND      r0,r0,#2
000430  b170              CBZ      r0,|L1.1104|
000432  f00a0003          AND      r0,r10,#3
000436  b138              CBZ      r0,|L1.1096|
000438  2801              CMP      r0,#1
00043a  d006              BEQ      |L1.1098|
00043c  2802              CMP      r0,#2
00043e  d106              BNE      |L1.1102|
000440  e004              B        |L1.1100|
000442  0000              DCW      0x0000
                  |L1.1092|
                          DCD      GUI_Context
                  |L1.1096|
;;;300        case 0:
;;;301          goto WriteTBit0;
000448  e04c              B        |L1.1252|
                  |L1.1098|
;;;302        case 1:
;;;303          goto WriteTBit1;
00044a  e05a              B        |L1.1282|
                  |L1.1100|
;;;304        case 2:
;;;305          goto WriteTBit2;
00044c  e06c              B        |L1.1320|
                  |L1.1102|
;;;306        default:
;;;307          goto WriteTBit3;
00044e  e07d              B        |L1.1356|
                  |L1.1104|
;;;308        } else switch (Diff&3) {
000450  f00a0003          AND      r0,r10,#3
000454  b120              CBZ      r0,|L1.1120|
000456  2801              CMP      r0,#1
000458  d003              BEQ      |L1.1122|
00045a  2802              CMP      r0,#2
00045c  d103              BNE      |L1.1126|
00045e  e001              B        |L1.1124|
                  |L1.1120|
;;;309        case 0:
;;;310          goto WriteBit0;
000460  e002              B        |L1.1128|
                  |L1.1122|
;;;311        case 1:
;;;312          goto WriteBit1;
000462  e00e              B        |L1.1154|
                  |L1.1124|
;;;313        case 2:
;;;314          goto WriteBit2;
000464  e01c              B        |L1.1184|
                  |L1.1126|
;;;315        default:
;;;316          goto WriteBit3;
000466  e02a              B        |L1.1214|
                  |L1.1128|
;;;317        }
;;;318      /*
;;;319              Write without transparency
;;;320      */
;;;321      WriteBit0:
;;;322        TFT_DrawPoint(x+0, y, *(pTrans+(pixels>>6)));
000468  11ab              ASRS     r3,r5,#6
00046a  f8382013          LDRH     r2,[r8,r3,LSL #1]
00046e  b2b1              UXTH     r1,r6
000470  b2a0              UXTH     r0,r4
000472  f7fffffe          BL       TFT_DrawPoint
;;;323        if (!--xsize)
000476  1e78              SUBS     r0,r7,#1
000478  0007              MOVS     r7,r0
00047a  d101              BNE      |L1.1152|
                  |L1.1148|
;;;324          return;
;;;325      WriteBit1:
;;;326        TFT_DrawPoint(x+1, y, *(pTrans+(3&(pixels>>4))));
;;;327        if (!--xsize)
;;;328          return;
;;;329      WriteBit2:
;;;330        TFT_DrawPoint(x+2, y, *(pTrans+(3&(pixels>>2))));
;;;331        if (!--xsize)
;;;332          return;
;;;333      WriteBit3:
;;;334        TFT_DrawPoint(x+3, y, *(pTrans+(3&(pixels))));
;;;335        if (!--xsize)
;;;336          return;
;;;337        pixels = *(++p);
;;;338        x+=4;
;;;339        goto WriteBit0;
;;;340      /*
;;;341              Write with transparency
;;;342      */
;;;343      WriteTBit0:
;;;344        if (pixels&(3<<6))
;;;345          TFT_DrawPoint(x+0, y, *(pTrans+(pixels>>6)));
;;;346        if (!--xsize)
;;;347          return;
;;;348      WriteTBit1:
;;;349        if (pixels&(3<<4))
;;;350          TFT_DrawPoint(x+1, y, *(pTrans+(3&(pixels>>4))));
;;;351        if (!--xsize)
;;;352          return;
;;;353      WriteTBit2:
;;;354        if (pixels&(3<<2))
;;;355          TFT_DrawPoint(x+2, y, *(pTrans+(3&(pixels>>2))));
;;;356        if (!--xsize)
;;;357          return;
;;;358      WriteTBit3:
;;;359        if (pixels&(3<<0))
;;;360          TFT_DrawPoint(x+3, y, *(pTrans+(3&(pixels))));
;;;361        if (!--xsize)
;;;362          return;
;;;363        pixels = *(++p);
;;;364        x+=4;
;;;365        goto WriteTBit0;
;;;366      } else { 
;;;367        /* 
;;;368          without palette 
;;;369        */
;;;370        if (GUI_Context.DrawMode & LCD_DRAWMODE_TRANS) switch (Diff&3) {
;;;371        case 0:
;;;372          goto WriteDDPTBit0;
;;;373        case 1:
;;;374          goto WriteDDPTBit1;
;;;375        case 2:
;;;376          goto WriteDDPTBit2;
;;;377        default:
;;;378          goto WriteDDPTBit3;
;;;379        } else switch (Diff&3) {
;;;380        case 0:
;;;381          goto WriteDDPBit0;
;;;382        case 1:
;;;383          goto WriteDDPBit1;
;;;384        case 2:
;;;385          goto WriteDDPBit2;
;;;386        default:
;;;387          goto WriteDDPBit3;
;;;388        }
;;;389      /*
;;;390              Write without transparency
;;;391      */
;;;392      WriteDDPBit0:
;;;393        TFT_DrawPoint(x+0, y, (pixels>>6));
;;;394        if (!--xsize)
;;;395          return;
;;;396      WriteDDPBit1:
;;;397        TFT_DrawPoint(x+1, y, (3&(pixels>>4)));
;;;398        if (!--xsize)
;;;399          return;
;;;400      WriteDDPBit2:
;;;401        TFT_DrawPoint(x+2, y, (3&(pixels>>2)));
;;;402        if (!--xsize)
;;;403          return;
;;;404      WriteDDPBit3:
;;;405        TFT_DrawPoint(x+3, y, (3&(pixels)));
;;;406        if (!--xsize)
;;;407          return;
;;;408        pixels = *(++p);
;;;409        x+=4;
;;;410        goto WriteDDPBit0;
;;;411      /*
;;;412              Write with transparency
;;;413      */
;;;414      WriteDDPTBit0:
;;;415        if (pixels&(3<<6))
;;;416          TFT_DrawPoint(x+0, y, (pixels>>6));
;;;417        if (!--xsize)
;;;418          return;
;;;419      WriteDDPTBit1:
;;;420        if (pixels&(3<<4))
;;;421          TFT_DrawPoint(x+1, y, (3&(pixels>>4)));
;;;422        if (!--xsize)
;;;423          return;
;;;424      WriteDDPTBit2:
;;;425        if (pixels&(3<<2))
;;;426          TFT_DrawPoint(x+2, y, (3&(pixels>>2)));
;;;427        if (!--xsize)
;;;428          return;
;;;429      WriteDDPTBit3:
;;;430        if (pixels&(3<<0))
;;;431          TFT_DrawPoint(x+3, y, (3&(pixels)));
;;;432        if (!--xsize)
;;;433          return;
;;;434        pixels = *(++p);
;;;435        x+=4;
;;;436        goto WriteDDPTBit0;
;;;437      }
;;;438    }
00047c  e8bd87f0          POP      {r4-r10,pc}
                  |L1.1152|
000480  bf00              NOP                            ;325
                  |L1.1154|
000482  2303              MOVS     r3,#3                 ;326
000484  ea031325          AND      r3,r3,r5,ASR #4       ;326
000488  f8382013          LDRH     r2,[r8,r3,LSL #1]     ;326
00048c  b2b1              UXTH     r1,r6                 ;326
00048e  1c63              ADDS     r3,r4,#1              ;326
000490  b298              UXTH     r0,r3                 ;326
000492  f7fffffe          BL       TFT_DrawPoint
000496  1e78              SUBS     r0,r7,#1              ;327
000498  0007              MOVS     r7,r0                 ;327
00049a  d100              BNE      |L1.1182|
00049c  e7ee              B        |L1.1148|
                  |L1.1182|
00049e  bf00              NOP                            ;329
                  |L1.1184|
0004a0  2303              MOVS     r3,#3                 ;330
0004a2  ea0303a5          AND      r3,r3,r5,ASR #2       ;330
0004a6  f8382013          LDRH     r2,[r8,r3,LSL #1]     ;330
0004aa  b2b1              UXTH     r1,r6                 ;330
0004ac  1ca3              ADDS     r3,r4,#2              ;330
0004ae  b298              UXTH     r0,r3                 ;330
0004b0  f7fffffe          BL       TFT_DrawPoint
0004b4  1e78              SUBS     r0,r7,#1              ;331
0004b6  0007              MOVS     r7,r0                 ;331
0004b8  d100              BNE      |L1.1212|
0004ba  e7df              B        |L1.1148|
                  |L1.1212|
0004bc  bf00              NOP                            ;333
                  |L1.1214|
0004be  f0050303          AND      r3,r5,#3              ;334
0004c2  f8382013          LDRH     r2,[r8,r3,LSL #1]     ;334
0004c6  b2b1              UXTH     r1,r6                 ;334
0004c8  1ce3              ADDS     r3,r4,#3              ;334
0004ca  b298              UXTH     r0,r3                 ;334
0004cc  f7fffffe          BL       TFT_DrawPoint
0004d0  1e78              SUBS     r0,r7,#1              ;335
0004d2  0007              MOVS     r7,r0                 ;335
0004d4  d100              BNE      |L1.1240|
0004d6  e7d1              B        |L1.1148|
                  |L1.1240|
0004d8  f1090001          ADD      r0,r9,#1              ;337
0004dc  4681              MOV      r9,r0                 ;337
0004de  7805              LDRB     r5,[r0,#0]            ;337
0004e0  1d24              ADDS     r4,r4,#4              ;338
0004e2  e7c1              B        |L1.1128|
                  |L1.1252|
0004e4  f00500c0          AND      r0,r5,#0xc0           ;344
0004e8  b130              CBZ      r0,|L1.1272|
0004ea  11ab              ASRS     r3,r5,#6              ;345
0004ec  f8382013          LDRH     r2,[r8,r3,LSL #1]     ;345
0004f0  b2b1              UXTH     r1,r6                 ;345
0004f2  b2a0              UXTH     r0,r4                 ;345
0004f4  f7fffffe          BL       TFT_DrawPoint
                  |L1.1272|
0004f8  1e78              SUBS     r0,r7,#1              ;346
0004fa  0007              MOVS     r7,r0                 ;346
0004fc  d100              BNE      |L1.1280|
0004fe  e7bd              B        |L1.1148|
                  |L1.1280|
000500  bf00              NOP                            ;348
                  |L1.1282|
000502  f0050030          AND      r0,r5,#0x30           ;349
000506  b148              CBZ      r0,|L1.1308|
000508  2303              MOVS     r3,#3                 ;350
00050a  ea031325          AND      r3,r3,r5,ASR #4       ;350
00050e  f8382013          LDRH     r2,[r8,r3,LSL #1]     ;350
000512  b2b1              UXTH     r1,r6                 ;350
000514  1c63              ADDS     r3,r4,#1              ;350
000516  b298              UXTH     r0,r3                 ;350
000518  f7fffffe          BL       TFT_DrawPoint
                  |L1.1308|
00051c  1e78              SUBS     r0,r7,#1              ;351
00051e  0007              MOVS     r7,r0                 ;351
000520  d101              BNE      |L1.1318|
000522  e7ab              B        |L1.1148|
                  |L1.1316|
000524  e028              B        |L1.1400|
                  |L1.1318|
000526  bf00              NOP                            ;353
                  |L1.1320|
000528  f005000c          AND      r0,r5,#0xc            ;354
00052c  b148              CBZ      r0,|L1.1346|
00052e  2303              MOVS     r3,#3                 ;355
000530  ea0303a5          AND      r3,r3,r5,ASR #2       ;355
000534  f8382013          LDRH     r2,[r8,r3,LSL #1]     ;355
000538  b2b1              UXTH     r1,r6                 ;355
00053a  1ca3              ADDS     r3,r4,#2              ;355
00053c  b298              UXTH     r0,r3                 ;355
00053e  f7fffffe          BL       TFT_DrawPoint
                  |L1.1346|
000542  1e78              SUBS     r0,r7,#1              ;356
000544  0007              MOVS     r7,r0                 ;356
000546  d100              BNE      |L1.1354|
000548  e798              B        |L1.1148|
                  |L1.1354|
00054a  bf00              NOP                            ;358
                  |L1.1356|
00054c  f0050003          AND      r0,r5,#3              ;359
000550  b140              CBZ      r0,|L1.1380|
000552  f0050303          AND      r3,r5,#3              ;360
000556  f8382013          LDRH     r2,[r8,r3,LSL #1]     ;360
00055a  b2b1              UXTH     r1,r6                 ;360
00055c  1ce3              ADDS     r3,r4,#3              ;360
00055e  b298              UXTH     r0,r3                 ;360
000560  f7fffffe          BL       TFT_DrawPoint
                  |L1.1380|
000564  1e78              SUBS     r0,r7,#1              ;361
000566  0007              MOVS     r7,r0                 ;361
000568  d100              BNE      |L1.1388|
00056a  e787              B        |L1.1148|
                  |L1.1388|
00056c  f1090001          ADD      r0,r9,#1              ;363
000570  4681              MOV      r9,r0                 ;363
000572  7805              LDRB     r5,[r0,#0]            ;363
000574  1d24              ADDS     r4,r4,#4              ;364
000576  e7b5              B        |L1.1252|
                  |L1.1400|
000578  48f7              LDR      r0,|L1.2392|
00057a  7c00              LDRB     r0,[r0,#0x10]         ;370  ; GUI_Context
00057c  f0000002          AND      r0,r0,#2              ;370
000580  b158              CBZ      r0,|L1.1434|
000582  f00a0003          AND      r0,r10,#3             ;370
000586  b120              CBZ      r0,|L1.1426|
000588  2801              CMP      r0,#1                 ;370
00058a  d003              BEQ      |L1.1428|
00058c  2802              CMP      r0,#2                 ;370
00058e  d103              BNE      |L1.1432|
000590  e001              B        |L1.1430|
                  |L1.1426|
000592  e043              B        |L1.1564|
                  |L1.1428|
000594  e04f              B        |L1.1590|
                  |L1.1430|
000596  e05e              B        |L1.1622|
                  |L1.1432|
000598  e06d              B        |L1.1654|
                  |L1.1434|
00059a  f00a0003          AND      r0,r10,#3             ;379
00059e  b120              CBZ      r0,|L1.1450|
0005a0  2801              CMP      r0,#1                 ;379
0005a2  d003              BEQ      |L1.1452|
0005a4  2802              CMP      r0,#2                 ;379
0005a6  d103              BNE      |L1.1456|
0005a8  e001              B        |L1.1454|
                  |L1.1450|
0005aa  e002              B        |L1.1458|
                  |L1.1452|
0005ac  e00b              B        |L1.1478|
                  |L1.1454|
0005ae  e017              B        |L1.1504|
                  |L1.1456|
0005b0  e023              B        |L1.1530|
                  |L1.1458|
0005b2  11aa              ASRS     r2,r5,#6              ;393
0005b4  b2b1              UXTH     r1,r6                 ;393
0005b6  b2a0              UXTH     r0,r4                 ;393
0005b8  f7fffffe          BL       TFT_DrawPoint
0005bc  1e78              SUBS     r0,r7,#1              ;394
0005be  0007              MOVS     r7,r0                 ;394
0005c0  d100              BNE      |L1.1476|
0005c2  e75b              B        |L1.1148|
                  |L1.1476|
0005c4  bf00              NOP                            ;396
                  |L1.1478|
0005c6  2303              MOVS     r3,#3                 ;397
0005c8  ea031225          AND      r2,r3,r5,ASR #4       ;397
0005cc  b2b1              UXTH     r1,r6                 ;397
0005ce  1c63              ADDS     r3,r4,#1              ;397
0005d0  b298              UXTH     r0,r3                 ;397
0005d2  f7fffffe          BL       TFT_DrawPoint
0005d6  1e78              SUBS     r0,r7,#1              ;398
0005d8  0007              MOVS     r7,r0                 ;398
0005da  d100              BNE      |L1.1502|
0005dc  e74e              B        |L1.1148|
                  |L1.1502|
0005de  bf00              NOP                            ;400
                  |L1.1504|
0005e0  2303              MOVS     r3,#3                 ;401
0005e2  ea0302a5          AND      r2,r3,r5,ASR #2       ;401
0005e6  b2b1              UXTH     r1,r6                 ;401
0005e8  1ca3              ADDS     r3,r4,#2              ;401
0005ea  b298              UXTH     r0,r3                 ;401
0005ec  f7fffffe          BL       TFT_DrawPoint
0005f0  1e78              SUBS     r0,r7,#1              ;402
0005f2  0007              MOVS     r7,r0                 ;402
0005f4  d100              BNE      |L1.1528|
0005f6  e741              B        |L1.1148|
                  |L1.1528|
0005f8  bf00              NOP                            ;404
                  |L1.1530|
0005fa  f0050203          AND      r2,r5,#3              ;405
0005fe  b2b1              UXTH     r1,r6                 ;405
000600  1ce3              ADDS     r3,r4,#3              ;405
000602  b298              UXTH     r0,r3                 ;405
000604  f7fffffe          BL       TFT_DrawPoint
000608  1e78              SUBS     r0,r7,#1              ;406
00060a  0007              MOVS     r7,r0                 ;406
00060c  d100              BNE      |L1.1552|
00060e  e735              B        |L1.1148|
                  |L1.1552|
000610  f1090001          ADD      r0,r9,#1              ;408
000614  4681              MOV      r9,r0                 ;408
000616  7805              LDRB     r5,[r0,#0]            ;408
000618  1d24              ADDS     r4,r4,#4              ;409
00061a  e7ca              B        |L1.1458|
                  |L1.1564|
00061c  f00500c0          AND      r0,r5,#0xc0           ;415
000620  b120              CBZ      r0,|L1.1580|
000622  11aa              ASRS     r2,r5,#6              ;416
000624  b2b1              UXTH     r1,r6                 ;416
000626  b2a0              UXTH     r0,r4                 ;416
000628  f7fffffe          BL       TFT_DrawPoint
                  |L1.1580|
00062c  1e78              SUBS     r0,r7,#1              ;417
00062e  0007              MOVS     r7,r0                 ;417
000630  d100              BNE      |L1.1588|
000632  e723              B        |L1.1148|
                  |L1.1588|
000634  bf00              NOP                            ;419
                  |L1.1590|
000636  f0050030          AND      r0,r5,#0x30           ;420
00063a  b138              CBZ      r0,|L1.1612|
00063c  2303              MOVS     r3,#3                 ;421
00063e  ea031225          AND      r2,r3,r5,ASR #4       ;421
000642  b2b1              UXTH     r1,r6                 ;421
000644  1c63              ADDS     r3,r4,#1              ;421
000646  b298              UXTH     r0,r3                 ;421
000648  f7fffffe          BL       TFT_DrawPoint
                  |L1.1612|
00064c  1e78              SUBS     r0,r7,#1              ;422
00064e  0007              MOVS     r7,r0                 ;422
000650  d100              BNE      |L1.1620|
000652  e713              B        |L1.1148|
                  |L1.1620|
000654  bf00              NOP                            ;424
                  |L1.1622|
000656  f005000c          AND      r0,r5,#0xc            ;425
00065a  b138              CBZ      r0,|L1.1644|
00065c  2303              MOVS     r3,#3                 ;426
00065e  ea0302a5          AND      r2,r3,r5,ASR #2       ;426
000662  b2b1              UXTH     r1,r6                 ;426
000664  1ca3              ADDS     r3,r4,#2              ;426
000666  b298              UXTH     r0,r3                 ;426
000668  f7fffffe          BL       TFT_DrawPoint
                  |L1.1644|
00066c  1e78              SUBS     r0,r7,#1              ;427
00066e  0007              MOVS     r7,r0                 ;427
000670  d100              BNE      |L1.1652|
000672  e703              B        |L1.1148|
                  |L1.1652|
000674  bf00              NOP                            ;429
                  |L1.1654|
000676  f0050003          AND      r0,r5,#3              ;430
00067a  b130              CBZ      r0,|L1.1674|
00067c  f0050203          AND      r2,r5,#3              ;431
000680  b2b1              UXTH     r1,r6                 ;431
000682  1ce3              ADDS     r3,r4,#3              ;431
000684  b298              UXTH     r0,r3                 ;431
000686  f7fffffe          BL       TFT_DrawPoint
                  |L1.1674|
00068a  1e78              SUBS     r0,r7,#1              ;432
00068c  0007              MOVS     r7,r0                 ;432
00068e  d100              BNE      |L1.1682|
000690  e6f4              B        |L1.1148|
                  |L1.1682|
000692  f1090001          ADD      r0,r9,#1              ;434
000696  4681              MOV      r9,r0                 ;434
000698  7805              LDRB     r5,[r0,#0]            ;434
00069a  1d24              ADDS     r4,r4,#4              ;435
00069c  e7be              B        |L1.1564|
;;;439    
                          ENDP

                  DrawBitLine4BPP PROC
;;;440    static void  DrawBitLine4BPP(int x, int y, U8 const*p, int Diff, int xsize, const LCD_PIXELINDEX*pTrans)
00069e  e92d47f0          PUSH     {r4-r10,lr}
;;;441    {
0006a2  4604              MOV      r4,r0
0006a4  460e              MOV      r6,r1
0006a6  4690              MOV      r8,r2
0006a8  4699              MOV      r9,r3
0006aa  e9dd7a08          LDRD     r7,r10,[sp,#0x20]
;;;442      LCD_PIXELINDEX pixels;
;;;443    
;;;444      pixels = *p;
0006ae  f8985000          LDRB     r5,[r8,#0]
;;;445      if (pTrans)
0006b2  f1ba0f00          CMP      r10,#0
0006b6  d052              BEQ      |L1.1886|
;;;446      {
;;;447        if (GUI_Context.DrawMode & LCD_DRAWMODE_TRANS)
0006b8  48a7              LDR      r0,|L1.2392|
0006ba  7c00              LDRB     r0,[r0,#0x10]  ; GUI_Context
0006bc  f0000002          AND      r0,r0,#2
0006c0  b120              CBZ      r0,|L1.1740|
;;;448        {
;;;449          if ((Diff&1) ==0)
0006c2  f0090001          AND      r0,r9,#1
0006c6  b900              CBNZ     r0,|L1.1738|
;;;450            goto WriteTBit0;
0006c8  e025              B        |L1.1814|
                  |L1.1738|
;;;451            goto WriteTBit1;
0006ca  e032              B        |L1.1842|
                  |L1.1740|
;;;452        }
;;;453        else
;;;454        {
;;;455          if ((Diff&1) ==0)
0006cc  f0090001          AND      r0,r9,#1
0006d0  b900              CBNZ     r0,|L1.1748|
;;;456            goto WriteBit0;
0006d2  e000              B        |L1.1750|
                  |L1.1748|
;;;457            goto WriteBit1;
0006d4  e00c              B        |L1.1776|
                  |L1.1750|
;;;458        }
;;;459    
;;;460      WriteBit0:
;;;461        TFT_DrawPoint(x+0, y, *(pTrans+(pixels>>4)));
0006d6  112b              ASRS     r3,r5,#4
0006d8  f83a2013          LDRH     r2,[r10,r3,LSL #1]
0006dc  b2b1              UXTH     r1,r6
0006de  b2a0              UXTH     r0,r4
0006e0  f7fffffe          BL       TFT_DrawPoint
;;;462        if (!--xsize)
0006e4  1e78              SUBS     r0,r7,#1
0006e6  0007              MOVS     r7,r0
0006e8  d101              BNE      |L1.1774|
                  |L1.1770|
;;;463          return;
;;;464      WriteBit1:
;;;465        TFT_DrawPoint(x+1, y, *(pTrans+(pixels&0xf)));
;;;466        if (!--xsize)
;;;467          return;
;;;468        x+=2;
;;;469        pixels = *(++p);
;;;470        goto WriteBit0;
;;;471      /*
;;;472              Write with transparency
;;;473      */
;;;474      WriteTBit0:
;;;475        if (pixels>>4)
;;;476          TFT_DrawPoint(x+0, y, *(pTrans+(pixels>>4)));
;;;477        if (!--xsize)
;;;478          return;
;;;479      WriteTBit1:
;;;480        if (pixels&0xf)
;;;481          TFT_DrawPoint(x+1, y, *(pTrans+(pixels&0xf)));
;;;482        if (!--xsize)
;;;483          return;
;;;484        x+=2;
;;;485        pixels = *(++p);
;;;486        goto WriteTBit0;
;;;487      } else {
;;;488        /*
;;;489          without palette
;;;490        */
;;;491        if (GUI_Context.DrawMode & LCD_DRAWMODE_TRANS) {
;;;492          if ((Diff&1) ==0)
;;;493            goto WriteDDPTBit0;
;;;494          goto WriteDDPTBit1;
;;;495        } else {
;;;496          if ((Diff&1) ==0)
;;;497            goto WriteDDPBit0;
;;;498          goto WriteDDPBit1;
;;;499        }
;;;500      /*
;;;501              Write without transparency
;;;502      */
;;;503      WriteDDPBit0:
;;;504        TFT_DrawPoint(x+0, y, (pixels>>4));
;;;505        if (!--xsize)
;;;506          return;
;;;507      WriteDDPBit1:
;;;508        TFT_DrawPoint(x+1, y, (pixels&0xf));
;;;509        if (!--xsize)
;;;510          return;
;;;511        x+=2;
;;;512        pixels = *(++p);
;;;513        goto WriteDDPBit0;
;;;514      /*
;;;515              Write with transparency
;;;516      */
;;;517      WriteDDPTBit0:
;;;518        if (pixels>>4)
;;;519          TFT_DrawPoint(x+0, y, (pixels>>4));
;;;520        if (!--xsize)
;;;521          return;
;;;522      WriteDDPTBit1:
;;;523        if (pixels&0xf)
;;;524          TFT_DrawPoint(x+1, y, (pixels&0xf));
;;;525        if (!--xsize)
;;;526          return;
;;;527        x+=2;
;;;528        pixels = *(++p);
;;;529        goto WriteDDPTBit0;
;;;530      }
;;;531    }
0006ea  e8bd87f0          POP      {r4-r10,pc}
                  |L1.1774|
0006ee  bf00              NOP                            ;464
                  |L1.1776|
0006f0  f005030f          AND      r3,r5,#0xf            ;465
0006f4  f83a2013          LDRH     r2,[r10,r3,LSL #1]    ;465
0006f8  b2b1              UXTH     r1,r6                 ;465
0006fa  1c63              ADDS     r3,r4,#1              ;465
0006fc  b298              UXTH     r0,r3                 ;465
0006fe  f7fffffe          BL       TFT_DrawPoint
000702  1e78              SUBS     r0,r7,#1              ;466
000704  0007              MOVS     r7,r0                 ;466
000706  d100              BNE      |L1.1802|
000708  e7ef              B        |L1.1770|
                  |L1.1802|
00070a  1ca4              ADDS     r4,r4,#2              ;468
00070c  f1080001          ADD      r0,r8,#1              ;469
000710  4680              MOV      r8,r0                 ;469
000712  7805              LDRB     r5,[r0,#0]            ;469
000714  e7df              B        |L1.1750|
                  |L1.1814|
000716  1128              ASRS     r0,r5,#4              ;475
000718  b130              CBZ      r0,|L1.1832|
00071a  112b              ASRS     r3,r5,#4              ;476
00071c  f83a2013          LDRH     r2,[r10,r3,LSL #1]    ;476
000720  b2b1              UXTH     r1,r6                 ;476
000722  b2a0              UXTH     r0,r4                 ;476
000724  f7fffffe          BL       TFT_DrawPoint
                  |L1.1832|
000728  1e78              SUBS     r0,r7,#1              ;477
00072a  0007              MOVS     r7,r0                 ;477
00072c  d100              BNE      |L1.1840|
00072e  e7dc              B        |L1.1770|
                  |L1.1840|
000730  bf00              NOP                            ;479
                  |L1.1842|
000732  f005000f          AND      r0,r5,#0xf            ;480
000736  b140              CBZ      r0,|L1.1866|
000738  f005030f          AND      r3,r5,#0xf            ;481
00073c  f83a2013          LDRH     r2,[r10,r3,LSL #1]    ;481
000740  b2b1              UXTH     r1,r6                 ;481
000742  1c63              ADDS     r3,r4,#1              ;481
000744  b298              UXTH     r0,r3                 ;481
000746  f7fffffe          BL       TFT_DrawPoint
                  |L1.1866|
00074a  1e78              SUBS     r0,r7,#1              ;482
00074c  0007              MOVS     r7,r0                 ;482
00074e  d100              BNE      |L1.1874|
000750  e7cb              B        |L1.1770|
                  |L1.1874|
000752  1ca4              ADDS     r4,r4,#2              ;484
000754  f1080001          ADD      r0,r8,#1              ;485
000758  4680              MOV      r8,r0                 ;485
00075a  7805              LDRB     r5,[r0,#0]            ;485
00075c  e7db              B        |L1.1814|
                  |L1.1886|
00075e  487e              LDR      r0,|L1.2392|
000760  7c00              LDRB     r0,[r0,#0x10]         ;491  ; GUI_Context
000762  f0000002          AND      r0,r0,#2              ;491
000766  b120              CBZ      r0,|L1.1906|
000768  f0090001          AND      r0,r9,#1              ;492
00076c  b900              CBNZ     r0,|L1.1904|
00076e  e020              B        |L1.1970|
                  |L1.1904|
000770  e02b              B        |L1.1994|
                  |L1.1906|
000772  f0090001          AND      r0,r9,#1              ;496
000776  b900              CBNZ     r0,|L1.1914|
000778  e000              B        |L1.1916|
                  |L1.1914|
00077a  e009              B        |L1.1936|
                  |L1.1916|
00077c  112a              ASRS     r2,r5,#4              ;504
00077e  b2b1              UXTH     r1,r6                 ;504
000780  b2a0              UXTH     r0,r4                 ;504
000782  f7fffffe          BL       TFT_DrawPoint
000786  1e78              SUBS     r0,r7,#1              ;505
000788  0007              MOVS     r7,r0                 ;505
00078a  d100              BNE      |L1.1934|
00078c  e7ad              B        |L1.1770|
                  |L1.1934|
00078e  bf00              NOP                            ;507
                  |L1.1936|
000790  f005020f          AND      r2,r5,#0xf            ;508
000794  b2b1              UXTH     r1,r6                 ;508
000796  1c63              ADDS     r3,r4,#1              ;508
000798  b298              UXTH     r0,r3                 ;508
00079a  f7fffffe          BL       TFT_DrawPoint
00079e  1e78              SUBS     r0,r7,#1              ;509
0007a0  0007              MOVS     r7,r0                 ;509
0007a2  d100              BNE      |L1.1958|
0007a4  e7a1              B        |L1.1770|
                  |L1.1958|
0007a6  1ca4              ADDS     r4,r4,#2              ;511
0007a8  f1080001          ADD      r0,r8,#1              ;512
0007ac  4680              MOV      r8,r0                 ;512
0007ae  7805              LDRB     r5,[r0,#0]            ;512
0007b0  e7e4              B        |L1.1916|
                  |L1.1970|
0007b2  1128              ASRS     r0,r5,#4              ;518
0007b4  b120              CBZ      r0,|L1.1984|
0007b6  112a              ASRS     r2,r5,#4              ;519
0007b8  b2b1              UXTH     r1,r6                 ;519
0007ba  b2a0              UXTH     r0,r4                 ;519
0007bc  f7fffffe          BL       TFT_DrawPoint
                  |L1.1984|
0007c0  1e78              SUBS     r0,r7,#1              ;520
0007c2  0007              MOVS     r7,r0                 ;520
0007c4  d100              BNE      |L1.1992|
0007c6  e790              B        |L1.1770|
                  |L1.1992|
0007c8  bf00              NOP                            ;522
                  |L1.1994|
0007ca  f005000f          AND      r0,r5,#0xf            ;523
0007ce  b130              CBZ      r0,|L1.2014|
0007d0  f005020f          AND      r2,r5,#0xf            ;524
0007d4  b2b1              UXTH     r1,r6                 ;524
0007d6  1c63              ADDS     r3,r4,#1              ;524
0007d8  b298              UXTH     r0,r3                 ;524
0007da  f7fffffe          BL       TFT_DrawPoint
                  |L1.2014|
0007de  1e78              SUBS     r0,r7,#1              ;525
0007e0  0007              MOVS     r7,r0                 ;525
0007e2  d100              BNE      |L1.2022|
0007e4  e781              B        |L1.1770|
                  |L1.2022|
0007e6  1ca4              ADDS     r4,r4,#2              ;527
0007e8  f1080001          ADD      r0,r8,#1              ;528
0007ec  4680              MOV      r8,r0                 ;528
0007ee  7805              LDRB     r5,[r0,#0]            ;528
0007f0  e7df              B        |L1.1970|
;;;532    
                          ENDP

                  DrawBitLine8BPP PROC
;;;533    void DrawBitLine8BPP(int x, int y, U8 const*p, int xsize, const LCD_PIXELINDEX*pTrans) {
0007f2  e92d47f0          PUSH     {r4-r10,lr}
0007f6  4604              MOV      r4,r0
0007f8  4688              MOV      r8,r1
0007fa  4615              MOV      r5,r2
0007fc  461e              MOV      r6,r3
0007fe  f8dd9020          LDR      r9,[sp,#0x20]
;;;534      LCD_PIXELINDEX pixel;
;;;535      if ((GUI_Context.DrawMode & LCD_DRAWMODE_TRANS)==0) {
000802  4855              LDR      r0,|L1.2392|
000804  7c00              LDRB     r0,[r0,#0x10]  ; GUI_Context
000806  f0000002          AND      r0,r0,#2
00080a  b9f0              CBNZ     r0,|L1.2122|
;;;536        if (pTrans) {
00080c  f1b90f00          CMP      r9,#0
000810  d00e              BEQ      |L1.2096|
;;;537          for (;xsize > 0; xsize--,x++,p++) {
000812  e00a              B        |L1.2090|
                  |L1.2068|
;;;538            pixel = *p;
000814  782f              LDRB     r7,[r5,#0]
;;;539            TFT_DrawPoint(x, y, *(pTrans+pixel));
000816  f8392017          LDRH     r2,[r9,r7,LSL #1]
00081a  fa1ff188          UXTH     r1,r8
00081e  b2a0              UXTH     r0,r4
000820  f7fffffe          BL       TFT_DrawPoint
000824  1e76              SUBS     r6,r6,#1              ;537
000826  1c64              ADDS     r4,r4,#1              ;537
000828  1c6d              ADDS     r5,r5,#1              ;537
                  |L1.2090|
00082a  2e00              CMP      r6,#0                 ;537
00082c  dcf2              BGT      |L1.2068|
00082e  e02d              B        |L1.2188|
                  |L1.2096|
;;;540          }
;;;541        } else {
;;;542          for (;xsize > 0; xsize--,x++,p++) {
000830  e008              B        |L1.2116|
                  |L1.2098|
;;;543            TFT_DrawPoint(x, y, *p);
000832  782a              LDRB     r2,[r5,#0]
000834  fa1ff188          UXTH     r1,r8
000838  b2a0              UXTH     r0,r4
00083a  f7fffffe          BL       TFT_DrawPoint
00083e  1e76              SUBS     r6,r6,#1              ;542
000840  1c64              ADDS     r4,r4,#1              ;542
000842  1c6d              ADDS     r5,r5,#1              ;542
                  |L1.2116|
000844  2e00              CMP      r6,#0                 ;542
000846  dcf4              BGT      |L1.2098|
000848  e020              B        |L1.2188|
                  |L1.2122|
;;;544          }
;;;545        }
;;;546      } else {   /* Handle transparent bitmap */
;;;547        if (pTrans) {
00084a  f1b90f00          CMP      r9,#0
00084e  d00f              BEQ      |L1.2160|
;;;548          for (; xsize > 0; xsize--, x++, p++) {
000850  e00b              B        |L1.2154|
                  |L1.2130|
;;;549            pixel = *p;
000852  782f              LDRB     r7,[r5,#0]
;;;550            if (pixel) {
000854  b137              CBZ      r7,|L1.2148|
;;;551              TFT_DrawPoint(x+0, y, *(pTrans+pixel));
000856  f8392017          LDRH     r2,[r9,r7,LSL #1]
00085a  fa1ff188          UXTH     r1,r8
00085e  b2a0              UXTH     r0,r4
000860  f7fffffe          BL       TFT_DrawPoint
                  |L1.2148|
000864  1e76              SUBS     r6,r6,#1              ;548
000866  1c64              ADDS     r4,r4,#1              ;548
000868  1c6d              ADDS     r5,r5,#1              ;548
                  |L1.2154|
00086a  2e00              CMP      r6,#0                 ;548
00086c  dcf1              BGT      |L1.2130|
00086e  e00d              B        |L1.2188|
                  |L1.2160|
;;;552            }
;;;553          }
;;;554        } else {
;;;555          for (; xsize > 0; xsize--, x++, p++) {
000870  e00a              B        |L1.2184|
                  |L1.2162|
;;;556            pixel = *p;
000872  782f              LDRB     r7,[r5,#0]
;;;557            if (pixel) {
000874  b12f              CBZ      r7,|L1.2178|
;;;558              TFT_DrawPoint(x+0, y, pixel);
000876  fa1ff188          UXTH     r1,r8
00087a  b2a0              UXTH     r0,r4
00087c  463a              MOV      r2,r7
00087e  f7fffffe          BL       TFT_DrawPoint
                  |L1.2178|
000882  1e76              SUBS     r6,r6,#1              ;555
000884  1c64              ADDS     r4,r4,#1              ;555
000886  1c6d              ADDS     r5,r5,#1              ;555
                  |L1.2184|
000888  2e00              CMP      r6,#0                 ;555
00088a  dcf2              BGT      |L1.2162|
                  |L1.2188|
;;;559            }
;;;560          }
;;;561        }
;;;562      }
;;;563    }
00088c  e8bd87f0          POP      {r4-r10,pc}
;;;564    
                          ENDP

                  DrawBitLine16BPP PROC
;;;565    void DrawBitLine16BPP(int x, int y, U16 const*p, int xsize)
000890  e92d41f0          PUSH     {r4-r8,lr}
;;;566    {
000894  4604              MOV      r4,r0
000896  460f              MOV      r7,r1
000898  4615              MOV      r5,r2
00089a  461e              MOV      r6,r3
;;;567      LCD_PIXELINDEX Index;
;;;568    
;;;569      if ((GUI_Context.DrawMode & LCD_DRAWMODE_TRANS)==0)
00089c  482e              LDR      r0,|L1.2392|
00089e  7c00              LDRB     r0,[r0,#0x10]  ; GUI_Context
0008a0  f0000002          AND      r0,r0,#2
0008a4  b958              CBNZ     r0,|L1.2238|
;;;570      {
;;;571        for (;xsize > 0; xsize--,x++,p++)
0008a6  e007              B        |L1.2232|
                  |L1.2216|
;;;572        {
;;;573          	TFT_DrawPoint(x, y, *p);
0008a8  882a              LDRH     r2,[r5,#0]
0008aa  b2b9              UXTH     r1,r7
0008ac  b2a0              UXTH     r0,r4
0008ae  f7fffffe          BL       TFT_DrawPoint
0008b2  1e76              SUBS     r6,r6,#1              ;571
0008b4  1c64              ADDS     r4,r4,#1              ;571
0008b6  1cad              ADDS     r5,r5,#2              ;571
                  |L1.2232|
0008b8  2e00              CMP      r6,#0                 ;571
0008ba  dcf5              BGT      |L1.2216|
0008bc  e00f              B        |L1.2270|
                  |L1.2238|
;;;574        }
;;;575      }
;;;576      else
;;;577      {   /* Handle transparent bitmap */
;;;578        for (; xsize > 0; xsize--, x++, p++)
0008be  e00c              B        |L1.2266|
                  |L1.2240|
;;;579        {
;;;580          Index = *p;
0008c0  f8b58000          LDRH     r8,[r5,#0]
;;;581          if (Index)
0008c4  f1b80f00          CMP      r8,#0
0008c8  d004              BEQ      |L1.2260|
;;;582          {
;;;583            TFT_DrawPoint(x+0, y, Index);
0008ca  b2b9              UXTH     r1,r7
0008cc  b2a0              UXTH     r0,r4
0008ce  4642              MOV      r2,r8
0008d0  f7fffffe          BL       TFT_DrawPoint
                  |L1.2260|
0008d4  1e76              SUBS     r6,r6,#1              ;578
0008d6  1c64              ADDS     r4,r4,#1              ;578
0008d8  1cad              ADDS     r5,r5,#2              ;578
                  |L1.2266|
0008da  2e00              CMP      r6,#0                 ;578
0008dc  dcf0              BGT      |L1.2240|
                  |L1.2270|
;;;584          }
;;;585        }
;;;586      }
;;;587    }
0008de  e8bd81f0          POP      {r4-r8,pc}
;;;588    
                          ENDP

                  LCD_L0_DrawBitmap PROC
;;;589    void LCD_L0_DrawBitmap   (int x0, int y0,
0008e2  e92d4fff          PUSH     {r0-r11,lr}
;;;590                           int xsize, int ysize,
;;;591                           int BitsPerPixel, 
;;;592                           int BytesPerLine,
;;;593                           const U8* pData, int Diff,
;;;594                           const LCD_PIXELINDEX* pTrans)
;;;595    {
0008e6  b083              SUB      sp,sp,#0xc
0008e8  460d              MOV      r5,r1
0008ea  4690              MOV      r8,r2
0008ec  461e              MOV      r6,r3
0008ee  e9ddb910          LDRD     r11,r9,[sp,#0x40]
0008f2  f8dda050          LDR      r10,[sp,#0x50]
0008f6  9f12              LDR      r7,[sp,#0x48]
;;;596      int i;
;;;597      switch (BitsPerPixel)
0008f8  f1bb0f04          CMP      r11,#4
0008fc  d02e              BEQ      |L1.2396|
0008fe  dc06              BGT      |L1.2318|
000900  f1bb0f01          CMP      r11,#1
000904  d00a              BEQ      |L1.2332|
000906  f1bb0f02          CMP      r11,#2
00090a  d152              BNE      |L1.2482|
00090c  e015              B        |L1.2362|
                  |L1.2318|
00090e  f1bb0f08          CMP      r11,#8
000912  d032              BEQ      |L1.2426|
000914  f1bb0f10          CMP      r11,#0x10
000918  d14b              BNE      |L1.2482|
00091a  e03d              B        |L1.2456|
                  |L1.2332|
;;;598      {
;;;599      case 1:
;;;600        for (i=0; i<ysize; i++)
00091c  2400              MOVS     r4,#0
00091e  e009              B        |L1.2356|
                  |L1.2336|
;;;601        {
;;;602          DrawBitLine1BPP(x0, i+y0, pData, Diff, xsize, pTrans);
000920  1961              ADDS     r1,r4,r5
000922  e9cd8a00          STRD     r8,r10,[sp,#0]
000926  463a              MOV      r2,r7
000928  9b13              LDR      r3,[sp,#0x4c]
00092a  9803              LDR      r0,[sp,#0xc]
00092c  f7fffffe          BL       DrawBitLine1BPP
;;;603          pData += BytesPerLine;
000930  444f              ADD      r7,r7,r9
000932  1c64              ADDS     r4,r4,#1              ;600
                  |L1.2356|
000934  42b4              CMP      r4,r6                 ;600
000936  dbf3              BLT      |L1.2336|
;;;604        }
;;;605        break;
000938  e03b              B        |L1.2482|
                  |L1.2362|
;;;606      case 2:
;;;607        for (i=0; i<ysize; i++)
00093a  2400              MOVS     r4,#0
00093c  e009              B        |L1.2386|
                  |L1.2366|
;;;608        {
;;;609          DrawBitLine2BPP(x0, i+y0, pData, Diff, xsize, pTrans);
00093e  1961              ADDS     r1,r4,r5
000940  e9cd8a00          STRD     r8,r10,[sp,#0]
000944  463a              MOV      r2,r7
000946  9b13              LDR      r3,[sp,#0x4c]
000948  9803              LDR      r0,[sp,#0xc]
00094a  f7fffffe          BL       DrawBitLine2BPP
;;;610          pData += BytesPerLine;
00094e  444f              ADD      r7,r7,r9
000950  1c64              ADDS     r4,r4,#1              ;607
                  |L1.2386|
000952  42b4              CMP      r4,r6                 ;607
000954  dbf3              BLT      |L1.2366|
;;;611        }
;;;612        break;
000956  e02c              B        |L1.2482|
                  |L1.2392|
                          DCD      GUI_Context
                  |L1.2396|
;;;613      case 4:
;;;614        for (i=0; i<ysize; i++)
00095c  2400              MOVS     r4,#0
00095e  e009              B        |L1.2420|
                  |L1.2400|
;;;615        {
;;;616          DrawBitLine4BPP(x0, i+y0, pData, Diff, xsize, pTrans);
000960  1961              ADDS     r1,r4,r5
000962  e9cd8a00          STRD     r8,r10,[sp,#0]
000966  463a              MOV      r2,r7
000968  9b13              LDR      r3,[sp,#0x4c]
00096a  9803              LDR      r0,[sp,#0xc]
00096c  f7fffffe          BL       DrawBitLine4BPP
;;;617          pData += BytesPerLine;
000970  444f              ADD      r7,r7,r9
000972  1c64              ADDS     r4,r4,#1              ;614
                  |L1.2420|
000974  42b4              CMP      r4,r6                 ;614
000976  dbf3              BLT      |L1.2400|
;;;618        }
;;;619        break;
000978  e01b              B        |L1.2482|
                  |L1.2426|
;;;620      case 8:
;;;621        for (i=0; i<ysize; i++)
00097a  2400              MOVS     r4,#0
00097c  e009              B        |L1.2450|
                  |L1.2430|
;;;622        {
;;;623          DrawBitLine8BPP(x0, i+y0, pData, xsize, pTrans);
00097e  1961              ADDS     r1,r4,r5
000980  4643              MOV      r3,r8
000982  463a              MOV      r2,r7
000984  f8cda000          STR      r10,[sp,#0]
000988  9803              LDR      r0,[sp,#0xc]
00098a  f7fffffe          BL       DrawBitLine8BPP
;;;624          pData += BytesPerLine;
00098e  444f              ADD      r7,r7,r9
000990  1c64              ADDS     r4,r4,#1              ;621
                  |L1.2450|
000992  42b4              CMP      r4,r6                 ;621
000994  dbf3              BLT      |L1.2430|
;;;625        }
;;;626        break;
000996  e00c              B        |L1.2482|
                  |L1.2456|
;;;627      case 16:
;;;628        for (i=0; i<ysize; i++)
000998  2400              MOVS     r4,#0
00099a  e007              B        |L1.2476|
                  |L1.2460|
;;;629        {
;;;630          DrawBitLine16BPP(x0, i+y0, (U16*)pData, xsize);
00099c  1961              ADDS     r1,r4,r5
00099e  4643              MOV      r3,r8
0009a0  463a              MOV      r2,r7
0009a2  9803              LDR      r0,[sp,#0xc]
0009a4  f7fffffe          BL       DrawBitLine16BPP
;;;631          pData += BytesPerLine;
0009a8  444f              ADD      r7,r7,r9
0009aa  1c64              ADDS     r4,r4,#1              ;628
                  |L1.2476|
0009ac  42b4              CMP      r4,r6                 ;628
0009ae  dbf5              BLT      |L1.2460|
;;;632        }
;;;633        break;
0009b0  bf00              NOP      
                  |L1.2482|
0009b2  bf00              NOP                            ;605
;;;634      }
;;;635    }
0009b4  b007              ADD      sp,sp,#0x1c
0009b6  e8bd8ff0          POP      {r4-r11,pc}
;;;636    
                          ENDP

                  LCD_L0_SetOrg PROC
;;;640    */
;;;641    void LCD_L0_SetOrg(int x, int y) {
0009ba  bf00              NOP      
;;;642      GUI_USE_PARA(x);
;;;643      GUI_USE_PARA(y);
0009bc  bf00              NOP      
;;;644    }
0009be  4770              BX       lr
;;;645    
                          ENDP

                  LCD_L0_On PROC
;;;649    */
;;;650    void LCD_On (void) {}
0009c0  4770              BX       lr
;;;651    void LCD_Off(void) {}
                          ENDP

                  LCD_L0_Off PROC
0009c2  4770              BX       lr
;;;652    
                          ENDP

                  LCD_L0_Init PROC
;;;656    */
;;;657    int LCD_L0_Init(void) 
0009c4  b510              PUSH     {r4,lr}
;;;658    {
;;;659    	LCD_init();
0009c6  f7fffffe          BL       LCD_init
;;;660    	return 0;
0009ca  2000              MOVS     r0,#0
;;;661    }
0009cc  bd10              POP      {r4,pc}
;;;662    
                          ENDP

                  LCD_L0_SetLUTEntry PROC
;;;666    */
;;;667    void LCD_L0_SetLUTEntry(U8 Pos, LCD_COLOR Color) {
0009ce  bf00              NOP      
;;;668      GUI_USE_PARA(Pos);
;;;669      GUI_USE_PARA(Color);
0009d0  bf00              NOP      
;;;670    }
0009d2  4770              BX       lr
;;;671    
                          ENDP

                  LCD_L0_GetDevFunc PROC
;;;675    */
;;;676    void * LCD_L0_GetDevFunc(int Index) {
0009d4  4601              MOV      r1,r0
;;;677      GUI_USE_PARA(Index);
0009d6  bf00              NOP      
;;;678      return NULL;
0009d8  2000              MOVS     r0,#0
;;;679    }
0009da  4770              BX       lr
                          ENDP


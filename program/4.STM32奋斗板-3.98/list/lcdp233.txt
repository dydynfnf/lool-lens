; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\lcdp233.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\lcdp233.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -IC:\Users\Administrator\Desktop\gui\STM32·Ü¶·°å-3.98\RTE -Id:\Keil_v5\ARM\PACK\ARM\CMSIS\4.3.0\CMSIS\Include -Id:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.1.0\Device\Include -D__UVISION_VERSION=515 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\lcdp233.crf GUI\ConvertColor\LCDP233.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  LCD_Color2Index_233 PROC
;;;33     */
;;;34     unsigned LCD_Color2Index_233(LCD_COLOR Color) {
000000  b530              PUSH     {r4,r5,lr}
000002  4601              MOV      r1,r0
;;;35       int r, g, b;
;;;36       r = Color & 255;
000004  b2ca              UXTB     r2,r1
;;;37       g = (Color >> 8 ) & 255;
000006  f3c12307          UBFX     r3,r1,#8,#8
;;;38       b = Color >> 16;
00000a  0c0c              LSRS     r4,r1,#16
;;;39       r = (r * 7 + 127) / 255;
00000c  ebc200c2          RSB      r0,r2,r2,LSL #3
000010  307f              ADDS     r0,r0,#0x7f
000012  25ff              MOVS     r5,#0xff
000014  fb90f2f5          SDIV     r2,r0,r5
;;;40       g = (g * 7 + 127) / 255;
000018  ebc300c3          RSB      r0,r3,r3,LSL #3
00001c  307f              ADDS     r0,r0,#0x7f
00001e  fb90f3f5          SDIV     r3,r0,r5
;;;41       b = (b + 42) / 85;
000022  f104002a          ADD      r0,r4,#0x2a
000026  2555              MOVS     r5,#0x55
000028  fb90f4f5          SDIV     r4,r0,r5
;;;42       return r + (g << 3) + (b << 6);
00002c  eb0200c3          ADD      r0,r2,r3,LSL #3
000030  eb001084          ADD      r0,r0,r4,LSL #6
;;;43     }
000034  bd30              POP      {r4,r5,pc}
;;;44     
                          ENDP

                  LCD_Index2Color_233 PROC
;;;48     */
;;;49     LCD_COLOR LCD_Index2Color_233(int Index) {
000036  b530              PUSH     {r4,r5,lr}
000038  4601              MOV      r1,r0
;;;50       int r, g, b;
;;;51       r = (Index & 7) * 255 / 7;
00003a  f0010007          AND      r0,r1,#7
00003e  ebc02000          RSB      r0,r0,r0,LSL #8
000042  2507              MOVS     r5,#7
000044  fb90f4f5          SDIV     r4,r0,r5
;;;52       g = ((Index >> 3) & 7) * 255 / 7;
000048  f3c100c2          UBFX     r0,r1,#3,#3
00004c  ebc02000          RSB      r0,r0,r0,LSL #8
000050  fb90f2f5          SDIV     r2,r0,r5
;;;53       b = ((Index >> 6) & 3) * 85;
000054  f3c11081          UBFX     r0,r1,#6,#2
000058  eb001000          ADD      r0,r0,r0,LSL #4
00005c  eb000380          ADD      r3,r0,r0,LSL #2
;;;54       return r + (g << 8) + (((U32)b) << 16);
000060  eb042002          ADD      r0,r4,r2,LSL #8
000064  eb004003          ADD      r0,r0,r3,LSL #16
;;;55     }
000068  bd30              POP      {r4,r5,pc}
;;;56     
                          ENDP

                  LCD_GetIndexMask_233 PROC
;;;60     */
;;;61     unsigned LCD_GetIndexMask_233(void) {
00006a  20ff              MOVS     r0,#0xff
;;;62       return 0xff;
;;;63     }
00006c  4770              BX       lr
;;;64     
                          ENDP


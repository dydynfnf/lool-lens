; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\gui_dispstringinrectwrap.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\gui_dispstringinrectwrap.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -IC:\Users\Administrator\Desktop\gui\STM32·Ü¶·°å-3.98\RTE -Id:\Keil_v5\ARM\PACK\ARM\CMSIS\4.3.0\CMSIS\Include -Id:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.1.0\Device\Include -D__UVISION_VERSION=515 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\gui_dispstringinrectwrap.crf GUI\Core\GUI_DispStringInRectWrap.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  GUI_DispStringInRectWrap PROC
;;;31     */
;;;32     void GUI_DispStringInRectWrap(const char GUI_UNI_PTR * s, GUI_RECT * pRect, int TextAlign, GUI_WRAPMODE WrapMode) {
000000  e92d4ff0          PUSH     {r4-r11,lr}
000004  b087              SUB      sp,sp,#0x1c
000006  4606              MOV      r6,r0
000008  460c              MOV      r4,r1
00000a  4690              MOV      r8,r2
00000c  469a              MOV      r10,r3
;;;33       const GUI_RECT * pOldClipRect;
;;;34       GUI_RECT Rect;
;;;35       int xSize, ySizeFont, NumBytesToNextLine, NumCharsDisp;
;;;36       if (!s) {
00000e  b916              CBNZ     r6,|L1.22|
                  |L1.16|
;;;37         return;
;;;38       }
;;;39       GUI_LOCK();
;;;40       Rect      = *pRect;
;;;41       xSize     = Rect.x1 - Rect.x0 + 1;
;;;42       ySizeFont = GUI_GetFontDistY();
;;;43       /* Vertical alignment */
;;;44       if ((TextAlign & GUI_TA_VERTICAL) != GUI_TA_TOP) {
;;;45         int NumLines = 0;
;;;46         const char GUI_UNI_PTR * pText;
;;;47         pText = s;
;;;48         /* Count the number of lines */
;;;49         do {
;;;50           NumBytesToNextLine = GUI__WrapGetNumBytesToNextLine(pText, xSize, WrapMode);
;;;51           pText += NumBytesToNextLine;
;;;52           if (NumBytesToNextLine) {
;;;53             NumLines++;
;;;54           }
;;;55         } while (NumBytesToNextLine);
;;;56         /* Do the vertical alignment */
;;;57         switch (TextAlign & GUI_TA_VERTICAL) {
;;;58     	  case GUI_TA_BASELINE:
;;;59     	  case GUI_TA_BOTTOM:
;;;60           Rect.y0 = Rect.y1 - NumLines * ySizeFont + 1;
;;;61           break;
;;;62     	  case GUI_TA_VCENTER:
;;;63     		  Rect.y0 = Rect.y0 + (Rect.y1 - Rect.y0 + 1 - NumLines * ySizeFont) / 2;
;;;64           break;
;;;65     	  }
;;;66       }
;;;67       pOldClipRect = GUI_SetClipRect(pRect);
;;;68       do {
;;;69         int xLineSize;
;;;70         GUI_RECT RectText;
;;;71         NumCharsDisp = GUI__WrapGetNumCharsDisp(s, xSize, WrapMode);
;;;72         Rect.y1      = Rect.y0 + ySizeFont - 1;
;;;73         RectText     = Rect;
;;;74         /* Horizontal alignment */
;;;75         xLineSize = GUI__GetLineDistX(s, NumCharsDisp);
;;;76         switch (TextAlign & GUI_TA_HORIZONTAL) {
;;;77         case GUI_TA_HCENTER:
;;;78           RectText.x0 = pRect->x0 + (pRect->x1 - pRect->x0 - xLineSize) / 2;
;;;79           break;
;;;80         case GUI_TA_LEFT:
;;;81           RectText.x0 = pRect->x0;
;;;82           break;
;;;83         case GUI_TA_RIGHT:
;;;84           RectText.x0 = pRect->x1 - xLineSize + 1;
;;;85           break;
;;;86         }
;;;87         GUI__DispLine(s, NumCharsDisp, &RectText);
;;;88         s += GUI__WrapGetNumBytesToNextLine(s, xSize, WrapMode);
;;;89         Rect.y0 += ySizeFont;
;;;90       } while (*s);
;;;91       GUI_SetClipRect(pOldClipRect);
;;;92       GUI_UNLOCK();
;;;93     }
000010  b007              ADD      sp,sp,#0x1c
000012  e8bd8ff0          POP      {r4-r11,pc}
                  |L1.22|
000016  6820              LDR      r0,[r4,#0]            ;40
000018  9004              STR      r0,[sp,#0x10]         ;40
00001a  6860              LDR      r0,[r4,#4]            ;40
00001c  9005              STR      r0,[sp,#0x14]         ;40
00001e  f9bd0014          LDRSH    r0,[sp,#0x14]         ;41
000022  f9bd1010          LDRSH    r1,[sp,#0x10]         ;41
000026  1a40              SUBS     r0,r0,r1              ;41
000028  1c40              ADDS     r0,r0,#1              ;41
00002a  9003              STR      r0,[sp,#0xc]          ;41
00002c  f7fffffe          BL       GUI_GetFontDistY
000030  4605              MOV      r5,r0                 ;42
000032  f008000c          AND      r0,r8,#0xc            ;44
000036  b3a8              CBZ      r0,|L1.164|
000038  f04f0900          MOV      r9,#0                 ;45
00003c  46b3              MOV      r11,r6                ;47
00003e  bf00              NOP                            ;49
                  |L1.64|
000040  4652              MOV      r2,r10                ;50
000042  4658              MOV      r0,r11                ;50
000044  9903              LDR      r1,[sp,#0xc]          ;50
000046  f7fffffe          BL       GUI__WrapGetNumBytesToNextLine
00004a  4607              MOV      r7,r0                 ;50
00004c  44bb              ADD      r11,r11,r7            ;51
00004e  b10f              CBZ      r7,|L1.84|
000050  f1090901          ADD      r9,r9,#1              ;53
                  |L1.84|
000054  2f00              CMP      r7,#0                 ;55
000056  d1f3              BNE      |L1.64|
000058  f008000c          AND      r0,r8,#0xc            ;57
00005c  2804              CMP      r0,#4                 ;57
00005e  d005              BEQ      |L1.108|
000060  2808              CMP      r0,#8                 ;57
000062  d002              BEQ      |L1.106|
000064  280c              CMP      r0,#0xc               ;57
000066  d11b              BNE      |L1.160|
000068  e009              B        |L1.126|
                  |L1.106|
00006a  bf00              NOP                            ;59
                  |L1.108|
00006c  f9bd0016          LDRSH    r0,[sp,#0x16]         ;60
000070  fb090015          MLS      r0,r9,r5,r0           ;60
000074  1c40              ADDS     r0,r0,#1              ;60
000076  b200              SXTH     r0,r0                 ;60
000078  f8ad0012          STRH     r0,[sp,#0x12]         ;60
00007c  e010              B        |L1.160|
                  |L1.126|
00007e  f9bd1016          LDRSH    r1,[sp,#0x16]         ;63
000082  f9bd2012          LDRSH    r2,[sp,#0x12]         ;63
000086  1a89              SUBS     r1,r1,r2              ;63
000088  1c49              ADDS     r1,r1,#1              ;63
00008a  fb091015          MLS      r0,r9,r5,r1           ;63
00008e  eb0071d0          ADD      r1,r0,r0,LSR #31      ;63
000092  b292              UXTH     r2,r2                 ;63
000094  eb020161          ADD      r1,r2,r1,ASR #1       ;63
000098  b209              SXTH     r1,r1                 ;63
00009a  f8ad1012          STRH     r1,[sp,#0x12]         ;63
00009e  bf00              NOP                            ;64
                  |L1.160|
0000a0  bf00              NOP                            ;61
0000a2  bf00              NOP                            ;66
                  |L1.164|
0000a4  4620              MOV      r0,r4                 ;67
0000a6  f7fffffe          BL       GUI_SetClipRect
0000aa  9006              STR      r0,[sp,#0x18]         ;67
0000ac  bf00              NOP                            ;68
                  |L1.174|
0000ae  4652              MOV      r2,r10                ;71
0000b0  4630              MOV      r0,r6                 ;71
0000b2  9903              LDR      r1,[sp,#0xc]          ;71
0000b4  f7fffffe          BL       GUI__WrapGetNumCharsDisp
0000b8  9002              STR      r0,[sp,#8]            ;71
0000ba  f8bd0012          LDRH     r0,[sp,#0x12]         ;72
0000be  4428              ADD      r0,r0,r5              ;72
0000c0  1e40              SUBS     r0,r0,#1              ;72
0000c2  b200              SXTH     r0,r0                 ;72
0000c4  f8ad0016          STRH     r0,[sp,#0x16]         ;72
0000c8  e9dd0104          LDRD     r0,r1,[sp,#0x10]      ;73
0000cc  e9cd0100          STRD     r0,r1,[sp,#0]         ;73
0000d0  4630              MOV      r0,r6                 ;75
0000d2  9902              LDR      r1,[sp,#8]            ;75
0000d4  f7fffffe          BL       GUI__GetLineDistX
0000d8  4681              MOV      r9,r0                 ;75
0000da  f0080003          AND      r0,r8,#3              ;76
0000de  b198              CBZ      r0,|L1.264|
0000e0  2801              CMP      r0,#1                 ;76
0000e2  d015              BEQ      |L1.272|
0000e4  2802              CMP      r0,#2                 ;76
0000e6  d11b              BNE      |L1.288|
0000e8  f9b41004          LDRSH    r1,[r4,#4]            ;78
0000ec  f9b42000          LDRSH    r2,[r4,#0]            ;78
0000f0  1a89              SUBS     r1,r1,r2              ;78
0000f2  eba10009          SUB      r0,r1,r9              ;78
0000f6  eb0071d0          ADD      r1,r0,r0,LSR #31      ;78
0000fa  b292              UXTH     r2,r2                 ;78
0000fc  eb020161          ADD      r1,r2,r1,ASR #1       ;78
000100  b209              SXTH     r1,r1                 ;78
000102  f8ad1000          STRH     r1,[sp,#0]            ;78
000106  e00b              B        |L1.288|
                  |L1.264|
000108  8820              LDRH     r0,[r4,#0]            ;81
00010a  f8ad0000          STRH     r0,[sp,#0]            ;81
00010e  e007              B        |L1.288|
                  |L1.272|
000110  88a0              LDRH     r0,[r4,#4]            ;84
000112  eba00009          SUB      r0,r0,r9              ;84
000116  1c40              ADDS     r0,r0,#1              ;84
000118  b200              SXTH     r0,r0                 ;84
00011a  f8ad0000          STRH     r0,[sp,#0]            ;84
00011e  bf00              NOP                            ;85
                  |L1.288|
000120  bf00              NOP                            ;79
000122  466a              MOV      r2,sp                 ;87
000124  4630              MOV      r0,r6                 ;87
000126  9902              LDR      r1,[sp,#8]            ;87
000128  f7fffffe          BL       GUI__DispLine
00012c  4652              MOV      r2,r10                ;88
00012e  4630              MOV      r0,r6                 ;88
000130  9903              LDR      r1,[sp,#0xc]          ;88
000132  f7fffffe          BL       GUI__WrapGetNumBytesToNextLine
000136  4406              ADD      r6,r6,r0              ;88
000138  f8bd0012          LDRH     r0,[sp,#0x12]         ;89
00013c  4428              ADD      r0,r0,r5              ;89
00013e  b200              SXTH     r0,r0                 ;89
000140  f8ad0012          STRH     r0,[sp,#0x12]         ;89
000144  7830              LDRB     r0,[r6,#0]            ;90
000146  2800              CMP      r0,#0                 ;90
000148  d1b1              BNE      |L1.174|
00014a  9806              LDR      r0,[sp,#0x18]         ;91
00014c  f7fffffe          BL       GUI_SetClipRect
000150  bf00              NOP      
000152  e75d              B        |L1.16|
;;;94     
                          ENDP


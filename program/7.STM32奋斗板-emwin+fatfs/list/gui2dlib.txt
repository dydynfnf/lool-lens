; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\gui2dlib.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\gui2dlib.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\gui2dlib.crf GUI\Core\GUI2DLib.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  GUI_MoveRel PROC
;;;33     */
;;;34     void GUI_MoveRel(int dx, int dy) { /*tbd: GL_LinePos. */
000000  4a3b              LDR      r2,|L1.240|
;;;35       GUI_LOCK();
;;;36       GUI_Context.DrawPosX += dx;
000002  8cd2              LDRH     r2,[r2,#0x26]  ; GUI_Context
000004  4402              ADD      r2,r2,r0
000006  b212              SXTH     r2,r2
000008  4b39              LDR      r3,|L1.240|
00000a  84da              STRH     r2,[r3,#0x26]
;;;37       GUI_Context.DrawPosY += dy;
00000c  461a              MOV      r2,r3
00000e  8d12              LDRH     r2,[r2,#0x28]  ; GUI_Context
000010  440a              ADD      r2,r2,r1
000012  b212              SXTH     r2,r2
000014  851a              STRH     r2,[r3,#0x28]
;;;38       GUI_UNLOCK();
;;;39     }
000016  4770              BX       lr
;;;40     
                          ENDP

                  GL_MoveTo PROC
;;;44     */
;;;45     void GL_MoveTo(int x, int y) {
000018  b202              SXTH     r2,r0
;;;46       GUI_Context.DrawPosX = x;
00001a  4b35              LDR      r3,|L1.240|
00001c  84da              STRH     r2,[r3,#0x26]
;;;47       GUI_Context.DrawPosY = y;
00001e  b20a              SXTH     r2,r1
000020  851a              STRH     r2,[r3,#0x28]
;;;48     }
000022  4770              BX       lr
;;;49     
                          ENDP

                  GUI_MoveTo PROC
;;;53     */
;;;54     void GUI_MoveTo(int x, int y) {
000024  b530              PUSH     {r4,r5,lr}
000026  4605              MOV      r5,r0
000028  460c              MOV      r4,r1
;;;55       GUI_LOCK();
;;;56       #if (GUI_WINSUPPORT)
;;;57         WM_ADDORG(x,y);
00002a  4831              LDR      r0,|L1.240|
00002c  6c00              LDR      r0,[r0,#0x40]  ; GUI_Context
00002e  4405              ADD      r5,r5,r0
000030  482f              LDR      r0,|L1.240|
000032  6c40              LDR      r0,[r0,#0x44]  ; GUI_Context
000034  4404              ADD      r4,r4,r0
;;;58       #endif
;;;59       GL_MoveTo(x,y);
000036  4621              MOV      r1,r4
000038  4628              MOV      r0,r5
00003a  f7fffffe          BL       GL_MoveTo
;;;60       GUI_UNLOCK();
;;;61     }
00003e  bd30              POP      {r4,r5,pc}
;;;62     
                          ENDP

                  _DrawRect PROC
;;;72     */
;;;73     static void _DrawRect(int x0, int y0, int x1, int y1) {
000040  e92d41f0          PUSH     {r4-r8,lr}
000044  4607              MOV      r7,r0
000046  460d              MOV      r5,r1
000048  4616              MOV      r6,r2
00004a  461c              MOV      r4,r3
;;;74       LCD_DrawHLine(x0, y0, x1);
00004c  4632              MOV      r2,r6
00004e  4629              MOV      r1,r5
000050  4638              MOV      r0,r7
000052  f7fffffe          BL       LCD_DrawHLine
;;;75       LCD_DrawHLine(x0, y1, x1);
000056  4632              MOV      r2,r6
000058  4621              MOV      r1,r4
00005a  4638              MOV      r0,r7
00005c  f7fffffe          BL       LCD_DrawHLine
;;;76       LCD_DrawVLine(x0, y0 + 1, y1 - 1);
000060  1e62              SUBS     r2,r4,#1
000062  1c69              ADDS     r1,r5,#1
000064  4638              MOV      r0,r7
000066  f7fffffe          BL       LCD_DrawVLine
;;;77       LCD_DrawVLine(x1, y0 + 1, y1 - 1);
00006a  1e62              SUBS     r2,r4,#1
00006c  1c69              ADDS     r1,r5,#1
00006e  4630              MOV      r0,r6
000070  f7fffffe          BL       LCD_DrawVLine
;;;78     }
000074  e8bd81f0          POP      {r4-r8,pc}
;;;79     
                          ENDP

                  GUI_DrawRect PROC
;;;83     */
;;;84     void GUI_DrawRect(int x0, int y0, int x1, int y1) {
000078  e92d41fc          PUSH     {r2-r8,lr}
00007c  4605              MOV      r5,r0
00007e  460e              MOV      r6,r1
000080  4617              MOV      r7,r2
000082  4698              MOV      r8,r3
;;;85       #if (GUI_WINSUPPORT)
;;;86         int Off;
;;;87         GUI_RECT r;
;;;88       #endif
;;;89       GUI_LOCK();
;;;90       #if (GUI_WINSUPPORT)
;;;91         Off = GUI_Context.PenSize -1;
000084  481a              LDR      r0,|L1.240|
000086  7e00              LDRB     r0,[r0,#0x18]  ; GUI_Context
000088  f1a00401          SUB      r4,r0,#1
;;;92         WM_ADDORG(x0,y0);
00008c  4818              LDR      r0,|L1.240|
00008e  6c00              LDR      r0,[r0,#0x40]  ; GUI_Context
000090  4405              ADD      r5,r5,r0
000092  4817              LDR      r0,|L1.240|
000094  6c40              LDR      r0,[r0,#0x44]  ; GUI_Context
000096  4406              ADD      r6,r6,r0
;;;93         WM_ADDORG(x1,y1);
000098  4815              LDR      r0,|L1.240|
00009a  6c00              LDR      r0,[r0,#0x40]  ; GUI_Context
00009c  4407              ADD      r7,r7,r0
00009e  4814              LDR      r0,|L1.240|
0000a0  6c40              LDR      r0,[r0,#0x44]  ; GUI_Context
0000a2  4480              ADD      r8,r8,r0
;;;94         r.x0 = x0 - Off;
0000a4  eba50004          SUB      r0,r5,r4
0000a8  b200              SXTH     r0,r0
0000aa  f8ad0000          STRH     r0,[sp,#0]
;;;95         r.x1 = x1 + Off;
0000ae  eb070004          ADD      r0,r7,r4
0000b2  b200              SXTH     r0,r0
0000b4  f8ad0004          STRH     r0,[sp,#4]
;;;96         r.y0 = y0 - Off;
0000b8  eba60004          SUB      r0,r6,r4
0000bc  b200              SXTH     r0,r0
0000be  f8ad0002          STRH     r0,[sp,#2]
;;;97         r.y1 = y1 + Off;
0000c2  eb080004          ADD      r0,r8,r4
0000c6  b200              SXTH     r0,r0
0000c8  f8ad0006          STRH     r0,[sp,#6]
;;;98         WM_ITERATE_START(&r); {
0000cc  4668              MOV      r0,sp
0000ce  f7fffffe          BL       WM__InitIVRSearch
0000d2  b150              CBZ      r0,|L1.234|
0000d4  bf00              NOP      
                  |L1.214|
;;;99       #endif
;;;100      _DrawRect(x0, y0, x1, y1);
0000d6  4643              MOV      r3,r8
0000d8  463a              MOV      r2,r7
0000da  4631              MOV      r1,r6
0000dc  4628              MOV      r0,r5
0000de  f7fffffe          BL       _DrawRect
;;;101      #if (GUI_WINSUPPORT)
;;;102        } WM_ITERATE_END();
0000e2  f7fffffe          BL       WM__GetNextIVR
0000e6  2800              CMP      r0,#0
0000e8  d1f5              BNE      |L1.214|
                  |L1.234|
;;;103      #endif
;;;104      GUI_UNLOCK();
;;;105    }
0000ea  e8bd81fc          POP      {r2-r8,pc}
;;;106    
                          ENDP

0000ee  0000              DCW      0x0000
                  |L1.240|
                          DCD      GUI_Context

; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\gui_invertrect.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\gui_invertrect.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\gui_invertrect.crf GUI\Core\GUI_InvertRect.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  GUI_InvertRect PROC
;;;31     */
;;;32     void GUI_InvertRect(int x0, int y0, int x1, int y1) {
000000  e92d41fc          PUSH     {r2-r8,lr}
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
000008  4616              MOV      r6,r2
00000a  461f              MOV      r7,r3
;;;33       GUI_DRAWMODE PrevDraw;
;;;34       #if (GUI_WINSUPPORT)
;;;35         GUI_RECT r;
;;;36       #endif
;;;37       GUI_LOCK();
;;;38       PrevDraw = GUI_SetDrawMode(GUI_DRAWMODE_XOR);
00000c  f04f0001          MOV      r0,#1
000010  f7fffffe          BL       GUI_SetDrawMode
000014  4680              MOV      r8,r0
;;;39       #if (GUI_WINSUPPORT)
;;;40         WM_ADDORG(x0, y0);
000016  4816              LDR      r0,|L1.112|
000018  6c00              LDR      r0,[r0,#0x40]  ; GUI_Context
00001a  4404              ADD      r4,r4,r0
00001c  4814              LDR      r0,|L1.112|
00001e  6c40              LDR      r0,[r0,#0x44]  ; GUI_Context
000020  4405              ADD      r5,r5,r0
;;;41         WM_ADDORG(x1, y1);
000022  4813              LDR      r0,|L1.112|
000024  6c00              LDR      r0,[r0,#0x40]  ; GUI_Context
000026  4406              ADD      r6,r6,r0
000028  4811              LDR      r0,|L1.112|
00002a  6c40              LDR      r0,[r0,#0x44]  ; GUI_Context
00002c  4407              ADD      r7,r7,r0
;;;42         r.x0 = x0;
00002e  b220              SXTH     r0,r4
000030  f8ad0000          STRH     r0,[sp,#0]
;;;43         r.x1 = x1;
000034  b230              SXTH     r0,r6
000036  f8ad0004          STRH     r0,[sp,#4]
;;;44         r.y0 = y0;
00003a  b228              SXTH     r0,r5
00003c  f8ad0002          STRH     r0,[sp,#2]
;;;45         r.y1 = y1;
000040  b238              SXTH     r0,r7
000042  f8ad0006          STRH     r0,[sp,#6]
;;;46         WM_ITERATE_START(&r); {
000046  4668              MOV      r0,sp
000048  f7fffffe          BL       WM__InitIVRSearch
00004c  b150              CBZ      r0,|L1.100|
00004e  bf00              NOP      
                  |L1.80|
;;;47       #endif
;;;48       LCD_FillRect(x0, y0, x1, y1);
000050  463b              MOV      r3,r7
000052  4632              MOV      r2,r6
000054  4629              MOV      r1,r5
000056  4620              MOV      r0,r4
000058  f7fffffe          BL       LCD_FillRect
;;;49       #if (GUI_WINSUPPORT)
;;;50         } WM_ITERATE_END();
00005c  f7fffffe          BL       WM__GetNextIVR
000060  2800              CMP      r0,#0
000062  d1f5              BNE      |L1.80|
                  |L1.100|
;;;51       #endif
;;;52       GUI_SetDrawMode(PrevDraw);
000064  4640              MOV      r0,r8
000066  f7fffffe          BL       GUI_SetDrawMode
;;;53       GUI_UNLOCK();
;;;54     }
00006a  e8bd81fc          POP      {r2-r8,pc}
;;;55     
                          ENDP

00006e  0000              DCW      0x0000
                  |L1.112|
                          DCD      GUI_Context

; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\multiedit.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\multiedit.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\multiedit.crf GUI\Widget\MULTIEDIT.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _InvalidateNumChars PROC
;;;164    */
;;;165    static void _InvalidateNumChars(MULTIEDIT_OBJ * pObj) {
000000  f8901079          LDRB     r1,[r0,#0x79]
;;;166      pObj->InvalidFlags |= INVALID_NUMCHARS;
000004  f0410101          ORR      r1,r1,#1
000008  f8801079          STRB     r1,[r0,#0x79]
;;;167    }
00000c  4770              BX       lr
;;;168    
                          ENDP

                  _GetNumChars PROC
;;;174    */
;;;175    static int _GetNumChars(MULTIEDIT_OBJ * pObj) {
00000e  b570              PUSH     {r4-r6,lr}
000010  4604              MOV      r4,r0
;;;176      if (pObj->InvalidFlags & INVALID_NUMCHARS) {
000012  f8940079          LDRB     r0,[r4,#0x79]
000016  f0100f01          TST      r0,#1
00001a  d00f              BEQ      |L1.60|
;;;177        char * pText;
;;;178        pText = (char*) GUI_ALLOC_h2p(pObj->hText);
00001c  f9b40038          LDRSH    r0,[r4,#0x38]
000020  f7fffffe          BL       GUI_ALLOC_h2p
000024  4605              MOV      r5,r0
;;;179        pObj->NumChars = GUI__GetNumChars(pText);
000026  4628              MOV      r0,r5
000028  f7fffffe          BL       GUI__GetNumChars
00002c  87a0              STRH     r0,[r4,#0x3c]
;;;180        pObj->InvalidFlags &= ~INVALID_NUMCHARS;
00002e  f8940079          LDRB     r0,[r4,#0x79]
000032  f0200001          BIC      r0,r0,#1
000036  f8840079          STRB     r0,[r4,#0x79]
;;;181      }
00003a  bf00              NOP      
                  |L1.60|
;;;182      return pObj->NumChars;
00003c  8fa0              LDRH     r0,[r4,#0x3c]
;;;183    }
00003e  bd70              POP      {r4-r6,pc}
;;;184    
                          ENDP

                  _GetXSize PROC
;;;190    */
;;;191    static int _GetXSize(MULTIEDIT_HANDLE hObj, const MULTIEDIT_OBJ* pObj) {
000040  b57c              PUSH     {r2-r6,lr}
000042  4605              MOV      r5,r0
000044  460c              MOV      r4,r1
;;;192      GUI_RECT Rect;
;;;193      WM_GetInsideRectExScrollbar(hObj, &Rect);
000046  4669              MOV      r1,sp
000048  4628              MOV      r0,r5
00004a  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;194      return Rect.x1 - Rect.x0 - (pObj->HBorder * 2) - 1;
00004e  f9bd0004          LDRSH    r0,[sp,#4]
000052  f9bd1000          LDRSH    r1,[sp,#0]
000056  1a41              SUBS     r1,r0,r1
000058  f894007b          LDRB     r0,[r4,#0x7b]
00005c  eba10040          SUB      r0,r1,r0,LSL #1
000060  1e40              SUBS     r0,r0,#1
;;;195    }
000062  bd7c              POP      {r2-r6,pc}
;;;196    
                          ENDP

                  _GetNumCharsInPrompt PROC
;;;200    */
;;;201    static int _GetNumCharsInPrompt(const MULTIEDIT_OBJ* pObj, const char GUI_UNI_PTR * pText) {
000064  e92d41f0          PUSH     {r4-r8,lr}
000068  4605              MOV      r5,r0
00006a  460c              MOV      r4,r1
;;;202      char *pString, *pEndPrompt;
;;;203      int r = 0;
00006c  f04f0800          MOV      r8,#0
;;;204      pString = (char*) GUI_ALLOC_h2p(pObj->hText);
000070  f9b50038          LDRSH    r0,[r5,#0x38]
000074  f7fffffe          BL       GUI_ALLOC_h2p
000078  4606              MOV      r6,r0
;;;205      pEndPrompt = pString + GUI_UC__NumChars2NumBytes(pString, pObj->NumCharsPrompt);
00007a  8fe9              LDRH     r1,[r5,#0x3e]
00007c  4630              MOV      r0,r6
00007e  f7fffffe          BL       GUI_UC__NumChars2NumBytes
000082  eb000706          ADD      r7,r0,r6
;;;206      if (pText < pEndPrompt) {
000086  42bc              CMP      r4,r7
000088  d204              BCS      |L1.148|
;;;207        r = GUI_UC__NumBytes2NumChars(pText, pEndPrompt - pText);
00008a  1b39              SUBS     r1,r7,r4
00008c  4620              MOV      r0,r4
00008e  f7fffffe          BL       GUI_UC__NumBytes2NumChars
000092  4680              MOV      r8,r0
                  |L1.148|
;;;208      }
;;;209      return r;
000094  4640              MOV      r0,r8
;;;210    }
000096  e8bd81f0          POP      {r4-r8,pc}
;;;211    
                          ENDP

                  _WrapGetNumCharsDisp PROC
;;;215    */
;;;216    static int _WrapGetNumCharsDisp(MULTIEDIT_HANDLE hObj, const MULTIEDIT_OBJ* pObj, const char GUI_UNI_PTR * pText) {
00009a  e92d43f7          PUSH     {r0-r2,r4-r9,lr}
00009e  4681              MOV      r9,r0
0000a0  460c              MOV      r4,r1
;;;217      int xSize, r;
;;;218      xSize = _GetXSize(hObj, pObj);
0000a2  4621              MOV      r1,r4
0000a4  4648              MOV      r0,r9
0000a6  f7fffffe          BL       _GetXSize
0000aa  4680              MOV      r8,r0
;;;219      if (pObj->Flags & MULTIEDIT_SF_PASSWORD) {
0000ac  f8940078          LDRB     r0,[r4,#0x78]
0000b0  f0100f20          TST      r0,#0x20
0000b4  d037              BEQ      |L1.294|
;;;220        int NumCharsPrompt;
;;;221        NumCharsPrompt = _GetNumCharsInPrompt(pObj, pText);
0000b6  4620              MOV      r0,r4
0000b8  9902              LDR      r1,[sp,#8]
0000ba  f7fffffe          BL       _GetNumCharsInPrompt
0000be  4606              MOV      r6,r0
;;;222        r = GUI__WrapGetNumCharsDisp(pText, xSize, pObj->WrapMode);
0000c0  f894207c          LDRB     r2,[r4,#0x7c]
0000c4  4641              MOV      r1,r8
0000c6  9802              LDR      r0,[sp,#8]
0000c8  f7fffffe          BL       GUI__WrapGetNumCharsDisp
0000cc  4605              MOV      r5,r0
;;;223        if (r >= NumCharsPrompt) {
0000ce  42b5              CMP      r5,r6
0000d0  db28              BLT      |L1.292|
;;;224          int x;
;;;225          switch (pObj->WrapMode) {
0000d2  f894007c          LDRB     r0,[r4,#0x7c]
0000d6  b920              CBNZ     r0,|L1.226|
;;;226          case GUI_WRAPMODE_NONE:
;;;227            r = GUI__GetNumChars(pText);
0000d8  9802              LDR      r0,[sp,#8]
0000da  f7fffffe          BL       GUI__GetNumChars
0000de  4605              MOV      r5,r0
;;;228            break;
0000e0  e01e              B        |L1.288|
                  |L1.226|
;;;229          default:
;;;230            r = NumCharsPrompt;
0000e2  4635              MOV      r5,r6
;;;231            x = GUI__GetLineDistX(pText, NumCharsPrompt);
0000e4  4631              MOV      r1,r6
0000e6  9802              LDR      r0,[sp,#8]
0000e8  f7fffffe          BL       GUI__GetLineDistX
0000ec  4607              MOV      r7,r0
;;;232            pText += GUI_UC__NumChars2NumBytes(pText, NumCharsPrompt);
0000ee  4631              MOV      r1,r6
0000f0  9802              LDR      r0,[sp,#8]
0000f2  f7fffffe          BL       GUI_UC__NumChars2NumBytes
0000f6  9902              LDR      r1,[sp,#8]
0000f8  4408              ADD      r0,r0,r1
0000fa  9002              STR      r0,[sp,#8]
;;;233            while (GUI_UC__GetCharCodeInc(&pText) != 0) {
0000fc  e009              B        |L1.274|
                  |L1.254|
;;;234              x += GUI_GetCharDistX(MULTIEDIT_PASSWORD_CHAR);
0000fe  202a              MOVS     r0,#0x2a
000100  f7fffffe          BL       GUI_GetCharDistX
000104  4407              ADD      r7,r7,r0
;;;235              if (r && (x > xSize)) {
000106  b115              CBZ      r5,|L1.270|
000108  4547              CMP      r7,r8
00010a  dd00              BLE      |L1.270|
;;;236                break;
00010c  e006              B        |L1.284|
                  |L1.270|
;;;237              }
;;;238              r++;
00010e  f1050501          ADD      r5,r5,#1
                  |L1.274|
000112  a802              ADD      r0,sp,#8              ;233
000114  f7fffffe          BL       GUI_UC__GetCharCodeInc
000118  2800              CMP      r0,#0                 ;233
00011a  d1f0              BNE      |L1.254|
                  |L1.284|
00011c  bf00              NOP                            ;236
;;;239            }
;;;240            break;
00011e  bf00              NOP      
                  |L1.288|
000120  bf00              NOP                            ;228
;;;241          }
;;;242        }
000122  bf00              NOP      
                  |L1.292|
;;;243      } else {
000124  e006              B        |L1.308|
                  |L1.294|
;;;244        r = GUI__WrapGetNumCharsDisp(pText, xSize, pObj->WrapMode);
000126  f894207c          LDRB     r2,[r4,#0x7c]
00012a  4641              MOV      r1,r8
00012c  9802              LDR      r0,[sp,#8]
00012e  f7fffffe          BL       GUI__WrapGetNumCharsDisp
000132  4605              MOV      r5,r0
                  |L1.308|
;;;245      }
;;;246      return r;
000134  4628              MOV      r0,r5
;;;247    }
000136  e8bd83fe          POP      {r1-r9,pc}
;;;248    
                          ENDP

                  _WrapGetNumBytesToNextLine PROC
;;;252    */
;;;253    static int _WrapGetNumBytesToNextLine(MULTIEDIT_HANDLE hObj, const MULTIEDIT_OBJ* pObj, const char* pText) {
00013a  e92d47f0          PUSH     {r4-r10,lr}
00013e  4680              MOV      r8,r0
000140  460d              MOV      r5,r1
000142  4616              MOV      r6,r2
;;;254      int xSize, r;
;;;255      xSize = _GetXSize(hObj, pObj);
000144  4629              MOV      r1,r5
000146  4640              MOV      r0,r8
000148  f7fffffe          BL       _GetXSize
00014c  4681              MOV      r9,r0
;;;256      if (pObj->Flags & MULTIEDIT_SF_PASSWORD) {
00014e  f8950078          LDRB     r0,[r5,#0x78]
000152  f0100f20          TST      r0,#0x20
000156  d017              BEQ      |L1.392|
;;;257        int NumChars, NumCharsPrompt;
;;;258        NumCharsPrompt = _GetNumCharsInPrompt(pObj, pText);
000158  4631              MOV      r1,r6
00015a  4628              MOV      r0,r5
00015c  f7fffffe          BL       _GetNumCharsInPrompt
000160  4682              MOV      r10,r0
;;;259        NumChars = _WrapGetNumCharsDisp(hObj, pObj, pText);
000162  4632              MOV      r2,r6
000164  4629              MOV      r1,r5
000166  4640              MOV      r0,r8
000168  f7fffffe          BL       _WrapGetNumCharsDisp
00016c  4607              MOV      r7,r0
;;;260        r        = GUI_UC__NumChars2NumBytes(pText, NumChars);
00016e  4639              MOV      r1,r7
000170  4630              MOV      r0,r6
000172  f7fffffe          BL       GUI_UC__NumChars2NumBytes
000176  4604              MOV      r4,r0
;;;261        if (NumChars < NumCharsPrompt) {
000178  4557              CMP      r7,r10
00017a  da04              BGE      |L1.390|
;;;262          if (*(pText + r) == '\n') {
00017c  5d30              LDRB     r0,[r6,r4]
00017e  280a              CMP      r0,#0xa
000180  d101              BNE      |L1.390|
;;;263            r++;
000182  f1040401          ADD      r4,r4,#1
                  |L1.390|
;;;264          }
;;;265        }
;;;266      } else {
000186  e006              B        |L1.406|
                  |L1.392|
;;;267        r = GUI__WrapGetNumBytesToNextLine(pText, xSize, pObj->WrapMode);
000188  f895207c          LDRB     r2,[r5,#0x7c]
00018c  4649              MOV      r1,r9
00018e  4630              MOV      r0,r6
000190  f7fffffe          BL       GUI__WrapGetNumBytesToNextLine
000194  4604              MOV      r4,r0
                  |L1.406|
;;;268      }
;;;269      return r;
000196  4620              MOV      r0,r4
;;;270    }
000198  e8bd87f0          POP      {r4-r10,pc}
;;;271    
                          ENDP

                  _GetCharDistX PROC
;;;275    */
;;;276    static int _GetCharDistX(const MULTIEDIT_OBJ* pObj, const char* pText) {
00019c  e92d41f0          PUSH     {r4-r8,lr}
0001a0  4604              MOV      r4,r0
0001a2  460d              MOV      r5,r1
;;;277      int r;
;;;278      if ((pObj->Flags & MULTIEDIT_SF_PASSWORD) && (_GetNumCharsInPrompt(pObj, pText) == 0)) {
0001a4  f8940078          LDRB     r0,[r4,#0x78]
0001a8  f0100f20          TST      r0,#0x20
0001ac  d009              BEQ      |L1.450|
0001ae  4629              MOV      r1,r5
0001b0  4620              MOV      r0,r4
0001b2  f7fffffe          BL       _GetNumCharsInPrompt
0001b6  b920              CBNZ     r0,|L1.450|
;;;279        r = GUI_GetCharDistX(MULTIEDIT_PASSWORD_CHAR);
0001b8  202a              MOVS     r0,#0x2a
0001ba  f7fffffe          BL       GUI_GetCharDistX
0001be  4606              MOV      r6,r0
0001c0  e008              B        |L1.468|
                  |L1.450|
;;;280      } else {
;;;281        U16 c;
;;;282        c = GUI_UC_GetCharCode(pText);
0001c2  4628              MOV      r0,r5
0001c4  f7fffffe          BL       GUI_UC_GetCharCode
0001c8  4607              MOV      r7,r0
;;;283        r = GUI_GetCharDistX(c);
0001ca  4638              MOV      r0,r7
0001cc  f7fffffe          BL       GUI_GetCharDistX
0001d0  4606              MOV      r6,r0
;;;284      }
0001d2  bf00              NOP      
                  |L1.468|
;;;285      return r;
0001d4  4630              MOV      r0,r6
;;;286    }
0001d6  e8bd81f0          POP      {r4-r8,pc}
;;;287    
                          ENDP

                  _DispString PROC
;;;291    */
;;;292    static void _DispString(MULTIEDIT_HANDLE hObj, const MULTIEDIT_OBJ* pObj, const char* pText, GUI_RECT* pRect) {
0001da  e92d5ff0          PUSH     {r4-r12,lr}
0001de  4683              MOV      r11,r0
0001e0  460c              MOV      r4,r1
0001e2  4690              MOV      r8,r2
0001e4  461d              MOV      r5,r3
;;;293      int NumCharsDisp;
;;;294      NumCharsDisp = _WrapGetNumCharsDisp(hObj, pObj, pText);
0001e6  4642              MOV      r2,r8
0001e8  4621              MOV      r1,r4
0001ea  4658              MOV      r0,r11
0001ec  f7fffffe          BL       _WrapGetNumCharsDisp
0001f0  4606              MOV      r6,r0
;;;295      if (pObj->Flags & MULTIEDIT_SF_PASSWORD) {
0001f2  f8940078          LDRB     r0,[r4,#0x78]
0001f6  f0100f20          TST      r0,#0x20
0001fa  d02a              BEQ      |L1.594|
;;;296        int x, NumCharsPrompt, NumCharsLeft = 0;
0001fc  f04f0a00          MOV      r10,#0
;;;297        NumCharsPrompt = _GetNumCharsInPrompt(pObj, pText);
000200  4641              MOV      r1,r8
000202  4620              MOV      r0,r4
000204  f7fffffe          BL       _GetNumCharsInPrompt
000208  4607              MOV      r7,r0
;;;298        if (NumCharsDisp < NumCharsPrompt) {
00020a  42be              CMP      r6,r7
00020c  da01              BGE      |L1.530|
;;;299          NumCharsPrompt = NumCharsDisp;
00020e  4637              MOV      r7,r6
000210  e001              B        |L1.534|
                  |L1.530|
;;;300        } else {
;;;301          NumCharsLeft = NumCharsDisp - NumCharsPrompt;
000212  eba60a07          SUB      r10,r6,r7
                  |L1.534|
;;;302        }
;;;303        GUI_DispStringInRectMax(pText, pRect, GUI_TA_LEFT, NumCharsPrompt);
000216  463b              MOV      r3,r7
000218  2200              MOVS     r2,#0
00021a  4629              MOV      r1,r5
00021c  4640              MOV      r0,r8
00021e  f7fffffe          BL       GUI_DispStringInRectMax
;;;304        x = pRect->x0 + GUI__GetLineDistX(pText, NumCharsPrompt);
000222  4639              MOV      r1,r7
000224  4640              MOV      r0,r8
000226  f7fffffe          BL       GUI__GetLineDistX
00022a  f9b51000          LDRSH    r1,[r5,#0]
00022e  eb000901          ADD      r9,r0,r1
;;;305        if (NumCharsLeft) {
000232  f1ba0f00          CMP      r10,#0
000236  d00b              BEQ      |L1.592|
;;;306          GUI_DispCharAt(MULTIEDIT_PASSWORD_CHAR, x, pRect->y0);
000238  f9b52002          LDRSH    r2,[r5,#2]
00023c  fa0ff189          SXTH     r1,r9
000240  202a              MOVS     r0,#0x2a
000242  f7fffffe          BL       GUI_DispCharAt
;;;307          GUI_DispChars(MULTIEDIT_PASSWORD_CHAR, NumCharsLeft - 1);
000246  f1aa0101          SUB      r1,r10,#1
00024a  202a              MOVS     r0,#0x2a
00024c  f7fffffe          BL       GUI_DispChars
                  |L1.592|
;;;308        }
;;;309      } else {
000250  e006              B        |L1.608|
                  |L1.594|
;;;310        GUI_DispStringInRectMax(pText, pRect, pObj->Align, NumCharsDisp);
000252  f8b42058          LDRH     r2,[r4,#0x58]
000256  4633              MOV      r3,r6
000258  4629              MOV      r1,r5
00025a  4640              MOV      r0,r8
00025c  f7fffffe          BL       GUI_DispStringInRectMax
                  |L1.608|
;;;311      }
;;;312    }
000260  e8bd9ff0          POP      {r4-r12,pc}
;;;313    
                          ENDP

                  _GetpLine PROC
;;;326    */
;;;327    static char * _GetpLine(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj, unsigned LineNumber) {
000264  e92d41f0          PUSH     {r4-r8,lr}
000268  4680              MOV      r8,r0
00026a  460c              MOV      r4,r1
00026c  4615              MOV      r5,r2
;;;328      char * pText, * pLine;
;;;329      pText = (char*) GUI_ALLOC_h2p(pObj->hText);
00026e  f9b40038          LDRSH    r0,[r4,#0x38]
000272  f7fffffe          BL       GUI_ALLOC_h2p
000276  4607              MOV      r7,r0
;;;330      if ((unsigned)pObj->CacheLineNumber != LineNumber) {
000278  f8b40052          LDRH     r0,[r4,#0x52]
00027c  42a8              CMP      r0,r5
00027e  d021              BEQ      |L1.708|
;;;331        if (LineNumber > (unsigned)pObj->CacheLineNumber) {
000280  f8b40052          LDRH     r0,[r4,#0x52]
000284  42a8              CMP      r0,r5
000286  d20b              BCS      |L1.672|
;;;332          /* If new line number > cache we can start with old pointer */
;;;333          int OldNumber = pObj->CacheLineNumber;
000288  f1040450          ADD      r4,r4,#0x50
00028c  8860              LDRH     r0,[r4,#2]
;;;334          pLine = pText + pObj->CacheLinePosByte;
00028e  8821              LDRH     r1,[r4,#0]
000290  eb010607          ADD      r6,r1,r7
;;;335          pObj->CacheLineNumber  = LineNumber;
000294  8065              STRH     r5,[r4,#2]
000296  f1a40450          SUB      r4,r4,#0x50
;;;336          LineNumber -= OldNumber;
00029a  eba50500          SUB      r5,r5,r0
;;;337        } else {
00029e  e002              B        |L1.678|
                  |L1.672|
;;;338          /* If new line number < cache we need to start with first byte */
;;;339          pLine = pText;
0002a0  463e              MOV      r6,r7
;;;340          pObj->CacheLineNumber  = LineNumber;
0002a2  f8a45052          STRH     r5,[r4,#0x52]
                  |L1.678|
;;;341        }
;;;342        while (LineNumber--) {
0002a6  e005              B        |L1.692|
                  |L1.680|
;;;343          pLine += _WrapGetNumBytesToNextLine(hObj, pObj, pLine);
0002a8  4632              MOV      r2,r6
0002aa  4621              MOV      r1,r4
0002ac  4640              MOV      r0,r8
0002ae  f7fffffe          BL       _WrapGetNumBytesToNextLine
0002b2  4406              ADD      r6,r6,r0
                  |L1.692|
0002b4  0028              MOVS     r0,r5                 ;342
0002b6  f1a50501          SUB      r5,r5,#1              ;342
0002ba  d1f5              BNE      |L1.680|
;;;344        }
;;;345        pObj->CacheLinePosByte = pLine - pText;
0002bc  eba60007          SUB      r0,r6,r7
0002c0  f8a40050          STRH     r0,[r4,#0x50]
                  |L1.708|
;;;346      }
;;;347      return pText + pObj->CacheLinePosByte;
0002c4  f8b40050          LDRH     r0,[r4,#0x50]
0002c8  4438              ADD      r0,r0,r7
;;;348    }
0002ca  e8bd81f0          POP      {r4-r8,pc}
;;;349    
                          ENDP

                  _ClearCache PROC
;;;356    */
;;;357    static void _ClearCache(MULTIEDIT_OBJ* pObj) {
0002ce  f04f0100          MOV      r1,#0
;;;358      pObj->CacheLineNumber = 0;
0002d2  f1000050          ADD      r0,r0,#0x50
0002d6  8041              STRH     r1,[r0,#2]
;;;359      pObj->CacheLinePosByte = 0;
0002d8  8001              STRH     r1,[r0,#0]
;;;360      pObj->CacheFirstVisibleByte = 0;
0002da  80c1              STRH     r1,[r0,#6]
;;;361      pObj->CacheFirstVisibleLine = 0;
0002dc  8081              STRH     r1,[r0,#4]
0002de  f1a00050          SUB      r0,r0,#0x50
;;;362    }
0002e2  4770              BX       lr
;;;363    
                          ENDP

                  _GetCursorLine PROC
;;;369    */
;;;370    static int _GetCursorLine(MULTIEDIT_HANDLE hObj, const MULTIEDIT_OBJ* pObj, const char* pText, int CursorPosChar) {
0002e4  e92d4ff8          PUSH     {r3-r11,lr}
0002e8  4683              MOV      r11,r0
0002ea  460d              MOV      r5,r1
0002ec  4614              MOV      r4,r2
0002ee  4699              MOV      r9,r3
;;;371      const char *pCursor;
;;;372      const char *pEndLine;
;;;373      int NumChars, ByteOffsetNewCursor, LineNumber = 0;
0002f0  f04f0700          MOV      r7,#0
;;;374      ByteOffsetNewCursor = GUI_UC__NumChars2NumBytes(pText, CursorPosChar);
0002f4  4649              MOV      r1,r9
0002f6  4620              MOV      r0,r4
0002f8  f7fffffe          BL       GUI_UC__NumChars2NumBytes
0002fc  4682              MOV      r10,r0
;;;375      pCursor = pText + ByteOffsetNewCursor;
0002fe  eb04080a          ADD      r8,r4,r10
;;;376      if (pObj->CacheLinePosByte < ByteOffsetNewCursor) {
000302  f8b50050          LDRH     r0,[r5,#0x50]
000306  4550              CMP      r0,r10
000308  da05              BGE      |L1.790|
;;;377        /* If cache pos < new position we can use it as start position */
;;;378        pText      += pObj->CacheLinePosByte;
00030a  f8b50050          LDRH     r0,[r5,#0x50]
00030e  4404              ADD      r4,r4,r0
;;;379        LineNumber += pObj->CacheLineNumber;
000310  f8b50052          LDRH     r0,[r5,#0x52]
000314  4407              ADD      r7,r7,r0
                  |L1.790|
;;;380      }
;;;381      while (*pText && (pCursor > pText)) {
000316  e01e              B        |L1.854|
                  |L1.792|
;;;382        NumChars = _WrapGetNumCharsDisp(hObj, pObj, pText);
000318  4622              MOV      r2,r4
00031a  4629              MOV      r1,r5
00031c  4658              MOV      r0,r11
00031e  f7fffffe          BL       _WrapGetNumCharsDisp
000322  9000              STR      r0,[sp,#0]
;;;383        pEndLine = pText + GUI_UC__NumChars2NumBytes(pText, NumChars);
000324  4620              MOV      r0,r4
000326  9900              LDR      r1,[sp,#0]
000328  f7fffffe          BL       GUI_UC__NumChars2NumBytes
00032c  eb000604          ADD      r6,r0,r4
;;;384        pText   += _WrapGetNumBytesToNextLine(hObj, pObj, pText);
000330  4622              MOV      r2,r4
000332  4629              MOV      r1,r5
000334  4658              MOV      r0,r11
000336  f7fffffe          BL       _WrapGetNumBytesToNextLine
00033a  4404              ADD      r4,r4,r0
;;;385        if (pCursor <= pEndLine) {
00033c  45b0              CMP      r8,r6
00033e  d808              BHI      |L1.850|
;;;386          if ((pCursor == pEndLine) && (pEndLine == pText) && *pText) {
000340  45b0              CMP      r8,r6
000342  d105              BNE      |L1.848|
000344  42a6              CMP      r6,r4
000346  d103              BNE      |L1.848|
000348  7820              LDRB     r0,[r4,#0]
00034a  b108              CBZ      r0,|L1.848|
;;;387            LineNumber++;
00034c  f1070701          ADD      r7,r7,#1
                  |L1.848|
;;;388          }
;;;389          break;
000350  e005              B        |L1.862|
                  |L1.850|
;;;390        }
;;;391        LineNumber++;
000352  f1070701          ADD      r7,r7,#1
                  |L1.854|
000356  7820              LDRB     r0,[r4,#0]            ;381
000358  b108              CBZ      r0,|L1.862|
00035a  45a0              CMP      r8,r4                 ;381
00035c  d8dc              BHI      |L1.792|
                  |L1.862|
00035e  bf00              NOP                            ;389
;;;392      }
;;;393      return LineNumber;
000360  4638              MOV      r0,r7
;;;394    }
000362  e8bd8ff8          POP      {r3-r11,pc}
;;;395    
                          ENDP

                  _GetCursorXY PROC
;;;399    */
;;;400    static void _GetCursorXY(MULTIEDIT_HANDLE hObj, /*const*/ MULTIEDIT_OBJ* pObj, int* px, int* py) {
000366  e92d4fff          PUSH     {r0-r11,lr}
00036a  b083              SUB      sp,sp,#0xc
00036c  460c              MOV      r4,r1
00036e  4617              MOV      r7,r2
000370  4698              MOV      r8,r3
;;;401      if (pObj->InvalidFlags & INVALID_CURSORXY) {
000372  f8940079          LDRB     r0,[r4,#0x79]
000376  f0100f08          TST      r0,#8
00037a  d066              BEQ      |L1.1098|
;;;402        int CursorLine = 0, x = 0;
00037c  f04f0900          MOV      r9,#0
000380  464e              MOV      r6,r9
;;;403        GUI_SetFont(pObj->pFont);
000382  6f60              LDR      r0,[r4,#0x74]
000384  f7fffffe          BL       GUI_SetFont
;;;404        if (pObj->hText) {
000388  8f20              LDRH     r0,[r4,#0x38]
00038a  2800              CMP      r0,#0
00038c  d04d              BEQ      |L1.1066|
;;;405          const char *pLine;
;;;406          const char *pCursor;
;;;407          pLine      = (const char *)GUI_ALLOC_h2p(pObj->hText);
00038e  f9b40038          LDRSH    r0,[r4,#0x38]
000392  f7fffffe          BL       GUI_ALLOC_h2p
000396  4605              MOV      r5,r0
;;;408          pCursor    = pLine + pObj->CursorPosByte;
000398  f8b4004a          LDRH     r0,[r4,#0x4a]
00039c  eb000a05          ADD      r10,r0,r5
;;;409          CursorLine = pObj->CursorLine;
0003a0  f8b49046          LDRH     r9,[r4,#0x46]
;;;410          pLine      = _GetpLine(hObj, pObj, CursorLine);
0003a4  464a              MOV      r2,r9
0003a6  4621              MOV      r1,r4
0003a8  9803              LDR      r0,[sp,#0xc]
0003aa  f7fffffe          BL       _GetpLine
0003ae  4605              MOV      r5,r0
;;;411          if ((pObj->Flags & MULTIEDIT_SF_PASSWORD)) {
0003b0  f8940078          LDRB     r0,[r4,#0x78]
0003b4  f0100f20          TST      r0,#0x20
0003b8  d00c              BEQ      |L1.980|
;;;412            while (pLine < pCursor) {
0003ba  e008              B        |L1.974|
                  |L1.956|
;;;413              x     += _GetCharDistX(pObj, pLine);
0003bc  4629              MOV      r1,r5
0003be  4620              MOV      r0,r4
0003c0  f7fffffe          BL       _GetCharDistX
0003c4  4406              ADD      r6,r6,r0
;;;414              pLine += GUI_UC_GetCharSize(pLine);
0003c6  4628              MOV      r0,r5
0003c8  f7fffffe          BL       GUI_UC_GetCharSize
0003cc  4405              ADD      r5,r5,r0
                  |L1.974|
0003ce  4555              CMP      r5,r10                ;412
0003d0  d3f4              BCC      |L1.956|
0003d2  e029              B        |L1.1064|
                  |L1.980|
;;;415            }
;;;416          } else {
;;;417            int xSize;
;;;418            const char *p;
;;;419            int NumChars = 0, NumCharsToNextLine;
0003d4  f04f0b00          MOV      r11,#0
;;;420            xSize = _GetXSize(hObj, pObj);
0003d8  4621              MOV      r1,r4
0003da  9803              LDR      r0,[sp,#0xc]
0003dc  f7fffffe          BL       _GetXSize
0003e0  9002              STR      r0,[sp,#8]
;;;421            p = pLine;
0003e2  9501              STR      r5,[sp,#4]
;;;422            while (pLine < pCursor) {
0003e4  e005              B        |L1.1010|
                  |L1.998|
;;;423              NumChars++;
0003e6  f10b0b01          ADD      r11,r11,#1
;;;424              pLine += GUI_UC_GetCharSize(pLine);
0003ea  4628              MOV      r0,r5
0003ec  f7fffffe          BL       GUI_UC_GetCharSize
0003f0  4405              ADD      r5,r5,r0
                  |L1.1010|
0003f2  4555              CMP      r5,r10                ;422
0003f4  d3f7              BCC      |L1.998|
;;;425            }
;;;426            NumCharsToNextLine = _WrapGetNumCharsDisp(hObj, pObj, p);
0003f6  4621              MOV      r1,r4
0003f8  9a01              LDR      r2,[sp,#4]
0003fa  9803              LDR      r0,[sp,#0xc]
0003fc  f7fffffe          BL       _WrapGetNumCharsDisp
000400  9000              STR      r0,[sp,#0]
;;;427            x = GUI__GetCursorPosX(p, NumChars, NumCharsToNextLine);
000402  4659              MOV      r1,r11
000404  e9dd2000          LDRD     r2,r0,[sp,#0]
000408  f7fffffe          BL       GUI__GetCursorPosX
00040c  4606              MOV      r6,r0
;;;428            if (pObj->Align == GUI_TA_RIGHT) {
00040e  f8b40058          LDRH     r0,[r4,#0x58]
000412  2801              CMP      r0,#1
000414  d107              BNE      |L1.1062|
;;;429              x += xSize - GUI__GetLineDistX(p, NumCharsToNextLine);
000416  e9dd1000          LDRD     r1,r0,[sp,#0]
00041a  f7fffffe          BL       GUI__GetLineDistX
00041e  9902              LDR      r1,[sp,#8]
000420  eba10000          SUB      r0,r1,r0
000424  4406              ADD      r6,r6,r0
                  |L1.1062|
;;;430            }
;;;431          }
000426  bf00              NOP      
                  |L1.1064|
;;;432        }
000428  bf00              NOP      
                  |L1.1066|
;;;433        pObj->CursorPosX = x;
00042a  b230              SXTH     r0,r6
00042c  f8a4004c          STRH     r0,[r4,#0x4c]
;;;434        pObj->CursorPosY = CursorLine * GUI_GetFontDistY();
000430  f7fffffe          BL       GUI_GetFontDistY
000434  fb00f009          MUL      r0,r0,r9
000438  f8a4004e          STRH     r0,[r4,#0x4e]
;;;435        pObj->InvalidFlags &= ~INVALID_CURSORXY;
00043c  f8940079          LDRB     r0,[r4,#0x79]
000440  f0200008          BIC      r0,r0,#8
000444  f8840079          STRB     r0,[r4,#0x79]
;;;436      }
000448  bf00              NOP      
                  |L1.1098|
;;;437      *px = pObj->CursorPosX;
00044a  f9b4004c          LDRSH    r0,[r4,#0x4c]
00044e  6038              STR      r0,[r7,#0]
;;;438      *py = pObj->CursorPosY;
000450  f8b4004e          LDRH     r0,[r4,#0x4e]
000454  f8c80000          STR      r0,[r8,#0]
;;;439    }
000458  b007              ADD      sp,sp,#0x1c
00045a  e8bd8ff0          POP      {r4-r11,pc}
;;;440    
                          ENDP

                  _InvalidateCursorXY PROC
;;;444    */
;;;445    static void _InvalidateCursorXY(MULTIEDIT_OBJ * pObj) {
00045e  f8901079          LDRB     r1,[r0,#0x79]
;;;446      pObj->InvalidFlags |= INVALID_CURSORXY;
000462  f0410108          ORR      r1,r1,#8
000466  f8801079          STRB     r1,[r0,#0x79]
;;;447    }
00046a  4770              BX       lr
;;;448    
                          ENDP

                  _SetScrollState PROC
;;;452    */
;;;453    static void _SetScrollState(WM_HWIN hObj) {
00046c  b570              PUSH     {r4-r6,lr}
00046e  4605              MOV      r5,r0
;;;454      MULTIEDIT_OBJ* pObj = MULTIEDIT_H2P(hObj);
000470  4628              MOV      r0,r5
000472  f7fffffe          BL       GUI_ALLOC_h2p
000476  4604              MOV      r4,r0
;;;455      WIDGET__SetScrollState(hObj, &pObj->ScrollStateV, &pObj->ScrollStateH);
000478  f1040268          ADD      r2,r4,#0x68
00047c  f104015c          ADD      r1,r4,#0x5c
000480  4628              MOV      r0,r5
000482  f7fffffe          BL       WIDGET__SetScrollState
;;;456    }
000486  bd70              POP      {r4-r6,pc}
;;;457    
                          ENDP

                  _CalcScrollPos PROC
;;;467    */
;;;468    static void _CalcScrollPos(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj) {
000488  b57c              PUSH     {r2-r6,lr}
00048a  4605              MOV      r5,r0
00048c  460c              MOV      r4,r1
;;;469      int xCursor, yCursor;
;;;470      _GetCursorXY(hObj, pObj, &xCursor, &yCursor);
00048e  466b              MOV      r3,sp
000490  aa01              ADD      r2,sp,#4
000492  4621              MOV      r1,r4
000494  4628              MOV      r0,r5
000496  f7fffffe          BL       _GetCursorXY
;;;471      yCursor /= GUI_GetYDistOfFont(pObj->pFont);
00049a  6f60              LDR      r0,[r4,#0x74]
00049c  f7fffffe          BL       GUI_GetYDistOfFont
0004a0  9900              LDR      r1,[sp,#0]
0004a2  fb91f0f0          SDIV     r0,r1,r0
0004a6  9000              STR      r0,[sp,#0]
;;;472      WM_CheckScrollPos(&pObj->ScrollStateV, yCursor, 0, 0);       /* Vertical */
0004a8  2300              MOVS     r3,#0
0004aa  461a              MOV      r2,r3
0004ac  f104005c          ADD      r0,r4,#0x5c
0004b0  9900              LDR      r1,[sp,#0]
0004b2  f7fffffe          BL       WM_CheckScrollPos
;;;473      if (pObj->Align == GUI_TA_RIGHT) {
0004b6  f8b40058          LDRH     r0,[r4,#0x58]
0004ba  2801              CMP      r0,#1
0004bc  d107              BNE      |L1.1230|
;;;474        xCursor = _GetXSize(hObj, pObj) - xCursor;
0004be  4621              MOV      r1,r4
0004c0  4628              MOV      r0,r5
0004c2  f7fffffe          BL       _GetXSize
0004c6  9901              LDR      r1,[sp,#4]
0004c8  eba00001          SUB      r0,r0,r1
0004cc  9001              STR      r0,[sp,#4]
                  |L1.1230|
;;;475      }
;;;476      WM_CheckScrollPos(&pObj->ScrollStateH, xCursor, 30, 30);     /* Horizontal */
0004ce  231e              MOVS     r3,#0x1e
0004d0  461a              MOV      r2,r3
0004d2  f1040068          ADD      r0,r4,#0x68
0004d6  9901              LDR      r1,[sp,#4]
0004d8  f7fffffe          BL       WM_CheckScrollPos
;;;477      _SetScrollState(hObj);
0004dc  4628              MOV      r0,r5
0004de  f7fffffe          BL       _SetScrollState
;;;478    }
0004e2  bd7c              POP      {r2-r6,pc}
;;;479    
                          ENDP

                  _GetTextSizeX PROC
;;;485    */
;;;486    static int _GetTextSizeX(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj) {
0004e4  e92d47f0          PUSH     {r4-r10,lr}
0004e8  4681              MOV      r9,r0
0004ea  460c              MOV      r4,r1
;;;487      if (pObj->InvalidFlags & INVALID_TEXTSIZE) {
0004ec  f8940079          LDRB     r0,[r4,#0x79]
0004f0  f0100f04          TST      r0,#4
0004f4  d048              BEQ      |L1.1416|
;;;488        pObj->TextSizeX = 0;
0004f6  f04f0000          MOV      r0,#0
0004fa  f8a40042          STRH     r0,[r4,#0x42]
;;;489        if (pObj->hText) {
0004fe  8f20              LDRH     r0,[r4,#0x38]
000500  2800              CMP      r0,#0
000502  d03b              BEQ      |L1.1404|
;;;490          int NumChars, xSizeLine;
;;;491          char *pText, *pLine;
;;;492          GUI_SetFont(pObj->pFont);
000504  6f60              LDR      r0,[r4,#0x74]
000506  f7fffffe          BL       GUI_SetFont
;;;493          pText = (char*) GUI_ALLOC_h2p(pObj->hText);
00050a  f9b40038          LDRSH    r0,[r4,#0x38]
00050e  f7fffffe          BL       GUI_ALLOC_h2p
000512  4606              MOV      r6,r0
;;;494          do {
000514  bf00              NOP      
                  |L1.1302|
;;;495            NumChars = _WrapGetNumCharsDisp(hObj, pObj, pText);
000516  4632              MOV      r2,r6
000518  4621              MOV      r1,r4
00051a  4648              MOV      r0,r9
00051c  f7fffffe          BL       _WrapGetNumCharsDisp
000520  4680              MOV      r8,r0
;;;496            xSizeLine = 0;
000522  f04f0500          MOV      r5,#0
;;;497            pLine = pText;
000526  4637              MOV      r7,r6
;;;498            if (pObj->Flags & MULTIEDIT_SF_PASSWORD) {
000528  f8940078          LDRB     r0,[r4,#0x78]
00052c  f0100f20          TST      r0,#0x20
000530  d00f              BEQ      |L1.1362|
;;;499              while (NumChars--) {
000532  e008              B        |L1.1350|
                  |L1.1332|
;;;500                xSizeLine += _GetCharDistX(pObj, pLine);
000534  4639              MOV      r1,r7
000536  4620              MOV      r0,r4
000538  f7fffffe          BL       _GetCharDistX
00053c  4405              ADD      r5,r5,r0
;;;501                pLine     += GUI_UC_GetCharSize(pLine);
00053e  4638              MOV      r0,r7
000540  f7fffffe          BL       GUI_UC_GetCharSize
000544  4407              ADD      r7,r7,r0
                  |L1.1350|
000546  ea5f0008          MOVS     r0,r8                 ;499
00054a  f1a80801          SUB      r8,r8,#1              ;499
00054e  d1f1              BNE      |L1.1332|
000550  e004              B        |L1.1372|
                  |L1.1362|
;;;502              }
;;;503            } else {
;;;504              xSizeLine += GUI__GetLineDistX(pLine, NumChars);
000552  4641              MOV      r1,r8
000554  4638              MOV      r0,r7
000556  f7fffffe          BL       GUI__GetLineDistX
00055a  4405              ADD      r5,r5,r0
                  |L1.1372|
;;;505            }
;;;506            if (xSizeLine > pObj->TextSizeX) {
00055c  f8b40042          LDRH     r0,[r4,#0x42]
000560  42a8              CMP      r0,r5
000562  da01              BGE      |L1.1384|
;;;507              pObj->TextSizeX = xSizeLine;
000564  f8a45042          STRH     r5,[r4,#0x42]
                  |L1.1384|
;;;508            }
;;;509            pText += _WrapGetNumBytesToNextLine(hObj, pObj, pText);
000568  4632              MOV      r2,r6
00056a  4621              MOV      r1,r4
00056c  4648              MOV      r0,r9
00056e  f7fffffe          BL       _WrapGetNumBytesToNextLine
000572  4406              ADD      r6,r6,r0
;;;510          } while (*pText);
000574  7830              LDRB     r0,[r6,#0]
000576  2800              CMP      r0,#0
000578  d1cd              BNE      |L1.1302|
;;;511        }
00057a  bf00              NOP      
                  |L1.1404|
;;;512        pObj->InvalidFlags &= ~INVALID_TEXTSIZE;
00057c  f8940079          LDRB     r0,[r4,#0x79]
000580  f0200004          BIC      r0,r0,#4
000584  f8840079          STRB     r0,[r4,#0x79]
                  |L1.1416|
;;;513      }
;;;514      return pObj->TextSizeX;
000588  f8b40042          LDRH     r0,[r4,#0x42]
;;;515    }
00058c  e8bd87f0          POP      {r4-r10,pc}
;;;516    
                          ENDP

                  _GetNumVisLines PROC
;;;520    */
;;;521    static int _GetNumVisLines(MULTIEDIT_HANDLE hObj, const MULTIEDIT_OBJ* pObj) {
000590  b57c              PUSH     {r2-r6,lr}
000592  4605              MOV      r5,r0
000594  460c              MOV      r4,r1
;;;522      GUI_RECT Rect;
;;;523      WM_GetInsideRectExScrollbar(hObj, &Rect);
000596  4669              MOV      r1,sp
000598  4628              MOV      r0,r5
00059a  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;524      return (Rect.y1 - Rect.y0 + 1) / GUI_GetYDistOfFont(pObj->pFont);
00059e  6f60              LDR      r0,[r4,#0x74]
0005a0  f7fffffe          BL       GUI_GetYDistOfFont
0005a4  f9bd1006          LDRSH    r1,[sp,#6]
0005a8  f9bd2002          LDRSH    r2,[sp,#2]
0005ac  1a89              SUBS     r1,r1,r2
0005ae  1c49              ADDS     r1,r1,#1
0005b0  fb91f0f0          SDIV     r0,r1,r0
;;;525    }
0005b4  bd7c              POP      {r2-r6,pc}
;;;526    
                          ENDP

                  _GetNumLines PROC
;;;532    */
;;;533    static int _GetNumLines(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ * pObj) {
0005b6  e92d47f0          PUSH     {r4-r10,lr}
0005ba  4681              MOV      r9,r0
0005bc  460c              MOV      r4,r1
;;;534      if (pObj->InvalidFlags & INVALID_NUMLINES) {
0005be  f8940079          LDRB     r0,[r4,#0x79]
0005c2  f0100f02          TST      r0,#2
0005c6  d033              BEQ      |L1.1584|
;;;535        int NumLines = 0;
0005c8  f04f0700          MOV      r7,#0
;;;536        if (pObj->hText) {
0005cc  8f20              LDRH     r0,[r4,#0x38]
0005ce  b320              CBZ      r0,|L1.1562|
;;;537          int NumChars, NumBytes;
;;;538          char *pText;
;;;539          U16 Char;
;;;540          pText = (char*) GUI_ALLOC_h2p(pObj->hText);
0005d0  f9b40038          LDRSH    r0,[r4,#0x38]
0005d4  f7fffffe          BL       GUI_ALLOC_h2p
0005d8  4605              MOV      r5,r0
;;;541          GUI_SetFont(pObj->pFont);
0005da  6f60              LDR      r0,[r4,#0x74]
0005dc  f7fffffe          BL       GUI_SetFont
;;;542          do {
0005e0  bf00              NOP      
                  |L1.1506|
;;;543            NumChars = _WrapGetNumCharsDisp(hObj, pObj, pText);
0005e2  462a              MOV      r2,r5
0005e4  4621              MOV      r1,r4
0005e6  4648              MOV      r0,r9
0005e8  f7fffffe          BL       _WrapGetNumCharsDisp
0005ec  4682              MOV      r10,r0
;;;544            NumBytes = GUI_UC__NumChars2NumBytes(pText, NumChars);
0005ee  4651              MOV      r1,r10
0005f0  4628              MOV      r0,r5
0005f2  f7fffffe          BL       GUI_UC__NumChars2NumBytes
0005f6  4680              MOV      r8,r0
;;;545            Char     = GUI_UC_GetCharCode(pText + NumBytes);
0005f8  eb050008          ADD      r0,r5,r8
0005fc  f7fffffe          BL       GUI_UC_GetCharCode
000600  4606              MOV      r6,r0
;;;546            if (Char) {
000602  b10e              CBZ      r6,|L1.1544|
;;;547              NumLines++;
000604  f1070701          ADD      r7,r7,#1
                  |L1.1544|
;;;548            }
;;;549            pText += _WrapGetNumBytesToNextLine(hObj, pObj, pText);
000608  462a              MOV      r2,r5
00060a  4621              MOV      r1,r4
00060c  4648              MOV      r0,r9
00060e  f7fffffe          BL       _WrapGetNumBytesToNextLine
000612  4405              ADD      r5,r5,r0
;;;550          } while (Char);
000614  2e00              CMP      r6,#0
000616  d1e4              BNE      |L1.1506|
;;;551        }
000618  bf00              NOP      
                  |L1.1562|
;;;552        pObj->NumLines = NumLines + 1;
00061a  f1070001          ADD      r0,r7,#1
00061e  f8a40040          STRH     r0,[r4,#0x40]
;;;553        pObj->InvalidFlags &= ~INVALID_NUMLINES;
000622  f8940079          LDRB     r0,[r4,#0x79]
000626  f0200002          BIC      r0,r0,#2
00062a  f8840079          STRB     r0,[r4,#0x79]
;;;554      }
00062e  bf00              NOP      
                  |L1.1584|
;;;555      return pObj->NumLines;
000630  f8b40040          LDRH     r0,[r4,#0x40]
;;;556    }
000634  e8bd87f0          POP      {r4-r10,pc}
;;;557    
                          ENDP

                  _InvalidateNumLines PROC
;;;563    */
;;;564    static void _InvalidateNumLines(MULTIEDIT_OBJ * pObj) {
000638  f8901079          LDRB     r1,[r0,#0x79]
;;;565      pObj->InvalidFlags |= INVALID_NUMLINES;
00063c  f0410102          ORR      r1,r1,#2
000640  f8801079          STRB     r1,[r0,#0x79]
;;;566    }
000644  4770              BX       lr
;;;567    
                          ENDP

                  _InvalidateTextSizeX PROC
;;;573    */
;;;574    static void _InvalidateTextSizeX(MULTIEDIT_OBJ * pObj) {
000646  f8901079          LDRB     r1,[r0,#0x79]
;;;575      pObj->InvalidFlags |= INVALID_TEXTSIZE;
00064a  f0410104          ORR      r1,r1,#4
00064e  f8801079          STRB     r1,[r0,#0x79]
;;;576    }
000652  4770              BX       lr
;;;577    
                          ENDP

                  _CalcScrollParas PROC
;;;584    */
;;;585    static void _CalcScrollParas(MULTIEDIT_HANDLE hObj) {
000654  b570              PUSH     {r4-r6,lr}
000656  4605              MOV      r5,r0
;;;586      MULTIEDIT_OBJ* pObj = MULTIEDIT_H2P(hObj);
000658  4628              MOV      r0,r5
00065a  f7fffffe          BL       GUI_ALLOC_h2p
00065e  4604              MOV      r4,r0
;;;587      /* Calc vertical scroll parameters */
;;;588      pObj->ScrollStateV.NumItems = _GetNumLines(hObj, pObj);
000660  4621              MOV      r1,r4
000662  4628              MOV      r0,r5
000664  f7fffffe          BL       _GetNumLines
000668  65e0              STR      r0,[r4,#0x5c]
;;;589      pObj->ScrollStateV.PageSize = _GetNumVisLines(hObj, pObj);
00066a  4621              MOV      r1,r4
00066c  4628              MOV      r0,r5
00066e  f7fffffe          BL       _GetNumVisLines
000672  6660              STR      r0,[r4,#0x64]
;;;590      /* Calc horizontal scroll parameters */
;;;591      pObj->ScrollStateH.NumItems = _GetTextSizeX(hObj, pObj);
000674  4621              MOV      r1,r4
000676  4628              MOV      r0,r5
000678  f7fffffe          BL       _GetTextSizeX
00067c  66a0              STR      r0,[r4,#0x68]
;;;592      pObj->ScrollStateH.PageSize = _GetXSize(hObj, pObj);
00067e  4621              MOV      r1,r4
000680  4628              MOV      r0,r5
000682  f7fffffe          BL       _GetXSize
000686  6720              STR      r0,[r4,#0x70]
;;;593      _CalcScrollPos(hObj, pObj);
000688  4621              MOV      r1,r4
00068a  4628              MOV      r0,r5
00068c  f7fffffe          BL       _CalcScrollPos
;;;594    }
000690  bd70              POP      {r4-r6,pc}
;;;595    
                          ENDP

                  _ManageAutoScrollV PROC
;;;599    */
;;;600    static void _ManageAutoScrollV(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj) {
000692  e92d41f0          PUSH     {r4-r8,lr}
000696  4606              MOV      r6,r0
000698  460c              MOV      r4,r1
;;;601      if (pObj->Flags & MULTIEDIT_SF_AUTOSCROLLBAR_V) {
00069a  f8940078          LDRB     r0,[r4,#0x78]
00069e  f0100f08          TST      r0,#8
0006a2  d023              BEQ      |L1.1772|
;;;602        char IsRequired = _GetNumVisLines(hObj, pObj) < _GetNumLines(hObj, pObj);
0006a4  4621              MOV      r1,r4
0006a6  4630              MOV      r0,r6
0006a8  f7fffffe          BL       _GetNumVisLines
0006ac  4607              MOV      r7,r0
0006ae  4621              MOV      r1,r4
0006b0  4630              MOV      r0,r6
0006b2  f7fffffe          BL       _GetNumLines
0006b6  4287              CMP      r7,r0
0006b8  da02              BGE      |L1.1728|
0006ba  f04f0001          MOV      r0,#1
0006be  e001              B        |L1.1732|
                  |L1.1728|
0006c0  f04f0000          MOV      r0,#0
                  |L1.1732|
0006c4  4605              MOV      r5,r0
;;;603        if (WM_SetScrollbarV(hObj, IsRequired) != IsRequired) {
0006c6  4629              MOV      r1,r5
0006c8  4630              MOV      r0,r6
0006ca  f7fffffe          BL       WM_SetScrollbarV
0006ce  42a8              CMP      r0,r5
0006d0  d00b              BEQ      |L1.1770|
;;;604          _InvalidateNumLines(pObj);
0006d2  4620              MOV      r0,r4
0006d4  f7fffffe          BL       _InvalidateNumLines
;;;605          _InvalidateTextSizeX(pObj);
0006d8  4620              MOV      r0,r4
0006da  f7fffffe          BL       _InvalidateTextSizeX
;;;606          _InvalidateCursorXY(pObj);
0006de  4620              MOV      r0,r4
0006e0  f7fffffe          BL       _InvalidateCursorXY
;;;607          _ClearCache(pObj);
0006e4  4620              MOV      r0,r4
0006e6  f7fffffe          BL       _ClearCache
                  |L1.1770|
;;;608        }
;;;609      }
0006ea  bf00              NOP      
                  |L1.1772|
;;;610    }
0006ec  e8bd81f0          POP      {r4-r8,pc}
;;;611    
                          ENDP

                  _ManageScrollers PROC
;;;621    */
;;;622    static void _ManageScrollers(MULTIEDIT_HANDLE hObj) {
0006f0  e92d41f0          PUSH     {r4-r8,lr}
0006f4  4606              MOV      r6,r0
;;;623      MULTIEDIT_OBJ* pObj;
;;;624      pObj = MULTIEDIT_H2P(hObj);
0006f6  4630              MOV      r0,r6
0006f8  f7fffffe          BL       GUI_ALLOC_h2p
0006fc  4604              MOV      r4,r0
;;;625      /* 1. Step: Check if vertical scrollbar is required */
;;;626      _ManageAutoScrollV(hObj, pObj);
0006fe  4621              MOV      r1,r4
000700  4630              MOV      r0,r6
000702  f7fffffe          BL       _ManageAutoScrollV
;;;627      /* 2. Step: Check if horizontal scrollbar is required */
;;;628      if (pObj->Flags & MULTIEDIT_SF_AUTOSCROLLBAR_H) {
000706  f8940078          LDRB     r0,[r4,#0x78]
00070a  f0100f10          TST      r0,#0x10
00070e  d01b              BEQ      |L1.1864|
;;;629        char IsRequired;
;;;630        IsRequired = (_GetXSize(hObj, pObj) < _GetTextSizeX(hObj, pObj));
000710  4621              MOV      r1,r4
000712  4630              MOV      r0,r6
000714  f7fffffe          BL       _GetXSize
000718  4607              MOV      r7,r0
00071a  4621              MOV      r1,r4
00071c  4630              MOV      r0,r6
00071e  f7fffffe          BL       _GetTextSizeX
000722  4287              CMP      r7,r0
000724  da02              BGE      |L1.1836|
000726  f04f0001          MOV      r0,#1
00072a  e001              B        |L1.1840|
                  |L1.1836|
00072c  f04f0000          MOV      r0,#0
                  |L1.1840|
000730  4605              MOV      r5,r0
;;;631        if (WM_SetScrollbarH(hObj, IsRequired) != IsRequired) {
000732  4629              MOV      r1,r5
000734  4630              MOV      r0,r6
000736  f7fffffe          BL       WM_SetScrollbarH
00073a  42a8              CMP      r0,r5
00073c  d003              BEQ      |L1.1862|
;;;632          /* 3. Step: Check vertical scrollbar again if horizontal has changed */
;;;633          _ManageAutoScrollV(hObj, pObj);
00073e  4621              MOV      r1,r4
000740  4630              MOV      r0,r6
000742  f7fffffe          BL       _ManageAutoScrollV
                  |L1.1862|
;;;634        }
;;;635      }
000746  bf00              NOP      
                  |L1.1864|
;;;636      _CalcScrollParas(hObj);
000748  4630              MOV      r0,r6
00074a  f7fffffe          BL       _CalcScrollParas
;;;637    }
00074e  e8bd81f0          POP      {r4-r8,pc}
;;;638    
                          ENDP

                  _Invalidate PROC
;;;642    */
;;;643    static void _Invalidate(MULTIEDIT_HANDLE hObj) {
000752  b510              PUSH     {r4,lr}
000754  4604              MOV      r4,r0
;;;644      _ManageScrollers(hObj);
000756  4620              MOV      r0,r4
000758  f7fffffe          BL       _ManageScrollers
;;;645      WM_Invalidate(hObj);
00075c  4620              MOV      r0,r4
00075e  f7fffffe          BL       WM_InvalidateWindow
;;;646    }
000762  bd10              POP      {r4,pc}
;;;647    
                          ENDP

                  _InvalidateTextArea PROC
;;;653    */
;;;654    static void _InvalidateTextArea(MULTIEDIT_HANDLE hObj) {
000764  b51c              PUSH     {r2-r4,lr}
000766  4604              MOV      r4,r0
;;;655      GUI_RECT rInsideRect;
;;;656      _ManageScrollers(hObj);
000768  4620              MOV      r0,r4
00076a  f7fffffe          BL       _ManageScrollers
;;;657      WM_GetInsideRectExScrollbar(hObj, &rInsideRect);
00076e  4669              MOV      r1,sp
000770  4620              MOV      r0,r4
000772  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;658      WM_InvalidateRect(hObj, &rInsideRect);
000776  4669              MOV      r1,sp
000778  4620              MOV      r0,r4
00077a  f7fffffe          BL       WM_InvalidateRect
;;;659    }
00077e  bd1c              POP      {r2-r4,pc}
;;;660    
                          ENDP

                  _InvalidateCursorPos PROC
;;;666    */
;;;667    static int _InvalidateCursorPos(MULTIEDIT_OBJ * pObj) {
000780  4601              MOV      r1,r0
;;;668      int Value;
;;;669      Value = pObj->CursorPosChar;
000782  f8b10048          LDRH     r0,[r1,#0x48]
;;;670      pObj->CursorPosChar = 0xffff;
000786  f64f72ff          MOV      r2,#0xffff
00078a  f8a12048          STRH     r2,[r1,#0x48]
;;;671      return Value;
;;;672    }
00078e  4770              BX       lr
;;;673    
                          ENDP

                  _SetFlag PROC
;;;677    */
;;;678    static void _SetFlag(MULTIEDIT_HANDLE hObj, int OnOff, U8 Flag) {
000790  e92d41f0          PUSH     {r4-r8,lr}
000794  4606              MOV      r6,r0
000796  460f              MOV      r7,r1
000798  4615              MOV      r5,r2
;;;679      if (hObj) {
00079a  b1ae              CBZ      r6,|L1.1992|
;;;680        MULTIEDIT_OBJ * pObj;
;;;681        WM_LOCK();
;;;682        pObj = MULTIEDIT_H2P(hObj);
00079c  4630              MOV      r0,r6
00079e  f7fffffe          BL       GUI_ALLOC_h2p
0007a2  4604              MOV      r4,r0
;;;683        if (OnOff) {
0007a4  b137              CBZ      r7,|L1.1972|
;;;684          pObj->Flags |= Flag;
0007a6  f8940078          LDRB     r0,[r4,#0x78]
0007aa  ea400005          ORR      r0,r0,r5
0007ae  f8840078          STRB     r0,[r4,#0x78]
0007b2  e005              B        |L1.1984|
                  |L1.1972|
;;;685        } else {
;;;686          pObj->Flags &= ~Flag;
0007b4  f8940078          LDRB     r0,[r4,#0x78]
0007b8  ea200005          BIC      r0,r0,r5
0007bc  f8840078          STRB     r0,[r4,#0x78]
                  |L1.1984|
;;;687        }
;;;688        _InvalidateTextArea(hObj);
0007c0  4630              MOV      r0,r6
0007c2  f7fffffe          BL       _InvalidateTextArea
;;;689        WM_UNLOCK();
;;;690      }
0007c6  bf00              NOP      
                  |L1.1992|
;;;691    }
0007c8  e8bd81f0          POP      {r4-r8,pc}
;;;692    
                          ENDP

                  _CalcNextValidCursorPos PROC
;;;705    */
;;;706    static int _CalcNextValidCursorPos(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj, int CursorPosChar, int * pCursorPosByte, int * pCursorLine) {
0007cc  e92d4fff          PUSH     {r0-r11,lr}
0007d0  b083              SUB      sp,sp,#0xc
0007d2  460c              MOV      r4,r1
0007d4  4615              MOV      r5,r2
0007d6  469a              MOV      r10,r3
;;;707      if (pObj->hText) {
0007d8  8f20              LDRH     r0,[r4,#0x38]
0007da  2800              CMP      r0,#0
0007dc  d062              BEQ      |L1.2212|
;;;708        char *pNextLine, *pCursor, *pText;
;;;709        int CursorLine, NumChars, CursorPosByte;
;;;710        pText    = (char*) GUI_ALLOC_h2p(pObj->hText);
0007de  f9b40038          LDRSH    r0,[r4,#0x38]
0007e2  f7fffffe          BL       GUI_ALLOC_h2p
0007e6  4607              MOV      r7,r0
;;;711        NumChars = _GetNumChars(pObj);
0007e8  4620              MOV      r0,r4
0007ea  f7fffffe          BL       _GetNumChars
0007ee  9002              STR      r0,[sp,#8]
;;;712        /* Set offset in valid range */
;;;713        if (CursorPosChar < pObj->NumCharsPrompt) {
0007f0  8fe0              LDRH     r0,[r4,#0x3e]
0007f2  42a8              CMP      r0,r5
0007f4  dd00              BLE      |L1.2040|
;;;714          CursorPosChar = pObj->NumCharsPrompt;
0007f6  8fe5              LDRH     r5,[r4,#0x3e]
                  |L1.2040|
;;;715        }
;;;716        if (CursorPosChar > NumChars) {
0007f8  9802              LDR      r0,[sp,#8]
0007fa  4285              CMP      r5,r0
0007fc  dd00              BLE      |L1.2048|
;;;717          CursorPosChar = NumChars;
0007fe  9d02              LDR      r5,[sp,#8]
                  |L1.2048|
;;;718        }
;;;719        CursorPosByte = GUI_UC__NumChars2NumBytes(pText, CursorPosChar);
000800  4629              MOV      r1,r5
000802  4638              MOV      r0,r7
000804  f7fffffe          BL       GUI_UC__NumChars2NumBytes
000808  9001              STR      r0,[sp,#4]
;;;720        CursorLine    = _GetCursorLine(hObj, pObj, pText, CursorPosChar);
00080a  462b              MOV      r3,r5
00080c  463a              MOV      r2,r7
00080e  4621              MOV      r1,r4
000810  9803              LDR      r0,[sp,#0xc]
000812  f7fffffe          BL       _GetCursorLine
000816  4680              MOV      r8,r0
;;;721        pCursor       = pText + CursorPosByte;
000818  9801              LDR      r0,[sp,#4]
00081a  eb070b00          ADD      r11,r7,r0
;;;722        pNextLine     = _GetpLine(hObj, pObj, CursorLine);
00081e  4642              MOV      r2,r8
000820  4621              MOV      r1,r4
000822  9803              LDR      r0,[sp,#0xc]
000824  f7fffffe          BL       _GetpLine
000828  4606              MOV      r6,r0
;;;723        if (pNextLine > pCursor) {
00082a  455e              CMP      r6,r11
00082c  d92b              BLS      |L1.2182|
;;;724          if (pObj->CursorPosChar < CursorPosChar) {
00082e  f8b40048          LDRH     r0,[r4,#0x48]
000832  42a8              CMP      r0,r5
000834  da01              BGE      |L1.2106|
;;;725            pCursor = pNextLine;
000836  46b3              MOV      r11,r6
000838  e013              B        |L1.2146|
                  |L1.2106|
;;;726          } else {
;;;727            char *pPrevLine;
;;;728            int NumChars;
;;;729            pPrevLine  = _GetpLine(hObj, pObj, CursorLine - 1);
00083a  f1a80201          SUB      r2,r8,#1
00083e  4621              MOV      r1,r4
000840  9803              LDR      r0,[sp,#0xc]
000842  f7fffffe          BL       _GetpLine
000846  4681              MOV      r9,r0
;;;730            NumChars   = _WrapGetNumCharsDisp(hObj, pObj, pPrevLine);
000848  464a              MOV      r2,r9
00084a  4621              MOV      r1,r4
00084c  9803              LDR      r0,[sp,#0xc]
00084e  f7fffffe          BL       _WrapGetNumCharsDisp
000852  9000              STR      r0,[sp,#0]
;;;731            pPrevLine += GUI_UC__NumChars2NumBytes(pPrevLine, NumChars);
000854  4648              MOV      r0,r9
000856  9900              LDR      r1,[sp,#0]
000858  f7fffffe          BL       GUI_UC__NumChars2NumBytes
00085c  4481              ADD      r9,r9,r0
;;;732            pCursor = pPrevLine;
00085e  46cb              MOV      r11,r9
;;;733          }
000860  bf00              NOP      
                  |L1.2146|
;;;734          CursorPosChar = GUI_UC__NumBytes2NumChars(pText, pCursor - pText);
000862  ebab0107          SUB      r1,r11,r7
000866  4638              MOV      r0,r7
000868  f7fffffe          BL       GUI_UC__NumBytes2NumChars
00086c  4605              MOV      r5,r0
;;;735          CursorPosByte = GUI_UC__NumChars2NumBytes(pText, CursorPosChar);
00086e  4629              MOV      r1,r5
000870  4638              MOV      r0,r7
000872  f7fffffe          BL       GUI_UC__NumChars2NumBytes
000876  9001              STR      r0,[sp,#4]
;;;736          CursorLine    = _GetCursorLine(hObj, pObj, pText, CursorPosChar);
000878  462b              MOV      r3,r5
00087a  463a              MOV      r2,r7
00087c  4621              MOV      r1,r4
00087e  9803              LDR      r0,[sp,#0xc]
000880  f7fffffe          BL       _GetCursorLine
000884  4680              MOV      r8,r0
                  |L1.2182|
;;;737        }
;;;738        if (pCursorPosByte) {
000886  f1ba0f00          CMP      r10,#0
00088a  d002              BEQ      |L1.2194|
;;;739          *pCursorPosByte = CursorPosByte;
00088c  9801              LDR      r0,[sp,#4]
00088e  f8ca0000          STR      r0,[r10,#0]
                  |L1.2194|
;;;740        }
;;;741        if (pCursorLine) {
000892  9810              LDR      r0,[sp,#0x40]
000894  b110              CBZ      r0,|L1.2204|
;;;742          *pCursorLine = CursorLine;
000896  9810              LDR      r0,[sp,#0x40]
000898  f8c08000          STR      r8,[r0,#0]
                  |L1.2204|
;;;743        }
;;;744        return CursorPosChar;
00089c  4628              MOV      r0,r5
                  |L1.2206|
;;;745      }
;;;746      return 0;
;;;747    }
00089e  b007              ADD      sp,sp,#0x1c
0008a0  e8bd8ff0          POP      {r4-r11,pc}
                  |L1.2212|
0008a4  2000              MOVS     r0,#0                 ;746
0008a6  e7fa              B        |L1.2206|
;;;748    
                          ENDP

                  _SetCursorPos PROC
;;;754    */
;;;755    static void _SetCursorPos(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj, int CursorPosChar) {
0008a8  b5fe              PUSH     {r1-r7,lr}
0008aa  4606              MOV      r6,r0
0008ac  460c              MOV      r4,r1
0008ae  4615              MOV      r5,r2
;;;756      int CursorPosByte, CursorLine;
;;;757      CursorPosChar = _CalcNextValidCursorPos(hObj, pObj, CursorPosChar, &CursorPosByte, &CursorLine);
0008b0  a801              ADD      r0,sp,#4
0008b2  ab02              ADD      r3,sp,#8
0008b4  462a              MOV      r2,r5
0008b6  4621              MOV      r1,r4
0008b8  9000              STR      r0,[sp,#0]
0008ba  4630              MOV      r0,r6
0008bc  f7fffffe          BL       _CalcNextValidCursorPos
0008c0  4605              MOV      r5,r0
;;;758      /* Assign value and recalc whatever necessary */
;;;759      if (pObj->CursorPosChar != CursorPosChar) {
0008c2  f8b40048          LDRH     r0,[r4,#0x48]
0008c6  42a8              CMP      r0,r5
0008c8  d00e              BEQ      |L1.2280|
;;;760        /* Save values */
;;;761        pObj->CursorPosByte = CursorPosByte;
0008ca  f1040446          ADD      r4,r4,#0x46
0008ce  9802              LDR      r0,[sp,#8]
0008d0  80a0              STRH     r0,[r4,#4]
;;;762        pObj->CursorPosChar = CursorPosChar;
0008d2  8065              STRH     r5,[r4,#2]
;;;763        pObj->CursorLine = CursorLine;
0008d4  9801              LDR      r0,[sp,#4]
0008d6  f8240946          STRH     r0,[r4],#-0x46
;;;764        _InvalidateCursorXY(pObj); /* Invalidate X/Y position */
0008da  4620              MOV      r0,r4
0008dc  f7fffffe          BL       _InvalidateCursorXY
;;;765        _CalcScrollPos(hObj, pObj);
0008e0  4621              MOV      r1,r4
0008e2  4630              MOV      r0,r6
0008e4  f7fffffe          BL       _CalcScrollPos
                  |L1.2280|
;;;766      }
;;;767    }
0008e8  bdfe              POP      {r1-r7,pc}
;;;768    
                          ENDP

                  _SetWrapMode PROC
;;;772    */
;;;773    static int _SetWrapMode(MULTIEDIT_HANDLE hObj, GUI_WRAPMODE WrapMode) {
0008ea  e92d41f0          PUSH     {r4-r8,lr}
0008ee  4606              MOV      r6,r0
0008f0  460d              MOV      r5,r1
;;;774      int r;
;;;775      r = 0;
0008f2  f04f0700          MOV      r7,#0
;;;776      if (hObj) {
0008f6  b316              CBZ      r6,|L1.2366|
;;;777        MULTIEDIT_OBJ * pObj;
;;;778        WM_LOCK();
;;;779        pObj = MULTIEDIT_H2P(hObj);
0008f8  4630              MOV      r0,r6
0008fa  f7fffffe          BL       GUI_ALLOC_h2p
0008fe  4604              MOV      r4,r0
;;;780        r = pObj->WrapMode;
000900  f894707c          LDRB     r7,[r4,#0x7c]
;;;781        if (pObj->WrapMode != WrapMode) {
000904  f894007c          LDRB     r0,[r4,#0x7c]
000908  42a8              CMP      r0,r5
00090a  d017              BEQ      |L1.2364|
;;;782          int Position;
;;;783          pObj->WrapMode = WrapMode;
00090c  f884507c          STRB     r5,[r4,#0x7c]
;;;784          _ClearCache(pObj);
000910  4620              MOV      r0,r4
000912  f7fffffe          BL       _ClearCache
;;;785          _InvalidateNumLines(pObj);
000916  4620              MOV      r0,r4
000918  f7fffffe          BL       _InvalidateNumLines
;;;786          _InvalidateTextSizeX(pObj);
00091c  4620              MOV      r0,r4
00091e  f7fffffe          BL       _InvalidateTextSizeX
;;;787          _InvalidateTextArea(hObj);
000922  4630              MOV      r0,r6
000924  f7fffffe          BL       _InvalidateTextArea
;;;788          Position = _InvalidateCursorPos(pObj);
000928  4620              MOV      r0,r4
00092a  f7fffffe          BL       _InvalidateCursorPos
00092e  4680              MOV      r8,r0
;;;789          _SetCursorPos(hObj, pObj, Position);
000930  4642              MOV      r2,r8
000932  4621              MOV      r1,r4
000934  4630              MOV      r0,r6
000936  f7fffffe          BL       _SetCursorPos
;;;790        }
00093a  bf00              NOP      
                  |L1.2364|
;;;791        WM_UNLOCK();
;;;792      }
00093c  bf00              NOP      
                  |L1.2366|
;;;793      return r;
00093e  4638              MOV      r0,r7
;;;794    }
000940  e8bd81f0          POP      {r4-r8,pc}
;;;795    
                          ENDP

                  _SetCursorXY PROC
;;;801    */
;;;802    static void _SetCursorXY(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj, int x, int y) {
000944  e92d4fff          PUSH     {r0-r11,lr}
000948  b083              SUB      sp,sp,#0xc
00094a  460c              MOV      r4,r1
00094c  4615              MOV      r5,r2
00094e  4699              MOV      r9,r3
;;;803      int CursorPosChar = 0;
000950  f04f0000          MOV      r0,#0
000954  9002              STR      r0,[sp,#8]
;;;804      if ((x < 0) || (y < 0)) {
000956  2d00              CMP      r5,#0
000958  db02              BLT      |L1.2400|
00095a  f1b90f00          CMP      r9,#0
00095e  da02              BGE      |L1.2406|
                  |L1.2400|
;;;805        return;
;;;806      }
;;;807      if (pObj->hText) {
;;;808        char *pLine, *pText;
;;;809        int CursorLine, WrapChars;
;;;810        int SizeX = 0;
;;;811        U16 Char;
;;;812        GUI_SetFont(pObj->pFont);
;;;813        CursorLine = y / GUI_GetFontDistY();
;;;814        pLine      = _GetpLine(hObj, pObj, CursorLine);
;;;815        pText      = (char*) GUI_ALLOC_h2p(pObj->hText);
;;;816        WrapChars  = _WrapGetNumCharsDisp(hObj, pObj, pLine);
;;;817        Char       = GUI_UC__GetCharCode(pLine + GUI_UC__NumChars2NumBytes(pLine, WrapChars));
;;;818        if (pObj->Flags & MULTIEDIT_SF_PASSWORD) {
;;;819          if (!Char) {
;;;820            WrapChars++;
;;;821          }
;;;822        } else {
;;;823          if (!Char || (Char == '\n') || ((Char == ' ') && (pObj->WrapMode == GUI_WRAPMODE_WORD))) {
;;;824            WrapChars++;
;;;825          }
;;;826        }
;;;827        if (pObj->Align == GUI_TA_RIGHT) {
;;;828          x -= _GetXSize(hObj, pObj) - GUI__GetLineDistX(pLine, WrapChars);
;;;829          x -= pObj->ScrollStateH.v << 1;
;;;830          if (x < 0) {
;;;831            x = 0;
;;;832          }
;;;833        }
;;;834    
;;;835        if (pObj->Flags & MULTIEDIT_SF_PASSWORD) {
;;;836          while (--WrapChars > 0) {
;;;837            Char   = GUI_UC_GetCharCode(pLine);
;;;838            SizeX += _GetCharDistX(pObj, pLine);
;;;839            if (!Char || (SizeX > x)) {
;;;840              break;
;;;841            }
;;;842            pLine += GUI_UC_GetCharSize(pLine);
;;;843          }
;;;844          CursorPosChar = GUI_UC__NumBytes2NumChars(pText, pLine - pText);
;;;845        } else {
;;;846          CursorPosChar = GUI_UC__NumBytes2NumChars(pText, pLine - pText) + GUI__GetCursorPosChar(pLine, x, WrapChars);
;;;847        }
;;;848      }
;;;849      _SetCursorPos(hObj, pObj, CursorPosChar);
;;;850    }
000960  b007              ADD      sp,sp,#0x1c
000962  e8bd8ff0          POP      {r4-r11,pc}
                  |L1.2406|
000966  8f20              LDRH     r0,[r4,#0x38]         ;807
000968  2800              CMP      r0,#0                 ;807
00096a  d06f              BEQ      |L1.2636|
00096c  f04f0000          MOV      r0,#0                 ;810
000970  9000              STR      r0,[sp,#0]            ;810
000972  6f60              LDR      r0,[r4,#0x74]         ;812
000974  f7fffffe          BL       GUI_SetFont
000978  f7fffffe          BL       GUI_GetFontDistY
00097c  fb99f0f0          SDIV     r0,r9,r0              ;813
000980  9001              STR      r0,[sp,#4]            ;813
000982  4621              MOV      r1,r4                 ;814
000984  9a01              LDR      r2,[sp,#4]            ;814
000986  9803              LDR      r0,[sp,#0xc]          ;814
000988  f7fffffe          BL       _GetpLine
00098c  4606              MOV      r6,r0                 ;814
00098e  f9b40038          LDRSH    r0,[r4,#0x38]         ;815
000992  f7fffffe          BL       GUI_ALLOC_h2p
000996  4682              MOV      r10,r0                ;815
000998  4632              MOV      r2,r6                 ;816
00099a  4621              MOV      r1,r4                 ;816
00099c  9803              LDR      r0,[sp,#0xc]          ;816
00099e  f7fffffe          BL       _WrapGetNumCharsDisp
0009a2  4607              MOV      r7,r0                 ;816
0009a4  4639              MOV      r1,r7                 ;817
0009a6  4630              MOV      r0,r6                 ;817
0009a8  f7fffffe          BL       GUI_UC__NumChars2NumBytes
0009ac  eb000b06          ADD      r11,r0,r6             ;817
0009b0  4658              MOV      r0,r11                ;817
0009b2  f7fffffe          BL       GUI_UC_GetCharCode
0009b6  4680              MOV      r8,r0                 ;817
0009b8  f8940078          LDRB     r0,[r4,#0x78]         ;818
0009bc  f0100f20          TST      r0,#0x20              ;818
0009c0  d005              BEQ      |L1.2510|
0009c2  f1b80f00          CMP      r8,#0                 ;819
0009c6  d111              BNE      |L1.2540|
0009c8  f1070701          ADD      r7,r7,#1              ;820
0009cc  e00e              B        |L1.2540|
                  |L1.2510|
0009ce  f1b80f00          CMP      r8,#0                 ;823
0009d2  d009              BEQ      |L1.2536|
0009d4  f1b80f0a          CMP      r8,#0xa               ;823
0009d8  d006              BEQ      |L1.2536|
0009da  f1b80f20          CMP      r8,#0x20              ;823
0009de  d105              BNE      |L1.2540|
0009e0  f894007c          LDRB     r0,[r4,#0x7c]         ;823
0009e4  2801              CMP      r0,#1                 ;823
0009e6  d101              BNE      |L1.2540|
                  |L1.2536|
0009e8  f1070701          ADD      r7,r7,#1              ;824
                  |L1.2540|
0009ec  f8b40058          LDRH     r0,[r4,#0x58]         ;827
0009f0  2801              CMP      r0,#1                 ;827
0009f2  d113              BNE      |L1.2588|
0009f4  4621              MOV      r1,r4                 ;828
0009f6  9803              LDR      r0,[sp,#0xc]          ;828
0009f8  f7fffffe          BL       _GetXSize
0009fc  4683              MOV      r11,r0                ;828
0009fe  4639              MOV      r1,r7                 ;828
000a00  4630              MOV      r0,r6                 ;828
000a02  f7fffffe          BL       GUI__GetLineDistX
000a06  ebab0000          SUB      r0,r11,r0             ;828
000a0a  eba50500          SUB      r5,r5,r0              ;828
000a0e  6ee0              LDR      r0,[r4,#0x6c]         ;829
000a10  eba50540          SUB      r5,r5,r0,LSL #1       ;829
000a14  2d00              CMP      r5,#0                 ;830
000a16  da01              BGE      |L1.2588|
000a18  f04f0500          MOV      r5,#0                 ;831
                  |L1.2588|
000a1c  f8940078          LDRB     r0,[r4,#0x78]         ;835
000a20  f0100f20          TST      r0,#0x20              ;835
000a24  d022              BEQ      |L1.2668|
000a26  e016              B        |L1.2646|
                  |L1.2600|
000a28  4630              MOV      r0,r6                 ;837
000a2a  f7fffffe          BL       GUI_UC_GetCharCode
000a2e  4680              MOV      r8,r0                 ;837
000a30  4631              MOV      r1,r6                 ;838
000a32  4620              MOV      r0,r4                 ;838
000a34  f7fffffe          BL       _GetCharDistX
000a38  9900              LDR      r1,[sp,#0]            ;838
000a3a  4408              ADD      r0,r0,r1              ;838
000a3c  9000              STR      r0,[sp,#0]            ;838
000a3e  f1b80f00          CMP      r8,#0                 ;839
000a42  d002              BEQ      |L1.2634|
000a44  9800              LDR      r0,[sp,#0]            ;839
000a46  42a8              CMP      r0,r5                 ;839
000a48  dd01              BLE      |L1.2638|
                  |L1.2634|
000a4a  e007              B        |L1.2652|
                  |L1.2636|
000a4c  e01c              B        |L1.2696|
                  |L1.2638|
000a4e  4630              MOV      r0,r6                 ;842
000a50  f7fffffe          BL       GUI_UC_GetCharSize
000a54  4406              ADD      r6,r6,r0              ;842
                  |L1.2646|
000a56  1e78              SUBS     r0,r7,#1              ;836
000a58  1e07              SUBS     r7,r0,#0              ;836
000a5a  dce5              BGT      |L1.2600|
                  |L1.2652|
000a5c  bf00              NOP                            ;840
000a5e  eba6010a          SUB      r1,r6,r10             ;844
000a62  4650              MOV      r0,r10                ;844
000a64  f7fffffe          BL       GUI_UC__NumBytes2NumChars
000a68  9002              STR      r0,[sp,#8]            ;844
000a6a  e00c              B        |L1.2694|
                  |L1.2668|
000a6c  eba6010a          SUB      r1,r6,r10             ;846
000a70  4650              MOV      r0,r10                ;846
000a72  f7fffffe          BL       GUI_UC__NumBytes2NumChars
000a76  4683              MOV      r11,r0                ;846
000a78  463a              MOV      r2,r7                 ;846
000a7a  4629              MOV      r1,r5                 ;846
000a7c  4630              MOV      r0,r6                 ;846
000a7e  f7fffffe          BL       GUI__GetCursorPosChar
000a82  4458              ADD      r0,r0,r11             ;846
000a84  9002              STR      r0,[sp,#8]            ;846
                  |L1.2694|
000a86  bf00              NOP                            ;848
                  |L1.2696|
000a88  4621              MOV      r1,r4                 ;849
000a8a  e9dd2002          LDRD     r2,r0,[sp,#8]         ;849
000a8e  f7fffffe          BL       _SetCursorPos
000a92  bf00              NOP      
000a94  e764              B        |L1.2400|
;;;851    
                          ENDP

                  _MoveCursorUp PROC
;;;855    */
;;;856    static void _MoveCursorUp(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj) {
000a96  b57c              PUSH     {r2-r6,lr}
000a98  4605              MOV      r5,r0
000a9a  460c              MOV      r4,r1
;;;857      int xPos, yPos;
;;;858      _GetCursorXY(hObj, pObj, &xPos, &yPos);
000a9c  466b              MOV      r3,sp
000a9e  aa01              ADD      r2,sp,#4
000aa0  4621              MOV      r1,r4
000aa2  4628              MOV      r0,r5
000aa4  f7fffffe          BL       _GetCursorXY
;;;859      yPos -= GUI_GetYDistOfFont(pObj->pFont);
000aa8  6f60              LDR      r0,[r4,#0x74]
000aaa  f7fffffe          BL       GUI_GetYDistOfFont
000aae  9900              LDR      r1,[sp,#0]
000ab0  eba10000          SUB      r0,r1,r0
000ab4  9000              STR      r0,[sp,#0]
;;;860      _SetCursorXY(hObj, pObj, xPos, yPos);
000ab6  4621              MOV      r1,r4
000ab8  4628              MOV      r0,r5
000aba  e9dd3200          LDRD     r3,r2,[sp,#0]
000abe  f7fffffe          BL       _SetCursorXY
;;;861    }
000ac2  bd7c              POP      {r2-r6,pc}
;;;862    
                          ENDP

                  _MoveCursorDown PROC
;;;866    */
;;;867    static void _MoveCursorDown(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj) {
000ac4  b57c              PUSH     {r2-r6,lr}
000ac6  4605              MOV      r5,r0
000ac8  460c              MOV      r4,r1
;;;868      int xPos, yPos;
;;;869      _GetCursorXY(hObj, pObj, &xPos, &yPos);
000aca  466b              MOV      r3,sp
000acc  aa01              ADD      r2,sp,#4
000ace  4621              MOV      r1,r4
000ad0  4628              MOV      r0,r5
000ad2  f7fffffe          BL       _GetCursorXY
;;;870      yPos += GUI_GetYDistOfFont(pObj->pFont);
000ad6  6f60              LDR      r0,[r4,#0x74]
000ad8  f7fffffe          BL       GUI_GetYDistOfFont
000adc  9900              LDR      r1,[sp,#0]
000ade  4408              ADD      r0,r0,r1
000ae0  9000              STR      r0,[sp,#0]
;;;871      _SetCursorXY(hObj, pObj, xPos, yPos);
000ae2  4621              MOV      r1,r4
000ae4  4628              MOV      r0,r5
000ae6  e9dd3200          LDRD     r3,r2,[sp,#0]
000aea  f7fffffe          BL       _SetCursorXY
;;;872    }
000aee  bd7c              POP      {r2-r6,pc}
;;;873    
                          ENDP

                  _MoveCursor2NextLine PROC
;;;877    */
;;;878    static void _MoveCursor2NextLine(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj) {
000af0  b57c              PUSH     {r2-r6,lr}
000af2  4605              MOV      r5,r0
000af4  460c              MOV      r4,r1
;;;879      int xPos, yPos;
;;;880      _GetCursorXY(hObj, pObj, &xPos, &yPos);
000af6  466b              MOV      r3,sp
000af8  aa01              ADD      r2,sp,#4
000afa  4621              MOV      r1,r4
000afc  4628              MOV      r0,r5
000afe  f7fffffe          BL       _GetCursorXY
;;;881      yPos += GUI_GetYDistOfFont(pObj->pFont);
000b02  6f60              LDR      r0,[r4,#0x74]
000b04  f7fffffe          BL       GUI_GetYDistOfFont
000b08  9900              LDR      r1,[sp,#0]
000b0a  4408              ADD      r0,r0,r1
000b0c  9000              STR      r0,[sp,#0]
;;;882      _SetCursorXY(hObj, pObj, 0, yPos);
000b0e  f04f0200          MOV      r2,#0
000b12  4621              MOV      r1,r4
000b14  4628              MOV      r0,r5
000b16  9b00              LDR      r3,[sp,#0]
000b18  f7fffffe          BL       _SetCursorXY
;;;883    }
000b1c  bd7c              POP      {r2-r6,pc}
;;;884    
                          ENDP

                  _MoveCursor2LineEnd PROC
;;;888    */
;;;889    static void _MoveCursor2LineEnd(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj) {
000b1e  b57c              PUSH     {r2-r6,lr}
000b20  4604              MOV      r4,r0
000b22  460d              MOV      r5,r1
;;;890      int xPos, yPos;
;;;891      _GetCursorXY(hObj, pObj, &xPos, &yPos);
000b24  466b              MOV      r3,sp
000b26  aa01              ADD      r2,sp,#4
000b28  4629              MOV      r1,r5
000b2a  4620              MOV      r0,r4
000b2c  f7fffffe          BL       _GetCursorXY
;;;892      _SetCursorXY(hObj, pObj, 0x7FFF, yPos);
000b30  f64772ff          MOV      r2,#0x7fff
000b34  4629              MOV      r1,r5
000b36  4620              MOV      r0,r4
000b38  9b00              LDR      r3,[sp,#0]
000b3a  f7fffffe          BL       _SetCursorXY
;;;893    }
000b3e  bd7c              POP      {r2-r6,pc}
;;;894    
                          ENDP

                  _MoveCursor2LinePos1 PROC
;;;898    */
;;;899    static void _MoveCursor2LinePos1(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj) {
000b40  b57c              PUSH     {r2-r6,lr}
000b42  4604              MOV      r4,r0
000b44  460d              MOV      r5,r1
;;;900      int xPos, yPos;
;;;901      _GetCursorXY(hObj, pObj, &xPos, &yPos);
000b46  466b              MOV      r3,sp
000b48  aa01              ADD      r2,sp,#4
000b4a  4629              MOV      r1,r5
000b4c  4620              MOV      r0,r4
000b4e  f7fffffe          BL       _GetCursorXY
;;;902      _SetCursorXY(hObj, pObj, 0, yPos);
000b52  2200              MOVS     r2,#0
000b54  4629              MOV      r1,r5
000b56  4620              MOV      r0,r4
000b58  9b00              LDR      r3,[sp,#0]
000b5a  f7fffffe          BL       _SetCursorXY
;;;903    }
000b5e  bd7c              POP      {r2-r6,pc}
;;;904    
                          ENDP

                  _IsOverwriteAtThisChar PROC
;;;908    */
;;;909    static int _IsOverwriteAtThisChar(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj) {
000b60  e92d4ff8          PUSH     {r3-r11,lr}
000b64  4607              MOV      r7,r0
000b66  460c              MOV      r4,r1
;;;910      int r = 0;
000b68  f04f0800          MOV      r8,#0
;;;911      if (pObj->hText && !(pObj->Flags & MULTIEDIT_CF_INSERT)) {
000b6c  8f20              LDRH     r0,[r4,#0x38]
000b6e  2800              CMP      r0,#0
000b70  d03b              BEQ      |L1.3050|
000b72  f8940078          LDRB     r0,[r4,#0x78]
000b76  f0100f04          TST      r0,#4
000b7a  d136              BNE      |L1.3050|
;;;912        const char *pText;
;;;913        int CurPos, Line1, Line2;
;;;914        U16 Char;
;;;915        pText  = (const char *)GUI_ALLOC_h2p(pObj->hText);
000b7c  f9b40038          LDRSH    r0,[r4,#0x38]
000b80  f7fffffe          BL       GUI_ALLOC_h2p
000b84  4605              MOV      r5,r0
;;;916        Line1  = pObj->CursorLine;
000b86  f8b4a046          LDRH     r10,[r4,#0x46]
;;;917        CurPos = _CalcNextValidCursorPos(hObj, pObj, pObj->CursorPosChar + 1, 0, 0);
000b8a  4640              MOV      r0,r8
000b8c  9000              STR      r0,[sp,#0]
000b8e  f8b40048          LDRH     r0,[r4,#0x48]
000b92  f1000201          ADD      r2,r0,#1
000b96  4643              MOV      r3,r8
000b98  4621              MOV      r1,r4
000b9a  4638              MOV      r0,r7
000b9c  f7fffffe          BL       _CalcNextValidCursorPos
000ba0  4681              MOV      r9,r0
;;;918        Line2  = _GetCursorLine(hObj, pObj, pText, CurPos);
000ba2  464b              MOV      r3,r9
000ba4  462a              MOV      r2,r5
000ba6  4621              MOV      r1,r4
000ba8  4638              MOV      r0,r7
000baa  f7fffffe          BL       _GetCursorLine
000bae  4683              MOV      r11,r0
;;;919        pText += pObj->CursorPosByte;
000bb0  f8b4004a          LDRH     r0,[r4,#0x4a]
000bb4  4405              ADD      r5,r5,r0
;;;920        Char   = GUI_UC_GetCharCode(pText);
000bb6  4628              MOV      r0,r5
000bb8  f7fffffe          BL       GUI_UC_GetCharCode
000bbc  4606              MOV      r6,r0
;;;921        if (Char) {
000bbe  b19e              CBZ      r6,|L1.3048|
;;;922          if ((Line1 == Line2) || (pObj->Flags & MULTIEDIT_SF_PASSWORD)) {
000bc0  45da              CMP      r10,r11
000bc2  d004              BEQ      |L1.3022|
000bc4  f8940078          LDRB     r0,[r4,#0x78]
000bc8  f0100f20          TST      r0,#0x20
000bcc  d002              BEQ      |L1.3028|
                  |L1.3022|
;;;923            r = 1;
000bce  f04f0801          MOV      r8,#1
000bd2  e009              B        |L1.3048|
                  |L1.3028|
;;;924          } else {
;;;925            if (Char != '\n') {
000bd4  2e0a              CMP      r6,#0xa
000bd6  d007              BEQ      |L1.3048|
;;;926              if ((Char != ' ') || (pObj->WrapMode == GUI_WRAPMODE_CHAR)) {
000bd8  2e20              CMP      r6,#0x20
000bda  d103              BNE      |L1.3044|
000bdc  f894007c          LDRB     r0,[r4,#0x7c]
000be0  2802              CMP      r0,#2
000be2  d101              BNE      |L1.3048|
                  |L1.3044|
;;;927                r = 1;
000be4  f04f0801          MOV      r8,#1
                  |L1.3048|
;;;928              }
;;;929            }
;;;930          }
;;;931        }
;;;932      }
000be8  bf00              NOP      
                  |L1.3050|
;;;933      return r;
000bea  4640              MOV      r0,r8
;;;934    }
000bec  e8bd8ff8          POP      {r3-r11,pc}
;;;935    
                          ENDP

                  _GetCursorSizeX PROC
;;;942    */
;;;943    static int _GetCursorSizeX(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj, int * pIsRTL) {
000bf0  e92d41f0          PUSH     {r4-r8,lr}
000bf4  4607              MOV      r7,r0
000bf6  460c              MOV      r4,r1
000bf8  4615              MOV      r5,r2
;;;944      if (_IsOverwriteAtThisChar(hObj, pObj)) {
000bfa  4621              MOV      r1,r4
000bfc  4638              MOV      r0,r7
000bfe  f7fffffe          BL       _IsOverwriteAtThisChar
000c02  b180              CBZ      r0,|L1.3110|
;;;945        #if (GUI_SUPPORT_ARABIC)
;;;946          if (pObj->Flags & MULTIEDIT_SF_PASSWORD) {
;;;947            const char *pText;
;;;948            pText  = (const char *)GUI_ALLOC_h2p(pObj->hText);
;;;949            pText += pObj->CursorPosByte;
;;;950            return _GetCharDistX(pObj, pText);
;;;951          } else {
;;;952            const char * pText;
;;;953            U16 Prev = 0, Char, Next = 0, Glyph;
;;;954            pText = (const char *)GUI_ALLOC_h2p(pObj->hText);
;;;955            if (pObj->CursorPosChar) {
;;;956              int NumChars = pObj->CursorPosChar;
;;;957              while (--NumChars) {
;;;958                pText += GUI_UC_GetCharSize(pText);
;;;959              }
;;;960              Prev = GUI_UC__GetCharCodeInc(&pText);
;;;961              Char = GUI_UC__GetCharCodeInc(&pText);
;;;962            } else {
;;;963              pText += pObj->CursorPosByte;
;;;964              Char = GUI_UC__GetCharCodeInc(&pText);
;;;965            }
;;;966            if (pObj->CursorPosChar < (pObj->NumChars - 1)) {
;;;967              Next = GUI_UC_GetCharCode(pText);
;;;968            }
;;;969            Glyph = GUI__GetPresentationForm(Char, Next, Prev, 0);
;;;970            if (Char != 0x20) {
;;;971              *pIsRTL = GUI__IsArabicCharacter(Char) ? 1 : 0;
;;;972            } else {
;;;973              *pIsRTL = GUI__IsArabicCharacter(Prev) ? 1 : 0;
;;;974            }
;;;975            return GUI_GetCharDistX(Glyph);
;;;976          }
;;;977        #else
;;;978          const char *pText;
;;;979          *pIsRTL = 0;
000c04  f04f0000          MOV      r0,#0
000c08  6028              STR      r0,[r5,#0]
;;;980          pText  = (const char *)GUI_ALLOC_h2p(pObj->hText);
000c0a  f9b40038          LDRSH    r0,[r4,#0x38]
000c0e  f7fffffe          BL       GUI_ALLOC_h2p
000c12  4606              MOV      r6,r0
;;;981          pText += pObj->CursorPosByte;
000c14  f8b4004a          LDRH     r0,[r4,#0x4a]
000c18  4406              ADD      r6,r6,r0
;;;982          return _GetCharDistX(pObj, pText);
000c1a  4631              MOV      r1,r6
000c1c  4620              MOV      r0,r4
000c1e  f7fffffe          BL       _GetCharDistX
                  |L1.3106|
;;;983        #endif
;;;984      } else {
;;;985        #if (GUI_SUPPORT_ARABIC)
;;;986          const char * pText;
;;;987          U16 Prev = 0, Char;
;;;988          pText = (const char *)GUI_ALLOC_h2p(pObj->hText);
;;;989          if (pObj->CursorPosChar) {
;;;990            int NumChars = pObj->CursorPosChar;
;;;991            while (--NumChars) {
;;;992              pText += GUI_UC_GetCharSize(pText);
;;;993            }
;;;994            Prev = GUI_UC__GetCharCodeInc(&pText);
;;;995            Char = GUI_UC_GetCharCode(pText);
;;;996          } else {
;;;997            pText += pObj->CursorPosByte;
;;;998            Char = GUI_UC_GetCharCode(pText);
;;;999          }
;;;1000         if (Char != 0x20) {
;;;1001           *pIsRTL = GUI__IsArabicCharacter(Char) ? 1 : 0;
;;;1002         } else {
;;;1003           *pIsRTL = GUI__IsArabicCharacter(Prev) ? 1 : 0;
;;;1004         }
;;;1005       #endif
;;;1006       return 2;
;;;1007     }
;;;1008   }
000c22  e8bd81f0          POP      {r4-r8,pc}
                  |L1.3110|
000c26  2002              MOVS     r0,#2                 ;1006
000c28  e7fb              B        |L1.3106|
;;;1009   
                          ENDP

                  _IncrementBuffer PROC
;;;1021   */
;;;1022   static int _IncrementBuffer(MULTIEDIT_OBJ* pObj, unsigned AddBytes) {
000c2a  e92d41f0          PUSH     {r4-r8,lr}
000c2e  4604              MOV      r4,r0
000c30  460e              MOV      r6,r1
;;;1023     WM_HMEM hNew;
;;;1024     int NewSize;
;;;1025     NewSize = pObj->BufferSize + AddBytes;
000c32  f8b40044          LDRH     r0,[r4,#0x44]
000c36  eb000706          ADD      r7,r0,r6
;;;1026     hNew    = GUI_ALLOC_Realloc(pObj->hText, NewSize);
000c3a  f9b40038          LDRSH    r0,[r4,#0x38]
000c3e  4639              MOV      r1,r7
000c40  f7fffffe          BL       GUI_ALLOC_Realloc
000c44  4605              MOV      r5,r0
;;;1027     if (hNew) {
000c46  b185              CBZ      r5,|L1.3178|
;;;1028       if (!(pObj->hText)) {
000c48  8f20              LDRH     r0,[r4,#0x38]
000c4a  b940              CBNZ     r0,|L1.3166|
;;;1029         char* pText;
;;;1030         pText  = (char*) GUI_ALLOC_h2p(hNew);
000c4c  4628              MOV      r0,r5
000c4e  f7fffffe          BL       GUI_ALLOC_h2p
000c52  4680              MOV      r8,r0
;;;1031         *pText = 0;
000c54  f04f0000          MOV      r0,#0
000c58  f8880000          STRB     r0,[r8,#0]
;;;1032       }
000c5c  bf00              NOP      
                  |L1.3166|
;;;1033       pObj->BufferSize = NewSize;
000c5e  f8a47044          STRH     r7,[r4,#0x44]
;;;1034       pObj->hText = hNew;
000c62  8725              STRH     r5,[r4,#0x38]
;;;1035       return 1;
000c64  2001              MOVS     r0,#1
                  |L1.3174|
;;;1036     }
;;;1037     return 0;
;;;1038   }
000c66  e8bd81f0          POP      {r4-r8,pc}
                  |L1.3178|
000c6a  2000              MOVS     r0,#0                 ;1037
000c6c  e7fb              B        |L1.3174|
;;;1039   
                          ENDP

                  _IsSpaceInBuffer PROC
;;;1050   */
;;;1051   static int _IsSpaceInBuffer(MULTIEDIT_OBJ* pObj, int BytesNeeded) {
000c6e  e92d41f0          PUSH     {r4-r8,lr}
000c72  4604              MOV      r4,r0
000c74  460d              MOV      r5,r1
;;;1052     int NumBytes = 0;
000c76  f04f0600          MOV      r6,#0
;;;1053     if (pObj->hText) {
000c7a  8f20              LDRH     r0,[r4,#0x38]
000c7c  b138              CBZ      r0,|L1.3214|
;;;1054       NumBytes = strlen((char*)GUI_ALLOC_h2p(pObj->hText));
000c7e  f9b40038          LDRSH    r0,[r4,#0x38]
000c82  f7fffffe          BL       GUI_ALLOC_h2p
000c86  4607              MOV      r7,r0
000c88  f7fffffe          BL       strlen
000c8c  4606              MOV      r6,r0
                  |L1.3214|
;;;1055     }
;;;1056     BytesNeeded = (BytesNeeded + NumBytes + 1) - pObj->BufferSize;
000c8e  eb050006          ADD      r0,r5,r6
000c92  f1000001          ADD      r0,r0,#1
000c96  f8b41044          LDRH     r1,[r4,#0x44]
000c9a  eba00501          SUB      r5,r0,r1
;;;1057     if (BytesNeeded > 0) {
000c9e  2d00              CMP      r5,#0
000ca0  dd08              BLE      |L1.3252|
;;;1058       if (!_IncrementBuffer(pObj, BytesNeeded + MULTIEDIT_REALLOC_SIZE)) {
000ca2  f1050110          ADD      r1,r5,#0x10
000ca6  4620              MOV      r0,r4
000ca8  f7fffffe          BL       _IncrementBuffer
000cac  b910              CBNZ     r0,|L1.3252|
;;;1059         return 0;
000cae  2000              MOVS     r0,#0
                  |L1.3248|
;;;1060       }
;;;1061     }
;;;1062     return 1;
;;;1063   }
000cb0  e8bd81f0          POP      {r4-r8,pc}
                  |L1.3252|
000cb4  2001              MOVS     r0,#1                 ;1062
000cb6  e7fb              B        |L1.3248|
;;;1064   
                          ENDP

                  _IsCharsAvailable PROC
;;;1074   */
;;;1075   static int _IsCharsAvailable(MULTIEDIT_OBJ* pObj, int CharsNeeded) {
000cb8  b570              PUSH     {r4-r6,lr}
000cba  4604              MOV      r4,r0
000cbc  460d              MOV      r5,r1
;;;1076     if ((CharsNeeded > 0) && (pObj->MaxNumChars > 0)) {
000cbe  2d00              CMP      r5,#0
000cc0  dd11              BLE      |L1.3302|
000cc2  8f60              LDRH     r0,[r4,#0x3a]
000cc4  2800              CMP      r0,#0
000cc6  dd0e              BLE      |L1.3302|
;;;1077       int NumChars = 0;
000cc8  f04f0600          MOV      r6,#0
;;;1078       if (pObj->hText) {
000ccc  8f20              LDRH     r0,[r4,#0x38]
000cce  b118              CBZ      r0,|L1.3288|
;;;1079         NumChars = _GetNumChars(pObj);
000cd0  4620              MOV      r0,r4
000cd2  f7fffffe          BL       _GetNumChars
000cd6  4606              MOV      r6,r0
                  |L1.3288|
;;;1080       }
;;;1081       if ((CharsNeeded + NumChars) > pObj->MaxNumChars) {
000cd8  19a8              ADDS     r0,r5,r6
000cda  8f61              LDRH     r1,[r4,#0x3a]
000cdc  4288              CMP      r0,r1
000cde  dd01              BLE      |L1.3300|
;;;1082         return 0;
000ce0  2000              MOVS     r0,#0
                  |L1.3298|
;;;1083       }
;;;1084     }
;;;1085     return 1;
;;;1086   }
000ce2  bd70              POP      {r4-r6,pc}
                  |L1.3300|
000ce4  bf00              NOP                            ;1084
                  |L1.3302|
000ce6  2001              MOVS     r0,#1                 ;1085
000ce8  e7fb              B        |L1.3298|
;;;1087   
                          ENDP

                  _DeleteChar PROC
;;;1100   */
;;;1101   static void _DeleteChar(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj) {
000cea  e92d4ff3          PUSH     {r0,r1,r4-r11,lr}
000cee  b081              SUB      sp,sp,#4
000cf0  460c              MOV      r4,r1
;;;1102     if (pObj->hText) {
000cf2  8f20              LDRH     r0,[r4,#0x38]
000cf4  2800              CMP      r0,#0
000cf6  d05a              BEQ      |L1.3502|
;;;1103       unsigned CursorOffset;
;;;1104       char* s;
;;;1105       s = (char*) GUI_ALLOC_h2p(pObj->hText);
000cf8  f9b40038          LDRSH    r0,[r4,#0x38]
000cfc  f7fffffe          BL       GUI_ALLOC_h2p
000d00  4607              MOV      r7,r0
;;;1106       CursorOffset = pObj->CursorPosByte;
000d02  f8b4904a          LDRH     r9,[r4,#0x4a]
;;;1107       if (CursorOffset < strlen(s)) {
000d06  4638              MOV      r0,r7
000d08  f7fffffe          BL       strlen
000d0c  4548              CMP      r0,r9
000d0e  d94d              BLS      |L1.3500|
;;;1108         char *pCursor, *pLine, *pEndLine;
;;;1109         int CursorLine, NumChars, NumBytes;
;;;1110         pCursor    = s + CursorOffset;
000d10  eb070809          ADD      r8,r7,r9
;;;1111         CursorLine = pObj->CursorLine;
000d14  f8b40046          LDRH     r0,[r4,#0x46]
000d18  9000              STR      r0,[sp,#0]
;;;1112         pLine      = _GetpLine(hObj, pObj, CursorLine);
000d1a  4621              MOV      r1,r4
000d1c  e9dd2000          LDRD     r2,r0,[sp,#0]
000d20  f7fffffe          BL       _GetpLine
000d24  4605              MOV      r5,r0
;;;1113         NumChars   = _WrapGetNumCharsDisp(hObj, pObj, pLine);
000d26  462a              MOV      r2,r5
000d28  4621              MOV      r1,r4
000d2a  9801              LDR      r0,[sp,#4]
000d2c  f7fffffe          BL       _WrapGetNumCharsDisp
000d30  4683              MOV      r11,r0
;;;1114         pEndLine   = pLine + GUI_UC__NumChars2NumBytes(pLine, NumChars);
000d32  4659              MOV      r1,r11
000d34  4628              MOV      r0,r5
000d36  f7fffffe          BL       GUI_UC__NumChars2NumBytes
000d3a  eb000a05          ADD      r10,r0,r5
;;;1115         pLine      = pLine + _WrapGetNumBytesToNextLine(hObj, pObj, pLine);
000d3e  462a              MOV      r2,r5
000d40  4621              MOV      r1,r4
000d42  9801              LDR      r0,[sp,#4]
000d44  f7fffffe          BL       _WrapGetNumBytesToNextLine
000d48  4405              ADD      r5,r5,r0
;;;1116         if (pCursor == pEndLine) {
000d4a  45d0              CMP      r8,r10
000d4c  d102              BNE      |L1.3412|
;;;1117           NumBytes = pLine - pEndLine;
000d4e  eba5060a          SUB      r6,r5,r10
000d52  e003              B        |L1.3420|
                  |L1.3412|
;;;1118         } else {
;;;1119           NumBytes = GUI_UC_GetCharSize(pCursor);
000d54  4640              MOV      r0,r8
000d56  f7fffffe          BL       GUI_UC_GetCharSize
000d5a  4606              MOV      r6,r0
                  |L1.3420|
;;;1120         }
;;;1121         NumChars = GUI_UC__NumBytes2NumChars(pCursor, NumBytes);
000d5c  4631              MOV      r1,r6
000d5e  4640              MOV      r0,r8
000d60  f7fffffe          BL       GUI_UC__NumBytes2NumChars
000d64  4683              MOV      r11,r0
;;;1122         strcpy(pCursor, pCursor + NumBytes);
000d66  eb080106          ADD      r1,r8,r6
000d6a  4640              MOV      r0,r8
000d6c  f7fffffe          BL       strcpy
;;;1123         WM_NotifyParent(hObj, WM_NOTIFICATION_VALUE_CHANGED);
000d70  2105              MOVS     r1,#5
000d72  9801              LDR      r0,[sp,#4]
000d74  f7fffffe          BL       WM_NotifyParent
;;;1124         pObj->NumChars -= NumChars;
000d78  8fa0              LDRH     r0,[r4,#0x3c]
000d7a  eba0000b          SUB      r0,r0,r11
000d7e  87a0              STRH     r0,[r4,#0x3c]
;;;1125         _InvalidateNumLines(pObj);
000d80  4620              MOV      r0,r4
000d82  f7fffffe          BL       _InvalidateNumLines
;;;1126         _InvalidateTextSizeX(pObj);
000d86  4620              MOV      r0,r4
000d88  f7fffffe          BL       _InvalidateTextSizeX
;;;1127         _InvalidateCursorXY(pObj); /* Invalidate X/Y position */
000d8c  4620              MOV      r0,r4
000d8e  f7fffffe          BL       _InvalidateCursorXY
;;;1128         _ClearCache(pObj);
000d92  4620              MOV      r0,r4
000d94  f7fffffe          BL       _ClearCache
;;;1129         pObj->CursorLine = _GetCursorLine(hObj, pObj, s, pObj->CursorPosChar);
000d98  f8b43048          LDRH     r3,[r4,#0x48]
000d9c  463a              MOV      r2,r7
000d9e  4621              MOV      r1,r4
000da0  9801              LDR      r0,[sp,#4]
000da2  f7fffffe          BL       _GetCursorLine
000da6  f8a40046          STRH     r0,[r4,#0x46]
;;;1130       }
000daa  bf00              NOP      
                  |L1.3500|
;;;1131     }
000dac  bf00              NOP      
                  |L1.3502|
;;;1132   }
000dae  e8bd8ffe          POP      {r1-r11,pc}
;;;1133   
                          ENDP

                  _InsertChar PROC
;;;1139   */
;;;1140   static int _InsertChar(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj, U16 Char) {
000db2  e92d47f0          PUSH     {r4-r10,lr}
000db6  4680              MOV      r8,r0
000db8  460c              MOV      r4,r1
000dba  4616              MOV      r6,r2
;;;1141     if (_IsCharsAvailable(pObj, 1)) {
000dbc  f04f0101          MOV      r1,#1
000dc0  4620              MOV      r0,r4
000dc2  f7fffffe          BL       _IsCharsAvailable
000dc6  2800              CMP      r0,#0
000dc8  d033              BEQ      |L1.3634|
;;;1142       int BytesNeeded;
;;;1143       BytesNeeded = GUI_UC__CalcSizeOfChar(Char);
000dca  4630              MOV      r0,r6
000dcc  f7fffffe          BL       GUI_UC__CalcSizeOfChar
000dd0  4607              MOV      r7,r0
;;;1144       if (_IsSpaceInBuffer(pObj, BytesNeeded)) {
000dd2  4639              MOV      r1,r7
000dd4  4620              MOV      r0,r4
000dd6  f7fffffe          BL       _IsSpaceInBuffer
000dda  b348              CBZ      r0,|L1.3632|
;;;1145         int CursorOffset;
;;;1146         char* pText;
;;;1147         pText = (char*) GUI_ALLOC_h2p(pObj->hText);
000ddc  f9b40038          LDRSH    r0,[r4,#0x38]
000de0  f7fffffe          BL       GUI_ALLOC_h2p
000de4  4605              MOV      r5,r0
;;;1148         CursorOffset = pObj->CursorPosByte;
000de6  f8b4904a          LDRH     r9,[r4,#0x4a]
;;;1149         pText += CursorOffset;
000dea  444d              ADD      r5,r5,r9
;;;1150         memmove(pText + BytesNeeded, pText, strlen(pText) + 1);
000dec  4628              MOV      r0,r5
000dee  f7fffffe          BL       strlen
000df2  f1000a01          ADD      r10,r0,#1
000df6  19e8              ADDS     r0,r5,r7
000df8  4652              MOV      r2,r10
000dfa  4629              MOV      r1,r5
000dfc  f7fffffe          BL       __aeabi_memmove
;;;1151         GUI_UC_Encode(pText, Char);
000e00  4631              MOV      r1,r6
000e02  4628              MOV      r0,r5
000e04  f7fffffe          BL       GUI_UC_Encode
;;;1152         WM_NotifyParent(hObj, WM_NOTIFICATION_VALUE_CHANGED);
000e08  2105              MOVS     r1,#5
000e0a  4640              MOV      r0,r8
000e0c  f7fffffe          BL       WM_NotifyParent
;;;1153         pObj->NumChars += 1;
000e10  8fa0              LDRH     r0,[r4,#0x3c]
000e12  f1000001          ADD      r0,r0,#1
000e16  87a0              STRH     r0,[r4,#0x3c]
;;;1154         _InvalidateNumLines(pObj);
000e18  4620              MOV      r0,r4
000e1a  f7fffffe          BL       _InvalidateNumLines
;;;1155         _InvalidateTextSizeX(pObj);
000e1e  4620              MOV      r0,r4
000e20  f7fffffe          BL       _InvalidateTextSizeX
;;;1156         _ClearCache(pObj);
000e24  4620              MOV      r0,r4
000e26  f7fffffe          BL       _ClearCache
;;;1157         return 1;
000e2a  2001              MOVS     r0,#1
                  |L1.3628|
;;;1158       }
;;;1159     }
;;;1160     return 0;
;;;1161   }
000e2c  e8bd87f0          POP      {r4-r10,pc}
                  |L1.3632|
000e30  bf00              NOP                            ;1159
                  |L1.3634|
000e32  2000              MOVS     r0,#0                 ;1160
000e34  e7fa              B        |L1.3628|
;;;1162   
                          ENDP

                  _MULTIEDIT_Paint PROC
;;;1172   */
;;;1173   static void _MULTIEDIT_Paint(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ * pObj) {
000e36  e92d4ff3          PUSH     {r0,r1,r4-r11,lr}
000e3a  b08d              SUB      sp,sp,#0x34
000e3c  460c              MOV      r4,r1
;;;1174     int ScrollPosX, ScrollPosY, EffectSize, HBorder, IsRTL = 0;
000e3e  f04f0000          MOV      r0,#0
000e42  900c              STR      r0,[sp,#0x30]
;;;1175     int x, y, xOff, yOff, ColorIndex, FontSizeY;
;;;1176     GUI_RECT r, rClip;
;;;1177     const GUI_RECT *prOldClip;
;;;1178     /* Init some values */
;;;1179     GUI_SetFont(pObj->pFont);
000e44  6f60              LDR      r0,[r4,#0x74]
000e46  f7fffffe          BL       GUI_SetFont
;;;1180     FontSizeY  = GUI_GetFontDistY();
000e4a  f7fffffe          BL       GUI_GetFontDistY
000e4e  9007              STR      r0,[sp,#0x1c]
;;;1181     ScrollPosX = pObj->ScrollStateH.v;
000e50  6ee7              LDR      r7,[r4,#0x6c]
;;;1182     ScrollPosY = pObj->ScrollStateV.v;
000e52  6e25              LDR      r5,[r4,#0x60]
;;;1183     EffectSize = pObj->Widget.pEffect->EffectSize;
000e54  6a20              LDR      r0,[r4,#0x20]
000e56  6946              LDR      r6,[r0,#0x14]
;;;1184     HBorder    = pObj->HBorder;
000e58  f894a07b          LDRB     r10,[r4,#0x7b]
;;;1185     xOff       = EffectSize + HBorder - ScrollPosX;
000e5c  eb06000a          ADD      r0,r6,r10
000e60  eba00b07          SUB      r11,r0,r7
;;;1186     yOff       = EffectSize - ScrollPosY * FontSizeY;
000e64  9807              LDR      r0,[sp,#0x1c]
000e66  fb056010          MLS      r0,r5,r0,r6
000e6a  9009              STR      r0,[sp,#0x24]
;;;1187     ColorIndex = ((pObj->Flags & MULTIEDIT_SF_READONLY) ? 1 : 0);
000e6c  f8940078          LDRB     r0,[r4,#0x78]
000e70  f0000001          AND      r0,r0,#1
000e74  9008              STR      r0,[sp,#0x20]
;;;1188     /* Set colors and draw the background */
;;;1189     LCD_SetBkColor(pObj->aBkColor[ColorIndex]);
000e76  f1040128          ADD      r1,r4,#0x28
000e7a  9a08              LDR      r2,[sp,#0x20]
000e7c  f8510022          LDR      r0,[r1,r2,LSL #2]
000e80  f7fffffe          BL       LCD_SetBkColor
;;;1190     LCD_SetColor(pObj->aColor[ColorIndex]);
000e84  f1040130          ADD      r1,r4,#0x30
000e88  9a08              LDR      r2,[sp,#0x20]
000e8a  f8510022          LDR      r0,[r1,r2,LSL #2]
000e8e  f7fffffe          BL       LCD_SetColor
;;;1191     GUI_Clear();
000e92  f7fffffe          BL       GUI_Clear
;;;1192     /* Draw the text if necessary */
;;;1193     rClip.x0 = EffectSize + HBorder;
000e96  eb06000a          ADD      r0,r6,r10
000e9a  b200              SXTH     r0,r0
000e9c  f8ad000c          STRH     r0,[sp,#0xc]
;;;1194     rClip.y0 = EffectSize;
000ea0  b230              SXTH     r0,r6
000ea2  f8ad000e          STRH     r0,[sp,#0xe]
;;;1195     rClip.x1 = WM_GetWindowSizeX(hObj) - EffectSize - HBorder - 1;
000ea6  980d              LDR      r0,[sp,#0x34]
000ea8  f7fffffe          BL       WM_GetWindowSizeX
000eac  eba00006          SUB      r0,r0,r6
000eb0  eba0000a          SUB      r0,r0,r10
000eb4  f1a00001          SUB      r0,r0,#1
000eb8  b200              SXTH     r0,r0
000eba  f8ad0010          STRH     r0,[sp,#0x10]
;;;1196     rClip.y1 = WM_GetWindowSizeY(hObj) - EffectSize - 1;
000ebe  980d              LDR      r0,[sp,#0x34]
000ec0  f7fffffe          BL       WM_GetWindowSizeY
000ec4  eba00006          SUB      r0,r0,r6
000ec8  f1a00001          SUB      r0,r0,#1
000ecc  b200              SXTH     r0,r0
000ece  f8ad0012          STRH     r0,[sp,#0x12]
;;;1197     prOldClip = WM_SetUserClipRect(&rClip);
000ed2  a803              ADD      r0,sp,#0xc
000ed4  f7fffffe          BL       WM_SetUserClipRect
000ed8  9002              STR      r0,[sp,#8]
;;;1198     if (pObj->hText) {
000eda  8f20              LDRH     r0,[r4,#0x38]
000edc  2800              CMP      r0,#0
000ede  d07b              BEQ      |L1.4056|
;;;1199       const char* pText;
;;;1200       int Line = 0;
000ee0  f04f0900          MOV      r9,#0
;;;1201       int xSize       = _GetXSize(hObj, pObj);
000ee4  4621              MOV      r1,r4
000ee6  980d              LDR      r0,[sp,#0x34]
000ee8  f7fffffe          BL       _GetXSize
000eec  9001              STR      r0,[sp,#4]
;;;1202       int NumVisLines = _GetNumVisLines(hObj, pObj);
000eee  4621              MOV      r1,r4
000ef0  980d              LDR      r0,[sp,#0x34]
000ef2  f7fffffe          BL       _GetNumVisLines
000ef6  9000              STR      r0,[sp,#0]
;;;1203       /* Get the text */
;;;1204       pText = (const char *)GUI_ALLOC_h2p(pObj->hText);
000ef8  f9b40038          LDRSH    r0,[r4,#0x38]
000efc  f7fffffe          BL       GUI_ALLOC_h2p
000f00  4680              MOV      r8,r0
;;;1205       /* Set the rectangle for drawing */
;;;1206       r.x0 = xOff;
000f02  fa0ff08b          SXTH     r0,r11
000f06  f8ad0014          STRH     r0,[sp,#0x14]
;;;1207       r.y0 = EffectSize;
000f0a  b230              SXTH     r0,r6
000f0c  f8ad0016          STRH     r0,[sp,#0x16]
;;;1208       r.x1 = xSize + EffectSize + HBorder - 1;
000f10  9801              LDR      r0,[sp,#4]
000f12  4430              ADD      r0,r0,r6
000f14  4450              ADD      r0,r0,r10
000f16  f1a00001          SUB      r0,r0,#1
000f1a  b200              SXTH     r0,r0
000f1c  f8ad0018          STRH     r0,[sp,#0x18]
;;;1209       r.y1 = pObj->Widget.Win.Rect.y1 - pObj->Widget.Win.Rect.y0 + 1;
000f20  88e0              LDRH     r0,[r4,#6]
000f22  8861              LDRH     r1,[r4,#2]
000f24  eba00001          SUB      r0,r0,r1
000f28  f1000001          ADD      r0,r0,#1
000f2c  b200              SXTH     r0,r0
000f2e  f8ad001a          STRH     r0,[sp,#0x1a]
;;;1210       /* Use cached position of first visible byte if possible */
;;;1211       if (ScrollPosY >= pObj->CacheFirstVisibleLine) {
000f32  f8b40054          LDRH     r0,[r4,#0x54]
000f36  42a8              CMP      r0,r5
000f38  dc07              BGT      |L1.3914|
;;;1212         if (pObj->CacheFirstVisibleByte) {
000f3a  f8b40056          LDRH     r0,[r4,#0x56]
000f3e  b120              CBZ      r0,|L1.3914|
;;;1213           pText += pObj->CacheFirstVisibleByte;
000f40  f8b40056          LDRH     r0,[r4,#0x56]
000f44  4480              ADD      r8,r8,r0
;;;1214           Line   = pObj->CacheFirstVisibleLine;
000f46  f8b49054          LDRH     r9,[r4,#0x54]
                  |L1.3914|
;;;1215         }
;;;1216       }
;;;1217       if (pObj->Align == GUI_TA_RIGHT) {
000f4a  f8b40058          LDRH     r0,[r4,#0x58]
000f4e  2801              CMP      r0,#1
000f50  d10b              BNE      |L1.3946|
;;;1218         r.x0 += ScrollPosX;
000f52  f8bd0014          LDRH     r0,[sp,#0x14]
000f56  4438              ADD      r0,r0,r7
000f58  b200              SXTH     r0,r0
000f5a  f8ad0014          STRH     r0,[sp,#0x14]
;;;1219         r.x1 += ScrollPosX;
000f5e  f8bd0018          LDRH     r0,[sp,#0x18]
000f62  4438              ADD      r0,r0,r7
000f64  b200              SXTH     r0,r0
000f66  f8ad0018          STRH     r0,[sp,#0x18]
                  |L1.3946|
;;;1220       }
;;;1221       /* Do the drawing of the text */
;;;1222       do {
000f6a  bf00              NOP      
                  |L1.3948|
;;;1223         /* Cache the position of the first visible byte and the depending line number */
;;;1224         if (pObj->CacheFirstVisibleLine != ScrollPosY) {
000f6c  f8b40054          LDRH     r0,[r4,#0x54]
000f70  42a8              CMP      r0,r5
000f72  d00b              BEQ      |L1.3980|
;;;1225           if (Line == ScrollPosY) {
000f74  45a9              CMP      r9,r5
000f76  d109              BNE      |L1.3980|
;;;1226             pObj->CacheFirstVisibleByte = pText - (const char *)GUI_ALLOC_h2p(pObj->hText);
000f78  f9b40038          LDRSH    r0,[r4,#0x38]
000f7c  f7fffffe          BL       GUI_ALLOC_h2p
000f80  eba80000          SUB      r0,r8,r0
000f84  f8a40056          STRH     r0,[r4,#0x56]
;;;1227             pObj->CacheFirstVisibleLine = ScrollPosY;
000f88  f8a45054          STRH     r5,[r4,#0x54]
                  |L1.3980|
;;;1228           }
;;;1229         }
;;;1230         /* Draw it */
;;;1231         if ((Line >= ScrollPosY) && ((Line - ScrollPosY) <= NumVisLines)) {
000f8c  45a9              CMP      r9,r5
000f8e  db11              BLT      |L1.4020|
000f90  eba90105          SUB      r1,r9,r5
000f94  9800              LDR      r0,[sp,#0]
000f96  4281              CMP      r1,r0
000f98  dc0c              BGT      |L1.4020|
;;;1232           _DispString(hObj, pObj, pText, &r);
000f9a  ab05              ADD      r3,sp,#0x14
000f9c  4642              MOV      r2,r8
000f9e  4621              MOV      r1,r4
000fa0  980d              LDR      r0,[sp,#0x34]
000fa2  f7fffffe          BL       _DispString
;;;1233           r.y0 += FontSizeY;  /* Next line */
000fa6  f8bd1016          LDRH     r1,[sp,#0x16]
000faa  9807              LDR      r0,[sp,#0x1c]
000fac  4408              ADD      r0,r0,r1
000fae  b200              SXTH     r0,r0
000fb0  f8ad0016          STRH     r0,[sp,#0x16]
                  |L1.4020|
;;;1234         }
;;;1235         pText += _WrapGetNumBytesToNextLine(hObj, pObj, pText);
000fb4  4642              MOV      r2,r8
000fb6  4621              MOV      r1,r4
000fb8  980d              LDR      r0,[sp,#0x34]
000fba  f7fffffe          BL       _WrapGetNumBytesToNextLine
000fbe  4480              ADD      r8,r8,r0
;;;1236         Line++;
000fc0  f1090901          ADD      r9,r9,#1
;;;1237       } while (GUI_UC_GetCharCode(pText) && ((Line - ScrollPosY) <= NumVisLines));
000fc4  4640              MOV      r0,r8
000fc6  f7fffffe          BL       GUI_UC_GetCharCode
000fca  b120              CBZ      r0,|L1.4054|
000fcc  eba90105          SUB      r1,r9,r5
000fd0  9800              LDR      r0,[sp,#0]
000fd2  4281              CMP      r1,r0
000fd4  ddca              BLE      |L1.3948|
                  |L1.4054|
;;;1238     }
000fd6  bf00              NOP      
                  |L1.4056|
;;;1239     /* Draw cursor if necessary */
;;;1240     if (WM_HasFocus(hObj)) {
000fd8  980d              LDR      r0,[sp,#0x34]
000fda  f7fffffe          BL       WM_HasFocus
000fde  2800              CMP      r0,#0
000fe0  d056              BEQ      |L1.4240|
;;;1241       int CursorSize;
;;;1242       _GetCursorXY(hObj, pObj, &x, &y);
000fe2  ab0a              ADD      r3,sp,#0x28
000fe4  aa0b              ADD      r2,sp,#0x2c
000fe6  4621              MOV      r1,r4
000fe8  980d              LDR      r0,[sp,#0x34]
000fea  f7fffffe          BL       _GetCursorXY
;;;1243       CursorSize = _GetCursorSizeX(hObj, pObj, &IsRTL);
000fee  aa0c              ADD      r2,sp,#0x30
000ff0  4621              MOV      r1,r4
000ff2  980d              LDR      r0,[sp,#0x34]
000ff4  f7fffffe          BL       _GetCursorSizeX
000ff8  4680              MOV      r8,r0
;;;1244       if (IsRTL) {
000ffa  980c              LDR      r0,[sp,#0x30]
000ffc  b178              CBZ      r0,|L1.4126|
;;;1245         r.x0 = x + xOff - CursorSize;
000ffe  980b              LDR      r0,[sp,#0x2c]
001000  4458              ADD      r0,r0,r11
001002  eba00008          SUB      r0,r0,r8
001006  b200              SXTH     r0,r0
001008  f8ad0014          STRH     r0,[sp,#0x14]
;;;1246         r.x1 = r.x0 + CursorSize - 1;
00100c  f8bd0014          LDRH     r0,[sp,#0x14]
001010  4440              ADD      r0,r0,r8
001012  f1a00001          SUB      r0,r0,#1
001016  b200              SXTH     r0,r0
001018  f8ad0018          STRH     r0,[sp,#0x18]
00101c  e00c              B        |L1.4152|
                  |L1.4126|
;;;1247       } else {
;;;1248         r.x0 = x + xOff;
00101e  980b              LDR      r0,[sp,#0x2c]
001020  4458              ADD      r0,r0,r11
001022  b200              SXTH     r0,r0
001024  f8ad0014          STRH     r0,[sp,#0x14]
;;;1249         r.x1 = r.x0 + CursorSize - 1;
001028  f8bd0014          LDRH     r0,[sp,#0x14]
00102c  4440              ADD      r0,r0,r8
00102e  f1a00001          SUB      r0,r0,#1
001032  b200              SXTH     r0,r0
001034  f8ad0018          STRH     r0,[sp,#0x18]
                  |L1.4152|
;;;1250       }
;;;1251       r.y0 = y + yOff;
001038  e9dd0109          LDRD     r0,r1,[sp,#0x24]
00103c  4408              ADD      r0,r0,r1
00103e  b200              SXTH     r0,r0
001040  f8ad0016          STRH     r0,[sp,#0x16]
;;;1252       r.y1 = r.y0 + FontSizeY - 1;
001044  f8bd1016          LDRH     r1,[sp,#0x16]
001048  9807              LDR      r0,[sp,#0x1c]
00104a  4408              ADD      r0,r0,r1
00104c  f1a00001          SUB      r0,r0,#1
001050  b200              SXTH     r0,r0
001052  f8ad001a          STRH     r0,[sp,#0x1a]
;;;1253       if (pObj->Align == GUI_TA_RIGHT) {
001056  f8b40058          LDRH     r0,[r4,#0x58]
00105a  2801              CMP      r0,#1
00105c  d10d              BNE      |L1.4218|
;;;1254         r.x0 += ScrollPosX << 1;
00105e  f8bd0014          LDRH     r0,[sp,#0x14]
001062  eb000047          ADD      r0,r0,r7,LSL #1
001066  b200              SXTH     r0,r0
001068  f8ad0014          STRH     r0,[sp,#0x14]
;;;1255         r.x1 += ScrollPosX << 1;
00106c  f8bd0018          LDRH     r0,[sp,#0x18]
001070  eb000047          ADD      r0,r0,r7,LSL #1
001074  b200              SXTH     r0,r0
001076  f8ad0018          STRH     r0,[sp,#0x18]
                  |L1.4218|
;;;1256       }
;;;1257       GUI_InvertRect(r.x0, r.y0, r.x1, r.y1);
00107a  f9bd301a          LDRSH    r3,[sp,#0x1a]
00107e  f9bd2018          LDRSH    r2,[sp,#0x18]
001082  f9bd1016          LDRSH    r1,[sp,#0x16]
001086  f9bd0014          LDRSH    r0,[sp,#0x14]
00108a  f7fffffe          BL       GUI_InvertRect
;;;1258     }
00108e  bf00              NOP      
                  |L1.4240|
;;;1259     WM_SetUserClipRect(prOldClip);
001090  9802              LDR      r0,[sp,#8]
001092  f7fffffe          BL       WM_SetUserClipRect
;;;1260     /* Draw the 3D effect (if configured) */
;;;1261     WIDGET__EFFECT_DrawDown(&pObj->Widget);
001096  4620              MOV      r0,r4
001098  f7fffffe          BL       WIDGET__EFFECT_DrawDown
;;;1262   }
00109c  b00f              ADD      sp,sp,#0x3c
00109e  e8bd8ff0          POP      {r4-r11,pc}
;;;1263   
                          ENDP

                  _OnTouch PROC
;;;1267   */
;;;1268   static void _OnTouch(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj, WM_MESSAGE*pMsg) {
0010a2  e92d5ff0          PUSH     {r4-r12,lr}
0010a6  4681              MOV      r9,r0
0010a8  460c              MOV      r4,r1
0010aa  4616              MOV      r6,r2
;;;1269     int Notification;
;;;1270     const GUI_PID_STATE* pState = (const GUI_PID_STATE*)pMsg->Data.p;
0010ac  68b7              LDR      r7,[r6,#8]
;;;1271     if (pMsg->Data.p) {  /* Something happened in our area (pressed or released) */
0010ae  68b0              LDR      r0,[r6,#8]
0010b0  b328              CBZ      r0,|L1.4350|
;;;1272       if (pState->Pressed) {
0010b2  7a38              LDRB     r0,[r7,#8]
0010b4  b300              CBZ      r0,|L1.4344|
;;;1273         int Effect, xPos, yPos;
;;;1274         Effect = pObj->Widget.pEffect->EffectSize;
0010b6  6a20              LDR      r0,[r4,#0x20]
0010b8  f8d08014          LDR      r8,[r0,#0x14]
;;;1275         xPos   = pState->x + pObj->ScrollStateH.v - Effect - pObj->HBorder;
0010bc  6839              LDR      r1,[r7,#0]
0010be  6ee0              LDR      r0,[r4,#0x6c]
0010c0  4408              ADD      r0,r0,r1
0010c2  eba00008          SUB      r0,r0,r8
0010c6  f894107b          LDRB     r1,[r4,#0x7b]
0010ca  eba00a01          SUB      r10,r0,r1
;;;1276         yPos   = pState->y + pObj->ScrollStateV.v * GUI_GetYDistOfFont(pObj->pFont) - Effect;
0010ce  6f60              LDR      r0,[r4,#0x74]
0010d0  f7fffffe          BL       GUI_GetYDistOfFont
0010d4  687a              LDR      r2,[r7,#4]
0010d6  6e21              LDR      r1,[r4,#0x60]
0010d8  fb012000          MLA      r0,r1,r0,r2
0010dc  eba00b08          SUB      r11,r0,r8
;;;1277         _SetCursorXY(hObj, pObj, xPos, yPos);
0010e0  465b              MOV      r3,r11
0010e2  4652              MOV      r2,r10
0010e4  4621              MOV      r1,r4
0010e6  4648              MOV      r0,r9
0010e8  f7fffffe          BL       _SetCursorXY
;;;1278         _Invalidate(hObj);
0010ec  4648              MOV      r0,r9
0010ee  f7fffffe          BL       _Invalidate
;;;1279         Notification = WM_NOTIFICATION_CLICKED;
0010f2  f04f0501          MOV      r5,#1
;;;1280       } else {
0010f6  e004              B        |L1.4354|
                  |L1.4344|
;;;1281         Notification = WM_NOTIFICATION_RELEASED;
0010f8  f04f0502          MOV      r5,#2
0010fc  e001              B        |L1.4354|
                  |L1.4350|
;;;1282       }
;;;1283     } else {
;;;1284       Notification = WM_NOTIFICATION_MOVED_OUT;
0010fe  f04f0503          MOV      r5,#3
                  |L1.4354|
;;;1285     }
;;;1286     WM_NotifyParent(hObj, Notification);
001102  4629              MOV      r1,r5
001104  4648              MOV      r0,r9
001106  f7fffffe          BL       WM_NotifyParent
;;;1287   }
00110a  e8bd9ff0          POP      {r4-r12,pc}
;;;1288   
                          ENDP

                  _AddKey PROC
;;;1295   */
;;;1296   static int _AddKey(MULTIEDIT_HANDLE hObj, U16 Key) {
00110e  e92d41f0          PUSH     {r4-r8,lr}
001112  4606              MOV      r6,r0
001114  460d              MOV      r5,r1
;;;1297     int r = 0;               /* Key has not been consumed */
001116  f04f0700          MOV      r7,#0
;;;1298     MULTIEDIT_OBJ* pObj;
;;;1299     pObj = MULTIEDIT_H2P(hObj);
00111a  4630              MOV      r0,r6
00111c  f7fffffe          BL       GUI_ALLOC_h2p
001120  4604              MOV      r4,r0
;;;1300     switch (Key) {
001122  4628              MOV      r0,r5
001124  2d13              CMP      r5,#0x13
001126  d01d              BEQ      |L1.4452|
001128  dc0c              BGT      |L1.4420|
00112a  2810              CMP      r0,#0x10
00112c  d02b              BEQ      |L1.4486|
00112e  dc04              BGT      |L1.4410|
001130  2808              CMP      r0,#8
001132  d040              BEQ      |L1.4534|
001134  280d              CMP      r0,#0xd
                  |L1.4406|
001136  d16e              BNE      |L1.4630|
001138  e077              B        |L1.4650|
                  |L1.4410|
00113a  2811              CMP      r0,#0x11
00113c  d00b              BEQ      |L1.4438|
00113e  2812              CMP      r0,#0x12
001140  d1f9              BNE      |L1.4406|
001142  e016              B        |L1.4466|
                  |L1.4420|
001144  3817              SUBS     r0,r0,#0x17
001146  2808              CMP      r0,#8
001148  d265              BCS      |L1.4630|
00114a  e8dff000          TBB      [pc,r0]
00114e  2d26              DCB      0x2d,0x26
001150  93939293          DCB      0x93,0x93,0x92,0x93
001154  584c              DCB      0x58,0x4c
                  |L1.4438|
;;;1301     case GUI_KEY_UP:
;;;1302       _MoveCursorUp(hObj, pObj);
001156  4621              MOV      r1,r4
001158  4630              MOV      r0,r6
00115a  f7fffffe          BL       _MoveCursorUp
;;;1303       r = 1;               /* Key has been consumed */
00115e  f04f0701          MOV      r7,#1
;;;1304       break;
001162  e0a7              B        |L1.4788|
                  |L1.4452|
;;;1305     case GUI_KEY_DOWN:
;;;1306       _MoveCursorDown(hObj, pObj);
001164  4621              MOV      r1,r4
001166  4630              MOV      r0,r6
001168  f7fffffe          BL       _MoveCursorDown
;;;1307       r = 1;               /* Key has been consumed */
00116c  f04f0701          MOV      r7,#1
;;;1308       break;
001170  e0a0              B        |L1.4788|
                  |L1.4466|
;;;1309     case GUI_KEY_RIGHT:
;;;1310       _SetCursorPos(hObj, pObj, pObj->CursorPosChar + 1);
001172  f8b40048          LDRH     r0,[r4,#0x48]
001176  1c42              ADDS     r2,r0,#1
001178  4621              MOV      r1,r4
00117a  4630              MOV      r0,r6
00117c  f7fffffe          BL       _SetCursorPos
;;;1311       r = 1;               /* Key has been consumed */
001180  f04f0701          MOV      r7,#1
;;;1312       break;
001184  e096              B        |L1.4788|
                  |L1.4486|
;;;1313     case GUI_KEY_LEFT:
;;;1314       _SetCursorPos(hObj, pObj, pObj->CursorPosChar - 1);
001186  f8b40048          LDRH     r0,[r4,#0x48]
00118a  1e42              SUBS     r2,r0,#1
00118c  4621              MOV      r1,r4
00118e  4630              MOV      r0,r6
001190  f7fffffe          BL       _SetCursorPos
;;;1315       r = 1;               /* Key has been consumed */
001194  f04f0701          MOV      r7,#1
;;;1316       break;
001198  e08c              B        |L1.4788|
;;;1317     case GUI_KEY_END:
;;;1318       _MoveCursor2LineEnd(hObj, pObj);
00119a  4621              MOV      r1,r4
00119c  4630              MOV      r0,r6
00119e  f7fffffe          BL       _MoveCursor2LineEnd
;;;1319       r = 1;               /* Key has been consumed */
0011a2  f04f0701          MOV      r7,#1
;;;1320       break;
0011a6  e085              B        |L1.4788|
;;;1321     case GUI_KEY_HOME:
;;;1322       _MoveCursor2LinePos1(hObj, pObj);
0011a8  4621              MOV      r1,r4
0011aa  4630              MOV      r0,r6
0011ac  f7fffffe          BL       _MoveCursor2LinePos1
;;;1323       r = 1;               /* Key has been consumed */
0011b0  f04f0701          MOV      r7,#1
;;;1324       break;
0011b4  e07e              B        |L1.4788|
                  |L1.4534|
;;;1325     case GUI_KEY_BACKSPACE:
;;;1326       if (!(pObj->Flags & MULTIEDIT_SF_READONLY)) {
0011b6  f8940078          LDRB     r0,[r4,#0x78]
0011ba  f0100f01          TST      r0,#1
0011be  d111              BNE      |L1.4580|
;;;1327         if (pObj->CursorPosChar > pObj->NumCharsPrompt) {
0011c0  f8b40048          LDRH     r0,[r4,#0x48]
0011c4  8fe1              LDRH     r1,[r4,#0x3e]
0011c6  4288              CMP      r0,r1
0011c8  dd0a              BLE      |L1.4576|
;;;1328           _SetCursorPos(hObj, pObj, pObj->CursorPosChar - 1);
0011ca  f8b40048          LDRH     r0,[r4,#0x48]
0011ce  1e42              SUBS     r2,r0,#1
0011d0  4621              MOV      r1,r4
0011d2  4630              MOV      r0,r6
0011d4  f7fffffe          BL       _SetCursorPos
;;;1329           _DeleteChar(hObj, pObj);
0011d8  4621              MOV      r1,r4
0011da  4630              MOV      r0,r6
0011dc  f7fffffe          BL       _DeleteChar
                  |L1.4576|
;;;1330         }
;;;1331         r = 1;               /* Key has been consumed */
0011e0  f04f0701          MOV      r7,#1
                  |L1.4580|
;;;1332       }
;;;1333       break;
0011e4  e066              B        |L1.4788|
;;;1334     case GUI_KEY_DELETE:
;;;1335       if (!(pObj->Flags & MULTIEDIT_SF_READONLY)) {
0011e6  f8940078          LDRB     r0,[r4,#0x78]
0011ea  f0100f01          TST      r0,#1
0011ee  d105              BNE      |L1.4604|
;;;1336         _DeleteChar(hObj, pObj);
0011f0  4621              MOV      r1,r4
0011f2  4630              MOV      r0,r6
0011f4  f7fffffe          BL       _DeleteChar
;;;1337         r = 1;               /* Key has been consumed */
0011f8  f04f0701          MOV      r7,#1
                  |L1.4604|
;;;1338       }
;;;1339       break;
0011fc  e05a              B        |L1.4788|
;;;1340     case GUI_KEY_INSERT:
;;;1341       if (!(pObj->Flags & MULTIEDIT_CF_INSERT)) {
0011fe  f8940078          LDRB     r0,[r4,#0x78]
001202  f0100f04          TST      r0,#4
001206  d107              BNE      |L1.4632|
;;;1342         pObj->Flags |= MULTIEDIT_CF_INSERT;
001208  f8940078          LDRB     r0,[r4,#0x78]
00120c  f0400004          ORR      r0,r0,#4
001210  f8840078          STRB     r0,[r4,#0x78]
001214  e006              B        |L1.4644|
                  |L1.4630|
001216  e02d              B        |L1.4724|
                  |L1.4632|
;;;1343       } else {
;;;1344         pObj->Flags &= ~MULTIEDIT_CF_INSERT;
001218  f8940078          LDRB     r0,[r4,#0x78]
00121c  f0200004          BIC      r0,r0,#4
001220  f8840078          STRB     r0,[r4,#0x78]
                  |L1.4644|
;;;1345       }
;;;1346       r = 1;               /* Key has been consumed */
001224  f04f0701          MOV      r7,#1
;;;1347       break;
001228  e044              B        |L1.4788|
                  |L1.4650|
;;;1348     case GUI_KEY_ENTER:
;;;1349       if (pObj->Flags & MULTIEDIT_SF_READONLY) {
00122a  f8940078          LDRB     r0,[r4,#0x78]
00122e  f0100f01          TST      r0,#1
001232  d004              BEQ      |L1.4670|
;;;1350         _MoveCursor2NextLine(hObj, pObj);
001234  4621              MOV      r1,r4
001236  4630              MOV      r0,r6
001238  f7fffffe          BL       _MoveCursor2NextLine
00123c  e016              B        |L1.4716|
                  |L1.4670|
;;;1351       } else {
;;;1352         if (_InsertChar(hObj, pObj, (U8)('\n'))) {
00123e  220a              MOVS     r2,#0xa
001240  4621              MOV      r1,r4
001242  4630              MOV      r0,r6
001244  f7fffffe          BL       _InsertChar
001248  b180              CBZ      r0,|L1.4716|
;;;1353           if (pObj->Flags & MULTIEDIT_SF_PASSWORD) {
00124a  f8940078          LDRB     r0,[r4,#0x78]
00124e  f0100f20          TST      r0,#0x20
001252  d007              BEQ      |L1.4708|
;;;1354             _SetCursorPos(hObj, pObj, pObj->CursorPosChar + 1);
001254  f8b40048          LDRH     r0,[r4,#0x48]
001258  1c42              ADDS     r2,r0,#1
00125a  4621              MOV      r1,r4
00125c  4630              MOV      r0,r6
00125e  f7fffffe          BL       _SetCursorPos
001262  e003              B        |L1.4716|
                  |L1.4708|
;;;1355           } else {
;;;1356             _MoveCursor2NextLine(hObj, pObj);
001264  4621              MOV      r1,r4
001266  4630              MOV      r0,r6
001268  f7fffffe          BL       _MoveCursor2NextLine
                  |L1.4716|
;;;1357           }
;;;1358         }
;;;1359       }
;;;1360       r = 1;               /* Key has been consumed */
00126c  f04f0701          MOV      r7,#1
;;;1361       break;
001270  e020              B        |L1.4788|
;;;1362     case GUI_KEY_ESCAPE:
;;;1363       break;
001272  e01f              B        |L1.4788|
                  |L1.4724|
;;;1364     default:
;;;1365       if (!(pObj->Flags & MULTIEDIT_SF_READONLY) && (Key >= 0x20)) {
001274  f8940078          LDRB     r0,[r4,#0x78]
001278  f0100f01          TST      r0,#1
00127c  d119              BNE      |L1.4786|
00127e  2d20              CMP      r5,#0x20
001280  db17              BLT      |L1.4786|
;;;1366         if (_IsOverwriteAtThisChar(hObj, pObj)) {
001282  4621              MOV      r1,r4
001284  4630              MOV      r0,r6
001286  f7fffffe          BL       _IsOverwriteAtThisChar
00128a  b118              CBZ      r0,|L1.4756|
;;;1367           _DeleteChar(hObj, pObj);
00128c  4621              MOV      r1,r4
00128e  4630              MOV      r0,r6
001290  f7fffffe          BL       _DeleteChar
                  |L1.4756|
;;;1368         }
;;;1369         if (_InsertChar(hObj, pObj, Key)) {
001294  462a              MOV      r2,r5
001296  4621              MOV      r1,r4
001298  4630              MOV      r0,r6
00129a  f7fffffe          BL       _InsertChar
00129e  b130              CBZ      r0,|L1.4782|
;;;1370           _SetCursorPos(hObj, pObj, pObj->CursorPosChar + 1);
0012a0  f8b40048          LDRH     r0,[r4,#0x48]
0012a4  1c42              ADDS     r2,r0,#1
0012a6  4621              MOV      r1,r4
0012a8  4630              MOV      r0,r6
0012aa  f7fffffe          BL       _SetCursorPos
                  |L1.4782|
;;;1371         }
;;;1372         r = 1;               /* Key has been consumed */
0012ae  f04f0701          MOV      r7,#1
                  |L1.4786|
0012b2  bf00              NOP                            ;1300
                  |L1.4788|
0012b4  bf00              NOP                            ;1304
;;;1373       }
;;;1374     }
;;;1375     _InvalidateTextArea(hObj);
0012b6  4630              MOV      r0,r6
0012b8  f7fffffe          BL       _InvalidateTextArea
;;;1376     return r;
0012bc  4638              MOV      r0,r7
;;;1377   }
0012be  e8bd81f0          POP      {r4-r8,pc}
;;;1378   
                          ENDP

                  _SetText PROC
;;;1382   */
;;;1383   static void _SetText(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ * pObj, const char * pNew) {
0012c2  e92d5ff0          PUSH     {r4-r12,lr}
0012c6  4681              MOV      r9,r0
0012c8  460c              MOV      r4,r1
0012ca  4615              MOV      r5,r2
;;;1384     int NumCharsNew, NumCharsOld, NumBytesNew, NumBytesOld;
;;;1385     char * pText;
;;;1386     NumCharsNew = NumCharsOld = NumBytesNew = NumBytesOld = 0;
0012cc  f04f0000          MOV      r0,#0
0012d0  4683              MOV      r11,r0
0012d2  4682              MOV      r10,r0
0012d4  4680              MOV      r8,r0
0012d6  4607              MOV      r7,r0
;;;1387     if (pObj->hText) {
0012d8  8f20              LDRH     r0,[r4,#0x38]
0012da  b190              CBZ      r0,|L1.4866|
;;;1388       pText  = (char*) GUI_ALLOC_h2p(pObj->hText);
0012dc  f9b40038          LDRSH    r0,[r4,#0x38]
0012e0  f7fffffe          BL       GUI_ALLOC_h2p
0012e4  4606              MOV      r6,r0
;;;1389       pText += GUI_UC__NumChars2NumBytes(pText, pObj->NumCharsPrompt);
0012e6  8fe1              LDRH     r1,[r4,#0x3e]
0012e8  4630              MOV      r0,r6
0012ea  f7fffffe          BL       GUI_UC__NumChars2NumBytes
0012ee  4406              ADD      r6,r6,r0
;;;1390       NumCharsOld = GUI__GetNumChars(pText);
0012f0  4630              MOV      r0,r6
0012f2  f7fffffe          BL       GUI__GetNumChars
0012f6  4680              MOV      r8,r0
;;;1391       NumBytesOld = GUI_UC__NumChars2NumBytes(pText, NumCharsOld);
0012f8  4641              MOV      r1,r8
0012fa  4630              MOV      r0,r6
0012fc  f7fffffe          BL       GUI_UC__NumChars2NumBytes
001300  4683              MOV      r11,r0
                  |L1.4866|
;;;1392     }
;;;1393     if (pNew) {
001302  b145              CBZ      r5,|L1.4886|
;;;1394       NumCharsNew = GUI__GetNumChars(pNew);
001304  4628              MOV      r0,r5
001306  f7fffffe          BL       GUI__GetNumChars
00130a  4607              MOV      r7,r0
;;;1395       NumBytesNew = GUI_UC__NumChars2NumBytes(pNew, NumCharsNew);
00130c  4639              MOV      r1,r7
00130e  4628              MOV      r0,r5
001310  f7fffffe          BL       GUI_UC__NumChars2NumBytes
001314  4682              MOV      r10,r0
                  |L1.4886|
;;;1396     }
;;;1397     if (_IsCharsAvailable(pObj, NumCharsNew - NumCharsOld)) {
001316  eba70108          SUB      r1,r7,r8
00131a  4620              MOV      r0,r4
00131c  f7fffffe          BL       _IsCharsAvailable
001320  b360              CBZ      r0,|L1.4988|
;;;1398       if (_IsSpaceInBuffer(pObj, NumBytesNew - NumBytesOld)) {
001322  ebaa010b          SUB      r1,r10,r11
001326  4620              MOV      r0,r4
001328  f7fffffe          BL       _IsSpaceInBuffer
00132c  b330              CBZ      r0,|L1.4988|
;;;1399         pText  = (char*) GUI_ALLOC_h2p(pObj->hText);
00132e  f9b40038          LDRSH    r0,[r4,#0x38]
001332  f7fffffe          BL       GUI_ALLOC_h2p
001336  4606              MOV      r6,r0
;;;1400         pText += GUI_UC__NumChars2NumBytes(pText, pObj->NumCharsPrompt);
001338  8fe1              LDRH     r1,[r4,#0x3e]
00133a  4630              MOV      r0,r6
00133c  f7fffffe          BL       GUI_UC__NumChars2NumBytes
001340  4406              ADD      r6,r6,r0
;;;1401         if (pNew) {
001342  b125              CBZ      r5,|L1.4942|
;;;1402           strcpy(pText, pNew);
001344  4629              MOV      r1,r5
001346  4630              MOV      r0,r6
001348  f7fffffe          BL       strcpy
00134c  e002              B        |L1.4948|
                  |L1.4942|
;;;1403         } else {
;;;1404           *pText = 0;
00134e  f04f0000          MOV      r0,#0
001352  7030              STRB     r0,[r6,#0]
                  |L1.4948|
;;;1405         }
;;;1406         _SetCursorPos(hObj, pObj, pObj->NumCharsPrompt);
001354  8fe2              LDRH     r2,[r4,#0x3e]
001356  4621              MOV      r1,r4
001358  4648              MOV      r0,r9
00135a  f7fffffe          BL       _SetCursorPos
;;;1407         _InvalidateNumChars(pObj);
00135e  4620              MOV      r0,r4
001360  f7fffffe          BL       _InvalidateNumChars
;;;1408         _InvalidateNumLines(pObj);
001364  4620              MOV      r0,r4
001366  f7fffffe          BL       _InvalidateNumLines
;;;1409         _InvalidateTextSizeX(pObj);
00136a  4620              MOV      r0,r4
00136c  f7fffffe          BL       _InvalidateTextSizeX
;;;1410         _InvalidateTextArea(hObj);
001370  4648              MOV      r0,r9
001372  f7fffffe          BL       _InvalidateTextArea
;;;1411         _InvalidateCursorXY(pObj); /* Invalidate X/Y position */
001376  4620              MOV      r0,r4
001378  f7fffffe          BL       _InvalidateCursorXY
                  |L1.4988|
;;;1412       }
;;;1413     }
;;;1414   }
00137c  e8bd9ff0          POP      {r4-r12,pc}
;;;1415   
                          ENDP

                  MULTIEDIT_Callback PROC
;;;1448   */
;;;1449   void MULTIEDIT_Callback (WM_MESSAGE *pMsg) {
001380  b5fe              PUSH     {r1-r7,lr}
001382  4604              MOV      r4,r0
;;;1450     MULTIEDIT_HANDLE hObj;
;;;1451     MULTIEDIT_OBJ* pObj;
;;;1452     WM_SCROLL_STATE ScrollState;
;;;1453     hObj = pMsg->hWin;
001384  f9b46004          LDRSH    r6,[r4,#4]
;;;1454     /* Let widget handle the standard messages */
;;;1455     if (WIDGET_HandleActive(hObj, pMsg) == 0) {
001388  4621              MOV      r1,r4
00138a  4630              MOV      r0,r6
00138c  f7fffffe          BL       WIDGET_HandleActive
001390  b900              CBNZ     r0,|L1.5012|
                  |L1.5010|
;;;1456       return;
;;;1457     }
;;;1458     pObj = (MULTIEDIT_OBJ *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
;;;1459     switch (pMsg->MsgId) {
;;;1460     case WM_NOTIFY_CLIENTCHANGE:
;;;1461       _InvalidateCursorXY(pObj);
;;;1462       _InvalidateNumLines(pObj);
;;;1463       _InvalidateTextSizeX(pObj);
;;;1464       _ClearCache(pObj);
;;;1465       _CalcScrollParas(hObj);
;;;1466       break;
;;;1467     case WM_SIZE:
;;;1468       _InvalidateCursorXY(pObj);
;;;1469       _InvalidateNumLines(pObj);
;;;1470       _InvalidateTextSizeX(pObj);
;;;1471       _ClearCache(pObj);
;;;1472       _Invalidate(hObj);
;;;1473       break;
;;;1474     case WM_NOTIFY_PARENT:
;;;1475       switch (pMsg->Data.v) {
;;;1476       case WM_NOTIFICATION_VALUE_CHANGED:
;;;1477         if (pMsg->hWinSrc  == WM_GetScrollbarV(hObj)) {
;;;1478           WM_GetScrollState(pMsg->hWinSrc, &ScrollState);
;;;1479           pObj->ScrollStateV.v = ScrollState.v;
;;;1480           WM_InvalidateWindow(hObj);
;;;1481           WM_NotifyParent(hObj, WM_NOTIFICATION_SCROLL_CHANGED);
;;;1482         } else if (pMsg->hWinSrc == WM_GetScrollbarH(hObj)) {
;;;1483           WM_GetScrollState(pMsg->hWinSrc, &ScrollState);
;;;1484           pObj->ScrollStateH.v = ScrollState.v;
;;;1485           WM_InvalidateWindow(hObj);
;;;1486           WM_NotifyParent(hObj, WM_NOTIFICATION_SCROLL_CHANGED);
;;;1487         }
;;;1488         break;
;;;1489       case WM_NOTIFICATION_SCROLLBAR_ADDED:
;;;1490         #if WIDGET_USE_PARENT_EFFECT
;;;1491           WIDGET_SetEffect(pMsg->hWinSrc, pObj->Widget.pEffect);
;;;1492         #endif
;;;1493         _SetScrollState(hObj);
;;;1494         break;
;;;1495       }
;;;1496       break;
;;;1497     case WM_PAINT:
;;;1498       _MULTIEDIT_Paint(hObj, pObj);
;;;1499       return;
;;;1500     case WM_TOUCH:
;;;1501       _OnTouch(hObj, pObj, pMsg);
;;;1502       break;
;;;1503     case WM_DELETE:
;;;1504       GUI_ALLOC_FreePtr(&pObj->hText);
;;;1505       break;
;;;1506     case WM_KEY:
;;;1507       if (((const WM_KEY_INFO*)(pMsg->Data.p))->PressedCnt >0) {
;;;1508         int Key = ((const WM_KEY_INFO*)(pMsg->Data.p))->Key;
;;;1509         /* Leave code for test purpose
;;;1510         switch (Key) {
;;;1511         case '1': Key = GUI_KEY_LEFT;  break;
;;;1512         case '2': Key = GUI_KEY_UP;    break;
;;;1513         case '3': Key = GUI_KEY_RIGHT; break;
;;;1514         case '4': Key = GUI_KEY_DOWN;  break;
;;;1515         }
;;;1516         */
;;;1517         if (_AddKey(hObj, Key)) {
;;;1518           return;
;;;1519         }
;;;1520       } else {
;;;1521         if (!(pObj->Flags & MULTIEDIT_SF_READONLY)) {
;;;1522           return;                /* Key release is consumed (not sent to parent) */
;;;1523         }
;;;1524       }
;;;1525     }
;;;1526     WM_DefaultProc(pMsg);
;;;1527   }
001392  bdfe              POP      {r1-r7,pc}
                  |L1.5012|
001394  4630              MOV      r0,r6                 ;1458
001396  f7fffffe          BL       GUI_ALLOC_h2p
00139a  4605              MOV      r5,r0                 ;1458
00139c  6820              LDR      r0,[r4,#0]            ;1459
00139e  280e              CMP      r0,#0xe               ;1459
0013a0  d078              BEQ      |L1.5268|
0013a2  dc06              BGT      |L1.5042|
0013a4  2805              CMP      r0,#5                 ;1459
0013a6  d01b              BEQ      |L1.5088|
0013a8  280b              CMP      r0,#0xb               ;1459
0013aa  d06e              BEQ      |L1.5258|
0013ac  280c              CMP      r0,#0xc               ;1459
0013ae  d116              BNE      |L1.5086|
0013b0  e063              B        |L1.5242|
                  |L1.5042|
0013b2  280f              CMP      r0,#0xf               ;1459
0013b4  d05c              BEQ      |L1.5232|
0013b6  2825              CMP      r0,#0x25              ;1459
0013b8  d002              BEQ      |L1.5056|
0013ba  2826              CMP      r0,#0x26              ;1459
0013bc  d17e              BNE      |L1.5308|
0013be  e01f              B        |L1.5120|
                  |L1.5056|
0013c0  4628              MOV      r0,r5                 ;1461
0013c2  f7fffffe          BL       _InvalidateCursorXY
0013c6  4628              MOV      r0,r5                 ;1462
0013c8  f7fffffe          BL       _InvalidateNumLines
0013cc  4628              MOV      r0,r5                 ;1463
0013ce  f7fffffe          BL       _InvalidateTextSizeX
0013d2  4628              MOV      r0,r5                 ;1464
0013d4  f7fffffe          BL       _ClearCache
0013d8  4630              MOV      r0,r6                 ;1465
0013da  f7fffffe          BL       _CalcScrollParas
                  |L1.5086|
0013de  e06d              B        |L1.5308|
                  |L1.5088|
0013e0  4628              MOV      r0,r5                 ;1468
0013e2  f7fffffe          BL       _InvalidateCursorXY
0013e6  4628              MOV      r0,r5                 ;1469
0013e8  f7fffffe          BL       _InvalidateNumLines
0013ec  4628              MOV      r0,r5                 ;1470
0013ee  f7fffffe          BL       _InvalidateTextSizeX
0013f2  4628              MOV      r0,r5                 ;1471
0013f4  f7fffffe          BL       _ClearCache
0013f8  4630              MOV      r0,r6                 ;1472
0013fa  f7fffffe          BL       _Invalidate
0013fe  e05d              B        |L1.5308|
                  |L1.5120|
001400  68a0              LDR      r0,[r4,#8]            ;1475
001402  2805              CMP      r0,#5                 ;1475
001404  d002              BEQ      |L1.5132|
001406  2806              CMP      r0,#6                 ;1475
001408  d130              BNE      |L1.5228|
00140a  e02b              B        |L1.5220|
                  |L1.5132|
00140c  4630              MOV      r0,r6                 ;1477
00140e  f7fffffe          BL       WM_GetScrollbarV
001412  f9b41006          LDRSH    r1,[r4,#6]            ;1477
001416  4288              CMP      r0,r1                 ;1477
001418  d10e              BNE      |L1.5176|
00141a  f9b40006          LDRSH    r0,[r4,#6]            ;1478
00141e  4669              MOV      r1,sp                 ;1478
001420  f7fffffe          BL       WM_GetScrollState
001424  9901              LDR      r1,[sp,#4]            ;1479
001426  6629              STR      r1,[r5,#0x60]         ;1479
001428  4630              MOV      r0,r6                 ;1480
00142a  f7fffffe          BL       WM_InvalidateWindow
00142e  210a              MOVS     r1,#0xa               ;1481
001430  4630              MOV      r0,r6                 ;1481
001432  f7fffffe          BL       WM_NotifyParent
001436  e014              B        |L1.5218|
                  |L1.5176|
001438  4630              MOV      r0,r6                 ;1482
00143a  f7fffffe          BL       WM_GetScrollbarH
00143e  f9b41006          LDRSH    r1,[r4,#6]            ;1482
001442  4288              CMP      r0,r1                 ;1482
001444  d10d              BNE      |L1.5218|
001446  f9b40006          LDRSH    r0,[r4,#6]            ;1483
00144a  4669              MOV      r1,sp                 ;1483
00144c  f7fffffe          BL       WM_GetScrollState
001450  9901              LDR      r1,[sp,#4]            ;1484
001452  66e9              STR      r1,[r5,#0x6c]         ;1484
001454  4630              MOV      r0,r6                 ;1485
001456  f7fffffe          BL       WM_InvalidateWindow
00145a  210a              MOVS     r1,#0xa               ;1486
00145c  4630              MOV      r0,r6                 ;1486
00145e  f7fffffe          BL       WM_NotifyParent
                  |L1.5218|
001462  e003              B        |L1.5228|
                  |L1.5220|
001464  4630              MOV      r0,r6                 ;1493
001466  f7fffffe          BL       _SetScrollState
00146a  bf00              NOP                            ;1494
                  |L1.5228|
00146c  bf00              NOP                            ;1488
00146e  e025              B        |L1.5308|
                  |L1.5232|
001470  4629              MOV      r1,r5                 ;1498
001472  4630              MOV      r0,r6                 ;1498
001474  f7fffffe          BL       _MULTIEDIT_Paint
001478  e78b              B        |L1.5010|
                  |L1.5242|
00147a  4622              MOV      r2,r4                 ;1501
00147c  4629              MOV      r1,r5                 ;1501
00147e  4630              MOV      r0,r6                 ;1501
001480  f7fffffe          BL       _OnTouch
001484  e01a              B        |L1.5308|
001486  e005              B        |L1.5268|
001488  e7ff              B        |L1.5258|
                  |L1.5258|
00148a  f1050038          ADD      r0,r5,#0x38           ;1504
00148e  f7fffffe          BL       GUI_ALLOC_FreePtr
001492  e013              B        |L1.5308|
                  |L1.5268|
001494  68a0              LDR      r0,[r4,#8]            ;1507
001496  6840              LDR      r0,[r0,#4]            ;1507
001498  2800              CMP      r0,#0                 ;1507
00149a  dd08              BLE      |L1.5294|
00149c  68a0              LDR      r0,[r4,#8]            ;1508
00149e  6807              LDR      r7,[r0,#0]            ;1508
0014a0  b2b9              UXTH     r1,r7                 ;1517
0014a2  4630              MOV      r0,r6                 ;1517
0014a4  f7fffffe          BL       _AddKey
0014a8  b100              CBZ      r0,|L1.5292|
0014aa  e772              B        |L1.5010|
                  |L1.5292|
0014ac  e005              B        |L1.5306|
                  |L1.5294|
0014ae  f8950078          LDRB     r0,[r5,#0x78]         ;1521
0014b2  f0100f01          TST      r0,#1                 ;1521
0014b6  d100              BNE      |L1.5306|
0014b8  e76b              B        |L1.5010|
                  |L1.5306|
0014ba  bf00              NOP                            ;1459
                  |L1.5308|
0014bc  bf00              NOP                            ;1466
0014be  4620              MOV      r0,r4                 ;1526
0014c0  f7fffffe          BL       WM_DefaultProc
0014c4  bf00              NOP      
0014c6  e764              B        |L1.5010|
;;;1528   
                          ENDP

                  MULTIEDIT_SetText PROC
;;;1674   */
;;;1675   void MULTIEDIT_SetText(MULTIEDIT_HANDLE hObj, const char* pNew) {
0014c8  b570              PUSH     {r4-r6,lr}
0014ca  4604              MOV      r4,r0
0014cc  460d              MOV      r5,r1
;;;1676     if (hObj) {
0014ce  b14c              CBZ      r4,|L1.5348|
;;;1677       MULTIEDIT_OBJ * pObj;
;;;1678       WM_LOCK();
;;;1679       pObj = MULTIEDIT_H2P(hObj);
0014d0  4620              MOV      r0,r4
0014d2  f7fffffe          BL       GUI_ALLOC_h2p
0014d6  4606              MOV      r6,r0
;;;1680       _SetText(hObj, pObj, pNew);
0014d8  462a              MOV      r2,r5
0014da  4631              MOV      r1,r6
0014dc  4620              MOV      r0,r4
0014de  f7fffffe          BL       _SetText
;;;1681       WM_UNLOCK();
;;;1682     }
0014e2  bf00              NOP      
                  |L1.5348|
;;;1683   }
0014e4  bd70              POP      {r4-r6,pc}
;;;1684   
                          ENDP

                  MULTIEDIT_CreateEx PROC
;;;1542   */
;;;1543   MULTIEDIT_HANDLE MULTIEDIT_CreateEx(int x0, int y0, int xsize, int ysize, WM_HWIN hParent, int WinFlags, int ExFlags,
0014e6  e92d5fff          PUSH     {r0-r12,lr}
;;;1544                                       int Id, int BufferSize, const char* pText)
;;;1545   {
0014ea  4680              MOV      r8,r0
0014ec  4689              MOV      r9,r1
0014ee  4692              MOV      r10,r2
0014f0  469b              MOV      r11,r3
0014f2  9e12              LDR      r6,[sp,#0x48]
;;;1546     MULTIEDIT_HANDLE hObj;
;;;1547     /* Create the window */
;;;1548     WM_LOCK();
;;;1549     if ((xsize == 0) && (ysize == 0) && (x0 == 0) && (y0 == 0)) {
0014f4  f1ba0f00          CMP      r10,#0
0014f8  d11d              BNE      |L1.5430|
0014fa  f1bb0f00          CMP      r11,#0
0014fe  d11a              BNE      |L1.5430|
001500  f1b80f00          CMP      r8,#0
001504  d117              BNE      |L1.5430|
001506  f1b90f00          CMP      r9,#0
00150a  d114              BNE      |L1.5430|
;;;1550       GUI_RECT Rect;
;;;1551       WM_GetClientRectEx(hParent, &Rect);
00150c  a902              ADD      r1,sp,#8
00150e  980e              LDR      r0,[sp,#0x38]
001510  f7fffffe          BL       WM_GetClientRectEx
;;;1552       xsize = Rect.x1 - Rect.x0 + 1;
001514  f9bd000c          LDRSH    r0,[sp,#0xc]
001518  f9bd1008          LDRSH    r1,[sp,#8]
00151c  eba00001          SUB      r0,r0,r1
001520  f1000a01          ADD      r10,r0,#1
;;;1553       ysize = Rect.y1 - Rect.y0 + 1;
001524  f9bd000e          LDRSH    r0,[sp,#0xe]
001528  f9bd100a          LDRSH    r1,[sp,#0xa]
00152c  eba00001          SUB      r0,r0,r1
001530  f1000b01          ADD      r11,r0,#1
;;;1554     }
001534  bf00              NOP      
                  |L1.5430|
;;;1555     hObj = WM_CreateWindowAsChild(x0, y0, xsize, ysize, hParent, WinFlags, &MULTIEDIT_Callback,
001536  2260              MOVS     r2,#0x60
001538  f2af13bb          ADR      r3,MULTIEDIT_Callback + 1
00153c  980f              LDR      r0,[sp,#0x3c]
00153e  b280              UXTH     r0,r0
001540  990e              LDR      r1,[sp,#0x38]
001542  e9cd3202          STRD     r3,r2,[sp,#8]
001546  e9cd1000          STRD     r1,r0,[sp,#0]
00154a  465b              MOV      r3,r11
00154c  4652              MOV      r2,r10
00154e  4649              MOV      r1,r9
001550  4640              MOV      r0,r8
001552  f7fffffe          BL       WM_CreateWindowAsChild
001556  4607              MOV      r7,r0
;;;1556                                   sizeof(MULTIEDIT_OBJ) - sizeof(WM_Obj));
;;;1557     if (hObj) {
001558  2f00              CMP      r7,#0
00155a  d04f              BEQ      |L1.5628|
;;;1558       int i;
;;;1559       MULTIEDIT_OBJ * pObj;
;;;1560       pObj = (MULTIEDIT_OBJ *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
00155c  4638              MOV      r0,r7
00155e  f7fffffe          BL       GUI_ALLOC_h2p
001562  4604              MOV      r4,r0
;;;1561       /* init widget specific variables */
;;;1562       WIDGET__Init(&pObj->Widget, Id, WIDGET_STATE_FOCUSSABLE);
001564  f04f0210          MOV      r2,#0x10
001568  4620              MOV      r0,r4
00156a  9911              LDR      r1,[sp,#0x44]
00156c  f7fffffe          BL       WIDGET__Init
;;;1563       /* init member variables */
;;;1564       MULTIEDIT_INIT_ID(pObj);
;;;1565       for (i = 0; i < NUM_DISP_MODES; i++) {
001570  f04f0500          MOV      r5,#0
001574  e00f              B        |L1.5526|
                  |L1.5494|
;;;1566         pObj->aBkColor[i]  = _aDefaultBkColor[i];
001576  48f8              LDR      r0,|L1.6488|
001578  f8501025          LDR      r1,[r0,r5,LSL #2]
00157c  f1040028          ADD      r0,r4,#0x28
001580  f8401025          STR      r1,[r0,r5,LSL #2]
;;;1567         pObj->aColor[i]    = _aDefaultColor[i];
001584  48f5              LDR      r0,|L1.6492|
001586  f8501025          LDR      r1,[r0,r5,LSL #2]
00158a  f1040030          ADD      r0,r4,#0x30
00158e  f8401025          STR      r1,[r0,r5,LSL #2]
001592  f1050501          ADD      r5,r5,#1              ;1565
                  |L1.5526|
001596  2d02              CMP      r5,#2                 ;1565
001598  dbed              BLT      |L1.5494|
;;;1568       }
;;;1569       pObj->pFont          = _pDefaultFont;
00159a  48f1              LDR      r0,|L1.6496|
00159c  6800              LDR      r0,[r0,#0]  ; _pDefaultFont
00159e  f1040438          ADD      r4,r4,#0x38
0015a2  63e0              STR      r0,[r4,#0x3c]
;;;1570       pObj->Flags          = ExFlags;
0015a4  9810              LDR      r0,[sp,#0x40]
0015a6  f8840040          STRB     r0,[r4,#0x40]
;;;1571       pObj->CursorPosChar  = 0;
0015aa  f04f0000          MOV      r0,#0
0015ae  8220              STRH     r0,[r4,#0x10]
;;;1572       pObj->CursorPosByte  = 0;
0015b0  8260              STRH     r0,[r4,#0x12]
;;;1573       pObj->HBorder        = 1;
0015b2  f04f0001          MOV      r0,#1
0015b6  f8840043          STRB     r0,[r4,#0x43]
;;;1574       pObj->MaxNumChars    = 0;
0015ba  f04f0000          MOV      r0,#0
0015be  8060              STRH     r0,[r4,#2]
;;;1575       pObj->NumCharsPrompt = 0;
0015c0  80e0              STRH     r0,[r4,#6]
;;;1576       pObj->BufferSize     = 0;
0015c2  81a0              STRH     r0,[r4,#0xc]
;;;1577       pObj->hText          = 0;
0015c4  f8240938          STRH     r0,[r4],#-0x38
;;;1578       if (BufferSize > 0) {
0015c8  2e00              CMP      r6,#0
0015ca  dd0f              BLE      |L1.5612|
;;;1579         WM_HWIN hText;
;;;1580         if ((hText = GUI_ALLOC_AllocZero(BufferSize)) != 0) {
0015cc  b230              SXTH     r0,r6
0015ce  f7fffffe          BL       GUI_ALLOC_AllocZero
0015d2  9003              STR      r0,[sp,#0xc]
0015d4  b120              CBZ      r0,|L1.5600|
;;;1581           pObj->BufferSize = BufferSize;
0015d6  f8a46044          STRH     r6,[r4,#0x44]
;;;1582           pObj->hText      = hText;
0015da  9803              LDR      r0,[sp,#0xc]
0015dc  8720              STRH     r0,[r4,#0x38]
0015de  e004              B        |L1.5610|
                  |L1.5600|
;;;1583         } else {
;;;1584           GUI_DEBUG_ERROROUT("MULTIEDIT_CreateEx failed to alloc buffer");
;;;1585           WM_DeleteWindow(hObj);
0015e0  4638              MOV      r0,r7
0015e2  f7fffffe          BL       WM_DeleteWindow
;;;1586           hObj = 0;
0015e6  f04f0700          MOV      r7,#0
                  |L1.5610|
;;;1587         }
;;;1588       }
0015ea  bf00              NOP      
                  |L1.5612|
;;;1589       MULTIEDIT_SetText(hObj, pText);
0015ec  4638              MOV      r0,r7
0015ee  9913              LDR      r1,[sp,#0x4c]
0015f0  f7fffffe          BL       MULTIEDIT_SetText
;;;1590       _ManageScrollers(hObj);
0015f4  4638              MOV      r0,r7
0015f6  f7fffffe          BL       _ManageScrollers
;;;1591     } else {
0015fa  bf00              NOP      
                  |L1.5628|
;;;1592       GUI_DEBUG_ERROROUT_IF(hObj==0, "MULTIEDIT_CreateEx failed")
;;;1593     }
;;;1594     WM_UNLOCK();
;;;1595     return hObj;
0015fc  4638              MOV      r0,r7
;;;1596   }
0015fe  b004              ADD      sp,sp,#0x10
001600  e8bd9ff0          POP      {r4-r12,pc}
;;;1597   
                          ENDP

                  MULTIEDIT_AddKey PROC
;;;1607   */
;;;1608   int MULTIEDIT_AddKey(MULTIEDIT_HANDLE hObj, U16 Key) {
001604  b570              PUSH     {r4-r6,lr}
001606  4604              MOV      r4,r0
001608  460d              MOV      r5,r1
;;;1609     int r = 0;
00160a  f04f0600          MOV      r6,#0
;;;1610     if (hObj) {
00160e  b124              CBZ      r4,|L1.5658|
;;;1611       WM_LOCK();
;;;1612       r = _AddKey(hObj, Key);
001610  4629              MOV      r1,r5
001612  4620              MOV      r0,r4
001614  f7fffffe          BL       _AddKey
001618  4606              MOV      r6,r0
                  |L1.5658|
;;;1613       WM_UNLOCK();
;;;1614     }
;;;1615     return r;
00161a  4630              MOV      r0,r6
;;;1616   }
00161c  bd70              POP      {r4-r6,pc}
;;;1617   
                          ENDP

                  MULTIEDIT_AddText PROC
;;;1621   */
;;;1622   int MULTIEDIT_AddText(MULTIEDIT_HANDLE hObj, const char * s) {
00161e  e92d4ff8          PUSH     {r3-r11,lr}
001622  4682              MOV      r10,r0
001624  4688              MOV      r8,r1
;;;1623     int Result;
;;;1624     Result = 1;
001626  f04f0001          MOV      r0,#1
00162a  9000              STR      r0,[sp,#0]
;;;1625     if (hObj && s) {
00162c  f1ba0f00          CMP      r10,#0
001630  d076              BEQ      |L1.5920|
001632  f1b80f00          CMP      r8,#0
001636  d073              BEQ      |L1.5920|
;;;1626       MULTIEDIT_OBJ * pObj;
;;;1627       WM_LOCK();
;;;1628       pObj = MULTIEDIT_H2P(hObj);
001638  4650              MOV      r0,r10
00163a  f7fffffe          BL       GUI_ALLOC_h2p
00163e  4604              MOV      r4,r0
;;;1629       if (!pObj->hText) {
001640  8f20              LDRH     r0,[r4,#0x38]
001642  b928              CBNZ     r0,|L1.5712|
;;;1630         _SetText(hObj, pObj, s);
001644  4642              MOV      r2,r8
001646  4621              MOV      r1,r4
001648  4650              MOV      r0,r10
00164a  f7fffffe          BL       _SetText
00164e  e066              B        |L1.5918|
                  |L1.5712|
;;;1631       } else {
;;;1632         char * pText;
;;;1633         int NumCharsNew, NumCharsOld, NumBytesNew, NumBytesOld;
;;;1634         pText = (char *)GUI_ALLOC_h2p(pObj->hText);
001650  f9b40038          LDRSH    r0,[r4,#0x38]
001654  f7fffffe          BL       GUI_ALLOC_h2p
001658  4605              MOV      r5,r0
;;;1635         NumCharsOld = GUI__GetNumChars(pText);
00165a  4628              MOV      r0,r5
00165c  f7fffffe          BL       GUI__GetNumChars
001660  4681              MOV      r9,r0
;;;1636         NumBytesOld = GUI_UC__NumChars2NumBytes(pText, NumCharsOld);
001662  4649              MOV      r1,r9
001664  4628              MOV      r0,r5
001666  f7fffffe          BL       GUI_UC__NumChars2NumBytes
00166a  4683              MOV      r11,r0
;;;1637         NumCharsNew = GUI__GetNumChars(s);
00166c  4640              MOV      r0,r8
00166e  f7fffffe          BL       GUI__GetNumChars
001672  4606              MOV      r6,r0
;;;1638         if (pObj->MaxNumChars > 0) {
001674  8f60              LDRH     r0,[r4,#0x3a]
001676  2800              CMP      r0,#0
001678  dd07              BLE      |L1.5770|
;;;1639           if ((NumCharsOld + NumCharsNew) > pObj->MaxNumChars) {
00167a  eb090006          ADD      r0,r9,r6
00167e  8f61              LDRH     r1,[r4,#0x3a]
001680  4288              CMP      r0,r1
001682  dd02              BLE      |L1.5770|
;;;1640             NumCharsNew = pObj->MaxNumChars - NumCharsOld;
001684  8f60              LDRH     r0,[r4,#0x3a]
001686  eba00609          SUB      r6,r0,r9
                  |L1.5770|
;;;1641           }
;;;1642         }
;;;1643         if (NumCharsNew > 0) {
00168a  2e00              CMP      r6,#0
00168c  dd46              BLE      |L1.5916|
;;;1644           NumBytesNew = GUI_UC__NumChars2NumBytes(s, NumCharsNew);
00168e  4631              MOV      r1,r6
001690  4640              MOV      r0,r8
001692  f7fffffe          BL       GUI_UC__NumChars2NumBytes
001696  4607              MOV      r7,r0
;;;1645           if (_IsSpaceInBuffer(pObj, NumBytesNew)) {
001698  4639              MOV      r1,r7
00169a  4620              MOV      r0,r4
00169c  f7fffffe          BL       _IsSpaceInBuffer
0016a0  2800              CMP      r0,#0
0016a2  d03b              BEQ      |L1.5916|
;;;1646             pText = (char *)GUI_ALLOC_h2p(pObj->hText);
0016a4  f9340f38          LDRSH    r0,[r4,#0x38]!
0016a8  f7fffffe          BL       GUI_ALLOC_h2p
0016ac  4605              MOV      r5,r0
;;;1647             memmove(pText + pObj->CursorPosByte + NumBytesNew, 
0016ae  8a63              LDRH     r3,[r4,#0x12]
0016b0  ebab0203          SUB      r2,r11,r3
0016b4  eb030105          ADD      r1,r3,r5
0016b8  442b              ADD      r3,r3,r5
0016ba  eb030007          ADD      r0,r3,r7
0016be  f7fffffe          BL       __aeabi_memmove
;;;1648                     pText + pObj->CursorPosByte, 
;;;1649                     NumBytesOld - pObj->CursorPosByte);
;;;1650             memcpy(pText + pObj->CursorPosByte, s, NumBytesNew);
0016c2  8a61              LDRH     r1,[r4,#0x12]
0016c4  1948              ADDS     r0,r1,r5
0016c6  463a              MOV      r2,r7
0016c8  4641              MOV      r1,r8
0016ca  f7fffffe          BL       __aeabi_memcpy
;;;1651             *(pText + NumBytesOld + NumBytesNew) = 0;
0016ce  f04f0000          MOV      r0,#0
0016d2  eb05010b          ADD      r1,r5,r11
0016d6  55c8              STRB     r0,[r1,r7]
;;;1652             pObj->NumChars += NumCharsNew;
0016d8  88a0              LDRH     r0,[r4,#4]
0016da  4430              ADD      r0,r0,r6
0016dc  80a0              STRH     r0,[r4,#4]
;;;1653             _SetCursorPos(hObj, pObj, pObj->CursorPosChar + NumCharsNew);
0016de  8a20              LDRH     r0,[r4,#0x10]
0016e0  f1a40438          SUB      r4,r4,#0x38
0016e4  eb000206          ADD      r2,r0,r6
0016e8  4621              MOV      r1,r4
0016ea  4650              MOV      r0,r10
0016ec  f7fffffe          BL       _SetCursorPos
;;;1654             _InvalidateNumLines(pObj);
0016f0  4620              MOV      r0,r4
0016f2  f7fffffe          BL       _InvalidateNumLines
;;;1655             _InvalidateTextSizeX(pObj);
0016f6  4620              MOV      r0,r4
0016f8  f7fffffe          BL       _InvalidateTextSizeX
;;;1656             _InvalidateTextArea(hObj);
0016fc  4650              MOV      r0,r10
0016fe  f7fffffe          BL       _InvalidateTextArea
;;;1657             _InvalidateCursorXY(pObj);
001702  4620              MOV      r0,r4
001704  f7fffffe          BL       _InvalidateCursorXY
;;;1658             _ClearCache(pObj);
001708  4620              MOV      r0,r4
00170a  f7fffffe          BL       _ClearCache
;;;1659             WM_NotifyParent(hObj, WM_NOTIFICATION_VALUE_CHANGED);
00170e  2105              MOVS     r1,#5
001710  4650              MOV      r0,r10
001712  f7fffffe          BL       WM_NotifyParent
;;;1660             Result = 0;
001716  f04f0000          MOV      r0,#0
00171a  9000              STR      r0,[sp,#0]
                  |L1.5916|
;;;1661           }
;;;1662         }
;;;1663       }
00171c  bf00              NOP      
                  |L1.5918|
;;;1664       WM_UNLOCK();
;;;1665     }
00171e  bf00              NOP      
                  |L1.5920|
;;;1666     return Result;
001720  9800              LDR      r0,[sp,#0]
;;;1667   }
001722  e8bd8ff8          POP      {r3-r11,pc}
;;;1668   
                          ENDP

                  MULTIEDIT_GetText PROC
;;;1688   */
;;;1689   void MULTIEDIT_GetText(MULTIEDIT_HANDLE hObj, char* sDest, int MaxLen) {
001726  e92d47f0          PUSH     {r4-r10,lr}
00172a  4681              MOV      r9,r0
00172c  460c              MOV      r4,r1
00172e  4615              MOV      r5,r2
;;;1690     if (hObj) {
001730  f1b90f00          CMP      r9,#0
001734  d022              BEQ      |L1.6012|
;;;1691       MULTIEDIT_OBJ* pObj;
;;;1692       WM_LOCK();
;;;1693       pObj = MULTIEDIT_H2P(hObj);
001736  4648              MOV      r0,r9
001738  f7fffffe          BL       GUI_ALLOC_h2p
00173c  4606              MOV      r6,r0
;;;1694       if (pObj) {
00173e  b1e6              CBZ      r6,|L1.6010|
;;;1695         char* pText;
;;;1696         int Len;
;;;1697         pText  = (char*) GUI_ALLOC_h2p(pObj->hText);
001740  f9b60038          LDRSH    r0,[r6,#0x38]
001744  f7fffffe          BL       GUI_ALLOC_h2p
001748  4607              MOV      r7,r0
;;;1698         pText += GUI_UC__NumChars2NumBytes(pText, pObj->NumCharsPrompt);
00174a  8ff1              LDRH     r1,[r6,#0x3e]
00174c  4638              MOV      r0,r7
00174e  f7fffffe          BL       GUI_UC__NumChars2NumBytes
001752  4407              ADD      r7,r7,r0
;;;1699         Len    = strlen(pText);
001754  4638              MOV      r0,r7
001756  f7fffffe          BL       strlen
00175a  4680              MOV      r8,r0
;;;1700         if (Len > (MaxLen - 1)) {
00175c  f1a50001          SUB      r0,r5,#1
001760  4540              CMP      r0,r8
001762  da00              BGE      |L1.5990|
;;;1701           Len = MaxLen - 1;
001764  4680              MOV      r8,r0
                  |L1.5990|
;;;1702         }
;;;1703         memcpy(sDest, pText, Len);
001766  4642              MOV      r2,r8
001768  4639              MOV      r1,r7
00176a  4620              MOV      r0,r4
00176c  f7fffffe          BL       __aeabi_memcpy
;;;1704         *(sDest + Len) = 0;
001770  f04f0000          MOV      r0,#0
001774  f8040008          STRB     r0,[r4,r8]
;;;1705       }
001778  bf00              NOP      
                  |L1.6010|
;;;1706       WM_UNLOCK();
;;;1707     }
00177a  bf00              NOP      
                  |L1.6012|
;;;1708   }
00177c  e8bd87f0          POP      {r4-r10,pc}
;;;1709   
                          ENDP

                  MULTIEDIT_GetPrompt PROC
;;;1713   */
;;;1714   void MULTIEDIT_GetPrompt(MULTIEDIT_HANDLE hObj, char * sDest, int MaxLen) {
001780  e92d47f0          PUSH     {r4-r10,lr}
001784  4680              MOV      r8,r0
001786  460c              MOV      r4,r1
001788  4615              MOV      r5,r2
;;;1715     if (hObj) {
00178a  f1b80f00          CMP      r8,#0
00178e  d01d              BEQ      |L1.6092|
;;;1716       MULTIEDIT_OBJ * pObj;
;;;1717       WM_LOCK();
;;;1718       pObj = MULTIEDIT_H2P(hObj);
001790  4640              MOV      r0,r8
001792  f7fffffe          BL       GUI_ALLOC_h2p
001796  4606              MOV      r6,r0
;;;1719       if (pObj) {
001798  b1be              CBZ      r6,|L1.6090|
;;;1720         char* sSource = (char*)GUI_ALLOC_h2p(pObj->hText);
00179a  f9b60038          LDRSH    r0,[r6,#0x38]
00179e  f7fffffe          BL       GUI_ALLOC_h2p
0017a2  4681              MOV      r9,r0
;;;1721         int Len = GUI_UC__NumChars2NumBytes(sSource, pObj->NumCharsPrompt);
0017a4  8ff1              LDRH     r1,[r6,#0x3e]
0017a6  4648              MOV      r0,r9
0017a8  f7fffffe          BL       GUI_UC__NumChars2NumBytes
0017ac  4607              MOV      r7,r0
;;;1722         if (Len > (MaxLen - 1)) {
0017ae  f1a50001          SUB      r0,r5,#1
0017b2  42b8              CMP      r0,r7
0017b4  da00              BGE      |L1.6072|
;;;1723           Len = MaxLen - 1;
0017b6  4607              MOV      r7,r0
                  |L1.6072|
;;;1724         }
;;;1725         memcpy(sDest, sSource, Len);
0017b8  463a              MOV      r2,r7
0017ba  4649              MOV      r1,r9
0017bc  4620              MOV      r0,r4
0017be  f7fffffe          BL       __aeabi_memcpy
;;;1726         *(sDest + Len) = 0;
0017c2  f04f0000          MOV      r0,#0
0017c6  55e0              STRB     r0,[r4,r7]
;;;1727       }
0017c8  bf00              NOP      
                  |L1.6090|
;;;1728       WM_UNLOCK();
;;;1729     }
0017ca  bf00              NOP      
                  |L1.6092|
;;;1730   }
0017cc  e8bd87f0          POP      {r4-r10,pc}
;;;1731   
                          ENDP

                  MULTIEDIT_SetWrapWord PROC
;;;1735   */
;;;1736   void MULTIEDIT_SetWrapWord(MULTIEDIT_HANDLE hObj) {
0017d0  b510              PUSH     {r4,lr}
0017d2  4604              MOV      r4,r0
;;;1737     _SetWrapMode(hObj, GUI_WRAPMODE_WORD);
0017d4  f04f0101          MOV      r1,#1
0017d8  4620              MOV      r0,r4
0017da  f7fffffe          BL       _SetWrapMode
;;;1738   }
0017de  bd10              POP      {r4,pc}
;;;1739   
                          ENDP

                  MULTIEDIT_SetWrapChar PROC
;;;1743   */
;;;1744   void MULTIEDIT_SetWrapChar(MULTIEDIT_HANDLE hObj) {
0017e0  b510              PUSH     {r4,lr}
0017e2  4604              MOV      r4,r0
;;;1745     _SetWrapMode(hObj, GUI_WRAPMODE_CHAR);
0017e4  f04f0102          MOV      r1,#2
0017e8  4620              MOV      r0,r4
0017ea  f7fffffe          BL       _SetWrapMode
;;;1746   }
0017ee  bd10              POP      {r4,pc}
;;;1747   
                          ENDP

                  MULTIEDIT_SetWrapNone PROC
;;;1751   */
;;;1752   void MULTIEDIT_SetWrapNone(MULTIEDIT_HANDLE hObj) {
0017f0  b510              PUSH     {r4,lr}
0017f2  4604              MOV      r4,r0
;;;1753     _SetWrapMode(hObj, GUI_WRAPMODE_NONE);
0017f4  f04f0100          MOV      r1,#0
0017f8  4620              MOV      r0,r4
0017fa  f7fffffe          BL       _SetWrapMode
;;;1754   }
0017fe  bd10              POP      {r4,pc}
;;;1755   
                          ENDP

                  MULTIEDIT_SetInsertMode PROC
;;;1759   */
;;;1760   void MULTIEDIT_SetInsertMode(MULTIEDIT_HANDLE hObj, int OnOff) {
001800  b570              PUSH     {r4-r6,lr}
001802  4604              MOV      r4,r0
001804  460d              MOV      r5,r1
;;;1761     _SetFlag(hObj, OnOff, MULTIEDIT_SF_INSERT);
001806  f04f0204          MOV      r2,#4
00180a  4629              MOV      r1,r5
00180c  4620              MOV      r0,r4
00180e  f7fffffe          BL       _SetFlag
;;;1762   }
001812  bd70              POP      {r4-r6,pc}
;;;1763   
                          ENDP

                  MULTIEDIT_SetReadOnly PROC
;;;1767   */
;;;1768   void MULTIEDIT_SetReadOnly(MULTIEDIT_HANDLE hObj, int OnOff) {
001814  b570              PUSH     {r4-r6,lr}
001816  4604              MOV      r4,r0
001818  460d              MOV      r5,r1
;;;1769     _SetFlag(hObj, OnOff, MULTIEDIT_SF_READONLY);
00181a  f04f0201          MOV      r2,#1
00181e  4629              MOV      r1,r5
001820  4620              MOV      r0,r4
001822  f7fffffe          BL       _SetFlag
;;;1770   }
001826  bd70              POP      {r4-r6,pc}
;;;1771   
                          ENDP

                  MULTIEDIT_SetPasswordMode PROC
;;;1775   */
;;;1776   void MULTIEDIT_SetPasswordMode(MULTIEDIT_HANDLE hObj, int OnOff) {
001828  b570              PUSH     {r4-r6,lr}
00182a  4604              MOV      r4,r0
00182c  460d              MOV      r5,r1
;;;1777     if (hObj) {
00182e  b19c              CBZ      r4,|L1.6232|
;;;1778       MULTIEDIT_OBJ* pObj;
;;;1779       WM_LOCK();
;;;1780       pObj = MULTIEDIT_H2P(hObj);
001830  4620              MOV      r0,r4
001832  f7fffffe          BL       GUI_ALLOC_h2p
001836  4606              MOV      r6,r0
;;;1781       _SetFlag(hObj, OnOff, MULTIEDIT_SF_PASSWORD);
001838  f04f0220          MOV      r2,#0x20
00183c  4629              MOV      r1,r5
00183e  4620              MOV      r0,r4
001840  f7fffffe          BL       _SetFlag
;;;1782       _InvalidateCursorXY(pObj);
001844  4630              MOV      r0,r6
001846  f7fffffe          BL       _InvalidateCursorXY
;;;1783       _InvalidateNumLines(pObj);
00184a  4630              MOV      r0,r6
00184c  f7fffffe          BL       _InvalidateNumLines
;;;1784       _InvalidateTextSizeX(pObj);
001850  4630              MOV      r0,r6
001852  f7fffffe          BL       _InvalidateTextSizeX
;;;1785       WM_UNLOCK();
;;;1786     }
001856  bf00              NOP      
                  |L1.6232|
;;;1787   }
001858  bd70              POP      {r4-r6,pc}
;;;1788   
                          ENDP

                  MULTIEDIT_SetAutoScrollV PROC
;;;1792   */
;;;1793   void MULTIEDIT_SetAutoScrollV(MULTIEDIT_HANDLE hObj, int OnOff) {
00185a  b570              PUSH     {r4-r6,lr}
00185c  4604              MOV      r4,r0
00185e  460d              MOV      r5,r1
;;;1794     _SetFlag(hObj, OnOff, MULTIEDIT_SF_AUTOSCROLLBAR_V);
001860  f04f0208          MOV      r2,#8
001864  4629              MOV      r1,r5
001866  4620              MOV      r0,r4
001868  f7fffffe          BL       _SetFlag
;;;1795   }
00186c  bd70              POP      {r4-r6,pc}
;;;1796   
                          ENDP

                  MULTIEDIT_SetAutoScrollH PROC
;;;1800   */
;;;1801   void MULTIEDIT_SetAutoScrollH(MULTIEDIT_HANDLE hObj, int OnOff) {
00186e  b570              PUSH     {r4-r6,lr}
001870  4604              MOV      r4,r0
001872  460d              MOV      r5,r1
;;;1802     _SetFlag(hObj, OnOff, MULTIEDIT_SF_AUTOSCROLLBAR_H);
001874  f04f0210          MOV      r2,#0x10
001878  4629              MOV      r1,r5
00187a  4620              MOV      r0,r4
00187c  f7fffffe          BL       _SetFlag
;;;1803   }
001880  bd70              POP      {r4-r6,pc}
;;;1804   
                          ENDP

                  MULTIEDIT_SetHBorder PROC
;;;1808   */
;;;1809   void MULTIEDIT_SetHBorder(MULTIEDIT_HANDLE hObj, unsigned HBorder) {
001882  b570              PUSH     {r4-r6,lr}
001884  4605              MOV      r5,r0
001886  460c              MOV      r4,r1
;;;1810     if (hObj) {
001888  b16d              CBZ      r5,|L1.6310|
;;;1811       MULTIEDIT_OBJ* pObj;
;;;1812       WM_LOCK();
;;;1813       pObj = MULTIEDIT_H2P(hObj);
00188a  4628              MOV      r0,r5
00188c  f7fffffe          BL       GUI_ALLOC_h2p
001890  4606              MOV      r6,r0
;;;1814       if ((unsigned)pObj->HBorder != HBorder) {
001892  f896007b          LDRB     r0,[r6,#0x7b]
001896  42a0              CMP      r0,r4
001898  d004              BEQ      |L1.6308|
;;;1815         pObj->HBorder = HBorder;
00189a  f886407b          STRB     r4,[r6,#0x7b]
;;;1816         _Invalidate(hObj);
00189e  4628              MOV      r0,r5
0018a0  f7fffffe          BL       _Invalidate
                  |L1.6308|
;;;1817       }
;;;1818       WM_UNLOCK();
;;;1819     }
0018a4  bf00              NOP      
                  |L1.6310|
;;;1820   }
0018a6  bd70              POP      {r4-r6,pc}
;;;1821   
                          ENDP

                  MULTIEDIT_SetFont PROC
;;;1825   */
;;;1826   void MULTIEDIT_SetFont(MULTIEDIT_HANDLE hObj, const GUI_FONT GUI_UNI_PTR * pFont) {
0018a8  b570              PUSH     {r4-r6,lr}
0018aa  4606              MOV      r6,r0
0018ac  460c              MOV      r4,r1
;;;1827     if (hObj) {
0018ae  b1a6              CBZ      r6,|L1.6362|
;;;1828       MULTIEDIT_OBJ* pObj;
;;;1829       WM_LOCK();
;;;1830       pObj = MULTIEDIT_H2P(hObj);
0018b0  4630              MOV      r0,r6
0018b2  f7fffffe          BL       GUI_ALLOC_h2p
0018b6  4605              MOV      r5,r0
;;;1831       if (pObj->pFont != pFont) {
0018b8  6f68              LDR      r0,[r5,#0x74]
0018ba  42a0              CMP      r0,r4
0018bc  d00c              BEQ      |L1.6360|
;;;1832         pObj->pFont = pFont;
0018be  676c              STR      r4,[r5,#0x74]
;;;1833         _InvalidateTextArea(hObj);
0018c0  4630              MOV      r0,r6
0018c2  f7fffffe          BL       _InvalidateTextArea
;;;1834         _InvalidateCursorXY(pObj);
0018c6  4628              MOV      r0,r5
0018c8  f7fffffe          BL       _InvalidateCursorXY
;;;1835         _InvalidateNumLines(pObj);
0018cc  4628              MOV      r0,r5
0018ce  f7fffffe          BL       _InvalidateNumLines
;;;1836         _InvalidateTextSizeX(pObj);
0018d2  4628              MOV      r0,r5
0018d4  f7fffffe          BL       _InvalidateTextSizeX
                  |L1.6360|
;;;1837       }
;;;1838       WM_UNLOCK();
;;;1839     }
0018d8  bf00              NOP      
                  |L1.6362|
;;;1840   }
0018da  bd70              POP      {r4-r6,pc}
;;;1841   
                          ENDP

                  MULTIEDIT_SetBkColor PROC
;;;1845   */
;;;1846   void MULTIEDIT_SetBkColor(MULTIEDIT_HANDLE hObj, unsigned Index, GUI_COLOR color) {
0018dc  e92d41f0          PUSH     {r4-r8,lr}
0018e0  4605              MOV      r5,r0
0018e2  460c              MOV      r4,r1
0018e4  4616              MOV      r6,r2
;;;1847     if (hObj && (Index < NUM_DISP_MODES)) {
0018e6  b16d              CBZ      r5,|L1.6404|
0018e8  2c02              CMP      r4,#2
0018ea  d20b              BCS      |L1.6404|
;;;1848       MULTIEDIT_OBJ* pObj;
;;;1849       WM_LOCK();
;;;1850       pObj = MULTIEDIT_H2P(hObj);
0018ec  4628              MOV      r0,r5
0018ee  f7fffffe          BL       GUI_ALLOC_h2p
0018f2  4607              MOV      r7,r0
;;;1851       pObj->aBkColor[Index] = color;
0018f4  f1070028          ADD      r0,r7,#0x28
0018f8  f8406024          STR      r6,[r0,r4,LSL #2]
;;;1852       _InvalidateTextArea(hObj);
0018fc  4628              MOV      r0,r5
0018fe  f7fffffe          BL       _InvalidateTextArea
;;;1853       WM_UNLOCK();
;;;1854     }
001902  bf00              NOP      
                  |L1.6404|
;;;1855   }
001904  e8bd81f0          POP      {r4-r8,pc}
;;;1856   
                          ENDP

                  MULTIEDIT_SetCursorOffset PROC
;;;1860   */
;;;1861   void MULTIEDIT_SetCursorOffset(MULTIEDIT_HANDLE hObj, int Offset) {
001908  b570              PUSH     {r4-r6,lr}
00190a  4604              MOV      r4,r0
00190c  460d              MOV      r5,r1
;;;1862     if (hObj) {
00190e  b164              CBZ      r4,|L1.6442|
;;;1863       MULTIEDIT_OBJ* pObj;
;;;1864       WM_LOCK();
;;;1865       pObj = MULTIEDIT_H2P(hObj);
001910  4620              MOV      r0,r4
001912  f7fffffe          BL       GUI_ALLOC_h2p
001916  4606              MOV      r6,r0
;;;1866       _SetCursorPos(hObj, pObj, Offset);
001918  462a              MOV      r2,r5
00191a  4631              MOV      r1,r6
00191c  4620              MOV      r0,r4
00191e  f7fffffe          BL       _SetCursorPos
;;;1867       WM_Invalidate(hObj);
001922  4620              MOV      r0,r4
001924  f7fffffe          BL       WM_InvalidateWindow
;;;1868       WM_UNLOCK();
;;;1869     }
001928  bf00              NOP      
                  |L1.6442|
;;;1870   }
00192a  bd70              POP      {r4-r6,pc}
;;;1871   
                          ENDP

                  MULTIEDIT_SetTextColor PROC
;;;1875   */
;;;1876   void MULTIEDIT_SetTextColor(MULTIEDIT_HANDLE hObj, unsigned Index, GUI_COLOR color) {
00192c  e92d41f0          PUSH     {r4-r8,lr}
001930  4605              MOV      r5,r0
001932  460c              MOV      r4,r1
001934  4616              MOV      r6,r2
;;;1877     if (hObj && (Index < NUM_DISP_MODES)) {
001936  b16d              CBZ      r5,|L1.6484|
001938  2c02              CMP      r4,#2
00193a  d20b              BCS      |L1.6484|
;;;1878       MULTIEDIT_OBJ* pObj;
;;;1879       WM_LOCK();
;;;1880       pObj = MULTIEDIT_H2P(hObj);
00193c  4628              MOV      r0,r5
00193e  f7fffffe          BL       GUI_ALLOC_h2p
001942  4607              MOV      r7,r0
;;;1881       pObj->aColor[Index] = color;
001944  f1070030          ADD      r0,r7,#0x30
001948  f8406024          STR      r6,[r0,r4,LSL #2]
;;;1882       WM_Invalidate(hObj);
00194c  4628              MOV      r0,r5
00194e  f7fffffe          BL       WM_InvalidateWindow
;;;1883       WM_UNLOCK();
;;;1884     }
001952  bf00              NOP      
                  |L1.6484|
;;;1885   }
001954  e8bd81f0          POP      {r4-r8,pc}
                  |L1.6488|
                          DCD      _aDefaultBkColor
                  |L1.6492|
                          DCD      _aDefaultColor
                  |L1.6496|
                          DCD      _pDefaultFont
                          ENDP

                  MULTIEDIT_SetPrompt PROC
;;;1890   */
;;;1891   void MULTIEDIT_SetPrompt(MULTIEDIT_HANDLE hObj, const char* pPrompt) {
001964  e92d4ff8          PUSH     {r3-r11,lr}
001968  4682              MOV      r10,r0
00196a  460e              MOV      r6,r1
;;;1892     if (hObj) {
00196c  f1ba0f00          CMP      r10,#0
001970  d057              BEQ      |L1.6690|
;;;1893       MULTIEDIT_OBJ* pObj;
;;;1894       int NumCharsNew = 0, NumCharsOld = 0;
001972  f04f0700          MOV      r7,#0
001976  46bb              MOV      r11,r7
;;;1895       int NumBytesNew = 0, NumBytesOld = 0;
001978  46b8              MOV      r8,r7
00197a  46b9              MOV      r9,r7
;;;1896       char* pText;
;;;1897       WM_LOCK();
;;;1898       pObj = MULTIEDIT_H2P(hObj);
00197c  4650              MOV      r0,r10
00197e  f7fffffe          BL       GUI_ALLOC_h2p
001982  4604              MOV      r4,r0
;;;1899       if (pObj->hText) {
001984  8f20              LDRH     r0,[r4,#0x38]
001986  b158              CBZ      r0,|L1.6560|
;;;1900         pText = (char*) GUI_ALLOC_h2p(pObj->hText);
001988  f9b40038          LDRSH    r0,[r4,#0x38]
00198c  f7fffffe          BL       GUI_ALLOC_h2p
001990  4605              MOV      r5,r0
;;;1901         NumCharsOld = pObj->NumCharsPrompt;
001992  f8b4b03e          LDRH     r11,[r4,#0x3e]
;;;1902         NumBytesOld = GUI_UC__NumChars2NumBytes(pText, NumCharsOld);
001996  4659              MOV      r1,r11
001998  4628              MOV      r0,r5
00199a  f7fffffe          BL       GUI_UC__NumChars2NumBytes
00199e  4681              MOV      r9,r0
                  |L1.6560|
;;;1903       }
;;;1904       if (pPrompt) {
0019a0  b146              CBZ      r6,|L1.6580|
;;;1905         NumCharsNew = GUI__GetNumChars(pPrompt);
0019a2  4630              MOV      r0,r6
0019a4  f7fffffe          BL       GUI__GetNumChars
0019a8  4607              MOV      r7,r0
;;;1906         NumBytesNew = GUI_UC__NumChars2NumBytes(pPrompt, NumCharsNew);
0019aa  4639              MOV      r1,r7
0019ac  4630              MOV      r0,r6
0019ae  f7fffffe          BL       GUI_UC__NumChars2NumBytes
0019b2  4680              MOV      r8,r0
                  |L1.6580|
;;;1907       }
;;;1908       if (_IsCharsAvailable(pObj, NumCharsNew - NumCharsOld)) {
0019b4  eba7010b          SUB      r1,r7,r11
0019b8  4620              MOV      r0,r4
0019ba  f7fffffe          BL       _IsCharsAvailable
0019be  b378              CBZ      r0,|L1.6688|
;;;1909         if (_IsSpaceInBuffer(pObj, NumBytesNew - NumBytesOld)) {
0019c0  eba80109          SUB      r1,r8,r9
0019c4  4620              MOV      r0,r4
0019c6  f7fffffe          BL       _IsSpaceInBuffer
0019ca  b348              CBZ      r0,|L1.6688|
;;;1910           pText = (char*) GUI_ALLOC_h2p(pObj->hText);
0019cc  f9b40038          LDRSH    r0,[r4,#0x38]
0019d0  f7fffffe          BL       GUI_ALLOC_h2p
0019d4  4605              MOV      r5,r0
;;;1911           memmove(pText + NumBytesNew, pText + NumBytesOld, strlen(pText + NumBytesOld) + 1);
0019d6  eb050009          ADD      r0,r5,r9
0019da  f7fffffe          BL       strlen
0019de  1c40              ADDS     r0,r0,#1
0019e0  eb050109          ADD      r1,r5,r9
0019e4  9000              STR      r0,[sp,#0]
0019e6  eb050008          ADD      r0,r5,r8
0019ea  9a00              LDR      r2,[sp,#0]
0019ec  f7fffffe          BL       __aeabi_memmove
;;;1912           if (pPrompt) {
0019f0  b126              CBZ      r6,|L1.6652|
;;;1913             memcpy(pText, pPrompt, NumBytesNew);
0019f2  4642              MOV      r2,r8
0019f4  4631              MOV      r1,r6
0019f6  4628              MOV      r0,r5
0019f8  f7fffffe          BL       __aeabi_memcpy
                  |L1.6652|
;;;1914           }
;;;1915           pObj->NumCharsPrompt = NumCharsNew;
0019fc  87e7              STRH     r7,[r4,#0x3e]
;;;1916           _SetCursorPos(hObj, pObj, NumCharsNew);
0019fe  463a              MOV      r2,r7
001a00  4621              MOV      r1,r4
001a02  4650              MOV      r0,r10
001a04  f7fffffe          BL       _SetCursorPos
;;;1917           _InvalidateTextArea(hObj);
001a08  4650              MOV      r0,r10
001a0a  f7fffffe          BL       _InvalidateTextArea
;;;1918           _InvalidateNumChars(pObj);
001a0e  4620              MOV      r0,r4
001a10  f7fffffe          BL       _InvalidateNumChars
;;;1919           _InvalidateNumLines(pObj);
001a14  4620              MOV      r0,r4
001a16  f7fffffe          BL       _InvalidateNumLines
;;;1920           _InvalidateTextSizeX(pObj);
001a1a  4620              MOV      r0,r4
001a1c  f7fffffe          BL       _InvalidateTextSizeX
                  |L1.6688|
;;;1921         }
;;;1922       }
;;;1923       WM_UNLOCK();
;;;1924     }
001a20  bf00              NOP      
                  |L1.6690|
;;;1925   }
001a22  e8bd8ff8          POP      {r3-r11,pc}
;;;1926   
                          ENDP

                  MULTIEDIT_SetBufferSize PROC
;;;1930   */
;;;1931   void MULTIEDIT_SetBufferSize(MULTIEDIT_HANDLE hObj, int BufferSize) {
001a26  e92d41f0          PUSH     {r4-r8,lr}
001a2a  4606              MOV      r6,r0
001a2c  460d              MOV      r5,r1
;;;1932     if (hObj) {
001a2e  b33e              CBZ      r6,|L1.6784|
;;;1933       MULTIEDIT_OBJ* pObj;
;;;1934       WM_HMEM hText;
;;;1935       WM_LOCK();
;;;1936       pObj = MULTIEDIT_H2P(hObj);
001a30  4630              MOV      r0,r6
001a32  f7fffffe          BL       GUI_ALLOC_h2p
001a36  4604              MOV      r4,r0
;;;1937       if ((hText = GUI_ALLOC_AllocZero(BufferSize)) == 0) {
001a38  b228              SXTH     r0,r5
001a3a  f7fffffe          BL       GUI_ALLOC_AllocZero
001a3e  0007              MOVS     r7,r0
001a40  d01a              BEQ      |L1.6776|
;;;1938         GUI_DEBUG_ERROROUT("MULTIEDIT_SetBufferSize failed to alloc buffer");
;;;1939       } else {
;;;1940         GUI_ALLOC_FreePtr(&pObj->hText);
001a42  f1040038          ADD      r0,r4,#0x38
001a46  f7fffffe          BL       GUI_ALLOC_FreePtr
;;;1941         pObj->hText          = hText;
001a4a  8727              STRH     r7,[r4,#0x38]
;;;1942         pObj->BufferSize     = BufferSize;
001a4c  f8a45044          STRH     r5,[r4,#0x44]
;;;1943         pObj->NumCharsPrompt = 0;
001a50  f04f0000          MOV      r0,#0
001a54  87e0              STRH     r0,[r4,#0x3e]
;;;1944         _SetCursorPos(hObj, pObj, 0);
001a56  4602              MOV      r2,r0
001a58  4621              MOV      r1,r4
001a5a  4630              MOV      r0,r6
001a5c  f7fffffe          BL       _SetCursorPos
;;;1945         _InvalidateNumChars(pObj);
001a60  4620              MOV      r0,r4
001a62  f7fffffe          BL       _InvalidateNumChars
;;;1946         _InvalidateCursorXY(pObj);
001a66  4620              MOV      r0,r4
001a68  f7fffffe          BL       _InvalidateCursorXY
;;;1947         _InvalidateNumLines(pObj);
001a6c  4620              MOV      r0,r4
001a6e  f7fffffe          BL       _InvalidateNumLines
;;;1948         _InvalidateTextSizeX(pObj);
001a72  4620              MOV      r0,r4
001a74  f7fffffe          BL       _InvalidateTextSizeX
                  |L1.6776|
;;;1949       }
;;;1950       _InvalidateTextArea(hObj);
001a78  4630              MOV      r0,r6
001a7a  f7fffffe          BL       _InvalidateTextArea
;;;1951       WM_UNLOCK();
;;;1952     }
001a7e  bf00              NOP      
                  |L1.6784|
;;;1953   }
001a80  e8bd81f0          POP      {r4-r8,pc}
;;;1954   
                          ENDP

                  MULTIEDIT_SetMaxNumChars PROC
;;;1958   */
;;;1959   void MULTIEDIT_SetMaxNumChars(MULTIEDIT_HANDLE hObj, unsigned MaxNumChars) {
001a84  e92d41f0          PUSH     {r4-r8,lr}
001a88  4680              MOV      r8,r0
001a8a  460d              MOV      r5,r1
;;;1960     if (hObj) {
001a8c  f1b80f00          CMP      r8,#0
001a90  d02a              BEQ      |L1.6888|
;;;1961       MULTIEDIT_OBJ* pObj;
;;;1962       WM_LOCK();
;;;1963       pObj = MULTIEDIT_H2P(hObj);
001a92  4640              MOV      r0,r8
001a94  f7fffffe          BL       GUI_ALLOC_h2p
001a98  4604              MOV      r4,r0
;;;1964       pObj->MaxNumChars = MaxNumChars;
001a9a  8765              STRH     r5,[r4,#0x3a]
;;;1965       if (MaxNumChars < (unsigned)pObj->NumCharsPrompt) {
001a9c  8fe0              LDRH     r0,[r4,#0x3e]
001a9e  42a8              CMP      r0,r5
001aa0  d900              BLS      |L1.6820|
;;;1966         pObj->NumCharsPrompt = MaxNumChars;
001aa2  87e5              STRH     r5,[r4,#0x3e]
                  |L1.6820|
;;;1967       }
;;;1968       if (pObj->hText && MaxNumChars) {
001aa4  8f20              LDRH     r0,[r4,#0x38]
001aa6  b1f0              CBZ      r0,|L1.6886|
001aa8  b1ed              CBZ      r5,|L1.6886|
;;;1969         char* pText;
;;;1970         int Offset;
;;;1971         pText = (char*) GUI_ALLOC_h2p(pObj->hText);
001aaa  f9b40038          LDRSH    r0,[r4,#0x38]
001aae  f7fffffe          BL       GUI_ALLOC_h2p
001ab2  4606              MOV      r6,r0
;;;1972         Offset = GUI_UC__NumChars2NumBytes(pText, MaxNumChars);
001ab4  4629              MOV      r1,r5
001ab6  4630              MOV      r0,r6
001ab8  f7fffffe          BL       GUI_UC__NumChars2NumBytes
001abc  4607              MOV      r7,r0
;;;1973         if (Offset < pObj->BufferSize) {
001abe  f8b40044          LDRH     r0,[r4,#0x44]
001ac2  42b8              CMP      r0,r7
001ac4  dd0e              BLE      |L1.6884|
;;;1974           pText += Offset;
001ac6  443e              ADD      r6,r6,r7
;;;1975           *pText = 0;
001ac8  f04f0000          MOV      r0,#0
001acc  7030              STRB     r0,[r6,#0]
;;;1976           _SetCursorPos(hObj, pObj, Offset);
001ace  463a              MOV      r2,r7
001ad0  4621              MOV      r1,r4
001ad2  4640              MOV      r0,r8
001ad4  f7fffffe          BL       _SetCursorPos
;;;1977           _InvalidateTextArea(hObj);
001ad8  4640              MOV      r0,r8
001ada  f7fffffe          BL       _InvalidateTextArea
;;;1978           _InvalidateNumChars(pObj);
001ade  4620              MOV      r0,r4
001ae0  f7fffffe          BL       _InvalidateNumChars
                  |L1.6884|
;;;1979         }
;;;1980       }
001ae4  bf00              NOP      
                  |L1.6886|
;;;1981       WM_UNLOCK();
;;;1982     }
001ae6  bf00              NOP      
                  |L1.6888|
;;;1983   }
001ae8  e8bd81f0          POP      {r4-r8,pc}
;;;1984   
                          ENDP

                  MULTIEDIT_GetTextSize PROC
;;;1993   */
;;;1994   int MULTIEDIT_GetTextSize(MULTIEDIT_HANDLE hObj) {
001aec  e92d41f0          PUSH     {r4-r8,lr}
001af0  4605              MOV      r5,r0
;;;1995     int r = 0;
001af2  f04f0700          MOV      r7,#0
;;;1996     if (hObj) {
001af6  b1b5              CBZ      r5,|L1.6950|
;;;1997       MULTIEDIT_OBJ* pObj;
;;;1998       WM_LOCK();
;;;1999       pObj = MULTIEDIT_H2P(hObj);
001af8  4628              MOV      r0,r5
001afa  f7fffffe          BL       GUI_ALLOC_h2p
001afe  4604              MOV      r4,r0
;;;2000       if (pObj->hText) {
001b00  8f20              LDRH     r0,[r4,#0x38]
001b02  b178              CBZ      r0,|L1.6948|
;;;2001         const char* s;
;;;2002         s = (const char*)GUI_ALLOC_h2p(pObj->hText);
001b04  f9b40038          LDRSH    r0,[r4,#0x38]
001b08  f7fffffe          BL       GUI_ALLOC_h2p
001b0c  4606              MOV      r6,r0
;;;2003         s += GUI_UC__NumChars2NumBytes(s, pObj->NumCharsPrompt);
001b0e  8fe1              LDRH     r1,[r4,#0x3e]
001b10  4630              MOV      r0,r6
001b12  f7fffffe          BL       GUI_UC__NumChars2NumBytes
001b16  4406              ADD      r6,r6,r0
;;;2004         r = 1 + strlen(s);
001b18  4630              MOV      r0,r6
001b1a  f7fffffe          BL       strlen
001b1e  f1000701          ADD      r7,r0,#1
;;;2005       }
001b22  bf00              NOP      
                  |L1.6948|
;;;2006       WM_UNLOCK();
;;;2007     }
001b24  bf00              NOP      
                  |L1.6950|
;;;2008     return r;
001b26  4638              MOV      r0,r7
;;;2009   }
001b28  e8bd81f0          POP      {r4-r8,pc}
;;;2010   
                          ENDP

                  MULTIEDIT_SetTextAlign PROC
;;;2015   */
;;;2016   void MULTIEDIT_SetTextAlign(MULTIEDIT_HANDLE hObj, int Align) {
001b2c  b570              PUSH     {r4-r6,lr}
001b2e  4606              MOV      r6,r0
001b30  460c              MOV      r4,r1
;;;2017     if (hObj) {
001b32  b19e              CBZ      r6,|L1.7004|
;;;2018       MULTIEDIT_OBJ* pObj;
;;;2019       WM_LOCK();
;;;2020       pObj = MULTIEDIT_H2P(hObj);
001b34  4630              MOV      r0,r6
001b36  f7fffffe          BL       GUI_ALLOC_h2p
001b3a  4605              MOV      r5,r0
;;;2021       if (pObj->Align != Align) {
001b3c  f8b50058          LDRH     r0,[r5,#0x58]
001b40  42a0              CMP      r0,r4
001b42  d00a              BEQ      |L1.7002|
;;;2022         pObj->Align = Align;
001b44  f8a54058          STRH     r4,[r5,#0x58]
;;;2023         _InvalidateTextArea(hObj);
001b48  4630              MOV      r0,r6
001b4a  f7fffffe          BL       _InvalidateTextArea
;;;2024         _InvalidateCursorXY(pObj);
001b4e  4628              MOV      r0,r5
001b50  f7fffffe          BL       _InvalidateCursorXY
;;;2025         //_InvalidateNumLines(pObj);
;;;2026         _InvalidateTextSizeX(pObj);
001b54  4628              MOV      r0,r5
001b56  f7fffffe          BL       _InvalidateTextSizeX
                  |L1.7002|
;;;2027       }
;;;2028       WM_UNLOCK();
;;;2029     }
001b5a  bf00              NOP      
                  |L1.7004|
;;;2030   }
001b5c  bd70              POP      {r4-r6,pc}
;;;2031   
                          ENDP

                  MULTIEDIT_GetCursorCharPos PROC
;;;2035   */
;;;2036   int MULTIEDIT_GetCursorCharPos(MULTIEDIT_HANDLE hObj) {
001b5e  b570              PUSH     {r4-r6,lr}
001b60  4604              MOV      r4,r0
;;;2037     int r = 0;
001b62  f04f0500          MOV      r5,#0
;;;2038     if (hObj) {
001b66  b134              CBZ      r4,|L1.7030|
;;;2039       MULTIEDIT_OBJ* pObj;
;;;2040       WM_LOCK();
;;;2041       pObj = MULTIEDIT_H2P(hObj);
001b68  4620              MOV      r0,r4
001b6a  f7fffffe          BL       GUI_ALLOC_h2p
001b6e  4606              MOV      r6,r0
;;;2042       r = pObj->CursorPosChar;
001b70  f8b65048          LDRH     r5,[r6,#0x48]
;;;2043       WM_UNLOCK();
;;;2044     }
001b74  bf00              NOP      
                  |L1.7030|
;;;2045     return r;
001b76  4628              MOV      r0,r5
;;;2046   }
001b78  bd70              POP      {r4-r6,pc}
;;;2047   
                          ENDP

                  MULTIEDIT_GetCursorPixelPos PROC
;;;2051   */
;;;2052   void MULTIEDIT_GetCursorPixelPos(MULTIEDIT_HANDLE hObj, int * pxPos, int * pyPos) {
001b7a  e92d47f0          PUSH     {r4-r10,lr}
001b7e  4607              MOV      r7,r0
001b80  460d              MOV      r5,r1
001b82  4616              MOV      r6,r2
;;;2053     if (hObj) {
001b84  b307              CBZ      r7,|L1.7112|
;;;2054       MULTIEDIT_OBJ* pObj;
;;;2055       int FontSizeY, EffectSize;
;;;2056       WM_LOCK();
;;;2057       pObj = MULTIEDIT_H2P(hObj);
001b86  4638              MOV      r0,r7
001b88  f7fffffe          BL       GUI_ALLOC_h2p
001b8c  4604              MOV      r4,r0
;;;2058       FontSizeY  = GUI_GetYSizeOfFont(pObj->pFont);
001b8e  6f60              LDR      r0,[r4,#0x74]
001b90  f7fffffe          BL       GUI_GetYSizeOfFont
001b94  4681              MOV      r9,r0
;;;2059       EffectSize = pObj->Widget.pEffect->EffectSize;
001b96  6a20              LDR      r0,[r4,#0x20]
001b98  f8d08014          LDR      r8,[r0,#0x14]
;;;2060       _GetCursorXY(hObj, pObj, pxPos, pyPos);
001b9c  4633              MOV      r3,r6
001b9e  462a              MOV      r2,r5
001ba0  4621              MOV      r1,r4
001ba2  4638              MOV      r0,r7
001ba4  f7fffffe          BL       _GetCursorXY
;;;2061       *pxPos += EffectSize - pObj->ScrollStateH.v + pObj->HBorder;
001ba8  6ee0              LDR      r0,[r4,#0x6c]
001baa  eba80000          SUB      r0,r8,r0
001bae  f894107b          LDRB     r1,[r4,#0x7b]
001bb2  4408              ADD      r0,r0,r1
001bb4  6829              LDR      r1,[r5,#0]
001bb6  4408              ADD      r0,r0,r1
001bb8  6028              STR      r0,[r5,#0]
;;;2062       *pyPos += EffectSize - pObj->ScrollStateV.v * FontSizeY;
001bba  6831              LDR      r1,[r6,#0]
001bbc  6e20              LDR      r0,[r4,#0x60]
001bbe  fb008019          MLS      r0,r0,r9,r8
001bc2  4408              ADD      r0,r0,r1
001bc4  6030              STR      r0,[r6,#0]
;;;2063       WM_UNLOCK();
;;;2064     }
001bc6  bf00              NOP      
                  |L1.7112|
;;;2065   }
001bc8  e8bd87f0          POP      {r4-r10,pc}
;;;2066   
                          ENDP


                          AREA ||.data||, DATA, ALIGN=2

                  _aDefaultBkColor
                          DCD      0x00ffffff
                          DCD      0x00c0c0c0
                  _aDefaultColor
                          DCD      0x00000000
                          DCD      0x00000000
                  _pDefaultFont
                          DCD      GUI_Font13_1

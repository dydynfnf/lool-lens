; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\gui_mouse_driverps2.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\gui_mouse_driverps2.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\gui_mouse_driverps2.crf GUI\Core\GUI_MOUSE_DriverPS2.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _EvaPacket PROC
;;;57     */
;;;58     static void _EvaPacket(void) {
000000  b53e              PUSH     {r1-r5,lr}
;;;59       char a;
;;;60       GUI_PID_STATE State;
;;;61       _Buttons = _abInBuffer[0] & 0x03;
000002  4846              LDR      r0,|L1.284|
000004  7800              LDRB     r0,[r0,#0]  ; _abInBuffer
000006  f0000003          AND      r0,r0,#3
00000a  4945              LDR      r1,|L1.288|
00000c  7008              STRB     r0,[r1,#0]
;;;62       a = _abInBuffer[1];
00000e  4843              LDR      r0,|L1.284|
000010  7844              LDRB     r4,[r0,#1]  ; _abInBuffer
;;;63       /* test x move sign. */
;;;64       if(_abInBuffer[0] & 0x10) {
000012  7800              LDRB     r0,[r0,#0]  ; _abInBuffer
000014  f0100f10          TST      r0,#0x10
000018  d009              BEQ      |L1.46|
;;;65         a=-a;
00001a  f1c40000          RSB      r0,r4,#0
00001e  b2c4              UXTB     r4,r0
;;;66         _ScreenX  -= a;
000020  4840              LDR      r0,|L1.292|
000022  6800              LDR      r0,[r0,#0]  ; _ScreenX
000024  eba00004          SUB      r0,r0,r4
000028  493e              LDR      r1,|L1.292|
00002a  6008              STR      r0,[r1,#0]  ; _ScreenX
00002c  e004              B        |L1.56|
                  |L1.46|
;;;67       }        /* direction is negative, move left */
;;;68       else {
;;;69         _ScreenX  += a;
00002e  483d              LDR      r0,|L1.292|
000030  6800              LDR      r0,[r0,#0]  ; _ScreenX
000032  4420              ADD      r0,r0,r4
000034  493b              LDR      r1,|L1.292|
000036  6008              STR      r0,[r1,#0]  ; _ScreenX
                  |L1.56|
;;;70       }
;;;71       a = _abInBuffer[2];
000038  4838              LDR      r0,|L1.284|
00003a  7884              LDRB     r4,[r0,#2]  ; _abInBuffer
;;;72       /* test y move sign. */
;;;73       if(_abInBuffer[0] & 0x20) {
00003c  7800              LDRB     r0,[r0,#0]  ; _abInBuffer
00003e  f0100f20          TST      r0,#0x20
000042  d008              BEQ      |L1.86|
;;;74         a=-a;
000044  f1c40000          RSB      r0,r4,#0
000048  b2c4              UXTB     r4,r0
;;;75         _ScreenY  += a;
00004a  4837              LDR      r0,|L1.296|
00004c  6800              LDR      r0,[r0,#0]  ; _ScreenY
00004e  4420              ADD      r0,r0,r4
000050  4935              LDR      r1,|L1.296|
000052  6008              STR      r0,[r1,#0]  ; _ScreenY
000054  e005              B        |L1.98|
                  |L1.86|
;;;76       }  /* direction is negative, move down */ else {
;;;77         _ScreenY  -= a;
000056  4834              LDR      r0,|L1.296|
000058  6800              LDR      r0,[r0,#0]  ; _ScreenY
00005a  eba00004          SUB      r0,r0,r4
00005e  4932              LDR      r1,|L1.296|
000060  6008              STR      r0,[r1,#0]  ; _ScreenY
                  |L1.98|
;;;78       }
;;;79       /* check min/max positions */    
;;;80       if (_ScreenX < 0) {
000062  4830              LDR      r0,|L1.292|
000064  6800              LDR      r0,[r0,#0]  ; _ScreenX
000066  2800              CMP      r0,#0
000068  da04              BGE      |L1.116|
;;;81         _ScreenX = 0;
00006a  f04f0000          MOV      r0,#0
00006e  492d              LDR      r1,|L1.292|
000070  6008              STR      r0,[r1,#0]  ; _ScreenX
000072  e008              B        |L1.134|
                  |L1.116|
;;;82       } else if (_ScreenX > LCD_XSIZE-1) {
000074  482b              LDR      r0,|L1.292|
000076  6800              LDR      r0,[r0,#0]  ; _ScreenX
000078  f5b07fa0          CMP      r0,#0x140
00007c  db03              BLT      |L1.134|
;;;83         _ScreenX = LCD_XSIZE-1;
00007e  f240103f          MOV      r0,#0x13f
000082  4928              LDR      r1,|L1.292|
000084  6008              STR      r0,[r1,#0]  ; _ScreenX
                  |L1.134|
;;;84       } if (_ScreenY < 0) {
000086  4828              LDR      r0,|L1.296|
000088  6800              LDR      r0,[r0,#0]  ; _ScreenY
00008a  2800              CMP      r0,#0
00008c  da04              BGE      |L1.152|
;;;85         _ScreenY = 0;
00008e  f04f0000          MOV      r0,#0
000092  4925              LDR      r1,|L1.296|
000094  6008              STR      r0,[r1,#0]  ; _ScreenY
000096  e007              B        |L1.168|
                  |L1.152|
;;;86       } else if (_ScreenY > LCD_YSIZE-1) {
000098  4823              LDR      r0,|L1.296|
00009a  6800              LDR      r0,[r0,#0]  ; _ScreenY
00009c  28ef              CMP      r0,#0xef
00009e  dd03              BLE      |L1.168|
;;;87         _ScreenY = LCD_YSIZE-1;
0000a0  f04f00ef          MOV      r0,#0xef
0000a4  4920              LDR      r1,|L1.296|
0000a6  6008              STR      r0,[r1,#0]  ; _ScreenY
                  |L1.168|
;;;88       }
;;;89       /* signal new mouse data */
;;;90       State.x       = _ScreenX;
0000a8  481e              LDR      r0,|L1.292|
0000aa  6800              LDR      r0,[r0,#0]  ; _ScreenX
0000ac  9000              STR      r0,[sp,#0]
;;;91       State.y       = _ScreenY;
0000ae  481e              LDR      r0,|L1.296|
0000b0  6800              LDR      r0,[r0,#0]  ; _ScreenY
0000b2  9001              STR      r0,[sp,#4]
;;;92       State.Pressed = _Buttons;
0000b4  481a              LDR      r0,|L1.288|
0000b6  7800              LDRB     r0,[r0,#0]  ; _Buttons
0000b8  f88d0008          STRB     r0,[sp,#8]
;;;93       GUI_MOUSE_StoreState(&State);
0000bc  4668              MOV      r0,sp
0000be  f7fffffe          BL       GUI_MOUSE_StoreState
;;;94     }
0000c2  bd3e              POP      {r1-r5,pc}
;;;95     
                          ENDP

                  GUI_MOUSE_DRIVER_PS2_OnRx PROC
;;;109    */
;;;110    void GUI_MOUSE_DRIVER_PS2_OnRx(unsigned char Data) {
0000c4  b510              PUSH     {r4,lr}
0000c6  4604              MOV      r4,r0
;;;111      if (!_NumBytesInBuffer) {
0000c8  4818              LDR      r0,|L1.300|
0000ca  6800              LDR      r0,[r0,#0]  ; _NumBytesInBuffer
0000cc  b960              CBNZ     r0,|L1.232|
;;;112        /* check for start frame */
;;;113        if ((Data & 0x0c) == 0x08) {
0000ce  f004000c          AND      r0,r4,#0xc
0000d2  2808              CMP      r0,#8
0000d4  d11c              BNE      |L1.272|
;;;114          _abInBuffer[0] = Data;
0000d6  4811              LDR      r0,|L1.284|
0000d8  7004              STRB     r4,[r0,#0]
;;;115          _NumBytesInBuffer++;
0000da  4814              LDR      r0,|L1.300|
0000dc  6800              LDR      r0,[r0,#0]  ; _NumBytesInBuffer
0000de  f1000001          ADD      r0,r0,#1
0000e2  4912              LDR      r1,|L1.300|
0000e4  6008              STR      r0,[r1,#0]  ; _NumBytesInBuffer
0000e6  e013              B        |L1.272|
                  |L1.232|
;;;116        }
;;;117      } else {
;;;118        _abInBuffer[_NumBytesInBuffer] = Data;
0000e8  480c              LDR      r0,|L1.284|
0000ea  4910              LDR      r1,|L1.300|
0000ec  6809              LDR      r1,[r1,#0]  ; _NumBytesInBuffer
0000ee  5444              STRB     r4,[r0,r1]
;;;119        _NumBytesInBuffer++;
0000f0  480e              LDR      r0,|L1.300|
0000f2  6800              LDR      r0,[r0,#0]  ; _NumBytesInBuffer
0000f4  f1000001          ADD      r0,r0,#1
0000f8  490c              LDR      r1,|L1.300|
0000fa  6008              STR      r0,[r1,#0]  ; _NumBytesInBuffer
;;;120        if (_NumBytesInBuffer >= 3) {
0000fc  4608              MOV      r0,r1
0000fe  6800              LDR      r0,[r0,#0]  ; _NumBytesInBuffer
000100  2803              CMP      r0,#3
000102  db05              BLT      |L1.272|
;;;121          _EvaPacket();
000104  f7fffffe          BL       _EvaPacket
;;;122          _NumBytesInBuffer = 0;
000108  f04f0000          MOV      r0,#0
00010c  4907              LDR      r1,|L1.300|
00010e  6008              STR      r0,[r1,#0]  ; _NumBytesInBuffer
                  |L1.272|
;;;123        }
;;;124      }
;;;125    }
000110  bd10              POP      {r4,pc}
;;;126    
                          ENDP

                  GUI_MOUSE_DRIVER_PS2_Init PROC
;;;130    */
;;;131    void GUI_MOUSE_DRIVER_PS2_Init(void) {
000112  f04f0000          MOV      r0,#0
;;;132      _NumBytesInBuffer = 0; 
000116  4905              LDR      r1,|L1.300|
000118  6008              STR      r0,[r1,#0]  ; _NumBytesInBuffer
;;;133    }
00011a  4770              BX       lr
;;;134    
                          ENDP

                  |L1.284|
                          DCD      _abInBuffer
                  |L1.288|
                          DCD      _Buttons
                  |L1.292|
                          DCD      _ScreenX
                  |L1.296|
                          DCD      _ScreenY
                  |L1.300|
                          DCD      _NumBytesInBuffer

                          AREA ||.data||, DATA, ALIGN=2

                  _ScreenX
                          DCD      0x00000000
                  _ScreenY
                          DCD      0x00000000
                  _NumBytesInBuffer
                          DCD      0x00000000
                  _Buttons
00000c  00                DCB      0x00
                  _abInBuffer
00000d  000000            DCB      0x00,0x00,0x00

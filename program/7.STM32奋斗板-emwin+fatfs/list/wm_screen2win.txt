; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\wm_screen2win.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\wm_screen2win.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\wm_screen2win.crf GUI\WM\WM_Screen2Win.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  WM__IsInWindow PROC
;;;70     */
;;;71     int WM__IsInWindow(WM_Obj * pWin, int x, int y) {
000000  4603              MOV      r3,r0
;;;72       if (   (pWin->Status & WM_SF_ISVIS)
000002  8b98              LDRH     r0,[r3,#0x1c]
000004  f0100f02          TST      r0,#2
000008  d011              BEQ      |L1.46|
;;;73           && (x >= pWin->Rect.x0)
00000a  f9b30000          LDRSH    r0,[r3,#0]
00000e  4288              CMP      r0,r1
000010  dc0d              BGT      |L1.46|
;;;74           && (x <= pWin->Rect.x1)
000012  f9b30004          LDRSH    r0,[r3,#4]
000016  4288              CMP      r0,r1
000018  db09              BLT      |L1.46|
;;;75           && (y >= pWin->Rect.y0)
00001a  f9b30002          LDRSH    r0,[r3,#2]
00001e  4290              CMP      r0,r2
000020  dc05              BGT      |L1.46|
;;;76           && (y <= pWin->Rect.y1))
000022  f9b30006          LDRSH    r0,[r3,#6]
000026  4290              CMP      r0,r2
000028  db01              BLT      |L1.46|
;;;77       {
;;;78         return 1;
00002a  2001              MOVS     r0,#1
                  |L1.44|
;;;79       }
;;;80       return 0;
;;;81     }
00002c  4770              BX       lr
                  |L1.46|
00002e  2000              MOVS     r0,#0                 ;80
000030  e7fc              B        |L1.44|
;;;82     
                          ENDP

                  _Screen2hWin PROC
;;;41     */
;;;42     static WM_HWIN _Screen2hWin(WM_HWIN hWin, WM_HWIN hStop, int x, int y) {
000032  e92d5ff0          PUSH     {r4-r12,lr}
000036  4682              MOV      r10,r0
000038  460e              MOV      r6,r1
00003a  4617              MOV      r7,r2
00003c  4698              MOV      r8,r3
;;;43       WM_Obj* pWin = WM_HANDLE2PTR(hWin);
00003e  4650              MOV      r0,r10
000040  f7fffffe          BL       GUI_ALLOC_h2p
000044  4681              MOV      r9,r0
;;;44       WM_HWIN hChild;
;;;45       WM_HWIN hHit;
;;;46       /* First check if the  coordinates are in the given window. If not, return 0 */
;;;47       if (WM__IsInWindow(pWin, x, y) == 0) {
000046  4642              MOV      r2,r8
000048  4639              MOV      r1,r7
00004a  4648              MOV      r0,r9
00004c  f7fffffe          BL       WM__IsInWindow
000050  b910              CBNZ     r0,|L1.88|
;;;48         return 0;
000052  2000              MOVS     r0,#0
                  |L1.84|
;;;49       }
;;;50       /* If the coordinates are in a child, search deeper ... */
;;;51       for (hChild = pWin->hFirstChild; hChild && (hChild != hStop); ) {
;;;52         WM_Obj* pChild = WM_HANDLE2PTR(hChild);
;;;53         if ((hHit = _Screen2hWin(hChild, hStop, x, y)) != 0) {
;;;54           hWin = hHit;        /* Found a window */
;;;55         }
;;;56         hChild = pChild->hNext;
;;;57       }
;;;58       return hWin;            /* No Child affected ... The parent is the right one */
;;;59     }
000054  e8bd9ff0          POP      {r4-r12,pc}
                  |L1.88|
000058  f9b94018          LDRSH    r4,[r9,#0x18]         ;51
00005c  e00f              B        |L1.126|
                  |L1.94|
00005e  4620              MOV      r0,r4                 ;52
000060  f7fffffe          BL       GUI_ALLOC_h2p
000064  4683              MOV      r11,r0                ;52
000066  4643              MOV      r3,r8                 ;53
000068  463a              MOV      r2,r7                 ;53
00006a  4631              MOV      r1,r6                 ;53
00006c  4620              MOV      r0,r4                 ;53
00006e  f7fffffe          BL       _Screen2hWin
000072  0005              MOVS     r5,r0                 ;53
000074  d000              BEQ      |L1.120|
000076  46aa              MOV      r10,r5                ;54
                  |L1.120|
000078  f9bb401a          LDRSH    r4,[r11,#0x1a]        ;56
00007c  bf00              NOP                            ;57
                  |L1.126|
00007e  b10c              CBZ      r4,|L1.132|
000080  42b4              CMP      r4,r6                 ;51
000082  d1ec              BNE      |L1.94|
                  |L1.132|
000084  4650              MOV      r0,r10                ;58
000086  e7e5              B        |L1.84|
;;;60     
                          ENDP

                  WM_Screen2hWin PROC
;;;86     */
;;;87     WM_HWIN WM_Screen2hWin(int x, int y) {
000088  b570              PUSH     {r4-r6,lr}
00008a  4604              MOV      r4,r0
00008c  460d              MOV      r5,r1
;;;88       WM_HWIN r;
;;;89       WM_LOCK();
;;;90       r = _Screen2hWin(WM__FirstWin, 0, x, y);
00008e  462b              MOV      r3,r5
000090  4622              MOV      r2,r4
000092  f04f0100          MOV      r1,#0
000096  480c              LDR      r0,|L1.200|
000098  f9b00000          LDRSH    r0,[r0,#0]  ; WM__FirstWin
00009c  f7fffffe          BL       _Screen2hWin
0000a0  4606              MOV      r6,r0
;;;91       WM_UNLOCK();
;;;92       return r;
0000a2  4630              MOV      r0,r6
;;;93     }
0000a4  bd70              POP      {r4-r6,pc}
;;;94     
                          ENDP

                  WM_Screen2hWinEx PROC
;;;98     */
;;;99     WM_HWIN WM_Screen2hWinEx(WM_HWIN hStop, int x, int y) {
0000a6  e92d41f0          PUSH     {r4-r8,lr}
0000aa  4604              MOV      r4,r0
0000ac  460d              MOV      r5,r1
0000ae  4616              MOV      r6,r2
;;;100      WM_HWIN r;
;;;101      WM_LOCK();
;;;102      r = _Screen2hWin(WM__FirstWin, hStop, x, y);
0000b0  4633              MOV      r3,r6
0000b2  462a              MOV      r2,r5
0000b4  4621              MOV      r1,r4
0000b6  4804              LDR      r0,|L1.200|
0000b8  f9b00000          LDRSH    r0,[r0,#0]  ; WM__FirstWin
0000bc  f7fffffe          BL       _Screen2hWin
0000c0  4607              MOV      r7,r0
;;;103      WM_UNLOCK();
;;;104      return r;
0000c2  4638              MOV      r0,r7
;;;105    }
0000c4  e8bd81f0          POP      {r4-r8,pc}
;;;106    
                          ENDP

                  |L1.200|
                          DCD      WM__FirstWin

; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\guidemo_vscreen.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\guidemo_vscreen.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\FWlib\inc -I.\user -I.\CM3 -I.\MALLOC -I.\TFT -I.\EMWIN\EMWIN_INC -I.\EMWIN\DEMO -I.\FATFS -I.\SDIO -I.\PNG -IE:\material\GUI\STM32·Ü¶·°å-emwin+fatfs\RTE -Id:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.1.0\Device\Include -Id:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=515 -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\guidemo_vscreen.crf EMWIN\DEMO\GUIDEMO_VScreen.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _Loop PROC
;;;47     */
;;;48     static int _Loop(int y, int d, int n, int Delay) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
000008  4617              MOV      r7,r2
00000a  461e              MOV      r6,r3
;;;49       do {
00000c  bf00              NOP      
                  |L1.14|
;;;50         y += d;
00000e  442c              ADD      r4,r4,r5
;;;51         GUI_SetOrg(0, y);
000010  4621              MOV      r1,r4
000012  2000              MOVS     r0,#0
000014  f7fffffe          BL       GUI_SetOrg
;;;52         GUI_Delay(Delay);
000018  4630              MOV      r0,r6
00001a  f7fffffe          BL       GUI_Delay
;;;53         if (GUIDEMO_CheckCancel()) {
00001e  f7fffffe          BL       GUIDEMO_CheckCancel
000022  b110              CBZ      r0,|L1.42|
;;;54           return 1;
000024  2001              MOVS     r0,#1
                  |L1.38|
;;;55         }
;;;56       } while (--n);
;;;57       return 0;
;;;58     }
000026  e8bd81f0          POP      {r4-r8,pc}
                  |L1.42|
00002a  1e78              SUBS     r0,r7,#1              ;56
00002c  0007              MOVS     r7,r0                 ;56
00002e  d1ee              BNE      |L1.14|
000030  bf00              NOP                            ;57
000032  e7f8              B        |L1.38|
;;;59     
                          ENDP

                  _DemoVScreen PROC
;;;63     */
;;;64     static void _DemoVScreen(void) {
000034  b5f0              PUSH     {r4-r7,lr}
000036  b087              SUB      sp,sp,#0x1c
;;;65       GUI_RECT Rect;
;;;66       unsigned j;
;;;67       int      xSize;
;;;68       int      ySize;
;;;69       int      n;
;;;70       int      aDelay[] = { 20, 5 };
000038  495e              LDR      r1,|L1.436|
00003a  c903              LDM      r1,{r0,r1}
00003c  e9cd0103          STRD     r0,r1,[sp,#0xc]
;;;71     
;;;72       xSize = LCD_GetXSize();
000040  f7fffffe          BL       LCD_GetXSize
000044  4606              MOV      r6,r0
;;;73       ySize = LCD_GetYSize();
000046  f7fffffe          BL       LCD_GetYSize
00004a  4604              MOV      r4,r0
;;;74       GUI_SetFont(&GUI_FontComic24B_ASCII);
00004c  485a              LDR      r0,|L1.440|
00004e  f7fffffe          BL       GUI_SetFont
;;;75       GUI_SetTextMode(GUI_TM_TRANS);
000052  2002              MOVS     r0,#2
000054  f7fffffe          BL       GUI_SetTextMode
;;;76       Rect.x0 = 0;
000058  2000              MOVS     r0,#0
00005a  f8ad0014          STRH     r0,[sp,#0x14]
;;;77       Rect.y0 = 0;
00005e  f8ad0016          STRH     r0,[sp,#0x16]
;;;78       Rect.x1 = xSize - 1;
000062  1e70              SUBS     r0,r6,#1
000064  b200              SXTH     r0,r0
000066  f8ad0018          STRH     r0,[sp,#0x18]
;;;79       Rect.y1 = ySize - 1;
00006a  1e60              SUBS     r0,r4,#1
00006c  b200              SXTH     r0,r0
00006e  f8ad001a          STRH     r0,[sp,#0x1a]
;;;80       GUI_SetColor(GUI_WHITE);
000072  f06f407f          MVN      r0,#0xff000000
000076  f7fffffe          BL       GUI_SetColor
;;;81       GUI_DispStringInRect("Default screen", &Rect, GUI_TA_HCENTER | GUI_TA_VCENTER);
00007a  220e              MOVS     r2,#0xe
00007c  a905              ADD      r1,sp,#0x14
00007e  a04f              ADR      r0,|L1.444|
000080  f7fffffe          BL       GUI_DispStringInRect
;;;82       GUI_Delay(250);
000084  20fa              MOVS     r0,#0xfa
000086  f7fffffe          BL       GUI_Delay
;;;83       Rect.y0 += ySize;
00008a  f8bd0016          LDRH     r0,[sp,#0x16]
00008e  4420              ADD      r0,r0,r4
000090  b200              SXTH     r0,r0
000092  f8ad0016          STRH     r0,[sp,#0x16]
;;;84       Rect.y1 += ySize;
000096  f8bd001a          LDRH     r0,[sp,#0x1a]
00009a  4420              ADD      r0,r0,r4
00009c  b200              SXTH     r0,r0
00009e  f8ad001a          STRH     r0,[sp,#0x1a]
;;;85       GUI_DrawGradientV(Rect.x0, Rect.y0, Rect.x1, Rect.y1, 0xFFFFFF, 0x000000);
0000a2  2000              MOVS     r0,#0
0000a4  f06f417f          MVN      r1,#0xff000000
0000a8  e9cd1000          STRD     r1,r0,[sp,#0]
0000ac  f9bd301a          LDRSH    r3,[sp,#0x1a]
0000b0  f9bd2018          LDRSH    r2,[sp,#0x18]
0000b4  f9bd1016          LDRSH    r1,[sp,#0x16]
0000b8  f9bd0014          LDRSH    r0,[sp,#0x14]
0000bc  f7fffffe          BL       GUI_DrawGradientV
;;;86       Rect.y1 -= ySize / 3;
0000c0  2003              MOVS     r0,#3
0000c2  fb94f0f0          SDIV     r0,r4,r0
0000c6  f8bd101a          LDRH     r1,[sp,#0x1a]
0000ca  1a08              SUBS     r0,r1,r0
0000cc  b200              SXTH     r0,r0
0000ce  f8ad001a          STRH     r0,[sp,#0x1a]
;;;87       GUI_SetColor(GUI_DARKGREEN);
0000d2  f44f4000          MOV      r0,#0x8000
0000d6  f7fffffe          BL       GUI_SetColor
;;;88       GUI_DispStringInRect("Here is the virtual screen", &Rect, GUI_TA_HCENTER | GUI_TA_VCENTER);
0000da  220e              MOVS     r2,#0xe
0000dc  a905              ADD      r1,sp,#0x14
0000de  a03b              ADR      r0,|L1.460|
0000e0  f7fffffe          BL       GUI_DispStringInRect
;;;89       n = ySize / 5;
0000e4  2005              MOVS     r0,#5
0000e6  fb94f7f0          SDIV     r7,r4,r0
;;;90       for (j = 0; j < GUI_COUNTOF(aDelay); j++) {
0000ea  2500              MOVS     r5,#0
0000ec  e02a              B        |L1.324|
                  |L1.238|
;;;91         if (_Loop(0, 5, n, aDelay[j]) == 1) {
0000ee  a803              ADD      r0,sp,#0xc
0000f0  f8503025          LDR      r3,[r0,r5,LSL #2]
0000f4  463a              MOV      r2,r7
0000f6  2105              MOVS     r1,#5
0000f8  2000              MOVS     r0,#0
0000fa  f7fffffe          BL       _Loop
0000fe  2801              CMP      r0,#1
000100  d101              BNE      |L1.262|
                  |L1.258|
;;;92           return;
;;;93         }
;;;94         GUI_SetOrg(0, ySize);
;;;95         GUI_Delay(250);
;;;96         if (_Loop(ySize, -5, n, aDelay[j]) == 1) {
;;;97           return;
;;;98         }
;;;99         GUI_SetOrg(0, 0);
;;;100        GUI_Delay(250);
;;;101        if (GUIDEMO_CheckCancel()) {
;;;102          return;
;;;103        }
;;;104      }
;;;105      for (j = 0; j < 5; j++) {
;;;106        GUI_SetOrg(0, ySize);
;;;107        GUI_Delay(200);
;;;108        GUI_SetOrg(0, 0);
;;;109        GUI_Delay(200);
;;;110        if (GUIDEMO_CheckCancel()) {
;;;111          return;
;;;112        }
;;;113      }
;;;114      GUIDEMO_Delay(1000);
;;;115    }
000102  b007              ADD      sp,sp,#0x1c
000104  bdf0              POP      {r4-r7,pc}
                  |L1.262|
000106  4621              MOV      r1,r4                 ;94
000108  2000              MOVS     r0,#0                 ;94
00010a  f7fffffe          BL       GUI_SetOrg
00010e  20fa              MOVS     r0,#0xfa              ;95
000110  f7fffffe          BL       GUI_Delay
000114  a803              ADD      r0,sp,#0xc            ;96
000116  f8503025          LDR      r3,[r0,r5,LSL #2]     ;96
00011a  463a              MOV      r2,r7                 ;96
00011c  f06f0104          MVN      r1,#4                 ;96
000120  4620              MOV      r0,r4                 ;96
000122  f7fffffe          BL       _Loop
000126  2801              CMP      r0,#1                 ;96
000128  d100              BNE      |L1.300|
00012a  e7ea              B        |L1.258|
                  |L1.300|
00012c  2100              MOVS     r1,#0                 ;99
00012e  4608              MOV      r0,r1                 ;99
000130  f7fffffe          BL       GUI_SetOrg
000134  20fa              MOVS     r0,#0xfa              ;100
000136  f7fffffe          BL       GUI_Delay
00013a  f7fffffe          BL       GUIDEMO_CheckCancel
00013e  b100              CBZ      r0,|L1.322|
000140  e7df              B        |L1.258|
                  |L1.322|
000142  1c6d              ADDS     r5,r5,#1              ;90
                  |L1.324|
000144  2d02              CMP      r5,#2                 ;90
000146  d3d2              BCC      |L1.238|
000148  2500              MOVS     r5,#0                 ;105
00014a  e012              B        |L1.370|
                  |L1.332|
00014c  4621              MOV      r1,r4                 ;106
00014e  2000              MOVS     r0,#0                 ;106
000150  f7fffffe          BL       GUI_SetOrg
000154  20c8              MOVS     r0,#0xc8              ;107
000156  f7fffffe          BL       GUI_Delay
00015a  2100              MOVS     r1,#0                 ;108
00015c  4608              MOV      r0,r1                 ;108
00015e  f7fffffe          BL       GUI_SetOrg
000162  20c8              MOVS     r0,#0xc8              ;109
000164  f7fffffe          BL       GUI_Delay
000168  f7fffffe          BL       GUIDEMO_CheckCancel
00016c  b100              CBZ      r0,|L1.368|
00016e  e7c8              B        |L1.258|
                  |L1.368|
000170  1c6d              ADDS     r5,r5,#1              ;105
                  |L1.370|
000172  2d05              CMP      r5,#5                 ;105
000174  d3ea              BCC      |L1.332|
000176  f44f707a          MOV      r0,#0x3e8             ;114
00017a  f7fffffe          BL       GUIDEMO_Delay
00017e  bf00              NOP      
000180  e7bf              B        |L1.258|
;;;116    
                          ENDP

                  GUIDEMO_VScreen PROC
;;;126    */
;;;127    void GUIDEMO_VScreen(void) {
000182  b570              PUSH     {r4-r6,lr}
;;;128      int vySize;
;;;129      int ySize;
;;;130    
;;;131      ySize  = LCD_GetYSize();
000184  f7fffffe          BL       LCD_GetYSize
000188  4604              MOV      r4,r0
;;;132      vySize = LCD_GetVYSize();
00018a  f7fffffe          BL       LCD_GetVYSize
00018e  4605              MOV      r5,r0
;;;133      if (vySize < (ySize * 2)) {
000190  ebb50f44          CMP      r5,r4,LSL #1
000194  da00              BGE      |L1.408|
                  |L1.406|
;;;134        return;
;;;135      }
;;;136      GUIDEMO_ShowIntro("VScreen demo", "Demonstrates how to use\nvirtual screens");
;;;137      GUIDEMO_DrawBk();
;;;138      _DemoVScreen();
;;;139      GUI_SetOrg(0, 0);
;;;140    }
000196  bd70              POP      {r4-r6,pc}
                  |L1.408|
000198  a113              ADR      r1,|L1.488|
00019a  a01d              ADR      r0,|L1.528|
00019c  f7fffffe          BL       GUIDEMO_ShowIntro
0001a0  f7fffffe          BL       GUIDEMO_DrawBk
0001a4  f7fffffe          BL       _DemoVScreen
0001a8  2100              MOVS     r1,#0                 ;139
0001aa  4608              MOV      r0,r1                 ;139
0001ac  f7fffffe          BL       GUI_SetOrg
0001b0  bf00              NOP      
0001b2  e7f0              B        |L1.406|
;;;141    
                          ENDP

                  |L1.436|
                          DCD      ||.constdata||
                  |L1.440|
                          DCD      GUI_FontComic24B_ASCII
                  |L1.444|
0001bc  44656661          DCB      "Default screen",0
0001c0  756c7420
0001c4  73637265
0001c8  656e00  
0001cb  00                DCB      0
                  |L1.460|
0001cc  48657265          DCB      "Here is the virtual screen",0
0001d0  20697320
0001d4  74686520
0001d8  76697274
0001dc  75616c20
0001e0  73637265
0001e4  656e00  
0001e7  00                DCB      0
                  |L1.488|
0001e8  44656d6f          DCB      "Demonstrates how to use\nvirtual screens",0
0001ec  6e737472
0001f0  61746573
0001f4  20686f77
0001f8  20746f20
0001fc  7573650a
000200  76697274
000204  75616c20
000208  73637265
00020c  656e7300
                  |L1.528|
000210  56536372          DCB      "VScreen demo",0
000214  65656e20
000218  64656d6f
00021c  00      
00021d  00                DCB      0
00021e  00                DCB      0
00021f  00                DCB      0

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                          DCD      0x00000014
                          DCD      0x00000005

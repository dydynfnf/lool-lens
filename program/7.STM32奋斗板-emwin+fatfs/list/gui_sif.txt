; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\gui_sif.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\gui_sif.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -I.\GUI\AntiAlias -I.\GUI\Config -I.\GUI\ConvertColor -I.\GUI\ConvertMono -I.\GUI\Core -I.\GUI\Font -I.\GUI\GUI_X -I.\GUI\JPEG -I.\GUI\LCDDriver -I.\GUI\MemDev -I.\GUI\MultiLayer -I.\GUI\Widget -I.\GUI\WM -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\gui_sif.crf GUI\Core\GUI_SIF.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _GetNumCharAreas PROC
;;;31     */
;;;32     static int _GetNumCharAreas(const GUI_FONT GUI_UNI_PTR * pFont) {
000000  b538              PUSH     {r3-r5,lr}
000002  4604              MOV      r4,r0
;;;33       U16 NumCharAreas;
;;;34       const U8 * pData;
;;;35       pData = (const U8 *)pFont->p.pFontData + 14 /* Skip ID, YSize, YDist, Baseline, LHeight and CHeight */;
000004  69a0              LDR      r0,[r4,#0x18]
000006  f100000e          ADD      r0,r0,#0xe
00000a  9000              STR      r0,[sp,#0]
;;;36       NumCharAreas = GUI__Read16(&pData);
00000c  4668              MOV      r0,sp
00000e  f7fffffe          BL       GUI__Read16
000012  4605              MOV      r5,r0
;;;37       return NumCharAreas;
000014  4628              MOV      r0,r5
;;;38     }
000016  bd38              POP      {r3-r5,pc}
;;;39     
                          ENDP

                  GUI_SIF__GetpCharInfo PROC
;;;49     */
;;;50     const U8 * GUI_SIF__GetpCharInfo(const GUI_FONT GUI_UNI_PTR * pFont, U16P c) {
000018  e92d41fc          PUSH     {r2-r8,lr}
00001c  4606              MOV      r6,r0
00001e  460c              MOV      r4,r1
;;;51       const U8 * pCharArea, * pCharInfo;
;;;52       int NumCharAreas;
;;;53       NumCharAreas = _GetNumCharAreas(pFont);                 /* Get # of char areas */
000020  4630              MOV      r0,r6
000022  f7fffffe          BL       _GetNumCharAreas
000026  4607              MOV      r7,r0
;;;54       pCharArea = (const U8 *)pFont->p.pFontData 
000028  69b0              LDR      r0,[r6,#0x18]
00002a  f1000010          ADD      r0,r0,#0x10
00002e  9001              STR      r0,[sp,#4]
;;;55                   + sizeof(GUI_SI_FONT);                      /* Set char area pointer to first char area */
;;;56       pCharInfo = pCharArea
000030  f04f0104          MOV      r1,#4
000034  9801              LDR      r0,[sp,#4]
000036  fb010507          MLA      r5,r1,r7,r0
;;;57                   + sizeof(GUI_SIF_CHAR_AREA) * NumCharAreas; /* Set char info pointer to first character info */
;;;58       do {
00003a  bf00              NOP      
                  |L1.60|
;;;59         GUI_SIF_CHAR_AREA CharArea;
;;;60         CharArea.First    = GUI__Read16(&pCharArea);
00003c  a801              ADD      r0,sp,#4
00003e  f7fffffe          BL       GUI__Read16
000042  f8ad0000          STRH     r0,[sp,#0]
;;;61         CharArea.Last     = GUI__Read16(&pCharArea);
000046  a801              ADD      r0,sp,#4
000048  f7fffffe          BL       GUI__Read16
00004c  f8ad0002          STRH     r0,[sp,#2]
;;;62         if ((c >= CharArea.First) && (c <= CharArea.Last)) {
000050  f8bd0000          LDRH     r0,[sp,#0]
000054  42a0              CMP      r0,r4
000056  dc0e              BGT      |L1.118|
000058  f8bd0002          LDRH     r0,[sp,#2]
00005c  42a0              CMP      r0,r4
00005e  db0a              BLT      |L1.118|
;;;63           pCharInfo += sizeof(GUI_SIF_CHARINFO) * (c - CharArea.First);
000060  f8bd0000          LDRH     r0,[sp,#0]
000064  eba40000          SUB      r0,r4,r0
000068  f04f010c          MOV      r1,#0xc
00006c  fb015500          MLA      r5,r1,r0,r5
;;;64           return pCharInfo;
000070  4628              MOV      r0,r5
                  |L1.114|
;;;65         }
;;;66         pCharInfo += sizeof(GUI_SIF_CHARINFO) * (CharArea.Last - CharArea.First + 1);
;;;67       } while(--NumCharAreas);
;;;68       return 0;
;;;69     }
000072  e8bd81fc          POP      {r2-r8,pc}
                  |L1.118|
000076  f8bd0002          LDRH     r0,[sp,#2]            ;66
00007a  f8bd1000          LDRH     r1,[sp,#0]            ;66
00007e  eba00001          SUB      r0,r0,r1              ;66
000082  f1000001          ADD      r0,r0,#1              ;66
000086  f04f010c          MOV      r1,#0xc               ;66
00008a  fb015500          MLA      r5,r1,r0,r5           ;66
00008e  f1a70001          SUB      r0,r7,#1              ;67
000092  0007              MOVS     r7,r0                 ;67
000094  d1d2              BNE      |L1.60|
000096  bf00              NOP                            ;68
000098  e7eb              B        |L1.114|
;;;70     
                          ENDP

                  GUI_SIF__GetCharDistX PROC
;;;74     */
;;;75     int GUI_SIF__GetCharDistX(U16P c) {
00009a  b538              PUSH     {r3-r5,lr}
00009c  4604              MOV      r4,r0
;;;76       const U8 * pCharInfo;
;;;77       U16 DistX = 0;
00009e  f04f0500          MOV      r5,#0
;;;78       pCharInfo = GUI_SIF__GetpCharInfo(GUI_Context.pAFont, c); /* Get pointer to char info data */
0000a2  4938              LDR      r1,|L1.388|
0000a4  69c8              LDR      r0,[r1,#0x1c]  ; GUI_Context
0000a6  4621              MOV      r1,r4
0000a8  f7fffffe          BL       GUI_SIF__GetpCharInfo
0000ac  9000              STR      r0,[sp,#0]
;;;79       if (pCharInfo) {
0000ae  9800              LDR      r0,[sp,#0]
0000b0  b138              CBZ      r0,|L1.194|
;;;80         pCharInfo += 2;
0000b2  9800              LDR      r0,[sp,#0]
0000b4  f1000002          ADD      r0,r0,#2
0000b8  9000              STR      r0,[sp,#0]
;;;81         DistX = GUI__Read16(&pCharInfo);
0000ba  4668              MOV      r0,sp
0000bc  f7fffffe          BL       GUI__Read16
0000c0  4605              MOV      r5,r0
                  |L1.194|
;;;82       }
;;;83       return DistX;
0000c2  4628              MOV      r0,r5
;;;84     }
0000c4  bd38              POP      {r3-r5,pc}
;;;85     
                          ENDP

                  GUI_SIF__GetFontInfo PROC
;;;89     */
;;;90     void GUI_SIF__GetFontInfo(const GUI_FONT GUI_UNI_PTR * pFont, GUI_FONTINFO * pfi) {
0000c6  b538              PUSH     {r3-r5,lr}
0000c8  4605              MOV      r5,r0
0000ca  460c              MOV      r4,r1
;;;91       const U8 * pData;
;;;92       pData = (const U8 *)pFont->p.pFontData + 4 /* Skip XSize and XDist */;
0000cc  69a8              LDR      r0,[r5,#0x18]
0000ce  f1000004          ADD      r0,r0,#4
0000d2  9000              STR      r0,[sp,#0]
;;;93       pfi->Baseline = GUI__Read16(&pData);
0000d4  4668              MOV      r0,sp
0000d6  f7fffffe          BL       GUI__Read16
0000da  70a0              STRB     r0,[r4,#2]
;;;94       pfi->LHeight  = GUI__Read16(&pData);
0000dc  4668              MOV      r0,sp
0000de  f7fffffe          BL       GUI__Read16
0000e2  70e0              STRB     r0,[r4,#3]
;;;95       pfi->CHeight  = GUI__Read16(&pData);
0000e4  4668              MOV      r0,sp
0000e6  f7fffffe          BL       GUI__Read16
0000ea  7120              STRB     r0,[r4,#4]
;;;96       pfi->Flags    = GUI_FONTINFO_FLAG_PROP;
0000ec  f04f0001          MOV      r0,#1
0000f0  8020              STRH     r0,[r4,#0]
;;;97     }
0000f2  bd38              POP      {r3-r5,pc}
;;;98     
                          ENDP

                  GUI_SIF__IsInFont PROC
;;;102    */
;;;103    char GUI_SIF__IsInFont(const GUI_FONT GUI_UNI_PTR * pFont, U16 c) {
0000f4  b570              PUSH     {r4-r6,lr}
0000f6  4604              MOV      r4,r0
0000f8  460d              MOV      r5,r1
;;;104      const U8 * pCharInfo;
;;;105      GUI_USE_PARA(pFont);
0000fa  bf00              NOP      
;;;106      pCharInfo = GUI_SIF__GetpCharInfo(GUI_Context.pAFont, c);
0000fc  4921              LDR      r1,|L1.388|
0000fe  69c8              LDR      r0,[r1,#0x1c]  ; GUI_Context
000100  4629              MOV      r1,r5
000102  f7fffffe          BL       GUI_SIF__GetpCharInfo
000106  4606              MOV      r6,r0
;;;107      return (pCharInfo) ? 1 : 0;
000108  b10e              CBZ      r6,|L1.270|
00010a  2001              MOVS     r0,#1
                  |L1.268|
;;;108    }
00010c  bd70              POP      {r4-r6,pc}
                  |L1.270|
00010e  2000              MOVS     r0,#0                 ;107
000110  e7fc              B        |L1.268|
;;;109    
                          ENDP

                  GUI_SIF_CreateFont PROC
;;;119    */
;;;120    void GUI_SIF_CreateFont(void * pFontData, GUI_FONT * pFont, const GUI_SIF_TYPE * pFontType) {
000112  b5f8              PUSH     {r3-r7,lr}
000114  4606              MOV      r6,r0
000116  460c              MOV      r4,r1
000118  4615              MOV      r5,r2
;;;121      const U8 * pSrc = (const U8 *)pFontData;
00011a  9600              STR      r6,[sp,#0]
;;;122      U32 ID;
;;;123      /* Set pFontData of GUI_FONT structure to the first byte */
;;;124      pFont->p.pFontData = pFontData;
00011c  61a6              STR      r6,[r4,#0x18]
;;;125      /* Check ID */
;;;126      ID = GUI__Read32(&pSrc);
00011e  4668              MOV      r0,sp
000120  f7fffffe          BL       GUI__Read32
000124  4607              MOV      r7,r0
;;;127      if (ID != 0x50495547) { /* 'GUIP' */
000126  4818              LDR      r0,|L1.392|
000128  4287              CMP      r7,r0
00012a  d000              BEQ      |L1.302|
                  |L1.300|
;;;128        GUI_DEBUG_ERROROUT("ID of downloaded font wrong!");
;;;129        return;
;;;130      }
;;;131      /* Read properties of the font */
;;;132      pFont->YSize    = GUI__Read16(&pSrc);
;;;133      pFont->YDist    = GUI__Read16(&pSrc);
;;;134      pFont->Baseline = GUI__Read16(&pSrc);
;;;135      pFont->LHeight  = GUI__Read16(&pSrc);
;;;136      pFont->CHeight  = GUI__Read16(&pSrc);
;;;137      /* Magnification is always 1 */
;;;138      pFont->XMag = 1;
;;;139      pFont->YMag = 1;
;;;140      /* Set function pointers */
;;;141      pFont->pfDispChar     = pFontType->pDispChar;
;;;142      pFont->pfGetCharDistX = pFontType->pGetCharDistX;
;;;143      pFont->pfGetFontInfo  = pFontType->pGetFontInfo;
;;;144      pFont->pfIsInFont     = pFontType->pIsInFont;
;;;145      pFont->pafEncode      = 0;
;;;146      /* Use the new font */
;;;147      GUI_SetFont(pFont);
;;;148    }
00012c  bdf8              POP      {r3-r7,pc}
                  |L1.302|
00012e  4668              MOV      r0,sp                 ;132
000130  f7fffffe          BL       GUI__Read16
000134  7520              STRB     r0,[r4,#0x14]         ;132
000136  4668              MOV      r0,sp                 ;133
000138  f7fffffe          BL       GUI__Read16
00013c  7560              STRB     r0,[r4,#0x15]         ;133
00013e  4668              MOV      r0,sp                 ;134
000140  f7fffffe          BL       GUI__Read16
000144  7720              STRB     r0,[r4,#0x1c]         ;134
000146  4668              MOV      r0,sp                 ;135
000148  f7fffffe          BL       GUI__Read16
00014c  7760              STRB     r0,[r4,#0x1d]         ;135
00014e  4668              MOV      r0,sp                 ;136
000150  f7fffffe          BL       GUI__Read16
000154  77a0              STRB     r0,[r4,#0x1e]         ;136
000156  f04f0001          MOV      r0,#1                 ;138
00015a  75a0              STRB     r0,[r4,#0x16]         ;138
00015c  75e0              STRB     r0,[r4,#0x17]         ;139
00015e  6828              LDR      r0,[r5,#0]            ;141
000160  6020              STR      r0,[r4,#0]            ;141
000162  6868              LDR      r0,[r5,#4]            ;142
000164  6060              STR      r0,[r4,#4]            ;142
000166  68a8              LDR      r0,[r5,#8]            ;143
000168  60a0              STR      r0,[r4,#8]            ;143
00016a  68e8              LDR      r0,[r5,#0xc]          ;144
00016c  60e0              STR      r0,[r4,#0xc]          ;144
00016e  f04f0000          MOV      r0,#0                 ;145
000172  6120              STR      r0,[r4,#0x10]         ;145
000174  4620              MOV      r0,r4                 ;147
000176  f7fffffe          BL       GUI_SetFont
00017a  bf00              NOP      
00017c  e7d6              B        |L1.300|
;;;149    
                          ENDP

                  GUI_SIF_DeleteFont PROC
;;;153    */
;;;154    void GUI_SIF_DeleteFont(GUI_FONT * pFont) {
00017e  bf00              NOP      
;;;155      GUI_USE_PARA(pFont);
;;;156    }
000180  4770              BX       lr
;;;157    	 	 			 		    	 				 	  			   	 	 	 	 	 	  	  	      	   		 	 	 		  		  	 		 	  	  			     			       	   	 			  		    	 	     	 				  	 					 	 			   	  	  			 				 		 	 	 			     			 
                          ENDP

000182  0000              DCW      0x0000
                  |L1.388|
                          DCD      GUI_Context
                  |L1.392|
                          DCD      0x50495547

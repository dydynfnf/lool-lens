; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\lcdconf_flexcolor_template.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\lcdconf_flexcolor_template.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\FWlib\inc -I.\user -I.\CM3 -I.\MALLOC -I.\TFT -I.\STEMWIN\STEMWIN_Config -I.\STEMWIN\STEMWIN_INC -IC:\Users\Administrator\Desktop\gui\STM32·Ü¶·°å-stemwin\RTE -Id:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.1.0\Device\Include -Id:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=515 -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\lcdconf_flexcolor_template.crf STEMWIN\STEMWIN_Config\LCDConf_FlexColor_Template.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  LCD_X_Config PROC
;;;164    */
;;;165    void LCD_X_Config(void) {
000000  b510              PUSH     {r4,lr}
000002  b0a0              SUB      sp,sp,#0x80
;;;166      GUI_DEVICE * pDevice;
;;;167      CONFIG_FLEXCOLOR Config = {0};
000004  2114              MOVS     r1,#0x14
000006  a81b              ADD      r0,sp,#0x6c
000008  f7fffffe          BL       __aeabi_memclr4
;;;168      GUI_PORT_API PortAPI = {0};
00000c  2168              MOVS     r1,#0x68
00000e  a801              ADD      r0,sp,#4
000010  f7fffffe          BL       __aeabi_memclr4
;;;169      //
;;;170      // Set display driver and color conversion
;;;171      //
;;;172      pDevice = GUI_DEVICE_CreateAndLink(&GUIDRV_Template_API, GUICC_565, 0, 0);
000014  2300              MOVS     r3,#0
000016  461a              MOV      r2,r3
000018  4915              LDR      r1,|L1.112|
00001a  4816              LDR      r0,|L1.116|
00001c  f7fffffe          BL       GUI_DEVICE_CreateAndLink
000020  4604              MOV      r4,r0
;;;173      //
;;;174      // Display driver configuration, required for Lin-driver
;;;175      //
;;;176      LCD_SetSizeEx (0, XSIZE_PHYS , YSIZE_PHYS);
000022  f44f72a0          MOV      r2,#0x140
000026  21f0              MOVS     r1,#0xf0
000028  2000              MOVS     r0,#0
00002a  f7fffffe          BL       LCD_SetSizeEx
;;;177      LCD_SetVSizeEx(0, VXSIZE_PHYS, VYSIZE_PHYS);
00002e  f44f72a0          MOV      r2,#0x140
000032  21f0              MOVS     r1,#0xf0
000034  2000              MOVS     r0,#0
000036  f7fffffe          BL       LCD_SetVSizeEx
;;;178      //
;;;179      // Orientation
;;;180      //
;;;181      Config.Orientation = GUI_SWAP_XY | GUI_MIRROR_Y;
00003a  2006              MOVS     r0,#6
00003c  901d              STR      r0,[sp,#0x74]
;;;182      GUIDRV_FlexColor_Config(pDevice, &Config);
00003e  a91b              ADD      r1,sp,#0x6c
000040  4620              MOV      r0,r4
000042  f7fffffe          BL       GUIDRV_FlexColor_Config
;;;183      //
;;;184      // Set controller and operation mode
;;;185      //
;;;186    //  PortAPI.pfWrite16_A0  = LcdWriteReg;
;;;187    //  PortAPI.pfWrite16_A1  = LcdWriteData;
;;;188    //  PortAPI.pfWriteM16_A1 = LcdWriteDataMultiple;
;;;189    //  PortAPI.pfReadM16_A1  = LcdReadDataMultiple;
;;;190    //  GUIDRV_FlexColor_SetFunc(pDevice, &PortAPI, GUIDRV_FLEXCOLOR_F66708, GUIDRV_FLEXCOLOR_M16C0B16);
;;;191    }
000046  b020              ADD      sp,sp,#0x80
000048  bd10              POP      {r4,pc}
;;;192    
                          ENDP

                  LCD_X_DisplayDriver PROC
;;;213    */
;;;214    int LCD_X_DisplayDriver(unsigned LayerIndex, unsigned Cmd, void * pData) {
00004a  e92d41f0          PUSH     {r4-r8,lr}
00004e  4606              MOV      r6,r0
000050  460c              MOV      r4,r1
000052  4617              MOV      r7,r2
;;;215      int r;
;;;216      (void) LayerIndex;
;;;217      (void) pData;
;;;218      
;;;219      switch (Cmd) {
000054  2c01              CMP      r4,#1
000056  d104              BNE      |L1.98|
;;;220      case LCD_X_INITCONTROLLER: {
;;;221        //
;;;222        // Called during the initialization process in order to set up the
;;;223        // display controller and put it into operation. If the display
;;;224        // controller is not initialized by any external routine this needs
;;;225        // to be adapted by the customer...
;;;226        //
;;;227        // ...
;;;228    	
;;;229    	  LCD_init();
000058  f7fffffe          BL       LCD_init
;;;230    	  
;;;231        return 0;
00005c  2000              MOVS     r0,#0
                  |L1.94|
;;;232      }
;;;233      default:
;;;234        r = -1;
;;;235      }
;;;236      return r;
;;;237    }
00005e  e8bd81f0          POP      {r4-r8,pc}
                  |L1.98|
000062  f04f35ff          MOV      r5,#0xffffffff        ;234
000066  bf00              NOP                            ;219
000068  bf00              NOP                            ;219
00006a  4628              MOV      r0,r5                 ;236
00006c  e7f7              B        |L1.94|
;;;238    
                          ENDP

00006e  0000              DCW      0x0000
                  |L1.112|
                          DCD      LCD_API_ColorConv_565
                  |L1.116|
                          DCD      GUIDRV_Template_API
